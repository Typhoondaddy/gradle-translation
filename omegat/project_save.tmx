<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE tmx SYSTEM "tmx11.dtd">
<tmx version="1.1">
  <header creationtool="OmegaT" o-tmf="OmegaT TMX" adminlang="EN-US" datatype="plaintext" creationtoolversion="OmegaT-4.1.3" segtype="sentence" srclang="EN-US"/>
  <body>
<!-- Default translations -->
    <tu>
      <tuv lang="EN-US">
        <seg>#N100BF</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T072132Z" creationid="95" creationdate="20170723T072132Z">
        <seg>#N100BF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#N101CA</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T030915Z" creationid="95" creationdate="20170729T030915Z">
        <seg>#N101CA</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#N10658</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T051629Z" creationid="huanghaohang" creationdate="20170908T051629Z">
        <seg>#N10658</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#N1067B</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T051837Z" creationid="huanghaohang" creationdate="20170908T051837Z">
        <seg>#N1067B</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#N109D7</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170914T153241Z" creationid="huanghaohang" creationdate="20170914T153241Z">
        <seg>#N109D7</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#N10C0B</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170918T150606Z" creationid="huanghaohang" creationdate="20170918T150606Z">
        <seg>#N10C0B</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#N10EFC</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T045709Z" creationid="huanghaohang" creationdate="20170923T045709Z">
        <seg>#N10EFC</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#N113DF</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T094812Z" creationid="huanghaohang" creationdate="20180105T094812Z">
        <seg>#N113DF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#N12897</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T113425Z" creationid="huanghaohang" creationdate="20180406T113425Z">
        <seg>#N12897</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#N128AD</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T113445Z" creationid="huanghaohang" creationdate="20180406T113445Z">
        <seg>#N128AD</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#ftn.N100BF</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T070853Z" creationid="95" creationdate="20170723T070853Z">
        <seg>#ftn.N100BF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#ftn.N101CA</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T143921Z" creationid="95" creationdate="20170724T143921Z">
        <seg>#ftn.N101CA</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#ftn.N10658</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T050030Z" creationid="huanghaohang" creationdate="20170908T050030Z">
        <seg>#ftn.N10658</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#ftn.N1067B</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T050750Z" creationid="huanghaohang" creationdate="20170908T050750Z">
        <seg>#ftn.N1067B</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#ftn.N109D7</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170912T124612Z" creationid="huanghaohang" creationdate="20170912T124612Z">
        <seg>#ftn.N109D7</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#ftn.N10C0B</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170917T133658Z" creationid="huanghaohang" creationdate="20170917T133658Z">
        <seg>#ftn.N10C0B</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#ftn.N10EFC</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T084844Z" creationid="huanghaohang" creationdate="20170922T084844Z">
        <seg>#ftn.N10EFC</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#ftn.N113DF</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171210T152234Z" creationid="huanghaohang" creationdate="20171210T152234Z">
        <seg>#ftn.N113DF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#ftn.N12897</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180405T155934Z" creationid="huanghaohang" creationdate="20180405T155934Z">
        <seg>#ftn.N12897</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#ftn.N128AD</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T041841Z" creationid="huanghaohang" creationdate="20180406T041841Z">
        <seg>#ftn.N128AD</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#ftn.N12A87</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T121137Z" creationid="huanghaohang" creationdate="20180406T121137Z">
        <seg>#ftn.N12A87</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>*** gradle.manifesto.txt ***
Make the impossible possible, make the possible easy and make the easy elegant.
(inspired by Moshe Feldenkrais)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170728T153833Z" creationid="95" creationdate="20170728T153833Z">
        <seg>*** gradle.manifesto.txt ***
Make the impossible possible, make the possible easy and make the easy elegant.
(inspired by Moshe Feldenkrais)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>-</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180205T140633Z" creationid="huanghaohang" creationdate="20180205T140633Z">
        <seg>-</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.Project.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170912T124806Z" creationid="huanghaohang" creationdate="20170912T124806Z">
        <seg>../dsl/org.gradle.api.Project.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:apply(java.util.Map)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180130T092814Z" creationid="huanghaohang" creationdate="20180130T092814Z">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:apply(java.util.Map)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:configurations(groovy.lang.Closure)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T051255Z" creationid="huanghaohang" creationdate="20170908T051255Z">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:configurations(groovy.lang.Closure)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:copy(groovy.lang.Closure)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171015T075126Z" creationid="huanghaohang" creationdate="20171015T075126Z">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:copy(groovy.lang.Closure)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:copySpec(groovy.lang.Closure)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233403Z" creationid="huanghaohang" creationdate="20171206T233403Z">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:copySpec(groovy.lang.Closure)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:dependencies(groovy.lang.Closure)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T051302Z" creationid="huanghaohang" creationdate="20170908T051302Z">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:dependencies(groovy.lang.Closure)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:file(java.lang.Object)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T124852Z" creationid="huanghaohang" creationdate="20170923T124852Z">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:file(java.lang.Object)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:fileTree(java.util.Map)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171002T023049Z" creationid="huanghaohang" creationdate="20171002T023049Z">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:fileTree(java.util.Map)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:files(java.lang.Object[])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T130837Z" creationid="huanghaohang" creationdate="20170923T130837Z">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:files(java.lang.Object[])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:repositories(groovy.lang.Closure)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T051300Z" creationid="huanghaohang" creationdate="20170908T051300Z">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:repositories(groovy.lang.Closure)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:tarTree(java.lang.Object)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171002T133110Z" creationid="huanghaohang" creationdate="20171002T133110Z">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:tarTree(java.lang.Object)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:zipTree(java.lang.Object)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171002T023650Z" creationid="huanghaohang" creationdate="20171002T023650Z">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:zipTree(java.lang.Object)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.Script.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T132337Z" creationid="huanghaohang" creationdate="20170913T132337Z">
        <seg>../dsl/org.gradle.api.Script.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.Task.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T130922Z" creationid="huanghaohang" creationdate="20170919T130922Z">
        <seg>../dsl/org.gradle.api.Task.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.Task.html#org.gradle.api.Task:dependsOn(java.lang.Object[])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T035922Z" creationid="huanghaohang" creationdate="20170922T035922Z">
        <seg>../dsl/org.gradle.api.Task.html#org.gradle.api.Task:dependsOn(java.lang.Object[])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.Task.html#org.gradle.api.Task:finalizedBy(java.lang.Object[])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T044614Z" creationid="huanghaohang" creationdate="20170923T044614Z">
        <seg>../dsl/org.gradle.api.Task.html#org.gradle.api.Task:finalizedBy(java.lang.Object[])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.Task.html#org.gradle.api.Task:mustRunAfter(java.lang.Object[])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T035830Z" creationid="huanghaohang" creationdate="20170922T035830Z">
        <seg>../dsl/org.gradle.api.Task.html#org.gradle.api.Task:mustRunAfter(java.lang.Object[])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.invocation.Gradle.html#org.gradle.api.invocation.Gradle:useLogger(java.lang.Object)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180107T025722Z" creationid="huanghaohang" creationdate="20180107T025722Z">
        <seg>../dsl/org.gradle.api.invocation.Gradle.html#org.gradle.api.invocation.Gradle:useLogger(java.lang.Object)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.plugins.BasePluginConvention.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180318T010835Z" creationid="huanghaohang" creationdate="20180318T010835Z">
        <seg>../dsl/org.gradle.api.plugins.BasePluginConvention.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.plugins.ExtraPropertiesExtension.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T135211Z" creationid="huanghaohang" creationdate="20170913T135211Z">
        <seg>../dsl/org.gradle.api.plugins.ExtraPropertiesExtension.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.plugins.JavaPluginConvention.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180318T010834Z" creationid="huanghaohang" creationdate="20180318T010834Z">
        <seg>../dsl/org.gradle.api.plugins.JavaPluginConvention.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.Copy.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T122243Z" creationid="huanghaohang" creationdate="20170919T122243Z">
        <seg>../dsl/org.gradle.api.tasks.Copy.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.Delete.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180312T063410Z" creationid="haohang" creationdate="20180312T063410Z">
        <seg>../dsl/org.gradle.api.tasks.Delete.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.GroovySourceSet.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T234948Z" creationid="huanghaohang" creationdate="20180406T234948Z">
        <seg>../dsl/org.gradle.api.tasks.GroovySourceSet.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.SourceSet.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180130T081459Z" creationid="huanghaohang" creationdate="20180130T081459Z">
        <seg>../dsl/org.gradle.api.tasks.SourceSet.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.SourceSetOutput.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180320T095102Z" creationid="haohang" creationdate="20180320T095102Z">
        <seg>../dsl/org.gradle.api.tasks.SourceSetOutput.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.Sync.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T060933Z" creationid="huanghaohang" creationdate="20171126T060933Z">
        <seg>../dsl/org.gradle.api.tasks.Sync.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.Upload.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180312T063224Z" creationid="haohang" creationdate="20180312T063224Z">
        <seg>../dsl/org.gradle.api.tasks.Upload.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.bundling.AbstractArchiveTask.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180218T022957Z" creationid="huanghaohang" creationdate="20180218T022957Z">
        <seg>../dsl/org.gradle.api.tasks.bundling.AbstractArchiveTask.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.bundling.Jar.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T125230Z" creationid="huanghaohang" creationdate="20171126T125230Z">
        <seg>../dsl/org.gradle.api.tasks.bundling.Jar.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.bundling.Tar.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T125229Z" creationid="huanghaohang" creationdate="20171126T125229Z">
        <seg>../dsl/org.gradle.api.tasks.bundling.Tar.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.bundling.War.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T125231Z" creationid="huanghaohang" creationdate="20171126T125231Z">
        <seg>../dsl/org.gradle.api.tasks.bundling.War.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.bundling.Zip.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T125228Z" creationid="huanghaohang" creationdate="20171126T125228Z">
        <seg>../dsl/org.gradle.api.tasks.bundling.Zip.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.compile.GroovyCompile.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T120746Z" creationid="huanghaohang" creationdate="20180406T120746Z">
        <seg>../dsl/org.gradle.api.tasks.compile.GroovyCompile.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.compile.JavaCompile.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171002T133540Z" creationid="huanghaohang" creationdate="20171002T133540Z">
        <seg>../dsl/org.gradle.api.tasks.compile.JavaCompile.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.diagnostics.DependencyInsightReportTask.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T022204Z" creationid="huanghaohang" creationdate="20170910T022204Z">
        <seg>../dsl/org.gradle.api.tasks.diagnostics.DependencyInsightReportTask.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.javadoc.Groovydoc.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T120914Z" creationid="huanghaohang" creationdate="20180406T120914Z">
        <seg>../dsl/org.gradle.api.tasks.javadoc.Groovydoc.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.javadoc.Javadoc.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180312T062933Z" creationid="haohang" creationdate="20180312T062933Z">
        <seg>../dsl/org.gradle.api.tasks.javadoc.Javadoc.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.testing.Test.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T132800Z" creationid="95" creationdate="20170730T132800Z">
        <seg>../dsl/org.gradle.api.tasks.testing.Test.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.testing.Test.html#org.gradle.api.tasks.testing.Test:debug</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180330T062049Z" creationid="haohang" creationdate="20180330T062049Z">
        <seg>../dsl/org.gradle.api.tasks.testing.Test.html#org.gradle.api.tasks.testing.Test:debug</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.testing.TestReport.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T042837Z" creationid="huanghaohang" creationdate="20180406T042837Z">
        <seg>../dsl/org.gradle.api.tasks.testing.TestReport.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.testing.logging.TestLoggingContainer.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180330T060843Z" creationid="haohang" creationdate="20180330T060843Z">
        <seg>../dsl/org.gradle.api.tasks.testing.logging.TestLoggingContainer.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.wrapper.Wrapper.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180211T090703Z" creationid="huanghaohang" creationdate="20180211T090703Z">
        <seg>../dsl/org.gradle.api.tasks.wrapper.Wrapper.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.plugins.ear.Ear.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T125232Z" creationid="huanghaohang" creationdate="20171126T125232Z">
        <seg>../dsl/org.gradle.plugins.ear.Ear.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/BuildListener.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180107T144454Z" creationid="huanghaohang" creationdate="20180107T144454Z">
        <seg>../javadoc/org/gradle/BuildListener.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/AntBuilder.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T132301Z" creationid="huanghaohang" creationdate="20170913T132301Z">
        <seg>../javadoc/org/gradle/api/AntBuilder.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/JavaVersion.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180314T094220Z" creationid="haohang" creationdate="20180314T094220Z">
        <seg>../javadoc/org/gradle/api/JavaVersion.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/Plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180130T093409Z" creationid="huanghaohang" creationdate="20180130T093409Z">
        <seg>../javadoc/org/gradle/api/Plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/ProjectEvaluationListener.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180107T144456Z" creationid="huanghaohang" creationdate="20180107T144456Z">
        <seg>../javadoc/org/gradle/api/ProjectEvaluationListener.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/Task.html#shouldRunAfter(java.lang.Object[])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T035919Z" creationid="huanghaohang" creationdate="20170922T035919Z">
        <seg>../javadoc/org/gradle/api/Task.html#shouldRunAfter(java.lang.Object[])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/execution/TaskActionListener.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180107T144500Z" creationid="huanghaohang" creationdate="20180107T144500Z">
        <seg>../javadoc/org/gradle/api/execution/TaskActionListener.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/execution/TaskExecutionGraphListener.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180107T144457Z" creationid="huanghaohang" creationdate="20180107T144457Z">
        <seg>../javadoc/org/gradle/api/execution/TaskExecutionGraphListener.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/execution/TaskExecutionListener.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180107T144459Z" creationid="huanghaohang" creationdate="20180107T144459Z">
        <seg>../javadoc/org/gradle/api/execution/TaskExecutionListener.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/file/CopySpec.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171002T134517Z" creationid="huanghaohang" creationdate="20171002T134517Z">
        <seg>../javadoc/org/gradle/api/file/CopySpec.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/file/CopySpec.html#from(java.lang.Object[])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171002T134518Z" creationid="huanghaohang" creationdate="20171002T134518Z">
        <seg>../javadoc/org/gradle/api/file/CopySpec.html#from(java.lang.Object[])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/file/CopySpec.html#into(java.lang.Object)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171002T134520Z" creationid="huanghaohang" creationdate="20171002T134520Z">
        <seg>../javadoc/org/gradle/api/file/CopySpec.html#into(java.lang.Object)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/file/FileCollection.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T130140Z" creationid="huanghaohang" creationdate="20170923T130140Z">
        <seg>../javadoc/org/gradle/api/file/FileCollection.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/file/FileTree.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T150852Z" creationid="huanghaohang" creationdate="20170927T150852Z">
        <seg>../javadoc/org/gradle/api/file/FileTree.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/file/SourceDirectorySet.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180320T100047Z" creationid="haohang" creationdate="20180320T100047Z">
        <seg>../javadoc/org/gradle/api/file/SourceDirectorySet.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/java/archives/Manifest.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180318T010641Z" creationid="huanghaohang" creationdate="20180318T010641Z">
        <seg>../javadoc/org/gradle/api/java/archives/Manifest.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/java/archives/ManifestMergeDetails.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T112016Z" creationid="huanghaohang" creationdate="20180406T112016Z">
        <seg>../javadoc/org/gradle/api/java/archives/ManifestMergeDetails.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/logging/Logger.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180107T012026Z" creationid="huanghaohang" creationdate="20180107T012026Z">
        <seg>../javadoc/org/gradle/api/logging/Logger.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/logging/LoggingManager.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180107T024825Z" creationid="huanghaohang" creationdate="20180107T024825Z">
        <seg>../javadoc/org/gradle/api/logging/LoggingManager.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/plugins/JavaPlugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180130T092944Z" creationid="huanghaohang" creationdate="20180130T092944Z">
        <seg>../javadoc/org/gradle/api/plugins/JavaPlugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/tasks/SourceSetContainer.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T062346Z" creationid="haohang" creationdate="20180313T062346Z">
        <seg>../javadoc/org/gradle/api/tasks/SourceSetContainer.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/tasks/StopExecutionException.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T084210Z" creationid="huanghaohang" creationdate="20170922T084210Z">
        <seg>../javadoc/org/gradle/api/tasks/StopExecutionException.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/tasks/TaskContainer.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T121139Z" creationid="huanghaohang" creationdate="20170919T121139Z">
        <seg>../javadoc/org/gradle/api/tasks/TaskContainer.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/tasks/TaskInputs.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T003955Z" creationid="huanghaohang" creationdate="20170923T003955Z">
        <seg>../javadoc/org/gradle/api/tasks/TaskInputs.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/tasks/TaskOutputs.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T003956Z" creationid="huanghaohang" creationdate="20170923T003956Z">
        <seg>../javadoc/org/gradle/api/tasks/TaskOutputs.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/tasks/TaskOutputs.html#upToDateWhen(groovy.lang.Closure)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T004314Z" creationid="huanghaohang" creationdate="20170923T004314Z">
        <seg>../javadoc/org/gradle/api/tasks/TaskOutputs.html#upToDateWhen(groovy.lang.Closure)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/tasks/testing/TestFilter.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180405T131644Z" creationid="huanghaohang" creationdate="20180405T131644Z">
        <seg>../javadoc/org/gradle/api/tasks/testing/TestFilter.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/external/javadoc/CoreJavadocOptions.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T095503Z" creationid="haohang" creationdate="20180326T095503Z">
        <seg>../javadoc/org/gradle/external/javadoc/CoreJavadocOptions.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/external/javadoc/StandardJavadocDocletOptions.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T095504Z" creationid="haohang" creationdate="20180326T095504Z">
        <seg>../javadoc/org/gradle/external/javadoc/StandardJavadocDocletOptions.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072430Z" creationid="haohang" creationdate="20170720T072430Z">
        <seg>1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>1.1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072433Z" creationid="haohang" creationdate="20170720T072433Z">
        <seg>1.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>1.1. About this user guide</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T142043Z" creationid="95" creationdate="20170721T142043Z">
        <seg>1.1. 关于本用户指南</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>10.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233810Z" creationid="huanghaohang" creationdate="20171206T233810Z">
        <seg>10.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>10.1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233816Z" creationid="huanghaohang" creationdate="20171206T233816Z">
        <seg>10.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>10.1. Building a WAR file</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T004549Z" creationid="huanghaohang" creationdate="20170909T004549Z">
        <seg>10.1. 构建一个WAR文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>10.2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233829Z" creationid="huanghaohang" creationdate="20171206T233829Z">
        <seg>10.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>10.2. Running your web application</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T005509Z" creationid="huanghaohang" creationdate="20170909T005509Z">
        <seg>10.2. 运行 web 应用程序</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>10.3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233843Z" creationid="huanghaohang" creationdate="20171206T233843Z">
        <seg>10.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>10.3. Summary</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T010145Z" creationid="huanghaohang" creationdate="20170909T010145Z">
        <seg>10.3. 总结</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>11.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233844Z" creationid="huanghaohang" creationdate="20171206T233844Z">
        <seg>11.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>11.1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233850Z" creationid="huanghaohang" creationdate="20171206T233850Z">
        <seg>11.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>11.1. Executing multiple tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T030325Z" creationid="huanghaohang" creationdate="20170909T030325Z">
        <seg>11.1. 执行多个任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>11.2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233858Z" creationid="huanghaohang" creationdate="20171206T233858Z">
        <seg>11.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>11.2. Excluding tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T031707Z" creationid="huanghaohang" creationdate="20170909T031707Z">
        <seg>11.2. 排除任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>11.3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233910Z" creationid="huanghaohang" creationdate="20171206T233910Z">
        <seg>11.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>11.3. Continuing the build when a failure occurs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T073647Z" creationid="huanghaohang" creationdate="20170909T073647Z">
        <seg>11.3. 失败后继续构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>11.4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233921Z" creationid="huanghaohang" creationdate="20171206T233921Z">
        <seg>11.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>11.4. Task name abbreviation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T075114Z" creationid="huanghaohang" creationdate="20170909T075114Z">
        <seg>11.4. 任务名缩写</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>11.5.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233929Z" creationid="huanghaohang" creationdate="20171206T233929Z">
        <seg>11.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>11.5. Selecting which build to execute</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T113358Z" creationid="huanghaohang" creationdate="20170909T113358Z">
        <seg>11.5. 选择执行哪个构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>11.6.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233938Z" creationid="huanghaohang" creationdate="20171206T233938Z">
        <seg>11.6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>11.6.1. Listing projects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T011446Z" creationid="huanghaohang" creationdate="20170910T010925Z">
        <seg>11.6.1. 列出项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>11.6.2. Listing tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T011451Z" creationid="huanghaohang" creationdate="20170910T011436Z">
        <seg>11.6.2. 列出任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>11.6.3. Show task usage details</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T012423Z" creationid="huanghaohang" creationdate="20170910T012334Z">
        <seg>11.6.3. 显示任务帮助信息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>11.6.4. Listing project dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T013110Z" creationid="huanghaohang" creationdate="20170910T013110Z">
        <seg>11.6.4. 列出项目依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>11.6.5. Getting the insight into a particular dependency</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T021957Z" creationid="huanghaohang" creationdate="20170910T021706Z">
        <seg>11.6.5. 查看特定的依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>11.6.6. Listing project properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T023255Z" creationid="huanghaohang" creationdate="20170910T023255Z">
        <seg>11.6.6. 列出项目属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>11.6.7. Profiling a build</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T023503Z" creationid="huanghaohang" creationdate="20170910T023503Z">
        <seg>11.6.7. 分析构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>11.6. Obtaining information about your build</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T114322Z" creationid="huanghaohang" creationdate="20170909T114322Z">
        <seg>11.6. 获取构建的相关信息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>11.7.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233947Z" creationid="huanghaohang" creationdate="20171206T233947Z">
        <seg>11.7.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>11.7. Dry Run</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T031426Z" creationid="huanghaohang" creationdate="20170910T031426Z">
        <seg>11.7. 演练</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>11.8.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233955Z" creationid="huanghaohang" creationdate="20171206T233955Z">
        <seg>11.8.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>11.8. Summary</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T031753Z" creationid="huanghaohang" creationdate="20170910T031753Z">
        <seg>11.8. 总结</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>12.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T234002Z" creationid="huanghaohang" creationdate="20171206T234002Z">
        <seg>12.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>12.1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T234010Z" creationid="huanghaohang" creationdate="20171206T234010Z">
        <seg>12.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>12.1. Task Tree</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170911T143746Z" creationid="huanghaohang" creationdate="20170911T143746Z">
        <seg>12.1. 任务树</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>12.2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T234021Z" creationid="huanghaohang" creationdate="20171206T234021Z">
        <seg>12.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>12.2. Favorites</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170911T144553Z" creationid="huanghaohang" creationdate="20170911T144553Z">
        <seg>12.2. 收藏夹</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>12.3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T234027Z" creationid="huanghaohang" creationdate="20171206T234027Z">
        <seg>12.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>12.3. Command Line</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170911T145614Z" creationid="huanghaohang" creationdate="20170911T145614Z">
        <seg>12.3. 命令行</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>12.4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T234032Z" creationid="huanghaohang" creationdate="20171206T234032Z">
        <seg>12.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>12.4. Setup</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170911T145834Z" creationid="huanghaohang" creationdate="20170911T145834Z">
        <seg>12.4. 设置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>13.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T032744Z" creationid="huanghaohang" creationdate="20180131T032744Z">
        <seg>13.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>13.1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T032749Z" creationid="huanghaohang" creationdate="20180131T032749Z">
        <seg>13.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>13.1. The Gradle build language</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170912T124212Z" creationid="huanghaohang" creationdate="20170912T124212Z">
        <seg>13.1. Gradle 构建语言</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>13.2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T032758Z" creationid="huanghaohang" creationdate="20180131T032758Z">
        <seg>13.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>13.2.1. Standard project properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T131959Z" creationid="huanghaohang" creationdate="20170913T131959Z">
        <seg>13.2.1. 标准project属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>13.2. The Project API</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170912T124804Z" creationid="huanghaohang" creationdate="20170912T124804Z">
        <seg>13.2. Project API</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>13.3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T032805Z" creationid="huanghaohang" creationdate="20180131T032805Z">
        <seg>13.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>13.3. The Script API</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T132335Z" creationid="huanghaohang" creationdate="20170913T132335Z">
        <seg>13.3.  Script API</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>13.4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T032833Z" creationid="huanghaohang" creationdate="20180131T032833Z">
        <seg>13.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>13.4.1. Local variables</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T132631Z" creationid="huanghaohang" creationdate="20170913T132631Z">
        <seg>13.4.1. 局部变量</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>13.4.2. Extra properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T133013Z" creationid="huanghaohang" creationdate="20170913T133013Z">
        <seg>13.4.2. 额外属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>13.4. Declaring variables</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T132530Z" creationid="huanghaohang" creationdate="20170913T132530Z">
        <seg>13.4. 声明变量</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>13.5.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T032842Z" creationid="huanghaohang" creationdate="20180131T032842Z">
        <seg>13.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>13.5.1. Groovy JDK</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T135642Z" creationid="huanghaohang" creationdate="20170913T135642Z">
        <seg>13.5.1. Groovy JDK</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>13.5.2. Property accessors</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T135949Z" creationid="huanghaohang" creationdate="20170913T135949Z">
        <seg>13.5.2. 属性访问器</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>13.5.3. Optional parentheses on method calls</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T141322Z" creationid="huanghaohang" creationdate="20170913T141322Z">
        <seg>13.5.3 方法调用上的可选括号</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>13.5.4. List and map literals</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T141532Z" creationid="huanghaohang" creationdate="20170913T141532Z">
        <seg>13.5.4. List 和 Map </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>13.5.5. Closures as the last parameter in a method</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T141720Z" creationid="huanghaohang" creationdate="20170913T141720Z">
        <seg>13.5.5. 作为方法最后一个参数的闭包</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>13.5.6. Closure delegate</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170914T152924Z" creationid="huanghaohang" creationdate="20170914T152924Z">
        <seg>13.5.6. 闭包委托（delegate）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>13.5. Some Groovy basics</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T135520Z" creationid="huanghaohang" creationdate="20170913T135520Z">
        <seg>13.5.一些 Groovy 基础知识</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>14.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T034001Z" creationid="huanghaohang" creationdate="20180131T034001Z">
        <seg>14.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>14.1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T034012Z" creationid="huanghaohang" creationdate="20180131T034012Z">
        <seg>14.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>14.1. Directory creation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170917T131932Z" creationid="huanghaohang" creationdate="20170917T131932Z">
        <seg>14.1. 创建目录</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>14.2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T034019Z" creationid="huanghaohang" creationdate="20180131T034019Z">
        <seg>14.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>14.2.1. Checking for project properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170917T135040Z" creationid="huanghaohang" creationdate="20170917T135040Z">
        <seg>14.2.1.检查项目的属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>14.2. Gradle properties and system properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170917T132419Z" creationid="huanghaohang" creationdate="20170917T132419Z">
        <seg>14.2. Gradle 属性和系统属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>14.3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T034032Z" creationid="huanghaohang" creationdate="20180131T034032Z">
        <seg>14.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>14.3. Configuring the project using an external build script</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170918T145154Z" creationid="huanghaohang" creationdate="20170918T145154Z">
        <seg>14.3. 使用外部构建脚本配置项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>14.4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T034055Z" creationid="huanghaohang" creationdate="20180131T034055Z">
        <seg>14.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>14.4. Configuring arbitrary objects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170918T145356Z" creationid="huanghaohang" creationdate="20170918T145356Z">
        <seg>14.4. 配置任意对象</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>14.5.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T034103Z" creationid="huanghaohang" creationdate="20180131T034103Z">
        <seg>14.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>14.5. Configuring arbitrary objects using an external script</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170918T145831Z" creationid="huanghaohang" creationdate="20170918T145831Z">
        <seg>14.5. 使用外部脚本配置任意对象</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>14.6.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T034112Z" creationid="huanghaohang" creationdate="20180131T034112Z">
        <seg>14.6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>14.6. Caching</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170918T150055Z" creationid="huanghaohang" creationdate="20170918T150055Z">
        <seg>14.6. 缓存</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180201T021637Z" creationid="huanghaohang" creationdate="20180201T021637Z">
        <seg>15.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180201T021642Z" creationid="huanghaohang" creationdate="20180201T021642Z">
        <seg>15.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.1. Defining tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T120439Z" creationid="huanghaohang" creationdate="20170919T120439Z">
        <seg>15.1. 定义任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.10.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180201T021748Z" creationid="huanghaohang" creationdate="20180201T021748Z">
        <seg>15.10.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.10. Task rules</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T011536Z" creationid="huanghaohang" creationdate="20170923T011536Z">
        <seg>15.10. 任务规则</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.11.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180201T021754Z" creationid="huanghaohang" creationdate="20180201T021754Z">
        <seg>15.11.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.11. Finalizer tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T043853Z" creationid="huanghaohang" creationdate="20170923T043853Z">
        <seg>15.11. 析构器任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.12.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180201T021802Z" creationid="huanghaohang" creationdate="20180201T021802Z">
        <seg>15.12.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.12. Summary</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T045201Z" creationid="huanghaohang" creationdate="20170923T045201Z">
        <seg>15.12. 总结</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180201T021648Z" creationid="huanghaohang" creationdate="20180201T021648Z">
        <seg>15.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.2. Locating tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T121404Z" creationid="huanghaohang" creationdate="20170919T121404Z">
        <seg>15.2. 查找任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180201T021655Z" creationid="huanghaohang" creationdate="20180201T021655Z">
        <seg>15.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.3. Configuring tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T122055Z" creationid="huanghaohang" creationdate="20170919T122055Z">
        <seg>15.3. 配置任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180201T021659Z" creationid="huanghaohang" creationdate="20180201T021659Z">
        <seg>15.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.4. Adding dependencies to a task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T124948Z" creationid="huanghaohang" creationdate="20170919T124948Z">
        <seg>15.4. 向任务添加依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.5.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180201T021710Z" creationid="huanghaohang" creationdate="20180201T021710Z">
        <seg>15.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.5. Ordering tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T130933Z" creationid="huanghaohang" creationdate="20170919T130933Z">
        <seg>15.5. 任务排序</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.6.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180201T021715Z" creationid="huanghaohang" creationdate="20180201T021715Z">
        <seg>15.6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.6. Adding a description to a task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T081613Z" creationid="huanghaohang" creationdate="20170922T081613Z">
        <seg>15.6. 向任务添加描述</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.7.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180201T021724Z" creationid="huanghaohang" creationdate="20180201T021724Z">
        <seg>15.7.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.7. Replacing tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T082311Z" creationid="huanghaohang" creationdate="20170922T082311Z">
        <seg>15.7. 替换任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.8.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180201T021731Z" creationid="huanghaohang" creationdate="20180201T021731Z">
        <seg>15.8.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.8.1. Using a predicate</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T083702Z" creationid="huanghaohang" creationdate="20170922T083702Z">
        <seg>15.8.1. 使用断言</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.8.2. Using StopExecutionException</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T084205Z" creationid="huanghaohang" creationdate="20170922T084205Z">
        <seg>15.8.2. 使用 StopExecutionException</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.8.3. Enabling and disabling tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T085202Z" creationid="huanghaohang" creationdate="20170922T085202Z">
        <seg>15.8.3. 启用和禁用任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.8. Skipping tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T083652Z" creationid="huanghaohang" creationdate="20170922T083652Z">
        <seg>15.8. 跳过任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.9.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180201T021737Z" creationid="huanghaohang" creationdate="20180201T021737Z">
        <seg>15.9.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.9.1. Declaring a task's inputs and outputs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T085611Z" creationid="huanghaohang" creationdate="20170922T085611Z">
        <seg>15.9.1. 声明一个任务的输入和输出</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.9.2. How does it work?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T004829Z" creationid="huanghaohang" creationdate="20170923T004829Z">
        <seg>15.9.2. 它是怎么实现的？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.9. Skipping tasks that are up-to-date</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T093742Z" creationid="huanghaohang" creationdate="20170922T085414Z">
        <seg>15.9.  跳过最新的任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>16.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180218T092959Z" creationid="huanghaohang" creationdate="20180218T092959Z">
        <seg>16.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>16.1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180218T093002Z" creationid="huanghaohang" creationdate="20180218T093002Z">
        <seg>16.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>16.1. Locating files</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T125036Z" creationid="huanghaohang" creationdate="20170923T124850Z">
        <seg>16.1. 查找文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>16.2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180218T093014Z" creationid="huanghaohang" creationdate="20180218T093014Z">
        <seg>16.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>16.2. File collections</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T130138Z" creationid="huanghaohang" creationdate="20170923T130138Z">
        <seg>16.2. 文件集合</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>16.3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180218T093021Z" creationid="huanghaohang" creationdate="20180218T093021Z">
        <seg>16.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>16.3. File trees</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T150851Z" creationid="huanghaohang" creationdate="20170927T150851Z">
        <seg>16.3. 文件树</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>16.4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180218T093027Z" creationid="huanghaohang" creationdate="20180218T093027Z">
        <seg>16.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>16.4. Using the contents of an archive as a file tree</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171002T023649Z" creationid="huanghaohang" creationdate="20171002T023649Z">
        <seg>16.4. 使用归档的内容作为文件树</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>16.5.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180218T093042Z" creationid="huanghaohang" creationdate="20180218T093042Z">
        <seg>16.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>16.5. Specifying a set of input files</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171002T133539Z" creationid="huanghaohang" creationdate="20171002T133539Z">
        <seg>16.5. 指定一组输入文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>16.6.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180218T093052Z" creationid="huanghaohang" creationdate="20180218T093052Z">
        <seg>16.6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>16.6.1. Renaming files</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T060224Z" creationid="huanghaohang" creationdate="20171126T060224Z">
        <seg>16.6.1. 重命名文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>16.6.2. Filtering files</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T060303Z" creationid="huanghaohang" creationdate="20171126T060303Z">
        <seg>16.6.2 过滤文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>16.6.3. Using the &lt;c0&gt;CopySpec&lt;/c0&gt; class</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T060352Z" creationid="huanghaohang" creationdate="20171126T060352Z">
        <seg>16.6.3. 使用&lt;c0&gt;CopySpec&lt;/c0&gt;类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>16.6. Copying files</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171002T134320Z" creationid="huanghaohang" creationdate="20171002T134320Z">
        <seg>16.6. 复制文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>16.7.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180218T093058Z" creationid="huanghaohang" creationdate="20180218T093058Z">
        <seg>16.7.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>16.7. Using the &lt;c0&gt;Sync&lt;/c0&gt; task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T060929Z" creationid="huanghaohang" creationdate="20171126T060929Z">
        <seg>16.7. 使用&lt;c0&gt;Sync&lt;/c0&gt;任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>16.8.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180218T093110Z" creationid="huanghaohang" creationdate="20180218T093110Z">
        <seg>16.8.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>16.8.1. Archive naming</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T140629Z" creationid="huanghaohang" creationdate="20171126T140629Z">
        <seg>16.8.1. 归档命名</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>16.8.2. Sharing content between multiple archives</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233336Z" creationid="huanghaohang" creationdate="20171206T233336Z">
        <seg>16.8.2. 共享多个归档之间的内容</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>16.8. Creating archives</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T125205Z" creationid="huanghaohang" creationdate="20171126T125205Z">
        <seg>16.8. 创建归档文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>17.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180314T015148Z" creationid="huanghaohang" creationdate="20180314T015148Z">
        <seg>17.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>17.1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180314T015152Z" creationid="huanghaohang" creationdate="20180314T015152Z">
        <seg>17.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>17.1.1. Using custom Ant tasks in your build</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T083617Z" creationid="huanghaohang" creationdate="20180105T083509Z">
        <seg>17.1.1. 在你的构建中使用自定义 Ant 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>17.1. Using Ant tasks and types in your build</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171213T140906Z" creationid="huanghaohang" creationdate="20171213T140906Z">
        <seg>17.1. 在构建中使用 Ant 任务和类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>17.2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180314T015202Z" creationid="huanghaohang" creationdate="20180314T015202Z">
        <seg>17.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>17.2. Importing an Ant build</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T084337Z" creationid="huanghaohang" creationdate="20180105T084337Z">
        <seg>17.2. 导入 Ant 构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>17.3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180314T015208Z" creationid="huanghaohang" creationdate="20180314T015208Z">
        <seg>17.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>17.3. Ant properties and references</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T084847Z" creationid="huanghaohang" creationdate="20180105T084847Z">
        <seg>17.3. Ant 属性和引用</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>17.4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180314T015215Z" creationid="huanghaohang" creationdate="20180314T015215Z">
        <seg>17.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>17.4. API</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T094743Z" creationid="huanghaohang" creationdate="20180105T094743Z">
        <seg>17.4. API</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>18.1. Choosing a log level</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T221558Z" creationid="huanghaohang" creationdate="20180105T221558Z">
        <seg>18.1. 选择一个日志级别</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>18.2. Writing your own log messages</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180107T011712Z" creationid="huanghaohang" creationdate="20180107T011712Z">
        <seg>18.2. 编写自己的日志消息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>18.3. Logging from external tools and libraries</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180107T024402Z" creationid="huanghaohang" creationdate="20180107T024402Z">
        <seg>18.3. 使用外部的工具和类库来写日志</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>18.4. Changing what Gradle logs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180107T025717Z" creationid="huanghaohang" creationdate="20180107T025717Z">
        <seg>18.4. 更改 Gradle 日志</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>19.1. Enter the daemon</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180108T133238Z" creationid="huanghaohang" creationdate="20180108T133238Z">
        <seg>19.1. 走进守护进程</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>19.2. Reusing and expiration of daemons</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180109T142312Z" creationid="huanghaohang" creationdate="20180109T142216Z">
        <seg>19.2. 守护进程的重用和过期</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>19.3. Usage and troubleshooting</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180116T143807Z" creationid="huanghaohang" creationdate="20180116T143807Z">
        <seg>19.3. 用法和故障排除</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>19.4. Configuring the daemon</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180120T025707Z" creationid="huanghaohang" creationdate="20180120T025707Z">
        <seg>19.4. 配置守护进程</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072442Z" creationid="haohang" creationdate="20170720T072442Z">
        <seg>2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>2.1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072445Z" creationid="haohang" creationdate="20170720T072445Z">
        <seg>2.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>2.1. Features</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T165942Z" creationid="95" creationdate="20170721T165942Z">
        <seg>2.1. 特性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>2.2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072450Z" creationid="haohang" creationdate="20170720T072450Z">
        <seg>2.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>2.2. Why Groovy?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T065618Z" creationid="95" creationdate="20170723T065618Z">
        <seg>2.2. 为什么使用 Groovy？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>20.1.1. Forked java processes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180126T020557Z" creationid="huanghaohang" creationdate="20180126T020557Z">
        <seg>20.1.1. Forked java 进程</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>20.1. Configuring the build environment via gradle.properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180123T123641Z" creationid="huanghaohang" creationdate="20180123T123641Z">
        <seg>20.1. 通过 gradle.properties 配置构建环境</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>20.2.1. NTLM Authentication</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180130T080556Z" creationid="huanghaohang" creationdate="20180130T080556Z">
        <seg>20.2.1. NTLM 身份验证</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>20.2. Accessing the web via a proxy</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180130T073251Z" creationid="huanghaohang" creationdate="20180130T073147Z">
        <seg>20.2. 通过代理访问网络</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>21.1. Applying plugins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180130T092812Z" creationid="huanghaohang" creationdate="20180130T092812Z">
        <seg>21.1. 应用插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>21.2. What plugins do</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180130T095816Z" creationid="huanghaohang" creationdate="20180130T095816Z">
        <seg>21.2. 插件都做了什么</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>21.3. Conventions</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180130T100522Z" creationid="huanghaohang" creationdate="20180130T100522Z">
        <seg>21.3. 约定</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>21.4. More on plugins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T032607Z" creationid="huanghaohang" creationdate="20180131T032607Z">
        <seg>21.4. 更多关于插件的内容</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>22.1. Language plugins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180205T140505Z" creationid="huanghaohang" creationdate="20180205T140505Z">
        <seg>22.1. 语言插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>22.2. Incubating language plugins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180205T141343Z" creationid="huanghaohang" creationdate="20180205T141343Z">
        <seg>22.2. 试验性的语言插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>22.3. Integration plugins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180205T143147Z" creationid="huanghaohang" creationdate="20180205T143147Z">
        <seg>22.3. 集成插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>22.4. Incubating integration plugins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180207T143714Z" creationid="huanghaohang" creationdate="20180207T143714Z">
        <seg>22.4. 试验性的集成插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>22.5. Software development plugins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180207T144024Z" creationid="huanghaohang" creationdate="20180207T144024Z">
        <seg>22.5. 软件开发插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>22.6. Incubating software development plugins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180211T090146Z" creationid="huanghaohang" creationdate="20180211T090146Z">
        <seg>22.6. 试验性的软件开发插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>22.7. Base plugins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180211T090807Z" creationid="huanghaohang" creationdate="20180211T090807Z">
        <seg>22.7. 基本插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>22.8. Third party plugins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180218T092856Z" creationid="huanghaohang" creationdate="20180218T092856Z">
        <seg>22.8. 第三方插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.1. Usage</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180218T153410Z" creationid="huanghaohang" creationdate="20180218T153410Z">
        <seg>23.1. 用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.10. Resources</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T100639Z" creationid="haohang" creationdate="20180326T100639Z">
        <seg>23.10. Resources</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.11. CompileJava</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T101409Z" creationid="haohang" creationdate="20180326T101409Z">
        <seg>23.11. CompileJava</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.12.1. Test execution</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180327T102729Z" creationid="haohang" creationdate="20180327T102729Z">
        <seg>23.12.1. 测试执行</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.12.2. Debugging</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180330T062048Z" creationid="haohang" creationdate="20180330T062048Z">
        <seg>23.12.2. 调试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.12.3. Test filtering</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180330T062433Z" creationid="haohang" creationdate="20180330T062433Z">
        <seg>23.12.3. 测试过滤</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.12.4. Single test execution via System Properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180405T131800Z" creationid="huanghaohang" creationdate="20180405T131800Z">
        <seg>23.12.4. 通过系统属性执行单个测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.12.5. Test detection</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180405T142934Z" creationid="huanghaohang" creationdate="20180405T142934Z">
        <seg>23.12.5. 测试检测</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.12.6. Test grouping</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180405T155900Z" creationid="huanghaohang" creationdate="20180405T155900Z">
        <seg>23.12.6. 测试分组</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.12.7.1. TestNG parameterized methods and reporting</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T055609Z" creationid="huanghaohang" creationdate="20180406T055609Z">
        <seg>23.12.7.1. TestNG 参数化方法和报告</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.12.7. Test reporting</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T042054Z" creationid="huanghaohang" creationdate="20180406T042054Z">
        <seg>23.12.7. 测试报告</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.12.8. Convention values</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T104623Z" creationid="huanghaohang" creationdate="20180406T104623Z">
        <seg>23.12.8. 约定值</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.12. Test</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180327T102522Z" creationid="haohang" creationdate="20180327T102522Z">
        <seg>23.12. Test</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.13.1. Manifest</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T111236Z" creationid="huanghaohang" creationdate="20180406T111236Z">
        <seg>23.13.1. Manifest</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.13. Jar</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T104637Z" creationid="huanghaohang" creationdate="20180406T104637Z">
        <seg>23.13. Jar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.14. Uploading</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T113351Z" creationid="huanghaohang" creationdate="20180406T113351Z">
        <seg>23.14. 上传</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.2. Source sets</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180218T153447Z" creationid="huanghaohang" creationdate="20180218T153447Z">
        <seg>23.2 源集</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.3. Tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180312T061255Z" creationid="haohang" creationdate="20180312T061255Z">
        <seg>23.3. 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.4.1. Changing the project layout</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T053035Z" creationid="haohang" creationdate="20180313T053035Z">
        <seg>23.4.1. 更改项目布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.4. Project layout</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T052630Z" creationid="haohang" creationdate="20180313T052630Z">
        <seg>23.4. 项目布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.5. Dependency management</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T053350Z" creationid="haohang" creationdate="20180313T053350Z">
        <seg>23.5. 依赖管理</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.6. Convention properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T054457Z" creationid="haohang" creationdate="20180313T054457Z">
        <seg>23.6. 约定属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.7.1. Source set properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180320T094930Z" creationid="haohang" creationdate="20180320T094930Z">
        <seg>23.7.1. 源集属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.7.2. Defining new source sets</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T094528Z" creationid="haohang" creationdate="20180326T094528Z">
        <seg>23.7.2. 定义新的源集</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.7.3. Some source set examples</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T095243Z" creationid="haohang" creationdate="20180326T095243Z">
        <seg>23.7.3. 一些源集的范例</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.7. Working with source sets</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180318T010952Z" creationid="huanghaohang" creationdate="20180318T010952Z">
        <seg>23.7. 使用源集</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.8. Javadoc</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T095500Z" creationid="haohang" creationdate="20180326T095500Z">
        <seg>23.8. Javadoc</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.9. Clean</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T100509Z" creationid="haohang" creationdate="20180326T100509Z">
        <seg>23.9. Clean</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>24.1. Usage</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T120712Z" creationid="huanghaohang" creationdate="20180406T120652Z">
        <seg>24.1. 用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>24.2. Tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T120718Z" creationid="huanghaohang" creationdate="20180406T120708Z">
        <seg>24.2. 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>24.3.1. Changing the project layout</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T121827Z" creationid="huanghaohang" creationdate="20180406T121827Z">
        <seg>24.3.1. 更改项目布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>24.3. Project layout</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T121126Z" creationid="huanghaohang" creationdate="20180406T121126Z">
        <seg>24.3. 项目布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>24.4. Dependency management</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T122021Z" creationid="huanghaohang" creationdate="20180406T122021Z">
        <seg>24.4. 依赖管理</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>24.5. Automatic configuration of groovyClasspath</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T123349Z" creationid="huanghaohang" creationdate="20180406T123349Z">
        <seg>24.5. groovyClasspath 的自动配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>24.6. Convention properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T132844Z" creationid="huanghaohang" creationdate="20180406T132844Z">
        <seg>24.6. 约定属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>24.7. Source set properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T132927Z" creationid="huanghaohang" creationdate="20180406T132927Z">
        <seg>24.7. 源集属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>24.8. GroovyCompile</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180407T003403Z" creationid="huanghaohang" creationdate="20180407T003403Z">
        <seg>24.8. GroovyCompile</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170801T014533Z" creationid="haohang" creationdate="20170801T014533Z">
        <seg>3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>3.1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170801T014538Z" creationid="haohang" creationdate="20170801T014538Z">
        <seg>3.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>3.1. Getting Started</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170801T014519Z" creationid="95" creationdate="20170723T072518Z">
        <seg>3.1. 入门</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170801T014548Z" creationid="haohang" creationdate="20170801T014548Z">
        <seg>4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>4.1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T013321Z" creationid="huanghaohang" creationdate="20170919T013321Z">
        <seg>4.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>4.1. Prerequisites</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T081223Z" creationid="95" creationdate="20170723T081223Z">
        <seg>4.1. 环境要求</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>4.2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T013331Z" creationid="huanghaohang" creationdate="20170919T013331Z">
        <seg>4.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>4.2. Download</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T114306Z" creationid="95" creationdate="20170723T114306Z">
        <seg>4.2. 下载</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>4.3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T013338Z" creationid="huanghaohang" creationdate="20170919T013338Z">
        <seg>4.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>4.3. Unpacking</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T114407Z" creationid="95" creationdate="20170723T114407Z">
        <seg>4.3. 解压</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>4.4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T013344Z" creationid="huanghaohang" creationdate="20170919T013344Z">
        <seg>4.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>4.4. Environment variables</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T115052Z" creationid="95" creationdate="20170723T115052Z">
        <seg>4.4. 环境变量</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>4.5.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T013350Z" creationid="huanghaohang" creationdate="20170919T013350Z">
        <seg>4.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>4.5. Running and testing your installation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T115236Z" creationid="95" creationdate="20170723T115236Z">
        <seg>4.5. 运行和测试您的安装</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>4.6.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T013400Z" creationid="huanghaohang" creationdate="20170919T013400Z">
        <seg>4.6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>4.6. JVM options</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T115602Z" creationid="95" creationdate="20170723T115602Z">
        <seg>4.6. JVM 选项</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>4.times { counter -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T132724Z" creationid="95" creationdate="20170727T132724Z">
        <seg>4.times { counter -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>4.times { print &lt;s0&gt;"$it "&lt;/s0&gt; }
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155858Z" creationid="95" creationdate="20170726T155858Z">
        <seg>4.times { print &lt;s0&gt;"$it "&lt;/s0&gt; }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>5.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T013409Z" creationid="huanghaohang" creationdate="20170919T013409Z">
        <seg>5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>5.1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T013423Z" creationid="huanghaohang" creationdate="20170919T013423Z">
        <seg>5.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>5.1. Working through problems</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T121003Z" creationid="95" creationdate="20170723T121003Z">
        <seg>5.1. 解决问题</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>5.2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T013433Z" creationid="huanghaohang" creationdate="20170919T013433Z">
        <seg>5.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>5.2. Getting help</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T121457Z" creationid="95" creationdate="20170723T121457Z">
        <seg>5.2. 获取帮助</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T013442Z" creationid="huanghaohang" creationdate="20170919T013442Z">
        <seg>6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T031738Z" creationid="huanghaohang" creationdate="20170927T031738Z">
        <seg>6.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.1. Projects and tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T122532Z" creationid="95" creationdate="20170723T122532Z">
        <seg>6.1. 项目和任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.10.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T031851Z" creationid="huanghaohang" creationdate="20170927T031851Z">
        <seg>6.10.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.10. Using Ant Tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T142147Z" creationid="95" creationdate="20170727T142147Z">
        <seg>6.10. 使用 Ant 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.11.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T031908Z" creationid="huanghaohang" creationdate="20170927T031908Z">
        <seg>6.11.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.11. Using methods</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170728T154530Z" creationid="95" creationdate="20170728T154530Z">
        <seg>6.11. 使用方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.12.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T031919Z" creationid="huanghaohang" creationdate="20170927T031919Z">
        <seg>6.12.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.12. Default tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T023840Z" creationid="95" creationdate="20170729T023840Z">
        <seg>6.12. 默认任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.13.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T031924Z" creationid="huanghaohang" creationdate="20170927T031924Z">
        <seg>6.13.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.13. Configure by DAG</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T024252Z" creationid="95" creationdate="20170729T024252Z">
        <seg>6.13. 使用 DAG 配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.14.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T032003Z" creationid="huanghaohang" creationdate="20170927T032003Z">
        <seg>6.14.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.14. Where to next?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T030623Z" creationid="95" creationdate="20170729T030623Z">
        <seg>6.14. 下一步目标？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T031750Z" creationid="huanghaohang" creationdate="20170927T031750Z">
        <seg>6.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.2. Hello world</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T143914Z" creationid="95" creationdate="20170724T143914Z">
        <seg>6.2. Hello world</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T031758Z" creationid="huanghaohang" creationdate="20170927T031758Z">
        <seg>6.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.3. A shortcut task definition</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T151714Z" creationid="95" creationdate="20170724T151714Z">
        <seg>6.3. 快速任务定义</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T031804Z" creationid="huanghaohang" creationdate="20170927T031804Z">
        <seg>6.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.4. Build scripts are code</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155605Z" creationid="95" creationdate="20170726T155605Z">
        <seg>6.4. 构建脚本即代码</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.5.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T031815Z" creationid="huanghaohang" creationdate="20170927T031815Z">
        <seg>6.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.5. Task dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155926Z" creationid="95" creationdate="20170726T155926Z">
        <seg>6.5. 任务依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.6.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T031823Z" creationid="huanghaohang" creationdate="20170927T031823Z">
        <seg>6.6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.6. Dynamic tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T132506Z" creationid="95" creationdate="20170727T132506Z">
        <seg>6.6. 动态任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.7.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T031828Z" creationid="huanghaohang" creationdate="20170927T031828Z">
        <seg>6.7.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.7. Manipulating existing tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T132812Z" creationid="95" creationdate="20170727T132812Z">
        <seg>6.7. 操纵现有任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.8.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T031835Z" creationid="huanghaohang" creationdate="20170927T031835Z">
        <seg>6.8.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.8. Shortcut notations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T133636Z" creationid="95" creationdate="20170727T133636Z">
        <seg>6.8. 快捷符号</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.9.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T031843Z" creationid="huanghaohang" creationdate="20170927T031843Z">
        <seg>6.9.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.9. Extra task properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T141631Z" creationid="95" creationdate="20170727T141631Z">
        <seg>6.9. 额外的任务属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>7.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171014T124851Z" creationid="huanghaohang" creationdate="20171014T124851Z">
        <seg>7.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>7.1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171014T124856Z" creationid="huanghaohang" creationdate="20171014T124856Z">
        <seg>7.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>7.1. The Java plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T031248Z" creationid="95" creationdate="20170729T031248Z">
        <seg>7.1. Java 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>7.2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171014T124904Z" creationid="huanghaohang" creationdate="20171014T124904Z">
        <seg>7.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>7.2.1. Building the project</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T013552Z" creationid="95" creationdate="20170730T013552Z">
        <seg>7.2.1. 构建项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>7.2.2. External dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T014724Z" creationid="95" creationdate="20170730T014724Z">
        <seg>7.2.2. 外部依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>7.2.3. customizing the project</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T124812Z" creationid="95" creationdate="20170730T124812Z">
        <seg>7.2.3. 自定义项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>7.2.4. Publishing the JAR file</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T150128Z" creationid="95" creationdate="20170731T150128Z">
        <seg>7.2.4. 发布JAR文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>7.2.5. Creating an Eclipse project</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T153752Z" creationid="95" creationdate="20170731T153752Z">
        <seg>7.2.5. 创建一个Eclipse项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>7.2.6. Summary</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T153944Z" creationid="95" creationdate="20170731T153944Z">
        <seg>7.2.6. 总结</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>7.2. A basic Java project</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T012356Z" creationid="95" creationdate="20170730T012356Z">
        <seg>7.2. 一个基本的 Java 项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>7.3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171014T124914Z" creationid="huanghaohang" creationdate="20171014T124914Z">
        <seg>7.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>7.3.1. Defining a multi-project build</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T123148Z" creationid="95" creationdate="20170803T123148Z">
        <seg>7.3.1. 定义一个多项目构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>7.3.2. Common configuration</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T123812Z" creationid="95" creationdate="20170803T123812Z">
        <seg>7.3.2. 公共配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>7.3.3. Dependencies between projects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T124842Z" creationid="95" creationdate="20170803T124826Z">
        <seg>7.3.3. 项目中的依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>7.3.4. Creating a distribution</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T125652Z" creationid="95" creationdate="20170803T125526Z">
        <seg>7.3.4. 创建分发</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>7.3. Multi-project Java build</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T154344Z" creationid="95" creationdate="20170731T154124Z">
        <seg>7.3. 多项目的Java构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>7.4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171014T124923Z" creationid="huanghaohang" creationdate="20171014T124923Z">
        <seg>7.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>7.4. Where to next?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T125746Z" creationid="95" creationdate="20170803T125725Z">
        <seg>7.4. 下一步目标？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>8.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233614Z" creationid="huanghaohang" creationdate="20171206T233614Z">
        <seg>8.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>8.1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233620Z" creationid="huanghaohang" creationdate="20171206T233620Z">
        <seg>8.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>8.1. What is dependency management?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T130527Z" creationid="95" creationdate="20170803T130527Z">
        <seg>8.1. 什么是依赖管理？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>8.2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233631Z" creationid="huanghaohang" creationdate="20171206T233631Z">
        <seg>8.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>8.2. Declaring your dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170907T154905Z" creationid="95" creationdate="20170907T154905Z">
        <seg>8.2. 依赖声明</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>8.3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233651Z" creationid="huanghaohang" creationdate="20171206T233651Z">
        <seg>8.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>8.3. Dependency configurations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T021415Z" creationid="huanghaohang" creationdate="20170908T021415Z">
        <seg>8.3. 依赖配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>8.4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233659Z" creationid="huanghaohang" creationdate="20171206T233659Z">
        <seg>8.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>8.4. External dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T042927Z" creationid="huanghaohang" creationdate="20170908T042927Z">
        <seg>8.4. 外部依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>8.5.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233709Z" creationid="huanghaohang" creationdate="20171206T233709Z">
        <seg>8.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>8.5. Repositories</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T044102Z" creationid="huanghaohang" creationdate="20170908T044102Z">
        <seg>8.5. 仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>8.6.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233732Z" creationid="huanghaohang" creationdate="20171206T233732Z">
        <seg>8.6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>8.6. Publishing artifacts</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T050027Z" creationid="huanghaohang" creationdate="20170908T050027Z">
        <seg>8.6. 发布构件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>8.7.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233742Z" creationid="huanghaohang" creationdate="20171206T233742Z">
        <seg>8.7.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>8.7. Where to next?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T051121Z" creationid="huanghaohang" creationdate="20170908T051121Z">
        <seg>8.7. 下一步目标？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>9.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233743Z" creationid="huanghaohang" creationdate="20171206T233743Z">
        <seg>9.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>9.1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233747Z" creationid="huanghaohang" creationdate="20171206T233747Z">
        <seg>9.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>9.1. A basic Groovy project</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T001602Z" creationid="huanghaohang" creationdate="20170909T001602Z">
        <seg>9.1. 一个基本的Groovy 项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>9.2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233801Z" creationid="huanghaohang" creationdate="20171206T233801Z">
        <seg>9.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>9.2. Summary</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T003019Z" creationid="huanghaohang" creationdate="20170909T003019Z">
        <seg>9.2. 总结</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>:api:libs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T012842Z" creationid="huanghaohang" creationdate="20170910T012842Z">
        <seg>:api:libs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>:webapp:libs

Type</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T012843Z" creationid="huanghaohang" creationdate="20170910T012843Z">
        <seg>:webapp:libs

Type</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;&lt;c1&gt;FileTree&lt;/c1&gt;&lt;/a0&gt; (read-only)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T234851Z" creationid="huanghaohang" creationdate="20180406T234851Z">
        <seg>&lt;a0&gt;&lt;c1&gt;FileTree&lt;/c1&gt;&lt;/a0&gt;（只读）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;&lt;c1&gt;FileTree&lt;/c1&gt;&lt;/a0&gt;. Can set using anything described in &lt;a2&gt;Section 16.5, “Specifying a set of input files”&lt;/a2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T100436Z" creationid="haohang" creationdate="20180326T100436Z">
        <seg>&lt;a0&gt;&lt;c1&gt;FileTree&lt;/c1&gt;&lt;/a0&gt;。可以使用《&lt;a2&gt;第 16.5 节，“指定一组输入文件”&lt;/a2&gt;》中所讲到的任何一种方法来设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;&lt;c1&gt;JavaVersion&lt;/c1&gt;&lt;/a0&gt;. Can also set using a String or Number, e.g. &lt;c2&gt;'1.5'&lt;/c2&gt; or &lt;c3&gt;1.5&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180314T094402Z" creationid="haohang" creationdate="20180314T094402Z">
        <seg>&lt;a0&gt;&lt;c1&gt;JavaVersion&lt;/c1&gt;&lt;/a0&gt;。也可以使用字符串或数字来设置，如 &lt;c2&gt;'1.5'&lt;/c2&gt; 或 &lt;c3&gt;1.5&lt;/c3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;&lt;c1&gt;JavaVersion&lt;/c1&gt;&lt;/a0&gt;. Can also set using a String or a Number, e.g. &lt;c2&gt;'1.5'&lt;/c2&gt; or &lt;c3&gt;1.5&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180314T094302Z" creationid="haohang" creationdate="20180314T094302Z">
        <seg>&lt;a0&gt;&lt;c1&gt;JavaVersion&lt;/c1&gt;&lt;/a0&gt;。也可以使用字符串或数字来设置，如 &lt;c2&gt;'1.5'&lt;/c2&gt; 或 &lt;c3&gt;1.5&lt;/c3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;&lt;c1&gt;SourceDirectorySet&lt;/c1&gt;&lt;/a0&gt; (read-only)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180320T100053Z" creationid="haohang" creationdate="20180320T100053Z">
        <seg>&lt;a0&gt;&lt;c1&gt;SourceDirectorySet&lt;/c1&gt;&lt;/a0&gt; （只读）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;&lt;c1&gt;SourceSetContainer&lt;/c1&gt;&lt;/a0&gt; (read-only)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T062353Z" creationid="haohang" creationdate="20180313T062353Z">
        <seg>&lt;a0&gt;&lt;c1&gt;SourceSetContainer&lt;/c1&gt;&lt;/a0&gt; （只读）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;&lt;c1&gt;SourceSetOutput&lt;/c1&gt;&lt;/a0&gt; (read-only)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180320T095112Z" creationid="haohang" creationdate="20180320T095112Z">
        <seg>&lt;a0&gt;&lt;c1&gt;SourceSetOutput&lt;/c1&gt;&lt;/a0&gt; （只读）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;Previous&lt;/a0&gt;&lt;s1&gt;|&lt;/s1&gt;&lt;a2&gt;Contents&lt;/a2&gt;&lt;s3&gt;|&lt;/s3&gt;&lt;a4&gt;Next&lt;/a4&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072520Z" creationid="haohang" creationdate="20170720T072520Z">
        <seg>&lt;a0&gt;上一章&lt;/a0&gt;&lt;s1&gt;|&lt;/s1&gt;&lt;a2&gt;目录&lt;/a2&gt;&lt;s3&gt;|&lt;/s3&gt;&lt;a4&gt;下一章&lt;/a4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;-S&lt;/c0&gt; or &lt;c1&gt;--full-stacktrace&lt;/c1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180107T011659Z" creationid="huanghaohang" creationdate="20180107T011659Z">
        <seg>&lt;c0&gt;-S&lt;/c0&gt; or &lt;c1&gt;--full-stacktrace&lt;/c1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;-d&lt;/c0&gt; or &lt;c1&gt;--debug&lt;/c1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T221923Z" creationid="huanghaohang" creationdate="20180105T221923Z">
        <seg>&lt;c0&gt;-d&lt;/c0&gt; or &lt;c1&gt;--debug&lt;/c1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;-i&lt;/c0&gt; or &lt;c1&gt;--info&lt;/c1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T221921Z" creationid="huanghaohang" creationdate="20180105T221921Z">
        <seg>&lt;c0&gt;-i&lt;/c0&gt; or &lt;c1&gt;--info&lt;/c1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;-q&lt;/c0&gt; or &lt;c1&gt;--quiet&lt;/c1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T221918Z" creationid="huanghaohang" creationdate="20180105T221918Z">
        <seg>&lt;c0&gt;-q&lt;/c0&gt; or &lt;c1&gt;--quiet&lt;/c1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;-s&lt;/c0&gt; or &lt;c1&gt;--stacktrace&lt;/c1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T222351Z" creationid="huanghaohang" creationdate="20180105T222351Z">
        <seg>&lt;c0&gt;-s&lt;/c0&gt; or &lt;c1&gt;--stacktrace&lt;/c1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;File&lt;/c0&gt; (read-only)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T061236Z" creationid="haohang" creationdate="20180313T061236Z">
        <seg>&lt;c0&gt;File&lt;/c0&gt; （只读）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;File&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180327T101701Z" creationid="haohang" creationdate="20180327T101701Z">
        <seg>&lt;c0&gt;File&lt;/c0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;File&lt;/c0&gt;. Can set using anything described in &lt;a1&gt;Section 16.1, “Locating files”&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T101403Z" creationid="haohang" creationdate="20180326T101403Z">
        <seg>&lt;c0&gt;File&lt;/c0&gt;。可以使用《&lt;a1&gt;第 16.1 节，“查找文件”&lt;/a1&gt;》中所述的任何设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;GroovyCompile&lt;/c0&gt; and &lt;c1&gt;Groovydoc&lt;/c1&gt; tasks consume Groovy in two ways: on their &lt;c2&gt;classpath&lt;/c2&gt;, and on their &lt;c3&gt;groovyClasspath&lt;/c3&gt;. The former is used to locate classes referenced by the source code, and will typically contain the Groovy library along with other libraries. The latter is used to load and execute the Groovy compiler and Groovydoc tool, respectively, and should only contain the Groovy library and its dependencies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T132339Z" creationid="huanghaohang" creationdate="20180406T123350Z">
        <seg>&lt;c0&gt;GroovyCompile&lt;/c0&gt; 和 &lt;c1&gt;GroovyDoc&lt;/c1&gt; 任务以两种方式使用Groovy：在它们的 &lt;c2&gt;classpath&lt;/c2&gt; 以及它们的 &lt;c3&gt;groovyClasspath&lt;/c3&gt; 上。前者用于查找源代码引用的类，并且通常包含 Groovy 库以及其他库。后者用于分别加载和执行 Groovy 编译器和 Groovydoc 工具，并且应该只包含 Groovy库及其依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;Object&lt;/c0&gt;. Can set using anything described in &lt;a1&gt;Section 16.5, “Specifying a set of input files”&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T101305Z" creationid="haohang" creationdate="20180326T101305Z">
        <seg>&lt;c0&gt;Object&lt;/c0&gt;。可以使用《&lt;a1&gt;第 16.5 节，“指定一组输入文件”&lt;/a1&gt;》中所讲到的任何一种方法来设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;Set&lt;File&gt;&lt;/c0&gt;. Can set using anything described in &lt;a1&gt;Section 16.5, “Specifying a set of input files”&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180320T100859Z" creationid="haohang" creationdate="20180320T100607Z">
        <seg>&lt;c0&gt;Set&lt;File&gt;&lt;/c0&gt;。可以使用《&lt;a1&gt;第 16.5 节，“指定一组输入文件”&lt;/a1&gt;》中所讲到的任何一种方法来设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;String&lt;/c0&gt; (read-only)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180320T095046Z" creationid="haohang" creationdate="20180320T095046Z">
        <seg>&lt;c0&gt;String&lt;/c0&gt; （只读）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;build&lt;/c0&gt; and &lt;c1&gt;build&lt;/c1&gt; tasks in all project lib dependencies of the &lt;c2&gt;testRuntime&lt;/c2&gt; configuration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T035408Z" creationid="haohang" creationdate="20180313T035408Z">
        <seg>&lt;c0&gt;build&lt;/c0&gt; 任务，以及在 &lt;c2&gt;testRuntime&lt;/c2&gt; 配置的所有项目库依赖项的 &lt;c1&gt;build&lt;/c1&gt; 任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;build&lt;/c0&gt; and &lt;c1&gt;build&lt;/c1&gt; tasks in all projects with a project lib dependency on this project in a &lt;c2&gt;testRuntime&lt;/c2&gt; configuration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T035523Z" creationid="haohang" creationdate="20180313T035523Z">
        <seg>&lt;c0&gt;build&lt;/c0&gt; 任务，以及在 &lt;c2&gt;testRuntime&lt;/c2&gt; 配置中对此项目有库依赖的所有项目的 &lt;c1&gt;build&lt;/c1&gt; 任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;check&lt;/c0&gt; and &lt;c1&gt;assemble&lt;/c1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T035041Z" creationid="haohang" creationdate="20180313T035041Z">
        <seg>&lt;c0&gt;check&lt;/c0&gt; 和 &lt;c1&gt;assemble&lt;/c1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;compile&lt;/c0&gt;, &lt;c1&gt;compileTest&lt;/c1&gt;, plus all tasks which produce the test runtime classpath.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180312T063125Z" creationid="haohang" creationdate="20180312T063125Z">
        <seg>&lt;c0&gt;compile&lt;/c0&gt;， &lt;c1&gt;compileTest&lt;/c1&gt;，以及所有产生测试运行时类路径的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;compile&lt;/c0&gt;, plus all tasks which produce the test compile classpath.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180312T062627Z" creationid="haohang" creationdate="20180312T062627Z">
        <seg>&lt;c0&gt;compile&lt;/c0&gt; 任务，以及所有能产生测试编译类路径的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;compile&lt;e1&gt;&lt;c2&gt;SourceSet&lt;/c2&gt;&lt;/e1&gt;&lt;/c0&gt; configuration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180320T095258Z" creationid="haohang" creationdate="20180320T095258Z">
        <seg>&lt;c0&gt;compile&lt;e1&gt;&lt;c2&gt;SourceSet&lt;/c2&gt;&lt;/e1&gt;&lt;/c0&gt; 配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;compile&lt;e1&gt;&lt;c2&gt;SourceSet&lt;/c2&gt;&lt;/e1&gt;Java&lt;/c0&gt; and &lt;c3&gt;process&lt;e4&gt;&lt;c5&gt;SourceSet&lt;/c5&gt;&lt;/e4&gt;Resources&lt;/c3&gt;. Some plugins add additional compilation tasks for the source set.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T033857Z" creationid="haohang" creationdate="20180312T073502Z">
        <seg>&lt;c0&gt;compile&lt;e1&gt;&lt;c2&gt;SourceSet&lt;/c2&gt;&lt;/e1&gt;Java&lt;/c0&gt; 和 &lt;c3&gt;process&lt;e4&gt;&lt;c5&gt;SourceSet&lt;/c5&gt;&lt;/e4&gt;Resources&lt;/c3&gt;。有些插件还为源集添加了其他的编译任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;compileJava&lt;/c0&gt; and &lt;c1&gt;processResources&lt;/c1&gt;. Some plugins add additional compilation tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180312T062448Z" creationid="haohang" creationdate="20180312T062448Z">
        <seg>&lt;c0&gt;compileJava&lt;/c0&gt; 和 &lt;c1&gt;processResources&lt;/c1&gt;。有些插件会添加其他的编译任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;compileTestJava&lt;/c0&gt; and &lt;c1&gt;processTestResources&lt;/c1&gt;. Some plugins add additional test compilation tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180312T062903Z" creationid="haohang" creationdate="20180312T062903Z">
        <seg>&lt;c0&gt;compileTestJava&lt;/c0&gt; 和 &lt;c1&gt;processTestResources&lt;/c1&gt;。有些插件会添加其他的测试编译任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;ear&lt;/c0&gt;, &lt;c1&gt;war&lt;/c1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180210T135854Z" creationid="huanghaohang" creationdate="20180210T135854Z">
        <seg>&lt;c0&gt;ear&lt;/c0&gt;, &lt;c1&gt;war&lt;/c1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;groovy&lt;/c0&gt; configuration if non-empty; Groovy library found on &lt;c1&gt;classpath&lt;/c1&gt; otherwise</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180407T005021Z" creationid="huanghaohang" creationdate="20180407T005021Z">
        <seg>如果 &lt;c0&gt;groovy&lt;/c0&gt; 配置不为空，则为该配置；否则为 &lt;c1&gt;classpath&lt;/c1&gt; 中找到的 Groovy 库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;java&lt;/c0&gt;, &lt;c1&gt;distribution&lt;/c1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180207T143801Z" creationid="huanghaohang" creationdate="20180207T143801Z">
        <seg>&lt;c0&gt;java&lt;/c0&gt;, &lt;c1&gt;distribution&lt;/c1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;java&lt;/c0&gt;, &lt;c1&gt;groovy-base&lt;/c1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180205T140844Z" creationid="huanghaohang" creationdate="20180205T140844Z">
        <seg>&lt;c0&gt;java&lt;/c0&gt;, &lt;c1&gt;groovy-base&lt;/c1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;java&lt;/c0&gt;, &lt;c1&gt;scala-base&lt;/c1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180205T140938Z" creationid="huanghaohang" creationdate="20180205T140938Z">
        <seg>&lt;c0&gt;java&lt;/c0&gt;, &lt;c1&gt;scala-base&lt;/c1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;java&lt;/c0&gt;, &lt;c1&gt;war&lt;/c1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180207T143415Z" creationid="huanghaohang" creationdate="20180207T143415Z">
        <seg>&lt;c0&gt;java&lt;/c0&gt;, &lt;c1&gt;war&lt;/c1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;java&lt;/c0&gt;,&lt;c1&gt;groovy&lt;/c1&gt;, &lt;c2&gt;scala&lt;/c2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180207T144521Z" creationid="huanghaohang" creationdate="20180207T144521Z">
        <seg>&lt;c0&gt;java&lt;/c0&gt;,&lt;c1&gt;groovy&lt;/c1&gt;, &lt;c2&gt;scala&lt;/c2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;output&lt;/c0&gt; + &lt;c1&gt;runtime&lt;e2&gt;&lt;c3&gt;SourceSet&lt;/c3&gt;&lt;/e2&gt;&lt;/c1&gt; configuration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180320T095343Z" creationid="haohang" creationdate="20180320T095343Z">
        <seg>&lt;c0&gt;output&lt;/c0&gt; + &lt;c1&gt;runtime&lt;e2&gt;&lt;c3&gt;SourceSet&lt;/c3&gt;&lt;/e2&gt;&lt;/c1&gt; 配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;&lt;c1&gt;baseName&lt;/c1&gt;&lt;/e0&gt;-&lt;e2&gt;&lt;c3&gt;appendix&lt;/c3&gt;&lt;/e2&gt;-&lt;e4&gt;&lt;c5&gt;version&lt;/c5&gt;&lt;/e4&gt;-&lt;e6&gt;&lt;c7&gt;classifier&lt;/c7&gt;&lt;/e6&gt;.&lt;e8&gt;&lt;c9&gt;extension&lt;/c9&gt;&lt;/e8&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T232635Z" creationid="huanghaohang" creationdate="20171206T232635Z">
        <seg>&lt;e0&gt;&lt;c1&gt;baseName&lt;/c1&gt;&lt;/e0&gt;-&lt;e2&gt;&lt;c3&gt;appendix&lt;/c3&gt;&lt;/e2&gt;-&lt;e4&gt;&lt;c5&gt;version&lt;/c5&gt;&lt;/e4&gt;-&lt;e6&gt;&lt;c7&gt;classifier&lt;/c7&gt;&lt;/e6&gt;.&lt;e8&gt;&lt;c9&gt;extension&lt;/c9&gt;&lt;/e8&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;&lt;c1&gt;buildDir&lt;/c1&gt;&lt;/e0&gt;/&lt;e2&gt;&lt;c3&gt;dependencyCacheDirName&lt;/c3&gt;&lt;/e2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T062323Z" creationid="haohang" creationdate="20180313T062323Z">
        <seg>&lt;e0&gt;&lt;c1&gt;buildDir&lt;/c1&gt;&lt;/e0&gt;/&lt;e2&gt;&lt;c3&gt;dependencyCacheDirName&lt;/c3&gt;&lt;/e2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;&lt;c1&gt;buildDir&lt;/c1&gt;&lt;/e0&gt;/&lt;e2&gt;&lt;c3&gt;distsDirName&lt;/c3&gt;&lt;/e2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T062137Z" creationid="haohang" creationdate="20180313T062137Z">
        <seg>&lt;e0&gt;&lt;c1&gt;buildDir&lt;/c1&gt;&lt;/e0&gt;/&lt;e2&gt;&lt;c3&gt;distsDirName&lt;/c3&gt;&lt;/e2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;&lt;c1&gt;buildDir&lt;/c1&gt;&lt;/e0&gt;/&lt;e2&gt;&lt;c3&gt;docsDirName&lt;/c3&gt;&lt;/e2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T062241Z" creationid="haohang" creationdate="20180313T062241Z">
        <seg>&lt;e0&gt;&lt;c1&gt;buildDir&lt;/c1&gt;&lt;/e0&gt;/&lt;e2&gt;&lt;c3&gt;docsDirName&lt;/c3&gt;&lt;/e2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;&lt;c1&gt;buildDir&lt;/c1&gt;&lt;/e0&gt;/&lt;e2&gt;&lt;c3&gt;libsDirName&lt;/c3&gt;&lt;/e2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T061531Z" creationid="haohang" creationdate="20180313T061531Z">
        <seg>&lt;e0&gt;&lt;c1&gt;buildDir&lt;/c1&gt;&lt;/e0&gt;/&lt;e2&gt;&lt;c3&gt;libsDirName&lt;/c3&gt;&lt;/e2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;&lt;c1&gt;buildDir&lt;/c1&gt;&lt;/e0&gt;/&lt;e2&gt;&lt;c3&gt;reportsDirName&lt;/c3&gt;&lt;/e2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T061237Z" creationid="haohang" creationdate="20180313T061237Z">
        <seg>&lt;e0&gt;&lt;c1&gt;buildDir&lt;/c1&gt;&lt;/e0&gt;/&lt;e2&gt;&lt;c3&gt;reportsDirName&lt;/c3&gt;&lt;/e2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;&lt;c1&gt;buildDir&lt;/c1&gt;&lt;/e0&gt;/&lt;e2&gt;&lt;c3&gt;testResultsDirName&lt;/c3&gt;&lt;/e2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T061352Z" creationid="haohang" creationdate="20180313T061352Z">
        <seg>&lt;e0&gt;&lt;c1&gt;buildDir&lt;/c1&gt;&lt;/e0&gt;/&lt;e2&gt;&lt;c3&gt;testResultsDirName&lt;/c3&gt;&lt;/e2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;&lt;c1&gt;buildDir&lt;/c1&gt;&lt;/e0&gt;/classes/&lt;e2&gt;&lt;c3&gt;name&lt;/c3&gt;&lt;/e2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180320T095130Z" creationid="haohang" creationdate="20180320T095130Z">
        <seg>&lt;e0&gt;&lt;c1&gt;buildDir&lt;/c1&gt;&lt;/e0&gt;/classes/&lt;e2&gt;&lt;c3&gt;name&lt;/c3&gt;&lt;/e2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;&lt;c1&gt;buildDir&lt;/c1&gt;&lt;/e0&gt;/resources/&lt;e2&gt;&lt;c3&gt;name&lt;/c3&gt;&lt;/e2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180320T095213Z" creationid="haohang" creationdate="20180320T095213Z">
        <seg>&lt;e0&gt;&lt;c1&gt;buildDir&lt;/c1&gt;&lt;/e0&gt;/resources/&lt;e2&gt;&lt;c3&gt;name&lt;/c3&gt;&lt;/e2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;&lt;c1&gt;destinationDir&lt;/c1&gt;&lt;/e0&gt;/&lt;e2&gt;&lt;c3&gt;archiveName&lt;/c3&gt;&lt;/e2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T232806Z" creationid="huanghaohang" creationdate="20171206T232806Z">
        <seg>&lt;e0&gt;&lt;c1&gt;destinationDir&lt;/c1&gt;&lt;/e0&gt;/&lt;e2&gt;&lt;c3&gt;archiveName&lt;/c3&gt;&lt;/e2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;&lt;c1&gt;docsDir&lt;/c1&gt;&lt;/e0&gt;/javadoc</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T100438Z" creationid="haohang" creationdate="20180326T100438Z">
        <seg>&lt;e0&gt;&lt;c1&gt;docsDir&lt;/c1&gt;&lt;/e0&gt;/javadoc</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;&lt;c1&gt;projectDir&lt;/c1&gt;&lt;/e0&gt;/build</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T132223Z" creationid="huanghaohang" creationdate="20170913T132223Z">
        <seg>&lt;e0&gt;&lt;c1&gt;projectDir&lt;/c1&gt;&lt;/e0&gt;/build</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;&lt;c1&gt;reportsDir&lt;/c1&gt;&lt;/e0&gt;/&lt;c2&gt;testReportDirName&lt;/c2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T061427Z" creationid="haohang" creationdate="20180313T061427Z">
        <seg>&lt;e0&gt;&lt;c1&gt;reportsDir&lt;/c1&gt;&lt;/e0&gt;/&lt;c2&gt;testReportDirName&lt;/c2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;&lt;c1&gt;sourceSet&lt;/c1&gt;&lt;/e0&gt;.compileClasspath</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180327T101658Z" creationid="haohang" creationdate="20180327T101658Z">
        <seg>&lt;e0&gt;&lt;c1&gt;sourceSet&lt;/c1&gt;&lt;/e0&gt;.compileClasspath</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;&lt;c1&gt;sourceSet&lt;/c1&gt;&lt;/e0&gt;.groovy</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180407T003652Z" creationid="huanghaohang" creationdate="20180407T003652Z">
        <seg>&lt;e0&gt;&lt;c1&gt;sourceSet&lt;/c1&gt;&lt;/e0&gt;.groovy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;&lt;c1&gt;sourceSet&lt;/c1&gt;&lt;/e0&gt;.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180327T101700Z" creationid="haohang" creationdate="20180327T101700Z">
        <seg>&lt;e0&gt;&lt;c1&gt;sourceSet&lt;/c1&gt;&lt;/e0&gt;.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;&lt;c1&gt;sourceSet&lt;/c1&gt;&lt;/e0&gt;.output.classesDir</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180327T101704Z" creationid="haohang" creationdate="20180327T101704Z">
        <seg>&lt;e0&gt;&lt;c1&gt;sourceSet&lt;/c1&gt;&lt;/e0&gt;.output.classesDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;&lt;c1&gt;sourceSet&lt;/c1&gt;&lt;/e0&gt;.output.resourcesDir</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T101405Z" creationid="haohang" creationdate="20180326T101405Z">
        <seg>&lt;e0&gt;&lt;c1&gt;sourceSet&lt;/c1&gt;&lt;/e0&gt;.output.resourcesDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;&lt;c1&gt;sourceSet&lt;/c1&gt;&lt;/e0&gt;.resources</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T101317Z" creationid="haohang" creationdate="20180326T101317Z">
        <seg>&lt;e0&gt;&lt;c1&gt;sourceSet&lt;/c1&gt;&lt;/e0&gt;.resources</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;&lt;c1&gt;sourceSet&lt;/c1&gt;&lt;/e0&gt;Classes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180312T073442Z" creationid="haohang" creationdate="20180312T073442Z">
        <seg>&lt;e0&gt;&lt;c1&gt;sourceSet&lt;/c1&gt;&lt;/e0&gt;Classes</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;&lt;c1&gt;sourceSet&lt;/c1&gt;&lt;/e0&gt;Compile</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T054253Z" creationid="haohang" creationdate="20180313T054253Z">
        <seg>&lt;e0&gt;&lt;c1&gt;sourceSet&lt;/c1&gt;&lt;/e0&gt;Compile</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;&lt;c1&gt;sourceSet&lt;/c1&gt;&lt;/e0&gt;Runtime</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T054353Z" creationid="haohang" creationdate="20180313T054353Z">
        <seg>&lt;e0&gt;&lt;c1&gt;sourceSet&lt;/c1&gt;&lt;/e0&gt;Runtime</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;// Add some source directories use String paths&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171002T134315Z" creationid="huanghaohang" creationdate="20171002T134315Z">
        <seg>&lt;s0&gt;// Add some source directories use String paths&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;// Copy everything under src/main/webapp&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171015T075015Z" creationid="huanghaohang" creationdate="20171015T075015Z">
        <seg>&lt;s0&gt;// Copy everything under src/main/webapp&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;// Create a ZIP file tree using path&lt;/s0&gt;
FileTree zip = zipTree(&lt;s1&gt;'someFile.zip'&lt;/s1&gt;)

&lt;s2&gt;// Create a TAR file tree using path&lt;/s2&gt;
FileTree tar = tarTree(&lt;s3&gt;'someFile.tar'&lt;/s3&gt;)

&lt;s4&gt;//tar tree attempts to guess the compression based on the file extension&lt;/s4&gt;
&lt;s5&gt;//however if you must specify the compression explicitly you can:&lt;/s5&gt;
FileTree someTar = tarTree(resources.gzip(&lt;s6&gt;'someTar.ext'&lt;/s6&gt;))</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171002T133534Z" creationid="huanghaohang" creationdate="20171002T133534Z">
        <seg>&lt;s0&gt;// Create a ZIP file tree using path&lt;/s0&gt;
FileTree zip = zipTree(&lt;s1&gt;'someFile.zip'&lt;/s1&gt;)

&lt;s2&gt;// Create a TAR file tree using path&lt;/s2&gt;
FileTree tar = tarTree(&lt;s3&gt;'someFile.tar'&lt;/s3&gt;)

&lt;s4&gt;//tar tree attempts to guess the compression based on the file extension&lt;/s4&gt;
&lt;s5&gt;//however if you must specify the compression explicitly you can:&lt;/s5&gt;
FileTree someTar = tarTree(resources.gzip(&lt;s6&gt;'someTar.ext'&lt;/s6&gt;))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;// Create a file collection using a closure&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T150350Z" creationid="huanghaohang" creationdate="20170927T150350Z">
        <seg>&lt;s0&gt;// Create a file collection using a closure&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;// Create a file tree with a base directory&lt;/s0&gt;
FileTree tree = fileTree(dir: &lt;s1&gt;'src/main'&lt;/s1&gt;)

&lt;s2&gt;// Add include and exclude patterns to the tree&lt;/s2&gt;
tree.include &lt;s3&gt;'**/*.java'&lt;/s3&gt;
tree.exclude &lt;s4&gt;'**/Abstract*'&lt;/s4&gt;

&lt;s5&gt;// Create a tree using path&lt;/s5&gt;
tree = fileTree(&lt;s6&gt;'src'&lt;/s6&gt;).include(&lt;s7&gt;'**/*.java'&lt;/s7&gt;)

&lt;s8&gt;// Create a tree using closure&lt;/s8&gt;
tree = fileTree(&lt;s9&gt;'src'&lt;/s9&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171002T023415Z" creationid="huanghaohang" creationdate="20171002T023415Z">
        <seg>&lt;s0&gt;// Create a file tree with a base directory&lt;/s0&gt;
FileTree tree = fileTree(dir: &lt;s1&gt;'src/main'&lt;/s1&gt;)

&lt;s2&gt;// Add include and exclude patterns to the tree&lt;/s2&gt;
tree.include &lt;s3&gt;'**/*.java'&lt;/s3&gt;
tree.exclude &lt;s4&gt;'**/Abstract*'&lt;/s4&gt;

&lt;s5&gt;// Create a tree using path&lt;/s5&gt;
tree = fileTree(&lt;s6&gt;'src'&lt;/s6&gt;).include(&lt;s7&gt;'**/*.java'&lt;/s7&gt;)

&lt;s8&gt;// Create a tree using closure&lt;/s8&gt;
tree = fileTree(&lt;s9&gt;'src'&lt;/s9&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;// Iterable gets an each() method&lt;/s0&gt;
configurations.runtime.each { File f -&gt; println f }</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T135849Z" creationid="huanghaohang" creationdate="20170913T135849Z">
        <seg>&lt;s0&gt;// Iterable gets an each() method&lt;/s0&gt;
configurations.runtime.each { File f -&gt; println f }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;// Iterate over the contents of a tree&lt;/s0&gt;
tree.each {File file -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171002T023625Z" creationid="huanghaohang" creationdate="20171002T023625Z">
        <seg>&lt;s0&gt;// Iterate over the contents of a tree&lt;/s0&gt;
tree.each {File file -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;// Iterate over the files in the collection&lt;/s0&gt;
collection.each {File file -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T132329Z" creationid="huanghaohang" creationdate="20170923T132329Z">
        <seg>&lt;s0&gt;// Iterate over the files in the collection&lt;/s0&gt;
collection.each {File file -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;// List literal&lt;/s0&gt;
test.includes = [&lt;s1&gt;'org/gradle/api/**'&lt;/s1&gt;, &lt;s2&gt;'org/gradle/internal/**'&lt;/s2&gt;]

List&lt;String&gt; list = &lt;s3&gt;new&lt;/s3&gt; ArrayList&lt;String&gt;()
list.add(&lt;s4&gt;'org/gradle/api/**'&lt;/s4&gt;)
list.add(&lt;s5&gt;'org/gradle/internal/**'&lt;/s5&gt;)
test.includes = list

&lt;s6&gt;// Map literal&lt;/s6&gt;
apply plugin: &lt;s7&gt;'java'&lt;/s7&gt;

Map&lt;String, String&gt; map = &lt;s8&gt;new&lt;/s8&gt; HashMap&lt;String, String&gt;()
map.put(&lt;s9&gt;'plugin'&lt;/s9&gt;, &lt;s10&gt;'java'&lt;/s10&gt;)
apply(map)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T141557Z" creationid="huanghaohang" creationdate="20170913T141557Z">
        <seg>&lt;s0&gt;// List literal&lt;/s0&gt;
test.includes = [&lt;s1&gt;'org/gradle/api/**'&lt;/s1&gt;, &lt;s2&gt;'org/gradle/internal/**'&lt;/s2&gt;]

List&lt;String&gt; list = &lt;s3&gt;new&lt;/s3&gt; ArrayList&lt;String&gt;()
list.add(&lt;s4&gt;'org/gradle/api/**'&lt;/s4&gt;)
list.add(&lt;s5&gt;'org/gradle/internal/**'&lt;/s5&gt;)
test.includes = list

&lt;s6&gt;// Map literal&lt;/s6&gt;
apply plugin: &lt;s7&gt;'java'&lt;/s7&gt;

Map&lt;String, String&gt; map = &lt;s8&gt;new&lt;/s8&gt; HashMap&lt;String, String&gt;()
map.put(&lt;s9&gt;'plugin'&lt;/s9&gt;, &lt;s10&gt;'java'&lt;/s10&gt;)
apply(map)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;// URL can refer to a local directory&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T045145Z" creationid="huanghaohang" creationdate="20170908T045145Z">
        <seg>&lt;s0&gt;// URL can refer to a local directory&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;// Use a File object to specify the source directory&lt;/s0&gt;
compile {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171002T134048Z" creationid="huanghaohang" creationdate="20171002T134048Z">
        <seg>&lt;s0&gt;// Use a File object to specify the source directory&lt;/s0&gt;
compile {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;// Using a getter method&lt;/s0&gt;
println project.buildDir
println getProject().getBuildDir()

&lt;s1&gt;// Using a setter method&lt;/s1&gt;
project.buildDir = &lt;s2&gt;'target'&lt;/s2&gt;
getProject().setBuildDir(&lt;s3&gt;'target'&lt;/s3&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T141244Z" creationid="huanghaohang" creationdate="20170913T141244Z">
        <seg>&lt;s0&gt;// Using a getter method&lt;/s0&gt;
println project.buildDir
println getProject().getBuildDir()

&lt;s1&gt;// Using a setter method&lt;/s1&gt;
project.buildDir = &lt;s2&gt;'target'&lt;/s2&gt;
getProject().setBuildDir(&lt;s3&gt;'target'&lt;/s3&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;// Using a relative path&lt;/s0&gt;
File configFile = file(&lt;s1&gt;'src/config.xml'&lt;/s1&gt;)

&lt;s2&gt;// Using an absolute path&lt;/s2&gt;
configFile = file(configFile.absolutePath)

&lt;s3&gt;// Using a File object with a relative path&lt;/s3&gt;
configFile = file(&lt;s4&gt;new&lt;/s4&gt; File(&lt;s5&gt;'src/config.xml'&lt;/s5&gt;))</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T125038Z" creationid="huanghaohang" creationdate="20170923T125038Z">
        <seg>&lt;s0&gt;// Using a relative path&lt;/s0&gt;
File configFile = file(&lt;s1&gt;'src/config.xml'&lt;/s1&gt;)

&lt;s2&gt;// Using an absolute path&lt;/s2&gt;
configFile = file(configFile.absolutePath)

&lt;s3&gt;// Using a File object with a relative path&lt;/s3&gt;
configFile = file(&lt;s4&gt;new&lt;/s4&gt; File(&lt;s5&gt;'src/config.xml'&lt;/s5&gt;))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;// Various ways to access the main source set&lt;/s0&gt;
println sourceSets.main.output.classesDir
println sourceSets[&lt;s1&gt;'main'&lt;/s1&gt;].output.classesDir
sourceSets {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180320T094733Z" creationid="haohang" creationdate="20180320T094733Z">
        <seg>&lt;s0&gt;// Various ways to access the main source set&lt;/s0&gt;
println sourceSets.main.output.classesDir
println sourceSets[&lt;s1&gt;'main'&lt;/s1&gt;].output.classesDir
sourceSets {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;//include specific method in any of the tests&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180405T131637Z" creationid="huanghaohang" creationdate="20180405T131637Z">
        <seg>&lt;s0&gt;//include specific method in any of the tests&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;&lt;e1&gt;Groovy&lt;/e1&gt;&lt;/s0&gt; build scripts.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T140744Z" creationid="95" creationdate="20170721T140744Z">
        <seg>使用&lt;s0&gt;&lt;e1&gt;Groovy&lt;/e1&gt;&lt;/s0&gt; 语言的构建脚本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;&lt;e1&gt;Note:&lt;/e1&gt;&lt;/s0&gt; The code for this example can be found at &lt;c2&gt;samples/groovy/quickstart&lt;/c2&gt; which is in both the binary and source distributions of Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T001840Z" creationid="huanghaohang" creationdate="20170909T001702Z">
        <seg>&lt;s0&gt;&lt;e1&gt;注：&lt;/e1&gt;&lt;/s0&gt;本示例的代码可以在Gradle的二进制或源码发行包中的 &lt;c2&gt;samples/groovy/quickstart&lt;/c2&gt;里找到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;&lt;e1&gt;Note:&lt;/e1&gt;&lt;/s0&gt; The code for this example can be found at &lt;c2&gt;samples/java/multiproject&lt;/c2&gt; which is in both the binary and source distributions of Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T154518Z" creationid="95" creationdate="20170731T154518Z">
        <seg>&lt;s0&gt;&lt;e1&gt;注：&lt;/e1&gt;&lt;/s0&gt;本示例的代码可以在Gradle的二进制或源代码发行包中的 &lt;c2&gt;samples/java/multiproject&lt;/c2&gt;里找到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;&lt;e1&gt;Note:&lt;/e1&gt;&lt;/s0&gt; The code for this example can be found at &lt;c2&gt;samples/java/quickstart&lt;/c2&gt; which is in both the binary and source distributions of Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T012606Z" creationid="95" creationdate="20170730T012606Z">
        <seg>&lt;s0&gt;&lt;e1&gt;注：&lt;/e1&gt;&lt;/s0&gt;本示例的代码可以在Gradle的二进制或源代码发行包中的 &lt;c2&gt;samples/java/quickstart&lt;/c2&gt;里找到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;&lt;e1&gt;Note:&lt;/e1&gt;&lt;/s0&gt; The code for this example can be found at &lt;c2&gt;samples/webApplication/quickstart&lt;/c2&gt; which is in both the binary and source distributions of Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T004659Z" creationid="huanghaohang" creationdate="20170909T004659Z">
        <seg>&lt;s0&gt;&lt;e1&gt;注：&lt;/e1&gt;&lt;/s0&gt;本示例的代码可以在Gradle的二进制或源代码发行包中的 &lt;c2&gt;samples/webApplication/quickstart&lt;/c2&gt;里找到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;&lt;e1&gt;The Gradle daemon&lt;/e1&gt;&lt;/s0&gt; (sometimes referred as &lt;s2&gt;&lt;e3&gt;the build daemon&lt;/e3&gt;&lt;/s2&gt;) aims to improve the startup and execution time of Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180108T133319Z" creationid="huanghaohang" creationdate="20180108T133319Z">
        <seg>&lt;s0&gt; &lt;e1&gt;Gradle 守护进程&lt;/e1&gt;&lt;/s0&gt;（有时也称为&lt;s2&gt;&lt;e3&gt;构建守护进程&lt;/e3&gt;&lt;/s2&gt;） 旨在改善 Gradle 的启动和执行时间。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;&lt;echo&gt;&lt;/s0&gt;buildDir = ${buildDir}&lt;s1&gt;&lt;/echo&gt;&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T094352Z" creationid="huanghaohang" creationdate="20180105T094352Z">
        <seg>&lt;s0&gt;&lt;echo&gt;&lt;/s0&gt;buildDir = ${buildDir}&lt;s1&gt;&lt;/echo&gt;&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;&lt;path&lt;/s0&gt; &lt;s1&gt;id&lt;/s1&gt;=&lt;s2&gt;"antPath"&lt;/s2&gt; &lt;s3&gt;location&lt;/s3&gt;=&lt;s4&gt;"libs"&lt;/s4&gt;&lt;s5&gt;/&gt;&lt;/s5&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T094737Z" creationid="huanghaohang" creationdate="20180105T094737Z">
        <seg>&lt;s0&gt;&lt;path&lt;/s0&gt; &lt;s1&gt;id&lt;/s1&gt;=&lt;s2&gt;"antPath"&lt;/s2&gt; &lt;s3&gt;location&lt;/s3&gt;=&lt;s4&gt;"libs"&lt;/s4&gt;&lt;s5&gt;/&gt;&lt;/s5&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;&lt;path&lt;/s0&gt; &lt;s1&gt;refid&lt;/s1&gt;=&lt;s2&gt;"classpath"&lt;/s2&gt;&lt;s3&gt;/&gt;&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T094700Z" creationid="huanghaohang" creationdate="20180105T094700Z">
        <seg>&lt;s0&gt;&lt;path&lt;/s0&gt; &lt;s1&gt;refid&lt;/s1&gt;=&lt;s2&gt;"classpath"&lt;/s2&gt;&lt;s3&gt;/&gt;&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;&lt;project&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T084609Z" creationid="huanghaohang" creationdate="20180105T084609Z">
        <seg>&lt;s0&gt;&lt;project&gt;&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;&lt;property&lt;/s0&gt; &lt;s1&gt;name&lt;/s1&gt;=&lt;s2&gt;"antProp"&lt;/s2&gt; &lt;s3&gt;value&lt;/s3&gt;=&lt;s4&gt;"a property defined in an Ant build"&lt;/s4&gt;&lt;s5&gt;/&gt;&lt;/s5&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T094612Z" creationid="huanghaohang" creationdate="20180105T094612Z">
        <seg>&lt;s0&gt;&lt;property&lt;/s0&gt; &lt;s1&gt;name&lt;/s1&gt;=&lt;s2&gt;"antProp"&lt;/s2&gt; &lt;s3&gt;value&lt;/s3&gt;=&lt;s4&gt;"a property defined in an Ant build"&lt;/s4&gt;&lt;s5&gt;/&gt;&lt;/s5&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;[&lt;a1&gt;10&lt;/a1&gt;] &lt;/s0&gt;The TestNG documentation contains more details about test groups: &lt;a2&gt;http://testng.org/doc/documentation-main.html#test-groups&lt;/a2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T113501Z" creationid="huanghaohang" creationdate="20180406T113501Z">
        <seg>&lt;s0&gt;[&lt;a1&gt;10&lt;/a1&gt;] &lt;/s0&gt;TestNG 文档包含了有关测试组的更多详细信息：&lt;a2&gt;http://testng.org/doc/documentation-main.html#test-groups&lt;/a2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;[&lt;a1&gt;1&lt;/a1&gt;] &lt;/s0&gt;At &lt;a2&gt;http://www.defmacro.org/ramblings/lisp.html&lt;/a2&gt; you find an interesting article comparing Ant, XML, Java and Lisp. It's funny that the 'if Java had that syntax' syntax in this article is actually the Groovy syntax.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T072342Z" creationid="95" creationdate="20170723T072136Z">
        <seg>&lt;s0&gt;[&lt;a1&gt;1&lt;/a1&gt;] &lt;/s0&gt;在 &lt;a2&gt;http://www.defmacro.org/ramblings/lisp.html&lt;/a2&gt; 上面，你可以找到一篇比较Ant，XML，Java和List的文章。很有趣的是，这篇文章中的“如果Java具有该语法”的语法实际上正是Groovy的语法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;[&lt;a1&gt;2&lt;/a1&gt;] &lt;/s0&gt;There are command line switches to change this behavior. See &lt;a2&gt;Appendix D, &lt;i3&gt;Gradle Command Line&lt;/i3&gt;&lt;/a2&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T031034Z" creationid="95" creationdate="20170729T030917Z">
        <seg>&lt;s0&gt;[&lt;a1&gt;2&lt;/a1&gt;] &lt;/s0&gt;有一些命令行开关可以改变这一行为，请参阅《&lt;a2&gt;附录 D， &lt;i3&gt;Gradle 命令行&lt;/i3&gt;&lt;/a2&gt;》。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;[&lt;a1&gt;3&lt;/a1&gt;] &lt;/s0&gt;We think this is confusing, and we are gradually teasing apart the two concepts in the Gradle DSL.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T051835Z" creationid="huanghaohang" creationdate="20170908T051835Z">
        <seg>&lt;s0&gt;[&lt;a1&gt;3&lt;/a1&gt;] &lt;/s0&gt;关于这点，我们认为会让人感到很困惑，因此我们正在逐渐梳理Gradle DSL中的这两个概念。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;[&lt;a1&gt;4&lt;/a1&gt;] &lt;/s0&gt;We are working to make the syntax consistent for resolving from and publishing to Maven repositories.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T052002Z" creationid="huanghaohang" creationdate="20170908T052002Z">
        <seg>&lt;s0&gt;[&lt;a1&gt;4&lt;/a1&gt;] &lt;/s0&gt;我们正在努力统一从Maven仓库解析依赖以及向其发布的语法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;[&lt;a1&gt;5&lt;/a1&gt;] &lt;/s0&gt;Any language element except for statement labels.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170914T153533Z" creationid="huanghaohang" creationdate="20170914T153533Z">
        <seg>&lt;s0&gt;[&lt;a1&gt;5&lt;/a1&gt;] &lt;/s0&gt;除语句标签之外的任何语言元素。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;[&lt;a1&gt;6&lt;/a1&gt;] &lt;/s0&gt; &lt;s2&gt;&lt;e3&gt;Teamcity&lt;/e3&gt;&lt;/s2&gt; or &lt;s4&gt;&lt;e5&gt;Bamboo&lt;/e5&gt;&lt;/s4&gt; are for example CI servers which offer this functionality.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170918T150653Z" creationid="huanghaohang" creationdate="20170918T150653Z">
        <seg>&lt;s0&gt;[&lt;a1&gt;6&lt;/a1&gt;]&lt;/s0&gt; &lt;s2&gt; &lt;e3&gt;Teamcity&lt;/e3&gt;&lt;/s2&gt;或&lt;s4&gt;&lt;e5&gt;Bamboo&lt;/e5&gt;&lt;/s4&gt;就是作为提供这一功能的 CI 服务器的例子。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;[&lt;a1&gt;7&lt;/a1&gt;] &lt;/s0&gt;You might be wondering why there is neither an import for the &lt;c2&gt;StopExecutionException&lt;/c2&gt; nor do we access it via its fully qualified name. The reason is, that Gradle adds a set of default imports to your script. These imports are customizable (see &lt;a3&gt;Appendix E, &lt;i4&gt;Existing IDE Support and how to cope without it&lt;/i4&gt;&lt;/a3&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T050907Z" creationid="huanghaohang" creationdate="20170923T050907Z">
        <seg>&lt;s0&gt;[&lt;a1&gt;7&lt;/a1&gt;]&lt;/s0&gt;你可能会想，为什么没有导入&lt;c2&gt;StopExecutionException&lt;/c2&gt;，我们也没有通过其完全限定名来访问它。原因是，Gradle会向你的脚本添加一些默认的导入。这些导入是可以自定义的（参见&lt;a3&gt;附录E，&lt;i4&gt;现有的IDE支持及没有支持时如何应对&lt;/i4&gt;&lt;/a3&gt;）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;[&lt;a1&gt;8&lt;/a1&gt;] &lt;/s0&gt;In Groovy you can execute Strings. To learn more about executing external processes with Groovy have a look in 'Groovy in Action' 9.3.2 or at the Groovy wiki</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T094943Z" creationid="huanghaohang" creationdate="20180105T094943Z">
        <seg>&lt;s0&gt;[&lt;a1&gt;8&lt;/a1&gt;] &lt;/s0&gt;在 Groovy 中，你可以执行字符串。要了解有关使用 Groovy 执行外部进程的更多信息，请参阅《Groovy in Action》第 9.3.2 节，或者是参考 Groovy wiki。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;[&lt;a1&gt;9&lt;/a1&gt;] &lt;/s0&gt;The JUnit wiki contains a detailed description on how to work with JUnit categories: &lt;a2&gt;https://github.com/junit-team/junit/wiki/Categories&lt;/a2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T113444Z" creationid="huanghaohang" creationdate="20180406T113444Z">
        <seg>&lt;s0&gt;[&lt;a1&gt;9&lt;/a1&gt;] &lt;/s0&gt;JUnit wiki 包含了有关如何使用 JUnit 类别的详细说明： &lt;a2&gt;https://github.com/junit-team/junit/wiki/Categories&lt;/a2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;import&lt;/s0&gt; org.apache.tools.ant.filters.FixCrLfFilter
&lt;s1&gt;import&lt;/s1&gt; org.apache.tools.ant.filters.ReplaceTokens

task filter(type: Copy) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T060338Z" creationid="huanghaohang" creationdate="20171126T060338Z">
        <seg>&lt;s0&gt;import&lt;/s0&gt; org.apache.tools.ant.filters.FixCrLfFilter
&lt;s1&gt;import&lt;/s1&gt; org.apache.tools.ant.filters.ReplaceTokens

task filter(type: Copy) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;import&lt;/s0&gt; org.slf4j.Logger
&lt;s1&gt;import&lt;/s1&gt; org.slf4j.LoggerFactory

Logger slf4jLogger = LoggerFactory.getLogger(&lt;s2&gt;'some-logger'&lt;/s2&gt;)
slf4jLogger.info(&lt;s3&gt;'An info log message logged using SLF4j'&lt;/s3&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180107T024345Z" creationid="huanghaohang" creationdate="20180107T024345Z">
        <seg>&lt;s0&gt;import&lt;/s0&gt; org.slf4j.Logger
&lt;s1&gt;import&lt;/s1&gt; org.slf4j.LoggerFactory

Logger slf4jLogger = LoggerFactory.getLogger(&lt;s2&gt;'some-logger'&lt;/s2&gt;)
slf4jLogger.info(&lt;s3&gt;'An info log message logged using SLF4j'&lt;/s3&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s10&gt;// Use a closure to filter each line&lt;/s10&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T060346Z" creationid="huanghaohang" creationdate="20171126T060346Z">
        <seg>&lt;s10&gt;// Use a closure to filter each line&lt;/s10&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s11&gt;"[$line]"&lt;/s11&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T060348Z" creationid="huanghaohang" creationdate="20171126T060348Z">
        <seg>&lt;s11&gt;"[$line]"&lt;/s11&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s11&gt;// Use the contents of each zip file in the src dir&lt;/s11&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171002T134054Z" creationid="huanghaohang" creationdate="20171002T134054Z">
        <seg>&lt;s11&gt;// Use the contents of each zip file in the src dir&lt;/s11&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s12&gt;if&lt;/s12&gt; (result.failure != null) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180107T144034Z" creationid="huanghaohang" creationdate="20180107T144034Z">
        <seg>&lt;s12&gt;if&lt;/s12&gt; (result.failure != null) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s1&gt;// Disable the test report for the individual test task&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T044001Z" creationid="huanghaohang" creationdate="20180406T044001Z">
        <seg>&lt;s1&gt;// Disable the test report for the individual test task&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s1&gt;// Here you would put arbitrary conditions in real life. But we use this as an integration test, so we want defined behavior.&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T084835Z" creationid="huanghaohang" creationdate="20170922T084835Z">
        <seg>&lt;s1&gt;// Here you would put arbitrary conditions in real life. But we use this as an integration test, so we want defined behavior.&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s1&gt;&lt;target&lt;/s1&gt; &lt;s2&gt;name&lt;/s2&gt;=&lt;s3&gt;"hello"&lt;/s3&gt; &lt;s4&gt;depends&lt;/s4&gt;=&lt;s5&gt;"intro"&lt;/s5&gt;&lt;s6&gt;&gt;&lt;/s6&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T084838Z" creationid="huanghaohang" creationdate="20180105T084838Z">
        <seg>&lt;s1&gt;&lt;target&lt;/s1&gt; &lt;s2&gt;name&lt;/s2&gt;=&lt;s3&gt;"hello"&lt;/s3&gt; &lt;s4&gt;depends&lt;/s4&gt;=&lt;s5&gt;"intro"&lt;/s5&gt;&lt;s6&gt;&gt;&lt;/s6&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s1&gt;&lt;target&lt;/s1&gt; &lt;s2&gt;name&lt;/s2&gt;=&lt;s3&gt;"hello"&lt;/s3&gt;&lt;s4&gt;&gt;&lt;/s4&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T084610Z" creationid="huanghaohang" creationdate="20180105T084610Z">
        <seg>&lt;s1&gt;&lt;target&lt;/s1&gt; &lt;s2&gt;name&lt;/s2&gt;=&lt;s3&gt;"hello"&lt;/s3&gt;&lt;s4&gt;&gt;&lt;/s4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s1&gt;if&lt;/s1&gt; (file.isFile()) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170728T153800Z" creationid="95" creationdate="20170728T153800Z">
        <seg>&lt;s1&gt;if&lt;/s1&gt; (file.isFile()) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s1&gt;if&lt;/s1&gt; (taskName.startsWith(&lt;s2&gt;"ping"&lt;/s2&gt;)) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T011925Z" creationid="huanghaohang" creationdate="20170923T011925Z">
        <seg>&lt;s1&gt;if&lt;/s1&gt; (taskName.startsWith(&lt;s2&gt;"ping"&lt;/s2&gt;)) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s1&gt;throw&lt;/s1&gt; &lt;s2&gt;new&lt;/s2&gt; RuntimeException()
}
task taskY &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T044134Z" creationid="huanghaohang" creationdate="20170923T044134Z">
        <seg>&lt;s1&gt;throw&lt;/s1&gt; &lt;s2&gt;new&lt;/s2&gt; RuntimeException()
}
task taskY &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s2&gt;// Apply the script&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170918T150034Z" creationid="huanghaohang" creationdate="20170918T150034Z">
        <seg>&lt;s2&gt;// Apply the script&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s2&gt;// Copy a single file&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171015T075017Z" creationid="huanghaohang" creationdate="20171015T075017Z">
        <seg>&lt;s2&gt;// Copy a single file&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s2&gt;// Use a closure to map the file name&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T060237Z" creationid="huanghaohang" creationdate="20171126T060237Z">
        <seg>&lt;s2&gt;// Use a closure to map the file name&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s2&gt;// do something&lt;/s2&gt;
}
task compile(dependsOn: &lt;s3&gt;'resources'&lt;/s3&gt;) &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170917T132407Z" creationid="huanghaohang" creationdate="20170917T132407Z">
        <seg>&lt;s2&gt;// do something&lt;/s2&gt;
}
task compile(dependsOn: &lt;s3&gt;'resources'&lt;/s3&gt;) &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s2&gt;//include all tests from package&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180405T131639Z" creationid="huanghaohang" creationdate="20180405T131639Z">
        <seg>&lt;s2&gt;//include all tests from package&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s2&gt;if&lt;/s2&gt; (true) { &lt;s3&gt;throw&lt;/s3&gt; &lt;s4&gt;new&lt;/s4&gt; StopExecutionException() }
}
task myTask(dependsOn: &lt;s5&gt;'compile'&lt;/s5&gt;) &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T084836Z" creationid="huanghaohang" creationdate="20170922T084836Z">
        <seg>&lt;s2&gt;if&lt;/s2&gt; (true) { &lt;s3&gt;throw&lt;/s3&gt; &lt;s4&gt;new&lt;/s4&gt; StopExecutionException() }
}
task myTask(dependsOn: &lt;s5&gt;'compile'&lt;/s5&gt;) &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s3&gt;// Add a source directory using a File object&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171002T134316Z" creationid="huanghaohang" creationdate="20171002T134316Z">
        <seg>&lt;s3&gt;// Add a source directory using a File object&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s3&gt;// Copy the output of copyTask&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171015T124928Z" creationid="huanghaohang" creationdate="20171015T124928Z">
        <seg>&lt;s3&gt;// Copy the output of copyTask&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s3&gt;// Include the results from the `test` task in all subprojects&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T044005Z" creationid="huanghaohang" creationdate="20180406T044005Z">
        <seg>&lt;s3&gt;// Include the results from the `test` task in all subprojects&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s3&gt;if&lt;/s3&gt; (taskGraph.hasTask(release)) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T025306Z" creationid="95" creationdate="20170729T025306Z">
        <seg>&lt;s3&gt;if&lt;/s3&gt; (taskGraph.hasTask(release)) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s4&gt;// Copy the output of a task&lt;/s4&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171015T075020Z" creationid="huanghaohang" creationdate="20171015T075020Z">
        <seg>&lt;s4&gt;// Copy the output of a task&lt;/s4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s4&gt;// Substitute property references in files&lt;/s4&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T060342Z" creationid="huanghaohang" creationdate="20171126T060342Z">
        <seg>&lt;s4&gt;// Substitute property references in files&lt;/s4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s4&gt;//include all integration tests&lt;/s4&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180405T131640Z" creationid="huanghaohang" creationdate="20180405T131640Z">
        <seg>&lt;s4&gt;//include all integration tests&lt;/s4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s4&gt;if&lt;/s4&gt; (classesDir.isDirectory()) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170917T132408Z" creationid="huanghaohang" creationdate="20170917T132408Z">
        <seg>&lt;s4&gt;if&lt;/s4&gt; (classesDir.isDirectory()) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s4&gt;if&lt;/s4&gt; (details.baseValue != details.mergeValue) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T111943Z" creationid="huanghaohang" creationdate="20180406T111943Z">
        <seg>&lt;s4&gt;if&lt;/s4&gt; (details.baseValue != details.mergeValue) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s4&gt;public&lt;/s4&gt; &lt;s5&gt;void&lt;/s5&gt; beforeExecute(Task task) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180107T144027Z" creationid="huanghaohang" creationdate="20180107T144027Z">
        <seg>&lt;s4&gt;public&lt;/s4&gt; &lt;s5&gt;void&lt;/s5&gt; beforeExecute(Task task) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s5&gt;// Add some source directories using a closure&lt;/s5&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171002T134318Z" creationid="huanghaohang" creationdate="20171002T134318Z">
        <seg>&lt;s5&gt;// Add some source directories using a closure&lt;/s5&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s5&gt;// Copy the output of a task using Task outputs explicitly.&lt;/s5&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171015T075024Z" creationid="huanghaohang" creationdate="20171015T075024Z">
        <seg>&lt;s5&gt;// Copy the output of a task using Task outputs explicitly.&lt;/s5&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s5&gt;// Use a regular expression to map the file name&lt;/s5&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T060241Z" creationid="huanghaohang" creationdate="20171126T060241Z">
        <seg>&lt;s5&gt;// Use a regular expression to map the file name&lt;/s5&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s5&gt;&lt;echo&gt;&lt;/s5&gt;Hello, from Ant&lt;s6&gt;&lt;/echo&gt;&lt;/s6&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T084611Z" creationid="huanghaohang" creationdate="20180105T084611Z">
        <seg>&lt;s5&gt;&lt;echo&gt;&lt;/s5&gt;Hello, from Ant&lt;s6&gt;&lt;/echo&gt;&lt;/s6&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s5&gt;if&lt;/s5&gt; (details.key == &lt;s6&gt;'foo'&lt;/s6&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T111944Z" creationid="huanghaohang" creationdate="20180406T111944Z">
        <seg>&lt;s5&gt;if&lt;/s5&gt; (details.key == &lt;s6&gt;'foo'&lt;/s6&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s6&gt;// Copy the contents of a Zip file&lt;/s6&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171015T075027Z" creationid="huanghaohang" creationdate="20171015T075027Z">
        <seg>&lt;s6&gt;// Copy the contents of a Zip file&lt;/s6&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s6&gt;// do something&lt;/s6&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170917T132410Z" creationid="huanghaohang" creationdate="20170917T132410Z">
        <seg>&lt;s6&gt;// do something&lt;/s6&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s7&gt;// Use some of the filters provided by Ant&lt;/s7&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T060344Z" creationid="huanghaohang" creationdate="20171126T060344Z">
        <seg>&lt;s7&gt;// Use some of the filters provided by Ant&lt;/s7&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s7&gt;&lt;/target&gt;&lt;/s7&gt;
&lt;s8&gt;&lt;/project&gt;&lt;/s8&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T084612Z" creationid="huanghaohang" creationdate="20180105T084612Z">
        <seg>&lt;s7&gt;&lt;/target&gt;&lt;/s7&gt;
&lt;s8&gt;&lt;/project&gt;&lt;/s8&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s7&gt;&lt;echo&gt;&lt;/s7&gt;Hello, from Ant&lt;s8&gt;&lt;/echo&gt;&lt;/s8&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T084840Z" creationid="huanghaohang" creationdate="20180105T084840Z">
        <seg>&lt;s7&gt;&lt;echo&gt;&lt;/s7&gt;Hello, from Ant&lt;s8&gt;&lt;/echo&gt;&lt;/s8&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s7&gt;public&lt;/s7&gt; &lt;s8&gt;void&lt;/s8&gt; afterExecute(Task task, TaskState state) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180107T144029Z" creationid="huanghaohang" creationdate="20180107T144029Z">
        <seg>&lt;s7&gt;public&lt;/s7&gt; &lt;s8&gt;void&lt;/s8&gt; afterExecute(Task task, TaskState state) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s8&gt;// Determine the destination directory later&lt;/s8&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171015T075029Z" creationid="huanghaohang" creationdate="20171015T075029Z">
        <seg>&lt;s8&gt;// Determine the destination directory later&lt;/s8&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s9&gt;&lt;/target&gt;&lt;/s9&gt;
&lt;s10&gt;&lt;/project&gt;&lt;/s10&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T084841Z" creationid="huanghaohang" creationdate="20180105T084841Z">
        <seg>&lt;s9&gt;&lt;/target&gt;&lt;/s9&gt;
&lt;s10&gt;&lt;/project&gt;&lt;/s10&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s9&gt;public&lt;/s9&gt; &lt;s10&gt;void&lt;/s10&gt; buildFinished(BuildResult result) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180107T144031Z" creationid="huanghaohang" creationdate="20180107T144031Z">
        <seg>&lt;s9&gt;public&lt;/s9&gt; &lt;s10&gt;void&lt;/s10&gt; buildFinished(BuildResult result) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -I init.gradle build
[compile]
compiling source

[testCompile]
compiling test source

[test]
running unit tests

[build]

build completed</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180107T144041Z" creationid="huanghaohang" creationdate="20180107T144041Z">
        <seg>&gt; gradle -I init.gradle build
[compile]
compiling source

[testCompile]
compiling test source

[test]
running unit tests

[build]

build completed</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q
Default Cleaning!
Default Running!</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T023928Z" creationid="95" creationdate="20170729T023928Z">
        <seg>&gt; gradle -q
Default Cleaning!
Default Running!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q -PcommandLineProjectProp=commandLineProjectPropValue -Dorg.gradle.project.systemProjectProp=systemPropertyValue printProps
commandLineProjectPropValue
gradlePropertiesValue
systemPropertyValue
envPropertyValue
systemValue</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170917T135037Z" creationid="huanghaohang" creationdate="20170917T135037Z">
        <seg>&gt; gradle -q -PcommandLineProjectProp=commandLineProjectPropValue -Dorg.gradle.project.systemProjectProp=systemPropertyValue printProps
commandLineProjectPropValue
gradlePropertiesValue
systemPropertyValue
envPropertyValue
systemValue</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q -b subdir/myproject.gradle hello
using build file 'myproject.gradle' in 'subdir'.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T114026Z" creationid="huanghaohang" creationdate="20170909T114026Z">
        <seg>&gt; gradle -q -b subdir/myproject.gradle hello
using build file 'myproject.gradle' in 'subdir'.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q -p subdir hello
using build file 'build.gradle' in 'subdir'.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T114308Z" creationid="huanghaohang" creationdate="20170909T114308Z">
        <seg>&gt; gradle -q -p subdir hello
using build file 'build.gradle' in 'subdir'.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q api:dependencies --configuration testCompile
------------------------------------------------------------
Project :api - The shared API for the application
------------------------------------------------------------

testCompile
\--- junit:junit:4.11</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T021703Z" creationid="huanghaohang" creationdate="20170910T021703Z">
        <seg>&gt; gradle -q api:dependencies --configuration testCompile
------------------------------------------------------------
Project :api - The shared API for the application
------------------------------------------------------------

testCompile
\--- junit:junit:4.11</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q api:properties
------------------------------------------------------------
Project :api - The shared API for the application
------------------------------------------------------------

allprojects: [project ':api']
ant: org.gradle.api.internal.project.DefaultAntBuilder@12345
antBuilderFactory: org.gradle.api.internal.project.DefaultAntBuilderFactory@12345
artifacts: org.gradle.api.internal.artifacts.dsl.DefaultArtifactHandler@12345
asDynamicObject: org.gradle.api.internal.ExtensibleDynamicObject@12345
baseClassLoaderScope: org.gradle.api.internal.initialization.DefaultClassLoaderScope@12345
buildDir: /home/user/gradle/samples/userguide/tutorial/projectReports/api/build
buildFile: /home/user/gradle/samples/userguide/tutorial/projectReports/api/build.gradle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T023447Z" creationid="huanghaohang" creationdate="20170910T023447Z">
        <seg>&gt; gradle -q api:properties
------------------------------------------------------------
Project :api - The shared API for the application
------------------------------------------------------------

allprojects: [project ':api']
ant: org.gradle.api.internal.project.DefaultAntBuilder@12345
antBuilderFactory: org.gradle.api.internal.project.DefaultAntBuilderFactory@12345
artifacts: org.gradle.api.internal.artifacts.dsl.DefaultArtifactHandler@12345
asDynamicObject: org.gradle.api.internal.ExtensibleDynamicObject@12345
baseClassLoaderScope: org.gradle.api.internal.initialization.DefaultClassLoaderScope@12345
buildDir: /home/user/gradle/samples/userguide/tutorial/projectReports/api/build
buildFile: /home/user/gradle/samples/userguide/tutorial/projectReports/api/build.gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q check
projectApi
projectApi</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170912T130259Z" creationid="huanghaohang" creationdate="20170912T130259Z">
        <seg>&gt; gradle -q check
projectApi
projectApi</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q compile
The class directory exists. I can operate</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170917T132418Z" creationid="huanghaohang" creationdate="20170917T132418Z">
        <seg>&gt; gradle -q compile
The class directory exists. I can operate</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q configure
1
5</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170918T145829Z" creationid="huanghaohang" creationdate="20170918T145829Z">
        <seg>&gt; gradle -q configure
1
5</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q copy
I am the new one.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T083322Z" creationid="huanghaohang" creationdate="20170922T083322Z">
        <seg>&gt; gradle -q copy
I am the new one.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q count
0 1 2 3</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155921Z" creationid="95" creationdate="20170726T155921Z">
        <seg>&gt; gradle -q count
0 1 2 3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q dependencies api:dependencies webapp:dependencies
------------------------------------------------------------
Root project
------------------------------------------------------------

No configurations

------------------------------------------------------------
Project :api - The shared API for the application
------------------------------------------------------------

compile
\--- org.codehaus.groovy:groovy-all:2.3.3

testCompile
\--- junit:junit:4.11</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T014136Z" creationid="huanghaohang" creationdate="20170910T014136Z">
        <seg>&gt; gradle -q dependencies api:dependencies webapp:dependencies
------------------------------------------------------------
Root project
------------------------------------------------------------

No configurations

------------------------------------------------------------
Project :api - The shared API for the application
------------------------------------------------------------

compile
\--- org.codehaus.groovy:groovy-all:2.3.3

testCompile
\--- junit:junit:4.11</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q distribution
We build the zip with version=1.0-SNAPSHOT</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T025321Z" creationid="95" creationdate="20170729T025321Z">
        <seg>&gt; gradle -q distribution
We build the zip with version=1.0-SNAPSHOT</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q groupPing
Pinging: Server1
Pinging: Server2</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T043847Z" creationid="huanghaohang" creationdate="20170923T043847Z">
        <seg>&gt; gradle -q groupPing
Pinging: Server1
Pinging: Server2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q hello
:hello
:hello
:projectA:hello
:projectA:hello</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T122012Z" creationid="huanghaohang" creationdate="20170919T122012Z">
        <seg>&gt; gradle -q hello
:hello
:hello
:projectA:hello
:projectA:hello</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q hello
Hello Venus
Hello Earth
Hello Mars
Hello Jupiter</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T133119Z" creationid="95" creationdate="20170727T133119Z">
        <seg>&gt; gradle -q hello
Hello Venus
Hello Earth
Hello Mars
Hello Jupiter</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q hello
Hello world!</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T145850Z" creationid="95" creationdate="20170724T145850Z">
        <seg>&gt; gradle -q hello
Hello world!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q hello
Hello world!
Greetings from the hello task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T141348Z" creationid="95" creationdate="20170727T141348Z">
        <seg>&gt; gradle -q hello
Hello world!
Greetings from the hello task.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q hello
configuring root project 'configureProjectUsingScript'
hello from other script</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170918T145344Z" creationid="huanghaohang" creationdate="20170918T145344Z">
        <seg>&gt; gradle -q hello
configuring root project 'configureProjectUsingScript'
hello from other script</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q help --task libs
Detailed task information for libs

Paths</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T012840Z" creationid="huanghaohang" creationdate="20170910T012840Z">
        <seg>&gt; gradle -q help --task libs
Detailed task information for libs

Paths</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q intro
Hello world!
I'm Gradle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T160131Z" creationid="95" creationdate="20170726T160131Z">
        <seg>&gt; gradle -q intro
Hello world!
I'm Gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q list
Contents of src
src/dir1
src/file1.txt
Contents of src2
src2/dir1
src2/dir2</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T150359Z" creationid="huanghaohang" creationdate="20170927T150359Z">
        <seg>&gt; gradle -q list
Contents of src
src/dir1
src/file1.txt
Contents of src2
src2/dir1
src2/dir2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q loadfile
*** agile.manifesto.txt ***
Individuals and interactions over processes and tools
Working software over comprehensive documentation
Customer collaboration  over contract negotiation
Responding to change over following a plan</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170728T153832Z" creationid="95" creationdate="20170728T153832Z">
        <seg>&gt; gradle -q loadfile
*** agile.manifesto.txt ***
Individuals and interactions over processes and tools
Working software over comprehensive documentation
Customer collaboration  over contract negotiation
Responding to change over following a plan</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q loadfile
I'm fond of agile.manifesto.txt
I'm fond of gradle.manifesto.txt</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T023516Z" creationid="95" creationdate="20170729T023516Z">
        <seg>&gt; gradle -q loadfile
I'm fond of agile.manifesto.txt
I'm fond of gradle.manifesto.txt</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q myTask
I am not affected</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T084842Z" creationid="huanghaohang" creationdate="20170922T084842Z">
        <seg>&gt; gradle -q myTask
I am not affected</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q myZip
customName-1.0.zip</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T232535Z" creationid="huanghaohang" creationdate="20171206T232535Z">
        <seg>&gt; gradle -q myZip
customName-1.0.zip</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q myZip
gradle-wrapper-1.0-src.zip</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T232603Z" creationid="huanghaohang" creationdate="20171206T232603Z">
        <seg>&gt; gradle -q myZip
gradle-wrapper-1.0-src.zip</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q myZip
zipProject-1.0.zip
build/distributions
build/distributions/zipProject-1.0.zip</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T140722Z" creationid="huanghaohang" creationdate="20171126T140722Z">
        <seg>&gt; gradle -q myZip
zipProject-1.0.zip
build/distributions
build/distributions/zipProject-1.0.zip</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q pingServer1
Pinging: Server1</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T011931Z" creationid="huanghaohang" creationdate="20170923T011931Z">
        <seg>&gt; gradle -q pingServer1
Pinging: Server1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q printProperties
3.1.0.RELEASE
build@master.org
main
plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T133602Z" creationid="huanghaohang" creationdate="20170913T133602Z">
        <seg>&gt; gradle -q printProperties
3.1.0.RELEASE
build@master.org
main
plugin</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q printTaskProperties
myValue</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T142011Z" creationid="95" creationdate="20170727T142011Z">
        <seg>&gt; gradle -q printTaskProperties
myValue</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q projects
------------------------------------------------------------
Root project
------------------------------------------------------------

Root project 'projectReports'
+--- Project ':api' - The shared API for the application
\--- Project ':webapp' - The Web application implementation

To see a list of the tasks of a project, run gradle &lt;project-path&gt;:tasks
For example, try running gradle :api:tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T011131Z" creationid="huanghaohang" creationdate="20170910T011131Z">
        <seg>&gt; gradle -q projects
------------------------------------------------------------
Root project
------------------------------------------------------------

Root project 'projectReports'
+--- Project ':api' - The shared API for the application
\--- Project ':webapp' - The Web application implementation

To see a list of the tasks of a project, run gradle &lt;project-path&gt;:tasks
For example, try running gradle :api:tasks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q release
We build the zip with version=1.0
We release now</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T025329Z" creationid="95" creationdate="20170729T025329Z">
        <seg>&gt; gradle -q release
We build the zip with version=1.0
We release now</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q show
build/classes/main
build/resources/main</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180130T100230Z" creationid="huanghaohang" creationdate="20180130T100230Z">
        <seg>&gt; gradle -q show
build/classes/main
build/resources/main</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q show
build/output/classes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T022600Z" creationid="huanghaohang" creationdate="20180131T022600Z">
        <seg>&gt; gradle -q show
build/output/classes</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q task0
I'm task number 2
I'm task number 3
I'm task number 0</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T133039Z" creationid="95" creationdate="20170727T133039Z">
        <seg>&gt; gradle -q task0
I'm task number 2
I'm task number 3
I'm task number 0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q task1
I'm task number 1</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T132731Z" creationid="95" creationdate="20170727T132731Z">
        <seg>&gt; gradle -q task1
I'm task number 1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q taskX
lib1
lib2
taskX</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T130920Z" creationid="huanghaohang" creationdate="20170919T130920Z">
        <seg>&gt; gradle -q taskX
lib1
lib2
taskX</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q taskX
taskX
taskY</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T044046Z" creationid="huanghaohang" creationdate="20170923T044046Z">
        <seg>&gt; gradle -q taskX
taskX
taskY</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q taskX
taskY
taskX</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T160402Z" creationid="95" creationdate="20170726T160402Z">
        <seg>&gt; gradle -q taskX
taskY
taskX</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q taskX
taskZ
taskY
taskX</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T081554Z" creationid="huanghaohang" creationdate="20170922T081554Z">
        <seg>&gt; gradle -q taskX
taskZ
taskY
taskX</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q taskY
taskY</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T035749Z" creationid="huanghaohang" creationdate="20170922T035749Z">
        <seg>&gt; gradle -q taskY
taskY</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q taskY taskX
taskX
taskY</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T032053Z" creationid="huanghaohang" creationdate="20170922T032053Z">
        <seg>&gt; gradle -q taskY taskX
taskX
taskY</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q tasks
------------------------------------------------------------
All tasks runnable from root project
------------------------------------------------------------

Default tasks: dists

Build tasks
-----------
clean - Deletes the build directory (build)
dists - Builds the distribution
libs - Builds the JAR

Build Setup tasks
-----------------
init - Initializes a new Gradle build. [incubating]
wrapper - Generates Gradle wrapper files. [incubating]

Help tasks
----------
dependencies - Displays all dependencies declared in root project 'projectReports'.
dependencyInsight - Displays the insight into a specific dependency in root project 'projectReports'.
help - Displays a help message
projects - Displays the sub-projects of root project 'projectReports'.
properties - Displays the properties of root project 'projectReports'.
tasks - Displays the tasks runnable from root project 'projectReports' (some of the displayed tasks may belong to subprojects).

To see all tasks and more detail, run with --all.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T011714Z" creationid="huanghaohang" creationdate="20170910T011714Z">
        <seg>&gt; gradle -q tasks
------------------------------------------------------------
All tasks runnable from root project
------------------------------------------------------------

Default tasks: dists

Build tasks
-----------
clean - Deletes the build directory (build)
dists - Builds the distribution
libs - Builds the JAR

Build Setup tasks
-----------------
init - Initializes a new Gradle build. [incubating]
wrapper - Generates Gradle wrapper files. [incubating]

Help tasks
----------
dependencies - Displays all dependencies declared in root project 'projectReports'.
dependencyInsight - Displays the insight into a specific dependency in root project 'projectReports'.
help - Displays a help message
projects - Displays the sub-projects of root project 'projectReports'.
properties - Displays the properties of root project 'projectReports'.
tasks - Displays the tasks runnable from root project 'projectReports' (some of the displayed tasks may belong to subprojects).

To see all tasks and more detail, run with --all.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q tasks --all
------------------------------------------------------------
All tasks runnable from root project
------------------------------------------------------------

Default tasks: dists

Build tasks
-----------
clean - Deletes the build directory (build)
api:clean - Deletes the build directory (build)
webapp:clean - Deletes the build directory (build)
dists - Builds the distribution [api:libs, webapp:libs]</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T012327Z" creationid="huanghaohang" creationdate="20170910T012327Z">
        <seg>&gt; gradle -q tasks --all
------------------------------------------------------------
All tasks runnable from root project
------------------------------------------------------------

Default tasks: dists

Build tasks
-----------
clean - Deletes the build directory (build)
api:clean - Deletes the build directory (build)
webapp:clean - Deletes the build directory (build)
dists - Builds the distribution [api:libs, webapp:libs]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q upper
Original: mY_nAmE
Upper case: MY_NAME</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155840Z" creationid="95" creationdate="20170726T155840Z">
        <seg>&gt; gradle -q upper
Original: mY_nAmE
Upper case: MY_NAME</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q webapp:dependencyInsight --dependency groovy --configuration compile
org.codehaus.groovy:groovy-all:2.3.3
\--- project :api</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T022200Z" creationid="huanghaohang" creationdate="20170910T022200Z">
        <seg>&gt; gradle -q webapp:dependencyInsight --dependency groovy --configuration compile
org.codehaus.groovy:groovy-all:2.3.3
\--- project :api</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle build
:compileJava
:processResources
:classes
:jar
:assemble
:compileTestJava
:processTestResources
:testClasses
:test
:check
:build

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T014310Z" creationid="95" creationdate="20170730T014310Z">
        <seg>&gt; gradle build
:compileJava
:processResources
:classes
:jar
:assemble
:compileTestJava
:processTestResources
:testClasses
:test
:check
:build

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle cT
:compile
compiling source
:compileTest
compiling unit tests

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T113301Z" creationid="huanghaohang" creationdate="20170909T113301Z">
        <seg>&gt; gradle cT
:compile
compiling source
:compileTest
compiling unit tests

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle di
:compile
compiling source
:compileTest
compiling unit tests
:test
running unit tests
:dist
building the distribution

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T112858Z" creationid="huanghaohang" creationdate="20170909T112858Z">
        <seg>&gt; gradle di
:compile
compiling source
:compileTest
compiling unit tests
:test
running unit tests
:dist
building the distribution

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle disableMe
:disableMe SKIPPED

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T085331Z" creationid="huanghaohang" creationdate="20170922T085331Z">
        <seg>&gt; gradle disableMe
:disableMe SKIPPED

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle dist -x test
:compile
compiling source
:dist
building the distribution

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T032032Z" creationid="huanghaohang" creationdate="20170909T032032Z">
        <seg>&gt; gradle dist -x test
:compile
compiling source
:dist
building the distribution

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle dist test
:compile
compiling source
:compileTest
compiling unit tests
:test
running unit tests
:dist
building the distribution

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T031201Z" creationid="huanghaohang" creationdate="20170909T031201Z">
        <seg>&gt; gradle dist test
:compile
compiling source
:compileTest
compiling unit tests
:test
running unit tests
:dist
building the distribution

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle hello
:hello
[ant:echo] Hello, from Ant

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T084618Z" creationid="huanghaohang" creationdate="20180105T084618Z">
        <seg>&gt; gradle hello
:hello
[ant:echo] Hello, from Ant

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle hello
:hello
[ant:echo] Hello, from Ant
Hello, from Gradle

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T084809Z" creationid="huanghaohang" creationdate="20180105T084809Z">
        <seg>&gt; gradle hello
:hello
[ant:echo] Hello, from Ant
Hello, from Gradle

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle hello
:hello
[ant:echo] hello from Ant

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171216T022503Z" creationid="huanghaohang" creationdate="20171216T022503Z">
        <seg>&gt; gradle hello
:hello
[ant:echo] hello from Ant

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle hello
:intro
Hello, from Gradle
:hello
[ant:echo] Hello, from Ant

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T084842Z" creationid="huanghaohang" creationdate="20180105T084842Z">
        <seg>&gt; gradle hello
:intro
Hello, from Gradle
:hello
[ant:echo] Hello, from Ant

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle hello -PskipHello
:hello SKIPPED

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T084201Z" creationid="huanghaohang" creationdate="20170922T084201Z">
        <seg>&gt; gradle hello -PskipHello
:hello SKIPPED

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle intTestClasses
:compileIntTestJava
:processIntTestResources
:intTestClasses

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T095242Z" creationid="haohang" creationdate="20180326T095242Z">
        <seg>&gt; gradle intTestClasses
:compileIntTestJava
:processIntTestResources
:intTestClasses

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle intro
:hello
[ant:echo] Hello, from Ant
:intro
Hello, from Gradle

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T084650Z" creationid="huanghaohang" creationdate="20180105T084650Z">
        <seg>&gt; gradle intro
:hello
[ant:echo] Hello, from Ant
:intro
Hello, from Gradle

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle transform
:transform
Transforming source file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T085718Z" creationid="huanghaohang" creationdate="20170922T085718Z">
        <seg>&gt; gradle transform
:transform
Transforming source file.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle transform
:transform UP-TO-DATE</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T003901Z" creationid="huanghaohang" creationdate="20170923T003901Z">
        <seg>&gt; gradle transform
:transform UP-TO-DATE</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;e0&gt;file collection&lt;/e0&gt; is simply a set of files. It is represented by the &lt;a1&gt;&lt;c2&gt;FileCollection&lt;/c2&gt;&lt;/a1&gt; interface. Many objects in the Gradle API implement this interface. For example, &lt;a3&gt;dependency configurations&lt;/a3&gt; implement &lt;c4&gt;FileCollection&lt;/c4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T130835Z" creationid="huanghaohang" creationdate="20170923T130315Z">
        <seg>一个&lt;e0&gt;文件集合&lt;/e0&gt;只是一组文件，它通过&lt;a1&gt;&lt;c2&gt;FileCollection&lt;/c2&gt;&lt;/a1&gt;接口来表示。 Gradle API中的许多对象都实现了这个接口。比如，&lt;a3&gt;依dependency configurations&lt;/a3&gt;就实现了&lt;c4&gt;FileCollection&lt;/c4&gt;这一接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;e0&gt;file tree&lt;/e0&gt; is a collection of files arranged in a hierarchy. For example, a file tree might represent a directory tree or the contents of a ZIP file. It is represented by the &lt;a1&gt;&lt;c2&gt;FileTree&lt;/c2&gt;&lt;/a1&gt; interface. The &lt;c3&gt;FileTree&lt;/c3&gt; interface extends &lt;c4&gt;FileCollection&lt;/c4&gt;, so you can treat a file tree exactly the same way as you would a file collection. Several objects in Gradle implement the &lt;c5&gt;FileTree&lt;/c5&gt; interface, such as &lt;a6&gt;source sets&lt;/a6&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171002T023100Z" creationid="huanghaohang" creationdate="20170927T150857Z">
        <seg>一个&lt;e0&gt;文件树&lt;/e0&gt;是一个按层次结构排列的文件集合。 例如，文件树可能表示一个目录树或ZIP 文件的内容。它通过&lt;a1&gt;&lt;c2&gt;FileTree&lt;/c2&gt;&lt;/a1&gt; 接口来表示。&lt;c3&gt;FileTree&lt;/c3&gt; 接口继承自 &lt;c4&gt;FileCollection&lt;/c4&gt;，因此你可以像处理文件集一样来处理文件树。Gradle中的几个对象都实现了 &lt;c5&gt;FileTree&lt;/c5&gt; 接口，如&lt;a6&gt;源码集&lt;/a6&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A basic Groovy project</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233758Z" creationid="huanghaohang" creationdate="20171206T233758Z">
        <seg>一个基本的 Groovy 项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A basic Java project</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171014T124911Z" creationid="huanghaohang" creationdate="20171014T124911Z">
        <seg>一个基本的 Java 项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A build script can contain any Groovy language element. &lt;s0&gt;[&lt;a1&gt;5&lt;/a1&gt;]&lt;/s0&gt; Gradle assumes that each build script is encoded using UTF-8.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170912T124752Z" creationid="huanghaohang" creationdate="20170912T124752Z">
        <seg>构建脚本可以包含任何Groovy语言元素。 &lt;s0&gt;[&lt;a1&gt;5&lt;/a1&gt;]&lt;/s0&gt; Gradle假定每个构建脚本都是使用UTF-8编码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A description for the project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T132158Z" creationid="huanghaohang" creationdate="20170913T132158Z">
        <seg>项目描述。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A file collection is iterable, and can be converted to a number of other types using the &lt;c0&gt;as&lt;/c0&gt; operator. You can also add 2 file collections together using the &lt;c1&gt;+&lt;/c1&gt; operator, or subtract one file collection from another using the &lt;c2&gt;-&lt;/c2&gt; operator. Here are some examples of what you can do with a file collection.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T132304Z" creationid="huanghaohang" creationdate="20170923T131759Z">
        <seg>一个文件集合是可迭代的，可以使用&lt;c0&gt;as&lt;/c0&gt;操作符把它转换为多个其他类型。你也可以使用&lt;c1&gt;+&lt;/c1&gt;运算符把两个文件集合加到一起，或使用&lt;c2&gt;-&lt;/c2&gt;运算符从另一个文件集中减去另一个文件集合。以下是操作文件集合的一些示例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A plugin is simply any class that implements the &lt;a0&gt;&lt;c1&gt;Plugin&lt;/c1&gt;&lt;/a0&gt; interface. Gradle provides the core plugins as part of its distribution so simply applying the plugin as above is all you need to do. For 3rd party plugins however, you need to make the plugins available to the build classpath. For more information on how to do this, see &lt;a2&gt;Section 59.5, “External dependencies for the build script”&lt;/a2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180130T095729Z" creationid="huanghaohang" creationdate="20180130T095729Z">
        <seg>一个插件是简单的任何实现了&lt;a0&gt;&lt;c1&gt;Plugin&lt;/c1&gt;&lt;/a0&gt; 接口的类。 Gradle 提供了核心插件作为其发行版的一部分，所以你只需要简单地使用上面的插件即可。但是，对于第三方插件，你需要进行配置以使插件在构建类路径中可用。有关如何执行此操作的详细信息，请参阅&lt;a2&gt;第 59.5 节，《构建脚本的外部依赖》&lt;/a2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A project can have as many as JAR archives as you want. You can also add WAR, ZIP and TAR archives to your project. Archives are created using the various archive tasks: &lt;a0&gt;&lt;c1&gt;Zip&lt;/c1&gt;&lt;/a0&gt;, &lt;a2&gt;&lt;c3&gt;Tar&lt;/c3&gt;&lt;/a2&gt;, &lt;a4&gt;&lt;c5&gt;Jar&lt;/c5&gt;&lt;/a4&gt;, &lt;a6&gt;&lt;c7&gt;War&lt;/c7&gt;&lt;/a6&gt;, and &lt;a8&gt;&lt;c9&gt;Ear&lt;/c9&gt;&lt;/a8&gt;. They all work the same way, so let's look at how you create a ZIP file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T135301Z" creationid="huanghaohang" creationdate="20171126T130837Z">
        <seg>一个项目可以有尽可能多的 JAR 文件。你也可以将 WAR，ZIP 和 TAR 文件添加到你的项目中。这些归档文件是通过以下这些不同的归档任务来创建的： &lt;a0&gt;&lt;c1&gt;Zip&lt;/c1&gt;&lt;/a0&gt;，&lt;a2&gt;&lt;c3&gt;Tar&lt;/c3&gt;&lt;/a2&gt;，&lt;a4&gt;&lt;c5&gt;Jar&lt;/c5&gt;&lt;/a4&gt;，&lt;a6&gt;&lt;c7&gt;War&lt;/c7&gt;&lt;/a6&gt; 和 &lt;a8&gt;&lt;c9&gt;Ear&lt;/c9&gt;&lt;/a8&gt;。它们的使用方式相同，所以让我们来看看如何创建一个 ZIP 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A project can have multiple repositories. Gradle will look for a dependency in each repository in the order they are specified, stopping at the first repository that contains the requested module.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T045952Z" creationid="huanghaohang" creationdate="20170908T045151Z">
        <seg>项目可以有多个仓库。 Gradle将按照指定的顺序在每个仓库中查找依赖，并在找到包含了所请求模块的第一个仓库后停止。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A rich domain model for describing your build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T140853Z" creationid="95" creationdate="20170721T140853Z">
        <seg>丰富的领域模型来描述您的构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A shortcut task definition</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T031802Z" creationid="huanghaohang" creationdate="20170927T031802Z">
        <seg>快速任务定义</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A simple option for logging in your build file is to write messages to standard output. Gradle redirects anything written to standard output to it's logging system at the &lt;c0&gt;QUIET&lt;/c0&gt; log level.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180107T011938Z" creationid="huanghaohang" creationdate="20180107T011720Z">
        <seg>一种简单的在构建文件中打印日志的方法是把消息写到标准输出中。Gradle 会把写到标准输出的所有内容重定向到它的日志系统的 &lt;c0&gt;QUIET&lt;/c0&gt; 级别中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A task that aggregates the results of all tasks of a particular type: eg. test report task combines the outputs of all executed test tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T030630Z" creationid="huanghaohang" creationdate="20170922T030630Z">
        <seg>聚合特定类型的所有任务的结果的任务：例如，测试报告任务结合了所有执行的测试任务的输出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A task with no defined outputs will &lt;s0&gt;&lt;e1&gt;never&lt;/e1&gt;&lt;/s0&gt; be considered up-to-date. For scenarios where the outputs of a task are not files, or for more complex scenarios, the &lt;a2&gt;&lt;c3&gt;TaskOutputs.upToDateWhen()&lt;/c3&gt;&lt;/a2&gt; method allows you to calculate programmatically if the tasks outputs should be considered up to date.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T004643Z" creationid="huanghaohang" creationdate="20170923T004643Z">
        <seg>一个任务如果没有定义输出，那么它将&lt;s0&gt;&lt;e1&gt;永远不会&lt;/e1&gt;&lt;/s0&gt;被当作是最新的。对于任务的输出不是文件或是更复杂的场景，&lt;a2&gt; &lt;c3&gt;TaskOutputs.upToDateWhen()&lt;/c3&gt;&lt;/a2&gt;方法允许你以编程方式计算任务的输出是否应该被视为最新的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A task with only outputs defined will be considered up-to-date if those outputs are unchanged since the previous build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T004824Z" creationid="huanghaohang" creationdate="20170923T004824Z">
        <seg>一个只定义了输出的任务，如果自上次构建以来它的输出没变，那么它会被视为最新的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A very flexible general purpose build tool like Ant.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T133918Z" creationid="95" creationdate="20170721T133918Z">
        <seg>一个像Ant一样非常灵活而通用的构建工具。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>API</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180314T015217Z" creationid="huanghaohang" creationdate="20180314T015217Z">
        <seg>API</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>About this user guide</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072441Z" creationid="haohang" creationdate="20170720T072441Z">
        <seg>关于本用户指南</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Add dependency configurations to the project (see &lt;a0&gt;Section 8.3, “Dependency configurations”&lt;/a0&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180130T100118Z" creationid="huanghaohang" creationdate="20180130T100118Z">
        <seg>向项目中添加依赖配置 （见&lt;a0&gt;第 8.3 节，《依赖配置》&lt;/a0&gt;）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Add new properties and methods to existing type via extensions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180130T100127Z" creationid="huanghaohang" creationdate="20180130T100127Z">
        <seg>通过扩展对现有类型添加新的属性和方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Add tasks to the favorites (see Favorites tab)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170911T144420Z" creationid="huanghaohang" creationdate="20170911T144420Z">
        <seg>将任务添加到收藏夹（见收藏夹Favorites选项卡）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Add tasks to the project (e.g. compile, test)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180130T100042Z" creationid="huanghaohang" creationdate="20180130T100014Z">
        <seg>将任务添加到 project（如编译、测试）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Added a new domain object type: &lt;a0&gt;&lt;c1&gt;SourceSet&lt;/c1&gt;&lt;/a0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T024759Z" creationid="huanghaohang" creationdate="20180131T024759Z">
        <seg>添加了一个新的域对象类型： &lt;a0&gt; &lt;c1&gt;SourceSet&lt;/c1&gt; &lt;/a0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adding a JAR containing the classes of a source set:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T095303Z" creationid="haohang" creationdate="20180326T095303Z">
        <seg>添加一个包含源集的类的 JAR 包</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adding a description to a task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180201T021722Z" creationid="huanghaohang" creationdate="20180201T021722Z">
        <seg>向任务添加描述</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adding a test suite to run the tests in a source set:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T095449Z" creationid="haohang" creationdate="20180326T095449Z">
        <seg>添加测试套件以运行源集里的测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adding dependencies to a task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180201T021707Z" creationid="huanghaohang" creationdate="20180201T021707Z">
        <seg>向任务添加依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Additional dependencies for compiling tests.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T053819Z" creationid="haohang" creationdate="20180313T053819Z">
        <seg>用于编译测试代码的其他依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Additional dependencies for running tests only.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T053850Z" creationid="haohang" creationdate="20180313T053850Z">
        <seg>只用于运行测试的其他依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds C source compilation capabilities to a project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180205T143023Z" creationid="huanghaohang" creationdate="20180205T143023Z">
        <seg>向项目添加 C语言代码编译的功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds C++ source compilation capabilities to a project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180205T143035Z" creationid="huanghaohang" creationdate="20180205T143035Z">
        <seg>向项目添加 C++ 代码编译的功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds Java compilation, testing and bundling capabilities to a project. It serves as the basis for many of the other Gradle plugins. See also &lt;a0&gt;Chapter 7, &lt;i1&gt;Java Quickstart&lt;/i1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180205T140841Z" creationid="huanghaohang" creationdate="20180205T140841Z">
        <seg>向一个项目添加 Java 编译，测试和捆绑的功能。它是许多其他 Gradle 插件的基础服务。另请参阅《&lt;a0&gt;第7章，&lt;i1&gt;Java 快速入门&lt;/i1&gt;&lt;/a0&gt;》。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds Objective-C source compilation capabilities to a project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180205T143053Z" creationid="huanghaohang" creationdate="20180205T143053Z">
        <seg>向项目中添加 Objective-C 代码编译的功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds Objective-C++ source compilation capabilities to a project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180205T143108Z" creationid="huanghaohang" creationdate="20180205T143108Z">
        <seg>向项目中添加 Objective-C 代码编译的功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds a &lt;a0&gt;&lt;c1&gt;Wrapper&lt;/c1&gt;&lt;/a0&gt; task for generating Gradle wrapper files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180211T090745Z" creationid="huanghaohang" creationdate="20180211T090745Z">
        <seg>添加用于生成 Gradle wrapper 文件的 &lt;a0&gt;&lt;c1&gt;Wrapper&lt;/c1&gt;&lt;/a0&gt; 任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds all &lt;c0&gt;.java&lt;/c0&gt; files found in the Groovy source directories.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180407T003350Z" creationid="huanghaohang" creationdate="20180407T003350Z">
        <seg>添加所有在 Groovy 源目录中找到的 &lt;c0&gt;.java&lt;/c0&gt; 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds all source files found in the Groovy source directories.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180407T003358Z" creationid="huanghaohang" creationdate="20180407T003358Z">
        <seg>添加所有在 Groovy 的源目录中找到的源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds integration with Visual Studio.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180211T090658Z" creationid="huanghaohang" creationdate="20180211T090658Z">
        <seg>添加对 Visual Studio 的集成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds native assembly language capabilities to a project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180205T143000Z" creationid="huanghaohang" creationdate="20180205T142941Z">
        <seg>向项目添加本地汇编语言的功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds some shared convention properties to the project, relating to report generation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180218T092854Z" creationid="huanghaohang" creationdate="20180218T092830Z">
        <seg>将一些共享的约定属性添加到项目中，它们与报告的生成有关。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds support for assembling web application WAR files. See also &lt;a0&gt;Chapter 10, &lt;i1&gt;Web Application Quickstart&lt;/i1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180207T143704Z" creationid="huanghaohang" creationdate="20180207T143458Z">
        <seg>添加装配 web 应用程序的 WAR 文件的支持。另请参阅《&lt;a0&gt;第十章，&lt;i1&gt;Web 应用程序快速入门&lt;/i1&gt;&lt;/a0&gt;》。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds support for building Groovy projects. See also &lt;a0&gt;Chapter 9, &lt;i1&gt;Groovy Quickstart&lt;/i1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180205T140933Z" creationid="huanghaohang" creationdate="20180205T140933Z">
        <seg>添加对 Groovy 项目构建的支持。另请参阅《&lt;a0&gt;第九章，&lt;i1&gt;Groovy 快速入门&lt;/i1&gt;&lt;/a0&gt;》。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds support for building J2EE applications.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180206T014456Z" creationid="huanghaohang" creationdate="20180206T014456Z">
        <seg>添加用于构建 J2EE 应用程序的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds support for building OSGi bundles.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180207T143456Z" creationid="huanghaohang" creationdate="20180207T143456Z">
        <seg>添加构建 OSGi 包的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds support for building Scala projects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180205T140946Z" creationid="huanghaohang" creationdate="20180205T140946Z">
        <seg>添加对 Scala 项目构建的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds support for building ZIP and TAR distributions for a Java library.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180207T143842Z" creationid="huanghaohang" creationdate="20180207T143842Z">
        <seg>添加构建 Java 库的 ZIP 和 TAR 分发包的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds support for building ZIP and TAR distributions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180207T143747Z" creationid="huanghaohang" creationdate="20180207T143747Z">
        <seg>添加构建 ZIP 和 TAR 分发包的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds support for generating parsers using &lt;a0&gt;Antlr&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180205T141243Z" creationid="huanghaohang" creationdate="20180205T141243Z">
        <seg>添加对使用 &lt;a0&gt;Antlr&lt;/a0&gt; 作为生成解析器的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds support for including Windows resources in native binaries.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180205T143143Z" creationid="huanghaohang" creationdate="20180205T143143Z">
        <seg>添加对本地二进制文件包含 Windows 资源的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds support for initializing a new Gradle build. Handles converting a Maven build to a Gradle build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180211T090433Z" creationid="huanghaohang" creationdate="20180211T090218Z">
        <seg>添加用于初始化一个新 Gradle 构建的支持，以及处理从 Maven 构建到 Gradle 构建的转换。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds support for publishing artifacts to Maven repositories.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180207T143426Z" creationid="huanghaohang" creationdate="20180207T143426Z">
        <seg>添加将项目发布到 Maven 仓库的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds support for running &lt;a0&gt;CUnit&lt;/a0&gt; tests.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180211T090448Z" creationid="huanghaohang" creationdate="20180211T090448Z">
        <seg>添加用于运行 &lt;a0&gt;CUnit&lt;/a0&gt; 测试的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds tasks for running and bundling a Java project as a command-line application.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180206T014449Z" creationid="huanghaohang" creationdate="20180206T014449Z">
        <seg>添加了一些用于运行和捆绑 Java 项目的任务作为命令行应用程序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds the Groovy source sets concept to the project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180218T092812Z" creationid="huanghaohang" creationdate="20180218T092812Z">
        <seg>向项目添加 Groovy 源集的概念。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds the Scala source sets concept to the project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180218T092828Z" creationid="huanghaohang" creationdate="20180218T092828Z">
        <seg>向项目添加 Scala 源集的概念。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds the ability to digitally sign built files and artifacts.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180211T090018Z" creationid="huanghaohang" creationdate="20180211T090018Z">
        <seg>添加对生成的文件或工件进行数字签名的功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds the source sets concept to the project. Does not add any particular source sets.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180218T092753Z" creationid="huanghaohang" creationdate="20180218T092753Z">
        <seg>对项目添加源集的概念。它不会添加任何特定的源集。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds the standard lifecycle tasks and configures reasonable defaults for the archive tasks:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180218T022710Z" creationid="huanghaohang" creationdate="20180218T022710Z">
        <seg>添加标准的生命周期任务，并为归档任务默认进行合理的配置：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Again, this defines a task called &lt;c0&gt;hello&lt;/c0&gt; with a single closure to execute. We will use this task definition style throughout the user guide.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155544Z" creationid="95" creationdate="20170726T155319Z">
        <seg>这里再一次使用了一个闭包的方式来定义一个 &lt;c0&gt;hello&lt;/c0&gt; 任务去执行。在本用户指南中，我们还会再使用这种任务定义的风格。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All &lt;c0&gt;.java&lt;/c0&gt; files of this source set. Some plugins, such as the Groovy plugin, add additional Java source files to this collection.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180320T101502Z" creationid="haohang" creationdate="20180320T101257Z">
        <seg>该源集的所有 &lt;c0&gt;.java&lt;/c0&gt; 文件。有些插件，如Groovy 插件，会将其他 Java 源文件添加到此集合中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All Groovy source files of this source set. Contains only the &lt;c0&gt;.groovy&lt;/c0&gt; files found in the Groovy source directories.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T234947Z" creationid="huanghaohang" creationdate="20180406T234947Z">
        <seg>此源码集的所有 Groovy 源文件。仅包含在 Groovy 源目录中找到的 &lt;c0&gt;.groovy&lt;/c0&gt; 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All archive tasks in the project, including &lt;c0&gt;jar&lt;/c0&gt;. Some plugins add additional archive tasks to the project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T034850Z" creationid="haohang" creationdate="20180313T034602Z">
        <seg>项目中的所有归档任务，包括 &lt;c0&gt;jar&lt;/c0&gt;。有些插件会向项目添加另外的归档任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All enhanced objects in Gradle's domain model can hold extra user-defined properties. This includes, but is not limited to, projects, tasks, and source sets. Extra properties can be added, read and set via the owning object's &lt;c0&gt;ext&lt;/c0&gt; property. Alternatively, an &lt;c1&gt;ext&lt;/c1&gt; block can be used to add multiple properties at once.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T133515Z" creationid="huanghaohang" creationdate="20170913T133515Z">
        <seg>在Gradle域模型中，所有增强的对象都可以保存用户定义的额外属性。这包括但不限于项目（projects），任务（tasks）和源码集（source sets）。额外属性可以通过所属对象的&lt;c0&gt;ext&lt;/c0&gt;属性进行添加，读取和。此外，一个 &lt;c1&gt;ext&lt;/c1&gt;块可以一次添加多个属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All of this happened during the &lt;c0&gt;apply plugin: "java"&lt;/c0&gt; step. In the example above, we &lt;s1&gt;&lt;e2&gt;changed&lt;/e2&gt;&lt;/s1&gt; the desired location of the class files after this conventional configuration had been performed. Notice by the output with the example that the value for &lt;c3&gt;compileJava.destinationDir&lt;/c3&gt; also changed to reflect the configuration change.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T031612Z" creationid="huanghaohang" creationdate="20180131T025501Z">
        <seg>所有这一切都发生在 &lt;c0&gt;apply plugin: "java"&lt;/c0&gt; 这一步过程中。在上面的例子中，我们在约定配置被执行之后，&lt;s1&gt;&lt;e2&gt;修改了&lt;/e2&gt;&lt;/s1&gt;类文件的预定位置。通过这个例子的输出可以注意到，&lt;c3&gt;compileJava.destinationDir&lt;/c3&gt; 的值也改变了，以反映配置的变化。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All source files of this source set. This include all resource files and all Java source files. Some plugins, such as the Groovy plugin, add additional source files to this collection.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T094526Z" creationid="haohang" creationdate="20180326T094526Z">
        <seg>该源集的所有源文件，包括所有资源文件和 Java 源文件。有些插件（如 Groovy 插件）会将其他源文件添加到此集合中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All tasks which produce the compile classpath. This includes the &lt;c0&gt;jar&lt;/c0&gt; task for project dependencies included in the &lt;c1&gt;compile&lt;/c1&gt; configuration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180312T062804Z" creationid="haohang" creationdate="20180312T061836Z">
        <seg>所有产生编译类路径的任务，也包括了 &lt;c0&gt;jar&lt;/c0&gt; 任务，因为项目依赖被包含在 &lt;c1&gt;compile&lt;/c1&gt; 配置中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All tasks which produce the source set's compile classpath.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180312T073342Z" creationid="haohang" creationdate="20180312T073342Z">
        <seg>所有产生源集编译类路径的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All verification tasks in the project, including &lt;c0&gt;test&lt;/c0&gt;. Some plugins add additional verification tasks to the project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T035004Z" creationid="haohang" creationdate="20180313T034907Z">
        <seg>项目中的所有验证任务，包括 &lt;c0&gt;test&lt;/c0&gt;。有些插件会向项目添加另外的验证任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Alternatively, you can use the &lt;c0&gt;-p&lt;/c0&gt; option to specify the project directory to use. For multi-project builds you should use &lt;c1&gt;-p&lt;/c1&gt; option instead of &lt;c2&gt;-b&lt;/c2&gt; option.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T114222Z" creationid="huanghaohang" creationdate="20170909T114222Z">
        <seg>或者，你也可以使用&lt;c0&gt;-p&lt;/c0&gt;选项来指定使用哪一个项目目录。对于多项目构建，你应该使用&lt;c1&gt;-p&lt;/c1&gt;而不是&lt;c2&gt;-b&lt;/c2&gt;选项。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An &lt;c0&gt;AntBuilder&lt;/c0&gt; instance</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T132305Z" creationid="huanghaohang" creationdate="20170913T132305Z">
        <seg>&lt;c0&gt;AntBuilder&lt;/c0&gt;实例</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An HTML test report.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T042110Z" creationid="huanghaohang" creationdate="20180406T042110Z">
        <seg>一个 HTML 测试报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An external dependency is identified using &lt;c0&gt;group&lt;/c0&gt;, &lt;c1&gt;name&lt;/c1&gt; and &lt;c2&gt;version&lt;/c2&gt; attributes. Depending on which kind of repository you are using, &lt;c3&gt;group&lt;/c3&gt; and &lt;c4&gt;version&lt;/c4&gt; may be optional.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T043615Z" creationid="huanghaohang" creationdate="20170908T043428Z">
        <seg>一个外部依赖使用&lt;c0&gt;group&lt;/c0&gt;, &lt;c1&gt;name&lt;/c1&gt; 和 &lt;c2&gt;version&lt;/c2&gt; 属性来定义。根据你所使用的仓库类型不同， &lt;c3&gt;group&lt;/c3&gt; 和 &lt;c4&gt;version&lt;/c4&gt; 可能是可选的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Ant can be divided into two layers. The first layer is the Ant language. It provides the syntax for the &lt;c0&gt;build.xml&lt;/c0&gt;, the handling of the targets, special constructs like macrodefs, and so on. In other words, everything except the Ant tasks and types. Gradle understands this language, and allows you to import your Ant &lt;c1&gt;build.xml&lt;/c1&gt; directly into a Gradle project. You can then use the targets of your Ant build as if they were Gradle tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171210T152022Z" creationid="huanghaohang" creationdate="20171210T151111Z">
        <seg>Ant 可以分为两层。第一层是 Ant 语言，它为&lt;c0&gt;build.xml&lt;/c0&gt;，目标的处理，像宏定义这样的特殊结构等等提供了语法。换句话说，除了 Ant 任务和类型以外的所有东西都有。 Gradle 理解这种语言，并允许你把你的 Ant &lt;c1&gt;build.xml&lt;/c1&gt; 直接导入 Gradle 项目。然后，你可以像使用 Gradle 任务一样使用 Ant 构建里的目标。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Ant properties and references</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180314T015213Z" creationid="huanghaohang" creationdate="20180314T015213Z">
        <seg>Ant 属性和引用</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Ant tasks and builds as first class citizens.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T140635Z" creationid="95" creationdate="20170721T140635Z">
        <seg>Ant 任务和构建是Gradle的第一公民。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Ant tasks are first class citizens. Even more interesting, Ant projects are first class citizens as well. Gradle provides a deep import for any Ant project, turning Ant targets into native Gradle tasks at runtime. You can depend on them from Gradle, you can enhance them from Gradle, you can even declare dependencies on Gradle tasks in your build.xml. The same integration is provided for properties, paths, etc ...</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T060609Z" creationid="95" creationdate="20170723T060609Z">
        <seg>Ant任务是一级公民。更有趣的是，Ant 项目也是一级公民。Gradle为Ant项目提供了一种深度的导入，能够在运行时将Ant 目标转换为原生的Gradle任何。你可以从Gradle中依赖它们，增强它们，甚至在你的build.xml中定义对Gradle任何的依赖。同时，Gradle还为属性，路径等提供了同样的集成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Ant tasks are first-class citizens in Gradle. Gradle provides excellent integration for Ant tasks by simply relying on Groovy. Groovy is shipped with the fantastic &lt;c0&gt;AntBuilder&lt;/c0&gt;. Using Ant tasks from Gradle is as convenient and more powerful than using Ant tasks from a &lt;c1&gt;build.xml&lt;/c1&gt; file. From the example below, you can learn how to execute ant tasks and how to access ant properties:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170728T153726Z" creationid="95" creationdate="20170728T153726Z">
        <seg>Ant任务是Gradle的一级公民。Gradle通过简单地依赖Groovy，对Ant任务提供了强大的集成。Groovy自带了一个神奇的&lt;c0&gt;AntBuilder&lt;/c0&gt;，在Gradle中使用Ant任务比在&lt;c1&gt;build.xml&lt;/c1&gt;中调用更方便和强大。通过下面的例子，您可以学习到如何执行ant任务，以及如何访问ant属性：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>AntBuilder</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T132302Z" creationid="huanghaohang" creationdate="20170913T132302Z">
        <seg>AntBuilder</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Any method you call in your build script, which &lt;s0&gt;&lt;e1&gt;is not defined&lt;/e1&gt;&lt;/s0&gt; in the build script, is delegated to the &lt;c2&gt;Project&lt;/c2&gt; object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170912T130148Z" creationid="huanghaohang" creationdate="20170912T130148Z">
        <seg>在构建脚本中，你所调用的任何方法，如果在构建脚本中&lt;s0&gt;&lt;e1&gt;没有定义&lt;/e1&gt;&lt;/s0&gt;，那么它将被委托给&lt;c2&gt;Project&lt;/c2&gt;对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Any property you access in your build script, which &lt;s0&gt;&lt;e1&gt;is not defined&lt;/e1&gt;&lt;/s0&gt; in the build script, is delegated to the &lt;c2&gt;Project&lt;/c2&gt; object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170912T130159Z" creationid="huanghaohang" creationdate="20170912T130159Z">
        <seg>在构建脚本中，你所访问的任何一个属性，如果在构建脚本里&lt;s0&gt;&lt;e1&gt;没有定义&lt;/e1&gt;&lt;/s0&gt;，它也会被委托给&lt;c2&gt;Project&lt;/c2&gt;对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Applying a plugin to the project allows the plugin to extend the project's capabilities. It can do things such as:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180130T100023Z" creationid="huanghaohang" creationdate="20180130T095955Z">
        <seg>在项目中应用插件可以使插件扩展 project 的功能。它可以做的事情有：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Artifacts (e.g. jars) produced by this project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T053909Z" creationid="haohang" creationdate="20180313T053909Z">
        <seg>由本项目产生的工件（如 jar 包）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As an example, let's look at the &lt;c0&gt;Copy&lt;/c0&gt; task provided by Gradle. To create a &lt;c1&gt;Copy&lt;/c1&gt; task for your build, you can declare in your build script:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T122236Z" creationid="huanghaohang" creationdate="20170919T122056Z">
        <seg>举个例子，我们来看看Gradle提供的&lt;c0&gt;Copy&lt;/c0&gt; 任务。如果要创建一个&lt;c1&gt;Copy&lt;/c1&gt;任务，你可以在构建脚本中声明：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As mentioned before 'should run after' ordering rule will be ignored if it introduces an ordering cycle:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T081510Z" creationid="huanghaohang" creationdate="20170922T081504Z">
        <seg>如前所述，如果“应该在之后运行”的排序规则引入了排序循环，那么这条规则将被忽略。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As we have seen, Gradle is a general-purpose build tool. It can build pretty much anything you care to implement in your build script. Out-of-the-box, however, it doesn't build anything unless you add code to your build script to do so.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T010757Z" creationid="95" creationdate="20170729T031316Z">
        <seg>如你所见，Gradle是一个通用的构建工具。你在构建脚本中实现的几乎任何内容它都能够构建。它开箱即用，但是需要你在构建脚本中先写好代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As we later describe in full detail (see &lt;a0&gt;Chapter 55, &lt;i1&gt;The Build Lifecycle&lt;/i1&gt;&lt;/a0&gt;), Gradle has a configuration phase and an execution phase. After the configuration phase, Gradle knows all tasks that should be executed. Gradle offers you a hook to make use of this information. A use-case for this would be to check if the release task is among the tasks to be executed. Depending on this, you can assign different values to some variables.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T025119Z" creationid="95" creationdate="20170729T024301Z">
        <seg>正如我们后面会详细描述的的（见&lt;a0&gt;第五十五章，&lt;i1&gt;构建的生命周期&lt;/i1&gt;&lt;/a0&gt;），Gradle有一个配置阶段和一个执行阶段。在配置阶段后，Gradle会了解所有应该执行的任务。Gradle提供了一个钩子来让你使用这些信息。一个使用场景是，可以检查某个发布任务是否在这些要执行的任务当中。借由此，您可以为一些变量进行不同的赋值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As you might have noticed in the previous examples, there is a convenient notation for accessing an &lt;s0&gt;&lt;e1&gt;existing&lt;/e1&gt;&lt;/s0&gt; task. Each task is available as a property of the build script:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T141306Z" creationid="95" creationdate="20170727T141306Z">
        <seg>你可能在前面的例子中也注意到了，一个&lt;s0&gt;&lt;e1&gt;已存在&lt;/e1&gt;&lt;/s0&gt;任务会有一个便捷的符号用于访问。 每一个任务都可作为这个构建脚本中的一个属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As you probably have guessed, you can declare dependencies between your tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T160057Z" creationid="95" creationdate="20170726T160057Z">
        <seg>你应该也已经猜到了，我们可以声明任务之间的依赖关系。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Assembles all the archives in the project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T034904Z" creationid="haohang" creationdate="20180313T034904Z">
        <seg>组装项目中所有的归档文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Assembles and uploads the artifacts in the specified configuration. The task is added by the Base plugin which is implicitly applied by the Java plugin.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T040011Z" creationid="haohang" creationdate="20180313T040011Z">
        <seg>以指定的配置组装并上传工件。该任务由 Base 插件添加，并由 Java 插件隐式应用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Assembles the JAR file</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180312T062913Z" creationid="haohang" creationdate="20180312T062913Z">
        <seg>组装 JAR 文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Assembles the artifacts in the specified configuration. The task is added by the Base plugin which is implicitly applied by the Java plugin.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T040021Z" creationid="haohang" creationdate="20180313T035734Z">
        <seg>组装指定配置的工件。该任务由 Base 插件添加，并由 Java 插件隐式应用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Assembles the given source set's classes directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T033902Z" creationid="haohang" creationdate="20180313T033902Z">
        <seg>组装给定源集的类目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Assembles the production classes directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180312T062502Z" creationid="haohang" creationdate="20180312T062502Z">
        <seg>组装生产类目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Assembles the test classes directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180312T062906Z" creationid="haohang" creationdate="20180312T062906Z">
        <seg>组装测试类目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>At the heart of Gradle lies a rich extensible Domain Specific Language (DSL) based on Groovy. Gradle pushes declarative builds to the next level by providing declarative language elements that you can assemble as you like. Those elements also provide build-by-convention support for Java, Groovy, OSGi, Web and Scala projects. Even more, this declarative language is extensible. Add your own new language elements or enhance the existing ones. Thus providing concise, maintainable and comprehensible builds.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170722T020231Z" creationid="95" creationdate="20170722T015420Z">
        <seg>Gradle 的核心是基于Groovy的丰富可扩展的域特定语言（DSL）。Gradle通过提供可以根据需要进行组合的声明性语言元素，将声明性构建推到一个新的层次。这些元素还将为Java，Groovy，OSGi，Web和Scala项目提供基于约定的构建。更重要的是，这种声明性语言是可扩展的。可以通过添加你自己的新的语言元素，或者是增加现有的元素，从而提供简洁，可维护以及易于理解的构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>At the moment daemon is coupled with particular version of Gradle. This means that even if some daemon is idle but you are running the build with a different version of Gradle, a new daemon will be started. This also has a consequence for the &lt;c0&gt;--stop&lt;/c0&gt; command line instruction: You can only stop daemons that were started with the Gradle version you use when running &lt;c1&gt;--stop&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180116T143715Z" creationid="huanghaohang" creationdate="20180116T143715Z">
        <seg>此刻，守护进程将与特定版本的 Gradle 结合在一起。这意味着即使某些守护进程闲置，但是你正在使用不同版本的 Gradle 来运行构建，也会启动一个新的守护进程。这对于 &lt;c0&gt;--stop&lt;/c0&gt; 命令行指令也有一个后果：当运行 &lt;c1&gt;--stop&lt;/c1&gt; 时，你只能停止运行这个命令的 Gradle 版本所启动的守护进程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Automatically applies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180205T140559Z" creationid="huanghaohang" creationdate="20180205T140559Z">
        <seg>自动应用</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Because Gradle's build language is based on Groovy, and parts of Gradle are implemented in Groovy, Gradle already ships with a Groovy library (1.8.6 as of Gradle 1.6). Nevertheless, Groovy projects need to explicitly declare a Groovy dependency. This dependency will then be used on compile and runtime class paths. It will also be used to get hold of the Groovy compiler and Groovydoc tool, respectively.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T122451Z" creationid="huanghaohang" creationdate="20180406T122451Z">
        <seg>由于 Gradle 的构建语言基于 Groovy，并且部分的 Gradle 使用 Groovy 实现，所以 Gradle 已经附带了一个 Groovy 库（自 Gradle 1.6 起所带的 Groovy 库的版本是 1.8.6）。不过，Groovy 项目需要显式地声明一个 Groovy 依赖。这个依赖将被用于编译和运行时类路径。它也将分别用于获取 Groovy 编译器和 Groovydoc 工具。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Because each task is executed once only, executing &lt;s0&gt;&lt;c1&gt;gradle test test&lt;/c1&gt;&lt;/s0&gt; is exactly the same as executing &lt;s2&gt;&lt;c3&gt;gradle test&lt;/c3&gt;&lt;/s2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T031650Z" creationid="huanghaohang" creationdate="20170909T031205Z">
        <seg>由于每个任务只执行一次，执行&lt;s0&gt;&lt;c1&gt;gradle test test&lt;/c1&gt;&lt;/s0&gt;与执行&lt;s2&gt;&lt;c3&gt;gradle test&lt;/c3&gt;&lt;/s2&gt;的结果是完全相同的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Before a task is executed for the first time, Gradle takes a snapshot of the inputs. This snapshot contains the set of input files and a hash of the contents of each file. Gradle then executes the task. If the task completes successfully, Gradle takes a snapshot of the outputs. This snapshot contains the set of output files and a hash of the contents of each file. Gradle persists both snapshots for next time the task is executed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T010859Z" creationid="huanghaohang" creationdate="20170923T004834Z">
        <seg>在第一次执行任务之前，Gradle会获取输入的快照。此快照包含一组输入文件和每个文件的内容的散列。然后Gradle执行任务。如果任务成功完成，则Gradle会对输出进行快照。此快照包含一组输出文件和每个文件的内容的散列。 Gradle会保存这两个快照，用于这个任务下一次的执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Below four tasks are defined. Both &lt;c0&gt;dist&lt;/c0&gt; and &lt;c1&gt;test&lt;/c1&gt; depend on the &lt;c2&gt;compile&lt;/c2&gt; task. Running &lt;s3&gt;&lt;c4&gt;gradle dist test&lt;/c4&gt;&lt;/s3&gt; for this build script results in the &lt;c5&gt;compile&lt;/c5&gt; task being executed only once.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T031022Z" creationid="huanghaohang" creationdate="20170909T031022Z">
        <seg>下面定义了四个任务，其中&lt;c0&gt;dist&lt;/c0&gt;和&lt;c1&gt;test&lt;/c1&gt;都依赖于&lt;c2&gt;compile&lt;/c2&gt;任务。对于这个构建脚本，运行&lt;s3&gt;&lt;c4&gt;gradle dist test&lt;/c4&gt;&lt;/s3&gt;只会使&lt;c5&gt;compile&lt;/c5&gt;任务被执行一次。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Both &lt;c0&gt;println&lt;/c0&gt; statements print out the same property. The first uses auto-delegation to the &lt;c1&gt;Project&lt;/c1&gt; object, for properties not defined in the build script. The other statement uses the &lt;c2&gt;project&lt;/c2&gt; property available to any build script, which returns the associated &lt;c3&gt;Project&lt;/c3&gt; object. Only if you define a property or a method which has the same name as a member of the &lt;c4&gt;Project&lt;/c4&gt; object, you need to use the &lt;c5&gt;project&lt;/c5&gt; property.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T131937Z" creationid="huanghaohang" creationdate="20170912T130332Z">
        <seg>这两个&lt;c0&gt;println&lt;/c0&gt;语句打印出相同的属性。在构建脚本中未定义的属性，第一次使用时会自动委派到&lt;c1&gt;Project&lt;/c1&gt;对象。另一个语句使用了可用于任何构建脚本的&lt;c2&gt;project&lt;/c2&gt;属性，这个属性返回关联的&lt;c3&gt;Project&lt;/c3&gt;对象。只有当你定义的属性或方法与这个&lt;c4&gt;Project&lt;/c4&gt;对象的成员方法或变量重名时，你才需要使用&lt;c5&gt;project&lt;/c5&gt;属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Build Script Basics</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T031735Z" creationid="huanghaohang" creationdate="20170927T031735Z">
        <seg>构建脚本基础</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Build layout</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T154433Z" creationid="95" creationdate="20170731T154433Z">
        <seg>构建布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Build scripts are code</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T031813Z" creationid="huanghaohang" creationdate="20170927T031813Z">
        <seg>构建脚本即代码</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>BuildListener</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180107T144455Z" creationid="huanghaohang" creationdate="20180107T144455Z">
        <seg>BuildListener</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Building a WAR file</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233826Z" creationid="huanghaohang" creationdate="20171206T233826Z">
        <seg>构建一个 WAR 文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Builds the JAR</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T012851Z" creationid="huanghaohang" creationdate="20170910T012851Z">
        <seg>Builds the JAR</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Builds which utilize a buildSrc directory will generate a second profile report for buildSrc in the &lt;c0&gt;buildSrc/build&lt;/c0&gt; directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T031129Z" creationid="huanghaohang" creationdate="20170910T030957Z">
        <seg>使用buildSrc目录的构建为buildSrc在&lt;c0&gt;buildSrc/build&lt;/c0&gt;目录里生成第二个分析报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But we never lock you in!</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T135020Z" creationid="95" creationdate="20170721T134611Z">
        <seg>但我们不会去限定你。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default, Gradle does not define any repositories. You need to define at least one before you can use external dependencies. One option is use the Maven central repository:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T044736Z" creationid="huanghaohang" creationdate="20170908T044736Z">
        <seg>默认情况下，Gradle没有定义任何仓库。需要你至少去定义一个，然后才能使用外部依赖。我们通常使用的有Maven中央仓库：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default, Gradle will abort execution and fail the build as soon as any task fails. This allows the build to complete sooner, but hides other failures that would have occurred. In order to discover as many failures as possible in a single build execution, you can use the &lt;c0&gt;--continue&lt;/c0&gt; option.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T074040Z" creationid="huanghaohang" creationdate="20170909T074040Z">
        <seg>默认情况下，只要有任务失败，Gradle就将中断执行让构建失败。这样做会使构建更快地结束，但也会让其他可能发生的失败不被发现。因此你可以使用&lt;c0&gt;--continue&lt;/c0&gt;选项来在单个构建执行中发现尽可能多的失败。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default, the Java compiler runs in the Gradle process. Setting &lt;c0&gt;options.fork&lt;/c0&gt; to &lt;c1&gt;true&lt;/c1&gt; causes compilation to occur in a separate process. In the case of the Ant javac task, this means that a new process will be forked for each compile task, which can slow down compilation. Conversely, Gradle's direct compiler integration (see above) will reuse the same compiler process as much as possible. In both cases, all fork options specified with &lt;c2&gt;options.forkOptions&lt;/c2&gt; will be honored.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180327T102445Z" creationid="haohang" creationdate="20180327T101708Z">
        <seg>默认情况下，Java 编译器在 Gradle 进程中运行。将 &lt;c0&gt;options.fork&lt;/c0&gt; 设置为 &lt;c1&gt;true&lt;/c1&gt; 将使得在一个单独的进程中进行编译。在Ant javac 任务的情况中，意味着每个编译任务都会 fork 一个新进程，这样就会使编译变慢。相反，Gradle 的直接编译器集成（见上文）将尽可能地重用相同的编译器进程。在这两种情况下，使用 &lt;c2&gt;options.forkOptions&lt;/c2&gt; 指定的所有 fork 选项都将得到重视。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default, this report shows only those tasks which have been assigned to a task group. You can do this by setting the &lt;c0&gt;group&lt;/c0&gt; property for the task. You can also set the &lt;c1&gt;description&lt;/c1&gt; property, to provide a description to be included in the report.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T011914Z" creationid="huanghaohang" creationdate="20170910T011716Z">
        <seg>默认情况下，此报告仅显示已分配给任务组的任务。你可以通过为任务设置&lt;c0&gt;group&lt;/c0&gt;属性来实现它。你也可以通过设置&lt;c1&gt;description&lt;/c1&gt;属性，来提供包含在报告中的描述。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By requiring special syntax for adding a property, Gradle can fail fast when an attempt is made to set a (predefined or extra) property but the property is misspelled or does not exist. Extra properties can be accessed from anywhere their owning object can be accessed, giving them a wider scope than local variables. Extra properties on a project are visible from its subprojects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T135456Z" creationid="huanghaohang" creationdate="20170913T135209Z">
        <seg>通过添加属性所要求的特殊语法，Gradle 可以在你试图设置（预定义的或额外的） 属性，但拼写错误或不存在时快速失败。额外属性在任何能够访问它们所属对象的地方都可以被访问，这使它们有着比局部变量更广的作用域。父项目上的额外属性，在子项目中也可以访问。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By using 'must run after" ordering rule you can specify that &lt;c0&gt;taskB&lt;/c0&gt; must always run after &lt;c1&gt;taskA&lt;/c1&gt;, whenever both &lt;c2&gt;taskA&lt;/c2&gt; and &lt;c3&gt;taskB&lt;/c3&gt; are scheduled for execution. This is expressed as &lt;c4&gt;taskB.mustRunAfter(taskA)&lt;/c4&gt;. The 'should run after' ordering rule is similar but less strict as it will be ignored in two situations. Firstly if using that rule introduces an ordering cycle. Secondly when using parallel execution and all dependencies of a task have been satisfied apart from should run after then this task will be run regardless of weather its 'should run after' dependencies have been run or not. You would use 'should run after' rule when ordering preference for faster feedback, where the ordering is helpful but not strictly required.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T031931Z" creationid="huanghaohang" creationdate="20170922T030758Z">
        <seg>通过使用“必须在之后运行”的排序规则，你可以指定&lt;c0&gt;taskB&lt;/c0&gt;必须总是运行在&lt;c1&gt;taskA&lt;/c1&gt;之后，无论&lt;c2&gt;taskA&lt;/c2&gt;和&lt;c3&gt;taskB&lt;/c3&gt;这两者在什么时候调度执行。这被表示为&lt;c4&gt;taskB.mustRunAfter(taskA)&lt;/c4&gt;。 “应该运行”的排序规则与其类似，但没有那么严格，因为它在两种情况下会被忽略：首先，如果使用该规则引入了排序循环；其次，当使用并行执行时，一个任务除了应该在之后运行这个条件之外，它的所有依赖都已经满足，那么这个任务就会运行，不管它的“应该在之后运行”的依赖关系是否已经运行或。当对任务的排序倾向于更快的反馈时，你应该使用“应该在之后运行”的规则，它对于排序很有帮助但不会严格要求。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Caching</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T034115Z" creationid="huanghaohang" creationdate="20180131T034115Z">
        <seg>缓存</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Change</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T235105Z" creationid="huanghaohang" creationdate="20180406T235105Z">
        <seg>修改的内容</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 1. Introduction</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072252Z" creationid="haohang" creationdate="20170720T072252Z">
        <seg>第一章. 介绍</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 10, &lt;i0&gt;Web Application Quickstart&lt;/i0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T081015Z" creationid="95" creationdate="20170723T081015Z">
        <seg>第十章， &lt;i0&gt;Web 应用程序快速入门&lt;/i0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 10. Web Application Quickstart</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T011058Z" creationid="huanghaohang" creationdate="20170908T052100Z">
        <seg>第十章. Web 应用程序快速入门</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 11. Using the Gradle Command-Line</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T004301Z" creationid="huanghaohang" creationdate="20170909T004301Z">
        <seg>第十一章. 使用Gradle命令行</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 12. Using the Gradle Graphical User Interface</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T030126Z" creationid="huanghaohang" creationdate="20170909T030126Z">
        <seg>第十二章. 使用Gradle 图形用户界面</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 13. Writing Build Scripts</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170911T143154Z" creationid="huanghaohang" creationdate="20170911T143154Z">
        <seg>第十三章. 编写构建脚本</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 14. Tutorial - 'This and That'</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170914T153557Z" creationid="huanghaohang" creationdate="20170914T153557Z">
        <seg>第十四章. 教程 - 杂七杂八</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 15. More about Tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170917T131929Z" creationid="huanghaohang" creationdate="20170917T131929Z">
        <seg>第十五章. 任务详述</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 16. Working With Files</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170918T151611Z" creationid="huanghaohang" creationdate="20170918T151611Z">
        <seg>第十六章. 使用文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 17. Using Ant from Gradle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171210T151108Z" creationid="huanghaohang" creationdate="20170923T051025Z">
        <seg>第十七章. 从 Gradle 中使用 Ant</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 18. Logging</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171014T125101Z" creationid="huanghaohang" creationdate="20171014T125101Z">
        <seg>第十八章. 日志</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 19. The Gradle Daemon</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T095020Z" creationid="huanghaohang" creationdate="20180105T095020Z">
        <seg>第十九章. Gradle 守护进程</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 2. Overview</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072513Z" creationid="haohang" creationdate="20170720T072513Z">
        <seg>第二章. 概述</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 20. The Build Environment</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180108T133212Z" creationid="huanghaohang" creationdate="20180108T133212Z">
        <seg>第二十章. 构建环境</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 21. Gradle Plugins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180123T123628Z" creationid="huanghaohang" creationdate="20180123T123628Z">
        <seg>第二十一章. Gradle 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 22. Standard Gradle plugins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180130T081455Z" creationid="huanghaohang" creationdate="20180130T081455Z">
        <seg>第二十二章. 标准的 Gradle 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 23. The Java Plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180201T021928Z" creationid="huanghaohang" creationdate="20180201T021928Z">
        <seg>第二十三章. Java 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 24. The Groovy Plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180218T153214Z" creationid="huanghaohang" creationdate="20180218T153214Z">
        <seg>第二十四章. Groovy 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 25. The Scala Plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T113553Z" creationid="huanghaohang" creationdate="20180406T113553Z">
        <seg>第二十五章. Scala 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 3. Tutorials</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T072420Z" creationid="95" creationdate="20170721T165938Z">
        <seg>第三章. 教程</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 4, &lt;i0&gt;Installing Gradle&lt;/i0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T072730Z" creationid="95" creationdate="20170723T072609Z">
        <seg>第四章，&lt;i0&gt; 安装Gradle&lt;/i0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 4. Installing Gradle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T072502Z" creationid="95" creationdate="20170723T072433Z">
        <seg>第四章. 安装Gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 40. The ANTLR Plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171014T125102Z" creationid="huanghaohang" creationdate="20171014T125102Z">
        <seg>第四十章. ANTLR 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 42. The Announce Plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072240Z" creationid="haohang" creationdate="20170720T072240Z">
        <seg>第四十二章. Announce插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 5. Troubleshooting</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T081157Z" creationid="95" creationdate="20170723T081157Z">
        <seg>第五章. 疑难解答</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 6, &lt;i0&gt;Build Script Basics&lt;/i0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T072726Z" creationid="95" creationdate="20170723T072726Z">
        <seg>第六章， &lt;i0&gt;构建脚本基础&lt;/i0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 6. Build Script Basics</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T122508Z" creationid="95" creationdate="20170723T072427Z">
        <seg>第六章. 构建脚本基础</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 7, &lt;i0&gt;Java Quickstart&lt;/i0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170801T014527Z" creationid="95" creationdate="20170723T072829Z">
        <seg>第七章，  &lt;i0&gt;Java 快速入门&lt;/i0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 7. Java Quickstart</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T031231Z" creationid="95" creationdate="20170723T122517Z">
        <seg>第七章. Java 快速入门</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 8, &lt;i0&gt;Dependency Management Basics&lt;/i0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T080804Z" creationid="95" creationdate="20170723T080804Z">
        <seg>第八章， &lt;i0&gt;依赖管理基础&lt;/i0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 8. Dependency Management Basics</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T130441Z" creationid="95" creationdate="20170729T031243Z">
        <seg>第八章. 依赖管理基础</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 9, &lt;i0&gt;Groovy Quickstart&lt;/i0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T080844Z" creationid="95" creationdate="20170723T080844Z">
        <seg>第九章. &lt;i0&gt;Groovy快速入门&lt;/i0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 9. Groovy Quickstart</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T130455Z" creationid="95" creationdate="20170803T130455Z">
        <seg>第九章. Groovy 快速入门</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Class or a super class contain a method annotated with &lt;c0&gt;@Test&lt;/c0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180405T155309Z" creationid="huanghaohang" creationdate="20180405T155309Z">
        <seg>类或超类含有一个带 &lt;c0&gt;@Test&lt;/c0&gt; 注解的方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Class or a super class extends &lt;c0&gt;TestCase&lt;/c0&gt; or &lt;c1&gt;GroovyTestCase&lt;/c1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180405T155234Z" creationid="huanghaohang" creationdate="20180405T155234Z">
        <seg>类或超类继承自 &lt;c0&gt;TestCase&lt;/c0&gt; 或 &lt;c1&gt;GroovyTestCase&lt;/c1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Class or a super class is annotated with &lt;c0&gt;@RunWith&lt;/c0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180405T155258Z" creationid="huanghaohang" creationdate="20180405T155258Z">
        <seg>类或超类使用了 &lt;c0&gt;@RunWith&lt;/c0&gt; 注解</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Command Line</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T234030Z" creationid="huanghaohang" creationdate="20171206T234030Z">
        <seg>命令行</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Command line option "--tests" is provided to conveniently set the test filter. Especially useful for the classic 'single test method execution' use case. When the command line option is used, the inclusion filters declared in the build script are ignored.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180405T131118Z" creationid="huanghaohang" creationdate="20180405T131118Z">
        <seg>提供了“--tests”命令行选项，以方便设置测试过滤器。特别适用于传统的“单一测试方法执行”用例。当使用该命令行选项时，构建脚本中声明的包含过滤器将被忽略。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Compile time dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T053736Z" creationid="haohang" creationdate="20180313T053736Z">
        <seg>编译时依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Compile time dependencies for the given source set</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T054318Z" creationid="haohang" creationdate="20180313T054318Z">
        <seg>给定源集的编译时依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Compiles and jars your code, but does not run the unit tests. Other plugins add more artifacts to this task. For example, if you use the War plugin, this task will also build the WAR file for your project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T014612Z" creationid="95" creationdate="20170730T014612Z">
        <seg>编译代码并打成jar包，但不会运行单元测试。其他的插件会向这个任务添加更多的工件。例如，如果你使用 War 插件，这个任务也会对你的项目构建出 WAR 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Compiles and tests your code. Other plugins add more checks to this task. For example, if you use the &lt;c0&gt;checkstyle&lt;/c0&gt; plugin, this task will also run Checkstyle against your source code.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T014719Z" creationid="95" creationdate="20170730T014719Z">
        <seg>编译和测试代码。其他的插件会向这一任务添加更多的检查。例如，如果你使用 &lt;c0&gt;checkstyle&lt;/c0&gt; 插件，这一任务就会针对你的源代码运行 Checkstyle 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Compiles production Groovy source files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T120822Z" creationid="huanghaohang" creationdate="20180406T120748Z">
        <seg>编译 Groovy 的生产源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Compiles production Java source files using javac.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180312T062332Z" creationid="haohang" creationdate="20180312T062332Z">
        <seg>使用 javac 编译 Java 生产源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Compiles test Groovy source files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T120838Z" creationid="huanghaohang" creationdate="20180406T120838Z">
        <seg>编译 Groovy 的测试源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Compiles test Java source files using javac.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180312T062811Z" creationid="haohang" creationdate="20180312T062811Z">
        <seg>使用 javac 编译 Java 测试源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Compiles the given source set's Groovy source files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T120905Z" creationid="huanghaohang" creationdate="20180406T120905Z">
        <seg>编译给定源集里的 Groovy 源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Compiles the given source set's Java source files using javac.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180312T073410Z" creationid="haohang" creationdate="20180312T073410Z">
        <seg>使用 javac 编译给定的源集中的 Java 源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Configure by DAG</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T031936Z" creationid="huanghaohang" creationdate="20170927T031936Z">
        <seg>使用 DAG 配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Configured a &lt;c0&gt;main&lt;/c0&gt; source set with default (i.e. conventional) values for properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T024850Z" creationid="huanghaohang" creationdate="20180131T024850Z">
        <seg>通过属性的默认值（即约定值）配置了一个 &lt;c0&gt;main&lt;/c0&gt; 源码集</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Configured supporting tasks to use these properties to perform work</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T024942Z" creationid="huanghaohang" creationdate="20180131T024942Z">
        <seg>配置了支持任务来使用这些属性执行工作</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Configuring an HTTP proxy (for example for downloading dependencies) is done via standard JVM system properties. These properties can be set directly in the build script; for example &lt;c0&gt; System.setProperty('http.proxyHost', 'www.somehost.org')&lt;/c0&gt; for the proxy host. Alternatively, the properties can be specified in a gradle.properties file, either in the build's root directory or in the Gradle home directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180130T073459Z" creationid="huanghaohang" creationdate="20180130T073214Z">
        <seg>配置 HTTP 代理（例如用于下载依赖）是通过标准的 JVM 系统属性完成的。这些属性可以直接在构建脚本中设置；例如通过&lt;c0&gt; System.setProperty('http.proxyHost', 'www.somehost.org')&lt;/c0&gt; 来设置代理主机。或者，可以在构建的根目录或 Gradle 主目录中的 gradle.properties 文件中指定这些属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Configuring arbitrary objects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T034100Z" creationid="huanghaohang" creationdate="20180131T034100Z">
        <seg>配置任意对象</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Configuring arbitrary objects using an external script</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T034110Z" creationid="huanghaohang" creationdate="20180131T034110Z">
        <seg>使用外部脚本配置任意对象</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Configuring tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180201T021658Z" creationid="huanghaohang" creationdate="20180201T021658Z">
        <seg>配置任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Configuring the project using an external build script</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T034053Z" creationid="huanghaohang" creationdate="20180131T034053Z">
        <seg>使用外部构建脚本配置项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Consider the case where another task is to consume the classes files. If this task is configured to use the value from &lt;c0&gt;sourceSets.main.output.classesDir&lt;/c0&gt;, then changing it in this location will update both the &lt;c1&gt;compileJava&lt;/c1&gt; task and this other consumer task whenever it is changed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T032009Z" creationid="huanghaohang" creationdate="20180131T032009Z">
        <seg>考虑一下有另一个任务使用到类文件的情况。如果这个任务被配置为使用 &lt;c0&gt;sourceSets.main.output.classesDir&lt;/c0&gt; 的值，那么在这里修改它就会同时更新 &lt;c1&gt;compileJava&lt;/c1&gt; 任务和那另一个任务，不管它的值是什么时候改的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Contains the project's source sets.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T062406Z" creationid="haohang" creationdate="20180313T062406Z">
        <seg>包含项目的源集。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Content assistance in the IDE</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180108T133945Z" creationid="huanghaohang" creationdate="20180108T133945Z">
        <seg>在 IDE 中的内容帮助</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Continuing the build when a failure occurs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233919Z" creationid="huanghaohang" creationdate="20171206T233919Z">
        <seg>失败后继续构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Copies of this document may be made for your own use and for distribution to others, provided that you do not charge any fee for such copies and further provided that each copy contains this Copyright Notice, whether distributed in print or electronically.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072426Z" creationid="haohang" creationdate="20170720T072343Z">
        <seg>本文件的副本，无论其是以印刷版本形式还是电子版本形式，也无论是您自用，还是分发给他人，均为免费，并且每一份副本均需带有版权声明。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Copies production resources into the production classes directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180312T062402Z" creationid="haohang" creationdate="20180312T062402Z">
        <seg>把生产资源文件复制到生产类目录中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Copies test resources into the test classes directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180312T062824Z" creationid="haohang" creationdate="20180312T062824Z">
        <seg>把测试资源文件拷贝到测试类目录中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Copies the given source set's resources into the classes directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180312T073435Z" creationid="haohang" creationdate="20180312T073435Z">
        <seg>将给定源集的资源文件复制到类目录中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Copy</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180312T062336Z" creationid="haohang" creationdate="20180312T062336Z">
        <seg>Copy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Copy myCopy = task(myCopy, type: Copy)
myCopy.from &lt;s0&gt;'resources'&lt;/s0&gt;
myCopy.into &lt;s1&gt;'target'&lt;/s1&gt;
myCopy.include(&lt;s2&gt;'**/*.txt'&lt;/s2&gt;, &lt;s3&gt;'**/*.xml'&lt;/s3&gt;, &lt;s4&gt;'**/*.properties'&lt;/s4&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T124321Z" creationid="huanghaohang" creationdate="20170919T124321Z">
        <seg>Copy myCopy = task(myCopy, type: Copy)
myCopy.from &lt;s0&gt;'resources'&lt;/s0&gt;
myCopy.into &lt;s1&gt;'target'&lt;/s1&gt;
myCopy.include(&lt;s2&gt;'**/*.txt'&lt;/s2&gt;, &lt;s3&gt;'**/*.xml'&lt;/s3&gt;, &lt;s4&gt;'**/*.properties'&lt;/s4&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Copy specs form a hierarchy. A copy spec inherits its destination path, include patterns, exclude patterns, copy actions, name mappings and filters.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T060911Z" creationid="huanghaohang" creationdate="20171126T060730Z">
        <seg>复制规范用于形成一个层次结构。一个复制规范继承其目标路径、包含模式、排除模式、复制操作、名称映射和过滤器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Copying files</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180218T093056Z" creationid="huanghaohang" creationdate="20180218T093056Z">
        <seg>复制文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Copyright © 2007-2012 Hans Dockter, Adam Murdoch</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072305Z" creationid="haohang" creationdate="20170720T072305Z">
        <seg>版权所有 © 2007-2012 Hans Dockter, Adam Murdoch</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Creating archives</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180218T093126Z" creationid="huanghaohang" creationdate="20180218T093126Z">
        <seg>创建归档文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Current Directory</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170911T145901Z" creationid="huanghaohang" creationdate="20170911T145901Z">
        <seg>当前目录</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>DEBUG</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T221543Z" creationid="huanghaohang" creationdate="20180105T221543Z">
        <seg>DEBUG</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>DEBUG and higher (that is, all log messages)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T221945Z" creationid="huanghaohang" creationdate="20180105T221945Z">
        <seg>DEBUG 及更高（即所有日志消息）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Debug messages</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T221544Z" creationid="huanghaohang" creationdate="20180105T221544Z">
        <seg>调试消息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Declarative builds and build-by-convention</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170722T015356Z" creationid="95" creationdate="20170722T015356Z">
        <seg>声明式的构建以及基于约定的构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Declaring variables</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T032838Z" creationid="huanghaohang" creationdate="20180131T032838Z">
        <seg>声明变量</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Declaring your dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233648Z" creationid="huanghaohang" creationdate="20171206T233648Z">
        <seg>声明依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Deep API</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170722T023155Z" creationid="95" creationdate="20170722T023155Z">
        <seg>深度 API</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Default Value</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T132110Z" creationid="huanghaohang" creationdate="20170913T132110Z">
        <seg>默认值</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Default tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T031922Z" creationid="huanghaohang" creationdate="20170927T031922Z">
        <seg>默认任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Default value</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T232616Z" creationid="huanghaohang" creationdate="20171206T232616Z">
        <seg>默认值</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Defines the root directory of your Gradle project (typically where build.gradle is located).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170911T150003Z" creationid="huanghaohang" creationdate="20170911T145903Z">
        <seg>定义了 Gradle 项目的根目录（通常是 build.gradle 所在的位置）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Defining tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180201T021646Z" creationid="huanghaohang" creationdate="20180201T021646Z">
        <seg>定义任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Delete</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180312T063411Z" creationid="haohang" creationdate="20180312T063411Z">
        <seg>Delete</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Deletes the &lt;c0&gt;build&lt;/c0&gt; directory, removing all built files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T014417Z" creationid="95" creationdate="20170730T014417Z">
        <seg>删除&lt;c0&gt;build&lt;/c0&gt;目录，移除所有构建的文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Deletes the output files produced by the specified task. For example &lt;c0&gt;cleanJar&lt;/c0&gt; will delete the JAR file created by the &lt;c1&gt;jar&lt;/c1&gt; task, and &lt;c2&gt;cleanTest&lt;/c2&gt; will delete the test results created by the &lt;c3&gt;test&lt;/c3&gt; task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180312T073237Z" creationid="haohang" creationdate="20180312T063424Z">
        <seg>删除指定任务生成的输出文件。例如 &lt;c0&gt;cleanJar&lt;/c0&gt; 将删除由该 &lt;c1&gt;jar&lt;/c1&gt; 任务创建的 JAR 文件，而 &lt;c2&gt;cleanTest&lt;/c2&gt; 将删除由该 &lt;c3&gt;test&lt;/c3&gt; 任务创建的测试结果。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Deletes the project build directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180312T063420Z" creationid="haohang" creationdate="20180312T063420Z">
        <seg>删除项目的构建目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Dependency Management Basics</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233617Z" creationid="huanghaohang" creationdate="20171206T233617Z">
        <seg>依赖管理基础</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Dependency configurations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233656Z" creationid="huanghaohang" creationdate="20171206T233656Z">
        <seg>依赖配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Dependency configurations are also used to publish files.&lt;s0&gt;[&lt;a1&gt;3&lt;/a1&gt;]&lt;/s0&gt; We call these files &lt;e2&gt;publication artifacts&lt;/e2&gt;, or usually just &lt;e3&gt;artifacts&lt;/e3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T050136Z" creationid="huanghaohang" creationdate="20170908T050044Z">
        <seg>依赖配置也用于发布文件。&lt;s0&gt;[&lt;a1&gt;3&lt;/a1&gt;]&lt;/s0&gt;我们称这些文件&lt;e2&gt;发布构件&lt;/e2&gt;，通常也叫做&lt;e3&gt;构件&lt;/e3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Depends on</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180312T061334Z" creationid="haohang" creationdate="20180312T061334Z">
        <seg>依赖于</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Depends on the archive type, and for TAR files, the compression type as well: &lt;c0&gt;zip&lt;/c0&gt;, &lt;c1&gt;jar&lt;/c1&gt;, &lt;c2&gt;war&lt;/c2&gt;, &lt;c3&gt;tar&lt;/c3&gt;, &lt;c4&gt;tgz&lt;/c4&gt; or &lt;c5&gt;tbz2&lt;/c5&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233319Z" creationid="huanghaohang" creationdate="20171206T233319Z">
        <seg>依赖于归档类型，并且对于TAR文件，可以是以下压缩类型：&lt;c0&gt;zip&lt;/c0&gt;, &lt;c1&gt;jar&lt;/c1&gt;, &lt;c2&gt;war&lt;/c2&gt;, &lt;c3&gt;tar&lt;/c3&gt;, &lt;c4&gt;tgz&lt;/c4&gt; 或 &lt;c5&gt;tbz2&lt;/c5&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Depends on the archive type. JARs and WARs are generated into &lt;c0&gt;&lt;e1&gt;&lt;c2&gt;project.buildDir&lt;/c2&gt;&lt;/e1&gt;/libraries&lt;/c0&gt;. ZIPs and TARs are generated into &lt;c3&gt;&lt;e4&gt;&lt;c5&gt;project.buildDir&lt;/c5&gt;&lt;/e4&gt;/distributions&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233108Z" creationid="huanghaohang" creationdate="20171206T233108Z">
        <seg>依赖于存档类型。 JAR 和 WAR 会生成到&lt;c0&gt;&lt;e1&gt;&lt;c2&gt;project.buildDir&lt;/c2&gt;&lt;/e1&gt;/libraries&lt;/c0&gt;中。 ZIP 和 TAR 则会生成到&lt;c3&gt;&lt;e4&gt;&lt;c5&gt;project.buildDir&lt;/c5&gt;&lt;/e4&gt;/distributions&lt;/c3&gt;中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Deploys your web application to a Jetty web container embedded in the build. See also &lt;a0&gt;Chapter 10, &lt;i1&gt;Web Application Quickstart&lt;/i1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180207T143404Z" creationid="huanghaohang" creationdate="20180207T143256Z">
        <seg>在构建中将你的 web 应用程序部署到内嵌的 Jetty web 容器中。另请参阅《&lt;a0&gt;第十章，&lt;i1&gt;Web 应用程序快速入门&lt;/i1&gt;&lt;/a0&gt;》。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Describes how to install Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T072817Z" creationid="95" creationdate="20170723T072621Z">
        <seg>介绍如何安装Gradle。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Description</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T232622Z" creationid="huanghaohang" creationdate="20171206T232622Z">
        <seg>描述</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Did we mention faster builds? The daemon can potentially preemptively download dependencies or check for new versions of snapshot dependencies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180109T141702Z" creationid="huanghaohang" creationdate="20180109T140348Z">
        <seg>我们提到更快的构建了吗？守护进程可以预先下载依赖项或检查 snapshot 依赖的新版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Different teams prefer different ways to manage their external dependencies. Gradle provides convenient support for any strategy. From transitive dependency management with remote Maven and Ivy repositories to jars or dirs on the local file system.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T034310Z" creationid="95" creationdate="20170723T034054Z">
        <seg>不同的团队喜欢使用不同的方式来管理他们的外部依赖。从远程Maven和Ivy仓库的传递依赖管理到本地文件系统上的jar包或目录，Gradle为任何策略都提供了方便的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Directory</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T052936Z" creationid="haohang" creationdate="20180313T052936Z">
        <seg>目录</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Directory creation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T034017Z" creationid="huanghaohang" creationdate="20180131T034017Z">
        <seg>创建目录</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>DocBook XSL Stylesheets V1.75.2</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072248Z" creationid="haohang" creationdate="20170720T072248Z">
        <seg>DocBook XSL Stylesheets V1.75.2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Does the same as the eclipse plugin plus generates eclipse WTP (Web Tools Platform) configuration files. After importing to eclipse your war/ear projects should be configured to work with WTP. See also &lt;a0&gt;Chapter 7, &lt;i1&gt;Java Quickstart&lt;/i1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180210T140404Z" creationid="huanghaohang" creationdate="20180210T135921Z">
        <seg>与 eclipse 插件一样，但它还生成 eclipse WTP（Web 工具平台）的配置文件。你的 war/ear 项目在导入 eclipse 后，应配置为能在 WTP 中使用。另请参阅《&lt;a0&gt;第七章，&lt;i1&gt;Java 快速入门&lt;/i1&gt;&lt;/a0&gt;》。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Don't forget that your build script is simply Groovy code that drives the Gradle API. And the &lt;a0&gt;&lt;c1&gt;Project&lt;/c1&gt;&lt;/a0&gt; interface is your starting point for accessing everything in the Gradle API. So, if you're wondering what 'tags' are available in your build script, you can start with the documentation for the &lt;c2&gt;Project&lt;/c2&gt; interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170912T125959Z" creationid="huanghaohang" creationdate="20170912T125959Z">
        <seg>不要忘了，你的构建脚本只是简单的可以调用Gradle API的Groovy代码。而且&lt;a0&gt;&lt;c1&gt;Project&lt;/c1&gt;&lt;/a0&gt;界面是你访问Gradle API中的所有内容的起点。所以，如果你想知道你的构建脚本中有什么“标签（tag）”可以使用，那么可以先从文档开始&lt;c2&gt;项目&lt;/c2&gt;接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Download</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T013335Z" creationid="huanghaohang" creationdate="20170919T013335Z">
        <seg>下载</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Dry Run</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233952Z" creationid="huanghaohang" creationdate="20171206T233952Z">
        <seg>演练</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Dynamic tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T031826Z" creationid="huanghaohang" creationdate="20170927T031826Z">
        <seg>动态任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ERROR</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T221517Z" creationid="huanghaohang" creationdate="20180105T221517Z">
        <seg>ERROR</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each closure has a &lt;c0&gt;delegate&lt;/c0&gt; object, which Groovy uses to look up variable and method references which are not local variables or parameters of the closure. Gradle uses this for &lt;e1&gt;configuration closures&lt;/e1&gt;, where the &lt;c2&gt;delegate&lt;/c2&gt; object is set to the object to be configured.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170914T153230Z" creationid="huanghaohang" creationdate="20170914T153230Z">
        <seg>每一个闭包都有一个&lt;c0&gt;委托&lt;/c0&gt;对象，Groovy使用它来查找不是局部变量或闭包参数的变量和方法引用。 Gradle使用它来作为&lt;e1&gt;配置闭包&lt;/e1&gt;，把&lt;c2&gt;委托&lt;/c2&gt;对象设置为被配置的对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each jar or war object has a &lt;c0&gt;manifest&lt;/c0&gt; property with a separate instance of &lt;a1&gt;&lt;c2&gt;Manifest&lt;/c2&gt;&lt;/a1&gt;. When the archive is generated, a corresponding &lt;c3&gt;MANIFEST.MF&lt;/c3&gt; file is written into the archive.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T111443Z" creationid="huanghaohang" creationdate="20180406T111443Z">
        <seg>每个 jar 或 war 对象都有一个 &lt;c0&gt;manifest&lt;/c0&gt; 属性，它是一个单独的 &lt;a1&gt;&lt;c2&gt;Manifest&lt;/c2&gt;&lt;/a1&gt; 属性。当生成档案时，相应的 &lt;c3&gt;MANIFEST.MF&lt;/c3&gt; 文件会被写入存档。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each project is made up of one or more &lt;e0&gt;tasks&lt;/e0&gt;. A task represents some atomic piece of work which a build performs. This might be compiling some classes, creating a JAR, generating javadoc, or publishing some archives to a repository.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T143544Z" creationid="95" creationdate="20170724T143343Z">
        <seg>每一个项目都由一个或多个&lt;e0&gt;任务&lt;/e0&gt;组成。一个任务表示构建执行的一些原子工作，比如编译一些类，创建一个JAR包，生成javadoc，或者是把一些档案发布到仓库中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each task has an &lt;c0&gt;inputs&lt;/c0&gt; and &lt;c1&gt;outputs&lt;/c1&gt; property, which you use to declare the inputs and outputs of the task. Below, we have changed our example to declare that it takes the source XML file as an input and produces output to a destination directory. Let's run it a couple of times.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T003846Z" creationid="huanghaohang" creationdate="20170922T093754Z">
        <seg>每一个任务都有一个&lt;c0&gt;inputs&lt;/c0&gt;和&lt;c1&gt;outputs&lt;/c1&gt;属性，用来声明这个任务的输入和输出。下面，我们修改了我们的示例，声明它将 XML 源文件作为输入，并产生到目标目录的输出。让我们运行几次。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each time after that, before the task is executed, Gradle takes a new snapshot of the inputs and outputs. If the new snapshots are the same as the previous snapshots, Gradle assumes that the outputs are up to date and skips the task. If they are not the same, Gradle executes the task. Gradle persists both snapshots for next time the task is executed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T011207Z" creationid="huanghaohang" creationdate="20170923T011207Z">
        <seg>在这之后每一次执行任务之前，Gradle将输入和输出进行新的快照。如果新快照与以前的快照相同，则Gradle会假定输出是最新的，并跳过任务。如果它们不一样，则Gradle会执行任务。Gradle会保存这两个快照，用于这个任务的下一次执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Ease of migration</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T060917Z" creationid="95" creationdate="20170723T060917Z">
        <seg>易于迁移</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Edit the build.gradle file. Note: this requires Java 1.6 or higher and requires that you have .gradle files associated in your OS.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170911T144536Z" creationid="huanghaohang" creationdate="20170911T144536Z">
        <seg>编辑build.gradle文件。注意：这需要Java 1.6或更高的版本，并且要求你的操作系统关联了.gradle文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Enables new incubating mode that makes Gradle selective when configuring projects. Only relevant projects are configured which results in faster builds for large multi-projects. See &lt;a0&gt;Section 56.1.1.1, “Configuration on demand”&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180126T020534Z" creationid="huanghaohang" creationdate="20180126T020534Z">
        <seg>启用新的试验性的模式，该模式可以在配置项目时使 Gradle 具有选择性。只适用于相关的项目被配置为在大型多项目中更快地构建。请参阅《&lt;a0&gt;第 56.1.1.1 节，“按需配置”&lt;/a0&gt;》。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Enabling this option hides any output when a task is executed unless the build fails.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170911T150222Z" creationid="huanghaohang" creationdate="20170911T150222Z">
        <seg>启用此选项后，除非构建失败，否则将在任务执行时隐藏任何输出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Enforce sequential ordering of tasks: eg. 'build' never runs before 'clean'.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T030142Z" creationid="huanghaohang" creationdate="20170922T030142Z">
        <seg>强制任务顺序排序：如“build”永远不会在“clean”之前运行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Environment variables</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T013347Z" creationid="huanghaohang" creationdate="20170919T013347Z">
        <seg>环境变量</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Error messages</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T221520Z" creationid="huanghaohang" creationdate="20180105T221520Z">
        <seg>错误消息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Even faster builds: preemptively evaluate projects, so that the model is ready when the user next invokes Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180109T140343Z" creationid="huanghaohang" creationdate="20180109T140343Z">
        <seg>甚至更快的构建：预先评估项目，以便在用户下一次调用 Gradle 时，模型就已准备就绪。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Every Gradle build is made up of one or more &lt;e0&gt;projects&lt;/e0&gt;. What a project represents depends on what it is that you are doing with Gradle. For example, a project might represent a library JAR or a web application. It might represent a distribution ZIP assembled from the JARs produced by other projects. A project does not necessarily represent a thing to be built. It might represent a thing to be done, such as deploying your application to staging or production environments. Don't worry if this seems a little vague for now. Gradle's build-by-convention support adds a more concrete definition for what a project is.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T143530Z" creationid="95" creationdate="20170724T143309Z">
        <seg>任何一个Gradle构建都是由一个或多个&lt;e0&gt;项目&lt;/e0&gt;组成。一个项目代表着什么，取决于你想通过Gradle来做什么。比如，一个项目可能代表着一个JAR库，或者是一个Web应用程序。它也可能代表从其他项目所生成的JAR包组装起来的ZIP文件。一个项目不一定是代表一个要构建的东西，它也可能代表一个要完成的东西，比如把您的应用部署到预发布或生产环境。如果现在看得不是很明白，也不用担心。Gradle的按约定来构建的支持为项目提供了更具体的定义。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Every task has also an &lt;c0&gt;enabled&lt;/c0&gt; flag which defaults to &lt;c1&gt;true&lt;/c1&gt;. Setting it to &lt;c2&gt;false&lt;/c2&gt; prevents the execution of any of the task's actions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T085322Z" creationid="huanghaohang" creationdate="20170922T085322Z">
        <seg>每一项任务有一个默认值为&lt;c1&gt;true&lt;/c1&gt;的&lt;c0&gt;enabled&lt;/c0&gt;标记。将它设置为&lt;c2&gt;false&lt;/c2&gt;，可以不让这个任务的任何操作执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Everything in Gradle sits on top of two basic concepts: &lt;e0&gt;projects&lt;/e0&gt; and &lt;e1&gt;tasks&lt;/e1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T142329Z" creationid="95" creationdate="20170724T142329Z">
        <seg>在整个Gradle，有两个最基础的概念：&lt;e0&gt;项目&lt;/e0&gt; 和 &lt;e1&gt;任务&lt;/e1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 10.1. War plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T004613Z" creationid="huanghaohang" creationdate="20170909T004613Z">
        <seg>示例 10.1. 使用War 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 10.2. Running web application with Jetty plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T005558Z" creationid="huanghaohang" creationdate="20170909T005558Z">
        <seg>示例10.2. 使用Jetty插件运行Web应用程序</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 11.1. Executing multiple tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T031119Z" creationid="huanghaohang" creationdate="20170909T031119Z">
        <seg>示例 11.1. 执行多个任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 11.10. Changing the content of the task report</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T012002Z" creationid="huanghaohang" creationdate="20170910T012002Z">
        <seg>示例11.10. 更改任务报告的内容</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 11.11. Obtaining more information about tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T012308Z" creationid="huanghaohang" creationdate="20170910T012308Z">
        <seg>示例11.11. 获取任务的更多相关信息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 11.12. Obtaining detailed help for tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T012828Z" creationid="huanghaohang" creationdate="20170910T012755Z">
        <seg>示例11.12. 获取任务的帮助信息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 11.13. Obtaining information about dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T014039Z" creationid="huanghaohang" creationdate="20170910T014039Z">
        <seg>示例11.13. 获取依赖的相关信息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 11.14. Filtering dependency report by configuration</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T021651Z" creationid="huanghaohang" creationdate="20170910T021651Z">
        <seg>示例11.14. 按配置过滤依赖报告</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 11.15. Getting the insight into a particular dependency</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T022143Z" creationid="huanghaohang" creationdate="20170910T022143Z">
        <seg>示例11.15. 查看特定的依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 11.16. Information about properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T023437Z" creationid="huanghaohang" creationdate="20170910T023437Z">
        <seg>示例11.16. 获取属性的相关信息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 11.2. Excluding tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T031953Z" creationid="huanghaohang" creationdate="20170909T031953Z">
        <seg>示例 11.2. 排除任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 11.3. Abbreviated task name</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T113243Z" creationid="huanghaohang" creationdate="20170909T112820Z">
        <seg>示例11.3. 缩写任务名称</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 11.4. Abbreviated camel case task name</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T113246Z" creationid="huanghaohang" creationdate="20170909T113231Z">
        <seg>示例11.4. 缩写驼峰任务名称</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 11.5. Selecting the project using a build file</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T114011Z" creationid="huanghaohang" creationdate="20170909T114011Z">
        <seg>示例11.5. 使用构建文件选择项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 11.6. Selecting the project using project directory</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T114250Z" creationid="huanghaohang" creationdate="20170909T114250Z">
        <seg>示例11.6. 使用项目目录选择项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 11.7. Obtaining information about projects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T011117Z" creationid="huanghaohang" creationdate="20170910T011117Z">
        <seg>示例11.7. 获取项目的相关信息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 11.8. Providing a description for a project</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T011416Z" creationid="huanghaohang" creationdate="20170910T011416Z">
        <seg>示例11.8. 提供项目描述信息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 11.9. Obtaining information about tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T011700Z" creationid="huanghaohang" creationdate="20170910T011700Z">
        <seg>示例11.9. 获取任务的相关信息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 12.1. Launching the GUI</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170911T143304Z" creationid="huanghaohang" creationdate="20170911T143304Z">
        <seg>示例12.1. 启动GUI</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 13.1. Accessing property of the Project object</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170912T130249Z" creationid="huanghaohang" creationdate="20170912T130249Z">
        <seg>示例 13.1. 访问 Project 对象的属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 13.2. Using local variables</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T132952Z" creationid="huanghaohang" creationdate="20170913T132952Z">
        <seg>示例 13.2. 使用局部变量</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 13.3. Using extra properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T133527Z" creationid="huanghaohang" creationdate="20170913T133527Z">
        <seg>示例13.3. 使用额外属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 13.4. Groovy JDK methods</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T135847Z" creationid="huanghaohang" creationdate="20170913T135847Z">
        <seg>示例 13.4. Groovy JDK 的方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 13.5. Property accessors</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T141242Z" creationid="huanghaohang" creationdate="20170913T141242Z">
        <seg>示例 13.5. 属性访问器</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 13.6. Method call without parentheses</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T141435Z" creationid="huanghaohang" creationdate="20170913T141435Z">
        <seg>示例 13.6. 不带括号的方法调用</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 13.7. List and map literals</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T141556Z" creationid="huanghaohang" creationdate="20170913T141556Z">
        <seg>示例 13.7. List 和 Map</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 13.8. Closure as method parameter</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T141918Z" creationid="huanghaohang" creationdate="20170913T141918Z">
        <seg>示例 13.8. 作为方法参数的闭包</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 13.9. Closure delegates</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170914T153237Z" creationid="huanghaohang" creationdate="20170914T153237Z">
        <seg>示例 13.9. 闭包委托</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 14.1. Directory creation with mkdir</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170917T132404Z" creationid="huanghaohang" creationdate="20170917T132404Z">
        <seg>示例 14.1.  使用 mkdir 创建目录</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 14.2. Setting properties with a gradle.properties file</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170917T135018Z" creationid="huanghaohang" creationdate="20170917T135018Z">
        <seg>示例 14.2. 使用 gradle.properties 文件设置属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 14.3. Configuring the project using an external build script</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170918T145335Z" creationid="huanghaohang" creationdate="20170918T145335Z">
        <seg>示例14.3. 使用外部构建脚本配置项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 14.4. Configuring arbitrary objects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170918T145817Z" creationid="huanghaohang" creationdate="20170918T145817Z">
        <seg>示例 14.4. 配置任意对象</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 14.5. Configuring arbitrary objects using a script</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170918T145956Z" creationid="huanghaohang" creationdate="20170918T145956Z">
        <seg>示例14.5. 使用脚本配置任意对象</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 15.1. Defining tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T120829Z" creationid="huanghaohang" creationdate="20170919T120829Z">
        <seg>示例 15.1. 定义任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 15.10. Defining a task with closure</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T124929Z" creationid="huanghaohang" creationdate="20170919T124929Z">
        <seg>示例 15.10. 使用闭包定义任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 15.11. Adding dependency on task from another project</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T130121Z" creationid="huanghaohang" creationdate="20170919T130121Z">
        <seg>示例 15.11. 添加对另一个项目的任务的依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 15.12. Adding dependency using task object</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T130248Z" creationid="huanghaohang" creationdate="20170919T130248Z">
        <seg>示例 15.12. 使用任务对象添加依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 15.13. Adding dependency using closure</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T130914Z" creationid="huanghaohang" creationdate="20170919T130914Z">
        <seg>示例 15.13. 使用闭包添加依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 15.14. Adding a 'must run after' task ordering</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T032020Z" creationid="huanghaohang" creationdate="20170922T032020Z">
        <seg>示例15.14. 添加“必须在之后运行”的任务排序</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 15.15. Adding a 'should run after' task ordering</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T035716Z" creationid="huanghaohang" creationdate="20170922T035716Z">
        <seg>示例 15.15. 添加 “应该在之后运行”的任务排序</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 15.16. Task ordering does not imply task execution</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T035744Z" creationid="huanghaohang" creationdate="20170922T035744Z">
        <seg>示例 15.16. 任务排序并不意味着任务执行</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 15.17. A 'should run after' task ordering is ignored if it introduces an ordering cycle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T081550Z" creationid="huanghaohang" creationdate="20170922T081508Z">
        <seg>示例 15.17. 当引入循环时，“应该在之后运行”的任务排序会被忽略</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 15.18. Adding a description to a task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T082259Z" creationid="huanghaohang" creationdate="20170922T082259Z">
        <seg>示例 15.18. 向任务添加描述</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 15.19. Overwriting a task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T083318Z" creationid="huanghaohang" creationdate="20170922T083318Z">
        <seg>示例 15.19. 重写任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 15.2. Defining tasks - using strings for task names</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T121052Z" creationid="huanghaohang" creationdate="20170919T121052Z">
        <seg>示例 15.2. 定义任务 —— 使用字符串作为任务名称</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 15.20. Skipping a task using a predicate</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T084154Z" creationid="huanghaohang" creationdate="20170922T084154Z">
        <seg>示例 15.20. 使用断言跳过一个任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 15.21. Skipping tasks with StopExecutionException</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T084832Z" creationid="huanghaohang" creationdate="20170922T084832Z">
        <seg>示例 15.21. 使用 StopExecutionException 跳过任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 15.22. Enabling and disabling tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T085324Z" creationid="huanghaohang" creationdate="20170922T085324Z">
        <seg>示例 15.22. 启用和禁用任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 15.23. A generator task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T085706Z" creationid="huanghaohang" creationdate="20170922T085706Z">
        <seg>示例 15.23. 一个生成任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 15.24. Declaring the inputs and outputs of a task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T003852Z" creationid="huanghaohang" creationdate="20170923T003852Z">
        <seg>示例 15.24. 声明一个任务的输入和输出</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 15.25. Task rule</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T011922Z" creationid="huanghaohang" creationdate="20170923T011922Z">
        <seg>示例 15.25. 任务规则</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 15.26. Dependency on rule based tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T043835Z" creationid="huanghaohang" creationdate="20170923T043835Z">
        <seg>示例 15.26. 依赖于基于规则的任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 15.27. Adding a task finalizer</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T044038Z" creationid="huanghaohang" creationdate="20170923T044038Z">
        <seg>示例 15.27. 添加一个任务析构器</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 15.28. Task finalizer for a failing task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T044102Z" creationid="huanghaohang" creationdate="20170923T044102Z">
        <seg>示例 15.28. 执行失败的任务的任务析构器</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 15.3. Defining tasks with alternative syntax</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T121134Z" creationid="huanghaohang" creationdate="20170919T121134Z">
        <seg>示例 15.3. 使用替代语法定义任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 15.4. Accessing tasks as properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T121722Z" creationid="huanghaohang" creationdate="20170919T121722Z">
        <seg>示例 15.4. 以属性方式访问任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 15.5. Accessing tasks via tasks collection</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T121736Z" creationid="huanghaohang" creationdate="20170919T121736Z">
        <seg>示例 15.5. 通过tasks集合访问任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 15.6. Accessing tasks by path</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T121951Z" creationid="huanghaohang" creationdate="20170919T121951Z">
        <seg>示例 15.6. 通过路径访问任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 15.7. Creating a copy task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T122240Z" creationid="huanghaohang" creationdate="20170919T122240Z">
        <seg>示例 15.7. 创建一个复制任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 15.8. Configuring a task - various ways</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T124318Z" creationid="huanghaohang" creationdate="20170919T124318Z">
        <seg>示例 15.8. 配置任务——多种方式</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 15.9. Configuring a task - with closure</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T124608Z" creationid="huanghaohang" creationdate="20170919T124608Z">
        <seg>示例 15.9. 配置任务——使用闭包</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 16.1. Locating files</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T125031Z" creationid="huanghaohang" creationdate="20170923T125031Z">
        <seg>示例 16.1. 查找文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 16.10. Copying files using the copy task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171002T135606Z" creationid="huanghaohang" creationdate="20171002T135606Z">
        <seg>实施例16.10. 使用复制任务复制文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 16.11. Specifying copy task source files and destination directory</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171015T075012Z" creationid="huanghaohang" creationdate="20171015T075012Z">
        <seg>示例 16.11. 指定复制任务的源文件和目标目录</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 16.12. Selecting the files to copy</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171015T075114Z" creationid="huanghaohang" creationdate="20171015T075114Z">
        <seg>示例 16.12. 选择要复制的文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 16.13. Copying files using the copy() method without up-to-date check</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171015T125015Z" creationid="huanghaohang" creationdate="20171015T094218Z">
        <seg>例16.13. 使用没有最新状态检查的copy()方法复制文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 16.14. Copying files using the copy() method with up-to-date check</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171015T125030Z" creationid="huanghaohang" creationdate="20171015T124923Z">
        <seg>例16.14. 使用有最新状态检查的copy()方法复制文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 16.15. Renaming files as they are copied</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T060234Z" creationid="huanghaohang" creationdate="20171126T060234Z">
        <seg>示例 16.15. 重命名复制的文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 16.16. Filtering files as they are copied</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T060337Z" creationid="huanghaohang" creationdate="20171126T060337Z">
        <seg>示例 16.16. 在复制时过滤文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 16.17. Nested copy specs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T060918Z" creationid="huanghaohang" creationdate="20171126T060918Z">
        <seg>示例 16.17. 嵌套的复制规范</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 16.18. Using the Sync task to copy dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T125145Z" creationid="huanghaohang" creationdate="20171126T125145Z">
        <seg>示例 16.18. 使用同步任务复制依赖项</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 16.19. Creating a ZIP archive</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T135304Z" creationid="huanghaohang" creationdate="20171126T135304Z">
        <seg>示例 16.19. 创建一个 ZIP 文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 16.2. Creating a file collection</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T131613Z" creationid="huanghaohang" creationdate="20170923T131613Z">
        <seg>示例 16.2. 创建文件集合</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 16.20. Creation of ZIP archive</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T140713Z" creationid="huanghaohang" creationdate="20171126T140713Z">
        <seg>示例 16.20. 创建 ZIP 文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 16.21. Configuration of archive task - custom archive name</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T232529Z" creationid="huanghaohang" creationdate="20171206T232529Z">
        <seg>示例 16.21. 配置归档任务-自定义归档名称</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 16.22. Configuration of archive task - appendix &amp; classifier</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T232556Z" creationid="huanghaohang" creationdate="20171206T232556Z">
        <seg>示例 16.22. 配置归档任务 - appendix &amp; classifier</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 16.3. Using a file collection</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T132328Z" creationid="huanghaohang" creationdate="20170923T132328Z">
        <seg>示例 16.3. 使用文件集合</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 16.4. Implementing a file collection</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T150001Z" creationid="huanghaohang" creationdate="20170927T150001Z">
        <seg>示例 16.4. 实现一个文件集合</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 16.5. Creating a file tree</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171002T023413Z" creationid="huanghaohang" creationdate="20171002T023413Z">
        <seg>示例 16.5. 创建一个文件树</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 16.6. Using a file tree</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171002T023624Z" creationid="huanghaohang" creationdate="20171002T023624Z">
        <seg>示例 16.6. 使用文件树</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 16.7. Using an archive as a file tree</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171002T133514Z" creationid="huanghaohang" creationdate="20171002T133514Z">
        <seg>示例 16.7. 使用归档文件作为文件树</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 16.8. Specifying a set of files</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171002T134047Z" creationid="huanghaohang" creationdate="20171002T134047Z">
        <seg>示例 16.8. 指定一组文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 16.9. Specifying a set of files</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171002T134312Z" creationid="huanghaohang" creationdate="20171002T134312Z">
        <seg>示例 16.9. 指定一组文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 17.1. Using an Ant task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171216T022447Z" creationid="huanghaohang" creationdate="20171216T022447Z">
        <seg>示例 17.1. 使用 Ant 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 17.10. Adding behaviour to an Ant target</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T084805Z" creationid="huanghaohang" creationdate="20180105T084805Z">
        <seg>示例 17.10. 将行为添加到 Ant 目标</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 17.11. Ant target that depends on Gradle task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T084836Z" creationid="huanghaohang" creationdate="20180105T084836Z">
        <seg>示例 17.11. 依赖于 Gradle 任务的 Ant 目标</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 17.12. Setting an Ant property</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T094349Z" creationid="huanghaohang" creationdate="20180105T094349Z">
        <seg>示例 17.12. 设置一个 Ant 属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 17.13. Getting an Ant property</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T094610Z" creationid="huanghaohang" creationdate="20180105T094610Z">
        <seg>示例 17.13. 获取 Ant 属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 17.14. Setting an Ant reference</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T094658Z" creationid="huanghaohang" creationdate="20180105T094658Z">
        <seg>示例 17.14. 设置一个 Ant 引用</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 17.15. Getting an Ant reference</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T094714Z" creationid="huanghaohang" creationdate="20180105T094714Z">
        <seg>示例 17.15. 获取 Ant 引用</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 17.2. Passing nested text to an Ant task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171216T022605Z" creationid="huanghaohang" creationdate="20171216T022605Z">
        <seg>示例 17.2. 向 Ant 任务传入嵌套文本</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 17.3. Passing nested elements to an Ant task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171219T090752Z" creationid="huanghaohang" creationdate="20171219T090752Z">
        <seg>示例 17.3. 向 Ant 任务传入嵌套元素</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 17.4. Using an Ant type</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171219T091121Z" creationid="huanghaohang" creationdate="20171219T091121Z">
        <seg>示例 17.4. 使用 Ant 类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 17.5. Using a custom Ant task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T083826Z" creationid="huanghaohang" creationdate="20180105T083826Z">
        <seg>示例 17.5. 使用自定义 Ant 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 17.6. Declaring the classpath for a custom Ant task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T084250Z" creationid="huanghaohang" creationdate="20180105T084250Z">
        <seg>示例 17.6. 声明用于自定义 Ant 任务的类路径</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 17.7. Using a custom Ant task and dependency management together</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T084331Z" creationid="huanghaohang" creationdate="20180105T084331Z">
        <seg>示例 17.7. 同时使用自定义 Ant 任务和依赖管理</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 17.8. Importing an Ant build</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T084606Z" creationid="huanghaohang" creationdate="20180105T084606Z">
        <seg>示例 17.8. 导入 Ant 构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 17.9. Task that depends on Ant target</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T084636Z" creationid="huanghaohang" creationdate="20180105T084636Z">
        <seg>示例 17.9. 依赖于 Ant 目标的任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 18.1. Using stdout to write log messages</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180107T011940Z" creationid="huanghaohang" creationdate="20180107T011940Z">
        <seg>示例18.1. 使用标准输出写日志</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 18.2. Writing your own log messages</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180107T012426Z" creationid="huanghaohang" creationdate="20180107T012426Z">
        <seg>示例 18.2. 编写自己的日志消息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 18.3. Using SLF4J to write log messages</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180107T024343Z" creationid="huanghaohang" creationdate="20180107T024343Z">
        <seg>示例 18.3. 使用 SLF4J 写入日志消息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 18.4. Configuring standard output capture</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180107T025326Z" creationid="huanghaohang" creationdate="20180107T025326Z">
        <seg>示例 18.4. 配置标准输出捕获</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 18.5. Configuring standard output capture for a task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180107T025422Z" creationid="huanghaohang" creationdate="20180107T025422Z">
        <seg>示例 18.5. 为任务配置标准输出捕获</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 18.6. Customizing what Gradle logs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180107T144024Z" creationid="huanghaohang" creationdate="20180107T144024Z">
        <seg>示例 18.6 的例子. 自定义 Gradle 日志</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 20.1. Configuring an HTTP proxy</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180130T073508Z" creationid="huanghaohang" creationdate="20180130T073508Z">
        <seg>示例 20.1. 配置 HTTP 代理</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 20.2. Configuring an HTTPS proxy</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180130T073538Z" creationid="huanghaohang" creationdate="20180130T073538Z">
        <seg>示例 20.1. 配置 HTTPS 代理</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 21.1. Applying a plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180130T092911Z" creationid="huanghaohang" creationdate="20180130T092911Z">
        <seg>示例 21.1. 应用插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 21.2. Applying a plugin by type</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180130T093207Z" creationid="huanghaohang" creationdate="20180130T093207Z">
        <seg>示例 21.2. 通过类型应用插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 21.3. Applying a plugin by type</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180130T093310Z" creationid="huanghaohang" creationdate="20180130T093310Z">
        <seg>示例 21.2. 通过类型应用插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 21.4. Tasks added by a plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180130T100158Z" creationid="huanghaohang" creationdate="20180130T100158Z">
        <seg>示例 21.4. 通过插件添加任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 21.5. Changing plugin defaults</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T022548Z" creationid="huanghaohang" creationdate="20180131T022548Z">
        <seg>示例 21.5. 更改插件的默认设置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 21.6. Plugin convention object</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T024635Z" creationid="huanghaohang" creationdate="20180131T024635Z">
        <seg>示例 21.6. 插件约定对象</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 23.1. Using the Java plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180218T153526Z" creationid="huanghaohang" creationdate="20180218T153438Z">
        <seg>示例 23.1. 使用 Java 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 23.10. Running tests in a source set</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T095452Z" creationid="haohang" creationdate="20180326T095452Z">
        <seg>示例 23.10. 运行源集里的测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 23.11. Filtering tests in the build script</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180405T131631Z" creationid="huanghaohang" creationdate="20180405T131631Z">
        <seg>示例 23.11. 在构建脚本中过滤测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 23.12. JUnit Categories</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T041814Z" creationid="huanghaohang" creationdate="20180406T041814Z">
        <seg>示例 23.12. JUnit 类别</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 23.13. Grouping TestNG tests</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T042042Z" creationid="huanghaohang" creationdate="20180406T042042Z">
        <seg>示例 23.13. 对 TestNG 测试分组</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 23.14. Creating a unit test report for subprojects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T043949Z" creationid="huanghaohang" creationdate="20180406T043949Z">
        <seg>示例 23.14. 为多个子项目创建一个单元测试报告</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 23.15. Customization of MANIFEST.MF</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T111448Z" creationid="huanghaohang" creationdate="20180406T111448Z">
        <seg>示例 7.5. 自定义的 MANIFEST.MF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 23.16. Creating a manifest object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T111608Z" creationid="huanghaohang" creationdate="20180406T111608Z">
        <seg>示例 23.16. 创建一个清单对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 23.17. Separate MANIFEST.MF for a particular archive</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T111939Z" creationid="huanghaohang" creationdate="20180406T111939Z">
        <seg>示例 23.17. 指定档案的单独 MANIFEST.MF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 23.18. Separate MANIFEST.MF for a particular archive</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T113343Z" creationid="huanghaohang" creationdate="20180406T113343Z">
        <seg>示例 23.18. 指定档案的单独 MANIFEST.MF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 23.2. Custom Java source layout</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T053342Z" creationid="haohang" creationdate="20180313T053342Z">
        <seg>示例 23.2. 自定义 Java 源代码布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 23.3. Accessing a source set</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180320T094613Z" creationid="haohang" creationdate="20180320T094613Z">
        <seg>示例 23.3. 访问源集</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 23.4. Configuring the source directories of a source set</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180320T094924Z" creationid="haohang" creationdate="20180320T094924Z">
        <seg>示例 23.4. 配置源集的源代码目录</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 23.5. Defining a source set</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T094626Z" creationid="haohang" creationdate="20180326T094626Z">
        <seg>示例 23.5. 定义一个源集</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 23.6. Defining source set dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T094839Z" creationid="haohang" creationdate="20180326T094839Z">
        <seg>示例 23.6. 定义源集依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 23.7. Compiling a source set</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T095229Z" creationid="haohang" creationdate="20180326T095229Z">
        <seg>示例 23.7. 编译源集</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 23.8. Assembling a JAR for a source set</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T095351Z" creationid="haohang" creationdate="20180326T095351Z">
        <seg>示例 23.8. 为一个源集组装一个 JAR 文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 23.9. Generating the Javadoc for a source set</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T095402Z" creationid="haohang" creationdate="20180326T095402Z">
        <seg>示例 23.9. 为一个源集生成 Javadoc：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 24.1. Using the Groovy plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T120704Z" creationid="huanghaohang" creationdate="20180406T120704Z">
        <seg>示例 24.1. 使用 Groovy 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 24.2. Custom Groovy source layout</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T121937Z" creationid="huanghaohang" creationdate="20180406T121937Z">
        <seg>示例 24.2. 自定义 Groovy 的源文件布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 24.3. Configuration of Groovy dependency</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T122529Z" creationid="huanghaohang" creationdate="20180406T122529Z">
        <seg>示例 24.3. Groovy 的依赖配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 24.4. Configuration of Groovy test dependency</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T122630Z" creationid="huanghaohang" creationdate="20180406T122630Z">
        <seg>示例 24.4.  Groovy 的测试依赖配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 24.5. Configuration of bundled Groovy dependency</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T122900Z" creationid="huanghaohang" creationdate="20180406T122900Z">
        <seg>示例 24.5. 配置捆绑的 Groovy 依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 24.6. Configuration of Groovy file dependency</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T123327Z" creationid="huanghaohang" creationdate="20180406T123327Z">
        <seg>示例 24.6. Groovy 的文件依赖配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 6.1. The first build script</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T144942Z" creationid="95" creationdate="20170724T144942Z">
        <seg>示例 6.1. 第一个构建脚本</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 6.10. Accessing a task via API - adding behaviour</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T133108Z" creationid="95" creationdate="20170727T133108Z">
        <seg>示例6.10. 通过API访问任务——添加行为</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 6.11. Accessing task as a property of the build script</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T141334Z" creationid="95" creationdate="20170727T141334Z">
        <seg>示例6.11. 以构建脚本的属性的方式访问任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 6.12. Adding extra properties to a task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T141956Z" creationid="95" creationdate="20170727T141956Z">
        <seg>示例6.12. 为任务添加额外的属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 6.13. Using AntBuilder to execute ant.loadfile target</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170728T153752Z" creationid="95" creationdate="20170728T153752Z">
        <seg>示例6.13. 使用AntBuilder 执行 ant.loadfile 目标</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 6.14. Using methods to organize your build logic</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T023454Z" creationid="95" creationdate="20170729T023454Z">
        <seg>示例6.14. 在构建逻辑中使用方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 6.15. Defining a default tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T023907Z" creationid="95" creationdate="20170729T023907Z">
        <seg>示例6.15. 定义一个默认任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 6.16. Different outcomes of build depending on chosen tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T025301Z" creationid="95" creationdate="20170729T025301Z">
        <seg>示例6.16. 根据所选择的任务输出不同的构建结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 6.2. Execution of a build script</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T145831Z" creationid="95" creationdate="20170724T145831Z">
        <seg>示例 6.2. 执行构建脚本</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 6.3. A task definition shortcut</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155313Z" creationid="95" creationdate="20170726T155313Z">
        <seg>示例6.3. 任务定义的快捷方式</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 6.4. Using Groovy in Gradle's tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155816Z" creationid="95" creationdate="20170726T155709Z">
        <seg>示例6.4. 在Gradle任务中使用Groovy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 6.5. Using Groovy in Gradle's tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155854Z" creationid="95" creationdate="20170726T155854Z">
        <seg>示例6.5. 在Gradle任务中使用Groovy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 6.6. Declaration of dependencies between tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T160115Z" creationid="95" creationdate="20170726T160115Z">
        <seg>示例6.6. 声明任务之间的依赖关系</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 6.7. Lazy dependsOn - the other task does not exist (yet)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T160342Z" creationid="95" creationdate="20170726T160335Z">
        <seg>示例6.7. 延迟依赖——另一个任务（暂）不存在</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 6.8. Dynamic creation of a task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T132722Z" creationid="95" creationdate="20170727T132722Z">
        <seg>示例6.8. 任务的动态创建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 6.9. Accessing a task via API - adding a dependency</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T133005Z" creationid="95" creationdate="20170727T133005Z">
        <seg>示例6.9. 通过API访问任务——添加依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 7.1. Using the Java plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T012449Z" creationid="95" creationdate="20170730T012449Z">
        <seg>示例 7.1. 使用 Java 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 7.10. Multi-project build - hierarchical layout</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T154450Z" creationid="95" creationdate="20170731T154425Z">
        <seg>示例7.10. 多项目构建——层次布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 7.11. Multi-project build - settings.gradle file</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T123537Z" creationid="95" creationdate="20170803T123537Z">
        <seg>示例7.11. 多项目构建——settings.gradle文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 7.12. Multi-project build - common configuration</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T124421Z" creationid="95" creationdate="20170803T124421Z">
        <seg>示例7.12. 多项目构建——公共配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 7.13. Multi-project build - dependencies between projects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T125326Z" creationid="95" creationdate="20170803T125259Z">
        <seg>示例7.13. 多项目构建——项目间的依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 7.14. Multi-project build - distribution file</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T125715Z" creationid="95" creationdate="20170803T125715Z">
        <seg>示例7.14. 多项目构建——分发文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 7.2. Building a Java project</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T014257Z" creationid="95" creationdate="20170730T013858Z">
        <seg>示例7.2. 构建Java项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 7.3. Adding Maven repository</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T124330Z" creationid="95" creationdate="20170730T124330Z">
        <seg>示例 7.3. 添加 Maven 仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 7.4. Adding dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T124731Z" creationid="95" creationdate="20170730T124731Z">
        <seg>示例 7.4. 添加 依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 7.5. Customization of MANIFEST.MF</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T132601Z" creationid="95" creationdate="20170730T132601Z">
        <seg>示例 7.5. 自定义的MANIFEST.MF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 7.6. Adding a test system property</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T150114Z" creationid="95" creationdate="20170731T150114Z">
        <seg>示例 7.6. 添加一个系统属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 7.7. Publishing the JAR file</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T153704Z" creationid="95" creationdate="20170731T153704Z">
        <seg>示例7.7. 发布JAR文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 7.8. Eclipse plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T153830Z" creationid="95" creationdate="20170731T153830Z">
        <seg>示例 7.8. Eclipse插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 7.9. Java example - complete build file</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T154050Z" creationid="95" creationdate="20170731T154050Z">
        <seg>示例7.9. Java示例——完整的构建文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 8.1. Declaring dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170908T013226Z" creationid="haohang" creationdate="20170908T013226Z">
        <seg>示例 8.1. 依赖声明</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 8.2. Definition of an external dependency</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T043317Z" creationid="huanghaohang" creationdate="20170908T043317Z">
        <seg>示例8.2. 外部依赖的定义</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 8.3. Shortcut definition of an external dependency</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T043905Z" creationid="huanghaohang" creationdate="20170908T043905Z">
        <seg>示例8.3. 外部依赖的定义</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 8.4. Usage of Maven central repository</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T044750Z" creationid="huanghaohang" creationdate="20170908T044750Z">
        <seg>示例8.4. 使用Maven中央仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 8.5. Usage of a remote Maven repository</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T044837Z" creationid="huanghaohang" creationdate="20170908T044837Z">
        <seg>示例8.5. 使用远程的Maven仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 8.6. Usage of a remote Ivy directory</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T044924Z" creationid="huanghaohang" creationdate="20170908T044924Z">
        <seg>示例8.6. 使用远程Ivy目录</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 8.7. Usage of a local Ivy directory</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T045133Z" creationid="huanghaohang" creationdate="20170908T045133Z">
        <seg>示例8.7. 使用本地Ivy目录</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 8.8. Publishing to an Ivy repository</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T050445Z" creationid="huanghaohang" creationdate="20170908T050445Z">
        <seg>示例8.8. 发布到Ivy仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 8.9. Publishing to a Maven repository</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T051000Z" creationid="huanghaohang" creationdate="20170908T051000Z">
        <seg>示例8.9. 发布到Maven仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 9.1. Groovy plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T001650Z" creationid="huanghaohang" creationdate="20170909T001650Z">
        <seg>示例9.1. Groovy插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 9.2. Dependency on Groovy 2.2.0</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T002719Z" creationid="huanghaohang" creationdate="20170909T002719Z">
        <seg>示例 9.2. 依赖 Groovy 2.2.0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 9.3. Groovy example - complete build file</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T002842Z" creationid="huanghaohang" creationdate="20170909T002842Z">
        <seg>示例9.3. Groovy示例 - 完整的构建文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Excluding tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233907Z" creationid="huanghaohang" creationdate="20171206T233907Z">
        <seg>排除任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Execute ignoring dependencies. This does not require dependent projects to be rebuilt (same as the -a option).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170911T144348Z" creationid="huanghaohang" creationdate="20170911T144145Z">
        <seg>执行忽略的依赖。它不需要所依赖的项目重新构建（与-a选项一样）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Executing multiple tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233856Z" creationid="huanghaohang" creationdate="20171206T233856Z">
        <seg>执行多个任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Extends</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T053711Z" creationid="haohang" creationdate="20180313T053711Z">
        <seg>继承自</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Extensive samples, including the examples referenced in the user guide, along with some complete and more complex builds you can use the starting point for your own build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T114843Z" creationid="95" creationdate="20170723T114843Z">
        <seg>大量的样例，包括用户指南里的例子，以及一些完整的和更加复杂的构建。您可以把它们作为您自己的构建的基础。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>External dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233706Z" creationid="huanghaohang" creationdate="20171206T233706Z">
        <seg>外部依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Extra properties aren't limited to tasks. You can read more about them in &lt;a0&gt;Section 13.4.2, “Extra properties”&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T142130Z" creationid="95" creationdate="20170727T142016Z">
        <seg>额外属性并不局限于任务，你可以在 &lt;a0&gt;第13.4.2节，“额外属性”&lt;/a0&gt;中了解更多关于它们的内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Extra task properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T031848Z" creationid="huanghaohang" creationdate="20170927T031848Z">
        <seg>额外的任务属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Fast and accurate bash tab completion.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180109T142030Z" creationid="huanghaohang" creationdate="20180109T142030Z">
        <seg>快速准确的 bash 的 tab 键完成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Favorites</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T234024Z" creationid="huanghaohang" creationdate="20171206T234024Z">
        <seg>收藏夹</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Features</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072448Z" creationid="haohang" creationdate="20170720T072448Z">
        <seg>特性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Figure 11.1. Task dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T031036Z" creationid="huanghaohang" creationdate="20170909T031036Z">
        <seg>图11.1. 任务依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Figure 12.1. GUI Task Tree</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170911T143517Z" creationid="huanghaohang" creationdate="20170911T143517Z">
        <seg>图12.1. GUI任务树</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Figure 12.2. GUI Setup</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170911T145849Z" creationid="huanghaohang" creationdate="20170911T145849Z">
        <seg>图 12.2. GUI 设置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Figure 23.1. Java plugin - tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T040047Z" creationid="haohang" creationdate="20180313T040047Z">
        <seg>图 23.1. Java 插件——任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Figure 23.2. Java plugin - dependency configurations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T054201Z" creationid="haohang" creationdate="20180313T054201Z">
        <seg>图 23.2. Java 插件——依赖配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Figure 24.1. Groovy plugin - tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T121113Z" creationid="huanghaohang" creationdate="20180406T121113Z">
        <seg>图 24.1. Groovy 插件——任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>File</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T132209Z" creationid="huanghaohang" creationdate="20170913T132209Z">
        <seg>File</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>File collections</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180218T093018Z" creationid="huanghaohang" creationdate="20180218T093018Z">
        <seg>文件集合</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>File srcDir</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T150349Z" creationid="huanghaohang" creationdate="20170927T150349Z">
        <seg>File srcDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>File trees</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180218T093024Z" creationid="huanghaohang" creationdate="20180218T093024Z">
        <seg>文件树</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>FileCollection</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T150455Z" creationid="huanghaohang" creationdate="20170927T150455Z">
        <seg>FileCollection</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>FileCollection collection = files(&lt;s0&gt;'src/file1.txt'&lt;/s0&gt;, &lt;s1&gt;new&lt;/s1&gt; File(&lt;s2&gt;'src/file2.txt'&lt;/s2&gt;), [&lt;s3&gt;'src/file3.txt'&lt;/s3&gt;, &lt;s4&gt;'src/file4.txt'&lt;/s4&gt;])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T131616Z" creationid="huanghaohang" creationdate="20170923T131616Z">
        <seg>FileCollection collection = files(&lt;s0&gt;'src/file1.txt'&lt;/s0&gt;, &lt;s1&gt;new&lt;/s1&gt; File(&lt;s2&gt;'src/file2.txt'&lt;/s2&gt;), [&lt;s3&gt;'src/file3.txt'&lt;/s3&gt;, &lt;s4&gt;'src/file4.txt'&lt;/s4&gt;])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Filtering at the level of specific test methods; executing a single test method</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180405T100432Z" creationid="huanghaohang" creationdate="20180405T100330Z">
        <seg>在指定的测试方法级别上过滤；执行单个测试方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Filtering based on custom annotations (future)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180405T130704Z" creationid="huanghaohang" creationdate="20180405T100440Z">
        <seg>基于自定义注解进行过滤（以后实现）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Filtering based on some custom runtime rule, e.g. particular value of a system property or some static state (future)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180405T130727Z" creationid="huanghaohang" creationdate="20180405T130727Z">
        <seg>基于一些自定义的运行时规则进行过滤，例如某个系统属性或一些静态的特定值（以后实现）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Filtering based on test hierarchy; executing all tests that extend ceratain base class (future)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180405T130657Z" creationid="huanghaohang" creationdate="20180405T130657Z">
        <seg>基于测试层次结构进行过滤；执行所有继承了某一基类的测试（以后实现）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Finalizer task will be executed even if the finalized task fails.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T044058Z" creationid="huanghaohang" creationdate="20170923T044058Z">
        <seg>即使最终的任务执行失败，析构器任务也会被执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Finalizer tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180201T021758Z" creationid="huanghaohang" creationdate="20180201T021758Z">
        <seg>析构器任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Finalizer tasks are automatically added to the task graph when the finalized task is scheduled to run.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T044021Z" creationid="huanghaohang" creationdate="20170923T044021Z">
        <seg>析构器任务会在最终的任务准备运行时，自动地添加到任务图中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Finalizer tasks are useful in situations where build creates a resource that has to be cleaned up regardless of the build failing or succeeding. An example of such resource is a web container started before an integration test task and which should be always shut down, even if some of the tests fail.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T044558Z" creationid="huanghaohang" creationdate="20170923T044558Z">
        <seg>在不管构建是否成功都必须清理所创建的资源的情况下，析构任务很有用。这种资源的一个例子是，在集成测试任务前开始启动的Web容器，即使有些测试失败也始终应该关闭。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Finalizers tasks are an &lt;e0&gt;incubating&lt;/e0&gt; feature (see &lt;a1&gt;Section C.1.2, “Incubating”&lt;/a1&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T043926Z" creationid="huanghaohang" creationdate="20170923T043926Z">
        <seg>析构器任务是一个 &lt;e0&gt;孵化中&lt;/e0&gt; 的功能 (请参阅 &lt;a1&gt; C.1.2 节， “孵化”&lt;/a1&gt;)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Finally, since build scripts are Groovy scripts, you can always execute an Ant build as an external process. Your build script may contain statements like:&lt;c0&gt;"ant clean compile".execute()&lt;/c0&gt;. &lt;s1&gt;[&lt;a2&gt;8&lt;/a2&gt;]&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171213T135909Z" creationid="huanghaohang" creationdate="20171213T135909Z">
        <seg>最后，由于构建脚本是 Groovy 脚本，因此你始终可以将 Ant 构建作为一个外部进程来执行 Ant 构建。你的构建脚本可能包含有类似这样的语句：&lt;c0&gt;"ant clean compile".execute()&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For Java teams which share also Python or Ruby knowledge or are happy to learn it, the above arguments don't apply. The Gradle design is well-suited for creating another build script engine in JRuby or Jython. It just doesn't have the highest priority for us at the moment. We happily support any community effort to create additional build script engines.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T072131Z" creationid="95" creationdate="20170723T071728Z">
        <seg>对于分享Python或Ruby知识并且乐于学习它们的Java团队来说，上面的论据并不适用。Gradle设计非常适全于在JRuby或Jython中创建另一种构建脚本引擎。目前我们并没有最高的优先级，我们很高兴任何社区来努力创建其他的构建脚本引擎。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For above sorts of workflows, it is important that the startup cost of invoking Gradle is as small as possible.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180108T133759Z" creationid="huanghaohang" creationdate="20180108T133759Z">
        <seg>对以上各种工作流来说，让调用 Gradle 的启动成本尽可能小是很重要的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For all the details of dependency resolution, see &lt;a0&gt;Chapter 50, &lt;i1&gt;Dependency Management&lt;/i1&gt;&lt;/a0&gt;, and for artifact publication see &lt;a2&gt;Chapter 51, &lt;i3&gt;Publishing artifacts&lt;/i3&gt;&lt;/a2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T051234Z" creationid="huanghaohang" creationdate="20170908T051234Z">
        <seg>有关依赖解析的所有细节，请参阅《&lt;a0&gt;第五十章，&lt;i1&gt;依赖管理&lt;/i1&gt;&lt;/a0&gt;》；而关于构件发布则请参阅《&lt;a2&gt;第五十一章， &lt;i3&gt;发布构件&lt;/i3&gt;&lt;/a2&gt;》。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For command line usage take a look dedicated section in &lt;a0&gt;Appendix D, &lt;i1&gt;Gradle Command Line&lt;/i1&gt;&lt;/a0&gt;. If you are tired of using the same command line options again and again, take a look at &lt;a2&gt;Section 20.1, “Configuring the build environment via gradle.properties”&lt;/a2&gt;. The section contains information on how to configure certain behavior of the daemon (including turning on the daemon by default) in a more 'persistent' way.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180120T025344Z" creationid="huanghaohang" creationdate="20180120T025344Z">
        <seg>对于命令行的用法，可以看看专题《&lt;a0&gt;附录 D，&lt;i1&gt;Gradle 命令行&lt;/i1&gt;&lt;/a0&gt;》。如果你已经厌倦了一次又一次地使用相同的命令行选项，可以看《&lt;a2&gt;第 20.1 节，“通过 gradle.properties 配置构建环境”&lt;/a2&gt;》。这一章节包含了有关如何以一种"持久化"的方式配置守护进程某些行为（包括默认情况下开启守护进程）的信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For each source set you add to the project, the Java plugin adds the following compilation tasks:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180312T073302Z" creationid="haohang" creationdate="20180312T073302Z">
        <seg>对于你添加到项目中的每一个源集，Java 插件将添加以下的编译任务：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For each source set you add to the project, the Java plugins adds the following dependency configurations:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T054236Z" creationid="haohang" creationdate="20180313T054236Z">
        <seg>对于你添加到项目中的每个源集，Java 插件都会添加以下的依赖配置：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For further details on extra properties and their API, see &lt;a0&gt;&lt;c1&gt;ExtraPropertiesExtension&lt;/c1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T135510Z" creationid="huanghaohang" creationdate="20170913T135510Z">
        <seg>有关额外属性和其 API 的详细信息，请参阅&lt;a0&gt;&lt;c1&gt;ExtraPropertiesExtension&lt;/c1&gt;&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For grouping JUnit test classes and methods JUnit 4.8 introduces the concept of categories. &lt;s0&gt;[&lt;a1&gt;9&lt;/a1&gt;]&lt;/s0&gt; The &lt;c2&gt;test&lt;/c2&gt; task allows the specification of the JUnit categories you want to include and exclude.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T041811Z" creationid="huanghaohang" creationdate="20180405T155943Z">
        <seg>为对 JUnit 的测试类和方法进行分组，JUnit 4.8 引入了类别的概念。 &lt;s0&gt;[&lt;a1&gt;9&lt;/a1&gt;]&lt;/s0&gt;&lt;c2&gt;test&lt;/c2&gt; 任务允许指定要包含和排除的 JUnit 类别。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more advanced uses, you can define a task dependency using a closure. When evaluated, the closure is passed the task whose dependencies are being calculated. The closure should return a single &lt;c0&gt;Task&lt;/c0&gt; or collection of &lt;c1&gt;Task&lt;/c1&gt; objects, which are then treated as dependencies of the task. The following example adds a dependency from &lt;c2&gt;taskX&lt;/c2&gt; to all the tasks in the project whose name starts with &lt;c3&gt;lib&lt;/c3&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T130910Z" creationid="huanghaohang" creationdate="20170919T130910Z">
        <seg>对于更高级的用法，你可以使用闭包来定义任务依赖。在Gradle评估时，这个闭包会被传入正在计算依赖的任务。这个闭包应该返回一个&lt;c0&gt;Task&lt;/c0&gt;或&lt;c1&gt;Task&lt;/c1&gt;对象的集合，然后返回值会被当作任务的依赖。以下示例添加了&lt;c2&gt;taskX&lt;/c2&gt;对名称以&lt;c3&gt;lib&lt;/c3&gt;开头的所有任务的依赖：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more details and examples please see the &lt;a0&gt;&lt;c1&gt;TestFilter&lt;/c1&gt;&lt;/a0&gt; reference.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180405T131723Z" creationid="huanghaohang" creationdate="20180405T131723Z">
        <seg>有关更多的详细信息和示例，请参阅 &lt;a0&gt;&lt;c1&gt;TestFilter&lt;/c1&gt;&lt;/a0&gt; 的文档。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more information about task dependencies, see the &lt;a0&gt;&lt;c1&gt;Task&lt;/c1&gt;&lt;/a0&gt; API.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T130931Z" creationid="huanghaohang" creationdate="20170919T130931Z">
        <seg>有关任务依赖的详细信息，请参阅&lt;a0&gt;&lt;c1&gt;Task&lt;/c1&gt;&lt;/a0&gt;的 API。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more on writing your own plugins, see &lt;a0&gt;Chapter 58, &lt;i1&gt;Writing Custom Plugins&lt;/i1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180130T095813Z" creationid="huanghaohang" creationdate="20180130T095813Z">
        <seg>关于编写自己的插件的详细信息，请参阅《&lt;a0&gt;第 58章，&lt;i1&gt;编写自定义插件&lt;/i1&gt;&lt;/a0&gt;》。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For most multi-project builds, there is some configuration which is common to all projects. In our sample, we will define this common configuration in the root project, using a technique called &lt;e0&gt;configuration injection&lt;/e0&gt;. Here, the root project is like a container and the &lt;c1&gt;subprojects&lt;/c1&gt; method iterates over the elements of this container - the projects in this instance - and injects the specified configuration. This way we can easily define the manifest content for all archives, and some common dependencies:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T124401Z" creationid="95" creationdate="20170803T123813Z">
        <seg>对于大多数的多项目构建，会有一些共同的配置。在我们的例子中，将会在根项目中使用一种叫做&lt;e0&gt;配置注入&lt;/e0&gt;的技术来定义这些公共配置。在这里，这个根项目就像一个容器，&lt;c1&gt;subprojects&lt;/c1&gt; 的方法会遍历这个容器的一些元素——这个实例中的所有子项目，并且注入指定的配置。这样我们就可以轻松地定义所有存档的清单内容，以及一些公共的依赖：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For now, we will look at defining some simple tasks in a build with one project. Later chapters will look at working with multiple projects and more about working with projects and tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T143910Z" creationid="95" creationdate="20170724T143910Z">
        <seg>现在，我们来看一下如何在一个项目的构建中定义一些简单的任务。后续的章节将更多的关注多项目的构建，以及多项目和多任务的内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For running Gradle, add &lt;c0&gt;&lt;e1&gt;&lt;c2&gt;GRADLE_HOME&lt;/c2&gt;&lt;/e1&gt;/bin&lt;/c0&gt; to your &lt;c3&gt;PATH&lt;/c3&gt; environment variable. Usually, this is sufficient to run Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T115222Z" creationid="95" creationdate="20170723T115222Z">
        <seg>要运行Gradle，您需要将 &lt;c0&gt;&lt;e1&gt;&lt;c2&gt;GRADLE_HOME&lt;/c2&gt;&lt;/e1&gt;/bin&lt;/c0&gt; 添加到您的 &lt;c3&gt;PATH&lt;/c3&gt;环境变量中。通常添加了之后就可以运行Gradle了。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Free and open source</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T065551Z" creationid="95" creationdate="20170723T065551Z">
        <seg>自由开源</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>From being a pleasure to be used embedded to its many hooks over the whole lifecycle of build execution, Gradle allows you to monitor and customize its configuration and execution behavior to its very core.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170722T041546Z" creationid="95" creationdate="20170722T041546Z">
        <seg>来自于惯在整个构建执行的生命周期中习嵌入钩子的乐趣，Gradle允许你监视以及对它的配置和它核心的执行行为进行定制。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Full support for your existing Maven or Ivy repository infrastructure.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T135843Z" creationid="95" creationdate="20170721T135843Z">
        <seg>完全支持已有的Maven或Ivy仓库结构。 </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Fully qualified class name or fully qualified method name is supported, e.g. "org.gradle.SomeTest", "org.gradle.SomeTest.someMethod"</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180405T130803Z" creationid="huanghaohang" creationdate="20180405T130803Z">
        <seg>支持完整的限定类名称或完整的限定方法名称，例如“org.gradle.SomeTest”、“org.gradle.SomeTest.someMethod”</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>GUI Setup</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170911T145854Z" creationid="huanghaohang" creationdate="20170911T145854Z">
        <seg>GUI 设置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>GUI Task Tree</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170911T143525Z" creationid="huanghaohang" creationdate="20170911T143525Z">
        <seg>GUI 任务树</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generates API documentation for the production Groovy source files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T120956Z" creationid="huanghaohang" creationdate="20180406T120956Z">
        <seg>为 Groovy 的生产源文件生成 API 文档。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generates API documentation for the production Java source, using Javadoc</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180312T063009Z" creationid="haohang" creationdate="20180312T063009Z">
        <seg>使用 Javadoc 生成生产的 Java 源代码的API文档</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generates build dashboard report.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180211T090210Z" creationid="huanghaohang" creationdate="20180211T090210Z">
        <seg>生成构建仪表板报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generates files that are used by &lt;a0&gt;Eclipse IDE&lt;/a0&gt;, thus making it possible to import the project into Eclipse. See also &lt;a1&gt;Chapter 7, &lt;i2&gt;Java Quickstart&lt;/i2&gt;&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180210T135845Z" creationid="huanghaohang" creationdate="20180210T135845Z">
        <seg>生成 &lt;a0&gt;Eclipse IDE&lt;/a0&gt; 所用到的文件，从而使项目能够导入到 Eclipse。另请参阅《&lt;a1&gt;第七章，&lt;i2&gt;Java 快速入门&lt;/i2&gt;&lt;/a1&gt;》。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generates files that are used by &lt;a0&gt;Intellij IDEA IDE&lt;/a0&gt;, thus making it possible to import the project into IDEA.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180211T085811Z" creationid="huanghaohang" creationdate="20180211T085811Z">
        <seg>生成 &lt;a0&gt;Intellij IDEA IDE&lt;/a0&gt; 所用到的文件，从而使项目能够导入到 IDEA。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generates reports containing useful information about your Gradle build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180211T085957Z" creationid="huanghaohang" creationdate="20180211T085957Z">
        <seg>生成包括了关于你的 Gradle 构建的有用信息的报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generating Javadoc for a source set:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T095358Z" creationid="haohang" creationdate="20180326T095358Z">
        <seg>为一个源集生成 Javadoc：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generating the POM file without publishing</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T132923Z" creationid="95" creationdate="20170721T132923Z">
        <seg>-不发布的情况下生成POM文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Get feedback faster by running quick verification tasks before long verification tasks: eg. unit tests should run before integration tests.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T030445Z" creationid="huanghaohang" creationdate="20170922T030445Z">
        <seg>在耗时较长的验证任务之前先运行较快的验证任务，可以更快地获得反馈：如，单元测试应在集成测试之前运行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Getting Started</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170801T014546Z" creationid="haohang" creationdate="20170801T014546Z">
        <seg>入门</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Getting help</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T013439Z" creationid="huanghaohang" creationdate="20170919T013439Z">
        <seg>获取帮助</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Getting help writing build scripts</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170912T125228Z" creationid="huanghaohang" creationdate="20170912T125228Z">
        <seg>获取有关编写构建脚本的帮助</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Given a parameterized test method named &lt;c0&gt;aParameterizedTestMethod&lt;/c0&gt; that takes two parameters, it will be reported with the name: &lt;c1&gt;aParameterizedTestMethod(toStringValueOfParam1, toStringValueOfParam2)&lt;/c1&gt;. This makes identifying the parameter values for a particular iteration easy.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T104618Z" creationid="huanghaohang" creationdate="20180406T104618Z">
        <seg>给定一个带有两个参数，名为 &lt;c0&gt;aParameterizedTestMethod&lt;/c0&gt; 的参数化测试方法，它将使用这个名称进行报告 ：&lt;c1&gt;aParameterizedTestMethod(toStringValueOfParam1, toStringValueOfParam2)&lt;/c1&gt;。这使得在特定的迭代中，很容易识别参数值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle User Guide</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072244Z" creationid="haohang" creationdate="20170720T072244Z">
        <seg>Gradle 用户指南</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle allows you to define one or more default tasks for your build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T023856Z" creationid="95" creationdate="20170729T023856Z">
        <seg>Gradle允许您在构建中定义一个或多个的默认任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle also provides a &lt;c0&gt;logger&lt;/c0&gt; property to a build script, which is an instance of &lt;a1&gt;&lt;c2&gt;Logger&lt;/c2&gt;&lt;/a1&gt;. This interface extends the SLF4J &lt;c3&gt;Logger&lt;/c3&gt; interface and adds a few Gradle specific methods to it. Below is an example of how this is used in the build script:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180107T012421Z" creationid="huanghaohang" creationdate="20180107T012421Z">
        <seg>Gradle还提供了一个 &lt;c0&gt;logger&lt;/c0&gt; 属性给构建脚本，它是一个 &lt;a1&gt;&lt;c2&gt;Logger&lt;/c2&gt;&lt;/a1&gt; 实例。该接口扩展了 SLF4J &lt;c3&gt;Logger&lt;/c3&gt; 接口，并添加了一些 Gradle 的特有方法。下面是关于如何在构建脚本中使用它的示例：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle also provides integration with the Java Util Logging, Jakarta Commons Logging and Log4j logging toolkits. Any log messages which your build classes write using these logging toolkits will be redirected to Gradle's logging system.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180107T025704Z" creationid="huanghaohang" creationdate="20180107T025704Z">
        <seg>Gradle 还提供了对 Java Util Logging，Jakarta Commons Logging 和 Log4j 的日志工具的集成。构建中的类使用这些日志记录工具所输出的所有日志消息，都将被重定向到 Gradle 的日志系统上。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle at its core intentionally provides little useful functionality for real world automation. All of the useful features, such as the ability to compile Java code for example, are added by &lt;s0&gt;&lt;e1&gt;plugins&lt;/e1&gt;&lt;/s0&gt;. Plugins add new tasks (e.g. &lt;a2&gt;&lt;c3&gt;JavaCompile&lt;/c3&gt;&lt;/a2&gt;), domain objects (e.g. &lt;a4&gt;&lt;c5&gt;SourceSet&lt;/c5&gt;&lt;/a4&gt;), conventions (e.g. main Java source is located at &lt;c6&gt;src/main/java&lt;/c6&gt;) as well as extending core objects and objects from other plugins.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180130T092739Z" creationid="huanghaohang" creationdate="20180130T090731Z">
        <seg>Gradle 在它的核心中有意地为真实世界的自动化提供一些有用的功能。所有有用的功能，例如能够编译 Java代码，都是通过&lt;s0&gt;&lt;e1&gt;插件&lt;/e1&gt;&lt;/s0&gt;来添加的。插件添加了新任务（如 &lt;a2&gt;&lt;c3&gt;JavaCompile&lt;/c3&gt;&lt;/a2&gt;），域对象（如 &lt;a4&gt;&lt;c5&gt;SourceSet&lt;/c5&gt;&lt;/a4&gt;），约定（如主要的 Java 源码是位于 &lt;c6&gt;的src/main/java&lt;/c6&gt;），以及从扩展的核心对象和其他插件的对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle can adapt to any structure you have. Therefore you can always develop your Gradle build in the same branch where your production build lives and both can evolve in parallel. We usually recommend to write tests that make sure that the produced artifacts are similar. That way migration is as less disruptive and as reliable as possible. This is following the best-practices for refactoring by applying baby steps.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T063535Z" creationid="95" creationdate="20170723T060933Z">
        <seg>Gradle可以适应您现在任何结构的项目。因此您可以在生产构建所在的分支上随时开发你的Gradle构建，并且它们可以并行演进。我们通常建议编写测试用例，以确保生成的工件是类似的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle expects to find your production source code under &lt;c0&gt;src/main/java&lt;/c0&gt; and your test source code under &lt;c1&gt;src/test/java&lt;/c1&gt;. In addition, any files under &lt;c2&gt;src/main/resources&lt;/c2&gt; will be included in the JAR file as resources, and any files under &lt;c3&gt;src/test/resources&lt;/c3&gt; will be included in the classpath used to run the tests. All output files are created under the &lt;c4&gt;build&lt;/c4&gt; directory, with the JAR file ending up in the &lt;c5&gt;build/libs&lt;/c5&gt; directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T013543Z" creationid="95" creationdate="20170730T013013Z">
        <seg>Gradle会在 &lt;c0&gt;src/main/java&lt;/c0&gt; and your test source code under和 &lt;c1&gt;src/test/java&lt;/c1&gt;能分别找你的生产 源码和测试源码。并且，在 &lt;c2&gt;src/main/resources&lt;/c2&gt;的所有文件都会作为资源被打包进JAR包，任何在 &lt;c3&gt;src/test/resources&lt;/c3&gt;下的资源文件都会被包含到类路径中用于执行测试。所有输出的文件都会在 &lt;c4&gt;build&lt;/c4&gt; 目录里创建，而JAR包会被输出在&lt;c5&gt;build/libs&lt;/c5&gt; 目录里。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle fully supports your existing Maven or Ivy repository infrastructure for publishing and retrieving dependencies. Gradle also provides a converter for turning a Maven &lt;c0&gt;pom.xml&lt;/c0&gt; into a Gradle script. Runtime imports of Maven projects will come soon.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T060851Z" creationid="95" creationdate="20170723T060851Z">
        <seg>对于您用于发布和检索依赖的现有的Maven或Ivy仓库基础架构，Gradle完全支持。并且Gradle也提供了一个转换器，用于将一个Maven的&lt;c0&gt;pom.xml&lt;/c0&gt;转换为一个Gradle脚本。Maven项目的运行时导入即将推出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle is an open source project, and is licensed under the &lt;a0&gt;ASL&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T065609Z" creationid="95" creationdate="20170723T065609Z">
        <seg>Gradle是一个开源项目，并且使用&lt;a0&gt;ASL&lt;/a0&gt;开源协议。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle is the first build integration tool</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T034327Z" creationid="95" creationdate="20170723T034327Z">
        <seg>Gradle是第一个构建集成工具</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle offers a variety of ways to add properties to your build. With the &lt;c0&gt;-D&lt;/c0&gt; command line option you can pass a system property to the JVM which runs Gradle. The &lt;c1&gt;-D&lt;/c1&gt; option of the &lt;s2&gt;&lt;s3&gt;gradle&lt;/s3&gt;&lt;/s2&gt; command has the same effect as the &lt;c4&gt;-D&lt;/c4&gt; option of the &lt;s5&gt;&lt;s6&gt;java&lt;/s6&gt;&lt;/s5&gt; command.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170917T132831Z" creationid="huanghaohang" creationdate="20170917T132831Z">
        <seg>Gradle提供了多种方式可以向构建添加属性。使用&lt;c0&gt;-D&lt;/c0&gt;命令行选项可以将系统属性传给运行Gradle的JVM。&lt;s2&gt;&lt;s3&gt;gradle&lt;/s3&gt;&lt;/s2&gt;命令的&lt;c1&gt;-D&lt;/c1&gt;选项与&lt;s5&gt;&lt;s6&gt;java&lt;/s6&gt;&lt;/s5&gt;命令的&lt;c4&gt;-D&lt;/c4&gt;选项具有同样的效果。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle offers multiple ways to skip the execution of a task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T083659Z" creationid="huanghaohang" creationdate="20170922T083659Z">
        <seg>Gradle 提供了多种方式来跳过任务的执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle properties and system properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T034025Z" creationid="huanghaohang" creationdate="20180131T034025Z">
        <seg>Gradle 属性和系统属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle provides a &lt;e0&gt;domain specific language&lt;/e0&gt;, or DSL, for describing builds. This build language is based on Groovy, with some additions to make it easier to describe a build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170912T124610Z" creationid="huanghaohang" creationdate="20170912T124610Z">
        <seg>Gradle 提供了一种&lt;e0&gt;领域特定语言&lt;/e0&gt;，或者说是 DSL，用于描述构建。这种构建语言基于 Groovy 中，并进行了一些补充，使得更容易地描述构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle provides excellent integration with Ant. You can use individual Ant tasks or entire Ant builds in your Gradle builds. In fact, you will find that it's far easier and more powerful using Ant tasks in a Gradle build script, than it is to use Ant's XML format. You could even use Gradle simply as a powerful Ant task scripting tool.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171210T151402Z" creationid="huanghaohang" creationdate="20171031T071604Z">
        <seg>Gradle 对 Ant 提供了极好的集成。你可以在你的 Gradle 构建中使用单独的 Ant 任务，或者是整个 Ant 构建。实际上，你会发现在 Gradle 构建脚本中使用 Ant 任务比使用 Ant 的 XML 格式要容易得多，功能也更强大。你甚至可以把 Gradle 当作是一个强大的 Ant 任务脚本工具。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle provides partial builds. If you build a single subproject Gradle takes care of building all the subprojects that subproject depends on. You can also choose to rebuild the subprojects that depend on a particular subproject. Together with incremental builds this is a big time saver for larger builds.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T034026Z" creationid="95" creationdate="20170723T034026Z">
        <seg>Gradle提供了部分构建。如果你是在构建一个子项目，Gradle将负责构建这个子项目所依赖的所有子项目。你也可以选择重新构建依赖于特定子项目的所有子项目。这和增量构建一起为大型的构建省下了不少的时间。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle provides several built-in tasks which show particular details of your build. This can be useful for understanding the structure and dependencies of your build, and for debugging problems.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T010749Z" creationid="huanghaohang" creationdate="20170910T010749Z">
        <seg>Gradle提供了一些内置任务能展示构建的相关特定信息。这对于了解构建的结构和依赖以及调试问题可能很有用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle provides several options that make it easy to configure the Java process that will be used to execute your build. While it's possible to configure these in your local environment via GRADLE_OPTS or JAVA_OPTS, certain settings like JVM memory settings, Java home, daemon on/off can be more useful if they can versioned with the project in your VCS so that the entire team can work with consistent environment. Setting up a consistent environment for your build is as simple as placing those settings into a &lt;c0&gt;gradle.properties&lt;/c0&gt; file. The configuration is applied in following order (in case an option is configured in multiple locations the last one wins):</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180124T144616Z" creationid="huanghaohang" creationdate="20180124T144616Z">
        <seg>Gradle提供了几个选项，可以很容易地配置用于执行构建的 Java 进程。尽管可以通过 GRADLE_OPTS 或 JAVA_OPTS 在本地环境中配置这些设置，但是如果某些设置，像 JVM 内存设置，Java home，守护进程开启/关闭等特定设置可以提交到 VCS 的话会更有用，这样整个团队就能使用一致的环境。为你的构建建立一个一致的环境就像将这些设置放入一个 &lt;c0&gt;gradle.properties&lt;/c0&gt; 文件一样简单。这些配置将按以下顺序被应用（以防一个选项在多个位置都有配置时只有最后一个生效）：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle provides:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T133756Z" creationid="95" creationdate="20170721T133756Z">
        <seg>它提供了：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle requires a Java JDK or JRE to be installed. Gradle requires a Java version 6 or higher. Gradle ships with its own Groovy library, therefore no Groovy needs to be installed. Any existing Groovy installation is ignored by Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T114013Z" creationid="95" creationdate="20170723T114013Z">
        <seg>Gradle需要安装Java6或更高以上版本的JDK或JRE。Gradle自带了Groovy库，因此不需要安装Groovy。已经安装的Groovy会被Gradle所忽略。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle scales</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170722T041724Z" creationid="95" creationdate="20170722T041724Z">
        <seg>Gradle 的效率提升</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle scales in how you can organize your build logic. The first level of organizing your build logic for the example above, is extracting a method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T023442Z" creationid="95" creationdate="20170729T023442Z">
        <seg> Gradle的内向扩展取决于您如何组织您的构建逻辑。在上面的例子中，组织您的构建逻辑的第一个层次是抽取出方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle scales very well. It significantly increases your productivity, from simple single project builds up to huge enterprise multi-project builds. This is true for structuring the build. With the state-of-art incremental build function, this is also true for tackling the performance pain many large enterprise builds suffer from.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170722T042048Z" creationid="95" creationdate="20170722T042048Z">
        <seg>Gradle能够带大显著的效率提升。从简单的单项目构建，到大型的企业多项目构建，它都能大大地提高您的生产力。这是结构化构建所带来的。凭借最先进的增量构建功能，对于解决许多大型企业构建所遭遇的性能难题也是如此。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle tries best to filter the tests given limitations of particular test framework API. Some advanced, synthetic tests may not be fully compatible with filtering. However, vast majority of tests and use cases should be handled neatly.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180405T131356Z" creationid="huanghaohang" creationdate="20180405T131356Z">
        <seg>鉴于特定测试框架 API 的限制，Gradle 会尽最大努力过滤测试。一些高级的、综合的测试可能不完全符合过滤条件。但是，绝大多数测试和用例都应该能被较好地处理。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle uses whichever JDK it finds in your path (to check, use &lt;s0&gt;&lt;c1&gt;java -version&lt;/c1&gt;&lt;/s0&gt;). Alternatively, you can set the &lt;c2&gt;JAVA_HOME&lt;/c2&gt; environment variable to point to the install directory of the desired JDK.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T114331Z" creationid="95" creationdate="20170723T114023Z">
        <seg>Gradle会使用在您的path环境变量中找到的JDK（可以使用&lt;s0&gt;&lt;c1&gt;java -version&lt;/c1&gt;&lt;/s0&gt;命令来检查自己的JDK版本）。 另外，您也可以设置 &lt;c2&gt;JAVA_HOME&lt;/c2&gt; 环境变量来指向你想要的JDK的安装目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle's build scripts are written in Groovy, not XML. But unlike other approaches this is not for simply exposing the raw scripting power of a dynamic language. That would just lead to a very difficult to maintain build. The whole design of Gradle is oriented towards being used as a language, not as a rigid framework. And Groovy is our glue that allows you to tell your individual story with the abstractions Gradle (or you) provide. Gradle provides some standard stories but they are not privileged in any form. This is for us a major distinguishing features compared to other declarative build systems. Our Groovy support is also not just some simple coating sugar layer. The whole Gradle API is fully groovynized. Only by that using Groovy is the fun and productivity gain it can be.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T065134Z" creationid="95" creationdate="20170723T063603Z">
        <seg>Gradle的构建脚本是使用Groovy来编写的，而不是使用XML。但是与其他方法不同，这不仅仅是暴露了一门动态语言的原始脚本的能力，那样只会导致构建难以维护。Gradle的整个设计是面向一门语言，而不是一个僵化的框架。并且Groovy作为胶水语言，可以使您通过使用Gradle（或您）所提供的抽象概念，来讲述您的个别故事。Gradle提供了一些标准的故事，但它们没有任何特权。与其他的声明式构建系统相比，这对于我们来说是一个主要的区别。我们的Groovy支持也不只是简单的糖层，整个的Gradle API都是完全的Groovy化的。只有使用Groovy才能获得乐趣和生产力。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle's build scripts expose to you the full power of Groovy. As an appetizer, have a look at this:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155756Z" creationid="95" creationdate="20170726T155707Z">
        <seg>Gradle的构建脚本向您开放了Groovy的全部功能。作为开胃菜，可以看看下这个例子：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle's support for multi-project build is outstanding. Project dependencies are first class citizens. We allow you to model the project relationships in a multi-project build as they really are for your problem domain. Gradle follows your layout not vice versa.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T033707Z" creationid="95" creationdate="20170722T042113Z">
        <seg>Gradle对多项目构建的支持非常出色。项目依赖是第一公民。我们允许您在一个多项目构建中为项目关系进行建模，因为它们真的适用于您的问题域。Gradle遵循您的布局，而非相反。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Groovy</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T063538Z" creationid="95" creationdate="20170723T063538Z">
        <seg>Groovy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Groovy Quickstart</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233745Z" creationid="huanghaohang" creationdate="20171206T233745Z">
        <seg>Groovy 快速入门</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Groovy adds lots of useful methods to the standard Java classes. For example, &lt;c0&gt;Iterable&lt;/c0&gt; gets an &lt;c1&gt;each&lt;/c1&gt; method, which iterates over the elements of the &lt;c2&gt;Iterable&lt;/c2&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T135834Z" creationid="huanghaohang" creationdate="20170913T135657Z">
        <seg>Groovy对标准的Java类添加了许多有用的方法。例如，&lt;c0&gt;Iterable&lt;/c0&gt;新增了&lt;c1&gt;each&lt;/c1&gt;方法，可以对&lt;c2&gt;Iterable&lt;/c2&gt;的元素进行遍历：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Groovy automatically converts a property reference into a call to the appropriate getter or setter method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T141229Z" creationid="huanghaohang" creationdate="20170913T141229Z">
        <seg>Groovy 会自动地把属性的引用转换为适当的 getter 或 setter 方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Groovy plugin - tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T121119Z" creationid="huanghaohang" creationdate="20180406T121119Z">
        <seg>Groovy 插件——任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Groovy provides plenty of features for creating DSLs, and the Gradle build language takes advantage of these. Understanding how the build language works will help you when you write your build script, and in particular, when you start to write custom plugins and tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T135638Z" creationid="huanghaohang" creationdate="20170913T135638Z">
        <seg>Groovy提供了大量功能来创建DSL，而Gradle构建语言则利用了这些功能。了解构建语言的工作原理将有助于你编写构建脚本，特别是在开始编写自定义插件和任务的时候。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Groovy provides some shortcuts for defining &lt;c0&gt;List&lt;/c0&gt; and &lt;c1&gt;Map&lt;/c1&gt; instances.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T141544Z" creationid="huanghaohang" creationdate="20170913T141544Z">
        <seg>Groovy 提供了一些定义&lt;c0&gt;List&lt;/c0&gt;和&lt;c1&gt;Map&lt;/c1&gt;实例的快捷写法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Groovy sources for the given source set. May also contain Java sources for joint compilation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T121819Z" creationid="huanghaohang" creationdate="20180406T121819Z">
        <seg>给定源集的 Groovy 源代码。也可能包含联合编译的 Java 源代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Groovy web applications</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T005200Z" creationid="huanghaohang" creationdate="20170909T005200Z">
        <seg>Groovy web 应用程序</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>GroovyCompile</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T120747Z" creationid="huanghaohang" creationdate="20180406T120747Z">
        <seg>GroovyCompile</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Groovydoc</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T120927Z" creationid="huanghaohang" creationdate="20180406T120927Z">
        <seg>Groovydoc</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Have a look at &lt;a0&gt;&lt;c1&gt;TaskContainer&lt;/c1&gt;&lt;/a0&gt; for more options for locating tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T122048Z" creationid="huanghaohang" creationdate="20170919T122048Z">
        <seg>有关查找任务的更多选项，可以看一下&lt;a0&gt;&lt;c1&gt;TaskContainer&lt;/c1&gt;&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Have a look at &lt;a0&gt;http://groovy.codehaus.org/groovy-jdk/&lt;/a0&gt; for more details.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T135926Z" creationid="huanghaohang" creationdate="20170913T135926Z">
        <seg>更多详细可参阅&lt;a0&gt;http://groovy.codehaus.org/groovy-jdk/&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Hello world</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T031755Z" creationid="huanghaohang" creationdate="20170927T031755Z">
        <seg>Hello world</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is a list of some of Gradle's features.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170722T015227Z" creationid="95" creationdate="20170722T015227Z">
        <seg>以下是Gradle的一些特性列表。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is an example which maintains a copy of the project's runtime dependencies in the &lt;c0&gt;build/libs&lt;/c0&gt; directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T125140Z" creationid="huanghaohang" creationdate="20171126T125140Z">
        <seg>下面是一个例子，维护在&lt;c0&gt;build/libs&lt;/c0&gt;目录中的项目运行时依赖的副本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is our complete build file:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T002815Z" creationid="huanghaohang" creationdate="20170909T002815Z">
        <seg>这里是我们的完整构建文件：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here we add tasks to the &lt;c0&gt;tasks&lt;/c0&gt; collection. Have a look at &lt;a1&gt;&lt;c2&gt;TaskContainer&lt;/c2&gt;&lt;/a1&gt; for more variations of the &lt;c3&gt;create()&lt;/c3&gt; method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T121353Z" creationid="huanghaohang" creationdate="20170919T121141Z">
        <seg>在这里我们将任务添加到&lt;c0&gt;tasks&lt;/c0&gt;集合。关于&lt;c3&gt;create()&lt;/c3&gt;方法&lt;a1&gt;的其他重载方法，可以看一下&lt;c2&gt;TaskContainer&lt;/c2&gt;&lt;/a1&gt;接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here we have three projects. Project &lt;c0&gt;api&lt;/c0&gt; produces a JAR file which is shipped to the client to provide them a Java client for your XML webservice. Project &lt;c1&gt;webservice&lt;/c1&gt; is a webapp which returns XML. Project &lt;c2&gt;shared&lt;/c2&gt; contains code used both by &lt;c3&gt;api&lt;/c3&gt; and &lt;c4&gt;webservice&lt;/c4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T123142Z" creationid="95" creationdate="20170731T154521Z">
        <seg>在这里我们有三个项目。项目&lt;c0&gt;api&lt;/c0&gt;会生成一个JAR文件给一个客户端，为您的XML webservice提供一个Java客户端，项目 &lt;c1&gt;webservice&lt;/c1&gt; 是一个返回XML的webapp。项目&lt;c2&gt;shared&lt;/c2&gt; 包含了在 &lt;c3&gt;api&lt;/c3&gt; 和 &lt;c4&gt;webservice&lt;/c4&gt;中都会用到的代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here we replace a task of type &lt;c0&gt;Copy&lt;/c0&gt; with a simple task. When creating the simple task, you have to set the &lt;c1&gt;overwrite&lt;/c1&gt; property to true. Otherwise Gradle throws an exception, saying that a task with such a name already exists.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T083650Z" creationid="huanghaohang" creationdate="20170922T083325Z">
        <seg>这里我们把一个&lt;c0&gt;Copy&lt;/c0&gt;类型的任务替换为一个简单的任务。当创建这个简单任务时，你必须把&lt;c1&gt;overwrite&lt;/c1&gt;属性设置为true。否则，Gradle会抛出一个异常，称这个名称的任务已经存在。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here're all situations in which we fork a new daemon process:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180115T142800Z" creationid="huanghaohang" creationdate="20180115T142800Z">
        <seg>以下是我们 fork 一个新的守护进程的所有情况：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here's the complete build file for our sample:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T154035Z" creationid="95" creationdate="20170731T154035Z">
        <seg>以下是我们的例子中的完全的构建文件：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Hide the selected tasks. This adds them to the filter.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170911T144441Z" creationid="huanghaohang" creationdate="20170911T144441Z">
        <seg>隐藏所选择的任务。这将会把它们添加到过滤器中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>How does Gradle find the files for external dependencies? Gradle looks for them in a &lt;e0&gt;repository&lt;/e0&gt;. A repository is really just a collection of files, organized by &lt;c1&gt;group&lt;/c1&gt;, &lt;c2&gt;name&lt;/c2&gt; and &lt;c3&gt;version&lt;/c3&gt;. Gradle understands several different repository formats, such as Maven and Ivy, and several different ways of accessing the repository, such as using the local file system or HTTP.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T044633Z" creationid="huanghaohang" creationdate="20170908T044250Z">
        <seg>Gradle是如何找到外部依赖的文件的呢？它通过在一个&lt;e0&gt;仓库&lt;/e0&gt;去查找它们。仓库只是文件的一个集合，由&lt;c1&gt;group&lt;/c1&gt;， &lt;c2&gt;name&lt;/c2&gt;和&lt;c3&gt;version&lt;/c3&gt;来组织。 Gradle支持几种不同的仓库格式，例如Maven和Ivy；以及访问仓库的几种不同方法，例如使用本地文件系统或HTTP。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>How to upload your archives is described in &lt;a0&gt;Chapter 51, &lt;i1&gt;Publishing artifacts&lt;/i1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T113650Z" creationid="huanghaohang" creationdate="20180406T113424Z">
        <seg>关于如何上传档案，将在《&lt;a0&gt;第五十一章，&lt;i1&gt;发布构件&lt;/i1&gt;&lt;/a0&gt;》中描述。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, the &lt;c0&gt;compileJava&lt;/c0&gt; task is likely to not be the only task that needs to know where the class files are.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T022630Z" creationid="huanghaohang" creationdate="20180131T022630Z">
        <seg>然而，&lt;c0&gt;compileJava&lt;/c0&gt; 任务可能不是唯一需要知道类文件位置的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>INFO</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T221535Z" creationid="huanghaohang" creationdate="20180105T221535Z">
        <seg>INFO</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>INFO and higher</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T221922Z" creationid="huanghaohang" creationdate="20180105T221922Z">
        <seg>INFO 及更高</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If Groovy is only used for test code, the Groovy dependency should be added to the &lt;c0&gt;testCompile&lt;/c0&gt; configuration:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T122559Z" creationid="huanghaohang" creationdate="20180406T122559Z">
        <seg>如果 Groovy 仅用于测试代码，应该将 Groovy 的依赖添加到 &lt;c0&gt;testCompile&lt;/c0&gt; 配置中：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If Groovy is used for production code, the Groovy dependency should be added to the &lt;c0&gt;compile&lt;/c0&gt; configuration:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T122521Z" creationid="huanghaohang" creationdate="20180406T122521Z">
        <seg>如果 Groovy 用于生产代码，应该将 Groovy 依赖添加到 &lt;c0&gt;compile&lt;/c0&gt; 配置中：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If a &lt;c0&gt;groovy(-indy)&lt;/c0&gt; Jar is found on &lt;c1&gt;classpath&lt;/c1&gt;, and the project has at least one repository declared, a corresponding &lt;c2&gt;groovy(-indy)&lt;/c2&gt; repository dependency will be added to &lt;c3&gt;groovyClasspath&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T132803Z" creationid="huanghaohang" creationdate="20180406T132803Z">
        <seg>如果在 &lt;c1&gt;classpath&lt;/c1&gt; 中找到 &lt;c0&gt;groovy(-indy)&lt;/c0&gt; Jar ，并且该项目已经至少有一个仓库声明，那么相应的 &lt;c2&gt;groovy(-indy)&lt;/c2&gt; 仓库依赖将添加到 &lt;c3&gt;groovyClasspath&lt;/c3&gt; 中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If a &lt;c0&gt;groovy-all(-indy)&lt;/c0&gt; Jar is found on &lt;c1&gt;classpath&lt;/c1&gt;, the same Jar will be added to &lt;c2&gt;groovyClasspath&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T132620Z" creationid="huanghaohang" creationdate="20180406T132620Z">
        <seg>如果在 &lt;c1&gt;classpath&lt;/c1&gt; 中找到 &lt;c0&gt;groovy-all(-indy)&lt;/c0&gt; Jar，相同的 Jar 将添加到 &lt;c2&gt;groovyClasspath&lt;/c2&gt; 中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If a task fails, any subsequent tasks that were depending on it will not be executed, as it is not safe to do so. For example, tests will not run if there is a compilation failure in the code under test; because the test task will depend on the compilation task (either directly or indirectly).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T075102Z" creationid="huanghaohang" creationdate="20170909T075102Z">
        <seg>如果任务失败了，则依赖于它的所有后续任务将不会被执行，因为那样做是不安全的。例如，如果在测试代码中存在编译失败，测试将不会运行;因为测试任务会（直接或间接地）依赖于编译任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If any of these properties is empty the trailing &lt;c0&gt;-&lt;/c0&gt; is not added to the name.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T232752Z" creationid="huanghaohang" creationdate="20171206T232752Z">
        <seg>如果这些属性中的任何一个为空，那其跟随的&lt;c0&gt;-&lt;/c0&gt;不会被添加到该名称中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If something's not working for you, posting a question or problem report to the forums is the fastest way to get help. It's also the place to post improvement suggestions or new ideas. The development team frequently posts news items and announces releases via the forum, making it a great way to stay up to date with the latest Gradle developments.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T122322Z" creationid="95" creationdate="20170723T122322Z">
        <seg>如果出了问题，到论坛上提问或上报问题是获取帮助的最佳方式。有什么改进的建议或是新想法，也可以到论坛上发帖。开发团队会经常地通过论坛发布一些新闻和发表更新，使其成为与最新的Gradle开发保持更新的最佳方式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the daemon process is currently busy running some job, a brand new daemon process will be started.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180115T142902Z" creationid="huanghaohang" creationdate="20180115T142902Z">
        <seg>如果该守护进程当前正忙于运行一些作业，则将启动一个全新的守护进程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the rules for skipping a task can't be expressed with predicate, you can use the &lt;a0&gt;&lt;c1&gt;StopExecutionException&lt;/c1&gt;&lt;/a0&gt;. If this exception is thrown by an action, the further execution of this action as well as the execution of any following action of this task is skipped. The build continues with executing the next task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T084828Z" creationid="huanghaohang" creationdate="20170922T084210Z">
        <seg>如果跳过任务的规则不能用断言来表达，你可以使用&lt;a0&gt;&lt;c1&gt;StopExecutionException&lt;/c1&gt;&lt;/a0&gt;。如果一个操作抛出此异常，则此操作的接下来的执行以及该任务的任何后续操作都会跳过。构建会继续执行下一个任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you are coming from Ant, such an enhanced Gradle task as &lt;s0&gt;&lt;e1&gt;Copy&lt;/e1&gt;&lt;/s0&gt; looks like a mixture between an Ant target and an Ant task. And this is actually the case. The separation that Ant does between tasks and targets is not done by Gradle. The simple Gradle tasks are like Ant's targets and the enhanced Gradle tasks also include the Ant task aspects. All of Gradle's tasks share a common API and you can create dependencies between them. Such a task might be nicer to configure than an Ant task. It makes full use of the type system, is more expressive and easier to maintain.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T045708Z" creationid="huanghaohang" creationdate="20170923T045708Z">
        <seg>如果你是从 Ant 转过来的，像&lt;s0&gt;&lt;e1&gt;Copy&lt;/e1&gt;&lt;/s0&gt;这种增强的Gradle任务，看起来就像一个Ant目标和Ant任务之间的混合。实际上确实是这样子。Gradle 不像Ant那样对任务和目标进行分离。简单的Gradle任务就像Ant的目标，而增强的Gradle任务也包含了Ant任务方面的内容。所有的Gradle任务共享一个通用的API，你可以创建它们之间的依赖关系。这样的任务可能比Ant任务更好配置，它充分利用了类型系统，更具表现力也更易于维护。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you are encountering problems, one of the first things to try is using the very latest release of Gradle. New versions of Gradle are released frequently with bug fixes and new features. The problem you are having may have been fixed in a new release.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T121207Z" creationid="95" creationdate="20170723T121006Z">
        <seg>当您遇到问题时，首先确认一下是否使用的最新版本的Gradle。新版本的Gradle总是会更加完善并且带有新特性。有可能遇到的问题在一个新的版本中已经被修复。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you are interested in the DSL elements mentioned here, have a look at &lt;a0&gt;&lt;c1&gt;Project.configurations{}&lt;/c1&gt;&lt;/a0&gt;, &lt;a2&gt;&lt;c3&gt;Project.repositories{}&lt;/c3&gt;&lt;/a2&gt; and &lt;a4&gt;&lt;c5&gt;Project.dependencies{}&lt;/c5&gt;&lt;/a4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T051447Z" creationid="huanghaohang" creationdate="20170908T051314Z">
        <seg>如果对这里提到的DSL元素感兴趣，请查看&lt;a0&gt;&lt;c1&gt;Project.configurations{}&lt;/c1&gt;&lt;/a0&gt;，&lt;a2&gt;&lt;c3&gt;Project.repositories{}&lt;/c3&gt;&lt;/a2&gt;和&lt;a4&gt;&lt;c5&gt;Project.dependencies{}&lt;/c5&gt;&lt;/a4&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you are using one of the tasks that come with Gradle, such as a task added by the Java plugin, you might have noticed that Gradle will skip tasks that are up-to-date. This behaviour is also available for your tasks, not just for built-in tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T093751Z" creationid="huanghaohang" creationdate="20170922T085425Z">
        <seg>如果你使用 Gradle 自带的任务，如 Java 插件所添加的任务的话，你可能已经注意到 Gradle 将跳过最新的任务。这种行为也可以用于你的任务，而不仅仅是内置任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you are using the Gradle Daemon, try temporarily disabling the daemon (you can pass the command line switch &lt;c0&gt;--no-daemon&lt;/c0&gt;). More information about troubleshooting daemon is located in &lt;a1&gt;Chapter 19, &lt;i2&gt;The Gradle Daemon&lt;/i2&gt;&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T121452Z" creationid="95" creationdate="20170723T121210Z">
        <seg>如果您正在使用Gradle守护进程，尝试禁掉守护进程（通过向命令行中传入&lt;c0&gt;--no-daemon&lt;/c0&gt;参数）。更多的内容可参阅 《&lt;a1&gt;第十九章， &lt;i2&gt;Gradle 守护进程&lt;/i2&gt;&lt;/a1&gt;》。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you have a problem with your build, try temporarily disabling the daemon (you can pass the command line switch &lt;c0&gt;--no-daemon&lt;/c0&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180120T025433Z" creationid="huanghaohang" creationdate="20180120T025433Z">
        <seg>如果你的构建有问题，请尝试暂时禁用守护进程（可以通过使用命令行开关 &lt;c0&gt;--no-daemon&lt;/c0&gt;)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you run this from your Gradle project working directory, you should see a tree of tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170911T143505Z" creationid="huanghaohang" creationdate="20170911T143505Z">
        <seg>如果你在Gradle项目目录下运行Gradle GUI，你应该会看到一个任务树。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you think this looks similar to Ant's targets, well, you are right. Gradle tasks are the equivalent to Ant targets. But as you will see, they are much more powerful. We have used a different terminology than Ant as we think the word &lt;s0&gt;&lt;e1&gt;task&lt;/e1&gt;&lt;/s0&gt; is more expressive than the word &lt;s2&gt;&lt;e3&gt;target&lt;/e3&gt;&lt;/s2&gt;. Unfortunately this introduces a terminology clash with Ant, as Ant calls its commands, such as &lt;c4&gt;javac&lt;/c4&gt; or &lt;c5&gt;copy&lt;/c5&gt;, tasks. So when we talk about tasks, we &lt;s6&gt;&lt;e7&gt;always&lt;/e7&gt;&lt;/s6&gt; mean Gradle tasks, which are the equivalent to Ant's targets. If we talk about Ant tasks (Ant commands), we explicitly say &lt;s8&gt;&lt;e9&gt;ant task&lt;/e9&gt;&lt;/s8&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T151624Z" creationid="95" creationdate="20170724T151624Z">
        <seg>如果你认为它看上去和Ant的目标很像，那就对了。Gradle的任务相当于Ant的目标。但是，正如你所见，它们更加强大。我们使用与Ant不同的术语，是因为我们认为&lt;s0&gt;&lt;e1&gt;任务&lt;/e1&gt;&lt;/s0&gt;这个词比&lt;s2&gt;&lt;e3&gt;目标&lt;/e3&gt;&lt;/s2&gt;的含义更丰富。不过不幸的是，这也导致了与Ant的术语冲突。Ant会调用它自己的一些命令，比如像&lt;c4&gt;javac&lt;/c4&gt; 或是 &lt;c5&gt;copy&lt;/c5&gt;任务。因为，当我们讨论任务时，&lt;s6&gt;&lt;e7&gt;通常&lt;/e7&gt;&lt;/s6&gt;指的是Gradle的任务，相当于Ant的目标。当我们讨论Ant 的任务时，我们会明确地说是 &lt;s8&gt;&lt;e9&gt;ant 任务&lt;/e9&gt;&lt;/s8&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If your proxy requires NTLM authentication, you may need to provide the authentication domain as well as the username and password. There are 2 ways that you can provide the domain for authenticating to a NTLM proxy:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180130T080854Z" creationid="huanghaohang" creationdate="20180130T080854Z">
        <seg>如果你的代理需要 NTLM 身份验证，则可能需要提供身份验证域以及用户名和密码。有两种方法可以向 NTLM 代理提供进行身份验证的域：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Important information messages</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T221524Z" creationid="huanghaohang" creationdate="20180105T221524Z">
        <seg>重要的信息消息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Importing an Ant build</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180314T015206Z" creationid="huanghaohang" creationdate="20180314T015206Z">
        <seg>导入 Ant 构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In &lt;a0&gt;Chapter 2, &lt;i1&gt;Overview&lt;/i1&gt;&lt;/a0&gt; you will find a detailed overview of Gradle. Otherwise, the &lt;a2&gt;tutorials&lt;/a2&gt; are waiting, have fun :)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T142020Z" creationid="95" creationdate="20170721T142020Z">
        <seg>在 《&lt;a0&gt;第二章，&lt;i1&gt;概述&lt;/i1&gt;&lt;/a0&gt;》，你将会看到有关Gradle的详细介绍。另一方面， &lt;a2&gt;教程&lt;/a2&gt; 在等你，开始吧。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In Gradle dependencies are grouped into &lt;e0&gt;configurations&lt;/e0&gt;. A configuration is simply a named set of dependencies. We will refer to them as &lt;e1&gt;dependency configurations&lt;/e1&gt;. You can use them to declare the external dependencies of your project. As we will see later, they are also used to declare the publications of your project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T032324Z" creationid="huanghaohang" creationdate="20170908T032324Z">
        <seg>在Gradle中依赖会被分为几组&lt;e0&gt;配置&lt;/e0&gt;。配置只是一组依赖的命名，我们会把它们称为&lt;e1&gt;依赖配置&lt;/e1&gt;。你可以使用它们来声明项目的外部依赖。我们稍后会看到，它们也被用来声明你的项目的发布内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In a command-line shell, enter into the containing directory and execute the build script by running &lt;s0&gt;&lt;c1&gt;gradle -q hello&lt;/c1&gt;&lt;/s0&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T145113Z" creationid="95" creationdate="20170724T144952Z">
        <seg>然后在命令行shell里，进入到当前目录并运行&lt;s0&gt;&lt;c1&gt;gradle -q hello&lt;/c1&gt;&lt;/s0&gt;来执行这个构建脚本：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In addition to supporting a traditional command line interface, Gradle offers a graphical user interface. This is a stand alone user interface that can be launched with the &lt;s0&gt;&lt;s1&gt;--gui&lt;/s1&gt;&lt;/s0&gt; option.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170911T143251Z" creationid="huanghaohang" creationdate="20170911T143251Z">
        <seg>除了支持传统的命令行界面，Gradle也提供了一个图形用户界面（GUI）。它是一个独立的用户界面，可以使用&lt;s0&gt;&lt;s1&gt;--gui&lt;/s1&gt;&lt;/s0&gt;选项来启动。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In addition to the built-in tasks shown below, you can also use the &lt;a0&gt;project report plugin&lt;/a0&gt; to add tasks to your project which will generate these reports.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T010826Z" creationid="huanghaohang" creationdate="20170910T010826Z">
        <seg>除了下面所示的内置任务之外，还可以使用&lt;a0&gt;项目报告插件&lt;/a0&gt;将一些任务添加到项目中，以生成这些报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In addition, user interfaces can provide some interesting features if the Gradle model can be built relatively quickly. For example, the daemon might be useful for following scenarios:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180108T133939Z" creationid="huanghaohang" creationdate="20180108T133939Z">
        <seg>此外，如果可以相对较快地建立 Gradle 模型，用户界面可以提供一些有趣的功能。例如，守护进程可能对以下情况有用：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In case you don't want to use the test class detection, you can disable it by setting &lt;c0&gt;scanForTestClasses&lt;/c0&gt; to false. This will make the test task only use the includes / excludes to find test classes. If &lt;c1&gt;scanForTestClasses&lt;/c1&gt; is disabled and no include or exclude patterns are specified, the respective defaults are used. For include this is &lt;c2&gt;"**/*Tests.class", "**/*Test.class"&lt;/c2&gt; and the for exclude it is &lt;c3&gt;"**/Abstract*.class"&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180405T155855Z" creationid="huanghaohang" creationdate="20180405T155855Z">
        <seg>如果您不想使用测试类检测，则可以通过设置 &lt;c0&gt;scanForTestClasses&lt;/c0&gt; 为 false 来禁用它。这将使测试任务仅使用包含或排除来查找测试类。如果 &lt;c1&gt;scanForTestClasses&lt;/c1&gt; 被禁用，并且没有指定包含或排除模式，则使用相应的默认值。对于包含的默认值是 &lt;c2&gt;“**/*Tests.class”，“**/*Test.class”&lt;/c2&gt;，而排除的默认值是 &lt;c3&gt;“**/Abstract*.class”&lt;/c3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In future the daemon will offer more features:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180109T135840Z" creationid="huanghaohang" creationdate="20180109T135840Z">
        <seg>未来，该守护进程还会提供更多的功能：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In general, snappy behavior of the build tool is always handy. If you try using the daemon for your local builds it's going to be hard for you to go back to regular use of Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180108T135120Z" creationid="huanghaohang" creationdate="20180108T134044Z">
        <seg>一般来说，构建工具的敏捷行为总是方便的。如果你尝试在你的本地构建中使用守护进程的话，那么你将很难再回到 Gradle 的常规使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In some cases it is useful to control the &lt;s0&gt;&lt;e1&gt;order&lt;/e1&gt;&lt;/s0&gt; in which 2 tasks will execute, without introducing an explicit dependency between those tasks. The primary difference between a task &lt;s2&gt;&lt;e3&gt;ordering&lt;/e3&gt;&lt;/s2&gt; and a task &lt;s4&gt;&lt;e5&gt;dependency&lt;/e5&gt;&lt;/s4&gt; is that an ordering rule does not influence which tasks will be executed, only the order in which they will be executed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T030029Z" creationid="huanghaohang" creationdate="20170922T030029Z">
        <seg>在某些情况下，控制两个任务的执行&lt;s0&gt;&lt;e1&gt;顺序&lt;/e1&gt;&lt;/s0&gt;，而不引入这些任务之间的依赖，是很有用的。任务&lt;s2&gt;&lt;e3&gt;排序&lt;/e3&gt;&lt;/s2&gt;和任务&lt;s4&gt;&lt;e5&gt;依赖&lt;/e5&gt;&lt;/s4&gt;之间的主要区别是，排序规则不会影响执行哪些任务，只会影响任务执行的顺序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the example above, we applied the Java plugin which, among other things, did the following:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T024734Z" creationid="huanghaohang" creationdate="20180131T024734Z">
        <seg>在上面的示例中，我们应用了 Java 插件，除此之外还做了下列操作：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the examples above, it is still possible to execute &lt;c0&gt;taskY&lt;/c0&gt; without causing &lt;c1&gt;taskX&lt;/c1&gt; to run:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T035738Z" creationid="huanghaohang" creationdate="20170922T035738Z">
        <seg>在上面的例子中，它仍有可能执行&lt;c0&gt;taskY&lt;/c0&gt;而不会造成&lt;c1&gt;taskX&lt;/c1&gt;也运行：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the following example, execution of the &lt;c0&gt;distribution&lt;/c0&gt; and &lt;c1&gt;release&lt;/c1&gt; tasks results in different value of the &lt;c2&gt;version&lt;/c2&gt; variable.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T025155Z" creationid="95" creationdate="20170729T025155Z">
        <seg>在下面的例子中，&lt;c0&gt;distribution&lt;/c0&gt;和&lt;c1&gt;release&lt;/c1&gt; 任务的执行会导致&lt;c2&gt;version&lt;/c2&gt; 变量有不同的结果。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the introductory tutorial (&lt;a0&gt;Chapter 6, &lt;i1&gt;Build Script Basics&lt;/i1&gt;&lt;/a0&gt;) you have learned how to create simple tasks. You have also learned how to add additional behavior to these tasks later on. And you have learned how to create dependencies between tasks. This was all about simple tasks. But Gradle takes the concept of tasks further. Gradle supports &lt;e2&gt;enhanced tasks&lt;/e2&gt;, that is, tasks which have their own properties and methods. This is really different to what you are used to with Ant targets. Such enhanced tasks are either provided by you or are provided by Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T120437Z" creationid="huanghaohang" creationdate="20170918T151706Z">
        <seg>在入门教程（《&lt;a0&gt;第六章，&lt;i1&gt;构建脚本基础&lt;/i1&gt;&lt;/a0&gt;》）中，你已经学会了如何创建简单的任务。之后你还学习了如何在向任务添加额外的行为。你也已经学会了如何创建任务之间的依赖。这都是简单的任务。但是Gradle将任务的概念推得更深远。 Gradle支持&lt;e2&gt;增强任务&lt;/e2&gt;，也就是有自己的属性和方法的任务。这是真正的与你所使用的Ant目标（target）的不同之处。这些增强的任务可以由你或者是Gradle提供。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the tutorial in &lt;a0&gt;Chapter 7, &lt;i1&gt;Java Quickstart&lt;/i1&gt;&lt;/a0&gt; we used, for example, the &lt;c2&gt;apply()&lt;/c2&gt; method. Where does this method come from? We said earlier that the build script defines a project in Gradle. For each project in the build, Gradle creates an object of type &lt;a3&gt;&lt;c4&gt;Project&lt;/c4&gt;&lt;/a3&gt; and associates this &lt;c5&gt;Project&lt;/c5&gt; object with the build script. As the build script executes, it configures this &lt;c6&gt;Project&lt;/c6&gt; object:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170912T125213Z" creationid="huanghaohang" creationdate="20170912T124812Z">
        <seg>在教程《&lt;a0&gt;第七章，&lt;i1&gt;Java快速入门&lt;/i1&gt;&lt;/a0&gt;》中，我们使用了&lt;c2&gt;apply()&lt;/c2&gt;方法。这种方法从何而来？我们以前说过，构建脚本在Gradle中定义了一个项目。对于构建中的每个项目，Gradle都会创建一个&lt;a3&gt;&lt;c4&gt;Project&lt;/c4&gt;&lt;/a3&gt;类型的对象，并把这一&lt;c5&gt;Project&lt;/c5&gt;对象与构建脚本相关联。当构建脚本执行时，它会配置这个&lt;c6&gt;Project&lt;/c6&gt;对象：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this chapter we will discuss how to use plugins and the terminology and concepts surrounding plugins.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180130T092810Z" creationid="huanghaohang" creationdate="20180130T092810Z">
        <seg>在本章中，我们将讨论如何使用插件以及有关插件的术语和概念。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this chapter, we have had a first look at tasks. But this is not the end of the story for tasks. If you want to jump into more of the details, have a look at &lt;a0&gt;Chapter 15, &lt;i1&gt;More about Tasks&lt;/i1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T030800Z" creationid="95" creationdate="20170729T030627Z">
        <seg>在本章中，我们已经对任务有了初步的了解。但是关于任务的内容还不仅仅是这些，如果你想了解更多的细节，请参阅 &lt;a0&gt;第十五章，&lt;i1&gt;任务进阶&lt;/i1&gt;&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this chapter, you have seen how to do some of the things you commonly need to build a Java based project. This chapter is not exhaustive, and there are many other things you can do with Java projects in Gradle. You can find out more about the Java plugin in &lt;a0&gt;Chapter 23, &lt;i1&gt;The Java Plugin&lt;/i1&gt;&lt;/a0&gt;, and you can find more sample Java projects in the &lt;c2&gt;samples/java&lt;/c2&gt; directory in the Gradle distribution.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T130337Z" creationid="95" creationdate="20170803T130337Z">
        <seg>在本章中，你已经学习了如何构建一个基于Java的项目。本章节只是简单介绍，Gradle对Java项目可以做的事情还有很多。你可以在《&lt;a0&gt;第二十三章，&lt;i1&gt;Java插件&lt;/i1&gt;&lt;/a0&gt;》中对Java插件进行进一步了解，更多的Java项目示例请在Gradle分发包中的&lt;c2&gt;samples/java&lt;/c2&gt;目录中查看。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this chapter, you have seen some of the things you can do with Gradle from the command-line. You can find out more about the &lt;s0&gt;&lt;s1&gt;gradle&lt;/s1&gt;&lt;/s0&gt; command in &lt;a2&gt;Appendix D, &lt;i3&gt;Gradle Command Line&lt;/i3&gt;&lt;/a2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T031935Z" creationid="huanghaohang" creationdate="20170910T031935Z">
        <seg>在本章中，你已经学到了许多可以从命令行做的事情。关于&lt;s0&gt;&lt;s1&gt;gradle这&lt;/s1&gt;&lt;/s0&gt;命令的更多信息，可以参考《&lt;a2&gt;附录D，&lt;i3&gt;Gradle命令行&lt;/i3&gt;&lt;/a2&gt;》。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this example, an &lt;c0&gt;ext&lt;/c0&gt; block adds two extra properties to the &lt;c1&gt;project&lt;/c1&gt; object. Additionally, a property named &lt;c2&gt;purpose&lt;/c2&gt; is added to each source set by setting &lt;c3&gt;ext.purpose&lt;/c3&gt; to &lt;c4&gt;null&lt;/c4&gt; (&lt;c5&gt;null&lt;/c5&gt; is a permissible value). Once the properties have been added, they can be read and set like predefined properties.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T135016Z" creationid="huanghaohang" creationdate="20170913T133607Z">
        <seg>在这个例子中，&lt;c0&gt;ext&lt;/c0&gt;块将两个额外属性添加到&lt;c1&gt;project&lt;/c1&gt;对象中。此外，通过把&lt;c3&gt;ext.purpose&lt;/c3&gt;设置为&lt;c4&gt;null&lt;/c4&gt;（&lt;c5&gt;null&lt;/c5&gt;是允许的值），将&lt;c2&gt;purpose&lt;/c2&gt;属性添加到每个源码集（source set）中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In your build script, a property called &lt;c0&gt;ant&lt;/c0&gt; is provided by Gradle. This is a reference to an &lt;a1&gt;&lt;c2&gt;AntBuilder&lt;/c2&gt;&lt;/a1&gt; instance. This &lt;c3&gt;AntBuilder&lt;/c3&gt; is used to access Ant tasks, types and properties from your build script. There is a very simple mapping from Ant's &lt;c4&gt;build.xml&lt;/c4&gt; format to Groovy, which is explained below.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171213T142456Z" creationid="huanghaohang" creationdate="20171213T140910Z">
        <seg>在构建脚本中，Gradle 提供了一个叫 &lt;c0&gt;ant&lt;/c0&gt; 的属性，它是一个指向 &lt;a1&gt;&lt;c2&gt;AntBuilder&lt;/c2&gt;&lt;/a1&gt; 实例的引用。这个 &lt;c3&gt;AntBuilder&lt;/c3&gt; 用于从构建脚本中访问 Ant 任务，类型和属性。从 Ant 的 &lt;c4&gt;build.xml&lt;/c4&gt; 格式到 Groovy 之间有一个非常简单的映射，这将在下面解释。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Information messages</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T221542Z" creationid="huanghaohang" creationdate="20180105T221542Z">
        <seg>信息消息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Installing Gradle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T013318Z" creationid="huanghaohang" creationdate="20170919T013318Z">
        <seg>安装 Gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Instead of using a task name, you can define a dependency using a &lt;c0&gt;Task&lt;/c0&gt; object, as shown in this example:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T130233Z" creationid="huanghaohang" creationdate="20170919T130203Z">
        <seg>可以使用一个&lt;c0&gt;Task&lt;/c0&gt;对象而不是任务名称来定义依赖，如下：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Internally, Gradle uses Ant and Ivy. Both have their own logging system. Gradle redirects their logging output into the Gradle logging system. There is a 1:1 mapping from the Ant/Ivy log levels to the Gradle log levels, except the Ant/Ivy &lt;c0&gt;TRACE&lt;/c0&gt; log level, which is mapped to Gradle &lt;c1&gt;DEBUG&lt;/c1&gt; log level. This means the default Gradle log level will not show any Ant/Ivy output unless it is an error or a warning.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180107T024845Z" creationid="huanghaohang" creationdate="20180107T024822Z">
        <seg>Gradle 内部使用 Ant 和 Ivy，它们都有自己的日志系统。Gradle 将它们的日志输出重定向到 Gradle 的日志记录系统上。从 Ant 或 Ivy 的日志级别到 Gradle 的日志级别，除了Ant 或 Ivy 的 &lt;c0&gt;TRACE&lt;/c0&gt; 是被映射到 Gradle 的 &lt;c1&gt;DEBUG&lt;/c1&gt;日志级别之外，其他的都是一对一的映射。这意味着默认的 Gradle 日志级别不会显示任何 Ant 或 Ivy 输出，除非是错误或警告信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Introduces the basic build script elements: &lt;e0&gt;projects&lt;/e0&gt; and &lt;e1&gt;tasks&lt;/e1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170801T015153Z" creationid="95" creationdate="20170723T072802Z">
        <seg>介绍了基本的构建脚本元素：&lt;e0&gt;项目&lt;/e0&gt; 和 &lt;e1&gt;任务&lt;/e1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Introduction</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072431Z" creationid="haohang" creationdate="20170720T072431Z">
        <seg>介绍</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is also possible for an Ant target to depend on a Gradle task:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T084830Z" creationid="huanghaohang" creationdate="20180105T084830Z">
        <seg>它也可以用于一个依赖于 Gradle 任务的 Ant 目标：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is important to note that the content of a file collection is evaluated lazily, when it is needed. This means you can, for example, create a &lt;c0&gt;FileCollection&lt;/c0&gt; that represents files which will be created in the future by, say, some task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T150849Z" creationid="huanghaohang" creationdate="20170927T150849Z">
        <seg>要注意的一个地方是，一个文件集合的内容是懒评估的，它只在需要的时候才计算。这意味着你可以创建一个&lt;c0&gt;FileCollection&lt;/c0&gt; 对象来表示一些会在以后才创建的文件，比方说在一些任务中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is possible to execute tasks &lt;c0&gt;A&lt;/c0&gt; and &lt;c1&gt;B&lt;/c1&gt; independently. The ordering rule only has an effect when both tasks are scheduled for execution.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T081344Z" creationid="huanghaohang" creationdate="20170922T081344Z">
        <seg>任务&lt;c0&gt;A&lt;/c0&gt;和&lt;c1&gt;B&lt;/c1&gt;可以独立执行。排序规则只有在两个任务都计划执行时才有作用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is preferable to run this command from your Gradle project directory so that the settings of the UI will be stored in your project directory. However, you can run it then change the working directory via the Setup tab in the UI.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170911T143722Z" creationid="huanghaohang" creationdate="20170911T143535Z">
        <seg>最好是在Gradle项目目录运行此命令，这样对UI的设置就可以保存在项目的目录中。不过，你也可以先运行它，然后通过UI中的“设置”选项卡来更改工作目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is preferable to use the &lt;c0&gt;Copy&lt;/c0&gt; task wherever possible, as it support incremental building and task dependency inference without any extra effort on your part. The &lt;c1&gt;copy()&lt;/c1&gt; method can be used to copy files as &lt;s2&gt;&lt;e3&gt;part&lt;/e3&gt;&lt;/s2&gt; of a task's implementation. That is, the copy method is intended to be used by custom tasks (see &lt;a4&gt;Chapter 57, &lt;i5&gt;Writing Custom Task Classes&lt;/i5&gt;&lt;/a4&gt;) that need to copy files as part of their function. In such a scenario, the custom task should sufficiently declare the inputs/outputs relevant to the copy action.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T060218Z" creationid="huanghaohang" creationdate="20171031T071359Z">
        <seg>在可能的情况下，最好是使用 &lt;c0&gt;Copy&lt;/c0&gt; 任务，因为它支持增量构建和任务依赖关系推理，而不需要你的额外付出。该 &lt;c1&gt;copy()&lt;/c1&gt; 方法可以作为一个任务的实现的 &lt;s2&gt;&lt;e3&gt;一部分&lt;/e3&gt;&lt;/s2&gt; 来复制文件。也就是说，这个复制方法旨在用于自定义任务（&lt;a4&gt;《第五十七章，&lt;i5&gt;编写自定义任务类&lt;/i5&gt;》&lt;/a4&gt;)中，需要把文件复制作为其中一部分功能的时候。在这种情况下，自定义任务应充分声明与复制操作相关的输入和输出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>JUnit and TestNG allows sophisticated groupings of test methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180405T155932Z" creationid="huanghaohang" creationdate="20180405T155932Z">
        <seg>JUnit 和 TestNG 支持复杂的测试方法分组。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>JVM options</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T013407Z" creationid="huanghaohang" creationdate="20170919T013407Z">
        <seg>JVM 选项</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>JVM options for running Gradle can be set via environment variables. You can use &lt;c0&gt;GRADLE_OPTS&lt;/c0&gt; or &lt;c1&gt;JAVA_OPTS&lt;/c1&gt;. Those variables can be used together. &lt;c2&gt;JAVA_OPTS&lt;/c2&gt; is by convention an environment variable shared by many Java applications. A typical use case would be to set the HTTP proxy in &lt;c3&gt;JAVA_OPTS&lt;/c3&gt; and the memory options in &lt;c4&gt;GRADLE_OPTS&lt;/c4&gt;. Those variables can also be set at the beginning of the &lt;s5&gt;&lt;s6&gt;gradle&lt;/s6&gt;&lt;/s5&gt; or &lt;s7&gt;&lt;s8&gt;gradlew&lt;/s8&gt;&lt;/s7&gt; script.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T120248Z" creationid="95" creationdate="20170723T115605Z">
        <seg>Gradle运行时的JVM参数可以通过&lt;c0&gt;GRADLE_OPTS&lt;/c0&gt; 或是 &lt;c1&gt;JAVA_OPTS&lt;/c1&gt;的环境变量来设置，这些环境变量也可以一起使用。习惯上， &lt;c2&gt;JAVA_OPTS&lt;/c2&gt; 是一个与其他Java应用程序共享的环境变量，一个典型的场景是在 &lt;c3&gt;JAVA_OPTS&lt;/c3&gt; 中设置HTTP代理，而在&lt;c4&gt;GRADLE_OPTS&lt;/c4&gt;中设置内存选项。这些环境变量也可以在 &lt;s5&gt;&lt;s6&gt;gradle&lt;/s6&gt;&lt;/s5&gt; 或 &lt;s7&gt;&lt;s8&gt;gradlew&lt;/s8&gt;&lt;/s7&gt; 脚本文件的开头设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Jar</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180312T062911Z" creationid="haohang" creationdate="20180312T062911Z">
        <seg>Jar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Java Quickstart</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171014T124853Z" creationid="huanghaohang" creationdate="20171014T124853Z">
        <seg>Java 快速入门</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Java plugin - dependency configurations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T054209Z" creationid="haohang" creationdate="20180313T054209Z">
        <seg>Java 插件——依赖配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Java plugin - tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T040056Z" creationid="haohang" creationdate="20180313T040056Z">
        <seg>Java 插件——任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Java source for the given source set</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T053021Z" creationid="haohang" creationdate="20180313T053021Z">
        <seg>给定源集的 Java 源代码</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Java version compatibility to use when compiling Java source.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180314T094342Z" creationid="haohang" creationdate="20180314T094342Z">
        <seg>当编译 Java 源代码时所使用的 Java 版本兼容性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Java version to generate classes for.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180314T094446Z" creationid="haohang" creationdate="20180314T094446Z">
        <seg>要生成的类的 Java 版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>JavaCompile</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180312T062250Z" creationid="haohang" creationdate="20180312T062250Z">
        <seg>JavaCompile</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Javadoc</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180312T062935Z" creationid="haohang" creationdate="20180312T062935Z">
        <seg>Javadoc</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Just like the Java plugin, the Groovy plugin allows to configure custom locations for Groovy production and test sources.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T121924Z" creationid="huanghaohang" creationdate="20180406T121831Z">
        <seg>和 Java 插件一样，Groovy 插件允许把 Groovy 的生产和测试的源文件配置为自定义的位置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>LIFECYCLE</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T221529Z" creationid="huanghaohang" creationdate="20180105T221529Z">
        <seg>LIFECYCLE</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>LIFECYCLE and higher</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T221917Z" creationid="huanghaohang" creationdate="20180105T221917Z">
        <seg>LIFECYCLE 及更高</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Language for dependency based programming</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170722T015549Z" creationid="95" creationdate="20170722T015549Z">
        <seg>基于编程的依赖语言</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Later you will see that such methods can be shared among subprojects in multi-project builds. If your build logic becomes more complex, Gradle offers you other very convenient ways to organize it. We have devoted a whole chapter to this. See &lt;a0&gt;Chapter 59, &lt;i1&gt;Organizing Build Logic&lt;/i1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T023835Z" creationid="95" creationdate="20170729T023518Z">
        <seg>在后面您将会看到，像这样的方法可以在多项目构建的子项目之间共享。即使您的构建逻辑变得很复杂，Gradle也提供了一种非常方便的方式去组织它。关于这一点，我们会用一整个章节来讨论，详请参阅 &lt;a0&gt;第五十九章，&lt;i1&gt;组织构建逻辑&lt;/i1&gt;&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Legal Notice</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072307Z" creationid="haohang" creationdate="20170720T072307Z">
        <seg>法律公告</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's add some dependencies. Here, we will declare that our production classes have a compile-time dependency on commons collections, and that our test classes have a compile-time dependency on junit:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T130644Z" creationid="95" creationdate="20170730T124722Z">
        <seg>让我们来添加一些依赖。在这里，我们将声明我们的生产类对commons collection具有编译时依赖，我们的测试类对junit具有需要编译时依赖：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's check this out:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180130T100151Z" creationid="huanghaohang" creationdate="20180130T100151Z">
        <seg>我们来看看以下内容：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's have a look at an example. Here our task generates several output files from a source XML file. Let's run it a couple of times.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T085702Z" creationid="huanghaohang" creationdate="20170922T085615Z">
        <seg>我们来看一个例子。在这里，我们的任务从一个 XML 源文件生成了多个输出文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's look at a simple example. To use the Java plugin, add the following to your build file:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T012442Z" creationid="95" creationdate="20170730T012442Z">
        <seg>让我们来看一个简单的例子。要使用Java插件，只需在构建脚本中添加如下代码：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's look at an example. To use the Groovy plugin, add the following to your build file:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T001642Z" creationid="huanghaohang" creationdate="20170909T001642Z">
        <seg>我们来看一个例子。要使用Groovy插件，请将以下内容添加到构建文件中：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's look at some dependency declarations. Here's a basic build script:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170907T161035Z" creationid="95" creationdate="20170907T161035Z">
        <seg>我们来看一下一些依赖声明。下面是一个基本的构建脚本：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's try this out and try to access the &lt;c0&gt;name&lt;/c0&gt; property of the &lt;c1&gt;Project&lt;/c1&gt; object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170912T130234Z" creationid="huanghaohang" creationdate="20170912T130234Z">
        <seg>下面我们试试看访问&lt;c1&gt;Project&lt;/c1&gt;对象的&lt;c0&gt;name&lt;/c0&gt;属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Level</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T221513Z" creationid="huanghaohang" creationdate="20180105T221513Z">
        <seg>级别</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>List&lt;File&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T104635Z" creationid="huanghaohang" creationdate="20180406T104635Z">
        <seg>List&lt;File&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Live visualisation of the build in a GUI</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180108T133952Z" creationid="huanghaohang" creationdate="20180108T133952Z">
        <seg>在 GUI 中的实时可视化构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Local variables are declared with the &lt;c0&gt;def&lt;/c0&gt; keyword. They are only visible in the scope where they have been declared. Local variables are a feature of the underlying Groovy language.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T132949Z" creationid="huanghaohang" creationdate="20170913T132949Z">
        <seg>局部变量是使用&lt;c0&gt;def&lt;/c0&gt;关键字来定义的，它们只在定义它们的范围内才可见。局部变量是Groovy语言下的一个特点。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Locating files</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180218T093014Z" creationid="huanghaohang" creationdate="20180218T093014Z">
        <seg>查找文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Locating tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180201T021652Z" creationid="huanghaohang" creationdate="20180201T021652Z">
        <seg>查找任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Manifest</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180318T010644Z" creationid="huanghaohang" creationdate="20180318T010644Z">
        <seg>Manifest</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Manifest are merged in the order they are declared by the &lt;c0&gt;from&lt;/c0&gt; statement. If the based manifest and the merged manifest both define values for the same key, the merged manifest wins by default. You can fully customize the merge behavior by adding &lt;c1&gt;eachEntry&lt;/c1&gt; actions in which you have access to a &lt;a2&gt;&lt;c3&gt;ManifestMergeDetails&lt;/c3&gt;&lt;/a2&gt; instance for each entry of the resulting manifest. The merge is not immediately triggered by the from statement. It is done lazily, either when generating the jar, or by calling &lt;c4&gt;writeTo&lt;/c4&gt; or &lt;c5&gt;effectiveManifest&lt;/c5&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T113319Z" creationid="huanghaohang" creationdate="20180406T112203Z">
        <seg>Manifest 会根据在 &lt;c0&gt;from&lt;/c0&gt; 语句中所声明的顺序进行合并。如果基本的清单和合并清单都定义了同一个键的值，那么默认情况下会采用要合并的清单的值。你可以通过添加 &lt;c1&gt;eachEntry&lt;/c1&gt; 来完全自定义结果清单的每一个实体的合并行为，它让你可以访问 &lt;a2&gt;&lt;c3&gt;ManifestMergeDetails&lt;/c3&gt;&lt;/a2&gt; 实例。合并不会立即由 from 语句触发。它是惰性执行的，在生成 jar 或者是通过调用 &lt;c4&gt;writeTo&lt;/c4&gt; 或 &lt;c5&gt;effectiveManifest&lt;/c5&gt; 的时候完成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Manipulating existing tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T031833Z" creationid="huanghaohang" creationdate="20170927T031833Z">
        <seg>操纵现有任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Many Ant tasks set properties when they execute. There are several ways to get the value of these properties. You can get the property directly from the &lt;c0&gt;AntBuilder&lt;/c0&gt; instance. The Ant properties are also available as a Map. Below are some examples.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T094605Z" creationid="huanghaohang" creationdate="20180105T094605Z">
        <seg>许多 Ant 任务会在执行时设置属性，有几种方法可以获得这些属性的值。你可以直接从 &lt;c0&gt;AntBuilder&lt;/c0&gt; 实例获取属性。这些 Ant 属性也可以作为 Map 使用。以下是一些例子。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Many objects in Gradle have properties which accept a set of input files. For example, the &lt;a0&gt;&lt;c1&gt;JavaCompile&lt;/c1&gt;&lt;/a0&gt; task has a &lt;c2&gt;source&lt;/c2&gt; property, which defines the source files to compile. You can set the value of this property using any of the types supported by the &lt;a3&gt;files()&lt;/a3&gt; method, which was shown above. This means you can set the property using, for example, a &lt;c4&gt;File&lt;/c4&gt;, &lt;c5&gt;String&lt;/c5&gt;, collection, &lt;c6&gt;FileCollection&lt;/c6&gt; or even a closure. Here are some examples:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171002T134042Z" creationid="huanghaohang" creationdate="20171002T134042Z">
        <seg>Gradle中的许多对象都有接受一组输入文件的属性。例如， &lt;a0&gt;&lt;c1&gt;JavaCompile&lt;/c1&gt;&lt;/a0&gt;任务有一个&lt;c2&gt;source&lt;/c2&gt;属性，它定义了要编译的源文件。你可以上面所示的&lt;a3&gt;files()&lt;/a3&gt;方法所支持的任何类型来设置此属性的值。这意味着，你可以通过如&lt;c4&gt;File&lt;/c4&gt;， &lt;c5&gt;String&lt;/c5&gt;，集合， &lt;c6&gt;FileCollection&lt;/c6&gt;，甚至是闭包来设置该属性。这里有些例子：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Many settings (like the java version and maximum heap size) can only be specified when launching a new JVM for the build process. This means that Gradle must launch a separate JVM process to execute the build after parsing the various &lt;c0&gt;gradle.properties&lt;/c0&gt; files. When running with the daemon, a JVM with the correct parameters is started once and reused for each daemon build execution. When Gradle is executed without the daemon, then a new JVM must be launched for every build execution, unless the JVM launched by the Gradle start script happens to have the same parameters.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180130T072843Z" creationid="huanghaohang" creationdate="20180126T071751Z">
        <seg>许多设置（如 java 版本和最大堆大小）只能在为构建进程启动新的 JVM 时指定。这意味着 Gradle 必须在解析各种 &lt;c0&gt;gradle.properties&lt;/c0&gt; 文件后启动一个单独的 JVM 进程执行构建。当使用守护进程运行时，具有正确参数的JVM 将启动一次，并在每个守护进程的构建执行时重用。在没有守护进程的情况下执行 Gradle 时，除非由 Gradle 启动脚本启动的 JVM 恰好具有相同的参数，否则必须为每个构建的执行启动一个新的 JVM。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Many ways to manage your dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T034041Z" creationid="95" creationdate="20170723T034041Z">
        <seg>多种方式去管理依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Meaning</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T221951Z" creationid="huanghaohang" creationdate="20180105T221951Z">
        <seg>意义</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>More about Tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180201T021639Z" creationid="huanghaohang" creationdate="20180201T021639Z">
        <seg>任务详述</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>More information about &lt;c0&gt;AntBuilder&lt;/c0&gt; can be found in 'Groovy in Action' 8.4 or at the &lt;a1&gt;Groovy Wiki&lt;/a1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T083531Z" creationid="huanghaohang" creationdate="20180105T083402Z">
        <seg>有 关&lt;c0&gt;AntBuilder&lt;/c0&gt; 的详细信息，可以参阅 《Groovy in Action》的第 8.4 节， 或者是 &lt;a1&gt;Groovy Wiki&lt;/a1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Most Java projects are pretty similar as far as the basics go: you need to compile your Java source files, run some unit tests, and create a JAR file containing your classes. It would be nice if you didn't have to code all this up for every project. Luckily, you don't have to. Gradle solves this problem through the use of &lt;e0&gt;plugins&lt;/e0&gt;. A plugin is an extension to Gradle which configures your project in some way, typically by adding some pre-configured tasks which together do something useful. Gradle ships with a number of plugins, and you can easily write your own and share them with others. One such plugin is the &lt;e1&gt;Java plugin&lt;/e1&gt;. This plugin adds some tasks to your project which will compile and unit test your Java source code, and bundle it into a JAR file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T011617Z" creationid="95" creationdate="20170730T010800Z">
        <seg>大部分的Java项目的基本流程都是类似的：编译Java源文件，运行单元测试，创建一个Jar包。 如果可以不用为每个项目都去编写这些流程那就好了。在实际上，我们确实不用。Gradle通过 &lt;e0&gt;插件&lt;/e0&gt;来解决这一问题。插件就是Gradle的扩展，可以让你以某种方式来配置你的项目，通常通过添加一些预先配置的任务来共同做一些有用的事情。Gradle内置了许多插件，并且你也可以轻松地编写你自己的插件和分享自己的插件。&lt;e1&gt;Java plugin&lt;/e1&gt;是其中之一，这一插件向项目添加一些编译和测试Java源代码，并打包成JAR包的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Most builds work with files. Gradle adds some concepts and APIs to help you achieve this.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T124843Z" creationid="huanghaohang" creationdate="20170923T124802Z">
        <seg>大多数构建工作都需要使用到文件，Gradle 添加了一些概念和 API 来帮助你实现这一点。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Most of the examples in this user guide are run with the &lt;c0&gt;-q&lt;/c0&gt; command-line option. This suppresses Gradle's log messages, so that only the output of the tasks is shown. This keeps the example output in this user guide a little clearer. You don't need to use this option if you don't want. See &lt;a1&gt;Chapter 18, &lt;i2&gt;Logging&lt;/i2&gt;&lt;/a1&gt; for more details about the command-line options which affect Gradle's output.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T145756Z" creationid="95" creationdate="20170724T145756Z">
        <seg>本用户指南中的很多例子都用了 &lt;c0&gt;-q&lt;/c0&gt;参数运行，这个参数是用于抑制Gradle的日志消息，以便只显示任务的输出结果，这样会使得在本用户指南里的文档的输出更清晰一点。如果你不想要的话，你可以不加上这个参数。如果想了解更多影响Gradle的输出的命令参数，请参阅&lt;a1&gt;第十八章， &lt;i2&gt;日志&lt;/i2&gt;&lt;/a1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Most projects are not completely self-contained. They need files built by other projects in order to be compiled or tested and so on. For example, in order to use Hibernate in my project, I need to include some Hibernate jars in the classpath when I compile my source. To run my tests, I might also need to include some additional jars in the test classpath, such as a particular JDBC driver or the Ehcache jars.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170905T150016Z" creationid="95" creationdate="20170905T150016Z">
        <seg>大部分项目都不是完全独立的，它们需要其他项目所构建的一些文件来编译或测试等等。例如，如果我想在我的项目中使用Hibernate，我需要在编译代码时把一些Hibernate的jar文件包含到类路径中。如果要运行测试，可能还需要把一些其他的jar包包含到测试类路径中，比如特定的JDBC驱动或者是Ehcache jar文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Multi-project Java build</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171014T124918Z" creationid="huanghaohang" creationdate="20171014T124918Z">
        <seg>多项目的Java构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Multi-project builds</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170722T042054Z" creationid="95" creationdate="20170722T042054Z">
        <seg>多项目构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Name</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T132108Z" creationid="huanghaohang" creationdate="20170913T132108Z">
        <seg>名称</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>No stacktrace options</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T221956Z" creationid="huanghaohang" creationdate="20180105T221956Z">
        <seg>没有栈跟踪选项</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>No stacktraces are printed to the console in case of a build error (e.g. a compile error). Only in case of internal exceptions will stacktraces be printed. If the &lt;c0&gt;DEBUG&lt;/c0&gt; log level is chosen, truncated stacktraces are always printed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T222348Z" creationid="huanghaohang" creationdate="20180105T222235Z">
        <seg>在构建错误（如编译错误）时，不会打印堆栈跟踪信息到控制台。只有在内部异常情况下才会打印堆栈跟踪。如果选择&lt;c0&gt;DEBUG&lt;/c0&gt;日志级别，则总是打印截断的堆栈跟踪。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Not null</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T133343Z" creationid="haohang" creationdate="20180313T062400Z">
        <seg>不为 null</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that "&lt;c0&gt;B.mustRunAfter(A)&lt;/c0&gt;" or "&lt;c1&gt;B.shouldRunAfter(A)&lt;/c1&gt;" does not imply any execution dependency between the tasks:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T040256Z" creationid="huanghaohang" creationdate="20170922T040256Z">
        <seg>请注意“&lt;c0&gt;B.mustRunAfter(A)&lt;/c0&gt;”或“&lt;c1&gt;B.shouldRunAfter(A)&lt;/c1&gt;”并不意味着这些任务之间有任何执行上的依赖关系：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that abstract classes are not executed. Gradle also scan up the inheritance tree into jar files on the test classpath.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180405T155517Z" creationid="huanghaohang" creationdate="20180405T155348Z">
        <seg>请注意，抽象类不会被执行。 Gradle 还将扫描测试类路径中的 jar 文件的继承树。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that if a task has an output directory specified, any files added to that directory since the last time it was executed are ignored and will NOT cause the task to be out of date. This is so unrelated tasks may share an output directory without interfering with each other. If this is not the behaviour you want for some reason, consider using &lt;a0&gt;&lt;c1&gt;TaskOutputs.upToDateWhen()&lt;/c1&gt;&lt;/a0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T011533Z" creationid="huanghaohang" creationdate="20170923T011533Z">
        <seg>请注意，如果一个任务有指定的输出目录，在它上一次执行之后添加到该目录的所有文件都将被忽略，并且不会使这个任务过期。这样，那些不相关的任务之间就可以共用一个输出目录，而不会产生互相干扰。如果因为一些原因你不想要这样的行为，请考虑使用&lt;a0&gt;&lt;c1&gt;TaskOutputs.upToDateWhen()&lt;/c1&gt;&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that this command blocks until the Gradle GUI is closed. Under *nix it is probably preferable to run this as a background task (&lt;s0&gt;&lt;s1&gt;gradle --gui&amp;&lt;/s1&gt;&lt;/s0&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170911T143437Z" creationid="huanghaohang" creationdate="20170911T143437Z">
        <seg>请注意，这个命令会被一直阻塞直到Gradle GUI被关闭。在*nix下，最好是将其作为后台任务运行（&lt;s0&gt;&lt;s1&gt;gradle --gui＆&lt;/s1&gt;&lt;/s0&gt;）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Notice that Gradle executes this task a second time, and does not skip the task even though nothing has changed. Our example task was defined using an action closure. Gradle has no idea what the closure does and cannot automatically figure out whether the task is up-to-date or not. To use Gradle's up-to-date checking, you need to declare the inputs and outputs of the task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T093732Z" creationid="huanghaohang" creationdate="20170922T085721Z">
        <seg>请注意，Gradle第二次执行此任务的时候，即使没有任何变化也不会跳过该任务。我们的示例任务是使用一个动作闭包定义的。 Gradle不知道这个闭包做了什么，不能自动判断这个任务是否是最新的。要使用Gradle的最新检查，你需要声明任务的输入和输出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Notice that our sample applies the Java plugin to each subproject. This means the tasks and configuration properties we have seen in the previous section are available in each subproject. So, you can compile, test, and JAR all the projects by running &lt;s0&gt;&lt;c1&gt;gradle build&lt;/c1&gt;&lt;/s0&gt; from the root project directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T124825Z" creationid="95" creationdate="20170803T124431Z">
        <seg>注意，我们的例子对每一个子项目都应用了Java插件。这意味着，在前一节我们所看到的任务和配置，在每一个子项目中都是可用的。因此，你可以通过在根项目目录中运行&lt;s0&gt;&lt;c1&gt;gradle build&lt;/c1&gt;&lt;/s0&gt;，对所有的项目编译，测试并打成JAR包。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now execute &lt;s0&gt;&lt;c1&gt;gradle eclipse&lt;/c1&gt;&lt;/s0&gt; command to generate Eclipse project files. More on Eclipse task can be found in &lt;a2&gt;Chapter 38, &lt;i3&gt;The Eclipse Plugin&lt;/i3&gt;&lt;/a2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T153936Z" creationid="95" creationdate="20170731T153936Z">
        <seg>现在执行&lt;s0&gt;&lt;c1&gt;gradle eclipse&lt;/c1&gt;&lt;/s0&gt; 命令将生成Eclipse的项目文件。有关Eclipse插件的更多信息请参阅《&lt;a2&gt;第三十八章，&lt;i3&gt;Eclipse插件&lt;/i3&gt;&lt;/a2&gt;》。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now let's look at a typical multi-project build. Below is the layout for the project:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T154408Z" creationid="95" creationdate="20170731T154408Z">
        <seg>现在让我们来看一个典型的多项目构建。以下是这个项目的布局：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now, Gradle knows which files to check to determine whether the task is up-to-date or not.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T003937Z" creationid="huanghaohang" creationdate="20170923T003937Z">
        <seg>现在，Gradle 知道要检查哪些文件，以确定任务是否为最新的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now, when you run &lt;s0&gt;&lt;c1&gt;gradle uploadArchives&lt;/c1&gt;&lt;/s0&gt;, Gradle will build and upload your Jar. Gradle will also generate and upload an &lt;c2&gt;ivy.xml&lt;/c2&gt; as well.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T050749Z" creationid="huanghaohang" creationdate="20170908T050503Z">
        <seg>现在，当你运行&lt;s0&gt;&lt;c1&gt;gradle uploadArchives&lt;/c1&gt;&lt;/s0&gt;，Gradle将会构建你的Jar包，以及生成&lt;c2&gt;ivy.xml&lt;/c2&gt;并且一起上传。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Object</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T132250Z" creationid="huanghaohang" creationdate="20170913T132250Z">
        <seg>Object</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Obtaining information about your build</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233945Z" creationid="huanghaohang" creationdate="20171206T233945Z">
        <seg>获取构建的相关信息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Occasionally, you may want to stop the daemons either via the &lt;c0&gt;--stop&lt;/c0&gt; command line option or in a more forceful way.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180120T025506Z" creationid="huanghaohang" creationdate="20180120T025506Z">
        <seg>有时候，你可能想要通过 &lt;c0&gt;--stop&lt;/c0&gt; 命令行选项或更有力的方式停止守护进程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Often you will want to publish an archive, so that it is usable from another project. This process is described in &lt;a0&gt;Chapter 51, &lt;i1&gt;Publishing artifacts&lt;/i1&gt;&lt;/a0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233541Z" creationid="huanghaohang" creationdate="20171206T233541Z">
        <seg>通常你会想要发布一个档案，这样就可以在另一个项目中使用它。这个过程将在《&lt;a0&gt;第五十一章， &lt;i1&gt;发布工件&lt;/i1&gt;&lt;/a0&gt;》中讲到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Often, the dependencies of a project will themselves have dependencies. For example, Hibernate core requires several other libraries to be present on the classpath with it runs. So, when Gradle runs the tests for your project, it also needs to find these dependencies and make them available. We call these &lt;e0&gt;transitive dependencies&lt;/e0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170905T152538Z" creationid="95" creationdate="20170905T152151Z">
        <seg>通常一个项目的依赖还会有它们自己本身的依赖。例如Hibernate 核心类库在运行的时候就依赖于一些其他的类库。因此，当Gradle运行你的项目的测试用例时，它也需要找到这些依赖并使其可用。我们把这个过程称为 &lt;e0&gt;传递依赖&lt;/e0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>On the other hand, finalizer tasks are not executed if the finalized task didn't do any work, for example due to failed task dependency or if it's considered up to date.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T044611Z" creationid="huanghaohang" creationdate="20170923T044301Z">
        <seg>另一方面，如果最终的任务什么都没执行，比如因为失败的任务依赖或如果它被认为是最新的话，析构任务不会执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Once tasks are created they can be accessed via an &lt;s0&gt;&lt;e1&gt;API&lt;/e1&gt;&lt;/s0&gt;. This is different to Ant. For example you can create additional dependencies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T132935Z" creationid="95" creationdate="20170727T132814Z">
        <seg>与Ant不同，一旦任务被创建了，就可以通过一个 &lt;s0&gt;&lt;e1&gt;API&lt;/e1&gt;&lt;/s0&gt;去访问它。例如，你可以去给它们添加其他的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One use for source sets is to group source files into logical groups which describe their purpose. For example, you might use a source set to define an integration test suite, or you might use separate source sets to define the API and implementation classes of your project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180312T061021Z" creationid="haohang" creationdate="20180312T061021Z">
        <seg>源集的一个用途是，将源文件进行逻辑上的分组，以描述它们的目的。例如，你可以使用一个源集来定义一个集成测试套件，也可以使用单独的源集来定义项目的 API 和实现类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One way to obtain a &lt;c0&gt;FileCollection&lt;/c0&gt; instance is to use the &lt;a1&gt;&lt;c2&gt;Project.files()&lt;/c2&gt;&lt;/a1&gt; method. You can pass this method any number of objects, which are then converted into a set of &lt;c3&gt;File&lt;/c3&gt; objects. The &lt;c4&gt;files()&lt;/c4&gt; method accepts any type of object as its parameters. These are evaluated relative to the project directory, as per the &lt;c5&gt;file()&lt;/c5&gt; method, described in &lt;a6&gt;Section 16.1, “Locating files”&lt;/a6&gt;. You can also pass collections, iterables, maps and arrays to the &lt;c7&gt;files()&lt;/c7&gt; method. These are flattened and the contents converted to &lt;c8&gt;File&lt;/c8&gt; instances.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T131817Z" creationid="huanghaohang" creationdate="20170923T130900Z">
        <seg>使用&lt;a1&gt;&lt;c2&gt;Project.files()&lt;/c2&gt;&lt;/a1&gt;方法是获取方式&lt;c0&gt;FileCollection&lt;/c0&gt;实例的一种方式。你可以传任意个对象给这个方法，它们会被转换为一组&lt;c3&gt;File&lt;/c3&gt;对象。这个&lt;c4&gt;files()&lt;/c4&gt;方法接受任何类型的对象作为其参数。如&lt;a6&gt;第16.1节，“查找文件”&lt;/a6&gt;中对&lt;c5&gt;file()&lt;/c5&gt;方法的描述，它们会被计算为相对于项目目录的路径。你还可以将集合，可迭代类型，map和数组传给&lt;c7&gt;files()&lt;/c7&gt;方法。它们会被展开，并且里面的内容会被转换为&lt;c8&gt;File&lt;/c8&gt;实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One way to obtain a &lt;c0&gt;FileTree&lt;/c0&gt; instance is to use the &lt;a1&gt;&lt;c2&gt;Project.fileTree()&lt;/c2&gt;&lt;/a1&gt; method. This creates a &lt;c3&gt;FileTree&lt;/c3&gt; defined with a base directory, and optionally some Ant-style include and exclude patterns.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171002T023409Z" creationid="huanghaohang" creationdate="20171002T023409Z">
        <seg>获取 &lt;c0&gt;FileTree&lt;/c0&gt; 实例的其中一种方式是使用&lt;a1&gt;&lt;c2&gt;Project.fileTree()&lt;/c2&gt;&lt;/a1&gt; 方法。它会创建一个&lt;c3&gt;FileTree&lt;/c3&gt; ，使用一个基本目录来定义，并且可以选择一些Ant风格的包含和排除模式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Only Show Output When Errors Occur</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170911T150144Z" creationid="huanghaohang" creationdate="20170911T150144Z">
        <seg>只在出现错误时显示输出</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Option</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T221859Z" creationid="huanghaohang" creationdate="20180105T221859Z">
        <seg>选项</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Or a remote Ivy repository:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T044905Z" creationid="huanghaohang" creationdate="20170908T044905Z">
        <seg>或者是一个远程的Ivy仓库：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Or a remote Maven repository:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T044814Z" creationid="huanghaohang" creationdate="20170908T044814Z">
        <seg>或其他远程Maven仓库：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Or you can add behavior to an existing task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T133059Z" creationid="95" creationdate="20170727T133059Z">
        <seg>或者，你也可以对已经存在的任务添加行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Or, you can add behaviour to an Ant target:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T084801Z" creationid="huanghaohang" creationdate="20180105T084801Z">
        <seg>或者你也可以将行为添加到 Ant 目标中：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Ordering tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180201T021713Z" creationid="huanghaohang" creationdate="20180201T021713Z">
        <seg>任务排序</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Otherwise, continue on to &lt;a0&gt;Chapter 8, &lt;i1&gt;Dependency Management Basics&lt;/i1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T130404Z" creationid="95" creationdate="20170803T130404Z">
        <seg>另外，下一章是《&lt;a0&gt;第八章，&lt;i1&gt;依赖管理基础&lt;/i1&gt;&lt;/a0&gt;》。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Otherwise, continue on to some of the other &lt;a0&gt;tutorials&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T051624Z" creationid="huanghaohang" creationdate="20170908T051624Z">
        <seg>另外，继续其他&lt;a0&gt;教程&lt;/a0&gt;吧。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Otherwise, continue on to the tutorials in &lt;a0&gt;Chapter 7, &lt;i1&gt;Java Quickstart&lt;/i1&gt;&lt;/a0&gt; and &lt;a2&gt;Chapter 8, &lt;i3&gt;Dependency Management Basics&lt;/i3&gt;&lt;/a2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T030938Z" creationid="95" creationdate="20170729T030914Z">
        <seg>另外，本教程接下来是 《&lt;a0&gt;第七章， &lt;i1&gt;Java 快速入门&lt;/i1&gt;&lt;/a0&gt;》 以及《&lt;a2&gt;第八章， &lt;i3&gt;依赖管理基础&lt;/i3&gt;&lt;/a2&gt;》。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Otherwise, execution of the task will fail with a message saying that &lt;c0&gt;groovyClasspath&lt;/c0&gt; could not be inferred.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T132839Z" creationid="huanghaohang" creationdate="20180406T132839Z">
        <seg>其他情况下，任务将执行失败，并提示无法推断 &lt;c0&gt;groovyClasspath&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -I init.gradle build&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180107T144039Z" creationid="huanghaohang" creationdate="20180107T144039Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -I init.gradle build&lt;/c1&gt;&lt;/s0&gt; 的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q -PcommandLineProjectProp=commandLineProjectPropValue -Dorg.gradle.project.systemProjectProp=systemPropertyValue printProps&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170917T135035Z" creationid="huanghaohang" creationdate="20170917T135035Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q -PcommandLineProjectProp=commandLineProjectPropValue -Dorg.gradle.project.systemProjectProp=systemPropertyValue printProps&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q -b subdir/myproject.gradle hello&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T114023Z" creationid="huanghaohang" creationdate="20170909T114023Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q -b subdir/myproject.gradle hello&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q -p subdir hello&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T114306Z" creationid="huanghaohang" creationdate="20170909T114306Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q -p subdir hello&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q api:dependencies --configuration testCompile&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T021702Z" creationid="huanghaohang" creationdate="20170910T021702Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q api:dependencies --configuration testCompile&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q api:properties&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T023445Z" creationid="huanghaohang" creationdate="20170910T023445Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q api:properties&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q check&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170912T130255Z" creationid="huanghaohang" creationdate="20170912T130255Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q check&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q compile&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170917T132414Z" creationid="huanghaohang" creationdate="20170917T132414Z">
        <seg> &lt;s0&gt;&lt;c1&gt;gradle -q compile&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q configure&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170918T145827Z" creationid="huanghaohang" creationdate="20170918T145827Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q configure&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q copy&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T083321Z" creationid="huanghaohang" creationdate="20170922T083321Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q copy&lt;/c1&gt;&lt;/s0&gt; 的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q count&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155907Z" creationid="95" creationdate="20170726T155907Z">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q count&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q dependencies api:dependencies webapp:dependencies&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T014135Z" creationid="huanghaohang" creationdate="20170910T014135Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q dependencies api:dependencies webapp:dependencies&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q distribution&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T025320Z" creationid="95" creationdate="20170729T025320Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q distribution&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q groupPing&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T043839Z" creationid="huanghaohang" creationdate="20170923T043839Z">
        <seg>&lt;s0&gt; &lt;c1&gt;Gradle q groupPing&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q hello&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T145842Z" creationid="95" creationdate="20170724T145842Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q hello&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q help --task libs&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T012839Z" creationid="huanghaohang" creationdate="20170910T012839Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q help --task libs&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q intro&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T160129Z" creationid="95" creationdate="20170726T160129Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q intro&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q list&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T150358Z" creationid="huanghaohang" creationdate="20170927T150358Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q list&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q loadfile&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170728T153828Z" creationid="95" creationdate="20170728T153828Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q loadfile&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q myTask&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T084841Z" creationid="huanghaohang" creationdate="20170922T084841Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q myTask&lt;/c1&gt;&lt;/s0&gt; 的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q myZip&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T140719Z" creationid="huanghaohang" creationdate="20171126T140719Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q myZip&lt;/c1&gt;&lt;/s0&gt; 的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q pingServer1&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T011929Z" creationid="huanghaohang" creationdate="20170923T011929Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q task1&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q printProperties&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T133601Z" creationid="huanghaohang" creationdate="20170913T133601Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q printProperties&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q printTaskProperties&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T142009Z" creationid="95" creationdate="20170727T142009Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q printTaskProperties&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q projects&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T011128Z" creationid="huanghaohang" creationdate="20170910T011128Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q projects&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q release&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T025327Z" creationid="95" creationdate="20170729T025327Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q release&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q show&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180130T100206Z" creationid="huanghaohang" creationdate="20180130T100206Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q show&lt;/c1&gt;&lt;/s0&gt; 的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q task0&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T133037Z" creationid="95" creationdate="20170727T133037Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q task0&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q task1&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T132756Z" creationid="95" creationdate="20170727T132730Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q task1&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q taskX&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T160358Z" creationid="95" creationdate="20170726T160358Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q taskX&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q taskY taskX&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T032051Z" creationid="huanghaohang" creationdate="20170922T032051Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q taskY taskX&lt;/c1&gt;&lt;/s0&gt; 的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q taskY&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T035747Z" creationid="huanghaohang" creationdate="20170922T035747Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q taskY&lt;/c1&gt;&lt;/s0&gt; 的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q tasks --all&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T012324Z" creationid="huanghaohang" creationdate="20170910T012324Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q tasks --all&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q tasks&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T011710Z" creationid="huanghaohang" creationdate="20170910T011710Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q tasks&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q upper&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155839Z" creationid="95" creationdate="20170726T155839Z">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q upper&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q webapp:dependencyInsight --dependency groovy --configuration compile&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T022158Z" creationid="huanghaohang" creationdate="20170910T022158Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q webapp:dependencyInsight --dependency groovy --configuration compile&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T023926Z" creationid="95" creationdate="20170729T023916Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q&lt;/c1&gt;&lt;/s0&gt;的构建结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle build&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T014304Z" creationid="95" creationdate="20170730T014304Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle build&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle cT&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T113259Z" creationid="huanghaohang" creationdate="20170909T113259Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle cT&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle di&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T112846Z" creationid="huanghaohang" creationdate="20170909T112846Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle di&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle disableMe&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T085329Z" creationid="huanghaohang" creationdate="20170922T085329Z">
        <seg>&lt;s0&gt; &lt;c1&gt;Gradle disableMe&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle dist -x test&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T032028Z" creationid="huanghaohang" creationdate="20170909T032028Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle dist -x test&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle dist test&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T031159Z" creationid="huanghaohang" creationdate="20170909T031159Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle dist test&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle hello -PskipHello&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T084200Z" creationid="huanghaohang" creationdate="20170922T084200Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle hello -PskipHello&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle hello&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171216T022456Z" creationid="huanghaohang" creationdate="20171216T022456Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle hello&lt;/c1&gt;&lt;/s0&gt; 的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle intTestClasses&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T095240Z" creationid="haohang" creationdate="20180326T095240Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle intTestClasses&lt;/c1&gt;&lt;/s0&gt; 的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle intro&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T084643Z" creationid="huanghaohang" creationdate="20180105T084643Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle intro&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle transform&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T085717Z" creationid="huanghaohang" creationdate="20170922T085717Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle transform&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Outputs Log Levels</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T221901Z" creationid="huanghaohang" creationdate="20180105T221901Z">
        <seg>输出日志级别</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Overview</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072443Z" creationid="haohang" creationdate="20170720T072443Z">
        <seg>概述</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Parentheses are optional for method calls.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T141359Z" creationid="huanghaohang" creationdate="20170913T141359Z">
        <seg>调用方法时括号是可选的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Performs a full build of the project and all projects it depends on.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T035421Z" creationid="haohang" creationdate="20180313T035421Z">
        <seg>执行项目本身及它所依赖的其他所有项目的完整构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Performs a full build of the project and all projects which depend on it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T035542Z" creationid="haohang" creationdate="20180313T035542Z">
        <seg>执行项目本身及依赖它的其他所有项目的完整构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Performs a full build of the project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T035131Z" creationid="haohang" creationdate="20180313T035131Z">
        <seg>执行完整的项目构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Performs all verification tasks in the project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T035011Z" creationid="haohang" creationdate="20180313T035011Z">
        <seg>执行项目中所有的验证任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Performs quality checks on your project's Groovy source files using &lt;a0&gt;CodeNarc&lt;/a0&gt; and generates reports from these checks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180207T144518Z" creationid="huanghaohang" creationdate="20180207T144518Z">
        <seg>对你的项目的 Groovy 源文件使用 &lt;a0&gt;CodeNarc&lt;/a0&gt; 执行质量检查并生成报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Performs quality checks on your project's Java source files using &lt;a0&gt;Checkstyle&lt;/a0&gt; and generates reports from these checks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180207T144442Z" creationid="huanghaohang" creationdate="20180207T144442Z">
        <seg>对你的项目的 Java 源文件使用 &lt;a0&gt;Checkstyle&lt;/a0&gt; 执行质量检查并生成报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Performs quality checks on your project's Java source files using &lt;a0&gt;FindBugs&lt;/a0&gt; and generates reports from these checks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180211T085739Z" creationid="huanghaohang" creationdate="20180211T085739Z">
        <seg>对你的项目的 Java 源文件使用 &lt;a0&gt;FindBugs&lt;/a0&gt; 执行质量检查并生成报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Performs quality checks on your project's Java source files using &lt;a0&gt;PMD&lt;/a0&gt; and generates reports from these checks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180211T085912Z" creationid="huanghaohang" creationdate="20180211T085912Z">
        <seg>对你的项目的 Java 源文件使用 &lt;a0&gt;PMD&lt;/a0&gt; 执行质量检查并生成报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Performs quality checks on your project's source files using &lt;a0&gt;JDepend&lt;/a0&gt; and generates reports from these checks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180211T085850Z" creationid="huanghaohang" creationdate="20180211T085850Z">
        <seg>使用 &lt;a0&gt;JDepend&lt;/a0&gt; 对你的项目的源文件执行质量检查并生成报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Periodically garbage collect the Gradle caches.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180109T142057Z" creationid="huanghaohang" creationdate="20180109T142057Z">
        <seg>Gradle 缓存的定期垃圾收集。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Please notice that you can't use shortcut notation (see &lt;a0&gt;Section 6.8, “Shortcut notations”&lt;/a0&gt;) when referring to a task that is not yet defined.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T132502Z" creationid="95" creationdate="20170727T132113Z">
        <seg>请注意，当一个任务还没有被定义的时候，不能使用快捷符号（见 &lt;a0&gt;第6.8节，“快捷标记”&lt;/a0&gt;）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Plugin Id</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180205T140556Z" creationid="huanghaohang" creationdate="20180205T140556Z">
        <seg>插件 Id</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Plugins advertise a short name for themselves. In the above case, we are using the short name ‘&lt;c0&gt;java&lt;/c0&gt;’ to apply the &lt;a1&gt;&lt;c2&gt;JavaPlugin&lt;/c2&gt;&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180130T093141Z" creationid="huanghaohang" creationdate="20180130T093141Z">
        <seg>插件都有表示自己的一个简称。在上述例子中，我们使用简称“&lt;c0&gt;java&lt;/c0&gt;”来应用 &lt;a1&gt;&lt;c2&gt;JavaPlugin&lt;/c2&gt;&lt;/a1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Plugins are said to be &lt;s0&gt;&lt;e1&gt;applied&lt;/e1&gt;&lt;/s0&gt;, which is done via the &lt;a2&gt;&lt;c3&gt;Project.apply()&lt;/c3&gt;&lt;/a2&gt; method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180130T092942Z" creationid="huanghaohang" creationdate="20180130T092904Z">
        <seg>插件可以说是被&lt;s0&gt;&lt;e1&gt;应用的&lt;/e1&gt;&lt;/s0&gt;，通过 &lt;a2&gt;&lt;c3&gt;Project.apply()&lt;/c3&gt;&lt;/a2&gt;方法来完成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Plugins can pre-configure the project in smart ways to support convention-over-configuration. Gradle provides mechanisms and sophisticated support and it's a key ingredient in powerful-yet-concise build scripts.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T021650Z" creationid="huanghaohang" creationdate="20180131T021650Z">
        <seg>插件可以通过智能的方式对项目进行预配置，以支持约定优于配置配置。Gradle 为此提供了相关机制和复杂的支持，这正是强大而简洁的构建脚本的关键组成部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Pre-configure added tasks with useful defaults.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180130T100056Z" creationid="huanghaohang" creationdate="20180130T100056Z">
        <seg>使用有用的默认设置对已添加的任务进行预配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Preemptive execution of certain tasks, for example compilation. Quicker feedback.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180109T142004Z" creationid="huanghaohang" creationdate="20180109T142004Z">
        <seg>预先执行某些任务，比如编译。更快的反馈。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Prerequisites</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T013328Z" creationid="huanghaohang" creationdate="20170919T013328Z">
        <seg>环境要求</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Production Groovy sources. May also contain Java sources for joint compilation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T121719Z" creationid="huanghaohang" creationdate="20180406T121719Z">
        <seg>Groovy 生产源代码。也可能包含联合编译的 Java 源代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Production Java source</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T052950Z" creationid="haohang" creationdate="20180313T052950Z">
        <seg>Java 生产源代码</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Production resources</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T052955Z" creationid="haohang" creationdate="20180313T052955Z">
        <seg>生产资源</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Progress information messages</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T221534Z" creationid="huanghaohang" creationdate="20180105T221534Z">
        <seg>进度信息消息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Project</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T132114Z" creationid="huanghaohang" creationdate="20170913T132114Z">
        <seg>Project</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ProjectEvaluationListener</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180107T144456Z" creationid="huanghaohang" creationdate="20180107T144456Z">
        <seg>ProjectEvaluationListener</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Projects and tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T031747Z" creationid="huanghaohang" creationdate="20170927T031747Z">
        <seg>项目和任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Property name</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T232615Z" creationid="huanghaohang" creationdate="20171206T232615Z">
        <seg>属性名称</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Provide the authentication domain via the &lt;c0&gt;http.auth.ntlm.domain&lt;/c0&gt; system property.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180130T080944Z" creationid="huanghaohang" creationdate="20180130T080944Z">
        <seg>通过 &lt;c0&gt;http.auth.ntlm.domain&lt;/c0&gt; 系统属性提供验证域。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Provides integration with the &lt;a0&gt;JaCoCo&lt;/a0&gt; code coverage library for Java.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180211T090508Z" creationid="huanghaohang" creationdate="20180211T090508Z">
        <seg>提供对 Java 的&lt;a0&gt;JaCoCo&lt;/a0&gt; 代码覆盖率库的集成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Provides integration with the &lt;a0&gt;Sonar&lt;/a0&gt; code quality platform. Superceeded by the &lt;a1&gt;&lt;c2&gt;sonar-runner&lt;/c2&gt;&lt;/a1&gt; plugin.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180211T090137Z" creationid="huanghaohang" creationdate="20180211T090137Z">
        <seg>提供对 &lt;a0&gt;Sonar&lt;/a0&gt; 代码质量平台的集成。已经被 &lt;a1&gt;&lt;c2&gt;sonar-runner&lt;/c2&gt;&lt;/a1&gt; 插件取代。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Provides integration with the &lt;a0&gt;Sonar&lt;/a0&gt; code quality platform. Supersedes the &lt;a1&gt;&lt;c2&gt;sonar&lt;/c2&gt;&lt;/a1&gt; plugin.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180211T090637Z" creationid="huanghaohang" creationdate="20180211T090637Z">
        <seg>取代 &lt;a1&gt;&lt;c2&gt;sonar&lt;/c2&gt;&lt;/a1&gt; 插件，提供对 &lt;a0&gt;Sonar&lt;/a0&gt; 代码质量平台的集成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Publish messages to your favourite platforms, such as Twitter or Growl.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180207T144159Z" creationid="huanghaohang" creationdate="20180207T144159Z">
        <seg>将消息发布到你所喜欢的平台，如 Twitter 或 Growl。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Publishing artifacts</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233738Z" creationid="huanghaohang" creationdate="20171206T233738Z">
        <seg>发布构件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>QUIET</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T221521Z" creationid="huanghaohang" creationdate="20180105T221521Z">
        <seg>QUIET</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>QUIET and higher</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T221920Z" creationid="huanghaohang" creationdate="20180105T221920Z">
        <seg>QUIET 及更高</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Replacing tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180201T021728Z" creationid="huanghaohang" creationdate="20180201T021728Z">
        <seg>替换任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Repositories</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233728Z" creationid="huanghaohang" creationdate="20171206T233728Z">
        <seg>仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Resources for the given source set</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T053030Z" creationid="haohang" creationdate="20180313T053030Z">
        <seg>给定源集的资源</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Results in an efficient binary format. The task generates the other results from these binary results.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T042835Z" creationid="huanghaohang" creationdate="20180406T042835Z">
        <seg>有效的二进制格式的结果。该任务从这些二进制结果生成其他结果。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Rules not just work when calling tasks from the command line. You can also create dependsOn relations on rule based tasks:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T043755Z" creationid="huanghaohang" creationdate="20170923T043755Z">
        <seg>规则不只是从命令行调用任务才起作用，你也可以对基于规则的任务创建依赖关系：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Run build validations early in the build: eg. validate I have the correct credentials before starting the work for a release build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T030342Z" creationid="huanghaohang" creationdate="20170922T030342Z">
        <seg>在构建初期运行构建验证：例如，在开始发布之前验证是否拥有正确的证书。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Running &lt;s0&gt;&lt;c1&gt;gradle build&lt;/c1&gt;&lt;/s0&gt; will compile, test and JAR your project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T002921Z" creationid="huanghaohang" creationdate="20170909T002921Z">
        <seg>运行 &lt;s0&gt;&lt;c1&gt;gradle build&lt;/c1&gt;&lt;/s0&gt;将会对你的项目进行编译，测试并打包成jar。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Running &lt;s0&gt;&lt;c1&gt;gradle dependencies&lt;/c1&gt;&lt;/s0&gt; gives you a list of the dependencies of the selected project, broken down by configuration. For each configuration, the direct and transitive dependencies of that configuration are shown in a tree. Below is an example of this report:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T014029Z" creationid="huanghaohang" creationdate="20170910T014029Z">
        <seg>运行&lt;s0&gt;&lt;c1&gt;gradle dependencies&lt;/c1&gt;&lt;/s0&gt;会为你列出所选项目的依赖关系，这些依赖会根据配置的任务细分。对于每个配置，它的直接和传递依赖会按树型结构展示出来。如下例：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Running &lt;s0&gt;&lt;c1&gt;gradle dependencyInsight&lt;/c1&gt;&lt;/s0&gt; gives you an insight into a particular dependency (or dependencies) that match specified input. Below is an example of this report:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T022130Z" creationid="huanghaohang" creationdate="20170910T022130Z">
        <seg>运行&lt;s0&gt;&lt;c1&gt;gradle dependencyInsight&lt;/c1&gt;&lt;/s0&gt;会让你深入了解与指定的输入内容相匹配的特定依赖（或多个依赖）。示例如下：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Running &lt;s0&gt;&lt;c1&gt;gradle help --task someTask&lt;/c1&gt;&lt;/s0&gt; gives you detailed information about a specific task or multiple tasks matching the given task name in your multiproject build. Below is an example of this detailed information:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T012802Z" creationid="huanghaohang" creationdate="20170910T012752Z">
        <seg>运行&lt;s0&gt;&lt;c1&gt;gradle help --task someTask&lt;/c1&gt;&lt;/s0&gt;可以向你提供有关指定任务或是在多项目构建中与所指定的任务名称相匹配的所有任务的详细信息。如下所示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Running &lt;s0&gt;&lt;c1&gt;gradle projects&lt;/c1&gt;&lt;/s0&gt; gives you a list of the sub-projects of the selected project, displayed in a hierarchy. Here is an example:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T011056Z" creationid="huanghaohang" creationdate="20170910T011056Z">
        <seg>运行&lt;s0&gt;&lt;c1&gt;gradle projects&lt;/c1&gt;&lt;/s0&gt;会为你按子项目的层次结构显示出项目列表，如下所示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Running &lt;s0&gt;&lt;c1&gt;gradle properties&lt;/c1&gt;&lt;/s0&gt; gives you a list of the properties of the selected project. This is a snippet from the output:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T023417Z" creationid="huanghaohang" creationdate="20170910T023258Z">
        <seg>运行&lt;s0&gt;&lt;c1&gt;gradle properties&lt;/c1&gt;&lt;/s0&gt;会向你列出所选项目的属性。如下例：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Running &lt;s0&gt;&lt;c1&gt;gradle tasks&lt;/c1&gt;&lt;/s0&gt; gives you a list of the main tasks of the selected project. This report shows the default tasks for the project, if any, and a description for each task. Below is an example of this report:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T011644Z" creationid="huanghaohang" creationdate="20170910T011644Z">
        <seg>运行&lt;s0&gt;&lt;c1&gt;gradle tasks&lt;/c1&gt;&lt;/s0&gt;会为你列出所选项目的主要任务。报告会显示项目的默认任务（如果有配置默认任务的话），以及每个任务的说明。以下是关于该报告的示例：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Running and testing your installation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T013354Z" creationid="huanghaohang" creationdate="20170919T013354Z">
        <seg>运行和测试您的安装</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Running your web application</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233841Z" creationid="huanghaohang" creationdate="20171206T233841Z">
        <seg>运行 web 应用程序</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Runs the unit tests using JUnit or TestNG.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180312T063134Z" creationid="haohang" creationdate="20180312T063134Z">
        <seg>使用 JUnit 或 TestNG 运行单元测试。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Runtime dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T053739Z" creationid="haohang" creationdate="20180313T053739Z">
        <seg>运行时依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Runtime time dependencies for the given source set</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T054356Z" creationid="haohang" creationdate="20180313T054356Z">
        <seg>给定源集的运行时依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Secondly, the &lt;c0&gt;copy()&lt;/c0&gt; method can not honor task dependencies when a task is used as a copy source (i.e. as an argument to &lt;c1&gt;from()&lt;/c1&gt;) because it's a method and not a task. As such, if you are using the &lt;c2&gt;copy()&lt;/c2&gt; method as part of a task action, you must explicitly declare all inputs and outputs in order to get the correct behavior.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171015T124844Z" creationid="huanghaohang" creationdate="20171015T094223Z">
        <seg>其次，当一个任务用作复制源（即作为&lt;c1&gt;from()&lt;/c1&gt;的一个参数）时，&lt;c0&gt;copy()&lt;/c0&gt;方法不能满足任务依赖。因为它是一个方法，而不是一个任务。因此，如果你正在使用&lt;c2&gt;copy()&lt;/c2&gt;方法作为任务操作的一部分，就必须显式声明所有的输入和输出才能得到正确的行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See &lt;a0&gt;Section 56.7.1, “Disabling the build of dependency projects”&lt;/a0&gt; for how to disable this functionality.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T125439Z" creationid="95" creationdate="20170803T125335Z">
        <seg>参阅 &lt;a0&gt;第56.7.1节,“禁用项目依赖”&lt;/a0&gt; 来了解如何停用该功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Selecting which build to execute</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233935Z" creationid="huanghaohang" creationdate="20171206T233935Z">
        <seg>选择执行哪个构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sends local announcements to your desktop about interesting events in the build lifecycle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180207T144357Z" creationid="huanghaohang" creationdate="20180207T144357Z">
        <seg>在构建的生命周期中，把本地公告中有关你感兴趣的事件发送到你的桌面。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Set the &lt;c0&gt;http.proxyUser&lt;/c0&gt; system property to a value like &lt;c1&gt;&lt;e2&gt;&lt;c3&gt;domain&lt;/c3&gt;&lt;/e2&gt;/&lt;e4&gt;&lt;c5&gt;username&lt;/c5&gt;&lt;/e4&gt;&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180130T080931Z" creationid="huanghaohang" creationdate="20180130T080931Z">
        <seg>将 &lt;c0&gt;http.proxyUser&lt;/c0&gt; 系统属性设置为一个这样的值：&lt;c1&gt;&lt;e2&gt;&lt;c3&gt;domain&lt;/c3&gt;&lt;/e2&gt;/&lt;e4&gt;&lt;c5&gt;username&lt;/c5&gt;&lt;/e4&gt;&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Setting a system property of &lt;e0&gt;&lt;c1&gt;taskName.single&lt;/c1&gt;&lt;/e0&gt; = &lt;e2&gt;&lt;c3&gt;testNamePattern&lt;/c3&gt;&lt;/e2&gt; will only execute tests that match the specified &lt;e4&gt;&lt;c5&gt;testNamePattern&lt;/c5&gt;&lt;/e4&gt;. The &lt;e6&gt;&lt;c7&gt;taskName&lt;/c7&gt;&lt;/e6&gt; can be a full multi-project path like ":sub1:sub2:test" or just the task name. The &lt;e8&gt;&lt;c9&gt;testNamePattern&lt;/c9&gt;&lt;/e8&gt; will be used to form an include pattern of "**/testNamePattern*.class". If no tests with this pattern can be found an exception is thrown. This is to shield you from false security. If tests of more than one subproject are executed, the pattern is applied to each subproject. An exception is thrown if no tests can be found for a particular subproject. In such a case you can use the path notation of the pattern, so that the pattern is applied only to the test task of a specific subproject. Alternatively you can specify the fully qualified task name to be executed. You can also specify multiple patterns. Examples:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180405T142917Z" creationid="huanghaohang" creationdate="20180405T131833Z">
        <seg>设置一个 &lt;e0&gt;&lt;c1&gt;taskName.single&lt;/c1&gt;&lt;/e0&gt; = &lt;e2&gt;&lt;c3&gt;testNamePattern&lt;/c3&gt;&lt;/e2&gt; 的系统属性将会只执行匹配指定的 &lt;e4&gt;&lt;c5&gt;testNamePattern&lt;/c5&gt;&lt;/e4&gt; 的测试。该 &lt;e6&gt;&lt;c7&gt;taskName&lt;/c7&gt;&lt;/e6&gt; 可以是完整的多项目路径，如“:sub1:sub2:test”，或者仅是一个任务名称。该 &lt;e8&gt;&lt;c9&gt;testNamePattern&lt;/c9&gt;&lt;/e8&gt; 将被用于形成“**/testNamePattern*.class”的包含模式。如果找不到这种模式的测试，那么将会抛出一个异常。这是为了避免你误认为测试通过。如果执行多个子项目的测试，则该模式将应用于每个子项目。如果找不到特定子项目的测试，则会引发异常。在这种情况下，你可以使用模式的路径标记法，以便模式仅应用于特定子项目的测试任务。或者你可以指定要执行的任务的完整限定名称。你还可以指定多个模式。示例：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Setup</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T234037Z" creationid="huanghaohang" creationdate="20171206T234037Z">
        <seg>设置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Shortcut notations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T031841Z" creationid="huanghaohang" creationdate="20170927T031841Z">
        <seg>快捷符号</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Shows how to start using Gradle's build-by-convention support for Java projects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T080750Z" creationid="95" creationdate="20170723T080750Z">
        <seg>说明了对于Java项目如何使用Gradle的基于约定的构建支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Shows how to start using Gradle's dependency management.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T080835Z" creationid="95" creationdate="20170723T080835Z">
        <seg>介绍了如何开始使用Gradle的依赖管理。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Since a dependency report can get large, it can be useful to restrict the report to a particular configuration. This is achieved with the optional &lt;s0&gt;&lt;c1&gt;--configuration&lt;/c1&gt;&lt;/s0&gt; parameter:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T021631Z" creationid="huanghaohang" creationdate="20170910T014140Z">
        <seg>由于一份依赖报告可能会很长，因此只显示指定配置的报告会很有用，它通过可选的&lt;s0&gt;&lt;c1&gt;--configuration&lt;/c1&gt;&lt;/s0&gt;参数来实现：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Skipping tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180201T021734Z" creationid="huanghaohang" creationdate="20180201T021734Z">
        <seg>跳过任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Skipping tasks that are up-to-date</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180201T021744Z" creationid="huanghaohang" creationdate="20180201T021744Z">
        <seg>跳过最新的任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Snappy up-to-date checks: use native file system change notifications (e.g. via jdk7 nio.2) to preemptively perform up-to-date analysis.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180109T140053Z" creationid="huanghaohang" creationdate="20180109T135914Z">
        <seg>敏捷的最新（up-to-date）检查：使用本地文件系统修改通知（例如，通过 jdk7 nio.2）预先执行 up-to-date 分析。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Some Groovy basics</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T032910Z" creationid="huanghaohang" creationdate="20180131T032910Z">
        <seg>一些 Groovy 基础知识</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Some daemon settings, such as JVM arguments, memory settings or the Java home, can be configured. Please find more information in &lt;a0&gt;Section 20.1, “Configuring the build environment via gradle.properties”&lt;/a0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180120T025857Z" creationid="huanghaohang" creationdate="20180120T025857Z">
        <seg>可以配置一些守护进程的设置，例如 JVM 参数、 内存设置或 Java home 目录。更多有关信息请参阅《&lt;a0&gt;20.1 节，“通过 gradle.properties 配置构建环境”&lt;/a0&gt;》</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Some examples of using the command line option:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180405T131728Z" creationid="huanghaohang" creationdate="20180405T131728Z">
        <seg>使用命令行选项的一些示例：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Some other types of things you can pass to &lt;c0&gt;files()&lt;/c0&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T150454Z" creationid="huanghaohang" creationdate="20170927T150415Z">
        <seg>你可以向&lt;c0&gt;files()&lt;/c0&gt;传入以下一些其他类型的对象：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Some other useful tasks are:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T014332Z" creationid="95" creationdate="20170730T014332Z">
        <seg>其他一些有用的任务是：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Some ways of troubleshooting the Gradle daemon:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180120T025356Z" creationid="huanghaohang" creationdate="20180120T025356Z">
        <seg>以下是有关 Gradle 守护进程的故障排除的一些方法：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sometimes you are interested in which tasks are executed in which order for a given set of tasks specified on the command line, but you don't want the tasks to be executed. You can use the &lt;c0&gt;-m&lt;/c0&gt; option for this. For example &lt;s1&gt;&lt;c2&gt;gradle -m clean compile&lt;/c2&gt;&lt;/s1&gt; shows you all tasks to be executed as part of the &lt;c3&gt;clean&lt;/c3&gt; and &lt;c4&gt;compile&lt;/c4&gt; tasks. This is complementary to the &lt;c5&gt;tasks&lt;/c5&gt; task, which shows you the tasks which are available for execution.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T031744Z" creationid="huanghaohang" creationdate="20170910T031431Z">
        <seg>有时候你可能想知道，以命令行指定的给定一组任务会以怎样的顺序去执行，但你不希望任务被真的执行，就可以使用&lt;c0&gt;-m&lt;/c0&gt;这个选项。例如&lt;s1&gt;&lt;c2&gt;gradle -m clean compile&lt;/c2&gt;&lt;/s1&gt;会显示所有要执行的任务，如&lt;c3&gt;clean&lt;/c3&gt;和&lt;c4&gt;compile&lt;/c4&gt;任务。这是对&lt;c5&gt;tasks&lt;/c5&gt;任务的补充，用于显示可以执行的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sometimes you want to have a task whose behavior depends on a large or infinite number value range of parameters. A very nice and expressive way to provide such tasks are task rules:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T011920Z" creationid="huanghaohang" creationdate="20170923T011920Z">
        <seg>有时你想要有一个任务，它的行为依赖于一个大的或是无限的数值范围的参数。任务规则是提供这样的任务的一种很好的表达方式：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sometimes you want to replace a task. For example if you want to exchange a task added by the Java plugin with a custom task of a different type. You can achieve this with:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T083311Z" creationid="huanghaohang" creationdate="20170922T083311Z">
        <seg>有时你会想要替换一个任务。例如，你想要将Java插件添加的任务替换成一个不同类型的自定义任务。你可以通过以下方式实现：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Specifies the java home for the Gradle build process. The value can be set to either &lt;c0&gt;jdk&lt;/c0&gt; or &lt;c1&gt;jre&lt;/c1&gt; location, however, depending on what does your build do, &lt;c2&gt;jdk&lt;/c2&gt; is safer. Reasonable default is used if the setting is unspecified.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180126T013100Z" creationid="huanghaohang" creationdate="20180126T012854Z">
        <seg>指定 Gradle 构建进程的 java 主目录。该值可以设置为 &lt;c0&gt;JDK&lt;/c0&gt; 或 &lt;c1&gt;JRE&lt;/c1&gt; 的位置，但是，根据你的构建所做的事情，&lt;c2&gt;JDK&lt;/c2&gt; 会更安全。如果这一设置没有指定，则使用合理的默认值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Specifies the jvmargs used for the daemon process. The setting is particularly useful for tweaking memory settings. At the moment the default settings are pretty generous with regards to memory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180126T013331Z" creationid="huanghaohang" creationdate="20180126T013320Z">
        <seg>指定用于守护进程的 jvmargs。该设置对调整内存设置特别有用。目前的默认设置是在内存方面非常大方。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Specifying a set of input files</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180218T093049Z" creationid="huanghaohang" creationdate="20180218T093049Z">
        <seg>指定一组输入文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Stack Trace Output</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170911T150007Z" creationid="huanghaohang" creationdate="20170911T150007Z">
        <seg>堆栈跟踪输出</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Starting with Gradle 1.10, it is possible to include only specific tests, based on the test name pattern. Filtering is a different mechanism than test class inclusion / exclusion that will be described in the next few paragraphs (&lt;c0&gt;-Dtest.single&lt;/c0&gt;, &lt;c1&gt;test.include&lt;/c1&gt; and friends). The latter is based on files, e.g. the physical location of the test implementation class. File-level test selection does not support many interesting scenarios that are possible with test-level filtering. Some of them Gradle handles now and some will be satisfied in the future releases:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180405T100341Z" creationid="huanghaohang" creationdate="20180405T095518Z">
        <seg>从 Gradle 1.10 开始，可以基于测试名称模式，只包含特定测试。过滤是与测试类包含或排除所不同的一种机制，接下来的段落中将会对其详细介绍（&lt;c0&gt;-Dtest.single&lt;/c0&gt;， &lt;c1&gt;test.include&lt;/c1&gt; 和其他相关的）。后者基于文件，例如测试实现类的物理位置。文件级测试选择不支持的许多有趣的场景，都可以用测试级过滤来实现。其中一些 Gradle 现在就可以处理，而有一些将在未来的版本中得到实现：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T132129Z" creationid="huanghaohang" creationdate="20170913T132129Z">
        <seg>String</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String greeting = &lt;s0&gt;'hello from Ant'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171216T022449Z" creationid="huanghaohang" creationdate="20171216T022449Z">
        <seg>String greeting = &lt;s0&gt;'hello from Ant'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String someString = &lt;s0&gt;'mY_nAmE'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155825Z" creationid="95" creationdate="20170726T155825Z">
        <seg>String someString = &lt;s0&gt;'mY_nAmE'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Structure your build</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170722T021853Z" creationid="95" creationdate="20170722T021853Z">
        <seg>构建结构化</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Summary</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233809Z" creationid="huanghaohang" creationdate="20171206T233809Z">
        <seg>总结</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Support for transitive dependency management without the need for remote repositories or &lt;c0&gt;pom.xml&lt;/c0&gt; and &lt;c1&gt;ivy.xml&lt;/c1&gt; files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T140613Z" creationid="95" creationdate="20170721T135929Z">
        <seg>支持传递性依赖管理，而不需要远程仓库或是 &lt;c0&gt;pom.xml&lt;/c0&gt; 以及 &lt;c1&gt;ivy.xml&lt;/c1&gt; 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Switchable, build-by-convention frameworks a la Maven.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T134507Z" creationid="95" creationdate="20170721T134507Z">
        <seg>可切换的，按Maven的方式的基于约定的框架。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Switchable, build-by-convention frameworks a la Maven. But we never lock you in!</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T135705Z" creationid="95" creationdate="20170721T135705Z">
        <seg>按Maven的方式的基于约定的框架。但我们从不会去限定你，它是可切换的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>TODO: which url, configure port, uses source files in place and can edit your files and reload.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T010058Z" creationid="huanghaohang" creationdate="20170909T010058Z">
        <seg>TODO：使用哪个url，配置端口，在适当的位置使用源文件，并且可以编辑你的文件和重新加载。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tab completion in a CLI</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180108T133958Z" creationid="huanghaohang" creationdate="20180108T133958Z">
        <seg>在 CLI 中的 tab 键完成</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table of Contents</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072346Z" creationid="haohang" creationdate="20170720T072346Z">
        <seg>目录</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 13.1. Project Properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T132105Z" creationid="huanghaohang" creationdate="20170913T132105Z">
        <seg>表 13.1. Project属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 16.1. Archive tasks - naming properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T232358Z" creationid="huanghaohang" creationdate="20171206T232358Z">
        <seg>表 16.1. 归档任务-命名属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 18.1. Log levels</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T221049Z" creationid="huanghaohang" creationdate="20180105T221049Z">
        <seg>表 18.1. 日志级别</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 18.2. Log level command-line options</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T221607Z" creationid="huanghaohang" creationdate="20180105T221607Z">
        <seg>表 18.2. 日志级别的命令行选项</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 18.3. Stacktrace command-line options</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T221701Z" creationid="huanghaohang" creationdate="20180105T221701Z">
        <seg>表 18.3. 栈跟踪的命令行选项</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 22.1. Language plugins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180205T140553Z" creationid="huanghaohang" creationdate="20180205T140553Z">
        <seg>表 22.1. 语言插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 22.2. Language plugins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180205T141407Z" creationid="huanghaohang" creationdate="20180205T141407Z">
        <seg>表 22.2. 语言插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 22.3. Integration plugins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180206T013849Z" creationid="huanghaohang" creationdate="20180206T013849Z">
        <seg>表 22.3. 集成插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 22.4. Incubating integration plugins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180207T143722Z" creationid="huanghaohang" creationdate="20180207T143722Z">
        <seg>表 22.4. 试验性的集成插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 22.5. Software development plugins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180207T144048Z" creationid="huanghaohang" creationdate="20180207T144048Z">
        <seg>表 22.5. 软件开发插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 22.6. Software development plugins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180211T090153Z" creationid="huanghaohang" creationdate="20180211T090153Z">
        <seg>表 22.6. 软件开发插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 22.7. Base plugins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180215T054226Z" creationid="huanghaohang" creationdate="20180215T054226Z">
        <seg>表 22.7. 基本插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 23.1. Java plugin - tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180312T061321Z" creationid="haohang" creationdate="20180312T061321Z">
        <seg>表 23.1. Java 插件——任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 23.10. Java plugin - Javadoc properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T100228Z" creationid="haohang" creationdate="20180326T100103Z">
        <seg>表 23.10. Java 插件—— Javadoc 属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 23.11. Java plugin - Clean properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T100634Z" creationid="haohang" creationdate="20180326T100559Z">
        <seg>表 23.11. Java 插件—— Clean 属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 23.12. Java plugin - ProcessResources properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T101152Z" creationid="haohang" creationdate="20180326T101152Z">
        <seg>表 23.12. Java 插件—— ProcessResources 属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 23.13. Java plugin - Compile properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180327T101656Z" creationid="haohang" creationdate="20180327T101656Z">
        <seg>表 23.13. Java 插件—— Compile 属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 23.14. Java plugin - test properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T104632Z" creationid="huanghaohang" creationdate="20180406T104632Z">
        <seg>表 23.14. Java 插件——测试属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 23.2. Java plugin - source set tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180312T073311Z" creationid="haohang" creationdate="20180312T073311Z">
        <seg>表 23.2. Java 插件——源集任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 23.3. Java plugin - lifecycle tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T033943Z" creationid="haohang" creationdate="20180313T033943Z">
        <seg>表 23.3. Java 插件——生命周期任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 23.4. Java plugin - default project layout</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T052934Z" creationid="haohang" creationdate="20180313T052934Z">
        <seg>表 23.4. Java 插件——默认项目布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 23.5. Java plugin - dependency configurations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T032346Z" creationid="huanghaohang" creationdate="20170908T032346Z">
        <seg>表23.5. Java插件 ​​- 依赖配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 23.6. Java plugin - source set dependency configurations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T054250Z" creationid="haohang" creationdate="20180313T054250Z">
        <seg>表 23.6. Java 插件——源集依赖配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 23.7. Java plugin - directory properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T054647Z" creationid="haohang" creationdate="20180313T054647Z">
        <seg>表 23.7. Java 插件——目录属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 23.8. Java plugin - other properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T062342Z" creationid="haohang" creationdate="20180313T062342Z">
        <seg>表 23.8. Java 插件——其他属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 23.9. Java plugin - source set properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180320T095035Z" creationid="haohang" creationdate="20180320T095035Z">
        <seg>表 23.9. Java 插件——源集属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 24.1. Groovy plugin - tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T120743Z" creationid="huanghaohang" creationdate="20180406T120743Z">
        <seg>表 24.1. Groovy 插件——任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 24.2. Groovy plugin - additional task dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T121104Z" creationid="huanghaohang" creationdate="20180406T121104Z">
        <seg>表 24.2. Groovy 插件——额外的任务依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 24.3. Groovy plugin - project layout</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T121135Z" creationid="huanghaohang" creationdate="20180406T121135Z">
        <seg>表 24.3. Groovy 插件——项目布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 24.4. Groovy plugin - source set properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T133305Z" creationid="huanghaohang" creationdate="20180406T133305Z">
        <seg>表 24.4. Groovy 插件——源集属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 24.5. Groovy plugin - source set properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T235059Z" creationid="huanghaohang" creationdate="20180406T235059Z">
        <seg>表 24.5. Groovy 插件——源集属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 24.6. Groovy plugin - GroovyCompile properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180407T003649Z" creationid="huanghaohang" creationdate="20180407T003649Z">
        <seg>表 24.6. Groovy 插件——GroovyCompile 属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T150554Z" creationid="huanghaohang" creationdate="20170927T150554Z">
        <seg>Task</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Task (org.gradle.api.Task)

Description</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T012846Z" creationid="huanghaohang" creationdate="20170910T012846Z">
        <seg>Task (org.gradle.api.Task)

Description</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Task Property</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T100231Z" creationid="haohang" creationdate="20180326T100231Z">
        <seg>任务属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Task Tree</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T234018Z" creationid="huanghaohang" creationdate="20171206T234018Z">
        <seg>任务树</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Task dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T031058Z" creationid="huanghaohang" creationdate="20170909T031058Z">
        <seg>任务依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Task name</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180312T061323Z" creationid="haohang" creationdate="20180312T061323Z">
        <seg>任务名称</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Task name abbreviation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233927Z" creationid="huanghaohang" creationdate="20171206T233927Z">
        <seg>任务名缩写</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Task ordering can be useful in a number of scenarios:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T030044Z" creationid="huanghaohang" creationdate="20170922T030044Z">
        <seg>任务排序在许多情况下可能有用：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Task ordering is an &lt;a0&gt;incubating&lt;/a0&gt; feature. Please be aware that this feature may change in later Gradle versions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T025813Z" creationid="huanghaohang" creationdate="20170922T025813Z">
        <seg>任务排序是一个&lt;a0&gt;孵化中&lt;/a0&gt;的功能。请注意，此功能可能会在以后的Gradle版本中有所更改。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Task rules</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180201T021751Z" creationid="huanghaohang" creationdate="20180201T021751Z">
        <seg>任务规则</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>TaskActionListener</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180107T144501Z" creationid="huanghaohang" creationdate="20180107T144501Z">
        <seg>TaskActionListener</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>TaskExecutionGraphListener</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180107T144458Z" creationid="huanghaohang" creationdate="20180107T144458Z">
        <seg>TaskExecutionGraphListener</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>TaskExecutionListener</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180107T144500Z" creationid="huanghaohang" creationdate="20180107T144500Z">
        <seg>TaskExecutionListener</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>TaskOutputs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T150607Z" creationid="huanghaohang" creationdate="20170927T150607Z">
        <seg>TaskOutputs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tasks are also available through the &lt;c0&gt;tasks&lt;/c0&gt; collection.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T121732Z" creationid="huanghaohang" creationdate="20170919T121732Z">
        <seg>任务也可以通过&lt;c0&gt;tasks&lt;/c0&gt;集合来访问。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Test</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180312T063127Z" creationid="haohang" creationdate="20180312T063127Z">
        <seg>Test</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Test Groovy sources. May also contain Java sources for joint compilation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T121731Z" creationid="huanghaohang" creationdate="20180406T121731Z">
        <seg>Groovy 测试源代码。也可能包含联合编译的 Java 源代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Test Java source</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T053006Z" creationid="haohang" creationdate="20180313T053006Z">
        <seg>Java 测试源代码</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Test filtering feature has following characteristic:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180405T130735Z" creationid="huanghaohang" creationdate="20180405T130735Z">
        <seg>测试过滤功能具有以下的特征：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Test filtering supersedes the file-based test selection. The latter may be completely replaced in future. We will grow the the test filtering api and add more kinds of filters.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180405T131627Z" creationid="huanghaohang" creationdate="20180405T131410Z">
        <seg>测试过滤取代了基于文件的测试选择。后者可能会在将来被完全取代。我们将会增加测试过滤 API 并添加更多类型的过滤器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Test resources</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T053009Z" creationid="haohang" creationdate="20180313T053009Z">
        <seg>测试资源</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>TestNG supports &lt;a0&gt;parameterizing test methods&lt;/a0&gt;, allowing a particular test method to be executed multiple times with different inputs. Gradle includes the parameter values in its reporting of the test method execution.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T055731Z" creationid="huanghaohang" creationdate="20180406T055617Z">
        <seg>TestNG 支持&lt;a0&gt;参数化测试方法&lt;/a0&gt;，允许使用不同的输入多次执行特定的测试方法。 Gradle 会在这个测试方法执行的报告中包含参数值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tests are executed in a separate JVM, isolated from the main build process. The &lt;a0&gt;&lt;c1&gt;Test&lt;/c1&gt;&lt;/a0&gt; task's API allows you some control over how this happens.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180330T062150Z" creationid="haohang" creationdate="20180330T054946Z">
        <seg>测试在单独的 JVM 进程中执行，与主构建进程隔离。&lt;a0&gt;&lt;c1&gt;Test&lt;/c1&gt;&lt;/a0&gt; 任务的 API 允许你对这种情况进行一些控制。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thanks to Gradle's default imports (see &lt;a0&gt;Appendix E, &lt;i1&gt;Existing IDE Support and how to cope without it&lt;/i1&gt;&lt;/a0&gt;) you could also write:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180130T093301Z" creationid="huanghaohang" creationdate="20180130T093301Z">
        <seg>归功于 Gradle 的默认导入（见《&lt;a0&gt;附录 E，&lt;i1&gt;现有的 IDE 支持和如何应对不支持的情况&lt;/i1&gt;&lt;/a0&gt;》），你也可以这样写：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;a0&gt;&lt;c1&gt;Sync&lt;/c1&gt;&lt;/a0&gt; task extends the &lt;c2&gt;Copy&lt;/c2&gt; task. When it executes, it copies the source files into the destination directory, and then removes any files from the destination directory which it did not copy. This can be useful for doing things such as installing your application, creating an exploded copy of your archives, or maintaining a copy of the project's dependencies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T124952Z" creationid="huanghaohang" creationdate="20171126T124952Z">
        <seg>&lt;a0&gt;&lt;c1&gt;Sync&lt;/c1&gt;&lt;/a0&gt; 任务扩展了 &lt;c2&gt;Copy&lt;/c2&gt; 任务。当它执行时，它会将源文件复制到目标目录中，然后从目标目录中删除它没有复制的所有文件。这可以用于执行诸如安装应用程序，创建归档文件的分解（解压）副本，或维护项目依赖的副本等。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;Project&lt;/c0&gt; instance</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T132123Z" creationid="huanghaohang" creationdate="20170913T132123Z">
        <seg>&lt;c0&gt;Project&lt;/c0&gt;实例</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;Project&lt;/c0&gt; object provides some standard properties, which are available in your build script. The following table lists a few of the commonly used ones.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T132102Z" creationid="huanghaohang" creationdate="20170913T132102Z">
        <seg>&lt;c0&gt;Project&lt;/c0&gt;对象提供了一些在构建脚本中可用的标准的属性。下表列出了几个常用的属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;Test&lt;/c0&gt; task detects which classes are test classes by inspecting the compiled test classes. By default it scans all &lt;c1&gt;.class&lt;/c1&gt; files. You can set custom includes / excludes, only those classes will be scanned. Depending on the test framework used (JUnit / TestNG) the test class detection uses different criteria.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180405T155150Z" creationid="huanghaohang" creationdate="20180405T155150Z">
        <seg>&lt;c0&gt;Test&lt;/c0&gt; 任务通过检查编译的测试类来检测哪些类是测试类。默认情况下，它会扫描所有 &lt;c1&gt;.class&lt;/c1&gt; 文件。你可以设置自定义包含或排除哪些类，只有这些类才会被扫描。根据所使用的测试框架（JUnit 或 TestNG），会使用不同的标准进行测试类的检测。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;Test&lt;/c0&gt; task generates the following results by default.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T042107Z" creationid="huanghaohang" creationdate="20180406T042107Z">
        <seg>&lt;c0&gt;test&lt;/c0&gt; 任务默认情况下会生成以下结果。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;clean&lt;/c0&gt; task is an instance of &lt;a1&gt;&lt;c2&gt;Delete&lt;/c2&gt;&lt;/a1&gt;. It simply removes the directory denoted by its &lt;c3&gt;dir&lt;/c3&gt; property.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T100614Z" creationid="haohang" creationdate="20180326T100556Z">
        <seg>&lt;c0&gt;clean&lt;/c0&gt; 任务是 &lt;a1&gt;&lt;c2&gt;Delete&lt;/c2&gt;&lt;/a1&gt; 的一个实例。它只是删除由 &lt;c3&gt;dir&lt;/c3&gt; 属性表示的目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;from()&lt;/c0&gt; method accepts any of the arguments that the &lt;a1&gt;files()&lt;/a1&gt; method does. When an argument resolves to a directory, everything under that directory (but not the directory itself) is recursively copied into the destination directory. When an argument resolves to a file, that file is copied into the destination directory. When an argument resolves to a non-existing file, that argument is ignored. If the argument is a task, the output files (i.e. the files the task creates) of the task are copied and the task is automatically added as a dependency of the &lt;c2&gt;Copy&lt;/c2&gt; task. The &lt;c3&gt;into()&lt;/c3&gt; accepts any of the arguments that the &lt;a4&gt;file()&lt;/a4&gt; method does. Here is another example:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171015T075000Z" creationid="huanghaohang" creationdate="20171002T135621Z">
        <seg>该&lt;c0&gt;from()&lt;/c0&gt;方法接受和&lt;a1&gt;files()&lt;/a1&gt;方法一样的参数。当参数解析为目录时，该目录下的所有内容（除了该目录本身）将递归复制到目标目录中。当参数解析为文件时，该文件将被复制到目标目录中。当参数解析为不存在的文件时，该参数将被忽略。如果参数是一个任务，则复制任务的输出文件（即任务创建的文件），并将任务自动添加为&lt;c2&gt;Copy&lt;/c2&gt;任务的依赖项。该&lt;c3&gt;into()&lt;/c3&gt;接受和&lt;a4&gt;file()&lt;/a4&gt;方法一样的参数。这是另一个例子：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;jar&lt;/c0&gt; task creates a JAR file containing the class files and resources of the project. The JAR file is declared as an artifact in the &lt;c1&gt;archives&lt;/c1&gt; dependency configuration. This means that the JAR is available in the classpath of a dependent project. If you upload your project into a repository, this JAR is declared as part of the dependency descriptor. You can learn more about how to work with archives in &lt;a2&gt;Section 16.8, “Creating archives”&lt;/a2&gt; and artifact configurations in &lt;a3&gt;Chapter 51, &lt;i4&gt;Publishing artifacts&lt;/i4&gt;&lt;/a3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T113658Z" creationid="huanghaohang" creationdate="20180406T104655Z">
        <seg>&lt;c0&gt;jar&lt;/c0&gt; 任务创建一个包含项目的类文件和资源的 JAR 文件。 JAR文件被声明为在 &lt;c1&gt;archives&lt;/c1&gt; 依赖配置中的一个构件。这意味着这个 JAR 文件在依赖它的项目的类路径中可用。如果将项目上传到仓库中，则这个 JAR 文件会被声明为依赖描述符的一部分。关于如何处理档案，可以在《&lt;a2&gt;第 16.8 节，“创建档案”&lt;/a2&gt;》中了解，而构件配置则可参考《&lt;a3&gt;第五十一章，&lt;i4&gt;发布构件&lt;/i4&gt;&lt;/a3&gt;》。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;javadoc&lt;/c0&gt; task is an instance of &lt;a1&gt;&lt;c2&gt;Javadoc&lt;/c2&gt;&lt;/a1&gt;. It supports the core javadoc options and the options of the standard doclet described in the &lt;a3&gt;reference documentation&lt;/a3&gt; of the Javadoc executable. For a complete list of supported Javadoc options consult the API documentation of the following classes: &lt;a4&gt;&lt;c5&gt;CoreJavadocOptions&lt;/c5&gt;&lt;/a4&gt; and &lt;a6&gt;&lt;c7&gt;StandardJavadocDocletOptions&lt;/c7&gt;&lt;/a6&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T100102Z" creationid="haohang" creationdate="20180326T095506Z">
        <seg>&lt;c0&gt;Javadoc&lt;/c0&gt; 任务是 &lt;a1&gt;&lt;c2&gt;Javadoc&lt;/c2&gt;&lt;/a1&gt; 的一个实例。它支持核心 javadoc 的参数选项，以及在 Javadoc 可执行文件的&lt;a3&gt;参考文档&lt;/a3&gt;中描述的标准 doclet 参数选项。对于所支持的 Javadoc 参数选项的完整列表，请参考下面的类的 API 文档： &lt;a4&gt; &lt;c5&gt;CoreJavadocOptions&lt;/c5&gt;&lt;/a4&gt; 和 &lt;a6&gt;&lt;c7&gt;StandardJavadocDocletOptions&lt;/c7&gt;&lt;/a6&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;test&lt;/c0&gt; task is an instance of &lt;a1&gt;&lt;c2&gt;Test&lt;/c2&gt;&lt;/a1&gt;. It automatically detects and executes all unit tests in the &lt;c3&gt;test&lt;/c3&gt; source set. It also generates a report once test execution is complete. JUnit and TestNG are both supported. Have a look at &lt;a4&gt;&lt;c5&gt;Test&lt;/c5&gt;&lt;/a4&gt; for the complete API.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180327T102723Z" creationid="haohang" creationdate="20180327T102723Z">
        <seg>&lt;c0&gt;test&lt;/c0&gt; 任务是 &lt;a1&gt;&lt;c2&gt;Test&lt;/c2&gt;&lt;/a1&gt; 的一个实例。它会自动检测并执行 &lt;c3&gt;test&lt;/c3&gt; 源集中的所有单元测试。测试执行完成后，它还会生成一个报告。它同时支持 JUnit 和 TestNG，可以看一看 &lt;a4&gt;&lt;c5&gt;test&lt;/c5&gt;&lt;/a4&gt; 的完整 API。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;testLogging&lt;/c0&gt; property allows to configure which test events are going to be logged and at which detail level. By default, a concise message will be logged for every failed test. See &lt;a1&gt;&lt;c2&gt;TestLoggingContainer&lt;/c2&gt;&lt;/a1&gt; for how to tune test logging to your preferences.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180330T062032Z" creationid="haohang" creationdate="20180330T062032Z">
        <seg>&lt;c0&gt;testLogging&lt;/c0&gt; 属性可以配置哪些测试事件需要记录，并且使用什么样的日志级别。默认情况下，对于每个失败的测试都只会打印一个简洁的消息。请参阅 &lt;a1&gt;&lt;c2&gt;TestLoggingContainer&lt;/c2&gt;&lt;/a1&gt;，查看如何把测试日志调整为你的偏好设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;s0&gt;&lt;c1&gt;--profile&lt;/c1&gt;&lt;/s0&gt; command line option will record some useful timing information while your build is running and write a report to the &lt;c2&gt;build/reports/profile&lt;/c2&gt; directory. The report will be named using the time when the build was run.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T030624Z" creationid="huanghaohang" creationdate="20170910T023504Z">
        <seg>使用&lt;s0&gt;&lt;c1&gt;--profile&lt;/c1&gt;&lt;/s0&gt;命令行选项会在运行构建时记录一些有用的计时信息，并以运行构建时的时间命名，把报告保存到&lt;c2&gt;build/reports/profile&lt;/c2&gt;目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The API documentation (Javadoc and Groovydoc).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T114544Z" creationid="95" creationdate="20170723T114544Z">
        <seg>API文档（包括Javadoc和Groovydoc）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Ant integration is provided by &lt;a0&gt;&lt;c1&gt;AntBuilder&lt;/c1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T094811Z" creationid="huanghaohang" creationdate="20180105T094811Z">
        <seg>对 Ant 集成由 &lt;a0&gt;&lt;c1&gt;AntBuilder&lt;/c1&gt;&lt;/a0&gt; 提供。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Command Line tab is place to execute a single Gradle command directly. Just enter whatever you would normally enter after 'gradle' on the command line. This also provides a place to try out commands before adding them to favorites.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170911T145832Z" creationid="huanghaohang" creationdate="20170911T145832Z">
        <seg>命令行选项卡用于直接执行单个的Gradle命令。你只需要在命令行中输入你通常在“gradle”后输入的命令即可。它也对要添加到收藏夹命令提供了试错的地方。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The DSL reference guide.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T114530Z" creationid="95" creationdate="20170723T114530Z">
        <seg>DSL参考指南。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Favorites tab is place to store commonly-executed commands. These can be complex commands (anything that's legal to Gradle) and you can provide them with a display name. This is useful for creating, say, a custom build command that explicitly skips tests, documentation, and samples that you could call "fast build".</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170911T145213Z" creationid="huanghaohang" creationdate="20170911T144608Z">
        <seg>“收藏夹”选项卡用于存储常用的命令。这些命令可以是复杂的命令（只要它们符合Gradle命令），你可以给它们设置一个显示名称。这有助于创建一个自定义构建命令，来显式地跳过测试，文档和示例，你可以称之为“快速构建”。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Gradle DSL uses closures in many places. You can find out more about closures &lt;a0&gt;here&lt;/a0&gt;. When the last parameter of a method is a closure, you can place the closure after the method call:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T141908Z" creationid="huanghaohang" creationdate="20170913T141728Z">
        <seg>Gradle DSL在许多地方都使用到了闭包。你可以&lt;a0&gt;在这里&lt;/a0&gt;查到关于闭包的资料。当方法的最后一个参数是闭包时，你可以把它放在在方法调用之后：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Gradle Wrapper allows you to execute Gradle builds on machines where Gradle is not installed. This is useful for example for some continuous integration servers. It is also useful for an open source project to keep the barrier low for building it. The wrapper is also very interesting for the enterprise. It is a zero administration approach for the client machines. It also enforces the usage of a particular Gradle version thus minimizing support issues.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T065536Z" creationid="95" creationdate="20170723T065536Z">
        <seg>Gradle 包装器允许您能够在没有安装Gradle的机器上执行Gradle构建。这对于一些持续集成服务器来说是很有用的。对于开源项目来说，它也是有用的，可以降低项目构建的障碍。包装器对于企业来说也同样友好。对于客户端机器来说，它是一种零管理方法。它还强制了指定的Gradle版本的使用，以最大限度地减少支持问题。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Gradle binaries.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T114505Z" creationid="95" creationdate="20170723T114505Z">
        <seg>Gradle可执行文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Gradle build language</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T032755Z" creationid="huanghaohang" creationdate="20180131T032755Z">
        <seg>Gradle 构建语言</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Gradle distribution comes packaged as a ZIP. The full distribution contains:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T114456Z" creationid="95" creationdate="20170723T114456Z">
        <seg>Gradle的发行包是一个ZIP文件。完整的发行包包含以下内容：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Gradle wrapper</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T063605Z" creationid="95" creationdate="20170723T063605Z">
        <seg>Gradle 包装器</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Groovy library doesn't necessarily have to come from a remote repository. It could also come from a local &lt;c0&gt;lib&lt;/c0&gt; directory, perhaps checked in to source control:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T123301Z" creationid="huanghaohang" creationdate="20180406T122905Z">
        <seg>Groovy 库不一定得从远程仓库中获取，它也可能获取自检入代码控制的本地 &lt;c0&gt;lib&lt;/c0&gt; 目录：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Groovy plugin adds a &lt;a0&gt;&lt;c1&gt;GroovyCompile&lt;/c1&gt;&lt;/a0&gt; task for each source set in the project. The task type extends the &lt;c2&gt;JavaCompile&lt;/c2&gt; task (see &lt;a3&gt;Section 23.11, “CompileJava”&lt;/a3&gt;). The &lt;c4&gt;GroovyCompile&lt;/c4&gt; task supports most configuration options of the official Groovy compiler.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180407T003640Z" creationid="huanghaohang" creationdate="20180407T003640Z">
        <seg>Groovy 插件向项目中的每一个源集添加了一个 &lt;a0&gt;&lt;c1&gt;GroovyCompile&lt;/c1&gt;&lt;/a0&gt; 任务。该任务类型扩展了 &lt;c2&gt;JavaCompile&lt;/c2&gt; 任务（请参阅《&lt;a3&gt;第 23.11 节，“CompileJava”&lt;/a3&gt;》）。该 &lt;c4&gt;GroovyCompile&lt;/c4&gt; 任务支持官方 Groovy 编译器的大多数配置选项。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Groovy plugin adds the following convention properties to each source set in the project. You can use these properties in your build script as though they were properties of the source set object (see &lt;a0&gt;Section 21.3, “Conventions”&lt;/a0&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T133255Z" creationid="huanghaohang" creationdate="20180406T133026Z">
        <seg>Groovy 插件向项目中的每个源集添加了以下，约定属性。你可以在构建脚本中把它们当成是源集对象的属性一样去使用（请参阅《&lt;a0&gt;第 21.3 节，“公约”&lt;/a0&gt;）》。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Groovy plugin adds the following dependencies to tasks added by the Java plugin.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T121026Z" creationid="huanghaohang" creationdate="20180406T121026Z">
        <seg>Groovy 的插件向 Java 插件所加入的任务添加了以下依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Groovy plugin adds the following tasks to the project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T120730Z" creationid="huanghaohang" creationdate="20180406T120730Z">
        <seg>Groovy 的插件向项目中添加了以下任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Groovy plugin also modifies some source set properties:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T235047Z" creationid="huanghaohang" creationdate="20180406T235047Z">
        <seg>Groovy 的插件还修改了一些源集的属性：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Groovy plugin assumes the project layout shown in &lt;a0&gt;Table 24.3, “Groovy plugin - project layout”&lt;/a0&gt;. All the Groovy source directories can contain Groovy &lt;s1&gt;&lt;e2&gt;and&lt;/e2&gt;&lt;/s1&gt; Java code. The Java source directories may only contain Java source code. &lt;s3&gt;[&lt;a4&gt;11&lt;/a4&gt;]&lt;/s3&gt; None of these directories need to exist or have anything in them; the Groovy plugin will simply compile whatever it finds.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T121647Z" creationid="huanghaohang" creationdate="20180406T121647Z">
        <seg>Groovy 插件会假定项目的布局如&lt;a0&gt;表 24.3，“Groovy 插件——项目布局”&lt;/a0&gt;所示。所有的 Groovy 源码目录都可以包含 Groovy &lt;s1&gt;&lt;e2&gt;和&lt;/e2&gt;&lt;/s1&gt; Java 代码。 Java 源码目录可能只包含 Java 源代码。 &lt;s3&gt;[&lt;a4&gt;11&lt;/a4&gt;]&lt;/s3&gt;这些目录都不需要一定存在或者包含有内容。Groovy 插件只会进行编译，而不管它发现什么。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Groovy plugin does not add any convention properties to the project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T132907Z" creationid="huanghaohang" creationdate="20180406T132907Z">
        <seg>Groovy 插件不会向项目添加任何的约定属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Groovy plugin extends the Java plugin to add support for Groovy projects. It can deal with Groovy code, mixed Groovy and Java code, and even pure Java code (although we don't necessarily recommend to use it for the latter). The plugin supports &lt;s0&gt;&lt;e1&gt;joint compilation&lt;/e1&gt;&lt;/s0&gt;, which allows to freely mix and match Groovy and Java code, with dependencies in both directions. For example, a Groovy class can extend a Java class that in turn extends a Groovy class. This makes it possible to use the best language for the job, and to rewrite any class in the other language if needed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T120650Z" creationid="huanghaohang" creationdate="20180406T120650Z">
        <seg>Groovy 插件扩展了 Java 插件，以添加对 Groovy 项目的支持。它可以处理 Groovy 代码，以及混合的 Groovy 和 Java 代码，甚至纯 Java 代码（尽管我们不一定建议将其用于后者）。该插件支持&lt;s0&gt;&lt;e1&gt;联合编译&lt;/e1&gt;&lt;/s0&gt;，它允许自由地混合和匹配 Groovy 和 Java 代码以及各自的依赖。例如，一个 Groovy 类可以扩展一个 Java 类，而这个 Java 类也可以扩展自一个 Groovy 类。这样一来，我们就能够在项目中使用最适合的语言，并在需要时用其他语言重写其中的任何类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Groovy source files of this source set. Contains all &lt;c0&gt;.groovy&lt;/c0&gt; and &lt;c1&gt;.java&lt;/c1&gt; files found in the Groovy source directories, and excludes all other types of files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T133452Z" creationid="huanghaohang" creationdate="20180406T133322Z">
        <seg>这个源码集的 Groovy 源文件。包含全部在 Groovy 源目录中找到的 &lt;c0&gt;.groovy &lt;/c0&gt; 和 &lt;c1&gt;.java&lt;/c1&gt; 文件，并排除所有其他类型的文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171014T124902Z" creationid="huanghaohang" creationdate="20171014T124902Z">
        <seg>Java 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java plugin adds Java compilation, testing and bundling capabilities to a project. It serves as the basis for many of the other Gradle plugins.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180218T153409Z" creationid="huanghaohang" creationdate="20180218T153409Z">
        <seg>Java 插件向项目添加 Java 编译、测试和捆绑的功能。它是其他许多 Gradle 插件的基础。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java plugin adds a &lt;a0&gt;&lt;c1&gt;JavaCompile&lt;/c1&gt;&lt;/a0&gt; instance for each source set in the project. Some of the most common configuration options are shown below.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180327T101646Z" creationid="haohang" creationdate="20180326T101433Z">
        <seg>Java 插件为项目里的每一个源集添加一个 &lt;a0&gt;&lt;c1&gt;JavaCompile&lt;/c1&gt;&lt;/a0&gt; 实例。一些最常见的配置选项如下所示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java plugin adds a number of convention properties to the project, shown below. You can use these properties in your build script as though they were properties of the project object (see &lt;a0&gt;Section 21.3, “Conventions”&lt;/a0&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T054637Z" creationid="haohang" creationdate="20180313T054637Z">
        <seg>Java 插件向项目添加了许多约定属性，如下表所示。你可以在构建脚本中使用这些属性，就像它们是 project 对象里的属性一样（见《&lt;a0&gt;第 21.3 节，“约定”&lt;/a0&gt;》）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java plugin adds a number of default values for the archive tasks. You can use the archive tasks without using the Java plugin, if you like. You will need to provide values for some additional properties.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T135850Z" creationid="huanghaohang" creationdate="20171126T135850Z">
        <seg>Java 插件为归档任务添加了一些默认值。如果你愿意，使用归档任务时你也可以不使用 Java 插件。你将需要提供一些附加属性的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java plugin adds a number of dependency configurations to your project, as shown below. It assigns those configurations to tasks such as &lt;c0&gt;compileJava&lt;/c0&gt; and &lt;c1&gt;test&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T053708Z" creationid="haohang" creationdate="20180313T053708Z">
        <seg>Java 插件向项目添加了一些依赖配置，如下表所示。它将这些配置指定一些任务，如 &lt;c0&gt;compileJava&lt;/c0&gt; 和 &lt;c1&gt;test&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java plugin adds a number of properties to your project. These properties have default values which are usually sufficient to get started. It's easy to change these values if they don't suit. Let's look at this for our sample. Here we will specify the version number for our Java project, along with the Java version our source is written in. We also add some attributes to the JAR manifest.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T132650Z" creationid="95" creationdate="20170730T130552Z">
        <seg>Java插件向你的项目添加了许多属性。这些属性都具有默认值，足以让项目快速开始。如果不符合要求，修改这些值也很简单。让我们在例子中来看。这里，我们会指定我们的Java项目的版本号，以及我们的源码所使用Java版本。我们也会向JAR包的清单文件中添加一些属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java plugin adds a number of tasks to your project, as shown below.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180312T061302Z" creationid="haohang" creationdate="20180312T061302Z">
        <seg>Java 插件向你的项目添加了大量的任务，如下所示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java plugin adds quite a few tasks to your project. However, there are only a handful of tasks that you will need to use to build the project. The most commonly used task is the &lt;c0&gt;build&lt;/c0&gt; task, which does a full build of the project. When you run &lt;s1&gt;&lt;c2&gt;gradle build&lt;/c2&gt;&lt;/s1&gt;, Gradle will compile and test your code, and create a JAR file containing your main classes and resources:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T014234Z" creationid="95" creationdate="20170730T013856Z">
        <seg>Java插件向你的项目中添加了不少的任务。但是，在构建项目时只有其中的一部分任务才使用到。最常用的是这个 &lt;c0&gt;build&lt;/c0&gt; 任务，它会对项目做一次完整的构建。当运行 &lt;s1&gt;&lt;c2&gt;gradle build&lt;/c2&gt;&lt;/s1&gt;时，Gradle会编译并执行测试，然后将你的主要类文件和资源文件打成JAR包。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java plugin adds the concept of &lt;s0&gt;&lt;e1&gt;source sets&lt;/e1&gt;&lt;/s0&gt; (see &lt;a2&gt;&lt;c3&gt;SourceSet&lt;/c3&gt;&lt;/a2&gt;) to describe the aspects of a set of source, one aspect being where the class files should be written to when it is compiled. The Java plugin maps the &lt;c4&gt;destinationDir&lt;/c4&gt; property of the &lt;c5&gt;compileJava&lt;/c5&gt; task to this aspect of the source set.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T024514Z" creationid="huanghaohang" creationdate="20180131T022834Z">
        <seg>Java 插件增加了&lt;s0&gt;&lt;e1&gt;源文件集&lt;/e1&gt;&lt;/s0&gt;（见&lt;a2&gt;&lt;c3&gt;SourceSet&lt;/c3&gt;&lt;/a2&gt;）的概念来描述一组源文件的各个方面，其中一个方面是在编译的时候写入类文件的地方。Java 插件将 &lt;c5&gt;compileJava&lt;/c5&gt; 任务的 &lt;c4&gt;destinationDir&lt;/c4&gt; 属性映射到源文件集的这一方面。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java plugin also adds a number of tasks which assemble the classes for the source set, as shown in &lt;a0&gt;Table 23.2, “Java plugin - source set tasks”&lt;/a0&gt;. For example, for a source set called &lt;c1&gt;intTest&lt;/c1&gt;, you can run &lt;s2&gt;&lt;c3&gt;gradle intTestClasses&lt;/c3&gt;&lt;/s2&gt; to compile the int test classes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T095223Z" creationid="haohang" creationdate="20180326T095223Z">
        <seg>Java 插件还添加了大量的任务用于组装源集的类，如&lt;a0&gt;表 23.2，“Java 插件——源集任务”&lt;/a0&gt;所示。例如，对于一个名为 &lt;c1&gt;intTest&lt;/c1&gt; 的源集，你可以通过运行&lt;s2&gt;&lt;c3&gt;gradle intTestClasses&lt;/c3&gt;&lt;/s2&gt;来编译 int 测试类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java plugin also adds a number of tasks which form a lifecycle for the project:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T033936Z" creationid="haohang" creationdate="20180313T033936Z">
        <seg>Java 插件还增加了大量构成项目生命周期的任务：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java plugin assumes the project layout shown below. None of these directories need exist or have anything in them. The Java plugin will compile whatever it finds, and handles anything which is missing.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T052926Z" creationid="haohang" creationdate="20180313T052632Z">
        <seg>Java 插件会假定如下所示的项目布局。这些目录都不需要一定的存在在，或是里面有什么内容。 Java插件不管发现什么都将会进行编译，并处理缺失的任何内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java plugin defines a number of standard configurations. These configurations represent the classpaths that the Java plugin uses. Some are listed below, and you can find more details in &lt;a0&gt;Table 23.5, “Java plugin - dependency configurations”&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T032544Z" creationid="huanghaohang" creationdate="20170908T032544Z">
        <seg>Java插件定义了许多标准配置。这些配置代表了Java插件使用的类路径。有些列在下面，你也可以在&lt;a0&gt;表23.5，“Java插件 - 依赖配置”&lt;/a0&gt;了解到更多详细内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java plugin defines two standard source sets, called &lt;c0&gt;main&lt;/c0&gt; and &lt;c1&gt;test&lt;/c1&gt;. The &lt;c2&gt;main&lt;/c2&gt; source set contains your production source code, which is compiled and assembled into a JAR file. The &lt;c3&gt;test&lt;/c3&gt; source set contains your unit test source code, which is compiled and executed using JUnit or TestNG.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180312T061246Z" creationid="haohang" creationdate="20180312T061246Z">
        <seg>Java 插件定义了两个标准源集，分别是 &lt;c0&gt;main&lt;/c0&gt; 和 &lt;c1&gt;test&lt;/c1&gt;。&lt;c2&gt;main&lt;/c2&gt; 源集包含生产源代码，将其编译并组装到 JAR 文件中。&lt;c3&gt;test&lt;/c3&gt; 源集则包含了单元测试源代码，它们将被编译并使用 JUnit 或 TestNG 来执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java plugin has added a &lt;c0&gt;compileJava&lt;/c0&gt; task and a &lt;c1&gt;processResources&lt;/c1&gt; task to the project and configured the &lt;c2&gt;destinationDir&lt;/c2&gt; property of both of these tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180130T100521Z" creationid="huanghaohang" creationdate="20180130T100434Z">
        <seg>Java 插件已经向 project 添加了 &lt;c0&gt;compileJava&lt;/c0&gt; 和 &lt;c1&gt;processResources&lt;/c1&gt; 任务，并且配置了这两个任务的 &lt;c2&gt;destinationDir&lt;/c2&gt; 属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java plugin introduces the concept of a &lt;e0&gt;source set&lt;/e0&gt;. A source set is simply a group of source files which are compiled and executed together. These source files may include Java source files and resource files. Other plugins add the ability to include Groovy and Scala source files in a source set. A source set has an associated compile classpath, and runtime classpath.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180312T060641Z" creationid="haohang" creationdate="20180312T060641Z">
        <seg>Java 插件引入了一个&lt;e0&gt;源集&lt;/e0&gt;的概念。源集只是一组源文件，它们被一起编译和执行。这些源文件可能包含 Java 源文件和资源文件，有些其他插件可以将 Groovy 和 Scala 源文件包含在源集中。一个源集有一个相关联的编译类路径和运行时类路径。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java plugin is convention based. This means that the plugin defines default values for many aspects of the project, such as where the Java source files are located. If you follow the convention in your project, you generally don't need to do much in your build script to get a useful build. Gradle allows you to customize your project if you don't want to or cannot follow the convention in some way. In fact, because support for Java projects is implemented as a plugin, you don't have to use the plugin at all to build a Java project, if you don't want to.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T012100Z" creationid="95" creationdate="20170730T012100Z">
        <seg>这个Java插件是基于约定的。这也意味着它为项目的很多个方面都定义了一些默认值，比如Java源文件的位置。如果你遵循这些约定，那么你就不用在构建脚本中再去做太多的事情。如果你不想或无法遵循约定，Gradle也允许你进行自定义。实际上，由于对Java项目的支持是以插件的形式来实现的，你甚至可以完全不用这个构建来构建Java项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java plugin uses the &lt;a0&gt;&lt;c1&gt;Copy&lt;/c1&gt;&lt;/a0&gt; task for resource handling. It adds an instance for each source set in the project. You can find out more about the copy task in &lt;a2&gt;Section 16.6, “Copying files”&lt;/a2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T101143Z" creationid="haohang" creationdate="20180326T101143Z">
        <seg>Java 插件使用 &lt;a0&gt;&lt;c1&gt;Copy&lt;/c1&gt;&lt;/a0&gt; 任务进行资源的处理，它为项目中的每个源集添加一个实例。你可以在《&lt;a2&gt;第 16.6 节，“复制文件”&lt;/a2&gt;》找到更多关于复制任务的信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java source files of this source set. Contains only &lt;c0&gt;.java&lt;/c0&gt; files found in the Java source directories, and excludes all other files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180320T100347Z" creationid="haohang" creationdate="20180320T100347Z">
        <seg>此源集的 Java 源文件。仅包含 Java 源目录中找到的 &lt;c0&gt;.java&lt;/c0&gt; 文件，并排除所有其他文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Project API</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T032803Z" creationid="huanghaohang" creationdate="20180131T032803Z">
        <seg>Project API</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Script API</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T032830Z" creationid="huanghaohang" creationdate="20180131T032830Z">
        <seg>Script API</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Setup tab allows configuration of some general settings.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170911T145839Z" creationid="huanghaohang" creationdate="20170911T145839Z">
        <seg>设置（Setup）选项卡允许你配置一些常规的设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The String parameter is used as a description for the rule. This description is shown when running for example &lt;s0&gt;&lt;c1&gt;gradle tasks&lt;/c1&gt;&lt;/s0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T043702Z" creationid="huanghaohang" creationdate="20170923T011932Z">
        <seg>这个String参数用作规则的描述，当对这个例子运行&lt;s0&gt;&lt;c1&gt;gradle tasks&lt;/c1&gt;&lt;/s0&gt;时会显示这个描述。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Task Tree context menu provides the following options:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170911T144129Z" creationid="huanghaohang" creationdate="20170911T144129Z">
        <seg>任务树的上下文菜单提供了以下选项：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Task Tree shows a hierarchical display of all projects and their tasks. Double clicking a task executes it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170911T143848Z" creationid="huanghaohang" creationdate="20170911T143755Z">
        <seg>任务树显示所有项目及其任务的层次结构，双击一个任务就可以执行它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The TestNG framework has a quite similar concept. In TestNG you can specify different test groups. &lt;s0&gt;[&lt;a1&gt;10&lt;/a1&gt;]&lt;/s0&gt; The test groups that should be included or excluded from the test execution can be configured in the test task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T042035Z" creationid="huanghaohang" creationdate="20180406T041847Z">
        <seg>TestNG 框架则有一个非常相似的概念。在 TestNG 中，你可以指定不同的测试组。 &lt;s0&gt;[&lt;a1&gt;10&lt;/a1&gt;]&lt;/s0&gt;你可以在测试任务中配置应该包含在测试执行中或从测试执行中排除的测试组。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Tooling API (see &lt;a0&gt;Chapter 62, &lt;i1&gt;Embedding Gradle&lt;/i1&gt;&lt;/a0&gt;) uses the daemon all the time, e.g. you cannot officially use the Tooling API without the daemon. This means that whenever you are using the STS Gradle plugin for Eclipse or the Gradle support in Intellij IDEA, you're already using the Gradle Daemon.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180109T135832Z" creationid="huanghaohang" creationdate="20180109T135832Z">
        <seg>Tooling API（请参阅《&lt;a0&gt;第62章，&lt;i1&gt;嵌入Gradle&lt;/i1&gt;&lt;/a0&gt;》）会始终使用守护进程。例如，如果没有守护进程，你就不能正式使用 Tooling API。这意味着无论你是在 Eclipse 中使用 STS Gradle 插件，还是在 Intellij IDEA 中使用 Gradle 支持，都已经使用了Gradle Daemon。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The UI displays 4 tabs along the top and an output window along the bottom.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170911T143744Z" creationid="huanghaohang" creationdate="20170911T143744Z">
        <seg>在Gradle的用户界面（UI）中，上面是4个选项卡，下面则是输出窗口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The absolute path of the generated archive.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T232813Z" creationid="huanghaohang" creationdate="20171206T232813Z">
        <seg>生成的归档文件的绝对路径。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The absolute path of the project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T132143Z" creationid="huanghaohang" creationdate="20170913T132143Z">
        <seg>项目绝对路径。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The appendix portion of the archive file name.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233159Z" creationid="huanghaohang" creationdate="20171206T233159Z">
        <seg>归档文件名称中的附录部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The application of plugins is &lt;s0&gt;&lt;e1&gt;idempotent&lt;/e1&gt;&lt;/s0&gt;. That is, a plugin can be applied multiple times. If the plugin has previously been applied, any further applications will have no effect.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180130T093407Z" creationid="huanghaohang" creationdate="20180130T093407Z">
        <seg>插件的应用是&lt;s0&gt;&lt;e1&gt;幂等的&lt;/e1&gt;&lt;/s0&gt;。也就是说，一个插件可以应用多次。如果插件之前已经被应用，则任何进一步的应用都不会有影响。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The archive tasks all work exactly the same way as the &lt;c0&gt;Copy&lt;/c0&gt; task, and implement the same &lt;c1&gt;CopySpec&lt;/c1&gt; interface. As with the &lt;c2&gt;Copy&lt;/c2&gt; task, you specify the input files using the &lt;c3&gt;from()&lt;/c3&gt; method, and can optionally specify where they end up in the archive using the &lt;c4&gt;into()&lt;/c4&gt; method. You can filter the contents of file, rename files, and all the other things you can do with a copy spec.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T140626Z" creationid="huanghaohang" creationdate="20171126T140030Z">
        <seg>归档任务与 &lt;c0&gt;Copy&lt;/c0&gt; 任务的使用方式完全一样，并且实现了同样的 &lt;c1&gt;CopySpec&lt;/c1&gt; 接口。像使用 &lt;c2&gt;Copy&lt;/c2&gt; 任务一样，你需要使用 &lt;c3&gt;from()&lt;/c3&gt; 方法指定输入文件，并且可以选择使用 &lt;c4&gt;into()&lt;/c4&gt; 方法来指定它们在归档中结束的位置。你可以过滤文件内容，重命名文件以及进行通过复制规范可以做的其他事情。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The base file name of the generated archive</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T232802Z" creationid="huanghaohang" creationdate="20171206T232802Z">
        <seg>生成的归档文件的基本文件名</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The base name portion of the archive file name.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233147Z" creationid="huanghaohang" creationdate="20171206T233147Z">
        <seg>归档文件名称中的基本名称部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The basename to use for archives, such as JAR or ZIP files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180318T010614Z" creationid="huanghaohang" creationdate="20180318T010614Z">
        <seg>像 JAR 或 ZIP 文件这样的工件的基本名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The basic idea is that the Gradle command forks a daemon process, which performs the actual build. Subsequent invocations of the Gradle command will reuse the daemon, avoiding the startup costs. Sometimes we cannot use an existing daemon because it is busy or its java version or jvm arguments are different. For exact details on when exactly new daemon process is forked read the dedicated section below. The daemon process automatically expire after 3 hours of idle time.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180115T142750Z" creationid="huanghaohang" creationdate="20180114T155211Z">
        <seg>基本思想是，Gradle 命令会 fork 一个守护进程执行实际的构建。Gradle 命令的后续调用将重用守护进程，以避免启动开销。有时我们不能使用现有的守护进程，是因为它正忙或者它的 java 版本或 jvm 参数不同。关于何时会 fork 新的守护进程的具体细节，请阅读下面的专题。守护进程将在空闲 3 小时后自动失效。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The binary sources. This is for reference only. If you want to build Gradle you need to download the source distribution or checkout the sources from the source repository. See the &lt;a0&gt;Gradle web site&lt;/a0&gt; for details.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T115048Z" creationid="95" creationdate="20170723T115048Z">
        <seg>源代码。这些源代码仅供参考。如果您想要自己来编译Gradle，您需要去下载源码发行包，或者是从源码仓库里检出代码。具体请参阅&lt;a0&gt;Gradle官方网站&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The built-in dependencyInsight task is a part of the 'Help' tasks group. The task needs to configured with the dependency and the configuration. The report looks for the dependencies that match the specified dependency spec in the specified configuration. If java related plugin is applied, the dependencyInsight task is pre-configured with 'compile' configuration because typically it's the compile dependencies we are interested in. You should specify the dependency you are interested in via the command line '--dependency' option. If you don't like the defaults you may select the configuration via '--configuration' option. For more information see &lt;a0&gt;&lt;c1&gt;DependencyInsightReportTask&lt;/c1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T023244Z" creationid="huanghaohang" creationdate="20170910T022607Z">
        <seg>内置的dependencyInsight任务是“Help”任务组的一部分。该任务需要使用依赖和配置信息来配置。报告将在指定的配置中查找与指定依赖说明相匹配的依赖项。例如，如果应用了java相关的插件，那么dependencyInsight任务是通过“compile”配置进行预配置的，因为通常来说，我们感兴趣的是编译的依赖。如果你想要指定所感兴趣的依赖，可以使用命令行“--configurastion”选项。如果您不想要默认的配置，也可以通过“--configuration”选项来选择配置。更多信息请参阅&lt;a0&gt;&lt;c1&gt;DependencyInsightReportTask&lt;/c1&gt;&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The calls &lt;c0&gt;doFirst&lt;/c0&gt; and &lt;c1&gt;doLast&lt;/c1&gt; can be executed multiple times. They add an action to the beginning or the end of the task's actions list. When the task executes, the actions in the action list are executed in order. The &lt;c2&gt;&lt;&lt;&lt;/c2&gt; operator is simply an alias for &lt;c3&gt;doLast&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T133618Z" creationid="95" creationdate="20170727T133133Z">
        <seg>&lt;c0&gt;doFirst&lt;/c0&gt;和&lt;c1&gt;doLast&lt;/c1&gt; 可以被多次调用，它们分别是向任务的动作列表的开头或结尾添加一个动作。当任务执行的时候，动作列表的这些动作会依次执行。&lt;c2&gt;&lt;&lt;&lt;/c2&gt; 操作只是 &lt;c3&gt;doLast&lt;/c3&gt;的别名。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The classifier portion of the archive file name,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233223Z" creationid="huanghaohang" creationdate="20171206T233223Z">
        <seg>归档文件名称中的分类部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The classpath to use when compiling the source files of this source set.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180320T095334Z" creationid="haohang" creationdate="20180320T095334Z">
        <seg>编译该源集的源文件时使用的类路径。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The classpath to use when executing the classes of this source set.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180320T100044Z" creationid="haohang" creationdate="20180320T100044Z">
        <seg>执行此源集的类时使用的类路径。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The declarative language lies on top of a general purpose task graph, which you can fully leverage in your builds. It provides utmost flexibility to adapt Gradle to your unique needs.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170722T021842Z" creationid="95" creationdate="20170722T021842Z">
        <seg>声明性语言位于通用任务图的顶部，您可以在构建中充分利用它。它提供了极大的灵活性，使Gradle满足您的独特需求。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The default configuration used by a project dependency on this project. Contains the artifacts and dependencies required by this project at runtime.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T054142Z" creationid="haohang" creationdate="20180313T053916Z">
        <seg>依赖于本项目的另一个项目所使用的默认配置。包含此项目运行时所需的工件和依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The default name for a generated archive is &lt;c0&gt;&lt;e1&gt;&lt;c2&gt;projectName&lt;/c2&gt;&lt;/e1&gt;-&lt;e3&gt;&lt;c4&gt;version&lt;/c4&gt;&lt;/e3&gt;.&lt;e5&gt;&lt;c6&gt;type&lt;/c6&gt;&lt;/e5&gt;&lt;/c0&gt; For example:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T140702Z" creationid="huanghaohang" creationdate="20171126T140702Z">
        <seg>生成的归档的默认名称是&lt;c0&gt;&lt;e1&gt;&lt;c2&gt;projectName&lt;/c2&gt;&lt;/e1&gt;-&lt;e3&gt;&lt;c4&gt;version&lt;/c4&gt;&lt;/e3&gt;.&lt;e5&gt;&lt;c6&gt;type&lt;/c6&gt;&lt;/e5&gt;&lt;/c0&gt;。举个例子：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The dependencies required by the production classes at runtime. By default, also includes the compile time dependencies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T035002Z" creationid="huanghaohang" creationdate="20170908T034919Z">
        <seg>运行时生产类所需的依赖。默认情况下，也包括了编译时依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The dependencies required to compile the production source of the project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T034923Z" creationid="huanghaohang" creationdate="20170908T032913Z">
        <seg>编译项目的生产源码所需的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The dependencies required to compile the test source of the project. By default, also includes the compiled production classes and the compile time dependencies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T035059Z" creationid="huanghaohang" creationdate="20170908T035059Z">
        <seg>编译项目测试源码所需的依赖。默认情况下，还包括了所编译的生产类和编译时依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The dependencies required to run the tests. By default, also includes the compile, runtime and test compile dependencies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T035430Z" creationid="huanghaohang" creationdate="20170908T035316Z">
        <seg>运行测试所需的依赖。默认情况下，还包括编译，运行时及测试编译的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The dependency of &lt;c0&gt;taskX&lt;/c0&gt; to &lt;c1&gt;taskY&lt;/c1&gt; is declared before &lt;c2&gt;taskY&lt;/c2&gt; is defined. This is very important for multi-project builds. Task dependencies are discussed in more detail in &lt;a3&gt;Section 15.4, “Adding dependencies to a task”&lt;/a3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T132109Z" creationid="95" creationdate="20170726T160408Z">
        <seg>&lt;c0&gt;taskX&lt;/c0&gt; 依赖 &lt;c1&gt;taskY&lt;/c1&gt; 是在 &lt;c2&gt;taskY&lt;/c2&gt; 之前定义的。这点在多项目构建中非常有用。有关任务依赖的更多信息，可以参阅 &lt;a3&gt;第15.4节，“给任务添加依赖”&lt;/a3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The directory containing the build script.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T132217Z" creationid="huanghaohang" creationdate="20170913T132217Z">
        <seg>包含构建脚本的目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The directory to generate distributions into.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T062150Z" creationid="haohang" creationdate="20180313T062150Z">
        <seg>生成分发文件的目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The directory to generate documentation into.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T062250Z" creationid="haohang" creationdate="20180313T062250Z">
        <seg>用于生成文档的目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The directory to generate libraries into.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T061536Z" creationid="haohang" creationdate="20180313T061536Z">
        <seg>要生成库的目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The directory to generate reports into.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T061246Z" creationid="haohang" creationdate="20180313T061246Z">
        <seg>要生成报告的目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The directory to generate test result .xml files into.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T061405Z" creationid="haohang" creationdate="20180313T061405Z">
        <seg>生成测试结果.xml 文件的目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The directory to generate the archive into</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233114Z" creationid="huanghaohang" creationdate="20171206T233114Z">
        <seg>存放生成的归档文件的目录</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The directory to generate the classes of this source set into.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180320T095210Z" creationid="haohang" creationdate="20180320T095210Z">
        <seg>生成该源集的类的目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The directory to generate the resources of this source set into.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180320T095230Z" creationid="haohang" creationdate="20180320T095230Z">
        <seg>生成该源集的资源的目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The directory to generate the test report into.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T061431Z" creationid="haohang" creationdate="20180313T061431Z">
        <seg>生成测试报告的目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The directory to use to cache source dependency information.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T062334Z" creationid="haohang" creationdate="20180313T062334Z">
        <seg>用于缓存源代码的依赖信息的目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The extension of the archive file name.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233326Z" creationid="huanghaohang" creationdate="20171206T233326Z">
        <seg>归档文件名称中的扩展名称部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following diagram shows the relationships between these tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T040027Z" creationid="haohang" creationdate="20180313T040027Z">
        <seg>下图显示了这些任务之间的关系。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following properties can be used to configure the Gradle build environment:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180124T145004Z" creationid="huanghaohang" creationdate="20180124T145004Z">
        <seg>下面的属性可以用于配置 Gradle 构建环境：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following table lists some of the important properties of a source set. You can find more details in the API documentation for &lt;a0&gt;&lt;c1&gt;SourceSet&lt;/c1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180320T095027Z" creationid="haohang" creationdate="20180320T095027Z">
        <seg>下表列出了一些重要的源集属性。你可以在 API 文档中找到更多有关 &lt;a0&gt;&lt;c1&gt;SourceSet&lt;/c1&gt;&lt;/a0&gt; 的详细信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following tutorials introduce some of the basics of Gradle, to help you get started.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T072551Z" creationid="95" creationdate="20170723T072551Z">
        <seg>以下是Gradle的一些基础的教程介绍，来帮助你快速入门。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The full stacktraces are printed out.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180107T011709Z" creationid="huanghaohang" creationdate="20180107T011709Z">
        <seg>打印完整的栈跟踪信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The important thing is that &lt;c0&gt;whenReady&lt;/c0&gt; affects the release task &lt;s1&gt;&lt;e2&gt;before&lt;/e2&gt;&lt;/s1&gt; the release task is executed. This works even when the release task is not the &lt;s3&gt;&lt;e4&gt;primary&lt;/e4&gt;&lt;/s3&gt; task (i.e., the task passed to the &lt;s5&gt;&lt;s6&gt;gradle&lt;/s6&gt;&lt;/s5&gt; command).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T030619Z" creationid="95" creationdate="20170729T030619Z">
        <seg>在这里，很重要的一点是，&lt;c0&gt;whenReady&lt;/c0&gt; 会在发布任务执行&lt;s1&gt;&lt;e2&gt;之前&lt;/e2&gt;&lt;/s1&gt;影响到它。即使这个发布任务不是 &lt;s3&gt;&lt;e4&gt;主要的&lt;/e4&gt;&lt;/s3&gt; （即传给 &lt;s5&gt;&lt;s6&gt;gradle&lt;/s6&gt;&lt;/s5&gt; 命令行的任务），这一点也同样有效。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The log is the main 'UI' of a build tool. If it is too verbose, real warnings and problems are easily hidden by this. On the other hand you need the relevant information for figuring out if things have gone wrong. Gradle defines 6 log levels, as shown in &lt;a0&gt;Table 18.1, “Log levels”&lt;/a0&gt;. There are two Gradle-specific log levels, in addition to the ones you might normally see. Those levels are &lt;s1&gt;&lt;e2&gt;QUIET&lt;/e2&gt;&lt;/s1&gt; and &lt;s3&gt;&lt;e4&gt;LIFECYCLE&lt;/e4&gt;&lt;/s3&gt;. The latter is the default, and is used to report build progress.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T221504Z" creationid="huanghaohang" creationdate="20180105T221504Z">
        <seg>日志是构建工具的主要“UI”。如果日志过于冗长，则真正的警告和问题很容易被隐藏。另一方面，如果出了错，你就需要相关的信息。 Gradle 定义了 6 个日志级别，如&lt;a0&gt;表18.1，“日志级别”&lt;/a0&gt;所示。除了你可能通常都会看到的日志级别之外，还有两个 Gradle 特定的日志级别。这两个级别分别是&lt;s1&gt;&lt;e2&gt;QUIET&lt;/e2&gt;&lt;/s1&gt;和&lt;s3&gt;&lt;e4&gt;LIFECYCLE&lt;/e4&gt;&lt;/s3&gt;。默认使用后面的这个日志级别，用于报告构建进度。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The main purpose of most projects is to build some files that are to be used outside the project. For example, if your project produces a java library, you need to build a jar, and maybe a source jar and some documentation, and publish them somewhere.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170907T154213Z" creationid="95" creationdate="20170905T152539Z">
        <seg>大多数项目的主要目的是构建一些在项目之外使用的文件。例如，如果你的项目是要生成一个Java库，你需要构建出一个jar文件，可能还需要一个源文件jar包，以及文档等，然后把它们发布出去。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The manifest to include in all JAR files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180314T094609Z" creationid="haohang" creationdate="20180314T094609Z">
        <seg>包含在所有 JAR 文件中的清单。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The name and version of the project</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T100452Z" creationid="haohang" creationdate="20180326T100452Z">
        <seg>项目的名称和版本</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The name of the directory to generate distributions into, relative to the build directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T062135Z" creationid="haohang" creationdate="20180313T062135Z">
        <seg>相对于构建目录的目录名称，该目录用于生成分发的文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The name of the directory to generate documentation into, relative to the build directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T062238Z" creationid="haohang" creationdate="20180313T062238Z">
        <seg>相对于构建目录的目录名称，该目录用于生成文档。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The name of the directory to generate libraries into, relative to the build directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T061529Z" creationid="haohang" creationdate="20180313T061529Z">
        <seg>相对于构建目录，生成库的目录的名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The name of the directory to generate reports into, relative to the build directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T061216Z" creationid="haohang" creationdate="20180313T061216Z">
        <seg>相对于构建目录，生成报告的目录的名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The name of the directory to generate test result .xml files into, relative to the build directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T061407Z" creationid="haohang" creationdate="20180313T061350Z">
        <seg>相对于构建目录，生成测试结果.xml 文件的目录名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The name of the directory to generate the test report into, relative to the reports directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T061424Z" creationid="haohang" creationdate="20180313T061410Z">
        <seg>相对于报告目录，生成测试报告的目录的名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The name of the directory to use to cache source dependency information, relative to the build directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T062319Z" creationid="haohang" creationdate="20180313T062319Z">
        <seg>相对于构建目录的目录名称，该目录用于缓存源代码的依赖信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The name of the project directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T132136Z" creationid="huanghaohang" creationdate="20170913T132136Z">
        <seg>项目目录名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The name of the source set, used to identify it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180320T095054Z" creationid="haohang" creationdate="20180320T095054Z">
        <seg>用来确定一个源集的源集名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The output files of the TaskOutputs are included in the file collection.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T150616Z" creationid="huanghaohang" creationdate="20170927T150616Z">
        <seg>TaskOutputs 的输出文件会被包含在文件集合中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The output files of the source set, containing its compiled classes and resources.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180320T095127Z" creationid="haohang" creationdate="20180320T095127Z">
        <seg>源集的输出文件，包含其编译过的类和资源。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The output files of the task are included in the file collection.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T150603Z" creationid="huanghaohang" creationdate="20170927T150603Z">
        <seg>任务的输出文件会被包含在文件集合中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The place to go for help with Gradle is &lt;a0&gt;http://forums.gradle.org&lt;/a0&gt;. The Gradle Forums is the place where you can report problems and ask questions to the Gradle developers and other community members.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T121738Z" creationid="95" creationdate="20170723T121738Z">
        <seg>您可以到Gradle的官方论坛 &lt;a0&gt;http://forums.gradle.org&lt;/a0&gt;来寻求一些帮助。在这里，您可以向Gradle的开发者和其他的社区成员报告您的问题或者是进行提问。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The plugins do a pretty good job of defining the artifacts of a project, so you usually don't need to do anything special to tell Gradle what needs to be published. However, you do need to tell Gradle where to publish the artifacts. You do this by attaching repositories to the &lt;c0&gt;uploadArchives&lt;/c0&gt; task. Here's an example of publishing to a remote Ivy repository:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T050425Z" creationid="huanghaohang" creationdate="20170908T050425Z">
        <seg>插件对定义项目的构件提供了非常好的支持，所以通常无需再做其他事情来告诉Gradle需要发布什么。但是，你需要告诉Gradle发布到哪里。这就需要在&lt;c0&gt;uploadArchives&lt;/c0&gt;任务中添加一个仓库。以下是发布到远程Ivy存储库的示例：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The power of Groovy can be used for more than defining what a task does. For example, you can also use it to dynamically create tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T132702Z" creationid="95" creationdate="20170727T132702Z">
        <seg>Groovy的强大之处，不仅仅是用在定义一个任务做什么的时候。例如，你也可以使用它来动态地创建一些任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The report shows the description of each project, if specified. You can provide a description for a project by setting the &lt;c0&gt;description&lt;/c0&gt; property:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T011401Z" creationid="huanghaohang" creationdate="20170910T011134Z">
        <seg>这个报告显示了每一个项目的描述信息（如果你有配置这个项目的描述信息的话）。你可以通过设置&lt;c0&gt;description&lt;/c0&gt;属性来提供项目的描述信息：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The resources of this source set. Contains only resources, and excludes any &lt;c0&gt;.java&lt;/c0&gt; files found in the resource source directories. Other plugins, such as the Groovy plugin, exclude additional types of files from this collection.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180320T101206Z" creationid="haohang" creationdate="20180320T101206Z">
        <seg>此源集的资源。仅包含资源，并且排除在资源源目录中找到的所有 &lt;c0&gt;.java&lt;/c0&gt; 文件。其他插件（如 Groovy 插件）会从此集合中排除其他类型的文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The results in an XML format that is compatible with the Ant JUnit report task. This format is supported by many other tools, such as CI servers.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T042748Z" creationid="huanghaohang" creationdate="20180406T042748Z">
        <seg>与 Ant Junit report 任务兼容的 XML 格式的结果。许多工具都支持这一格式，比如 CI 服务器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The second layer of Ant is its wealth of Ant tasks and types, like &lt;c0&gt;javac&lt;/c0&gt;, &lt;c1&gt;copy&lt;/c1&gt; or &lt;c2&gt;jar&lt;/c2&gt;. For this layer Gradle provides integration simply by relying on Groovy, and the fantastic &lt;c3&gt;AntBuilder&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171210T152241Z" creationid="huanghaohang" creationdate="20171210T151948Z">
        <seg>Ant 的第二层是它丰富的 Ant 任务和类型，比如&lt;c0&gt;javac&lt;/c0&gt;， &lt;c1&gt;copy&lt;/c1&gt;或&lt;c2&gt;jar&lt;/c2&gt;。对于这一层，Gradle 只依靠 Groovy 和极出色的 &lt;c3&gt;AntBuilder&lt;/c3&gt; 来提供集成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The source directories containing the Groovy source files of this source set. May also contain Java source files for joint compilation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T234839Z" creationid="huanghaohang" creationdate="20180406T234839Z">
        <seg>该源目录包含此源集的 Groovy 源文件。可能还包含用于联合编译的 Java 源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The source directories containing the Java source files of this source set.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180320T100912Z" creationid="haohang" creationdate="20180320T100912Z">
        <seg>该源目录包含了此源集的所有 Java 源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The source directories containing the resources of this source set.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180320T101233Z" creationid="haohang" creationdate="20180320T101233Z">
        <seg>包含此源集资源的源目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The suppleness and richness of Gradle finally allows you to apply common design principles to your build. For example, it is very easy to compose your build from reusable pieces of build logic. Inline stuff where unnecessary indirections would be inappropriate. Don't be forced to tear apart what belongs together (e.g. in your project hierarchy). Thus avoiding smells like shotgun changes or divergent change that turn your build into a maintenance nightmare. At last you can create a well structured, easily maintained, comprehensible build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170722T022659Z" creationid="95" creationdate="20170722T022659Z">
        <seg>Gradle的灵活性和丰富性最终允许您将常见的设计原则应用于您的构建。 例如，通过可重用的构建逻辑来组织构建是非常容易的。 把不必要而没有直接联系的内容内联在一起是不适合的。 不要强制拆分原本一起的东西（例如在你的项目层次结构中）。 因此，避免出现分散式的变化而使您的建设的维护变成噩梦。 最后，您可以创建一个结构良好、易于维护、易于理解的构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The task has an &lt;c0&gt;ignoreFailures&lt;/c0&gt; property to control the behavior when tests fail. Test always executes every test that it detects. It stops the build afterwards if &lt;c1&gt;ignoreFailures&lt;/c1&gt; is false and there are failing tests. The default value of &lt;c2&gt;ignoreFailures&lt;/c2&gt; is false.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180330T062254Z" creationid="haohang" creationdate="20180330T060550Z">
        <seg>该任务有一个 &lt;c0&gt;ignoreFailures&lt;/c0&gt; 属性，用于控制测试失败时的行为。测试任务始终执行它检测到的每个测试，如果 &lt;c1&gt;ignoreFailures&lt;/c1&gt; 值为 false，并且有测试不通过，那它就会停止继续构建。&lt;c2&gt;ignoreFailures&lt;/c2&gt; 的默认值为 false。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The task's &lt;c0&gt;inputs&lt;/c0&gt; property is of type &lt;a1&gt;&lt;c2&gt;TaskInputs&lt;/c2&gt;&lt;/a1&gt;. The task's &lt;c3&gt;outputs&lt;/c3&gt; property is of type &lt;a4&gt;&lt;c5&gt;TaskOutputs&lt;/c5&gt;&lt;/a4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T004312Z" creationid="huanghaohang" creationdate="20170923T004001Z">
        <seg>任务的 &lt;c0&gt;inputs&lt;/c0&gt; 属性是 &lt;a1&gt;&lt;c2&gt;TaskInputs&lt;/c2&gt;&lt;/a1&gt;类型。任务的 &lt;c3&gt;outputs&lt;/c3&gt; 属性是 &lt;a4&gt;&lt;c5&gt;TaskOutputs&lt;/c5&gt;&lt;/a4&gt;类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The tasks which produce the artifacts in configuration &lt;e0&gt;&lt;c1&gt;ConfigurationName&lt;/c1&gt;&lt;/e0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T035904Z" creationid="haohang" creationdate="20180313T035638Z">
        <seg>生成 &lt;e0&gt;&lt;c1&gt;ConfigurationName&lt;/c1&gt;&lt;/e0&gt; 配置里的工件的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The tasks which produce the artifacts in the &lt;c0&gt;archives&lt;/c0&gt; configuration, including &lt;c1&gt;jar&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180312T063339Z" creationid="haohang" creationdate="20180312T063223Z">
        <seg>产生在 &lt;c0&gt;archives&lt;/c0&gt; 中所配置的工件的任务，包括 &lt;c1&gt;jar&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The tasks which the Java plugin adds are regular tasks, exactly the same as if they were declared in the build file. This means you can use any of the mechanisms shown in earlier chapters to customize these tasks. For example, you can set the properties of a task, add behaviour to a task, change the dependencies of a task, or replace a task entirely. In our sample, we will configure the &lt;c0&gt;test&lt;/c0&gt; task, which is of type &lt;a1&gt;&lt;c2&gt;Test&lt;/c2&gt;&lt;/a1&gt;, to add a system property when the tests are executed:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T150104Z" creationid="95" creationdate="20170730T132805Z">
        <seg>Java插件所添加的任务都是一些普通任务，与在构建文件里声明的完全一样。这也就是说，你可以利用前面的章节所说的任何机制来自定义这些任务。比如你可以设置一个任务的属性，给它添加一些行为，修改一个任务的依赖，或者是完全地替换掉一个任务。在下面的例子中，我们会配置一个&lt;a1&gt;&lt;c2&gt;Test&lt;/c2&gt;&lt;/a1&gt;类型的 &lt;c0&gt;test&lt;/c0&gt; 任务，使得当执行测试的时候添加一个系统属性：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The tasks which uploads the artifacts in configuration &lt;e0&gt;&lt;c1&gt;ConfigurationName&lt;/c1&gt;&lt;/e0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T035832Z" creationid="haohang" creationdate="20180313T035832Z">
        <seg>上传 &lt;e0&gt;&lt;c1&gt;ConfigurationName&lt;/c1&gt;&lt;/e0&gt; 配置中的工件的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The test process sets the &lt;c0&gt;org.gradle.test.worker&lt;/c0&gt; system property to a unique identifier for that test process, which you can use, for example, in files names or other resource identifiers.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180330T055511Z" creationid="haohang" creationdate="20180330T055355Z">
        <seg>测试进程程会将 &lt;c0&gt;org.gradle.test.worker&lt;/c0&gt; 系统属性设置为该测试进程的一个唯一标识符，这个标识符可以用于文件名称或其他资源标识符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The test task provides a &lt;a0&gt;&lt;c1&gt;Test.getDebug()&lt;/c1&gt;&lt;/a0&gt; property that can be set to launch to make the JVM wait for a debugger to attach to port 5005 before proceeding with test execution.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180330T062355Z" creationid="haohang" creationdate="20180330T062121Z">
        <seg>test 任务提供了一个 &lt;a0&gt;&lt;c1&gt;Test.getDebug()&lt;/c1&gt;&lt;/a0&gt; 属性，可以设置为启动，使 JVM 在执行测试之前等待调试器连接到它的 5005 端口上。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The user guide (HTML and PDF).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T114522Z" creationid="95" creationdate="20170723T114522Z">
        <seg>用户指南（HTML和PDF两种版本）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The version portion of the archive file name.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233211Z" creationid="huanghaohang" creationdate="20171206T233211Z">
        <seg>归档文件名称中的版本部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are a number of plugins included in the Gradle distribution. These are listed below.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180205T140503Z" creationid="huanghaohang" creationdate="20180205T140503Z">
        <seg>Gradle 发行版中包含一些插件，如下列所示</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are a number of properties which control how the test process is launched. This includes things such as system properties, JVM arguments, and the Java executable to use.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180330T055045Z" creationid="haohang" creationdate="20180330T055045Z">
        <seg>有很多属性可以控制测试进程的启动，包括系统属性、JVM 参数以及要使用的Java 可执行文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are a number of properties which you can set on an archive task. These are listed below in &lt;a0&gt;Table 16.1, “Archive tasks - naming properties”&lt;/a0&gt;. You can, for example, change the name of the archive:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T232523Z" creationid="huanghaohang" creationdate="20171206T232523Z">
        <seg>你可以在归档任务上设置很多属性。它们在&lt;a0&gt;表16.1“存档任务 - 命名属性”&lt;/a0&gt;中有列出。例如，你可以更改归档的名称：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are many tools out there which still use standard output for logging. By default, Gradle redirects standard output to the &lt;c0&gt;QUIET&lt;/c0&gt; log level and standard error to the &lt;c1&gt;ERROR&lt;/c1&gt; level. This behavior is configurable. The project object provides a &lt;a2&gt;&lt;c3&gt;LoggingManager&lt;/c3&gt;&lt;/a2&gt;, which allows you to change the log levels that standard out or error are redirected to when your build script is evaluated.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180107T025316Z" creationid="huanghaohang" creationdate="20180107T024839Z">
        <seg>有许多工具仍然是使用标准输出来记录日志。默认情况下，Gradle 把标准输出重定向到 &lt;c0&gt;QUIET&lt;/c0&gt; 日志级别，把标准错误则重定向到 &lt;c1&gt;ERROR&lt;/c1&gt; 级别上。这种行为是可配置的。Project 对象提供了一个 &lt;a2&gt;&lt;c3&gt;LoggingManager&lt;/c3&gt;&lt;/a2&gt;，它能在评估构建脚本时，让你修改标准输出或错误所重定向的日志级别。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are separate settings for HTTPS.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180130T073520Z" creationid="huanghaohang" creationdate="20180130T073520Z">
        <seg>HTTPS 有单独的设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are several ways to get an Ant reference:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T094706Z" creationid="huanghaohang" creationdate="20180105T094706Z">
        <seg>有几种方法可以获取 Ant 引用：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are several ways to set an Ant property, so that the property can be used by Ant tasks. You can set the property directly on the &lt;c0&gt;AntBuilder&lt;/c0&gt; instance. The Ant properties are also available as a Map which you can change. You can also use the Ant &lt;c1&gt;property&lt;/c1&gt; task. Below are some examples of how to do this.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T094332Z" creationid="huanghaohang" creationdate="20180105T085231Z">
        <seg>有几种方法来设置一个 Ant 属性，以便该属性可以被 Ant 任务使用。你可以直接在 &lt;c0&gt;AntBuilder&lt;/c0&gt; 实例上设置属性。这些 Ant 属性也可以作为可以更改的 Map 来使用。你也可以使用 Ant &lt;c1&gt;property&lt;/c1&gt; 任务。以下是一些如何做到这一点的例子。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are several ways to set an Ant reference:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T094651Z" creationid="huanghaohang" creationdate="20180105T094651Z">
        <seg>有几种方法可以设置 Ant 引用：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are several ways you can define the dependencies of a task. In &lt;a0&gt;Section 6.5, “Task dependencies”&lt;/a0&gt; you were introduced to defining dependencies using task names. Task names can refer to tasks in the same project as the task, or to tasks in other projects. To refer to a task in another project, you prefix the name of the task with the path of the project it belongs to. Below is an example which adds a dependency from &lt;c1&gt;projectA:taskX&lt;/c1&gt; to &lt;c2&gt;projectB:taskY&lt;/c2&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T130050Z" creationid="huanghaohang" creationdate="20170919T130050Z">
        <seg>定义任务的依赖关系有几种方法。在《&lt;a0&gt;第6.5节，“任务依赖”&lt;/a0&gt;》已经向你介绍了使用任务名称来定义依赖。任务名称可以可以引用与该任务相同项目的任务，或者用于其他项目中的任务。要在另一个项目中引用任务，你需要将任务所属项目的路径作为前缀，加到它的名字中。下面的例子演示了如何添加&lt;c1&gt;projectA:taskX&lt;/c1&gt;对&lt;c2&gt;projectB:taskY&lt;/c2&gt;的依赖：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are two kinds of variables that can be declared in a build script: local variables and extra properties.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T132549Z" creationid="huanghaohang" creationdate="20170913T132549Z">
        <seg>在构建脚本中，可以声明两种变量：局部变量和额外属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are two ordering rules available: "&lt;s0&gt;&lt;e1&gt;must run after&lt;/e1&gt;&lt;/s0&gt;" and "&lt;s2&gt;&lt;e3&gt;should run after&lt;/e3&gt;&lt;/s2&gt;".</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T030747Z" creationid="huanghaohang" creationdate="20170922T030656Z">
        <seg>有两种排序规则可用：“&lt;s0&gt;&lt;e1&gt;必须在之后运行&lt;/e1&gt;&lt;/s0&gt;”和“&lt;s2&gt;&lt;e3&gt;应该在之后运行&lt;/e3&gt;&lt;/s2&gt;”。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are various types of dependencies that you can declare. One such type is an &lt;e0&gt;external dependency&lt;/e0&gt;. This a dependency on some files built outside the current build, and stored in a repository of some kind, such as Maven central, or a corporate Maven or Ivy repository, or a directory in the local file system.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T043125Z" creationid="huanghaohang" creationdate="20170908T043125Z">
        <seg>你可以声明多种类型的依赖。其中一种这样的类型叫&lt;e0&gt;外部依赖&lt;/e0&gt;，它是依赖于在当前构建之外所生成的一些文件，并存储在某种存储库中，例如Maven Central，Maven私服，Ivy存储库，或者是本地文件系统中的某个目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is a common situation, that multiple tasks depend on the existence of a directory. Of course you can deal with this by adding a &lt;c0&gt;mkdir&lt;/c0&gt; to the beginning of those tasks. But this is kind of bloated. There is a better solution (works only if the tasks that need the directory have a &lt;s1&gt;&lt;e2&gt;dependsOn&lt;/e2&gt;&lt;/s1&gt; relationship):</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170917T132357Z" creationid="huanghaohang" creationdate="20170917T132357Z">
        <seg>有一个常见的情况是，有多个任务依赖于某个目录的存在。当然，你可以在这些任务开始时执行&lt;c0&gt;mkdir&lt;/c0&gt;来解决这个问题。但这是一种臃肿的解决方法。更好的解决方案是这样的（仅适用于需要某个目录的这些任务有&lt;s1&gt;&lt;e2&gt;依赖&lt;/e2&gt;&lt;/s1&gt;关系的情况）：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is a daemon log file, which by default is located in the Gradle user home directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180120T025640Z" creationid="huanghaohang" creationdate="20180120T025640Z">
        <seg>守护进程的日志文件默认在 Gradle 用户主目录下。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is a shortcut form for declaring external dependencies, which uses a string of the form &lt;c0&gt;"&lt;e1&gt;&lt;c2&gt;group&lt;/c2&gt;&lt;/e1&gt;:&lt;e3&gt;&lt;c4&gt;name&lt;/c4&gt;&lt;/e3&gt;:&lt;e5&gt;&lt;c6&gt;version&lt;/c6&gt;&lt;/e5&gt;"&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T043854Z" creationid="huanghaohang" creationdate="20170908T043854Z">
        <seg>这里还有一种更加简洁的方式来声明外部依赖，它使用一个&lt;c0&gt;"&lt;e1&gt;&lt;c2&gt;group&lt;/c2&gt;&lt;/e1&gt;:&lt;e3&gt;&lt;c4&gt;name&lt;/c4&gt;&lt;/e3&gt;:&lt;e5&gt;&lt;c6&gt;version&lt;/c6&gt;&lt;/e5&gt;"&lt;/c0&gt;形式的字符串。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is a shorthand way to define a task like our &lt;c0&gt;hello&lt;/c0&gt; task above, which is more concise.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155226Z" creationid="95" creationdate="20170726T155226Z">
        <seg>有一种简单的方法可以定义像上面我们的这类&lt;c0&gt;hello&lt;/c0&gt; 任务，它看起来更简洁。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is also a filter so that uncommon tasks can be hidden. You can toggle the filter via the Filter button. Editing the filter allows you to configure which tasks and projects are shown. Hidden tasks show up in red. Note: newly created tasks will show up by default (versus being hidden by default).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170911T144114Z" creationid="huanghaohang" creationdate="20170911T144114Z">
        <seg>这里还提供了一个过滤器，可以隐藏不常见的任务。你可以通过“过滤器”按钮切换过滤器。编辑过滤器可以配置显示哪些任务和项目。隐藏的任务显示为红色。注意：新创建的任务默认情况下是显示状态（而不是默认隐藏）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is also a stand-alone &lt;a0&gt;&lt;c1&gt;TestReport&lt;/c1&gt;&lt;/a0&gt; task type which can generate the HTML test report from the binary results generated by one or more &lt;c2&gt;Test&lt;/c2&gt; task instances. To use this task type, you need to define a &lt;c3&gt;destinationDir&lt;/c3&gt; and the test results to include in the report. Here is a sample which generates a combined report for the unit tests from subprojects:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T043959Z" creationid="huanghaohang" creationdate="20180406T043549Z">
        <seg>还有一个独立的 &lt;a0&gt;&lt;c1&gt;TestReport&lt;/c1&gt;&lt;/a0&gt; 任务类型，它可以从一个或多个 &lt;c2&gt;Test&lt;/c2&gt; 任务实例生成的二进制结果中生成 HTML 测试报告。要使用此任务类型，你需要定义一个 &lt;c3&gt;destinationDir&lt;/c3&gt; 以及要包含在报告的测试结果。下面是一个从子项目的单元测试中生成一个组合报告的示例：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is an alternative syntax for defining tasks, which you may prefer to use:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T121128Z" creationid="huanghaohang" creationdate="20170919T121128Z">
        <seg>有一种用于定义任务的替代语法，你可能更希望使用：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is another way of configuring a task. It also preserves the context and it is arguably the most readable. It is usually our favorite.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T124601Z" creationid="huanghaohang" creationdate="20170919T124601Z">
        <seg>还有一种配置任务的方式。它也保留了上下文，可以说是可读性最强的。它是我们通常最喜欢的方式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is lots more you can do with Ant in your build scripts. You can find out more in &lt;a0&gt;Chapter 17, &lt;i1&gt;Using Ant from Gradle&lt;/i1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170728T154458Z" creationid="95" creationdate="20170728T153845Z">
        <seg>在构建脚本中您可以利用Ant做更多的事情，更多细节请参阅 &lt;a0&gt;第十七章，&lt;i1&gt;在Gradle中使用Ant&lt;/i1&gt;&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These are flattened and the contents included in the file collection.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T150607Z" creationid="huanghaohang" creationdate="20170927T150553Z">
        <seg>它们会被展开，并且内容包含在文件集合中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These incoming files form the dependencies of the project. Gradle allows you to tell it what the dependencies of your project are, so that it can take care of finding these dependencies, and making them available in your build. The dependencies might need to be downloaded from a remote Maven or Ivy repository, or located in a local directory, or may need to be built by another project in the same multi-project build. We call this process &lt;e0&gt;dependency resolution&lt;/e0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170905T152131Z" creationid="95" creationdate="20170905T151718Z">
        <seg>这些传入的文件构成了这个项目的依赖。Gradle可以让你告诉它你项目的依赖是什么，以便它处理查找这些依赖，以及把它们加入构建。这些依赖可能需要从远程的Maven或Ivy仓库中下载，或者位于本地目录中，或是需要由同一个多项目构建的其他子项目来构建。这个过程我们称之为 &lt;e0&gt;依赖解析&lt;/e0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These outgoing files form the publications of the project. Gradle also takes care of this important work for you. You declare the publications of your project, and Gradle take care of building them and publishing them somewhere. Exactly what "publishing" means depends on what you want to do. You might want to copy the files to a local directory, or upload them to a remote Maven or Ivy repository. Or you might use the files in another project in the same multi-project build. We call this process &lt;e0&gt;publication&lt;/e0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170907T154859Z" creationid="95" creationdate="20170907T154301Z">
        <seg>这些输出文件构成了项目的发布内容。Gradle也会为你处理这个重要的事情。你声明项目的发布内容，Gradle就会负责构建它们并把它们发布到某个地方。“发布”的确切含义取决于你想做什么。你可能想把一些文件拷贝到一个本地的目录，把它们上传到一个远程的Maven或Ivy仓库，或是在同一个多项目构建的另一个子项目中使用这些文件。这个过程，我们称之为&lt;e0&gt;发布&lt;/e0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These plugins add support for various languages which can be compiled for and executed in the JVM.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180205T140551Z" creationid="huanghaohang" creationdate="20180205T140551Z">
        <seg>这些插件添加了让各种语言可以在 JVM 中被编译和执行的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These plugins add support for various languages:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180205T141401Z" creationid="huanghaohang" creationdate="20180205T141401Z">
        <seg>这些插件添加了对各种语言的支持：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These plugins form the basic building blocks which the other plugins are assembled from. They are available for you to use in your build files, and are listed here for completeness. However, be aware that they are not yet considered part of Gradle's public API. As such, these plugins are not documented in the user guide. You might refer to their API documentation to learn more about them.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180215T054221Z" creationid="huanghaohang" creationdate="20180215T054221Z">
        <seg>这些插件构成了基本构建块，其他插件都由此组装而来。它们可供您在构建文件中使用，并在此处完整列出。但是请注意，它们还没有被视为 Gradle 公共 API 的一部分。因此，这些插件都不在用户指南中记录。你可以参考它们的 API 文档来了解更多关于它们的信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These plugins provide help with your software development process.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180207T144043Z" creationid="huanghaohang" creationdate="20180207T144043Z">
        <seg>这些插件为你的软件开发过程提供帮助。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These plugins provide some integration with various runtime technologies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180206T013845Z" creationid="huanghaohang" creationdate="20180206T013845Z">
        <seg>以下这些插件提供了一些与各种运行时技术的集成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These properties are provided by a convention object of type &lt;a0&gt;&lt;c1&gt;GroovySourceSet&lt;/c1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T235032Z" creationid="huanghaohang" creationdate="20180406T235032Z">
        <seg>这些属性由一个 &lt;a0&gt;&lt;c1&gt;GroovySourceSet&lt;/c1&gt;&lt;/a0&gt; 类的约定对象提供。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These properties are provided by convention objects of type &lt;a0&gt;&lt;c1&gt;JavaPluginConvention&lt;/c1&gt;&lt;/a0&gt;, and &lt;a2&gt;&lt;c3&gt;BasePluginConvention&lt;/c3&gt;&lt;/a2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180314T094828Z" creationid="haohang" creationdate="20180314T094720Z">
        <seg>这些属性由 &lt;a0&gt;&lt;c1&gt;JavaPluginConvention&lt;/c1&gt;&lt;/a0&gt; 和&lt;a2&gt;&lt;c3&gt;BasePluginConvention&lt;/c3&gt;&lt;/a2&gt; 这些类型的约定对象提供。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This ability to configure properties of objects to reflect the value of another object's task at all times (i.e. even when it changes) is known as “&lt;s0&gt;&lt;e1&gt;convention mapping&lt;/e1&gt;&lt;/s0&gt;”. It allows Gradle to provide conciseness through convention-over-configuration and sensible defaults yet not require complete reconfiguration if a conventional default needs to be changed. Without this, in the example above, we would have had to reconfigure every object that needs to work with the class files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T032604Z" creationid="huanghaohang" creationdate="20180131T032107Z">
        <seg>这种配置对象属性以随时反映另一个对象任务值（即使它发生变化）的能力被称为“&lt;s0&gt;&lt;e1&gt;约定映射&lt;/e1&gt;&lt;/s0&gt;”。它可以令 Gradle 通过约定优于配置和合理的默认设置来实现简洁的配置，而如果需要修改约定的默认值时，也不需要完全重新配置。如果没有这一点，在上面的例子中，我们就不得不重新配置每个需要使用类文件的对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This adds a &lt;c0&gt;Zip&lt;/c0&gt; archive task with the name &lt;c1&gt;myZip&lt;/c1&gt; which produces ZIP file &lt;c2&gt;zipProject-1.0.zip&lt;/c2&gt;. It is important to distinguish between the name of the archive task and the name of the archive generated by the archive task. The default name for archives can be changed with the &lt;c3&gt;archivesBaseName&lt;/c3&gt; project property. The name of the archive can also be changed at any time later on.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T232307Z" creationid="huanghaohang" creationdate="20171206T231901Z">
        <seg>它增加了一个叫&lt;c1&gt;myZip&lt;/c1&gt;的&lt;c0&gt;Zip&lt;/c0&gt;归档任，生成ZIP文件&lt;c2&gt;zipProject-1.0.zip&lt;/c2&gt;。区分归档任务的名称和归档任务生成的归档名称是很重要的。归档的默认名称可以用&lt;c3&gt;archivesBaseName&lt;/c3&gt;项目属性来修改，也可以在之后的任何时候更改归档文件的名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This also applies the Java plugin to your project. Running &lt;s0&gt;&lt;c1&gt;gradle build&lt;/c1&gt;&lt;/s0&gt; will compile, test and WAR your project. Gradle will look for the source files to include in the WAR file in &lt;c2&gt;src/main/webapp&lt;/c2&gt;. Your compiled classes, and their runtime dependencies are also included in the WAR file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T005149Z" creationid="huanghaohang" creationdate="20170909T004741Z">
        <seg>以上操作也会将Java插件应用到项目中。运行&lt;s0&gt;&lt;c1&gt;gradle build&lt;/c1&gt;&lt;/s0&gt;将对你的项目进行编译，测试和并打成WAR包。 Gradle将查找在&lt;c2&gt;src/main/webapp&lt;/c2&gt;目录中的源文件，并与所编译出来的类文件，及其运行时依赖关系一起包含到WAR文件中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This also applies the War plugin to your project. Running &lt;s0&gt;&lt;c1&gt;gradle jettyRun&lt;/c1&gt;&lt;/s0&gt; will run your web application in an embedded Jetty web container. Running &lt;s2&gt;&lt;c3&gt;gradle jettyRunWar&lt;/c3&gt;&lt;/s2&gt; will build the WAR file, and then run it in an embedded web container.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T005825Z" creationid="huanghaohang" creationdate="20170909T005825Z">
        <seg>以上操作也会将War插件应用到你的项目中。运行&lt;s0&gt;&lt;c1&gt;gradle jettyRun&lt;/c1&gt;&lt;/s0&gt;，将在嵌入式Jetty Web容器中运行你的Web应用程序。运行&lt;s2&gt;&lt;c3&gt;gradle jettyRunWar&lt;/c3&gt;&lt;/s2&gt;将先构建出WAR文件，然后在嵌入式Web容器中运行它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This can also be enabled at invocation time via the &lt;s0&gt;&lt;c1&gt;--debug-jvm&lt;/c1&gt;&lt;/s0&gt; task option.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180330T062427Z" creationid="haohang" creationdate="20180330T062427Z">
        <seg>这也可以在调用时通过 &lt;s0&gt;&lt;c1&gt;--debug-vm&lt;/c1&gt;&lt;/s0&gt; 任务选项进行启用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This chapter aims to serve as an introduction to plugins and Gradle and the role they play. For more information on the inner workings of plugins, see &lt;a0&gt;Chapter 58, &lt;i1&gt;Writing Custom Plugins&lt;/i1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T032653Z" creationid="huanghaohang" creationdate="20180131T032653Z">
        <seg>本章旨在介绍插件和 Gradle 以及它们所扮演的角色。有关插件内部运作的详细信息，请参阅《&lt;a0&gt;第五十八章，&lt;i1&gt;编写自定义插件&lt;/i1&gt;&lt;/a0&gt;》。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This chapter describes a very simple Groovy project. Usually, a real project will require more than this. Because a Groovy project &lt;s0&gt;&lt;e1&gt;is&lt;/e1&gt;&lt;/s0&gt; a Java project, whatever you can do with a Java project, you can also do with a Groovy project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T003349Z" creationid="huanghaohang" creationdate="20170909T003349Z">
        <seg>本章介绍了一个非常简单的Groovy项目。通常情况下，一个真实的项目所需要的不止于此。因为Groovy项目&lt;s0&gt;&lt;e1&gt;也是&lt;/e1&gt;&lt;/s0&gt;一个Java项目，无论你如何使用Java项目，Groovy项目也可以被这样使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This chapter gives some advice for troubleshooting problems and explains how to get help with your problems.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T120955Z" creationid="95" creationdate="20170723T120955Z">
        <seg>本章节给出了一些解决问题的建议，并解释了如何获取帮助。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This chapter introduces some of the Gradle's support for web applications. Gradle provides two plugins for web application development: the War plugin and the Jetty plugin. The War plugin extends the Java plugin to build a WAR file for your project. The Jetty plugin extends the War plugin to allow you to deploy your web application to an embedded Jetty web container.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T004545Z" creationid="huanghaohang" creationdate="20170909T004331Z">
        <seg>本章介绍了Gradle对Web应用程序的相关支持。Gradle提供了两个用于Web应用开发的插件：War和Jetty。 War插件扩展了Java插件，可以用来构建WAR文件。 Jetty插件扩展了War插件，能将Web应用程序部署到嵌入式Jetty Web容器中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This chapter introduces some of the basics of dependency management in Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T130521Z" creationid="95" creationdate="20170803T130521Z">
        <seg>本章主要介绍 Gradle 依赖管理的一些基础知识。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This chapter introduces the basics of the Gradle command-line. You run a build using the &lt;s0&gt;&lt;s1&gt;gradle&lt;/s1&gt;&lt;/s0&gt; command, which you have already seen in action in previous chapters.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T030310Z" creationid="huanghaohang" creationdate="20170909T030310Z">
        <seg>本章介绍了Gradle命令行的基础知识，正如你在前面章节所看到的使用&lt;s0&gt;&lt;s1&gt;gradle&lt;/s1&gt;&lt;/s0&gt;命令来运行构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This chapter is a work in progress.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T004357Z" creationid="huanghaohang" creationdate="20170909T004309Z">
        <seg>本章还在完善中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This chapter is currently a work in progress.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T120352Z" creationid="95" creationdate="20170723T120352Z">
        <seg>本章节目前还在完善中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This chapter looks at some of the details of writing a build script.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170911T150756Z" creationid="huanghaohang" creationdate="20170911T150756Z">
        <seg>这一章着眼于编写构建脚本的一些细节。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This creates a copy task with no default behavior. The task can be configured using its API (see &lt;a0&gt;&lt;c1&gt;Copy&lt;/c1&gt;&lt;/a0&gt;). The following examples show several different ways to achieve the same configuration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T124251Z" creationid="huanghaohang" creationdate="20170919T122246Z">
        <seg>上面的代码创建了一个没有默认行为的复制任务，这个任务可以使用它的API（参见&lt;a0&gt;&lt;c1&gt;Copy&lt;/c1&gt;&lt;/a0&gt;）来配置。下面的示例演示了实现相同配置的几种不同的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This determines how much information to write out stack traces when errors occur. Note: if you specify a stack trace level on either the Command Line or Favorites tab, it will override this stack trace level.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170911T150140Z" creationid="huanghaohang" creationdate="20170911T150140Z">
        <seg>这决定了错误发生出时，有多少信息会写到堆栈跟踪。注意：如果你在命令行或收藏夹选项卡上指定了堆栈跟踪级别，将会覆盖这里的堆栈跟踪级别。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This enables very readable code, especially when using the out of the box tasks provided by the plugins (e.g. &lt;c0&gt;compile&lt;/c0&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T141645Z" creationid="95" creationdate="20170727T141349Z">
        <seg>这使得代码很易于阅读，尤其是当使用插件所提供的任务时（例如 &lt;c0&gt;compile&lt;/c0&gt;）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This feature is helpful if you work with tasks provided by Gradle. It allows you to add &lt;s0&gt;&lt;e1&gt;conditional&lt;/e1&gt;&lt;/s0&gt; execution of the built-in actions of such a task. &lt;s2&gt;[&lt;a3&gt;7&lt;/a3&gt;]&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T085159Z" creationid="huanghaohang" creationdate="20170922T084845Z">
        <seg>如果你使用Gradle提供的任务，那么此功能将非常有用。它允许你向一个任务的内置操作添加执行&lt;s0&gt;&lt;e1&gt;条件&lt;/e1&gt;&lt;/s0&gt;。 &lt;s2&gt;[&lt;a3&gt;7&lt;/a3&gt;]&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This information includes the full task path, the task type, possible commandline options and the description of the given task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T013043Z" creationid="huanghaohang" creationdate="20170910T012852Z">
        <seg>该信息包括完整的任务路径，任务类型，可用的命令行选项以及任务的描述信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is all you need to define a Java project. This will apply the Java plugin to your project, which adds a number of tasks to your project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T012839Z" creationid="95" creationdate="20170730T012607Z">
        <seg>定义一个Java项目只需要这些就够了。它将会向你的项目应用Java插件，从而添加一些任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is equivalent to running &lt;s0&gt;&lt;c1&gt;gradle clean run&lt;/c1&gt;&lt;/s0&gt;. In a multi-project build every subproject can have its own specific default tasks. If a subproject does not specify default tasks, the default tasks of the parent project are used (if defined).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T024222Z" creationid="95" creationdate="20170729T023929Z">
        <seg>这与运行 &lt;s0&gt;&lt;c1&gt;gradle clean run&lt;/c1&gt;&lt;/s0&gt;的结果是一样的。在多项目构建中，每一个子项目都可以有它自己的指定的默认任务。如果一个子项目没有指定默认任务，而父项目定义了的话，那么将会使用父项目的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is similar to the way we would normally configure objects in Java. You have to repeat the context (&lt;c0&gt;myCopy&lt;/c0&gt;) in the configuration statement every time. This is a redundancy and not very nice to read.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T124522Z" creationid="huanghaohang" creationdate="20170919T124322Z">
        <seg>这类似于我们通常在Java中配置对象的方式。你必须在每一次的配置语句重复上下文 （&lt;c0&gt;myCopy&lt;/c0&gt;）。这显得很冗余也不好阅读。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This launching of an extra JVM on every build execution is quite expensive, which is why we highly recommend that you use the Gradle Daemon if you are specifying &lt;c0&gt;org.gradle.java.home&lt;/c0&gt; or &lt;c1&gt;org.gradle.jvmargs&lt;/c1&gt;. See &lt;a2&gt;Chapter 19, &lt;i3&gt;The Gradle Daemon&lt;/i3&gt;&lt;/a2&gt; for more details.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180130T073132Z" creationid="huanghaohang" creationdate="20180130T073132Z">
        <seg>在每次构建执行中都启动一个额外的 JVM 的开销是非常大的，这就是为什么如果你指定了 &lt;c0&gt;org.gradle.java.home&lt;/c0&gt; 或 &lt;c1&gt;org.gradle.jvmargs&lt;/c1&gt;，我们会强烈建议你使用 Gradle Daemon。更多细节请查阅《&lt;a2&gt;第十九章，&lt;i3&gt;Gradle 守护进程&lt;/i3&gt;&lt;/a2&gt;》。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This mechanism has been superseded by 'Test Filtering', described above.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180405T131828Z" creationid="huanghaohang" creationdate="20180405T131828Z">
        <seg>如上所述，这种机制已经被“测试过滤”所取代。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This plugin provides a new DSL to support publishing artifacts to Ivy repositories, which improves on the existing DSL.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180207T144020Z" creationid="huanghaohang" creationdate="20180207T143915Z">
        <seg>这个插件提供了一个新的 DSL，用于支持发布工件到 Ivy 存储库，它改进了现有的 DSL。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This plugin provides a new DSL to support publishing artifacts to Maven repositories, which improves on the existing DSL.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180207T144013Z" creationid="huanghaohang" creationdate="20180207T143930Z">
        <seg>这个插件提供了一个新的 DSL，用于支持发布工件到 Maven 存储库，它改进了现有的 DSL。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This provides you with an alternate way to launch Gradle commands. This is useful if your project requires some extra setup that is done inside another batch file or shell script (such as specifying an init script).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170911T150358Z" creationid="huanghaohang" creationdate="20170911T150358Z">
        <seg>它为你提供了启动Gradle命令的替代方式。如果你的项目需要在另一个批处理文件或 shell 脚本中做一些额外的配置（比如指定一个初始化脚本），这将会非常有用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This report lists summary times and details for both the configuration phase and task execution. The times for configuration and task execution are sorted with the most expensive operations first. The task execution results also indicate if any tasks were skipped (and the reason) or if tasks that were not skipped did no work.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T030945Z" creationid="huanghaohang" creationdate="20170910T030945Z">
        <seg>该报告列出了配置阶段和任务执行的总体时间和详细信息。配置和任务执行的时间会先从大到小排序。任务执行的结果还表明是否有任务被跳过（及跳过原因），或者是否有任务什么都没做却没被跳过。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This task is extremely useful for investigating the dependency resolution, finding out where certain dependencies are coming from and why certain versions are selected. For more information please see &lt;a0&gt;&lt;c1&gt;DependencyInsightReportTask&lt;/c1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T022455Z" creationid="huanghaohang" creationdate="20170910T022209Z">
        <seg>这一任务对于调查依赖解析非常有用，它可以找出某些依赖关系来自于哪，以及为什么选择这些版本。有关更多信息，请参阅&lt;a0&gt;&lt;c1&gt;DependencyInsightReportTask&lt;/c1&gt;&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This user guide, like Gradle itself, is under very active development. Some parts of Gradle aren't documented as completely as they need to be. Some of the content presented won't be entirely clear or will assume that you know more about Gradle than you do. We need your help to improve this user guide. You can find out more about contributing to the documentation at the &lt;a0&gt;Gradle web site&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T165849Z" creationid="95" creationdate="20170721T162658Z">
        <seg>与Gradle一样，本指南也在不断地更新。一些Gradle的内容并未完全进行描述。有些内容并未完整描述，或者是假定了您对Gradle有一定的了解。我们需要您来帮助一起提供本指南。有关如何参与贡献文档的信息，可以在 &lt;a0&gt;Gradle 官方网站&lt;/a0&gt;上找到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This will also apply the Java plugin to the project, if it has not already been applied. The Groovy plugin extends the &lt;c0&gt;compile&lt;/c0&gt; task to look for source files in directory &lt;c1&gt;src/main/groovy&lt;/c1&gt;, and the &lt;c2&gt;compileTest&lt;/c2&gt; task to look for test source files in directory &lt;c3&gt;src/test/groovy&lt;/c3&gt;. The compile tasks use joint compilation for these directories, which means they can contain a mixture of java and groovy source files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T002355Z" creationid="huanghaohang" creationdate="20170909T002355Z">
        <seg>如果还没有应用Java插件，那么Java插件也会被应用到项目中。 Groovy插件分别扩展了&lt;c0&gt;compile&lt;/c0&gt;任务，以在&lt;c1&gt;src/main/groovy&lt;/c1&gt;目录中查找源文件；以及&lt;c2&gt;compileTest&lt;/c2&gt;任务，以在&lt;c3&gt;src/test/groovy&lt;/c3&gt;目录中查找测试源文件。编译任务会把这些目录加到编译中，因此也意味着可以在项目里混合编译java和groovy。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This works for &lt;s0&gt;&lt;e1&gt;any&lt;/e1&gt;&lt;/s0&gt; task. Line 3 of the example is just a shortcut for the &lt;c2&gt;tasks.getByName()&lt;/c2&gt; method. It is important to note that if you pass a closure to the &lt;c3&gt;getByName()&lt;/c3&gt; method, this closure is applied to &lt;s4&gt;&lt;e5&gt;configure&lt;/e5&gt;&lt;/s4&gt; the task, not when the task executes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T124903Z" creationid="huanghaohang" creationdate="20170919T124629Z">
        <seg>这种方式适用于&lt;s0&gt;&lt;e1&gt;任何&lt;/e1&gt;&lt;/s0&gt;的任务。该例子的第3行只是&lt;c2&gt;tasks.getByName()&lt;/c2&gt;方法的快捷写法。特别要注意的是，如果你向&lt;c3&gt;getByName()&lt;/c3&gt;方法传入一个闭包，这个闭包是在&lt;s4&gt;&lt;e5&gt;配置&lt;/e5&gt;&lt;/s4&gt;这个任务的时候应用，而不是任务执行的时候。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To add a dependency, the corresponding task does not need to exist.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T160246Z" creationid="95" creationdate="20170726T160246Z">
        <seg>在添加依赖时，对应的任务不一定要存在。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To build a Groovy project, you use the &lt;e0&gt;Groovy plugin&lt;/e0&gt;. This plugin extends the Java plugin to add Groovy compilation capabilities to your project. Your project can contain Groovy source code, Java source code, or a mix of the two. In every other respect, a Groovy project is identical to a Java project, which we have already seen in &lt;a1&gt;Chapter 7, &lt;i2&gt;Java Quickstart&lt;/i2&gt;&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T001546Z" creationid="huanghaohang" creationdate="20170908T052108Z">
        <seg>要构建一个Groovy项目，你可以使用&lt;e0&gt;Groovy插件&lt;/e0&gt;。此插件继承了Java插件，以便将Groovy的编译功能添加到项目中。你的Groovy项目可以包含Groovy源代码，Java源代码，或者两者都有。在其他各方面，Groovy项目与我们之前在《&lt;a1&gt;第七章，&lt;i2&gt;Java快速入门&lt;/i2&gt;&lt;/a1&gt;》所看到的都是相同的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To build a WAR file, you apply the War plugin to your project:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T004607Z" creationid="huanghaohang" creationdate="20170909T004607Z">
        <seg>要构建一个WAR文件，你需要在你的项目当中应用War插件：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To change the log level for standard out or error during task execution, tasks also provide a &lt;a0&gt;&lt;c1&gt;LoggingManager&lt;/c1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180107T025401Z" creationid="huanghaohang" creationdate="20180107T025401Z">
        <seg>为能在任务执行过程中更改标准输出或错误的日志级别，任务也提供了一个 &lt;a0&gt;&lt;c1&gt;LoggingManager&lt;/c1&gt;&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To configure an existing source set, you simply use one of the above access methods to set the properties of the source set. The properties are described below. Here is an example which configures the main Java and resources directories:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180320T094908Z" creationid="haohang" creationdate="20180320T094745Z">
        <seg>要配置一个现有的源集，你只需要使用上面的其中一种访问方法来设置源集的属性。这些属性将在下文中进行介绍。以下是配置main 的 Java 和资源目录的示例：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To define a multi-project build, you need to create a &lt;e0&gt;settings file&lt;/e0&gt;. The settings file lives in the root directory of the source tree, and specifies which projects to include in the build. It must be called &lt;c1&gt;settings.gradle&lt;/c1&gt;. For this example, we are using a simple hierarchical layout. Here is the corresponding settings file:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T123519Z" creationid="95" creationdate="20170803T123149Z">
        <seg>定义一个多项目构建，需要在源码树的根目录下创建一个&lt;e0&gt;设置文件&lt;/e0&gt;。这个设置文件的名字必须是&lt;c1&gt;settings.gradle&lt;/c1&gt;，它会指定要包含哪些项目。在这个例子中，我们会使用一个简单的层次布局，以下是对应的设置文件：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To define a new source set, you simply reference it in the &lt;c0&gt;sourceSets { }&lt;/c0&gt; block. Here's an example:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T094613Z" creationid="haohang" creationdate="20180326T094530Z">
        <seg>要定义一个新的源集，你只需在 &lt;c0&gt;sourceSets {}&lt;/c0&gt; 块引用它。示例如下：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To define an external dependency, you add it to a dependency configuration:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T043233Z" creationid="huanghaohang" creationdate="20170908T043233Z">
        <seg>要定义外部依赖，你需要把一个依赖添加到依赖配置中：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To find out more about defining and working with dependencies, have a look at &lt;a0&gt;Section 50.4, “How to declare your dependencies”&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T044045Z" creationid="huanghaohang" creationdate="20170908T044045Z">
        <seg>要了解有关定义和使用依赖的更多信息，请查看&lt;a0&gt;第50.4节，“如何声明你的依赖”&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To find out more about defining and working with repositories, have a look at &lt;a0&gt;Section 50.6, “Repositories”&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T050015Z" creationid="huanghaohang" creationdate="20170908T050015Z">
        <seg>要了解有关定义和使用仓库的更多信息，请查看&lt;a0&gt;第50.6节，“仓库”&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To find out more about publication, have a look at &lt;a0&gt;Chapter 51, &lt;i1&gt;Publishing artifacts&lt;/i1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T051110Z" creationid="huanghaohang" creationdate="20170908T051110Z">
        <seg>要了解有关发布的更多信息，请查看《&lt;a0&gt;第五十一章，&lt;i1&gt;发布构件&lt;/i1&gt;&lt;/a0&gt;》。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To import your project into Eclipse, you need to add another plugin to your build file:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T153823Z" creationid="95" creationdate="20170731T153823Z">
        <seg>要想导入项目到Eclipse中，你需要在你的构建文件中添加另一个插件：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To improve responsiveness Gradle caches all compiled scripts by default. This includes all build scripts, initialization scripts, and other scripts. The first time you run a build for a project, Gradle creates a &lt;c0&gt;.gradle&lt;/c0&gt; directory in which it puts the compiled script. The next time you run this build, Gradle uses the compiled script, if the script has not changed since it was compiled. Otherwise the script gets compiled and the new version is stored in the cache. If you run Gradle with the &lt;c1&gt;--recompile-scripts&lt;/c1&gt; option, the cached script is discarded and the script is compiled and stored in the cache. This way you can force Gradle to rebuild the cache.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170918T150603Z" creationid="huanghaohang" creationdate="20170918T150109Z">
        <seg>为了提高响应速度，Gradle默认情况下会缓存所有已编译的脚本，包括所有构建脚本，初始化脚本和其他脚本。当你第一次运行项目构建时，Gradle会创建一个&lt;c0&gt;.gradle&lt;/c0&gt;目录用于存放已编译的脚本。下次运行此构建时，如果脚本上次编译之后没有更改，则Gradle将使用已编译的脚本。否则该脚本会被重新编译，并把新版本存储在缓存中。如果你使用 &lt;c1&gt;--recompile-scripts&lt;/c1&gt;选项来执行Gradle，那么会放弃所缓存的脚本，然后重新编译脚本并将其存在缓存中。通过这种方式，你就可以强制Gradle重新生成缓存。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To make custom tasks available in your build, you can use the &lt;c0&gt;taskdef&lt;/c0&gt; (usually easier) or &lt;c1&gt;typedef&lt;/c1&gt; Ant task, just as you would in a &lt;c2&gt;build.xml&lt;/c2&gt; file. You can then refer to the custom Ant task as you would a built-in Ant task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T083822Z" creationid="huanghaohang" creationdate="20180105T083543Z">
        <seg>要使自定义任务在你的构建中可用，你可以使用 &lt;c0&gt;taskdef&lt;/c0&gt;（通常更容易）或者是&lt;c1&gt;typedef&lt;/c1&gt; Ant 任务，就像在&lt;c2&gt;build.xml&lt;/c2&gt;文件中一样。然后，你可以像引用内置的 Ant 任务一样引用这个自定义 Ant 任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To publish the JAR file, run &lt;s0&gt;&lt;c1&gt;gradle uploadArchives&lt;/c1&gt;&lt;/s0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T153732Z" creationid="95" creationdate="20170731T153732Z">
        <seg>执行 &lt;s0&gt;&lt;c1&gt;gradle uploadArchives&lt;/c1&gt;&lt;/s0&gt;以发布JAR文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To run your web application, you apply the Jetty plugin to your project:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T005544Z" creationid="huanghaohang" creationdate="20170909T005544Z">
        <seg>要运行 web 应用程序，需要将 Jetty 插件应用于项目中：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To specify a "must run after" or "should run after" ordering between 2 tasks, you use the &lt;a0&gt;&lt;c1&gt;Task.mustRunAfter()&lt;/c1&gt;&lt;/a0&gt; and &lt;a2&gt;&lt;c3&gt;Task.shouldRunAfter()&lt;/c3&gt;&lt;/a2&gt; methods. These method accept a task instance, a task name or any other input accepted by &lt;a4&gt;&lt;c5&gt;Task.dependsOn()&lt;/c5&gt;&lt;/a4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T040157Z" creationid="huanghaohang" creationdate="20170922T040157Z">
        <seg>如果想指定两个任务之间的“必须在之后运行”或“应该在之后运行”的排序，可以使用&lt;a0&gt;&lt;c1&gt;Task.mustRunAfter()&lt;/c1&gt;&lt;/a0&gt;和&lt;a2&gt;&lt;c3&gt;Task.shouldRunAfter()&lt;/c3&gt;&lt;/a2&gt;方法。这些方法接受一个任务实例、任务名称或&lt;a4&gt;&lt;c5&gt;Task.dependsOn()&lt;/c5&gt;&lt;/a4&gt;所接受的任何其他输入。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To specify a finalizer task you use the &lt;a0&gt;&lt;c1&gt;Task.finalizedBy()&lt;/c1&gt;&lt;/a0&gt; method. This method accepts a task instance, a task name or any other input accepted by &lt;a2&gt;&lt;c3&gt;Task.dependsOn()&lt;/c3&gt;&lt;/a2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T045153Z" creationid="huanghaohang" creationdate="20170923T044616Z">
        <seg>你可以使用&lt;a0&gt;&lt;c1&gt;Task.finalizedBy()&lt;/c1&gt;&lt;/a0&gt;方法来指定一个析构器任务。这个方法接受一个任务实例，任务名称或&lt;a2&gt;&lt;c3&gt;Task.dependsOn()&lt;/c3&gt;&lt;/a2&gt;所能接受的任何其他输入。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To try this out, create the following build script named &lt;c0&gt;build.gradle&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T144931Z" creationid="95" creationdate="20170724T144931Z">
        <seg>试着创建一个叫 &lt;c0&gt;build.gradle&lt;/c0&gt;的构建脚本，如下所示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To use the &lt;c0&gt;Copy&lt;/c0&gt; task, you must provide a set of source files to copy, and a destination directory to copy the files to. You may also specify how to transform the files as they are copied. You do all this using a &lt;e1&gt;copy spec&lt;/e1&gt;. A copy spec is represented by the &lt;a2&gt;&lt;c3&gt;CopySpec&lt;/c3&gt;&lt;/a2&gt; interface. The &lt;c4&gt;Copy&lt;/c4&gt; task implements this interface. You specify the source files using the &lt;a5&gt;&lt;c6&gt;CopySpec.from()&lt;/c6&gt;&lt;/a5&gt; method. To specify the destination directory, use the &lt;a7&gt;&lt;c8&gt;CopySpec.into()&lt;/c8&gt;&lt;/a7&gt; method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171002T135552Z" creationid="huanghaohang" creationdate="20171002T135552Z">
        <seg>要使用&lt;c0&gt;Copy&lt;/c0&gt;任务，你必须提供一组要复制的源文件，以及复制过去的目标目录。你还可以指定在复制文件时如何转换文件。你可以使用一个&lt;e1&gt;复制规范&lt;/e1&gt;。复制规范通过&lt;a2&gt;&lt;c3&gt;CopySpec&lt;/c3&gt;&lt;/a2&gt;接口来表示。&lt;c4&gt;Copy&lt;/c4&gt;任务实现了这个接口。你可以使用&lt;a5&gt;&lt;c6&gt;CopySpec.from()&lt;/c6&gt;&lt;/a5&gt;方法指定源文件。指定目标目录则是使用&lt;a7&gt;&lt;c8&gt;CopySpec.into()&lt;/c8&gt;&lt;/a7&gt;方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To use the Groovy library that ships with Gradle, declare a &lt;c0&gt;localGroovy()&lt;/c0&gt; dependency. Note that different Gradle versions ship with different Groovy versions; as such, using &lt;c1&gt;localGroovy()&lt;/c1&gt; is less safe then declaring a regular Groovy dependency.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T122854Z" creationid="huanghaohang" creationdate="20180406T122643Z">
        <seg>如果要使用 Gradle 附带的 Groovy 库，请声明一个 &lt;c0&gt;localGroovy()&lt;/c0&gt; 依赖。请注意，不同的 Gradle 版本所附带的 Groovy 版本不同；因此，声明一个固定的 Groovy 依赖要比使用 &lt;c1&gt;localGroovy()&lt;/c1&gt; 更安全一些。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To use the Groovy plugin, include in your build script:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T120702Z" creationid="huanghaohang" creationdate="20180406T120702Z">
        <seg>要使用 Groovy 的插件，请在构建脚本中包含以下内容：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To use the Java plugin, include in your build script:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180218T153434Z" creationid="huanghaohang" creationdate="20180218T153434Z">
        <seg>要使用 Java 插件，请在构建脚本中加入以下内容：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To use the classpath configuration, use the &lt;c0&gt;asPath&lt;/c0&gt; property of the custom configuration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T084314Z" creationid="huanghaohang" creationdate="20180105T084314Z">
        <seg>要使用类路径配置，请使用自定义配置里的&lt;c0&gt;asPath&lt;/c0&gt;属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To use the groovy compilation tasks, you must also declare the Groovy version to use and where to find the Groovy libraries. You do this by adding a dependency to the &lt;c0&gt;groovy&lt;/c0&gt; configuration. The &lt;c1&gt;compile&lt;/c1&gt; configuration inherits this dependency, so the groovy libraries will be included in classpath when compiling Groovy and Java source. For our sample, we will use Groovy 2.2.0 from the public Maven repository:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T002702Z" creationid="huanghaohang" creationdate="20170909T002407Z">
        <seg>要使用groovy编译任务，还必须声明使用的Groovy版本以及可以在哪里找到Groovy库。你可以通过在&lt;c0&gt;groovy&lt;/c0&gt;配置中添加依赖来实现。&lt;c1&gt;compile&lt;/c1&gt;配置会继承于它，因此当编译Groovy和Java源码时，groovy库会被包含在类路径中。以下例子，我们将使用公共Maven仓库中的Groovy 2.2.0版本：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Troubleshooting</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T013414Z" creationid="huanghaohang" creationdate="20170919T013414Z">
        <seg>疑难解答</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Truncated stacktraces are printed. We recommend this over full stacktraces. Groovy full stacktraces are extremely verbose (Due to the underlying dynamic invocation mechanisms. Yet they usually do not contain relevant information for what has gone wrong in &lt;s0&gt;&lt;e1&gt;your&lt;/e1&gt;&lt;/s0&gt; code.)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180107T011830Z" creationid="huanghaohang" creationdate="20180107T003212Z">
        <seg>打印截断的堆栈跟踪。我们推荐使用这一个选项，而不是打印完整的堆栈跟踪信息。Groovy 完整的堆栈跟踪是非常详细的（由于底层的动态调用机制，但它们通常不包含&lt;s0&gt;&lt;e1&gt;你的&lt;/e1&gt;&lt;/s0&gt;代码哪里出错了的相关信息）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tutorial - 'This and That'</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T034010Z" creationid="huanghaohang" creationdate="20180131T034010Z">
        <seg>教程——杂七杂八</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tutorials</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170801T014535Z" creationid="haohang" creationdate="20170801T014535Z">
        <seg>教程</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Type</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T132109Z" creationid="huanghaohang" creationdate="20170913T132109Z">
        <seg>类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unless a task's &lt;c0&gt;groovyClasspath&lt;/c0&gt; is configured explicitly, the Groovy (base) plugin will try to infer it from the task's &lt;c1&gt;classpath&lt;/c1&gt;. This is done as follows:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T132540Z" creationid="huanghaohang" creationdate="20180406T132540Z">
        <seg>除非显式地配置了一个任务的 &lt;c0&gt;groovyClasspath&lt;/c0&gt;，否则 Groovy（基础）插件会尝试从任务的 &lt;c1&gt;classpath&lt;/c1&gt; 推断出它，以如下方式进行：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unpacking</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T013341Z" creationid="huanghaohang" creationdate="20170919T013341Z">
        <seg>解压</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Upload</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180312T063225Z" creationid="haohang" creationdate="20180312T063225Z">
        <seg>Upload</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Uploads the artifacts in the &lt;c0&gt;archives&lt;/c0&gt; configuration, including the JAR file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180312T063408Z" creationid="haohang" creationdate="20180312T063258Z">
        <seg>上传在 &lt;c0&gt;archives&lt;/c0&gt; 中所配置的工件，包括 JAR 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Use Custom Gradle Executor - Advanced feature</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170911T150231Z" creationid="huanghaohang" creationdate="20170911T150231Z">
        <seg>使用自定义的 Gradle 执行器  - 高级功能</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Used by tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T053718Z" creationid="haohang" creationdate="20180313T053718Z">
        <seg>在哪些任务中使用</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Used for</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T221516Z" creationid="huanghaohang" creationdate="20180105T221516Z">
        <seg>用于</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using Ant Tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T031856Z" creationid="huanghaohang" creationdate="20170927T031856Z">
        <seg>使用 Ant 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using Ant from Gradle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180314T015150Z" creationid="huanghaohang" creationdate="20180314T015150Z">
        <seg>从 Gradle 中调用 Ant</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using Ant tasks and types in your build</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180314T015159Z" creationid="huanghaohang" creationdate="20180314T015159Z">
        <seg>在构建中使用 Ant 任务和类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using Gradle's build-by-convention support for Groovy projects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T080954Z" creationid="95" creationdate="20170723T080954Z">
        <seg>使用Gradle对于Groovy项目的基于约定的构建的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using Gradle's build-by-convention support for Web applications.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T081041Z" creationid="95" creationdate="20170723T081029Z">
        <seg>使用Gradle对于Web应用的基于约定的构建的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using methods</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T031916Z" creationid="huanghaohang" creationdate="20170927T031916Z">
        <seg>使用方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using the &lt;c0&gt;Sync&lt;/c0&gt; task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180218T093108Z" creationid="huanghaohang" creationdate="20180218T093108Z">
        <seg>使用 &lt;c0&gt;Sync&lt;/c0&gt; 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using the Gradle Command-Line</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233848Z" creationid="huanghaohang" creationdate="20171206T233848Z">
        <seg>使用 Gradle 命令行</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using the Gradle Graphical User Interface</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T234008Z" creationid="huanghaohang" creationdate="20171206T234008Z">
        <seg>使用 Gradle 图形用户界面</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using the contents of an archive as a file tree</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180218T093039Z" creationid="huanghaohang" creationdate="20180218T093039Z">
        <seg>使用归档的内容作为文件树</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using this method is a useful way to convert some user provided value into an absolute &lt;c0&gt;File&lt;/c0&gt;. It is preferable to using &lt;c1&gt;new File(somePath)&lt;/c1&gt;, as &lt;c2&gt;file()&lt;/c2&gt; always evaluates the supplied path relative to the project directory, which is fixed, rather than the current working directory, which can change depending on how the user runs Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T130135Z" creationid="huanghaohang" creationdate="20170923T125743Z">
        <seg>这是把一些用户提供的值转换为一个相对路径的&lt;c0&gt;File&lt;/c0&gt;对象的有用方法。由于&lt;c2&gt;file()&lt;/c2&gt;方法总是去计算所提供的路径相对于项目目录的路径，最好是使用&lt;c1&gt;new File(somePath)&lt;/c1&gt;，因为它是一个固定的路径，而不是会因为用户运行Gradle的具体工作目录而改变的当前目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usually the JAR file needs to be published somewhere. To do this, you need to tell Gradle where to publish the JAR file. In Gradle, artifacts such as JAR files are published to repositories. In our sample, we will publish to a local directory. You can also publish to a remote location, or multiple locations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T153654Z" creationid="95" creationdate="20170731T150129Z">
        <seg>通常，JAR文件都需要发布到某个地方。为此，你需要告诉Gradle要把JAR文件发布到哪里。在Gradle里，诸如JAR文件这样的工件会被发布到仓库中。在我们的示例中，将发布到一个本地仓库里。当然，你也可以发布到一个远程的位置，或者是多个位置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usually, a Java project will have some dependencies on external JAR files. To reference these JAR files in the project, you need to tell Gradle where to find them. In Gradle, artifacts such as JAR files, are located in a &lt;e0&gt;repository&lt;/e0&gt;. A repository can be used for fetching the dependencies of a project, or for publishing the artifacts of a project, or both. For this example, we will use the public Maven repository:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T124317Z" creationid="95" creationdate="20170730T124317Z">
        <seg>通常一个Java项目都会依赖一些外部JAR文件。如果想在项目里引用这些JAR文件，你需要告诉Gradle如何找到这们。在Gradle中，像JAR文件这样的工件都存在于 &lt;e0&gt;仓库&lt;/e0&gt;。仓库可以用于获取项目中的依赖，或是发布项目的工件。在下面的例子中，我们将使用公共的Maven仓库：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usually, there is a method with the same name as the property, which appends to the set of files. Again, this method accepts any of the types supported by the &lt;a0&gt;files()&lt;/a0&gt; method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171002T134301Z" creationid="huanghaohang" creationdate="20171002T134106Z">
        <seg>通常情况下，有一个与属性名称相同的方法，可以追加到文件集中。再者，该方法接受&lt;a0&gt;files()&lt;/a0&gt;方法所支持的任何类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Utilize a pool of reusable processes available for compilation and testing. For example, both the Groovy and Scala compilers have a large startup cost. The build daemon could maintain a process with Groovy and/or Scala already loaded.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180109T141925Z" creationid="huanghaohang" creationdate="20180109T141711Z">
        <seg>使用可用于编译和测试的一个可复用过程池。例如，Groovy 和 Scala 的编译器都有很大的启动成本，构建守护进程可以维护已经加载了 Groovy 或 Scala 的进程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Value of the current used JVM</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180314T094323Z" creationid="haohang" creationdate="20180314T094323Z">
        <seg>当前所使用的 JVM 的值</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Various plugins add further standard configurations. You can also define your own custom configurations to use in your build. Please see &lt;a0&gt;Section 50.3, “Dependency configurations”&lt;/a0&gt; for the details of defining and customizing dependency configurations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T042917Z" creationid="huanghaohang" creationdate="20170908T042917Z">
        <seg>各种插件添加了更多的标准配置。你也可以定义一些自定义配置以在构建中使用。有关定义和定制依赖配置的详细内容，请参见&lt;a0&gt;第50.3节，“依赖配置”&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Version 2.0</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072300Z" creationid="haohang" creationdate="20170720T072300Z">
        <seg>版本 2.0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Very powerful dependency management (based on Apache Ivy).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T135756Z" creationid="95" creationdate="20170721T135756Z">
        <seg>（基于Apache Ivy的）非常强大的依赖管理。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Very powerful support for multi-project builds.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T135728Z" creationid="95" creationdate="20170721T135728Z">
        <seg>非常强大的多项目构建支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Very roughly, dependency management is made up of two pieces. Firstly, Gradle needs to know about the things that your project needs to build or run, in order to find them. We call these incoming files the &lt;e0&gt;dependencies&lt;/e0&gt; of the project. Secondly, Gradle needs to build and upload the things that your project produces. We call these outgoing files the &lt;e1&gt;publications&lt;/e1&gt; of the project. Let's look at these two pieces in more detail:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170905T145223Z" creationid="95" creationdate="20170803T130530Z">
        <seg>通俗来讲，依赖管理由两部分组成。首先，Gradle需要知道构建或运行你的项目所需要的东西，才能找到它们。 我们把这些传入的文件称为这个项目的 &lt;e0&gt;依赖&lt;/e0&gt;。其次，Gradle需要构建并且上传你的项目所产生的东西，我们把这些输出的文件称为项目的 &lt;e1&gt;发布&lt;/e1&gt;。下面详细介绍这两部分：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>WARNING</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T221525Z" creationid="huanghaohang" creationdate="20180105T221525Z">
        <seg>WARNING</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Warning messages</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T221526Z" creationid="huanghaohang" creationdate="20180105T221526Z">
        <seg>警告消息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We also add a distribution, that gets shipped to the client:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T125649Z" creationid="95" creationdate="20170803T125649Z">
        <seg>在下面的例子中，我们创建了一个分发，来发送给客户端：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We came up with several use cases where the daemon is very useful. For some workflows, the user invokes Gradle many times to execute a small number of relatively quick tasks. For example:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180108T133507Z" creationid="huanghaohang" creationdate="20180108T133332Z">
        <seg>我们想到了几个关于守护进程非常有用的情形。对于一些工作流，用户会多次调用 Gradle 以执行少量相对较快的任务。例如：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We can change this property simply by giving it a new value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T022540Z" creationid="huanghaohang" creationdate="20180131T022540Z">
        <seg>我们可以简单地通过给它一个新的值来更改此属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We can change where the class files are written via the source set.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T024626Z" creationid="huanghaohang" creationdate="20180131T024528Z">
        <seg>我们可以通过这个源文件集来修改类文件的写入位置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We could also have used the following syntax:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180130T093144Z" creationid="huanghaohang" creationdate="20180130T093144Z">
        <seg>我们还可以使用下面的语法：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We could not find a good overview for all possible proxy settings. One place to look are the constants in a file from the Ant project. Here a &lt;a0&gt; link &lt;/a0&gt; to the Subversion view. The other is a &lt;a1&gt; Networking Properties page &lt;/a1&gt; from the JDK docs. If anyone knows a better overview, please let us know via the mailing list.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180130T080547Z" creationid="huanghaohang" creationdate="20180130T080547Z">
        <seg>我们无法很好地概述所有可能的代理服务器设置。其中可以去查看的地方一个是 Ant 项目的一个文件中的常量，这里有一个到 Subversion 视图的&lt;a0&gt;链接&lt;/a0&gt;；另一个是 JDK 文档里的&lt;a1&gt;网络属性页面&lt;/a1&gt;。如果有人知道更好的概述，请通过邮件列表告诉我们。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We fork a separate daemon process if the jvm arguments for the build are sufficiently different. For example we will not fork a new daemon if a some system property has changed. However if -Xmx memory setting change or some fundamental immutable system property changes (e.g. file.encoding) then new daemon will be forked.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180116T143144Z" creationid="huanghaohang" creationdate="20180116T143144Z">
        <seg>如果构建的 jvm 参数足够不同，我们也会 fork 一个单独的守护进程。例如，如果某个系统属性发生改变，我们不会 fork 一个新的守护进程。但是如果 -Xmx 内存设置或者一些基本的不可变的系统属性修改了（例如 file.encoding），那么就会 fork 新的守护进程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We fork a separate daemon process per java home. So even if there is some idle daemon waiting for build requests but you happen to run build with a different java home then a brand new daemon will be forked.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180116T141927Z" creationid="huanghaohang" creationdate="20180116T141927Z">
        <seg>我们为每一个 java home 分配一个独立的守护进程。所以，即使有一些闲置的守护进程正在等待构建请求，但你碰巧用另一个 java home 运行构建，那么还是会 fork 一个全新的守护进程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We have already seen how to define tasks using a keyword style in &lt;a0&gt;Chapter 6, &lt;i1&gt;Build Script Basics&lt;/i1&gt;&lt;/a0&gt;. There are a few variations on this style, which you may need to use in certain situations. For example, the keyword style does not work in expressions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T120825Z" creationid="huanghaohang" creationdate="20170919T120825Z">
        <seg>在《&lt;a0&gt;第六章，&lt;i1&gt;构建脚本基础&lt;/i1&gt;&lt;/a0&gt; 》中我们已经看到如何通过关键字这种风格来定义任务。这种风格有一些变式，可能你在一些具体的场景中会需要。例如，在表达式中不能使用这种关键字风格。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We have in-depth coverage with many examples about the Java plugin, dependency management and multi-project builds in later chapters. In this chapter we want to give you an initial idea of how to use the Java plugin to build a Java project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T012344Z" creationid="95" creationdate="20170730T012101Z">
        <seg>在后续章节中，我们有深入介绍与Java插件，依赖管理以及多项目构建的相关的许多例子。在本章里，我们还是先了解一下使用Java插件来构建Java项目的基本用法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We plan to improve the ways of managing / pooling the daemons in future.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180116T143752Z" creationid="huanghaohang" creationdate="20180116T143752Z">
        <seg>我们计划在将来改进管理及合并守护进程的方式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We saw in the example above that the Java plugins adds a task named &lt;c0&gt;compileJava&lt;/c0&gt; that has a property named &lt;c1&gt;destinationDir&lt;/c1&gt; (that configures where the compiled Java source should be placed). The Java plugin defaults this property to point to &lt;c2&gt;build/classes/main&lt;/c2&gt; in the project directory. This is an example of convention-over-configuration via a &lt;s3&gt;&lt;e4&gt;reasonable default&lt;/e4&gt;&lt;/s3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T022533Z" creationid="huanghaohang" creationdate="20180131T022533Z">
        <seg>在上面的示例中我们看到，Java 插件添加了一个名为 &lt;c0&gt;compileJava&lt;/c0&gt; 的任务，这个任务有一个名为 &lt;c1&gt;destinationDir&lt;/c1&gt; 的属性（即配置编译后的 Java 代码存放的地方）。Java 插件默认设置这个属性指向项目目录中的 &lt;c2&gt;build/classes/main&lt;/c2&gt;。这就是一个&lt;s3&gt;&lt;e4&gt;合理的默认值&lt;/e4&gt;&lt;/s3&gt;的约定优于配置的例子。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We think the advantages of an internal DSL (based on a dynamic language) over XML are tremendous in case of &lt;s0&gt;&lt;e1&gt;build scripts&lt;/e1&gt;&lt;/s0&gt;. There are a couple of dynamic languages out there. Why Groovy? The answer lies in the context Gradle is operating in. Although Gradle is a general purpose build tool at its core, its main focus are Java projects. In such projects obviously the team members know Java. We think a build should be as transparent as possible to &lt;s2&gt;&lt;e3&gt;all&lt;/e3&gt;&lt;/s2&gt; team members.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T070852Z" creationid="95" creationdate="20170723T065620Z">
        <seg>我们认为在 &lt;s0&gt;&lt;e1&gt;构建脚本&lt;/e1&gt;&lt;/s0&gt;这种情况中，比起使用XML，（基于一种动态语言的）一种内部DSL会有很大的优点。 那么，有那么多的动态语言，我们为什么要使用Groovy？答案在于Gradle的操作环境。尽管Gradle的核心是成为一个通用的构建工具，但是它的主要重点还是Java项目。这样的项目的团队成员都知道Java。我们认为 ，构建应尽可能对 &lt;s2&gt;&lt;e3&gt;所有&lt;/e3&gt;&lt;/s2&gt; 的团队成员透明。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We would like to introduce Gradle to you, a build system that we think is a quantum leap for build technology in the Java (JVM) world.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T133736Z" creationid="95" creationdate="20170721T133736Z">
        <seg>我们很高兴向大家介绍Gradle，一个我们认为在Java（JVM）世界的构建技术上富有突破性的构建系统。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We would like to introduce Gradle to you, a build system that we think is a quantum leap for build technology in the Java (JVM) world. Gradle provides:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T135513Z" creationid="95" creationdate="20170721T135513Z">
        <seg>我们很高兴向大家介绍Gradle，一个我们认为在Java（JVM）世界的构建技术上富有突破性的构建系统。它提供了：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Web Application Quickstart</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233814Z" creationid="huanghaohang" creationdate="20171206T233814Z">
        <seg>Web 应用程序快速入门</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What does &lt;c0&gt;-q&lt;/c0&gt; do?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T145132Z" creationid="95" creationdate="20170724T145132Z">
        <seg> &lt;c0&gt;-q&lt;/c0&gt; 参数的作用是什么？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What is dependency management?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233627Z" creationid="huanghaohang" creationdate="20171206T233627Z">
        <seg>什么是依赖管理？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What properties are available?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T132614Z" creationid="95" creationdate="20170730T132614Z">
        <seg>有哪些属性可用？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What tasks are available?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T012911Z" creationid="95" creationdate="20170730T012911Z">
        <seg>有哪些任务可用？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What's going on here? This build script defines a single task, called &lt;c0&gt;hello&lt;/c0&gt;, and adds an action to it. When you run &lt;s1&gt;&lt;c2&gt;gradle hello&lt;/c2&gt;&lt;/s1&gt;, Gradle executes the &lt;c3&gt;hello&lt;/c3&gt; task, which in turn executes the action you've provided. The action is simply a closure containing some Groovy code to execute.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T150523Z" creationid="95" creationdate="20170724T145851Z">
        <seg>我们来看看这个脚本做了些什么。它定义了一个叫做 &lt;c0&gt;hello&lt;/c0&gt;的任务，并且给它加了一个动作。当你执行&lt;s1&gt;&lt;c2&gt;gradle hello&lt;/c2&gt;&lt;/s1&gt;的时候，Gradle会执行这个&lt;c3&gt;hello&lt;/c3&gt;任务，而这个任务又会执行您所提供的动作。这个动作只是一个包含了一些要执行的Groovy代码的闭包。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What's going on here? This build script says a few things about the project. Firstly, it states that Hibernate core 3.6.7.Final is required to compile the project's production source. By implication, Hibernate core and its dependencies are also required at runtime. The build script also states that any junit &gt;= 4.0 is required to compile the project's tests. It also tells Gradle to look in the Maven central repository for any dependencies that are required. The following sections go into the details.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T024330Z" creationid="haohang" creationdate="20170908T013315Z">
        <seg>这里做了些什么？这个构建脚本说明了关于项目的一些事情。首先，它指出，Hibernate core 3.6.7.Final是编项目的生产源代码所必需的。同时也暗指了，运行时还需要使用Hibernate core及其依赖。构建脚本还指出，编译项目的测试时需要4.0或以上的junit。它还告诉Gradle在Maven中央存储库中查找所需的任何依赖。以下各节内容会进行详细介绍。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When Gradle executes a script, it compiles the script into a class which implements &lt;a0&gt;&lt;c1&gt;Script&lt;/c1&gt;&lt;/a0&gt;. This means that all of the properties and methods declared by the &lt;c2&gt;Script&lt;/c2&gt; interface are available in your script.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T132523Z" creationid="huanghaohang" creationdate="20170913T132523Z">
        <seg>当Gradle执行脚本时，它会将脚本编译成一个实现&lt;a0&gt;&lt;c1&gt;Script&lt;/c1&gt;&lt;/a0&gt;接口的类。这意味着&lt;c2&gt;Script&lt;/c2&gt;接口声明的所有属性和方法都可以在你的脚本中使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When configured, Gradle will run in incubating parallel mode.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180126T020554Z" creationid="huanghaohang" creationdate="20180126T020554Z">
        <seg>配置之后，Gradle 将在试验性的并行模式下运行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When developing a web application, where the application is assembled many times.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180108T133647Z" creationid="huanghaohang" creationdate="20180108T133647Z">
        <seg>当开发一个 web 应用程序中，应用程序会被组装多次。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When discovering what a build can do, where &lt;s0&gt;&lt;c1&gt;gradle tasks&lt;/c1&gt;&lt;/s0&gt; is executed a number of times.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180108T133741Z" creationid="huanghaohang" creationdate="20180108T133741Z">
        <seg>当要了解一个构建能做什么时，&lt;s0&gt;&lt;c1&gt;gradle tasks&lt;/c1&gt;&lt;/s0&gt; 会被执行多次。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When executed with &lt;c0&gt;--continue&lt;/c0&gt;, Gradle will execute &lt;s1&gt;&lt;e2&gt;every&lt;/e2&gt;&lt;/s1&gt; task to be executed where all of the dependencies for that task completed without failure, instead of stopping as soon as the first failure is encountered. Each of the encountered failures will be reported at the end of the build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T074848Z" creationid="huanghaohang" creationdate="20170909T074105Z">
        <seg>当带上&lt;c0&gt;--continue&lt;/c0&gt;参数执行时，Gradle将执行&lt;s1&gt;&lt;e2&gt;所有&lt;/e2&gt;&lt;/s1&gt;要执行的任务，即该任务的所有依赖任务都会完成执行，而不是一出现错误就停止。所有失败的信息将在构建结束时报告出来。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When run with &lt;c0&gt;--continue&lt;/c0&gt;, it is possible for &lt;c1&gt;B&lt;/c1&gt; to execute in the event that &lt;c2&gt;A&lt;/c2&gt; fails.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T081416Z" creationid="huanghaohang" creationdate="20170922T081416Z">
        <seg>当使用&lt;c0&gt;--continue&lt;/c0&gt;参数运行时，可能会存在&lt;c2&gt;A&lt;/c2&gt;执行失败后&lt;c1&gt;B&lt;/c1&gt;执行了。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When set to &lt;c0&gt;true&lt;/c0&gt; the Gradle daemon is to run the build. For local developer builds this is our favorite property. The developer environment is optimized for speed and feedback so we nearly always run Gradle jobs with the daemon. We don't run CI builds with the daemon (i.e. a long running process) as the CI environment is optimized for consistency and reliability.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180126T012614Z" creationid="huanghaohang" creationdate="20180126T012237Z">
        <seg>当设置为 &lt;c0&gt;true&lt;/c0&gt; 时，Gradle 守护进程会运行构建。对于本地开发者的构建而言，这是我们最喜欢的属性。开发人员的环境在速度和反馈上会优化，因此我们几乎总是使用守护进程运行 Gradle 作业。我们不会使用守护进程（即长时间运行的进程）运行 CI 构建，因为 CI 环境已经进行了优化以保持一致性和可靠性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When using Gradle (or any software package), you can run into problems. You may not understand how to use a particular feature, or you may encounter a defect. Or, you may have a general question about Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T120847Z" creationid="95" creationdate="20170723T120847Z">
        <seg>当使用Gradle（或者是其他软件包）的时候，或多或少都会遇到一些问题。或许是您无法驾驭的新特性，或许是正好遇到了缺陷，也可能是关于Gradle的一些常见问题。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When using JUnit, we scan for both JUnit 3 and 4 test classes. If any of the following criteria match, the class is considered to be a JUnit test class:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180405T155222Z" creationid="huanghaohang" creationdate="20180405T155222Z">
        <seg>当使用 JUnit 时，我们扫描 JUnit 3 和 4 的测试类。如果符合以下任何标准，则该类将被视为 JUnit 测试类：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When using TestNG, we scan for methods annotated with &lt;c0&gt;@Test&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180405T155345Z" creationid="huanghaohang" creationdate="20180405T155345Z">
        <seg>当使用 TestNG 时，我们扫描带有 &lt;c0&gt;@Test&lt;/c0&gt; 注解的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When using test driven development, where the unit tests are executed many times.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180108T133538Z" creationid="huanghaohang" creationdate="20180108T133538Z">
        <seg>当使用测试驱动开发时，单元测试会被执行多次。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you define a new source set, the Java plugin adds some dependency configurations for the source set, as shown in &lt;a0&gt;Table 23.6, “Java plugin - source set dependency configurations”&lt;/a0&gt;. You can use these configurations to define the compile and runtime dependencies of the source set.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T094833Z" creationid="haohang" creationdate="20180326T094833Z">
        <seg>当你定义一个新的源集时，Java 插件会为该源集添加一些依赖配置，如&lt;a0&gt;表 23.6，“Java 插件——源集依赖性配置”&lt;/a0&gt;所示。你可以使用这些配置来定义源集的编译和运行时依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you run the &lt;s0&gt;&lt;s1&gt;gradle&lt;/s1&gt;&lt;/s0&gt; command, it looks for a build file in the current directory. You can use the &lt;c2&gt;-b&lt;/c2&gt; option to select another build file. If you use &lt;c3&gt;-b&lt;/c3&gt; option then &lt;c4&gt;settings.gradle&lt;/c4&gt; file is not used. Example:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T113705Z" creationid="huanghaohang" creationdate="20170909T113421Z">
        <seg>当你运行&lt;s0&gt;&lt;s1&gt;gradle&lt;/s1&gt;&lt;/s0&gt;这个命令时，它会在当前目录中查找一个构建文件。你也可以使用&lt;c2&gt;-b&lt;/c2&gt;选项来选择另一个构建文件。如果你使用&lt;c3&gt;-b&lt;/c3&gt;选项，那么Gradle就不会去用到&lt;c4&gt;settings.gradle&lt;/c4&gt;文件。例：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you specify tasks on the command-line, you don't have to provide the full name of the task. You only need to provide enough of the task name to uniquely identify the task. For example, in the sample build above, you can execute task &lt;c0&gt;dist&lt;/c0&gt; by running &lt;s1&gt;&lt;c2&gt;gradle d&lt;/c2&gt;&lt;/s1&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T112734Z" creationid="huanghaohang" creationdate="20170909T112734Z">
        <seg>在命令行中指定任务时，可以不输入任务的全名，只需要提供可以足够唯一标识任务的任务名。例如，在上面的示例构建中，你可以通过运行&lt;s1&gt;&lt;c2&gt;gradle d&lt;/c2&gt;&lt;/s1&gt;来执行&lt;c0&gt;dist&lt;/c0&gt;任务：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Where to next?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T032009Z" creationid="huanghaohang" creationdate="20170927T032009Z">
        <seg>下一步目标？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Why Groovy?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072502Z" creationid="haohang" creationdate="20170720T072502Z">
        <seg>为什么使用 Groovy?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Why are you using the Java plugin?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T135322Z" creationid="huanghaohang" creationdate="20171126T135322Z">
        <seg>为什么要用 Java 插件？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Wildcard '*' is supported for matching any characters</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180405T130812Z" creationid="huanghaohang" creationdate="20180405T130812Z">
        <seg>通配符 “*” 支持匹配任何字符</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>With the &lt;c0&gt;gradle.properties&lt;/c0&gt; files you can also set system properties. If a property in such a file has the prefix &lt;c1&gt;systemProp.&lt;/c1&gt; the property and its value are added to the system properties, without the prefix. In a multi project build, &lt;c2&gt;systemProp.&lt;/c2&gt; properties set in any project except the root will be ignored. That is, only &lt;c3&gt;systemProp.&lt;/c3&gt; in the root project's &lt;c4&gt;gradle.properties&lt;/c4&gt; file will be set as system properties.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170917T135007Z" creationid="huanghaohang" creationdate="20170917T134626Z">
        <seg>通过&lt;c0&gt;gradle.properties&lt;/c0&gt;文件，你还可以设置一些系统属性。如果这类文件中的属性具有&lt;c1&gt;systemProp.&lt;/c1&gt;前缀，该属性及其值将被添加到系统属性中，而不带此前缀。在多项目建设中，非根目录下的&lt;c2&gt;systemProp.&lt;/c2&gt;属性会被忽略。也就是说，只有在根项目中的&lt;c4&gt;gradle.properties&lt;/c4&gt;文件里的&lt;c3&gt;systemProp.&lt;/c3&gt;属性才会被设置为系统属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>With these rules present it is still possible to execute &lt;c0&gt;taskA&lt;/c0&gt; without &lt;c1&gt;taskB&lt;/c1&gt; and vice-versa.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T031953Z" creationid="huanghaohang" creationdate="20170922T031953Z">
        <seg>目前使用这些规则仍有可能出现&lt;c0&gt;taskA&lt;/c0&gt;执行而&lt;c1&gt;taskB&lt;/c1&gt; 没有执行，或者&lt;c0&gt;taskB&lt;/c0&gt;执行而&lt;c1&gt;taskA&lt;/c1&gt; 没有执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Working With Files</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180218T093001Z" creationid="huanghaohang" creationdate="20180218T093001Z">
        <seg>使用文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Working through problems</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T013426Z" creationid="huanghaohang" creationdate="20170919T013426Z">
        <seg>解决问题</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Works with</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180205T140614Z" creationid="huanghaohang" creationdate="20180205T140614Z">
        <seg>与什么一起使用</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Writing Build Scripts</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T032746Z" creationid="huanghaohang" creationdate="20180131T032746Z">
        <seg>编写构建脚本</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can access Ant types in the same way that you access tasks, using the name of the type as the method name. The method call returns the Ant data type, which you can then use directly in your build script. In the following example, we create an Ant &lt;c0&gt;path&lt;/c0&gt; object, then iterate over the contents of it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171219T091117Z" creationid="huanghaohang" creationdate="20171219T090833Z">
        <seg>你可以像访问任务一样，使用类型名作为方法名来访问 Ant 类型。方法调用将返回 Ant 数据类型，可以让你在构建脚本直接中使用。在下面的例子中，我们创建了一个 Ant &lt;c0&gt;path&lt;/c0&gt; 对象，然后遍历它的内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can access a project property in your build script simply by using its name as you would use a variable. In case this property does not exists, an exception is thrown and the build fails. If your build script relies on optional properties the user might set for example in a gradle.properties file, you need to check for existence before you can access them. You can do this by using the method &lt;c0&gt;hasProperty('propertyName')&lt;/c0&gt; which returns &lt;c1&gt;true&lt;/c1&gt; or &lt;c2&gt;false&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170918T145149Z" creationid="huanghaohang" creationdate="20170918T145149Z">
        <seg>你可以通过属性的名称在构建脚本里访问这个属性，如同使用一个变量一样。如果这个属性不存在，那么就会抛出异常并且构建失败。如果你的构建脚本依赖于一些可选属性，而这些属性用户可能在比如gradle.properties文件中设置，你就需要在访问它们之前先检查它们是否存在。你可以通过使用 &lt;c0&gt;hasProperty('propertyName')&lt;/c0&gt; 方法来进行检查，它会返回&lt;c1&gt;true&lt;/c1&gt; 或 &lt;c2&gt;false&lt;/c2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can access tasks from any project using the task's path using the &lt;c0&gt;tasks.getByPath()&lt;/c0&gt; method. You can call the &lt;c1&gt;getByPath()&lt;/c1&gt; method with a task name, or a relative path, or an absolute path.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T121934Z" creationid="huanghaohang" creationdate="20170919T121934Z">
        <seg>你可以在任何项目中使用&lt;c0&gt;tasks.getByPath()&lt;/c0&gt;方法获取任务路径，并且通过这个路径来访问任务。你也可以用一个任务的名称，相对路径或者是绝对路径作为参数，来调用&lt;c1&gt;getByPath()&lt;/c1&gt;方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can access the source sets of a project using the &lt;c0&gt;sourceSets&lt;/c0&gt; property. This is a container for the project's source sets, of type &lt;a1&gt;&lt;c2&gt;SourceSetContainer&lt;/c2&gt;&lt;/a1&gt;. There is also a &lt;c3&gt;sourceSets { }&lt;/c3&gt; script block, which you can pass a closure to configure the source set container. The source set container works pretty much the same way as other containers, such as &lt;c4&gt;tasks&lt;/c4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180320T094610Z" creationid="haohang" creationdate="20180320T094610Z">
        <seg>你可以使用 &lt;c0&gt;sourceSets&lt;/c0&gt; 属性访问项目的源集。这是项目源集的容器，它的类型是 &lt;a1&gt;&lt;c2&gt;SourceSetContainer&lt;/c2&gt;&lt;/a1&gt;。除此之外，还有一个 &lt;c3&gt;sourceSets{}&lt;/c3&gt; 脚本块，可以传入一个闭包来配置源集容器。源集容器的使用方式与其他的容器几乎一样，例如 &lt;c4&gt;tasks&lt;/c4&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can add a description to your task. This description is for example displayed when executing &lt;s0&gt;&lt;c1&gt;gradle tasks&lt;/c1&gt;&lt;/s0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T082254Z" creationid="huanghaohang" creationdate="20170922T082254Z">
        <seg>你可以向你的任务添加描述。例如在执行&lt;s0&gt;&lt;c1&gt;gradle tasks&lt;/c1&gt;&lt;/s0&gt;时显示该描述。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can add a task which depends on an Ant target:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T084629Z" creationid="huanghaohang" creationdate="20180105T084629Z">
        <seg>你可以添加一个依赖于 Ant 目标的任务：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can add dependencies between projects in the same build, so that, for example, the JAR file of one project is used to compile another project. In the &lt;c0&gt;api&lt;/c0&gt; build file we will add a dependency on the JAR produced by the &lt;c1&gt;shared&lt;/c1&gt; project. Due to this dependency, Gradle will ensure that project &lt;c2&gt;shared&lt;/c2&gt; always gets built before project &lt;c3&gt;api&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T125305Z" creationid="95" creationdate="20170803T125256Z">
        <seg>你可以向同一个构建的项目之间添加依赖关系，这样，某个项目中的 JAR 文件就能用于编译另一个项目了。在 &lt;c0&gt;api&lt;/c0&gt;项目的构建文件里，我们让它依赖 &lt;c1&gt;shared&lt;/c1&gt; 项目所生成的JAR文件。由于这个依赖关系，Gradle会确保 &lt;c2&gt;shared&lt;/c2&gt;项目总是在 &lt;c3&gt;api&lt;/c3&gt;项目之前构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can add your own properties to a task. To add a property named &lt;c0&gt;myProperty&lt;/c0&gt;, set &lt;c1&gt;ext.myProperty&lt;/c1&gt; to an initial value. From that point on, the property can be read and set like a predefined task property.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T141932Z" creationid="95" creationdate="20170727T141635Z">
        <seg>您可以把您自己的属性添加到一个任务中。譬如如果要添加一个 &lt;c0&gt;myProperty&lt;/c0&gt;属性，可以为 &lt;c1&gt;ext.myProperty&lt;/c1&gt;设置一个初始值，然后您就可以像使用预定义的任务属性一样对它进行读取或设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also abbreviate each word in a camel case task name. For example, you can execute task &lt;c0&gt;compileTest&lt;/c0&gt; by running &lt;s1&gt;&lt;c2&gt;gradle compTest&lt;/c2&gt;&lt;/s1&gt; or even &lt;s3&gt;&lt;c4&gt;gradle cT&lt;/c4&gt;&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T113153Z" creationid="huanghaohang" creationdate="20170909T112920Z">
        <seg>你也可以对驼峰命名的任务名称的每一个单词进行缩写。例如，你可以通过运行&lt;s1&gt;&lt;c2&gt;gradle compTest&lt;/c2&gt;&lt;/s1&gt;或&lt;s3&gt;&lt;c4&gt;gradle cT&lt;/c4&gt;&lt;/s3&gt;执行&lt;c0&gt;compileTest&lt;/c0&gt;任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also add properties directly to your project object via the &lt;c0&gt;-P&lt;/c0&gt; command line option. For more exotic use cases you can even pass properties &lt;s1&gt;&lt;e2&gt;directly&lt;/e2&gt;&lt;/s1&gt; to the project object via system and environment properties. For example if you run a build on a continuous integration server where you have no admin rights for the &lt;s3&gt;&lt;e4&gt;machine&lt;/e4&gt;&lt;/s3&gt;. Your build script needs properties which values should not be seen by others. Therefore you can't use the &lt;c5&gt;-P&lt;/c5&gt; option. In this case you can add an environment property in the project administration section (invisible to normal users). &lt;s6&gt;[&lt;a7&gt;6&lt;/a7&gt;]&lt;/s6&gt; If the environment property follows the pattern &lt;c8&gt;ORG_GRADLE_PROJECT_&lt;e9&gt;&lt;c10&gt;propertyName&lt;/c10&gt;&lt;/e9&gt;=somevalue&lt;/c8&gt;, &lt;c11&gt;propertyName&lt;/c11&gt; is added to your project object. We also support the same mechanism for system properties. The only difference is the pattern, which is &lt;c12&gt;org.gradle.project.&lt;e13&gt;&lt;c14&gt;propertyName&lt;/c14&gt;&lt;/e13&gt;&lt;/c12&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170917T134625Z" creationid="huanghaohang" creationdate="20170917T133700Z">
        <seg>您还可以通过&lt;c0&gt;-P&lt;/c0&gt;命令行选项直接添加属性到project对象。在更多的用法中，你甚至可以通过系统和环境属性把属性&lt;s1&gt;&lt;e2&gt;直接&lt;/e2&gt;&lt;/s1&gt;传到project对象。例如，如果你在持续集成服务器上运行构建，但你没有这台&lt;s3&gt;&lt;e4&gt;机器&lt;/e4&gt;&lt;/s3&gt;的管理员权限，而你的构建脚本需要一些属性，这些属性又不能让其他人看到。那么你就不能使用&lt;c5&gt;-P&lt;/c5&gt;选项。在这种情况下，您可以在项目管理部分（对普通用户不可见）添加一个环境属性。 &lt;s6&gt;[&lt;a7&gt;6&lt;/a7&gt;]&lt;/s6&gt;如果这个环境属性遵循&lt;c8&gt;ORG_GRADLE_PROJECT_&lt;e9&gt;&lt;c10&gt;propertyName&lt;/c10&gt;&lt;/e9&gt;=someValue&lt;/c8&gt;的模式， &lt;c11&gt;propertyName&lt;/c11&gt;就会被添加到你的项目对象中。我们也支持系统属性相同的机制。唯一的区别就是模式，它是&lt;c12&gt;org.gradle.project.&lt;e13&gt;&lt;c14&gt;propertyName&lt;/c14&gt;&lt;/e13&gt;&lt;/c12&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also configure arbitrary objects using an external script.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170918T145951Z" creationid="huanghaohang" creationdate="20170918T145951Z">
        <seg>你还可以使用外部脚本配置任意对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also directly add properties to your project objects using properties files. You can place a &lt;c0&gt;gradle.properties&lt;/c0&gt; file in the Gradle user home directory (defaults to &lt;c1&gt;&lt;e2&gt;&lt;c3&gt;USER_HOME&lt;/c3&gt;&lt;/e2&gt;/.gradle&lt;/c1&gt;) or in your project directory. For multi-project builds you can place &lt;c4&gt;gradle.properties&lt;/c4&gt; files in any subproject directory. The properties of the &lt;c5&gt;gradle.properties&lt;/c5&gt; can be accessed via the project object. The properties file in the user's home directory has precedence over property files in the project directories.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170917T133656Z" creationid="huanghaohang" creationdate="20170917T132847Z">
        <seg>你也可以使用属性文件直接向项目对象添加属性。你可以在Gradle用户主目录（默认为&lt;c1&gt;&lt;e2&gt;&lt;c3&gt;USER_HOME&lt;/c3&gt;&lt;/e2&gt;/.gradle&lt;/c1&gt;），或是项目目录中放一个&lt;c0&gt;gradle.properties&lt;/c0&gt;文件。对于多项目构建，&lt;c4&gt;gradle.properties&lt;/c4&gt;文件可以放在任何子项目的目录中。&lt;c5&gt;gradle.properties&lt;/c5&gt;的属性可以通过project对象访问。用户主目录中的属性文件会比项目目录中的属性文件更先被访问到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also have repositories on the local file system. This works for both Maven and Ivy repositories.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T045140Z" creationid="huanghaohang" creationdate="20170908T045119Z">
        <seg>你还可以在本地文件系统上部署一个仓库，它对于Maven和Ivy仓库都支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also hook into Gradle's logging system from within other classes used in the build (classes from the &lt;c0&gt;buildSrc&lt;/c0&gt; directory for example). Simply use an SLF4J logger. You can use this logger the same way as you use the provided logger in the build script.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180107T024328Z" creationid="huanghaohang" creationdate="20180107T012515Z">
        <seg>你也可以通过在构建中使用的其他类（例如 &lt;c0&gt;buildSrc&lt;/c0&gt; 目录中的类） hook 到 Gradle 的日志系统。只需使用一个 SLF4J logger，你可以像使用构建脚本中提供的 logger 一样使用它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also pass the &lt;c0&gt;files()&lt;/c0&gt; method a closure or a &lt;c1&gt;Callable&lt;/c1&gt; instance. This is called when the contents of the collection are queried, and its return value is converted to a set of &lt;c2&gt;File&lt;/c2&gt; instances. The return value can be an object of any of the types supported by the &lt;c3&gt;files()&lt;/c3&gt; method. This is a simple way to 'implement' the &lt;c4&gt;FileCollection&lt;/c4&gt; interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T150346Z" creationid="huanghaohang" creationdate="20170923T132352Z">
        <seg>你也可以向&lt;c0&gt;files()&lt;/c0&gt;方法传一个闭包或&lt;c1&gt;Callable&lt;/c1&gt;实例。它会在查询集合的内容时被调用，并将其返回值转换为一组&lt;c2&gt;File&lt;/c2&gt;实例。返回值可以是&lt;c3&gt;files()&lt;/c3&gt;方法所支持的任何类型的对象。这是一个“实现”&lt;c4&gt;FileCollection&lt;/c4&gt;接口的简单方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also publish to Maven repositories. The syntax is slightly different.&lt;s0&gt;[&lt;a1&gt;4&lt;/a1&gt;]&lt;/s0&gt; Note that you also need to apply the Maven plugin in order to publish to a Maven repository. In this instance, Gradle will generate and upload a &lt;c2&gt;pom.xml&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T050945Z" creationid="huanghaohang" creationdate="20170908T050945Z">
        <seg>当然，你也可以发布到Maven仓库。语法略有不同。&lt;s0&gt;[&lt;a1&gt;4&lt;/a1&gt;]&lt;/s0&gt;请注意，你需要应用Maven插件才能发布到Maven存储库。在这种情况下，Gradle也会生成&lt;c2&gt;pom.xml&lt;/c2&gt;并上传。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also use a configuration closure when you define a task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T124925Z" creationid="huanghaohang" creationdate="20170919T124925Z">
        <seg>你也可以在定义任务的时候使用配置闭包。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also use strings for the task names:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T121037Z" creationid="huanghaohang" creationdate="20170919T121037Z">
        <seg>你还可以使用字符串作为任务名称：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also use the &lt;a0&gt;&lt;c1&gt;Project.copy()&lt;/c1&gt;&lt;/a0&gt; method to copy files. It works the same way as the task with some major limitations though. First, the &lt;c2&gt;copy()&lt;/c2&gt; is not incremental (see &lt;a3&gt;Section 15.9, “Skipping tasks that are up-to-date”&lt;/a3&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171015T094146Z" creationid="huanghaohang" creationdate="20171015T075135Z">
        <seg>你也可以使用&lt;a0&gt;&lt;c1&gt;Project.copy()&lt;/c1&gt;&lt;/a0&gt;方法来复制文件。它的工作方式与具有一些主要限制的任务一样。首先， &lt;c2&gt;copy()&lt;/c2&gt;不是增量的（见《&lt;a3&gt;第15.9节，“跳过最新的任务”&lt;/a3&gt;》）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also use these abbreviations with the &lt;c0&gt;-x&lt;/c0&gt; command-line option.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T113349Z" creationid="huanghaohang" creationdate="20170909T113349Z">
        <seg>在使用&lt;c0&gt;-x&lt;/c0&gt;命令行选项时，依然可以使用这些缩写。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can combine multiple plugins in a single project, so you can use the War and Groovy plugins together to build a Groovy based web application. The appropriate groovy libraries will be added to the WAR file for you.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T005441Z" creationid="huanghaohang" creationdate="20170909T005441Z">
        <seg>你可以在单个project中组合多个插件，因此你可以将War和Groovy插件一起使用，构建一个基于Groovy的web应用程序。相应的groovy库也会被加入到WAR文件中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can configure arbitrary objects in the following very readable way.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170918T145439Z" creationid="huanghaohang" creationdate="20170918T145406Z">
        <seg>你可以使用以下非常易于理解的方式配置任意对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can configure the current project using an external build script. All of the Gradle build language is available in the external script. You can even apply other scripts from the external script.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170918T145326Z" creationid="huanghaohang" creationdate="20170918T145326Z">
        <seg>你可以使用外部构建脚本来配置当前项目。所有的Gradle构建语言都可以在外部脚本中使用，甚至你也可以从外部脚本应用其他脚本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can create stand alone instances of a &lt;c0&gt;Manifest&lt;/c0&gt;. You can use that for example, to share manifest information between jars.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T111601Z" creationid="huanghaohang" creationdate="20180406T111455Z">
        <seg>你可以创建一个独立的 &lt;c0&gt;Manifest&lt;/c0&gt; 实例。例如，可以用它来在 jar 之间共享清单信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can download one of the Gradle distributions from the &lt;a0&gt;Gradle web site&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T114403Z" creationid="95" creationdate="20170723T114319Z">
        <seg>您可以从&lt;a0&gt;Gradle 官方网站&lt;/a0&gt;上下载Gradle的发行包。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can easily write a manifest to disk.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T113331Z" creationid="huanghaohang" creationdate="20180406T113331Z">
        <seg>你可以很轻松地把一个清单写入磁盘。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can exclude a task from being executed using the &lt;c0&gt;-x&lt;/c0&gt; command-line option and providing the name of the task to exclude. Let's try this with the sample build file above.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T031945Z" creationid="huanghaohang" creationdate="20170909T031945Z">
        <seg>你可以使用&lt;c0&gt;-x&lt;/c0&gt;命令行选项加上任务名称来排除某些会被执行的任务。让我们用上面的例子来演示一下。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can execute multiple tasks in a single build by listing each of the tasks on the command-line. For example, the command &lt;s0&gt;&lt;c1&gt;gradle compile test&lt;/c1&gt;&lt;/s0&gt; will execute the &lt;c2&gt;compile&lt;/c2&gt; and &lt;c3&gt;test&lt;/c3&gt; tasks. Gradle will execute the tasks in the order that they are listed on the command-line, and will also execute the dependencies for each task. Each task is executed once only, regardless of how it came to be included in the build: whether it was specified on the command-line, or it a dependency of another task, or both. Let's look at an example.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T030834Z" creationid="huanghaohang" creationdate="20170909T030834Z">
        <seg>你可以通过在命令行中列出每个任务来在单个构建中执行多个任务。例如，&lt;s0&gt;&lt;c1&gt;gradle compile test&lt;/c1&gt;&lt;/s0&gt;命令将执行&lt;c2&gt;compile&lt;/c2&gt;和&lt;c3&gt;test&lt;/c3&gt;任务。 Gradle将按照命令行中的顺序依次执行这些任务以及每一个任务所依赖的其他任务。每个任务只会被执行一次，无论它们是如何被包含在构建中的：即无论是在命令行中指定的，还是另一个任务的依赖，抑或两者都有。来看下面的例子。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can find a list of external plugins on the &lt;a0&gt;wiki&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180218T092913Z" creationid="huanghaohang" creationdate="20180218T092913Z">
        <seg>你可以在&lt;a0&gt;维基&lt;/a0&gt;上找到外部插件列表。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can find out more about the Groovy plugin in &lt;a0&gt;Chapter 24, &lt;i1&gt;The Groovy Plugin&lt;/i1&gt;&lt;/a0&gt;, and you can find more sample Groovy projects in the &lt;c2&gt;samples/groovy&lt;/c2&gt; directory in the Gradle distribution.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T003542Z" creationid="huanghaohang" creationdate="20170909T003402Z">
        <seg>你可以在《&lt;a0&gt;第二十四章， &lt;i1&gt;Groovy插件&lt;/i1&gt;&lt;/a0&gt;》中了解更多关于Groovy 插件的内容，或在Gradle的 &lt;c2&gt;samples/groovy&lt;/c2&gt;目录中找到更多Groovy 项目示例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can find out more about the War plugin in &lt;a0&gt;Chapter 26, &lt;i1&gt;The War Plugin&lt;/i1&gt;&lt;/a0&gt; and the Jetty plugin in &lt;a2&gt;Chapter 28, &lt;i3&gt;The Jetty Plugin&lt;/i3&gt;&lt;/a2&gt;. You can find more sample Java projects in the &lt;c4&gt;samples/webApplication&lt;/c4&gt; directory in the Gradle distribution.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T010714Z" creationid="huanghaohang" creationdate="20170909T010632Z">
        <seg>你可以在《&lt;a0&gt;第二十六章， &lt;i1&gt;War插件&lt;/i1&gt;&lt;/a0&gt;》在《&lt;a2&gt;第二十八章，&lt;i3&gt;Jetty 插件&lt;/i3&gt;&lt;/a2&gt;》中分别了解更多关于War 及Jetty 插件的内容。并且可以在Gradle的发行包中的&lt;c4&gt;samples/webApplication&lt;/c4&gt;目录中找到更多Java 项目示例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can find out more about the settings file in &lt;a0&gt;Chapter 56, &lt;i1&gt;Multi-project Builds&lt;/i1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T123753Z" creationid="95" creationdate="20170803T123550Z">
        <seg>更多的信息可参阅《&lt;a0&gt;第五十六章，&lt;i1&gt;多项目构建&lt;/i1&gt;&lt;/a0&gt;》。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can find out more in &lt;a0&gt;Chapter 8, &lt;i1&gt;Dependency Management Basics&lt;/i1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T124802Z" creationid="95" creationdate="20170730T124802Z">
        <seg>更多的信息请参阅《&lt;a0&gt;第八章，&lt;i1&gt;依赖管理基础&lt;/i1&gt;&lt;/a0&gt;》</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can further customize the archive names:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T232546Z" creationid="huanghaohang" creationdate="20171206T232546Z">
        <seg>你也可以进一步自定义存档名称：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can locate a file relative to the project directory using the &lt;a0&gt;&lt;c1&gt;Project.file()&lt;/c1&gt;&lt;/a0&gt; method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T125024Z" creationid="huanghaohang" creationdate="20170923T125024Z">
        <seg>你可以使用&lt;a0&gt;&lt;c1&gt;Project.file()&lt;/c1&gt;&lt;/a0&gt;方法来找到相对于项目目录的文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can merge other manifests into any &lt;c0&gt;Manifest&lt;/c0&gt; object. The other manifests might be either described by a file path or, like in the example above, by a reference to another &lt;c1&gt;Manifest&lt;/c1&gt; object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T111838Z" creationid="huanghaohang" creationdate="20180406T111614Z">
        <seg>你可以把其他清单合并到任意的一个 &lt;c0&gt;Manifest&lt;/c0&gt; 对象。其他清单可以用文件路径来描述，或者像上面的例子那样，通过引用另一个 &lt;c1&gt;Manifest&lt;/c1&gt; 对象来描述。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can obtain more information in the task listing using the &lt;c0&gt;--all&lt;/c0&gt; option. With this option, the task report lists all tasks in the project, grouped by main task, and the dependencies for each task. Here is an example:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T012254Z" creationid="huanghaohang" creationdate="20170910T012010Z">
        <seg>当然你也可以使用&lt;c0&gt;--all&lt;/c0&gt;选项，来获取更多的任务信息。使用此选项时，任务报告将按主要任务以及每一个任务的依赖进行分组，来列出项目中的所有任务。例子如下：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can pass any object to the &lt;c0&gt;file()&lt;/c0&gt; method, and it will attempt to convert the value to an absolute &lt;c1&gt;File&lt;/c1&gt; object. Usually, you would pass it a &lt;c2&gt;String&lt;/c2&gt; or &lt;c3&gt;File&lt;/c3&gt; instance. If this path is an absolute path, it is used to construct a &lt;c4&gt;File&lt;/c4&gt; instance. Otherwise, a &lt;c5&gt;File&lt;/c5&gt; instance is constructed by prepending the project directory path to the supplied path. The &lt;c6&gt;file()&lt;/c6&gt; method also understands URLs, such as &lt;c7&gt;file:/some/path.xml&lt;/c7&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T125742Z" creationid="huanghaohang" creationdate="20170923T125742Z">
        <seg>你可以把任何对象传给&lt;c0&gt;file()&lt;/c0&gt;方法，它将尝试将该值转换为一个绝对路径的&lt;c1&gt;File&lt;/c1&gt;对象。通常你会传一个&lt;c2&gt;String&lt;/c2&gt;或&lt;c3&gt;File&lt;/c3&gt;实例给它。如果这个路径是一个绝对路径，它会被用来构造一个&lt;c4&gt;文件&lt;/c4&gt;实例。否则，会通过将项目目录的路径添加到所提供的路径的前面来构建&lt;c5&gt;File&lt;/c5&gt;实例。该&lt;c6&gt;file()&lt;/c6&gt;方法也可以识别URL，如&lt;c7&gt;file:/some/path.xml&lt;/c7&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can reorder favorites to your liking and even export them to disk so they can imported by others. If you edit them, you are given options to "Always Show Live Output." This only applies if you have 'Only Show Output When Errors Occur'. This override always forces the output to be shown.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170911T145609Z" creationid="huanghaohang" creationdate="20170911T145609Z">
        <seg>你可以根据自己的喜好对收藏夹进行排序，甚至把它们导出来，以便其他人导入。如果你在编辑它们，选上“始终显示实时输出”，它只有在你选上“当发生错误时才显示输出”时有效。它会始终强制显示输出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can replace much of Gradle's logging UI with your own. You might do this, for example, if you want to customize the UI in some way - to log more or less information, or to change the formatting. You replace the logging using the &lt;a0&gt;&lt;c1&gt;Gradle.useLogger()&lt;/c1&gt;&lt;/a0&gt; method. This is accessible from a build script, or an init script, or via the embedding API. Note that this completely disables Gradle's default output. Below is an example init script which changes how task execution and build completion is logged.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180107T144018Z" creationid="huanghaohang" creationdate="20180107T114453Z">
        <seg>你可以用自己的 logging UI 替换大部分的 Gradle logging UI。你可能会这样，比如，如果你想以某种方式自定义 UI —— 来记录更多或更少的信息，或修改日志格式。你可以通过 &lt;a0&gt;&lt;c1&gt;Gradle.useLogger()&lt;/c1&gt;&lt;/a0&gt; 方法来替换这个 logging。它可以从构建脚本、init 脚本，或者是通过嵌入 API 访问。请注意，它完全禁用 Gradle的默认输出。下面是在 init 脚本中修改如何打印任务执行和构建完成的日志的示例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can see from the output of this example, that the &lt;c0&gt;test&lt;/c0&gt; task is not executed, even though it is a dependency of the &lt;c1&gt;dist&lt;/c1&gt; task. You will also notice that the &lt;c2&gt;test&lt;/c2&gt; task's dependencies, such as &lt;c3&gt;compileTest&lt;/c3&gt; are not executed either. Those dependencies of &lt;c4&gt;test&lt;/c4&gt; that are required by another task, such as &lt;c5&gt;compile&lt;/c5&gt;, are still executed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T073608Z" creationid="huanghaohang" creationdate="20170909T073608Z">
        <seg>你可以本例的输出中看出&lt;c0&gt;test&lt;/c0&gt;任务并不执行，即使它被&lt;c1&gt;dist&lt;/c1&gt;任务所依赖。你也可能同时注意到&lt;c2&gt;test&lt;/c2&gt;任务所依赖的任务，如&lt;c3&gt;compileTest&lt;/c3&gt;也一样没有执行。而&lt;c4&gt;test&lt;/c4&gt;所依赖的同时也是另一个任务所需要的任务，如&lt;c5&gt;compile&lt;/c5&gt;，则仍然执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can select the files to copy using Ant-style include or exclude patterns, or using a closure:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171015T075108Z" creationid="huanghaohang" creationdate="20171015T075034Z">
        <seg>您可以使用 Ant 风格的包含或排除模式，或是闭包，来选择要复制的文件：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can specify that test processes should be restarted after it has executed a certain number of test classes. This can be a useful alternative to giving your test process a very large heap. The &lt;c0&gt;forkEvery&lt;/c0&gt; property specifies the maximum number of test classes to execute in a test process. The default is to execute an unlimited number of tests in each test process.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180330T060549Z" creationid="haohang" creationdate="20180330T060157Z">
        <seg>你可以指定在执行了一定数量的测试类之后，重新启动测试进程。这是一个很有用的替代方案，可以让你的测试进程有非常大的堆内存。&lt;c0&gt;forkEvery&lt;/c0&gt; 属性指定了要在测试进程中执行的最大测试类的数量。默认是在每个测试进程中执行的测试数量不限。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can specify whether or not to execute your tests in parallel. Gradle provides parallel test execution by running multiple test processes concurrently. Each test process executes only a single test at a time, so you generally don't need to do anything special to your tests to take advantage of this. The &lt;c0&gt;maxParallelForks&lt;/c0&gt; property specifies the maximum number of test processes to run at any given time. The default is 1, that is, do not execute the tests in parallel.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180330T055339Z" creationid="haohang" creationdate="20180330T055339Z">
        <seg>你可以指定是否要并行执行测试。Gradle 通过同时运行多个测试进程来提供并行测试的执行。每个测试进程一次只执行一个测试，所以通常不需要为测试做任何特殊的配置就可以利用这一点。&lt;c0&gt;maxParallelForks&lt;/c0&gt; 属性指定了在给定的任何时间可以运行的最大测试进程数。默认值为1，即不并行执行测试。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use &lt;s0&gt;&lt;c1&gt;gradle properties&lt;/c1&gt;&lt;/s0&gt; to list the properties of a project. This will allow you to see the properties added by the Java plugin, and their default values.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T132758Z" creationid="95" creationdate="20170730T132619Z">
        <seg>你可以使用 &lt;s0&gt;&lt;c1&gt;gradle properties&lt;/c1&gt;&lt;/s0&gt;来列出一个项目的属性。这个命令会让你看到Java插件所添加的属性以及它们的默认值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use &lt;s0&gt;&lt;c1&gt;gradle tasks&lt;/c1&gt;&lt;/s0&gt; to list the tasks of a project. This will let you see the tasks that the Java plugin has added to your project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T013040Z" creationid="95" creationdate="20170730T013011Z">
        <seg>你可以使用 &lt;s0&gt;&lt;c1&gt;gradle tasks&lt;/c1&gt;&lt;/s0&gt; 来列出一个项目的任务，这样就会看到Java插件向项目添加了哪些项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use Gradle's Ant integration as a path for migrating your build from Ant to Gradle. For example, you could start by importing your existing Ant build. Then you could move your dependency declarations from the Ant script to your build file. Finally, you could move your tasks across to your build file, or replace them with some of Gradle's plugins. This process can be done in parts over time, and you can have a working Gradle build during the entire process.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171213T140858Z" creationid="huanghaohang" creationdate="20171213T135916Z">
        <seg>你可以将 Gradle 的 Ant 集成作为将你的构建从 Ant 迁移到 Gradle 的一种途径。例如，你可以从导入现有的 Ant 构建开始。然后，你可以将你的依赖声明从 Ant 脚本移到你的构建文件。最后，你可以把你的任务移到你的构建文件中，或者用一些 Gradle 插件来替换它们。这个过程可以在一段时间内完成，并且在这整个过程中你的 Gradle 构建都可以使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use Gradle's dependency management to assemble the classpath to use for the custom tasks. To do this, you need to define a custom configuration for the classpath, then add some dependencies to the configuration. This is described in more detail in &lt;a0&gt;Section 50.4, “How to declare your dependencies”&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T084245Z" creationid="huanghaohang" creationdate="20180105T083842Z">
        <seg>你可以使用 Gradle 的依赖管理来组装用于自定义任务的类路径。为此，你需要为类路径定义一个自定义配置，然后向这个配置添加一些依赖。这在《&lt;a0&gt;第 50.4 节，“如何声明你的依赖关系”&lt;/a0&gt;》中有更详细的描述。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use the &lt;a0&gt;&lt;c1&gt;Copy&lt;/c1&gt;&lt;/a0&gt; task to copy files. The copy task is very flexible, and allows you to, for example, filter the contents of the files as they are copied, and map to the file names.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171002T134516Z" creationid="huanghaohang" creationdate="20171002T134324Z">
        <seg>你可以使用&lt;a0&gt;&lt;c1&gt;Copy&lt;/c1&gt;&lt;/a0&gt;任务来复制文件。复制任务非常灵活，并允许你在复制时过滤文件的内容，以及映射到文件名中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use the &lt;a0&gt;&lt;c1&gt;Project.copySpec()&lt;/c1&gt;&lt;/a0&gt; method to share content between archives.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233427Z" creationid="huanghaohang" creationdate="20171206T233427Z">
        <seg>你可以使用&lt;a0&gt;&lt;c1&gt;Project.copySpec()&lt;/c1&gt;&lt;/a0&gt;方法来共享归档之间的内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use the &lt;c0&gt;ant.importBuild()&lt;/c0&gt; method to import an Ant build into your Gradle project. When you import an Ant build, each Ant target is treated as a Gradle task. This means you can manipulate and execute the Ant targets in exactly the same way as Gradle tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T084604Z" creationid="huanghaohang" creationdate="20180105T084604Z">
        <seg>你可以使用 &lt;c0&gt;ant.importBuild()&lt;/c0&gt; 方法将 Ant 构建导入到你的 Gradle 项目中。导入 Ant 构建时，每个 Ant 目标都被视为是一个 Gradle 任务。这意味着你可以像 Gradle 任务一样操作和执行 Ant 目标。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use the &lt;c0&gt;onlyIf()&lt;/c0&gt; method to attach a predicate to a task. The task's actions are only executed if the predicate evaluates to true. You implement the predicate as a closure. The closure is passed the task as a parameter, and should return true if the task should execute and false if the task should be skipped. The predicate is evaluated just before the task is due to be executed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T084102Z" creationid="huanghaohang" creationdate="20170922T084102Z">
        <seg>你可以使用&lt;c0&gt;onlyIf()&lt;/c0&gt;方法将断言附加到任务中。只有当断言结果为true时，才会执行该任务的操作。你可以用闭包来实现断言。闭包会作为一个参数传给任务，如果任务应该执行，应该返回true，如果任务应该被跳过，则返回false。断言只会在任务执行之前才评估。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use the command line switches shown in &lt;a0&gt;Table 18.2, “Log level command-line options”&lt;/a0&gt; to choose different log levels. In &lt;a1&gt;Table 18.3, “Stacktrace command-line options”&lt;/a1&gt; you find the command line switches which affect stacktrace logging.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T221857Z" creationid="huanghaohang" creationdate="20180105T221741Z">
        <seg>你可以使用&lt;a0&gt;表 18.2，“日志级别的命令行选项”&lt;/a0&gt;中所示的命令行开关来选择不同的日志级别。在&lt;a1&gt;表 18.3，“栈跟踪的命令行选项”&lt;/a1&gt;中，你可以看到影响栈跟踪日志的命令行开关。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use the contents of an archive, such as a ZIP or TAR file, as a file tree. You do this using the &lt;a0&gt;&lt;c1&gt;Project.zipTree()&lt;/c1&gt;&lt;/a0&gt; and &lt;a2&gt;&lt;c3&gt;Project.tarTree()&lt;/c3&gt;&lt;/a2&gt; methods. These methods return a &lt;c4&gt;FileTree&lt;/c4&gt; instance which you can use like any other file tree or file collection. For example, you can use it to expand the archive by copying the contents, or to merge some archives into another.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171002T133502Z" creationid="huanghaohang" creationdate="20171002T133502Z">
        <seg>你可以通过使用&lt;a0&gt;&lt;c1&gt;Project.zipTree()&lt;/c1&gt;&lt;/a0&gt;和&lt;a2&gt;&lt;c3&gt;Project.tarTree()&lt;/c3&gt;&lt;/a2&gt;方法，将档案（如ZIP或TAR文件）的内容用作文件树。这些方法会返回一个 &lt;c4&gt;FileTree&lt;/c4&gt;实例，它可以像其他任何文件树或文件集一样去使用。例如，你可以用它来通过复制内容扩展归档，或者将某些归档合并到另一个归档文件中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You configure the project layout by configuring the appropriate source set. This is discussed in more detail in the following sections. Here is a brief example which changes the main Java and resource source directories.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T053330Z" creationid="haohang" creationdate="20180313T053330Z">
        <seg>你可以通过配置适当的源集来配置项目的布局，这点将在下面的章节中详细讨论。以下是一个简单的例子，展示如何改变 main Java 和资源源目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You execute an Ant task by calling a method on the &lt;c0&gt;AntBuilder&lt;/c0&gt; instance. You use the task name as the method name. For example, you execute the Ant &lt;c1&gt;echo&lt;/c1&gt; task by calling the &lt;c2&gt;ant.echo()&lt;/c2&gt; method. The attributes of the Ant task are passed as Map parameters to the method. Below is an example which executes the &lt;c3&gt;echo&lt;/c3&gt; task. Notice that we can also mix Groovy code and the Ant task markup. This can be extremely powerful.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171216T022441Z" creationid="huanghaohang" creationdate="20171216T022027Z">
        <seg>通过调用 &lt;c0&gt;AntBuilder&lt;/c0&gt; 实例上的一个方法，可以来执行一个 Ant 任务。你可以把任务名称作为方法名称来使用。例如，通过调用 &lt;c2&gt;ant.echo()&lt;/c2&gt; 方法执行 Ant &lt;c1&gt;echo&lt;/c1&gt; 任务。Ant 任务的属性将作为 Map 参数传递给这个方法。下面是执行 &lt;c3&gt;echo&lt;/c3&gt; 任务的一个例子。请注意，我们也可以混合使用 Groovy 代码和 Ant 任务标记，这会很强大。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You may want to start the daemon in &lt;c0&gt;--foreground&lt;/c0&gt; mode to observe how the build is executed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180120T025704Z" creationid="huanghaohang" creationdate="20180120T025704Z">
        <seg>你可能想要以 &lt;c0&gt;--foreground&lt;/c0&gt; 模式启动守护程序，来观察构建是怎么执行的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You might argue why not using Java then as the language for build scripts. We think this is a valid question. It would have the highest transparency for your team and the lowest learning curve. But due to limitations of Java such a build language would not be as nice, expressive and powerful as it could be. &lt;s0&gt;[&lt;a1&gt;1&lt;/a1&gt;]&lt;/s0&gt; Languages like Python, Groovy or Ruby do a much better job here. We have chosen Groovy as it offers by far the greatest transparency for Java people. Its base syntax is the same as Java's as well as its type system, its package structure and other things. Groovy builds a lot on top of that. But on a common ground with Java.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T071727Z" creationid="95" creationdate="20170723T070855Z">
        <seg>您可能会想问，为什么不使用Java来作为构建脚本的语言。这确实是一个很好的问题，它的团队透明度最高，并且学习曲线最低。但是由于Java的局限性，这样的一门构建语言就不会像现在的那样好、丰富而强大。&lt;s0&gt;[&lt;a1&gt;1&lt;/a1&gt;]&lt;/s0&gt; 像Python，Groovy或是Ruby这样的语言能够比它更好。我们之所以选择Groovy，是因为它为Java程序员提供了最大的透明度，它的基本语法，类型系统，包结构等都与Java相同。Groovy的底层是与Java相同的，只是在其之上做了许多工作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You often need to locate the tasks that you have defined in the build file, for example, to configure them or use them for dependencies. There are a number of ways of doing this. Firstly, each task is available as a property of the project, using the task name as the property name:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T121712Z" creationid="huanghaohang" creationdate="20170919T121712Z">
        <seg>我们经常需要在构建文件中查找所定义的任务。例如，为了去配置它们，或是依赖它们。对这样的情况，有很多种方法可以解决。首先，每个任务都可以使用任务名称作为属性名称，当为项目的属性来使用：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You pass nested elements to an Ant task inside a closure. Nested elements are defined in the same way as tasks, by calling a method with the same name as the element we want to define.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171219T090745Z" creationid="huanghaohang" creationdate="20171216T022614Z">
        <seg>你可以在一个闭包里把嵌套的元素传给一个 Ant 任务。嵌套元素的定义方式与任务相同，通过调用与我们要定义的元素同名的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You pass nested text to an Ant task by passing it as a parameter of the task method call. In this example, we pass the message for the &lt;c0&gt;echo&lt;/c0&gt; task as nested text:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171216T022601Z" creationid="huanghaohang" creationdate="20171216T022601Z">
        <seg>你可以把一个嵌套文本，通过作为任务方法调用的参数传给一个 Ant 任务。在此示例中，我们将把作为嵌套文本的消息传给 &lt;c0&gt;echo&lt;/c0&gt; 任务：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You run Gradle via the &lt;s0&gt;&lt;s1&gt;gradle&lt;/s1&gt;&lt;/s0&gt; command. To check if Gradle is properly installed just type &lt;s2&gt;&lt;s3&gt;gradle -v&lt;/s3&gt;&lt;/s2&gt;. The output shows Gradle version and also local environment configuration (groovy and JVM version, etc.). The displayed Gradle version should match the distribution you have downloaded.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T115559Z" creationid="95" creationdate="20170723T115238Z">
        <seg>您可以通过&lt;s0&gt;&lt;s1&gt;gradle&lt;/s1&gt;&lt;/s0&gt;命令来运行Gradle。输入&lt;s2&gt;&lt;s3&gt;gradle -v&lt;/s3&gt;&lt;/s2&gt;就可以检查Gradle是否被正确安装。该命令会输出Gradle的版本，以及本地环境的配置（groovy和JVM版本等等）。所显示的Gradle版本应该与您已经安装的发行包相匹配。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You run a Gradle build using the &lt;s0&gt;&lt;s1&gt;gradle&lt;/s1&gt;&lt;/s0&gt; command. The &lt;s2&gt;&lt;s3&gt;gradle&lt;/s3&gt;&lt;/s2&gt; command looks for a file called &lt;c4&gt;build.gradle&lt;/c4&gt; in the current directory. &lt;s5&gt;[&lt;a6&gt;2&lt;/a6&gt;]&lt;/s5&gt; We call this &lt;c7&gt;build.gradle&lt;/c7&gt; file a &lt;e8&gt;build script&lt;/e8&gt;, although strictly speaking it is a build configuration script, as we will see later. The build script defines a project and its tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T144635Z" creationid="95" creationdate="20170724T143923Z">
        <seg>您可以使用 &lt;s0&gt;&lt;s1&gt;gradle&lt;/s1&gt;&lt;/s0&gt; 命令来运行Gradle构建。 &lt;s2&gt;&lt;s3&gt;gradle&lt;/s3&gt;&lt;/s2&gt;命令会在当前目录下查找一个 &lt;c4&gt;build.gradle&lt;/c4&gt; 文件。 &lt;s5&gt;[&lt;a6&gt;2&lt;/a6&gt;]&lt;/s5&gt; 我们把这个 &lt;c7&gt;build.gradle&lt;/c7&gt; 文件称为是一个 &lt;e8&gt;构建脚本&lt;/e8&gt;，尽管严格上来讲，它只是一个构建的配置脚本，我们将会在后面看到。这个构建脚本定义了一个项目和它的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You should note that the &lt;c0&gt;TestReport&lt;/c0&gt; type combines the results from multiple test tasks and needs to aggregate the results of individual test classes. This means that if a given test class is executed by multiple test tasks, then the test report will include executions of that class, but it can be hard to distinguish individual executions of that class and their output.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T055605Z" creationid="huanghaohang" creationdate="20180406T044011Z">
        <seg>你应该注意的是，&lt;c0&gt;TestReport&lt;/c0&gt; 类型结合了多个测试任务的结果，并需要汇总各个测试类的结果。这意味着如果给定的测试类由多个测试任务执行，那么测试报告将包括该类的执行结果，但很难区分这个类的单独执行和它们的输出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You use a file tree in the same way you use a file collection. You can also visit the contents of the tree, and select a sub-tree using Ant-style patterns:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171002T023622Z" creationid="huanghaohang" creationdate="20171002T023622Z">
        <seg>你可以像使用文件集合的方式一样来使用文件树。你也可以访问文件树的内容，并使用Ant风格的模式选择一个子树：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Your logger can implement any of the listener interfaces listed below. When you register a logger, only the logging for the interfaces that it implements is replaced. Logging for the other interfaces is left untouched. You can find out more about the listener interfaces in &lt;a0&gt;Section 55.6, “Responding to the lifecycle in the build script”&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180107T144453Z" creationid="huanghaohang" creationdate="20180107T144048Z">
        <seg>你的 logger 可以实现下面列出的任何监听器接口。当你注册一个 logger 时，只会替换其实现的接口的日志记录，其他接口的日志记录则保持不变。于侦听器的接口的详细信息，可以参阅《&lt;a0&gt;第 55.6 节，“在构建脚本中响应生命周期”&lt;/a0&gt;》。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[&lt;e0&gt;&lt;c1&gt;projectDir&lt;/c1&gt;&lt;/e0&gt;/src/&lt;e2&gt;&lt;c3&gt;name&lt;/c3&gt;&lt;/e2&gt;/groovy]</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T234758Z" creationid="huanghaohang" creationdate="20180406T234758Z">
        <seg>[&lt;e0&gt;&lt;c1&gt;projectDir&lt;/c1&gt;&lt;/e0&gt;/src/&lt;e2&gt;&lt;c3&gt;name&lt;/c3&gt;&lt;/e2&gt;/groovy]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[&lt;e0&gt;&lt;c1&gt;projectDir&lt;/c1&gt;&lt;/e0&gt;/src/&lt;e2&gt;&lt;c3&gt;name&lt;/c3&gt;&lt;/e2&gt;/java]</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180320T100903Z" creationid="haohang" creationdate="20180320T100903Z">
        <seg>[&lt;e0&gt;&lt;c1&gt;projectDir&lt;/c1&gt;&lt;/e0&gt;/src/&lt;e2&gt;&lt;c3&gt;name&lt;/c3&gt;&lt;/e2&gt;/java]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[&lt;e0&gt;&lt;c1&gt;projectDir&lt;/c1&gt;&lt;/e0&gt;/src/&lt;e2&gt;&lt;c3&gt;name&lt;/c3&gt;&lt;/e2&gt;/resources]</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180320T101214Z" creationid="haohang" creationdate="20180320T101214Z">
        <seg>[&lt;e0&gt;&lt;c1&gt;projectDir&lt;/c1&gt;&lt;/e0&gt;/src/&lt;e2&gt;&lt;c3&gt;name&lt;/c3&gt;&lt;/e2&gt;/resources]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>\--- compile</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T022201Z" creationid="huanghaohang" creationdate="20170910T022201Z">
        <seg>\--- compile</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>\--- org.hamcrest:hamcrest-core:1.3</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T021705Z" creationid="huanghaohang" creationdate="20170910T021705Z">
        <seg>\--- org.hamcrest:hamcrest-core:1.3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>\--- org.hamcrest:hamcrest-core:1.3

------------------------------------------------------------
Project :webapp - The Web application implementation
------------------------------------------------------------

compile
+--- project :api
|    \--- org.codehaus.groovy:groovy-all:2.3.3
\--- commons-io:commons-io:1.2

testCompile
No dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T014138Z" creationid="huanghaohang" creationdate="20170910T014138Z">
        <seg>\--- org.hamcrest:hamcrest-core:1.3

------------------------------------------------------------
Project :webapp - The Web application implementation
------------------------------------------------------------

compile
+--- project :api
|    \--- org.codehaus.groovy:groovy-all:2.3.3
\--- commons-io:commons-io:1.2

testCompile
No dependencies</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>adds build &lt;e0&gt;&lt;c1&gt;ConfigurationName&lt;/c1&gt;&lt;/e0&gt; tasks. Those tasks assemble the artifacts belonging to the specified configuration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180218T022934Z" creationid="huanghaohang" creationdate="20180218T022840Z">
        <seg>添加构建 &lt;e0&gt;&lt;c1&gt;ConfigurationName&lt;/c1&gt;&lt;/e0&gt; 的任务，这些任务组装了属于指定配置的工件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>adds upload &lt;e0&gt;&lt;c1&gt;ConfigurationName&lt;/c1&gt;&lt;/e0&gt; tasks. Those tasks assemble and upload the artifacts belonging to the specified configuration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180218T022928Z" creationid="huanghaohang" creationdate="20180218T022928Z">
        <seg>添加上传 &lt;e0&gt;&lt;c1&gt;ConfigurationName&lt;/c1&gt;&lt;/e0&gt; 的任务，这些任务组装并上传属于指定配置的工件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>allGroovy</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T234841Z" creationid="huanghaohang" creationdate="20180406T234841Z">
        <seg>allGroovy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>allJava</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180320T101234Z" creationid="haohang" creationdate="20180320T101234Z">
        <seg>allJava</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>allSource</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180320T101503Z" creationid="haohang" creationdate="20180320T101503Z">
        <seg>allSource</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>an empty manifest</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180318T010648Z" creationid="huanghaohang" creationdate="20180318T010648Z">
        <seg>一个空的清单</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>announce</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180207T144051Z" creationid="huanghaohang" creationdate="20180207T144051Z">
        <seg>announce</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>announce_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180207T144049Z" creationid="huanghaohang" creationdate="20180207T144049Z">
        <seg>announce_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ant</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T132300Z" creationid="huanghaohang" creationdate="20170913T132300Z">
        <seg>ant</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ant.buildDir = buildDir
ant.properties.buildDir = buildDir
ant.properties[&lt;s0&gt;'buildDir'&lt;/s0&gt;] = buildDir
ant.property(name: &lt;s1&gt;'buildDir'&lt;/s1&gt;, location: buildDir)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T094351Z" creationid="huanghaohang" creationdate="20180105T094351Z">
        <seg>ant.buildDir = buildDir
ant.properties.buildDir = buildDir
ant.properties[&lt;s0&gt;'buildDir'&lt;/s0&gt;] = buildDir
ant.property(name: &lt;s1&gt;'buildDir'&lt;/s1&gt;, location: buildDir)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ant.checkstyle(config: &lt;s3&gt;'checkstyle.xml'&lt;/s3&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T083833Z" creationid="huanghaohang" creationdate="20180105T083833Z">
        <seg>ant.checkstyle(config: &lt;s3&gt;'checkstyle.xml'&lt;/s3&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ant.checksum(file: file, property: &lt;s1&gt;"cs_$file.name"&lt;/s1&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T023458Z" creationid="95" creationdate="20170729T023458Z">
        <seg>ant.checksum(file: file, property: &lt;s1&gt;"cs_$file.name"&lt;/s1&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ant.echo(&lt;s0&gt;'hello from Ant'&lt;/s0&gt;)
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171216T022607Z" creationid="huanghaohang" creationdate="20171216T022607Z">
        <seg>ant.echo(&lt;s0&gt;'hello from Ant'&lt;/s0&gt;)
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ant.echo(message: greeting)
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171216T022450Z" creationid="huanghaohang" creationdate="20171216T022450Z">
        <seg>ant.echo(message: greeting)
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ant.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170728T153837Z" creationid="95" creationdate="20170728T153837Z">
        <seg>ant.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ant.html#N113E5</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180314T015151Z" creationid="huanghaohang" creationdate="20180314T015151Z">
        <seg>ant.html#N113E5</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ant.html#N11485</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180314T015201Z" creationid="huanghaohang" creationdate="20180314T015201Z">
        <seg>ant.html#N11485</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ant.html#N114DF</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180314T015207Z" creationid="huanghaohang" creationdate="20180314T015207Z">
        <seg>ant.html#N114DF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ant.html#N11533</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180314T015214Z" creationid="huanghaohang" creationdate="20180314T015214Z">
        <seg>ant.html#N11533</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ant.importBuild &lt;s0&gt;'build.xml'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T084607Z" creationid="huanghaohang" creationdate="20180105T084607Z">
        <seg>ant.importBuild &lt;s0&gt;'build.xml'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ant.importBuild &lt;s0&gt;'build.xml'&lt;/s0&gt;

hello &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T084806Z" creationid="huanghaohang" creationdate="20180105T084806Z">
        <seg>ant.importBuild &lt;s0&gt;'build.xml'&lt;/s0&gt;

hello &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ant.importBuild &lt;s0&gt;'build.xml'&lt;/s0&gt;

task intro &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T084837Z" creationid="huanghaohang" creationdate="20180105T084837Z">
        <seg>ant.importBuild &lt;s0&gt;'build.xml'&lt;/s0&gt;

task intro &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ant.importBuild &lt;s0&gt;'build.xml'&lt;/s0&gt;

task intro(dependsOn: hello) &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T084637Z" creationid="huanghaohang" creationdate="20180105T084637Z">
        <seg>ant.importBuild &lt;s0&gt;'build.xml'&lt;/s0&gt;

task intro(dependsOn: hello) &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ant.loadfile(srcFile: file, property: file.name)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170728T153801Z" creationid="95" creationdate="20170728T153801Z">
        <seg>ant.loadfile(srcFile: file, property: file.name)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ant.path(id: &lt;s0&gt;'classpath'&lt;/s0&gt;, location: &lt;s1&gt;'libs'&lt;/s1&gt;)
ant.references.classpath = ant.path(location: &lt;s2&gt;'libs'&lt;/s2&gt;)
ant.references[&lt;s3&gt;'classpath'&lt;/s3&gt;] = ant.path(location: &lt;s4&gt;'libs'&lt;/s4&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T094659Z" creationid="huanghaohang" creationdate="20180105T094659Z">
        <seg>ant.path(id: &lt;s0&gt;'classpath'&lt;/s0&gt;, location: &lt;s1&gt;'libs'&lt;/s1&gt;)
ant.references.classpath = ant.path(location: &lt;s2&gt;'libs'&lt;/s2&gt;)
ant.references[&lt;s3&gt;'classpath'&lt;/s3&gt;] = ant.path(location: &lt;s4&gt;'libs'&lt;/s4&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ant.pmd(shortFilenames: &lt;s2&gt;'true'&lt;/s2&gt;, failonruleviolation: &lt;s3&gt;'true'&lt;/s3&gt;, rulesetfiles: file(&lt;s4&gt;'pmd-rules.xml'&lt;/s4&gt;).toURI().toString()) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T084332Z" creationid="huanghaohang" creationdate="20180105T084332Z">
        <seg>ant.pmd(shortFilenames: &lt;s2&gt;'true'&lt;/s2&gt;, failonruleviolation: &lt;s3&gt;'true'&lt;/s3&gt;, rulesetfiles: file(&lt;s4&gt;'pmd-rules.xml'&lt;/s4&gt;).toURI().toString()) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ant.taskdef(name: &lt;s0&gt;'pmd'&lt;/s0&gt;, classname: &lt;s1&gt;'net.sourceforge.pmd.ant.PMDTask'&lt;/s1&gt;, classpath: configurations.pmd.asPath)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T084332Z" creationid="huanghaohang" creationdate="20180105T084332Z">
        <seg>ant.taskdef(name: &lt;s0&gt;'pmd'&lt;/s0&gt;, classname: &lt;s1&gt;'net.sourceforge.pmd.ant.PMDTask'&lt;/s1&gt;, classpath: configurations.pmd.asPath)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ant.taskdef(resource: &lt;s0&gt;'checkstyletask.properties'&lt;/s0&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T083828Z" creationid="huanghaohang" creationdate="20180105T083828Z">
        <seg>ant.taskdef(resource: &lt;s0&gt;'checkstyletask.properties'&lt;/s0&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ant.zip(destfile: &lt;s0&gt;'archive.zip'&lt;/s0&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171219T090755Z" creationid="huanghaohang" creationdate="20171219T090755Z">
        <seg>ant.zip(destfile: &lt;s0&gt;'archive.zip'&lt;/s0&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>antlr</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180205T141225Z" creationid="huanghaohang" creationdate="20180205T141225Z">
        <seg>antlr</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>antlr_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180205T141224Z" creationid="huanghaohang" creationdate="20180205T141224Z">
        <seg>antlr_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>api/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T154455Z" creationid="95" creationdate="20170731T154455Z">
        <seg>api/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>api/build.gradle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T125322Z" creationid="95" creationdate="20170803T125322Z">
        <seg>api/build.gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>api:compile - Compiles the source files
webapp:libs - Builds the JAR [api:libs]</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T012329Z" creationid="huanghaohang" creationdate="20170910T012329Z">
        <seg>api:compile - Compiles the source files
webapp:libs - Builds the JAR [api:libs]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>appendix</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233148Z" creationid="huanghaohang" creationdate="20171206T233148Z">
        <seg>appendix</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>appendix = &lt;s3&gt;'wrapper'&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T232559Z" creationid="huanghaohang" creationdate="20171206T232559Z">
        <seg>appendix = &lt;s3&gt;'wrapper'&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>application</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180206T013853Z" creationid="huanghaohang" creationdate="20180206T013853Z">
        <seg>application</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>application_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180206T013851Z" creationid="huanghaohang" creationdate="20180206T013851Z">
        <seg>application_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply from: &lt;s0&gt;'other.gradle'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170918T145336Z" creationid="huanghaohang" creationdate="20170918T145336Z">
        <seg>apply from: &lt;s0&gt;'other.gradle'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply from: &lt;s3&gt;'other.gradle'&lt;/s3&gt;, to: pos</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170918T150052Z" creationid="huanghaohang" creationdate="20170918T150052Z">
        <seg>apply from: &lt;s3&gt;'other.gradle'&lt;/s3&gt;, to: pos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;"java"&lt;/s0&gt;

ext {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T133529Z" creationid="huanghaohang" creationdate="20170913T133529Z">
        <seg>apply plugin: &lt;s0&gt;"java"&lt;/s0&gt;

ext {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'eclipse'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T153832Z" creationid="95" creationdate="20170731T153832Z">
        <seg>apply plugin: &lt;s0&gt;'eclipse'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'eclipse'&lt;/s0&gt;
apply plugin: &lt;s1&gt;'groovy'&lt;/s1&gt;

repositories {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T002848Z" creationid="huanghaohang" creationdate="20170909T002848Z">
        <seg>apply plugin: &lt;s0&gt;'eclipse'&lt;/s0&gt;
apply plugin: &lt;s1&gt;'groovy'&lt;/s1&gt;

repositories {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'groovy'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T001700Z" creationid="huanghaohang" creationdate="20170909T001700Z">
        <seg>apply plugin: &lt;s0&gt;'groovy'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'java'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T012452Z" creationid="95" creationdate="20170730T012452Z">
        <seg>apply plugin: &lt;s0&gt;'java'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'java'&lt;/s0&gt;

compileJava.destinationDir = file(&lt;s1&gt;"$buildDir/output/classes"&lt;/s1&gt;)

task show &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T022555Z" creationid="huanghaohang" creationdate="20180131T022555Z">
        <seg>apply plugin: &lt;s0&gt;'java'&lt;/s0&gt;

compileJava.destinationDir = file(&lt;s1&gt;"$buildDir/output/classes"&lt;/s1&gt;)

task show &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'java'&lt;/s0&gt;

repositories {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170908T013229Z" creationid="haohang" creationdate="20170908T013229Z">
        <seg>apply plugin: &lt;s0&gt;'java'&lt;/s0&gt;

repositories {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'java'&lt;/s0&gt;

sourceSets.main.output.classesDir = file(&lt;s1&gt;"$buildDir/output/classes"&lt;/s1&gt;)

task show &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T024638Z" creationid="huanghaohang" creationdate="20180131T024638Z">
        <seg>apply plugin: &lt;s0&gt;'java'&lt;/s0&gt;

sourceSets.main.output.classesDir = file(&lt;s1&gt;"$buildDir/output/classes"&lt;/s1&gt;)

task show &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'java'&lt;/s0&gt;

task show &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180130T100201Z" creationid="huanghaohang" creationdate="20180130T100201Z">
        <seg>apply plugin: &lt;s0&gt;'java'&lt;/s0&gt;

task show &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'java'&lt;/s0&gt;

task zip(type: Zip) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T135306Z" creationid="huanghaohang" creationdate="20171126T135306Z">
        <seg>apply plugin: &lt;s0&gt;'java'&lt;/s0&gt;

task zip(type: Zip) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'java'&lt;/s0&gt;

version = &lt;s1&gt;1.0&lt;/s1&gt;

task myZip(type: Zip) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T140715Z" creationid="huanghaohang" creationdate="20171126T140715Z">
        <seg>apply plugin: &lt;s0&gt;'java'&lt;/s0&gt;

version = &lt;s1&gt;1.0&lt;/s1&gt;

task myZip(type: Zip) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'java'&lt;/s0&gt;
apply plugin: &lt;s1&gt;'eclipse'&lt;/s1&gt;

sourceCompatibility = &lt;s2&gt;1.5&lt;/s2&gt;
version = &lt;s3&gt;'1.0'&lt;/s3&gt;
jar {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T154051Z" creationid="95" creationdate="20170731T154051Z">
        <seg>apply plugin: &lt;s0&gt;'java'&lt;/s0&gt;
apply plugin: &lt;s1&gt;'eclipse'&lt;/s1&gt;

sourceCompatibility = &lt;s2&gt;1.5&lt;/s2&gt;
version = &lt;s3&gt;'1.0'&lt;/s3&gt;
jar {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'java'&lt;/s0&gt;
archivesBaseName = &lt;s1&gt;'gradle'&lt;/s1&gt;
version = &lt;s2&gt;1.0&lt;/s2&gt;

task myZip(type: Zip) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T232558Z" creationid="huanghaohang" creationdate="20171206T232558Z">
        <seg>apply plugin: &lt;s0&gt;'java'&lt;/s0&gt;
archivesBaseName = &lt;s1&gt;'gradle'&lt;/s1&gt;
version = &lt;s2&gt;1.0&lt;/s2&gt;

task myZip(type: Zip) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'java'&lt;/s0&gt;
version = &lt;s1&gt;1.0&lt;/s1&gt;

task myZip(type: Zip) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T232531Z" creationid="huanghaohang" creationdate="20171206T232531Z">
        <seg>apply plugin: &lt;s0&gt;'java'&lt;/s0&gt;
version = &lt;s1&gt;1.0&lt;/s1&gt;

task myZip(type: Zip) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'jetty'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T005600Z" creationid="huanghaohang" creationdate="20170909T005600Z">
        <seg>apply plugin: &lt;s0&gt;'jetty'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'maven'&lt;/s0&gt;

uploadArchives {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T051003Z" creationid="huanghaohang" creationdate="20170908T051003Z">
        <seg>apply plugin: &lt;s0&gt;'maven'&lt;/s0&gt;

uploadArchives {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'war'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T004620Z" creationid="huanghaohang" creationdate="20170909T004620Z">
        <seg>apply plugin: &lt;s0&gt;'war'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s1&gt;'eclipse-wtp'&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T124424Z" creationid="95" creationdate="20170803T124424Z">
        <seg>apply plugin: &lt;s1&gt;'eclipse-wtp'&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: JavaPlugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180130T093314Z" creationid="huanghaohang" creationdate="20180130T093314Z">
        <seg>apply plugin: JavaPlugin</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: org.gradle.api.plugins.JavaPlugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180130T093210Z" creationid="huanghaohang" creationdate="20180130T093210Z">
        <seg>apply plugin: org.gradle.api.plugins.JavaPlugin</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>archiveName</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T232629Z" creationid="huanghaohang" creationdate="20171206T232629Z">
        <seg>archiveName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>archivePath</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T232803Z" creationid="huanghaohang" creationdate="20171206T232803Z">
        <seg>archivePath</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>archives</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T053852Z" creationid="haohang" creationdate="20180313T053852Z">
        <seg>archives</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>archives dist
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T125724Z" creationid="95" creationdate="20170803T125724Z">
        <seg>archives dist
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>archivesBaseName</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180318T005946Z" creationid="huanghaohang" creationdate="20180318T005946Z">
        <seg>archivesBaseName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>artifact_dependencies_tutorial.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T080751Z" creationid="95" creationdate="20170723T080751Z">
        <seg>artifact_dependencies_tutorial.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>artifact_dependencies_tutorial.html#N1056B</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233619Z" creationid="huanghaohang" creationdate="20171206T233619Z">
        <seg>artifact_dependencies_tutorial.html#N1056B</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>artifact_dependencies_tutorial.html#N10589</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233629Z" creationid="huanghaohang" creationdate="20171206T233629Z">
        <seg>artifact_dependencies_tutorial.html#N10589</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>artifact_dependencies_tutorial.html#N105C9</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233658Z" creationid="huanghaohang" creationdate="20171206T233658Z">
        <seg>artifact_dependencies_tutorial.html#N105C9</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>artifact_dependencies_tutorial.html#N1060B</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233708Z" creationid="huanghaohang" creationdate="20171206T233708Z">
        <seg>artifact_dependencies_tutorial.html#N1060B</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>artifact_dependencies_tutorial.html#N10653</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233731Z" creationid="huanghaohang" creationdate="20171206T233731Z">
        <seg>artifact_dependencies_tutorial.html#N10653</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>artifact_dependencies_tutorial.html#N10691</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233740Z" creationid="huanghaohang" creationdate="20171206T233740Z">
        <seg>artifact_dependencies_tutorial.html#N10691</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>artifact_dependencies_tutorial.html#configurations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233650Z" creationid="huanghaohang" creationdate="20171206T233650Z">
        <seg>artifact_dependencies_tutorial.html#configurations</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>artifact_management.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T051025Z" creationid="huanghaohang" creationdate="20170908T051025Z">
        <seg>artifact_management.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assemble</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T014424Z" creationid="95" creationdate="20170730T014424Z">
        <seg>assemble</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assembler</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180205T142913Z" creationid="huanghaohang" creationdate="20180205T142913Z">
        <seg>assembler</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assert delegate == project.dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170914T153238Z" creationid="huanghaohang" creationdate="20170914T153238Z">
        <seg>assert delegate == project.dependencies</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>attributes &lt;s2&gt;'Implementation-Title'&lt;/s2&gt;: &lt;s3&gt;'Gradle Quickstart'&lt;/s3&gt;, &lt;s4&gt;'Implementation-Version'&lt;/s4&gt;: version</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T132607Z" creationid="95" creationdate="20170730T132607Z">
        <seg>attributes &lt;s2&gt;'Implementation-Title'&lt;/s2&gt;: &lt;s3&gt;'Gradle Quickstart'&lt;/s3&gt;, &lt;s4&gt;'Implementation-Version'&lt;/s4&gt;: version</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>attributes &lt;s4&gt;'Implementation-Title'&lt;/s4&gt;: &lt;s5&gt;'Gradle Quickstart'&lt;/s5&gt;, &lt;s6&gt;'Implementation-Version'&lt;/s6&gt;: version</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T154055Z" creationid="95" creationdate="20170731T154055Z">
        <seg>attributes &lt;s4&gt;'Implementation-Title'&lt;/s4&gt;: &lt;s5&gt;'Gradle Quickstart'&lt;/s5&gt;, &lt;s6&gt;'Implementation-Version'&lt;/s6&gt;: version</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>attributes key1: &lt;s0&gt;'value1'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T111941Z" creationid="huanghaohang" creationdate="20180406T111941Z">
        <seg>attributes key1: &lt;s0&gt;'value1'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>attributes(&lt;s0&gt;"Implementation-Title"&lt;/s0&gt;: &lt;s1&gt;"Gradle"&lt;/s1&gt;, &lt;s2&gt;"Implementation-Version"&lt;/s2&gt;: version)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T111449Z" creationid="huanghaohang" creationdate="20180406T111449Z">
        <seg>attributes(&lt;s0&gt;"Implementation-Title"&lt;/s0&gt;: &lt;s1&gt;"Gradle"&lt;/s1&gt;, &lt;s2&gt;"Implementation-Version"&lt;/s2&gt;: version)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>attributes(&lt;s0&gt;"Implementation-Title"&lt;/s0&gt;: &lt;s1&gt;"Gradle"&lt;/s1&gt;, &lt;s2&gt;"Implementation-Version"&lt;/s2&gt;: version)
}
task fooJar(type: Jar) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T111609Z" creationid="huanghaohang" creationdate="20180406T111609Z">
        <seg>attributes(&lt;s0&gt;"Implementation-Title"&lt;/s0&gt;: &lt;s1&gt;"Gradle"&lt;/s1&gt;, &lt;s2&gt;"Implementation-Version"&lt;/s2&gt;: version)
}
task fooJar(type: Jar) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>base</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180211T090001Z" creationid="huanghaohang" creationdate="20180211T090001Z">
        <seg>base</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>base.css</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072245Z" creationid="haohang" creationdate="20170720T072245Z">
        <seg>base.css</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>baseName</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233116Z" creationid="huanghaohang" creationdate="20171206T233116Z">
        <seg>baseName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>baseName = &lt;s3&gt;'customName'&lt;/s3&gt;
}

println myZip.archiveName</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T232534Z" creationid="huanghaohang" creationdate="20171206T232534Z">
        <seg>baseName = &lt;s3&gt;'customName'&lt;/s3&gt;
}

println myZip.archiveName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>beginIndex = &lt;s2&gt;1&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170918T145822Z" creationid="huanghaohang" creationdate="20170918T145822Z">
        <seg>beginIndex = &lt;s2&gt;1&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>build</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T035013Z" creationid="haohang" creationdate="20180313T035013Z">
        <seg>build</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>build-announcements</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180207T144201Z" creationid="huanghaohang" creationdate="20180207T144201Z">
        <seg>build-announcements</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>build-dashboard</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180211T090155Z" creationid="huanghaohang" creationdate="20180211T090155Z">
        <seg>build-dashboard</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>build-init</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180211T090212Z" creationid="huanghaohang" creationdate="20180211T090212Z">
        <seg>build-init</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>build.gradle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T144943Z" creationid="95" creationdate="20170724T144943Z">
        <seg>build.gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>build.xml</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T084608Z" creationid="huanghaohang" creationdate="20180105T084608Z">
        <seg>build.xml</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>build&lt;e0&gt;&lt;c1&gt;ConfigurationName&lt;/c1&gt;&lt;/e0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T035545Z" creationid="haohang" creationdate="20180313T035545Z">
        <seg>build&lt;e0&gt;&lt;c1&gt;ConfigurationName&lt;/c1&gt;&lt;/e0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>buildDashboard_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180211T090154Z" creationid="huanghaohang" creationdate="20180211T090154Z">
        <seg>buildDashboard_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>buildDependents</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T035423Z" creationid="haohang" creationdate="20180313T035423Z">
        <seg>buildDependents</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>buildDir</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T132221Z" creationid="huanghaohang" creationdate="20170913T132221Z">
        <seg>buildDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>buildNeeded</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T035132Z" creationid="haohang" creationdate="20180313T035132Z">
        <seg>buildNeeded</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>build_announcements_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180207T144200Z" creationid="huanghaohang" creationdate="20180207T144200Z">
        <seg>build_announcements_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>build_environment.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180108T133208Z" creationid="huanghaohang" creationdate="20180108T133208Z">
        <seg>build_environment.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>build_environment.html#sec:gradle_configuration_properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180120T025018Z" creationid="huanghaohang" creationdate="20180120T025018Z">
        <seg>build_environment.html#sec:gradle_configuration_properties</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>build_init_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180211T090211Z" creationid="huanghaohang" creationdate="20180211T090211Z">
        <seg>build_init_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>build_lifecycle.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T024253Z" creationid="95" creationdate="20170729T024253Z">
        <seg>build_lifecycle.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>build_lifecycle.html#build_lifecycle_events</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180107T144044Z" creationid="huanghaohang" creationdate="20180107T144044Z">
        <seg>build_lifecycle.html#build_lifecycle_events</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>c</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180205T143003Z" creationid="huanghaohang" creationdate="20180205T143003Z">
        <seg>c</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>check</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T014613Z" creationid="95" creationdate="20170730T014613Z">
        <seg>check</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>checkstyle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180207T144400Z" creationid="huanghaohang" creationdate="20180207T144400Z">
        <seg>checkstyle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>checkstyle_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180207T144359Z" creationid="huanghaohang" creationdate="20180207T144359Z">
        <seg>checkstyle_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>classes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180312T062405Z" creationid="haohang" creationdate="20180312T062405Z">
        <seg>classes</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>classesDir.mkdirs()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170917T132406Z" creationid="huanghaohang" creationdate="20170917T132406Z">
        <seg>classesDir.mkdirs()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>classifier</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233212Z" creationid="huanghaohang" creationdate="20171206T233212Z">
        <seg>classifier</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>classifier = &lt;s4&gt;'src'&lt;/s4&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T232600Z" creationid="huanghaohang" creationdate="20171206T232600Z">
        <seg>classifier = &lt;s4&gt;'src'&lt;/s4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>classpath</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T100235Z" creationid="haohang" creationdate="20180326T100235Z">
        <seg>classpath</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>classpath = sourceSets.intTest.runtimeClasspath
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T095454Z" creationid="haohang" creationdate="20180326T095454Z">
        <seg>classpath = sourceSets.intTest.runtimeClasspath
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>classpath {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T083830Z" creationid="huanghaohang" creationdate="20180105T083830Z">
        <seg>classpath {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>clean</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T014334Z" creationid="95" creationdate="20170730T014334Z">
        <seg>clean</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>clean&lt;e0&gt;&lt;c1&gt;TaskName&lt;/c1&gt;&lt;/e0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180312T063422Z" creationid="haohang" creationdate="20180312T063422Z">
        <seg>clean&lt;e0&gt;&lt;c1&gt;TaskName&lt;/c1&gt;&lt;/e0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>codenarc</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180207T144444Z" creationid="huanghaohang" creationdate="20180207T144444Z">
        <seg>codenarc</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>codenarc_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180207T144443Z" creationid="huanghaohang" creationdate="20180207T144443Z">
        <seg>codenarc_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>collection = files { srcDir.listFiles() }</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T150351Z" creationid="huanghaohang" creationdate="20170927T150351Z">
        <seg>collection = files { srcDir.listFiles() }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>collection.collect { relativePath(it) }.sort().each { println it }</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T150353Z" creationid="huanghaohang" creationdate="20170927T150353Z">
        <seg>collection.collect { relativePath(it) }.sort().each { println it }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>collection.collect { relativePath(it) }.sort().each { println it }
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T150356Z" creationid="huanghaohang" creationdate="20170927T150356Z">
        <seg>collection.collect { relativePath(it) }.sort().each { println it }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compile</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T032551Z" creationid="huanghaohang" creationdate="20170908T032551Z">
        <seg>compile</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compile &lt;s0&gt;'org.codehaus.groovy:groovy-all:2.3.3'&lt;/s0&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T002755Z" creationid="huanghaohang" creationdate="20170909T002755Z">
        <seg>compile &lt;s0&gt;'org.codehaus.groovy:groovy-all:2.3.3'&lt;/s0&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compile &lt;s0&gt;'org.hibernate:hibernate-core:3.6.7.Final'&lt;/s0&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T043910Z" creationid="huanghaohang" creationdate="20170908T043910Z">
        <seg>compile &lt;s0&gt;'org.hibernate:hibernate-core:3.6.7.Final'&lt;/s0&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compile &lt;s2&gt;'org.codehaus.groovy:groovy-all:2.3.3'&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T002852Z" creationid="huanghaohang" creationdate="20170909T002852Z">
        <seg>compile &lt;s2&gt;'org.codehaus.groovy:groovy-all:2.3.3'&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compile group: &lt;s0&gt;'commons-collections'&lt;/s0&gt;, name: &lt;s1&gt;'commons-collections'&lt;/s1&gt;, version: &lt;s2&gt;'3.2'&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T124733Z" creationid="95" creationdate="20170730T124733Z">
        <seg>compile group: &lt;s0&gt;'commons-collections'&lt;/s0&gt;, name: &lt;s1&gt;'commons-collections'&lt;/s1&gt;, version: &lt;s2&gt;'3.2'&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compile group: &lt;s0&gt;'org.hibernate'&lt;/s0&gt;, name: &lt;s1&gt;'hibernate-core'&lt;/s1&gt;, version: &lt;s2&gt;'3.6.7.Final'&lt;/s2&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T043324Z" creationid="huanghaohang" creationdate="20170908T043324Z">
        <seg>compile group: &lt;s0&gt;'org.hibernate'&lt;/s0&gt;, name: &lt;s1&gt;'hibernate-core'&lt;/s1&gt;, version: &lt;s2&gt;'3.6.7.Final'&lt;/s2&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compile group: &lt;s1&gt;'org.hibernate'&lt;/s1&gt;, name: &lt;s2&gt;'hibernate-core'&lt;/s2&gt;, version: &lt;s3&gt;'3.6.7.Final'&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170908T013231Z" creationid="haohang" creationdate="20170908T013231Z">
        <seg>compile group: &lt;s1&gt;'org.hibernate'&lt;/s1&gt;, name: &lt;s2&gt;'hibernate-core'&lt;/s2&gt;, version: &lt;s3&gt;'3.6.7.Final'&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compile group: &lt;s7&gt;'commons-collections'&lt;/s7&gt;, name: &lt;s8&gt;'commons-collections'&lt;/s8&gt;, version: &lt;s9&gt;'3.2'&lt;/s9&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T154113Z" creationid="95" creationdate="20170731T154113Z">
        <seg>compile group: &lt;s7&gt;'commons-collections'&lt;/s7&gt;, name: &lt;s8&gt;'commons-collections'&lt;/s8&gt;, version: &lt;s9&gt;'3.2'&lt;/s9&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compile localGroovy()
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T122901Z" creationid="huanghaohang" creationdate="20180406T122901Z">
        <seg>compile localGroovy()
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compile module(&lt;s1&gt;'org.codehaus.groovy:groovy:1.6.0'&lt;/s1&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T123329Z" creationid="huanghaohang" creationdate="20180406T123329Z">
        <seg>compile module(&lt;s1&gt;'org.codehaus.groovy:groovy:1.6.0'&lt;/s1&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compile project(&lt;s0&gt;':shared'&lt;/s0&gt;)
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T125332Z" creationid="95" creationdate="20170803T125332Z">
        <seg>compile project(&lt;s0&gt;':shared'&lt;/s0&gt;)
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compile {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171002T134314Z" creationid="huanghaohang" creationdate="20171002T134314Z">
        <seg>compile {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compile(&lt;s0&gt;'junit:junit:4.11'&lt;/s0&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170914T153239Z" creationid="huanghaohang" creationdate="20170914T153239Z">
        <seg>compile(&lt;s0&gt;'junit:junit:4.11'&lt;/s0&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compile&lt;e0&gt;&lt;c1&gt;SourceSet&lt;/c1&gt;&lt;/e0&gt;Groovy</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T120840Z" creationid="huanghaohang" creationdate="20180406T120840Z">
        <seg>compile&lt;e0&gt;&lt;c1&gt;SourceSet&lt;/c1&gt;&lt;/e0&gt;Groovy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compile&lt;e0&gt;&lt;c1&gt;SourceSet&lt;/c1&gt;&lt;/e0&gt;Java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180312T073315Z" creationid="haohang" creationdate="20180312T073315Z">
        <seg>compile&lt;e0&gt;&lt;c1&gt;SourceSet&lt;/c1&gt;&lt;/e0&gt;Java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compileClasspath</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180320T095242Z" creationid="haohang" creationdate="20180320T095242Z">
        <seg>compileClasspath</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compileGroovy</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T120745Z" creationid="huanghaohang" creationdate="20180406T120745Z">
        <seg>compileGroovy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compileJava</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180312T061353Z" creationid="haohang" creationdate="20180312T061353Z">
        <seg>CompileJava</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compileTestGroovy</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T120807Z" creationid="huanghaohang" creationdate="20180406T120807Z">
        <seg>compileTestGroovy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compileTestJava</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180312T062505Z" creationid="haohang" creationdate="20180312T062505Z">
        <seg>compileTestJava</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>configurations {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T084251Z" creationid="huanghaohang" creationdate="20180105T084251Z">
        <seg>configurations {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>configures reasonable default values for all archive tasks (e.g. tasks that inherit from &lt;a0&gt;&lt;c1&gt;AbstractArchiveTask&lt;/c1&gt;&lt;/a0&gt;). For example, the archive tasks are tasks of types: &lt;a2&gt;&lt;c3&gt;Jar&lt;/c3&gt;&lt;/a2&gt;, &lt;a4&gt;&lt;c5&gt;Tar&lt;/c5&gt;&lt;/a4&gt;, &lt;a6&gt;&lt;c7&gt;Zip&lt;/c7&gt;&lt;/a6&gt;. Specifically, &lt;c8&gt;destinationDir&lt;/c8&gt;, &lt;c9&gt;baseName&lt;/c9&gt; and &lt;c10&gt;version&lt;/c10&gt; properties of the archive tasks are preconfigured with defaults. This is extremely useful because it drives consistency across projects; the consistency regarding naming conventions of archives and their location after the build completed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180218T093158Z" creationid="huanghaohang" creationdate="20180218T092719Z">
        <seg>为所有归档任务（比如从 &lt;a0&gt;&lt;c1&gt;AbstractArchiveTask&lt;/c1&gt;&lt;/a0&gt; 中继承的任务）配置合理的默认值。例如，以下类型的归档任务：&lt;a2&gt;&lt;c3&gt;Jar&lt;/c3&gt;&lt;/a2&gt;，&lt;a4&gt;&lt;c5&gt;Tar&lt;/c5&gt;&lt;/a4&gt;，&lt;a6&gt;&lt;c7&gt;Zip&lt;/c7&gt;&lt;/a6&gt;。确切地说，是对这些归档任务的 &lt;c8&gt;destinationDir&lt;/c8&gt;，&lt;c9&gt;baseName&lt;/c9&gt; 和 &lt;c10&gt;version&lt;/c10&gt; 属性预先配置了默认值。这是非常有用的，因为它可以推动项目之间的一致性，以及关于构建完成后档案的命名规范及其位置的一致性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>copy {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171015T094221Z" creationid="huanghaohang" creationdate="20171015T094221Z">
        <seg>copy {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>cpp</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180205T143024Z" creationid="huanghaohang" creationdate="20180205T143024Z">
        <seg>cpp</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>credentials {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T050447Z" creationid="huanghaohang" creationdate="20170908T050447Z">
        <seg>credentials {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>cunit</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180211T090434Z" creationid="huanghaohang" creationdate="20180211T090434Z">
        <seg>cunit</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>custom_plugins.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180130T095731Z" creationid="huanghaohang" creationdate="20180130T095731Z">
        <seg>custom_plugins.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>custom_tasks.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171015T124956Z" creationid="huanghaohang" creationdate="20171015T124956Z">
        <seg>custom_tasks.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>def classesDir = &lt;s0&gt;new&lt;/s0&gt; File(&lt;s1&gt;'build/classes'&lt;/s1&gt;)

task resources &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170917T132405Z" creationid="huanghaohang" creationdate="20170917T132405Z">
        <seg>def classesDir = &lt;s0&gt;new&lt;/s0&gt; File(&lt;s1&gt;'build/classes'&lt;/s1&gt;)

task resources &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>def dest = &lt;s0&gt;"dest"&lt;/s0&gt;

task copy(type: Copy) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T132954Z" creationid="huanghaohang" creationdate="20170913T132954Z">
        <seg>def dest = &lt;s0&gt;"dest"&lt;/s0&gt;

task copy(type: Copy) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>def destFile = &lt;s7&gt;new&lt;/s7&gt; File(destDir, &lt;s8&gt;"${name}.txt"&lt;/s8&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T085715Z" creationid="huanghaohang" creationdate="20170922T085715Z">
        <seg>def destFile = &lt;s7&gt;new&lt;/s7&gt; File(destDir, &lt;s8&gt;"${name}.txt"&lt;/s8&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>def files = file(&lt;s0&gt;'../antLoadfileResources'&lt;/s0&gt;).listFiles().sort()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170728T153757Z" creationid="95" creationdate="20170728T153757Z">
        <seg>def files = file(&lt;s0&gt;'../antLoadfileResources'&lt;/s0&gt;).listFiles().sort()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>def height = mountain.height[&lt;s6&gt;0&lt;/s6&gt;].text()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T085714Z" creationid="huanghaohang" creationdate="20170922T085714Z">
        <seg>def height = mountain.height[&lt;s6&gt;0&lt;/s6&gt;].text()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>def mountains = &lt;s4&gt;new&lt;/s4&gt; XmlParser().parse(srcFile)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T085712Z" creationid="huanghaohang" creationdate="20170922T085712Z">
        <seg>def mountains = &lt;s4&gt;new&lt;/s4&gt; XmlParser().parse(srcFile)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>def name = mountain.name[&lt;s5&gt;0&lt;/s5&gt;].text()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T085713Z" creationid="huanghaohang" creationdate="20170922T085713Z">
        <seg>def name = mountain.name[&lt;s5&gt;0&lt;/s5&gt;].text()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>def path = ant.path {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171219T091122Z" creationid="huanghaohang" creationdate="20171219T091122Z">
        <seg>def path = ant.path {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>def pos = &lt;s0&gt;new&lt;/s0&gt; java.text.FieldPosition(&lt;s1&gt;10&lt;/s1&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170918T150025Z" creationid="huanghaohang" creationdate="20170918T150025Z">
        <seg>def pos = &lt;s0&gt;new&lt;/s0&gt; java.text.FieldPosition(&lt;s1&gt;10&lt;/s1&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>def pos = configure(&lt;s0&gt;new&lt;/s0&gt; java.text.FieldPosition(&lt;s1&gt;10&lt;/s1&gt;)) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170918T145820Z" creationid="huanghaohang" creationdate="20170918T145820Z">
        <seg>def pos = configure(&lt;s0&gt;new&lt;/s0&gt; java.text.FieldPosition(&lt;s1&gt;10&lt;/s1&gt;)) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>default</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T053914Z" creationid="haohang" creationdate="20180313T053914Z">
        <seg>default</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>defaultTasks &lt;s0&gt;'clean'&lt;/s0&gt;, &lt;s1&gt;'run'&lt;/s1&gt;

task clean &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T023908Z" creationid="95" creationdate="20170729T023908Z">
        <seg>defaultTasks &lt;s0&gt;'clean'&lt;/s0&gt;, &lt;s1&gt;'run'&lt;/s1&gt;

task clean &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>delegate.compile(&lt;s1&gt;'junit:junit:4.11'&lt;/s1&gt;)
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170914T153240Z" creationid="huanghaohang" creationdate="20170914T153240Z">
        <seg>delegate.compile(&lt;s1&gt;'junit:junit:4.11'&lt;/s1&gt;)
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependencies {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T124732Z" creationid="95" creationdate="20170730T124732Z">
        <seg>dependencies {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependencies(&lt;s6&gt;'org.apache.ant:ant-junit:1.9.3@jar'&lt;/s6&gt;, &lt;s7&gt;'org.apache.ant:ant-launcher:1.9.3'&lt;/s7&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T123338Z" creationid="huanghaohang" creationdate="20180406T123338Z">
        <seg>dependencies(&lt;s6&gt;'org.apache.ant:ant-junit:1.9.3@jar'&lt;/s6&gt;, &lt;s7&gt;'org.apache.ant:ant-launcher:1.9.3'&lt;/s7&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependency(&lt;s2&gt;'asm:asm-all:2.2.3'&lt;/s2&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T123329Z" creationid="huanghaohang" creationdate="20180406T123329Z">
        <seg>dependency(&lt;s2&gt;'asm:asm-all:2.2.3'&lt;/s2&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependency(&lt;s3&gt;'antlr:antlr:2.7.7'&lt;/s3&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T123340Z" creationid="huanghaohang" creationdate="20180406T123340Z">
        <seg>dependency(&lt;s3&gt;'antlr:antlr:2.7.7'&lt;/s3&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependency(&lt;s4&gt;'commons-cli:commons-cli:1.2'&lt;/s4&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T123342Z" creationid="huanghaohang" creationdate="20180406T123342Z">
        <seg>dependency(&lt;s4&gt;'commons-cli:commons-cli:1.2'&lt;/s4&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependency-cache</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T062255Z" creationid="haohang" creationdate="20180313T062255Z">
        <seg>dependency-cache</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependencyCacheDir</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T062320Z" creationid="haohang" creationdate="20180313T062320Z">
        <seg>dependencyCacheDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependencyCacheDirName</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T062253Z" creationid="haohang" creationdate="20180313T062253Z">
        <seg>dependencyCacheDirName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependency_management.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T051123Z" creationid="huanghaohang" creationdate="20170908T051123Z">
        <seg>dependency_management.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependency_management.html#sec:how_to_declare_your_dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T043915Z" creationid="huanghaohang" creationdate="20170908T043915Z">
        <seg>dependency_management.html#sec:how_to_declare_your_dependencies</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependency_management.html#sec:repositories</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T045955Z" creationid="huanghaohang" creationdate="20170908T045955Z">
        <seg>dependency_management.html#sec:repositories</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependency_management.html#sub:configurations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T042746Z" creationid="huanghaohang" creationdate="20170908T042746Z">
        <seg>dependency_management.html#sub:configurations</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependsOn pingServer1, pingServer2
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T043837Z" creationid="huanghaohang" creationdate="20170923T043837Z">
        <seg>dependsOn pingServer1, pingServer2
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependsOn spiJar</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T125717Z" creationid="95" creationdate="20170803T125717Z">
        <seg>dependsOn spiJar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>description</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T132149Z" creationid="huanghaohang" creationdate="20170913T132149Z">
        <seg>description</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>description &lt;s0&gt;'Copies the resource directory to the target directory.'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T082301Z" creationid="huanghaohang" creationdate="20170922T082301Z">
        <seg>description &lt;s0&gt;'Copies the resource directory to the target directory.'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>description = &lt;s0&gt;'Builds the distribution'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T012005Z" creationid="huanghaohang" creationdate="20170910T012005Z">
        <seg>description = &lt;s0&gt;'Builds the distribution'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>description = &lt;s0&gt;'The shared API for the application'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T011419Z" creationid="huanghaohang" creationdate="20170910T011419Z">
        <seg>description = &lt;s0&gt;'The shared API for the application'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>destDir.mkdirs()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T085711Z" creationid="huanghaohang" creationdate="20170922T085711Z">
        <seg>destDir.mkdirs()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>destFile.text = &lt;s9&gt;"$name -&gt; ${height}\n"&lt;/s9&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T085716Z" creationid="huanghaohang" creationdate="20170922T085716Z">
        <seg>destFile.text = &lt;s9&gt;"$name -&gt; ${height}\n"&lt;/s9&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>destinationDir</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T232818Z" creationid="huanghaohang" creationdate="20171206T232818Z">
        <seg>destinationDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>destinationDir = file(&lt;s2&gt;"$buildDir/reports/allTests"&lt;/s2&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T044004Z" creationid="huanghaohang" creationdate="20180406T044004Z">
        <seg>destinationDir = file(&lt;s2&gt;"$buildDir/reports/allTests"&lt;/s2&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>details.exclude()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T111946Z" creationid="huanghaohang" creationdate="20180406T111946Z">
        <seg>details.exclude()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>details.value = baseValue</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T111944Z" creationid="huanghaohang" creationdate="20180406T111944Z">
        <seg>details.value = baseValue</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dir</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T100635Z" creationid="haohang" creationdate="20180326T100635Z">
        <seg>dir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dirs &lt;s0&gt;'repos'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T153709Z" creationid="95" creationdate="20170731T153709Z">
        <seg>dirs &lt;s0&gt;'repos'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dirs &lt;s15&gt;'repos'&lt;/s15&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T154119Z" creationid="95" creationdate="20170731T154119Z">
        <seg>dirs &lt;s15&gt;'repos'&lt;/s15&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>distribution</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180207T143740Z" creationid="huanghaohang" creationdate="20180207T143740Z">
        <seg>distribution</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>distribution_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180207T143724Z" creationid="huanghaohang" creationdate="20180207T143724Z">
        <seg>distribution_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>distributions</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T061539Z" creationid="haohang" creationdate="20180313T061539Z">
        <seg>distributions</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>distributions {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170728T012114Z" creationid="haohang" creationdate="20170728T012114Z">
        <seg>distributions {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dists {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T012004Z" creationid="huanghaohang" creationdate="20170910T012004Z">
        <seg>dists {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>distsDir</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T062136Z" creationid="haohang" creationdate="20180313T062136Z">
        <seg>distsDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>distsDirName</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T061536Z" creationid="haohang" creationdate="20180313T061536Z">
        <seg>distsDirName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>doFirst {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180107T025425Z" creationid="huanghaohang" creationdate="20180107T025425Z">
        <seg>doFirst {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>doLast {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T144949Z" creationid="95" creationdate="20170724T144949Z">
        <seg>doLast {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>doLast{</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171015T124927Z" creationid="huanghaohang" creationdate="20171015T124927Z">
        <seg>doLast{</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>docs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T062151Z" creationid="haohang" creationdate="20180313T062151Z">
        <seg>docs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>docs - Builds the documentation
api:libs - Builds the JAR</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T012328Z" creationid="huanghaohang" creationdate="20170910T012328Z">
        <seg>docs - Builds the documentation
api:libs - Builds the JAR</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>docs.css</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072245Z" creationid="haohang" creationdate="20170720T072245Z">
        <seg>docs.css</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>docsDir</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T062239Z" creationid="haohang" creationdate="20180313T062239Z">
        <seg>docsDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>docsDirName</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T062150Z" creationid="haohang" creationdate="20180313T062150Z">
        <seg>docsDirName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>eachEntry { details -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T111943Z" creationid="huanghaohang" creationdate="20180406T111943Z">
        <seg>eachEntry { details -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ear</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180206T014457Z" creationid="huanghaohang" creationdate="20180206T014457Z">
        <seg>ear</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ear_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180206T014450Z" creationid="huanghaohang" creationdate="20180206T014450Z">
        <seg>ear_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>eclipse</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180207T144520Z" creationid="huanghaohang" creationdate="20180207T144520Z">
        <seg>eclipse</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>eclipse-wtp</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180210T135846Z" creationid="huanghaohang" creationdate="20180210T135846Z">
        <seg>eclipse-wtp</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>eclipse_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T153833Z" creationid="95" creationdate="20170731T153833Z">
        <seg>eclipse_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>emailNotification = &lt;s2&gt;"build@master.org"&lt;/s2&gt;
}

sourceSets.all { ext.purpose = null }

sourceSets {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T133530Z" creationid="huanghaohang" creationdate="20170913T133530Z">
        <seg>emailNotification = &lt;s2&gt;"build@master.org"&lt;/s2&gt;
}

sourceSets.all { ext.purpose = null }

sourceSets {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>embedding.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180108T135123Z" creationid="huanghaohang" creationdate="20180108T135123Z">
        <seg>embedding.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>endIndex = &lt;s3&gt;5&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170918T145823Z" creationid="huanghaohang" creationdate="20170918T145823Z">
        <seg>endIndex = &lt;s3&gt;5&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>exclude &lt;s1&gt;'**/*staging*'&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T060921Z" creationid="huanghaohang" creationdate="20171126T060921Z">
        <seg>exclude &lt;s1&gt;'**/*staging*'&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>exclude { details -&gt; details.file.name.endsWith(&lt;s4&gt;'.html'&lt;/s4&gt;) &amp;&amp; details.file.text.contains(&lt;s5&gt;'staging'&lt;/s5&gt;) }
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171015T075124Z" creationid="huanghaohang" creationdate="20171015T075124Z">
        <seg>exclude { details -&gt; details.file.name.endsWith(&lt;s4&gt;'.html'&lt;/s4&gt;) &amp;&amp; details.file.text.contains(&lt;s5&gt;'staging'&lt;/s5&gt;) }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>exclude(name: &lt;s3&gt;'**.java'&lt;/s3&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171219T090757Z" creationid="huanghaohang" creationdate="20171219T090757Z">
        <seg>exclude(name: &lt;s3&gt;'**.java'&lt;/s3&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>excludeCategories &lt;s1&gt;'org.gradle.junit.CategoryB'&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T041840Z" creationid="huanghaohang" creationdate="20180406T041840Z">
        <seg>excludeCategories &lt;s1&gt;'org.gradle.junit.CategoryB'&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>excludeGroups &lt;s0&gt;'integrationTests'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T042050Z" creationid="huanghaohang" creationdate="20180406T042050Z">
        <seg>excludeGroups &lt;s0&gt;'integrationTests'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>expand(copyright: &lt;s5&gt;'2009'&lt;/s5&gt;, version: &lt;s6&gt;'2.3.1'&lt;/s6&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T060343Z" creationid="huanghaohang" creationdate="20171126T060343Z">
        <seg>expand(copyright: &lt;s5&gt;'2009'&lt;/s5&gt;, version: &lt;s6&gt;'2.3.1'&lt;/s6&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>expand(project.properties)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T060343Z" creationid="huanghaohang" creationdate="20171126T060343Z">
        <seg>expand(project.properties)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ext.destDir = &lt;s1&gt;new&lt;/s1&gt; File(buildDir, &lt;s2&gt;'generated'&lt;/s2&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T085709Z" creationid="huanghaohang" creationdate="20170922T085709Z">
        <seg>ext.destDir = &lt;s1&gt;new&lt;/s1&gt; File(buildDir, &lt;s2&gt;'generated'&lt;/s2&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ext.myProperty = &lt;s0&gt;"myValue"&lt;/s0&gt;
}

task printTaskProperties &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T141959Z" creationid="95" creationdate="20170727T141959Z">
        <seg>ext.myProperty = &lt;s0&gt;"myValue"&lt;/s0&gt;
}

task printTaskProperties &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ext.sharedManifest = manifest {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T111609Z" creationid="huanghaohang" creationdate="20180406T111609Z">
        <seg>ext.sharedManifest = manifest {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ext.srcFile = file(&lt;s0&gt;'mountains.xml'&lt;/s0&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T085708Z" creationid="huanghaohang" creationdate="20170922T085708Z">
        <seg>ext.srcFile = file(&lt;s0&gt;'mountains.xml'&lt;/s0&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>extension</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233225Z" creationid="huanghaohang" creationdate="20171206T233225Z">
        <seg>extension</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>feature_lifecycle.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T130934Z" creationid="huanghaohang" creationdate="20170919T130934Z">
        <seg>feature_lifecycle.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>feature_lifecycle.html#sec:incubating_state</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T043854Z" creationid="huanghaohang" creationdate="20170923T043854Z">
        <seg>feature_lifecycle.html#sec:incubating_state</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>file(&lt;s12&gt;'src'&lt;/s12&gt;).listFiles().findAll {it.name.endsWith(&lt;s13&gt;'.zip'&lt;/s13&gt;)}.collect { zipTree(it) }</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171002T134057Z" creationid="huanghaohang" creationdate="20171002T134057Z">
        <seg>file(&lt;s12&gt;'src'&lt;/s12&gt;).listFiles().findAll {it.name.endsWith(&lt;s13&gt;'.zip'&lt;/s13&gt;)}.collect { zipTree(it) }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>file(dir).listFiles({file -&gt; file.isFile() } as FileFilter).sort()
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T023513Z" creationid="95" creationdate="20170729T023513Z">
        <seg>file(dir).listFiles({file -&gt; file.isFile() } as FileFilter).sort()
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>fileList(&lt;s0&gt;'../antLoadfileResources'&lt;/s0&gt;).each {File file -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T023457Z" creationid="95" creationdate="20170729T023457Z">
        <seg>fileList(&lt;s0&gt;'../antLoadfileResources'&lt;/s0&gt;).each {File file -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>fileList(&lt;s4&gt;'../antLoadfileResources'&lt;/s4&gt;).each {File file -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T023509Z" creationid="95" creationdate="20170729T023509Z">
        <seg>fileList(&lt;s4&gt;'../antLoadfileResources'&lt;/s4&gt;).each {File file -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>fileName.replace(&lt;s3&gt;'-staging-'&lt;/s3&gt;, &lt;s4&gt;''&lt;/s4&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T060239Z" creationid="huanghaohang" creationdate="20171126T060239Z">
        <seg>fileName.replace(&lt;s3&gt;'-staging-'&lt;/s3&gt;, &lt;s4&gt;''&lt;/s4&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>files.each { File file -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170728T153759Z" creationid="95" creationdate="20170728T153759Z">
        <seg>files.each { File file -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>fileset(dir: &lt;s0&gt;'libs'&lt;/s0&gt;, includes: &lt;s1&gt;'*.jar'&lt;/s1&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171219T091123Z" creationid="huanghaohang" creationdate="20171219T091123Z">
        <seg>fileset(dir: &lt;s0&gt;'libs'&lt;/s0&gt;, includes: &lt;s1&gt;'*.jar'&lt;/s1&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>fileset(dir: &lt;s1&gt;'libs'&lt;/s1&gt;, includes: &lt;s2&gt;'*.jar'&lt;/s2&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T083831Z" creationid="huanghaohang" creationdate="20180105T083831Z">
        <seg>fileset(dir: &lt;s1&gt;'libs'&lt;/s1&gt;, includes: &lt;s2&gt;'*.jar'&lt;/s2&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>fileset(dir: &lt;s1&gt;'src'&lt;/s1&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171219T090756Z" creationid="huanghaohang" creationdate="20171219T090756Z">
        <seg>fileset(dir: &lt;s1&gt;'src'&lt;/s1&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>fileset(dir: &lt;s4&gt;'src'&lt;/s4&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T083840Z" creationid="huanghaohang" creationdate="20180105T083840Z">
        <seg>fileset(dir: &lt;s4&gt;'src'&lt;/s4&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>fileset(dir: &lt;s7&gt;'src'&lt;/s7&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T084334Z" creationid="huanghaohang" creationdate="20180105T084334Z">
        <seg>fileset(dir: &lt;s7&gt;'src'&lt;/s7&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>filter {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180405T131636Z" creationid="huanghaohang" creationdate="20180405T131636Z">
        <seg>filter {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>filter { String line -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T060347Z" creationid="huanghaohang" creationdate="20171126T060347Z">
        <seg>filter { String line -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>filter(FixCrLfFilter)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T060345Z" creationid="huanghaohang" creationdate="20171126T060345Z">
        <seg>filter(FixCrLfFilter)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>filter(ReplaceTokens, tokens: [copyright: &lt;s8&gt;'2009'&lt;/s8&gt;, version: &lt;s9&gt;'2.3.1'&lt;/s9&gt;])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T060345Z" creationid="huanghaohang" creationdate="20171126T060345Z">
        <seg>filter(ReplaceTokens, tokens: [copyright: &lt;s8&gt;'2009'&lt;/s8&gt;, version: &lt;s9&gt;'2.3.1'&lt;/s9&gt;])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>findbugs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180211T012447Z" creationid="huanghaohang" creationdate="20180211T012447Z">
        <seg>findbugs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>findbugs_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180211T012444Z" creationid="huanghaohang" creationdate="20180211T012444Z">
        <seg>findbugs_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>flatDir {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T153706Z" creationid="95" creationdate="20170731T153706Z">
        <seg>flatDir {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>flatDir { dirs &lt;s0&gt;'lib'&lt;/s0&gt; }
}

dependencies {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T123328Z" creationid="huanghaohang" creationdate="20180406T123328Z">
        <seg>flatDir { dirs &lt;s0&gt;'lib'&lt;/s0&gt; }
}

dependencies {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>formatter(type: &lt;s5&gt;'text'&lt;/s5&gt;, toConsole: &lt;s6&gt;'true'&lt;/s6&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T084333Z" creationid="huanghaohang" creationdate="20180105T084333Z">
        <seg>formatter(type: &lt;s5&gt;'text'&lt;/s5&gt;, toConsole: &lt;s6&gt;'true'&lt;/s6&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from &lt;c0&gt;gradle.properties&lt;/c0&gt; located in &lt;c1&gt;gradle user home&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180124T144905Z" creationid="huanghaohang" creationdate="20180124T144905Z">
        <seg>位于 &lt;c1&gt;gradle 用户主目录&lt;/c1&gt; 的 &lt;c0&gt;gradle.properties&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from &lt;c0&gt;gradle.properties&lt;/c0&gt; located in project build dir.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180124T144838Z" creationid="huanghaohang" creationdate="20180124T144838Z">
        <seg>位于项目构建目录的 &lt;c0&gt;gradle.properties&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from &lt;s0&gt;'resources'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T124610Z" creationid="huanghaohang" creationdate="20170919T124610Z">
        <seg>from &lt;s0&gt;'resources'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from &lt;s0&gt;'src/dist'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T125718Z" creationid="95" creationdate="20170803T125718Z">
        <seg>from &lt;s0&gt;'src/dist'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from &lt;s0&gt;'src/main/webapp'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171002T135608Z" creationid="huanghaohang" creationdate="20171002T135608Z">
        <seg>from &lt;s0&gt;'src/main/webapp'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from &lt;s1&gt;"source"&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T132955Z" creationid="huanghaohang" creationdate="20170913T132955Z">
        <seg>from &lt;s1&gt;"source"&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from &lt;s1&gt;'resources'&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T082303Z" creationid="huanghaohang" creationdate="20170922T082303Z">
        <seg>from &lt;s1&gt;'resources'&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from &lt;s1&gt;'src/dist'&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T135306Z" creationid="huanghaohang" creationdate="20171126T135306Z">
        <seg>from &lt;s1&gt;'src/dist'&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from &lt;s1&gt;'src/main/webapp'&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171015T075016Z" creationid="huanghaohang" creationdate="20171015T075016Z">
        <seg>from &lt;s1&gt;'src/main/webapp'&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from &lt;s2&gt;'somedir'&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T232532Z" creationid="huanghaohang" creationdate="20171206T232532Z">
        <seg>from &lt;s2&gt;'somedir'&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from &lt;s2&gt;'somedir'&lt;/s2&gt;
}

println myZip.archiveName
println relativePath(myZip.destinationDir)
println relativePath(myZip.archivePath)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T140716Z" creationid="huanghaohang" creationdate="20171126T140716Z">
        <seg>from &lt;s2&gt;'somedir'&lt;/s2&gt;
}

println myZip.archiveName
println relativePath(myZip.destinationDir)
println relativePath(myZip.archivePath)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from &lt;s2&gt;'src/main/webapp'&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T060340Z" creationid="huanghaohang" creationdate="20171126T060340Z">
        <seg>from &lt;s2&gt;'src/main/webapp'&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from &lt;s3&gt;'src/staging/index.html'&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171015T075018Z" creationid="huanghaohang" creationdate="20171015T075018Z">
        <seg>from &lt;s3&gt;'src/staging/index.html'&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from &lt;s5&gt;'somedir'&lt;/s5&gt;
}

println myZip.archiveName</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T232602Z" creationid="huanghaohang" creationdate="20171206T232602Z">
        <seg>from &lt;s5&gt;'somedir'&lt;/s5&gt;
}

println myZip.archiveName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from configurations.runtime</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T125721Z" creationid="95" creationdate="20170803T125721Z">
        <seg>from configurations.runtime</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from copyTask</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171015T075022Z" creationid="huanghaohang" creationdate="20171015T075022Z">
        <seg>from copyTask</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from copyTaskWithPatterns.outputs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171015T075026Z" creationid="huanghaohang" creationdate="20171015T075026Z">
        <seg>from copyTaskWithPatterns.outputs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from sharedManifest</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T111611Z" creationid="huanghaohang" creationdate="20180406T111611Z">
        <seg>from sharedManifest</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from sharedManifest, &lt;s1&gt;'src/config/basemanifest.txt'&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T111942Z" creationid="huanghaohang" creationdate="20180406T111942Z">
        <seg>from sharedManifest, &lt;s1&gt;'src/config/basemanifest.txt'&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from sourceSets.intTest.output
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T095353Z" creationid="haohang" creationdate="20180326T095353Z">
        <seg>from sourceSets.intTest.output
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from spiJar.archivePath</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T125720Z" creationid="95" creationdate="20170803T125720Z">
        <seg>from spiJar.archivePath</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from system properties, e.g. when &lt;c0&gt;-Dsome.property&lt;/c0&gt; is used in the command line.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180124T144939Z" creationid="huanghaohang" creationdate="20180124T144939Z">
        <seg>系统属性，例如当在命令行中使用 &lt;c0&gt;-Dsome.property&lt;/c0&gt; 时。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from zipTree(&lt;s7&gt;'src/main/assets.zip'&lt;/s7&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171015T075028Z" creationid="huanghaohang" creationdate="20171015T075028Z">
        <seg>from zipTree(&lt;s7&gt;'src/main/assets.zip'&lt;/s7&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from(&lt;s2&gt;'src/config/javabasemanifest.txt'&lt;/s2&gt;, &lt;s3&gt;'src/config/libbasemanifest.txt'&lt;/s3&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T111942Z" creationid="huanghaohang" creationdate="20180406T111942Z">
        <seg>from(&lt;s2&gt;'src/config/javabasemanifest.txt'&lt;/s2&gt;, &lt;s3&gt;'src/config/libbasemanifest.txt'&lt;/s3&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from(&lt;s2&gt;'src/dist'&lt;/s2&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T060921Z" creationid="huanghaohang" creationdate="20171126T060921Z">
        <seg>from(&lt;s2&gt;'src/dist'&lt;/s2&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from(file(&lt;s1&gt;'srcDir'&lt;/s1&gt;))</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T120837Z" creationid="huanghaohang" creationdate="20170919T120837Z">
        <seg>from(file(&lt;s1&gt;'srcDir'&lt;/s1&gt;))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from(file(&lt;s3&gt;'srcDir'&lt;/s3&gt;))</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T121057Z" creationid="huanghaohang" creationdate="20170919T121057Z">
        <seg>from(file(&lt;s3&gt;'srcDir'&lt;/s3&gt;))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>gradle --gui</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170911T143308Z" creationid="huanghaohang" creationdate="20170911T143308Z">
        <seg>gradle --gui</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>gradle -DintegTest.single=*IntegrationTest integTest</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180405T142923Z" creationid="huanghaohang" creationdate="20180405T142923Z">
        <seg>gradle -DintegTest.single=*IntegrationTest integTest</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>gradle -DintegTest.single=c/d/ :proj1:integTest</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180405T142929Z" creationid="huanghaohang" creationdate="20180405T142929Z">
        <seg>gradle -DintegTest.single=c/d/ :proj1:integTest</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>gradle -Dtest.single=:proj1:test:Customer build</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180405T142926Z" creationid="huanghaohang" creationdate="20180405T142926Z">
        <seg>gradle -Dtest.single=:proj1:test:Customer build</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>gradle -Dtest.single=ThisUniquelyNamedTest test</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180405T142919Z" creationid="huanghaohang" creationdate="20180405T142919Z">
        <seg>gradle -Dtest.single=ThisUniquelyNamedTest test</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>gradle -Dtest.single=a/b/ test</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180405T142919Z" creationid="huanghaohang" creationdate="20180405T142919Z">
        <seg>gradle -Dtest.single=a/b/ test</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>gradle someTestTask --tests *UiTest someOtherTestTask --tests *WebTest*ui</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180405T131746Z" creationid="huanghaohang" creationdate="20180405T131746Z">
        <seg>gradle someTestTask --tests *UiTest someOtherTestTask --tests *WebTest*ui</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>gradle test --tests *IntegTest</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180405T131743Z" creationid="huanghaohang" creationdate="20180405T131743Z">
        <seg>gradle test --tests *IntegTest</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>gradle test --tests *IntegTest*ui*</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180405T131744Z" creationid="huanghaohang" creationdate="20180405T131744Z">
        <seg>gradle test --tests *IntegTest*ui*</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>gradle test --tests *SomeSpecificTest</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180405T131741Z" creationid="huanghaohang" creationdate="20180405T131741Z">
        <seg>gradle test --tests *SomeSpecificTest</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>gradle test --tests *SomeTest.someSpecificFeature</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180405T131740Z" creationid="huanghaohang" creationdate="20180405T131740Z">
        <seg>gradle test --tests *SomeTest.someSpecificFeature</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>gradle test --tests all.in.specific.package*</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180405T131742Z" creationid="huanghaohang" creationdate="20180405T131742Z">
        <seg>gradle test --tests all.in.specific.package*</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>gradle test --tests org.gradle.SomeTest.someSpecificFeature</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180405T131739Z" creationid="huanghaohang" creationdate="20180405T131739Z">
        <seg>gradle test --tests org.gradle.SomeTest.someSpecificFeature</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>gradle.properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170917T135020Z" creationid="huanghaohang" creationdate="20170917T135020Z">
        <seg>gradle.properties</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>gradlePropertiesProp=gradlePropertiesValue
systemProjectProp=shouldBeOverWrittenBySystemProp
envProjectProp=shouldBeOverWrittenByEnvProp
systemProp.system=systemValue</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170917T135022Z" creationid="huanghaohang" creationdate="20170917T135022Z">
        <seg>gradlePropertiesProp=gradlePropertiesValue
systemProjectProp=shouldBeOverWrittenBySystemProp
envProjectProp=shouldBeOverWrittenByEnvProp
systemProp.system=systemValue</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>gradle_command_line.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T030916Z" creationid="95" creationdate="20170729T030916Z">
        <seg>gradle_command_line.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>gradle_daemon.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T121208Z" creationid="95" creationdate="20170723T121208Z">
        <seg>gradle_daemon.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>groovy</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180205T140842Z" creationid="huanghaohang" creationdate="20180205T140842Z">
        <seg>groovy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>groovy {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T121938Z" creationid="huanghaohang" creationdate="20180406T121938Z">
        <seg>groovy {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>groovy-base</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180207T144444Z" creationid="huanghaohang" creationdate="20180207T144444Z">
        <seg>groovy-base</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>groovy.srcDirs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T133453Z" creationid="huanghaohang" creationdate="20180406T133453Z">
        <seg>groovy.srcDirs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>groovyClasspath</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180407T003658Z" creationid="huanghaohang" creationdate="20180407T003658Z">
        <seg>groovyClasspath</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>groovy_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T003353Z" creationid="huanghaohang" creationdate="20170909T003353Z">
        <seg>groovy_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>groovy_plugin.html#groovylayout</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T121128Z" creationid="huanghaohang" creationdate="20180406T121128Z">
        <seg>groovy_plugin.html#groovylayout</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>groovydoc</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T120907Z" creationid="huanghaohang" creationdate="20180406T120907Z">
        <seg>groovydoc</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>group</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T132233Z" creationid="huanghaohang" creationdate="20170913T132233Z">
        <seg>group</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>group = &lt;s1&gt;'build'&lt;/s1&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T012009Z" creationid="huanghaohang" creationdate="20170910T012009Z">
        <seg>group = &lt;s1&gt;'build'&lt;/s1&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://checkstyle.sourceforge.net/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180207T144401Z" creationid="huanghaohang" creationdate="20180207T144401Z">
        <seg>http://checkstyle.sourceforge.net/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://clarkware.com/software/JDepend.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180211T085814Z" creationid="huanghaohang" creationdate="20180211T085814Z">
        <seg>http://clarkware.com/software/JDepend.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://codenarc.sourceforge.net/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180207T144446Z" creationid="huanghaohang" creationdate="20180207T144446Z">
        <seg>http://codenarc.sourceforge.net/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://cunit.sourceforge.net</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180211T090435Z" creationid="huanghaohang" creationdate="20180211T090435Z">
        <seg>http://cunit.sourceforge.net</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://download.oracle.com/javase/1.5.0/docs/tooldocs/windows/javadoc.html#referenceguide</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T095502Z" creationid="haohang" creationdate="20180326T095502Z">
        <seg>http://download.oracle.com/javase/1.5.0/docs/tooldocs/windows/javadoc.html#referenceguide</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://download.oracle.com/javase/6/docs/technotes/guides/net/properties.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180130T073550Z" creationid="huanghaohang" creationdate="20180130T073550Z">
        <seg>http://download.oracle.com/javase/6/docs/technotes/guides/net/properties.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://eclipse.org</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180207T144522Z" creationid="huanghaohang" creationdate="20180207T144522Z">
        <seg>http://eclipse.org</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://findbugs.sourceforge.net</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180211T060557Z" creationid="huanghaohang" creationdate="20180211T060557Z">
        <seg>http://findbugs.sourceforge.net</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://forums.gradle.org</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T121536Z" creationid="95" creationdate="20170723T121536Z">
        <seg>http://forums.gradle.org</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://groovy.codehaus.org/Closures</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T141723Z" creationid="huanghaohang" creationdate="20170913T141723Z">
        <seg>http://groovy.codehaus.org/Closures</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://groovy.codehaus.org/Using+Ant+from+Groovy</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T083400Z" creationid="huanghaohang" creationdate="20180105T083400Z">
        <seg>http://groovy.codehaus.org/Using+Ant+from+Groovy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://groovy.codehaus.org/groovy-jdk/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T135850Z" creationid="huanghaohang" creationdate="20170913T135850Z">
        <seg>http://groovy.codehaus.org/groovy-jdk/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://pmd.sourceforge.net</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180211T085853Z" creationid="huanghaohang" creationdate="20180211T085853Z">
        <seg>http://pmd.sourceforge.net</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://svn.apache.org/viewvc/ant/core/trunk/src/main/org/apache/tools/ant/util/ProxySetup.java?view=markup&amp;pathrev=556977</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180130T073542Z" creationid="huanghaohang" creationdate="20180130T073542Z">
        <seg>http://svn.apache.org/viewvc/ant/core/trunk/src/main/org/apache/tools/ant/util/ProxySetup.java?view=markup&amp;pathrev=556977</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://testng.org/doc/documentation-main.html#parameters</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T055610Z" creationid="huanghaohang" creationdate="20180406T055610Z">
        <seg>http://testng.org/doc/documentation-main.html#parameters</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://testng.org/doc/documentation-main.html#test-groups</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T113446Z" creationid="huanghaohang" creationdate="20180406T113446Z">
        <seg>http://testng.org/doc/documentation-main.html#test-groups</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://wiki.gradle.org/display/GRADLE/Plugins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180218T092858Z" creationid="huanghaohang" creationdate="20180218T092858Z">
        <seg>http://wiki.gradle.org/display/GRADLE/Plugins</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.antlr.org/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180205T141227Z" creationid="huanghaohang" creationdate="20180205T141227Z">
        <seg>http://www.antlr.org/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.defmacro.org/ramblings/lisp.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T072133Z" creationid="95" creationdate="20170723T072133Z">
        <seg>http://www.defmacro.org/ramblings/lisp.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.eclemma.org/jacoco/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180211T090455Z" creationid="huanghaohang" creationdate="20180211T090455Z">
        <seg>http://www.eclemma.org/jacoco/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.gradle.org/contribute</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T142045Z" creationid="95" creationdate="20170721T142045Z">
        <seg>http://www.gradle.org/contribute</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.gradle.org/development</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T114844Z" creationid="95" creationdate="20170723T114844Z">
        <seg>http://www.gradle.org/development</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.gradle.org/downloads</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T114310Z" creationid="95" creationdate="20170723T114310Z">
        <seg>http://www.gradle.org/downloads</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.gradle.org/license</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T065552Z" creationid="95" creationdate="20170723T065552Z">
        <seg>http://www.gradle.org/license</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.jetbrains.com/idea/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180211T085742Z" creationid="huanghaohang" creationdate="20180211T085742Z">
        <seg>http://www.jetbrains.com/idea/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.sonarsource.org</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180211T090027Z" creationid="huanghaohang" creationdate="20180211T090027Z">
        <seg>http://www.sonarsource.org</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://github.com/junit-team/junit/wiki/Categories</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T113429Z" creationid="huanghaohang" creationdate="20180406T113429Z">
        <seg>https://github.com/junit-team/junit/wiki/Categories</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ide_support.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T045711Z" creationid="huanghaohang" creationdate="20170923T045711Z">
        <seg>ide_support.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>idea</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180211T085741Z" creationid="huanghaohang" creationdate="20180211T085741Z">
        <seg>idea</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>idea_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180211T085740Z" creationid="huanghaohang" creationdate="20180211T085740Z">
        <seg>idea_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>img/commandLineTutorialTasks.png</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T031101Z" creationid="huanghaohang" creationdate="20170909T031101Z">
        <seg>img/commandLineTutorialTasks.png</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>img/groovyPluginTasks.png</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T121120Z" creationid="huanghaohang" creationdate="20180406T121120Z">
        <seg>img/groovyPluginTasks.png</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>img/guiSetup.png</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170911T145856Z" creationid="huanghaohang" creationdate="20170911T145856Z">
        <seg>img/guiSetup.png</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>img/guiTaskTree.png</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170911T143530Z" creationid="huanghaohang" creationdate="20170911T143530Z">
        <seg>img/guiTaskTree.png</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>img/javaPluginConfigurations.png</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T054211Z" creationid="haohang" creationdate="20180313T054211Z">
        <seg>img/javaPluginConfigurations.png</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>img/javaPluginTasks.png</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T040058Z" creationid="haohang" creationdate="20180313T040058Z">
        <seg>img/javaPluginTasks.png</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>img/profile.png</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T031314Z" creationid="huanghaohang" creationdate="20170910T031314Z">
        <seg>img/profile.png</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>include &lt;s0&gt;"shared"&lt;/s0&gt;, &lt;s1&gt;"api"&lt;/s1&gt;, &lt;s2&gt;"services:webservice"&lt;/s2&gt;, &lt;s3&gt;"services:shared"&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T123539Z" creationid="95" creationdate="20170803T123539Z">
        <seg>include &lt;s0&gt;"shared"&lt;/s0&gt;, &lt;s1&gt;"api"&lt;/s1&gt;, &lt;s2&gt;"services:webservice"&lt;/s2&gt;, &lt;s3&gt;"services:shared"&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>include &lt;s10&gt;'**/*.java'&lt;/s10&gt;
}

&lt;s11&gt;// Create a tree using a map&lt;/s11&gt;
tree = fileTree(dir: &lt;s12&gt;'src'&lt;/s12&gt;, include: &lt;s13&gt;'**/*.java'&lt;/s13&gt;)
tree = fileTree(dir: &lt;s14&gt;'src'&lt;/s14&gt;, includes: [&lt;s15&gt;'**/*.java'&lt;/s15&gt;, &lt;s16&gt;'**/*.xml'&lt;/s16&gt;])
tree = fileTree(dir: &lt;s17&gt;'src'&lt;/s17&gt;, include: &lt;s18&gt;'**/*.java'&lt;/s18&gt;, exclude: &lt;s19&gt;'**/*test*/**'&lt;/s19&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171002T023417Z" creationid="huanghaohang" creationdate="20171002T023417Z">
        <seg>include &lt;s10&gt;'**/*.java'&lt;/s10&gt;
}

&lt;s11&gt;// Create a tree using a map&lt;/s11&gt;
tree = fileTree(dir: &lt;s12&gt;'src'&lt;/s12&gt;, include: &lt;s13&gt;'**/*.java'&lt;/s13&gt;)
tree = fileTree(dir: &lt;s14&gt;'src'&lt;/s14&gt;, includes: [&lt;s15&gt;'**/*.java'&lt;/s15&gt;, &lt;s16&gt;'**/*.xml'&lt;/s16&gt;])
tree = fileTree(dir: &lt;s17&gt;'src'&lt;/s17&gt;, include: &lt;s18&gt;'**/*.java'&lt;/s18&gt;, exclude: &lt;s19&gt;'**/*test*/**'&lt;/s19&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>include &lt;s2&gt;'**/*.html'&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171015T075120Z" creationid="huanghaohang" creationdate="20171015T075120Z">
        <seg>include &lt;s2&gt;'**/*.html'&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>include &lt;s2&gt;'org/gradle/api/**'&lt;/s2&gt;
}

&lt;s3&gt;// Add trees together&lt;/s3&gt;
FileTree sum = tree + fileTree(dir: &lt;s4&gt;'src/test'&lt;/s4&gt;)

&lt;s5&gt;// Visit the elements of the tree&lt;/s5&gt;
tree.visit {element -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171002T023627Z" creationid="huanghaohang" creationdate="20171002T023627Z">
        <seg>include &lt;s2&gt;'org/gradle/api/**'&lt;/s2&gt;
}

&lt;s3&gt;// Add trees together&lt;/s3&gt;
FileTree sum = tree + fileTree(dir: &lt;s4&gt;'src/test'&lt;/s4&gt;)

&lt;s5&gt;// Visit the elements of the tree&lt;/s5&gt;
tree.visit {element -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>include &lt;s3&gt;'**/*.html'&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T060922Z" creationid="huanghaohang" creationdate="20171126T060922Z">
        <seg>include &lt;s3&gt;'**/*.html'&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>include &lt;s3&gt;'**/*.jsp'&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171015T075121Z" creationid="huanghaohang" creationdate="20171015T075121Z">
        <seg>include &lt;s3&gt;'**/*.jsp'&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>include(&lt;s2&gt;'**/*.txt'&lt;/s2&gt;, &lt;s3&gt;'**/*.xml'&lt;/s3&gt;, &lt;s4&gt;'**/*.properties'&lt;/s4&gt;)
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T124612Z" creationid="huanghaohang" creationdate="20170919T124612Z">
        <seg>include(&lt;s2&gt;'**/*.txt'&lt;/s2&gt;, &lt;s3&gt;'**/*.xml'&lt;/s3&gt;, &lt;s4&gt;'**/*.properties'&lt;/s4&gt;)
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>include(&lt;s3&gt;'**/*.txt'&lt;/s3&gt;, &lt;s4&gt;'**/*.xml'&lt;/s4&gt;, &lt;s5&gt;'**/*.properties'&lt;/s5&gt;)
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T082309Z" creationid="huanghaohang" creationdate="20170922T082309Z">
        <seg>include(&lt;s3&gt;'**/*.txt'&lt;/s3&gt;, &lt;s4&gt;'**/*.xml'&lt;/s4&gt;, &lt;s5&gt;'**/*.properties'&lt;/s5&gt;)
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>include(name: &lt;s2&gt;'**.xml'&lt;/s2&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171219T090756Z" creationid="huanghaohang" creationdate="20171219T090756Z">
        <seg>include(name: &lt;s2&gt;'**.xml'&lt;/s2&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>includeCategories &lt;s0&gt;'org.gradle.junit.CategoryA'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T041839Z" creationid="huanghaohang" creationdate="20180406T041839Z">
        <seg>includeCategories &lt;s0&gt;'org.gradle.junit.CategoryA'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>includeGroups &lt;s1&gt;'unitTests'&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T042051Z" creationid="huanghaohang" creationdate="20180406T042051Z">
        <seg>includeGroups &lt;s1&gt;'unitTests'&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>includeTestsMatching &lt;s1&gt;"*UiCheck"&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180405T131638Z" creationid="huanghaohang" creationdate="20180405T131638Z">
        <seg>includeTestsMatching &lt;s1&gt;"*UiCheck"&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>includeTestsMatching &lt;s3&gt;"org.gradle.internal.*"&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180405T131640Z" creationid="huanghaohang" creationdate="20180405T131640Z">
        <seg>includeTestsMatching &lt;s3&gt;"org.gradle.internal.*"&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>includeTestsMatching &lt;s5&gt;"*IntegTest"&lt;/s5&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180405T131641Z" creationid="huanghaohang" creationdate="20180405T131641Z">
        <seg>includeTestsMatching &lt;s5&gt;"*IntegTest"&lt;/s5&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>init.gradle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180107T144025Z" creationid="huanghaohang" creationdate="20180107T144025Z">
        <seg>init.gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>inputs.file copyTask &lt;s0&gt;// up-to-date check for inputs, plus add copyTask as dependency&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171015T124925Z" creationid="huanghaohang" creationdate="20171015T124925Z">
        <seg>inputs.file copyTask &lt;s0&gt;// up-to-date check for inputs, plus add copyTask as dependency&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>inputs.file srcFile</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T003854Z" creationid="huanghaohang" creationdate="20170923T003854Z">
        <seg>inputs.file srcFile</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>installation.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T072426Z" creationid="95" creationdate="20170723T072426Z">
        <seg>installation.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>installation.html#N10116</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T013320Z" creationid="huanghaohang" creationdate="20170919T013320Z">
        <seg>installation.html#N10116</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>installation.html#N10123</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T013330Z" creationid="huanghaohang" creationdate="20170919T013330Z">
        <seg>installation.html#N10123</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>installation.html#N1012C</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T013337Z" creationid="huanghaohang" creationdate="20170919T013337Z">
        <seg>installation.html#N1012C</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>installation.html#N10148</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T013343Z" creationid="huanghaohang" creationdate="20170919T013343Z">
        <seg>installation.html#N10148</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>installation.html#N10155</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T013349Z" creationid="huanghaohang" creationdate="20170919T013349Z">
        <seg>installation.html#N10155</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>installation.html#N10160</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T013359Z" creationid="huanghaohang" creationdate="20170919T013359Z">
        <seg>installation.html#N10160</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>intTest
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T094628Z" creationid="haohang" creationdate="20180326T094628Z">
        <seg>intTest
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>intTest
}

dependencies {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T094841Z" creationid="haohang" creationdate="20180326T094841Z">
        <seg>intTest
}

dependencies {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>intTestCompile &lt;s0&gt;'junit:junit:4.11'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T094842Z" creationid="haohang" creationdate="20180326T094842Z">
        <seg>intTestCompile &lt;s0&gt;'junit:junit:4.11'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>intTestRuntime &lt;s1&gt;'org.ow2.asm:asm-all:4.0'&lt;/s1&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T094843Z" creationid="haohang" creationdate="20180326T094843Z">
        <seg>intTestRuntime &lt;s1&gt;'org.ow2.asm:asm-all:4.0'&lt;/s1&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>into &lt;s0&gt;"$buildDir/libs"&lt;/s0&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T125151Z" creationid="huanghaohang" creationdate="20171126T125151Z">
        <seg>into &lt;s0&gt;"$buildDir/libs"&lt;/s0&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>into &lt;s0&gt;'build/explodedWar'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T060920Z" creationid="huanghaohang" creationdate="20171126T060920Z">
        <seg>into &lt;s0&gt;'build/explodedWar'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>into &lt;s1&gt;'build/explodedWar'&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171015T075118Z" creationid="huanghaohang" creationdate="20171015T075118Z">
        <seg>into &lt;s1&gt;'build/explodedWar'&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>into &lt;s1&gt;'build/explodedWar'&lt;/s1&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171002T135609Z" creationid="huanghaohang" creationdate="20171002T135609Z">
        <seg>into &lt;s1&gt;'build/explodedWar'&lt;/s1&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>into &lt;s1&gt;'target'&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T124611Z" creationid="huanghaohang" creationdate="20170919T124611Z">
        <seg>into &lt;s1&gt;'target'&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>into &lt;s2&gt;'target'&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T082304Z" creationid="huanghaohang" creationdate="20170922T082304Z">
        <seg>into &lt;s2&gt;'target'&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>into &lt;s3&gt;'build/explodedWar'&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T060341Z" creationid="huanghaohang" creationdate="20171126T060341Z">
        <seg>into &lt;s3&gt;'build/explodedWar'&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>into &lt;s4&gt;'some-dir'&lt;/s4&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171015T124930Z" creationid="huanghaohang" creationdate="20171015T124930Z">
        <seg>into &lt;s4&gt;'some-dir'&lt;/s4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>into dest
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T132956Z" creationid="huanghaohang" creationdate="20170913T132956Z">
        <seg>into dest
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>into { getDestDir() }
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171015T075033Z" creationid="huanghaohang" creationdate="20171015T075033Z">
        <seg>into { getDestDir() }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>into(&lt;s1&gt;'libs'&lt;/s1&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T125719Z" creationid="95" creationdate="20170803T125719Z">
        <seg>into(&lt;s1&gt;'libs'&lt;/s1&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>into(&lt;s2&gt;'libs'&lt;/s2&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T135316Z" creationid="huanghaohang" creationdate="20171126T135316Z">
        <seg>into(&lt;s2&gt;'libs'&lt;/s2&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>into(&lt;s4&gt;'libs'&lt;/s4&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T060923Z" creationid="huanghaohang" creationdate="20171126T060923Z">
        <seg>into(&lt;s4&gt;'libs'&lt;/s4&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>into(buildDir)
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T120842Z" creationid="huanghaohang" creationdate="20170919T120842Z">
        <seg>into(buildDir)
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>introduction.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072249Z" creationid="haohang" creationdate="20170720T072249Z">
        <seg>introduction.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>introduction.html#N10048</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072433Z" creationid="haohang" creationdate="20170720T072433Z">
        <seg>introduction.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ivy {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T044949Z" creationid="huanghaohang" creationdate="20170908T044949Z">
        <seg>ivy {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ivy-publish</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180207T143845Z" creationid="huanghaohang" creationdate="20180207T143845Z">
        <seg>ivy-publish</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>jacoco</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180211T090454Z" creationid="huanghaohang" creationdate="20180211T090454Z">
        <seg>jacoco</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>jacoco_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180211T090451Z" creationid="huanghaohang" creationdate="20180211T090451Z">
        <seg>jacoco_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>jar</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180312T062909Z" creationid="haohang" creationdate="20180312T062909Z">
        <seg>jar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>jar {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T124429Z" creationid="95" creationdate="20170803T124429Z">
        <seg>jar {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>jar.manifest.writeTo(&lt;s0&gt;"$buildDir/mymanifest.mf"&lt;/s0&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T113344Z" creationid="huanghaohang" creationdate="20180406T113344Z">
        <seg>jar.manifest.writeTo(&lt;s0&gt;"$buildDir/mymanifest.mf"&lt;/s0&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180205T140617Z" creationid="huanghaohang" creationdate="20180205T140617Z">
        <seg>java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>java {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T053344Z" creationid="haohang" creationdate="20180313T053344Z">
        <seg>java {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>java-base</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180205T140630Z" creationid="huanghaohang" creationdate="20180205T140630Z">
        <seg>java-base</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>java-base, java, jacoco</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180211T090026Z" creationid="huanghaohang" creationdate="20180211T090026Z">
        <seg>java-base，java，jacoco</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>java-library-distribution</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180207T143756Z" creationid="huanghaohang" creationdate="20180207T143756Z">
        <seg>java-library-distribution</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>java.srcDirs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180320T100351Z" creationid="haohang" creationdate="20180320T100351Z">
        <seg>java.srcDirs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>javaLibraryDistribution_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180207T143755Z" creationid="huanghaohang" creationdate="20180207T143755Z">
        <seg>javaLibraryDistribution_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>java_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T130000Z" creationid="95" creationdate="20170803T130000Z">
        <seg>java_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>java_plugin.html#java_source_set_configurations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T094629Z" creationid="haohang" creationdate="20180326T094629Z">
        <seg>java_plugin.html#java_source_set_configurations</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>java_plugin.html#java_source_set_tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T094843Z" creationid="haohang" creationdate="20180326T094843Z">
        <seg>java_plugin.html#java_source_set_tasks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>java_plugin.html#sec:compile</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180407T003404Z" creationid="huanghaohang" creationdate="20180407T003404Z">
        <seg>java_plugin.html#sec:compile</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>java_plugin.html#sec:source_sets</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T150855Z" creationid="huanghaohang" creationdate="20170927T150855Z">
        <seg>java_plugin.html#sec:source_sets</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>java_plugin.html#tab:configurations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T032333Z" creationid="huanghaohang" creationdate="20170908T032333Z">
        <seg>java_plugin.html#tab:configurations</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>javadoc</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180312T062924Z" creationid="haohang" creationdate="20180312T062924Z">
        <seg>javadoc</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>jdepend</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180211T085813Z" creationid="huanghaohang" creationdate="20180211T085813Z">
        <seg>jdepend</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>jdepend_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180211T085812Z" creationid="huanghaohang" creationdate="20180211T085812Z">
        <seg>jdepend_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>jetty</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180206T014509Z" creationid="huanghaohang" creationdate="20180206T014509Z">
        <seg>jetty</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>jetty_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T010149Z" creationid="huanghaohang" creationdate="20170909T010149Z">
        <seg>jetty_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>libs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T061433Z" creationid="haohang" creationdate="20180313T061433Z">
        <seg>libs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>libsDir</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T061530Z" creationid="haohang" creationdate="20180313T061530Z">
        <seg>libsDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>libsDirName</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T061432Z" creationid="haohang" creationdate="20180313T061432Z">
        <seg>libsDirName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>logger.quiet(&lt;s0&gt;'An info log message which is always logged.'&lt;/s0&gt;)
logger.error(&lt;s1&gt;'An error log message.'&lt;/s1&gt;)
logger.warn(&lt;s2&gt;'A warning log message.'&lt;/s2&gt;)
logger.lifecycle(&lt;s3&gt;'A lifecycle info log message.'&lt;/s3&gt;)
logger.info(&lt;s4&gt;'An info log message.'&lt;/s4&gt;)
logger.debug(&lt;s5&gt;'A debug log message.'&lt;/s5&gt;)
logger.trace(&lt;s6&gt;'A trace log message.'&lt;/s6&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180107T012509Z" creationid="huanghaohang" creationdate="20180107T012509Z">
        <seg>logger.quiet(&lt;s0&gt;'An info log message which is always logged.'&lt;/s0&gt;)
logger.error(&lt;s1&gt;'An error log message.'&lt;/s1&gt;)
logger.warn(&lt;s2&gt;'A warning log message.'&lt;/s2&gt;)
logger.lifecycle(&lt;s3&gt;'A lifecycle info log message.'&lt;/s3&gt;)
logger.info(&lt;s4&gt;'An info log message.'&lt;/s4&gt;)
logger.debug(&lt;s5&gt;'A debug log message.'&lt;/s5&gt;)
logger.trace(&lt;s6&gt;'A trace log message.'&lt;/s6&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>logging.captureStandardOutput LogLevel.INFO</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180107T025424Z" creationid="huanghaohang" creationdate="20180107T025424Z">
        <seg>logging.captureStandardOutput LogLevel.INFO</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>logging.captureStandardOutput LogLevel.INFO
println &lt;s0&gt;'A message which is logged at INFO level'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180107T025329Z" creationid="huanghaohang" creationdate="20180107T025329Z">
        <seg>logging.captureStandardOutput LogLevel.INFO
println &lt;s0&gt;'A message which is logged at INFO level'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>logging.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T145142Z" creationid="95" creationdate="20170724T145142Z">
        <seg>logging.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>logging.html#logLevelCommandLineOptions</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T221600Z" creationid="huanghaohang" creationdate="20180105T221600Z">
        <seg>logging.html#logLevelCommandLineOptions</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>logging.html#logLevels</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T095046Z" creationid="huanghaohang" creationdate="20180105T095046Z">
        <seg>logging.html#logLevels</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>logging.html#stacktraces</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T221609Z" creationid="huanghaohang" creationdate="20180105T221609Z">
        <seg>logging.html#stacktraces</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>main {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T133544Z" creationid="huanghaohang" creationdate="20170913T133544Z">
        <seg>main {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>manifest</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180318T010640Z" creationid="huanghaohang" creationdate="20180318T010640Z">
        <seg>manifest</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>manifest = project.manifest {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T111610Z" creationid="huanghaohang" creationdate="20180406T111610Z">
        <seg>manifest = project.manifest {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>manifest {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T132604Z" creationid="95" creationdate="20170730T132604Z">
        <seg>manifest {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>manifest.attributes provider: &lt;s4&gt;'gradle'&lt;/s4&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T124430Z" creationid="95" creationdate="20170803T124430Z">
        <seg>manifest.attributes provider: &lt;s4&gt;'gradle'&lt;/s4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>manufactured viewport for HTML img</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T031313Z" creationid="huanghaohang" creationdate="20170910T031313Z">
        <seg>为HTML img制作的viewport</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>maven</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180207T143406Z" creationid="huanghaohang" creationdate="20180207T143406Z">
        <seg>maven</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>maven {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T044839Z" creationid="huanghaohang" creationdate="20170908T044839Z">
        <seg>maven {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>maven-publish</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180207T143917Z" creationid="huanghaohang" creationdate="20180207T143917Z">
        <seg>maven-publish</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>mavenCentral()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T124426Z" creationid="95" creationdate="20170803T124426Z">
        <seg>mavenCentral()
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>mavenCentral()
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T124333Z" creationid="95" creationdate="20170730T124333Z">
        <seg>mavenCentral()
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>mavenCentral()
}

dependencies {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T154112Z" creationid="95" creationdate="20170731T154112Z">
        <seg>mavenCentral()
}

dependencies {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>mavenDeployer {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T051008Z" creationid="huanghaohang" creationdate="20170908T051008Z">
        <seg>mavenDeployer {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>maven_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180207T143259Z" creationid="huanghaohang" creationdate="20180207T143259Z">
        <seg>maven_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>module(&lt;s5&gt;'org.apache.ant:ant:1.9.3'&lt;/s5&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T123342Z" creationid="huanghaohang" creationdate="20180406T123342Z">
        <seg>module(&lt;s5&gt;'org.apache.ant:ant:1.9.3'&lt;/s5&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>more_about_tasks.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T030624Z" creationid="95" creationdate="20170729T030624Z">
        <seg>more_about_tasks.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>more_about_tasks.html#N10CBF</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180201T021641Z" creationid="huanghaohang" creationdate="20180201T021641Z">
        <seg>more_about_tasks.html#N10CBF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>more_about_tasks.html#N10CF6</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180201T021648Z" creationid="huanghaohang" creationdate="20180201T021648Z">
        <seg>more_about_tasks.html#N10CF6</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>more_about_tasks.html#N10E91</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180201T021714Z" creationid="huanghaohang" creationdate="20180201T021714Z">
        <seg>more_about_tasks.html#N10E91</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>more_about_tasks.html#N10EA3</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180201T021724Z" creationid="huanghaohang" creationdate="20180201T021724Z">
        <seg>more_about_tasks.html#N10EA3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>more_about_tasks.html#N10EC0</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180201T021730Z" creationid="huanghaohang" creationdate="20180201T021730Z">
        <seg>more_about_tasks.html#N10EC0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>more_about_tasks.html#N10F94</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180201T021747Z" creationid="huanghaohang" creationdate="20180201T021747Z">
        <seg>more_about_tasks.html#N10F94</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>more_about_tasks.html#N10FC0</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180201T021753Z" creationid="huanghaohang" creationdate="20180201T021753Z">
        <seg>more_about_tasks.html#N10FC0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>more_about_tasks.html#sec:adding_dependencies_to_tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T160405Z" creationid="95" creationdate="20170726T160405Z">
        <seg>more_about_tasks.html#sec:adding_dependencies_to_tasks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>more_about_tasks.html#sec:configuring_tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180201T021654Z" creationid="huanghaohang" creationdate="20180201T021654Z">
        <seg>more_about_tasks.html#sec:configuring_tasks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>more_about_tasks.html#sec:ordering_tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180201T021708Z" creationid="huanghaohang" creationdate="20180201T021708Z">
        <seg>more_about_tasks.html#sec:ordering_tasks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>more_about_tasks.html#sec:the_idea_behind_gradle_tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180201T021800Z" creationid="huanghaohang" creationdate="20180201T021800Z">
        <seg>more_about_tasks.html#sec:the_idea_behind_gradle_tasks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>more_about_tasks.html#sec:up_to_date_checks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171015T075133Z" creationid="huanghaohang" creationdate="20171015T075133Z">
        <seg>more_about_tasks.html#sec:up_to_date_checks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>mountains.mountain.each { mountain -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T085713Z" creationid="huanghaohang" creationdate="20170922T085713Z">
        <seg>mountains.mountain.each { mountain -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>multi_project_builds.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T123549Z" creationid="95" creationdate="20170803T123549Z">
        <seg>multi_project_builds.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>multi_project_builds.html#disable_dependency_projects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T125334Z" creationid="95" creationdate="20170803T125334Z">
        <seg>multi_project_builds.html#disable_dependency_projects</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>multi_project_builds.html#sec:configuration_on_demand</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180126T013334Z" creationid="huanghaohang" creationdate="20180126T013334Z">
        <seg>multi_project_builds.html#sec:configuration_on_demand</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>multiproject/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T154455Z" creationid="95" creationdate="20170731T154455Z">
        <seg>multiproject/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>name</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T132126Z" creationid="huanghaohang" creationdate="20170913T132126Z">
        <seg>name</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>native language plugins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180211T090655Z" creationid="huanghaohang" creationdate="20180211T090655Z">
        <seg>本机语言插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>nativeBinaries.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180205T142859Z" creationid="huanghaohang" creationdate="20180205T142859Z">
        <seg>nativeBinaries.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>no logging options</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T221911Z" creationid="huanghaohang" creationdate="20180105T221911Z">
        <seg>没有日志选项</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>null</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233151Z" creationid="huanghaohang" creationdate="20171206T233151Z">
        <seg>null</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>objective-c</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180205T143036Z" creationid="huanghaohang" creationdate="20180205T143036Z">
        <seg>objective-c</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>objective-cpp</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180205T143055Z" creationid="huanghaohang" creationdate="20180205T143055Z">
        <seg>objective-cpp</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>or</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155848Z" creationid="95" creationdate="20170726T155848Z">
        <seg>或者</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>org.gradle.configureondemand</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180126T013325Z" creationid="huanghaohang" creationdate="20180126T013325Z">
        <seg>org.gradle.configureondemand</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>org.gradle.daemon</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180126T012231Z" creationid="huanghaohang" creationdate="20180126T012231Z">
        <seg>org.gradle.daemon</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>org.gradle.java.home</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180126T012616Z" creationid="huanghaohang" creationdate="20180126T012616Z">
        <seg>org.gradle.java.home</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>org.gradle.jvmargs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180126T013102Z" creationid="huanghaohang" creationdate="20180126T013102Z">
        <seg>org.gradle.jvmargs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>org.gradle.parallel</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180126T020535Z" creationid="huanghaohang" creationdate="20180126T020535Z">
        <seg>org.gradle.parallel</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>organizing_build_logic.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T023517Z" creationid="95" creationdate="20170729T023517Z">
        <seg>organizing_build_logic.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>organizing_build_logic.html#sec:external_dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180130T093450Z" creationid="huanghaohang" creationdate="20180130T093450Z">
        <seg>organizing_build_logic.html#sec:external_dependencies</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>osgi</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180207T143429Z" creationid="huanghaohang" creationdate="20180207T143429Z">
        <seg>osgi</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>osgi_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180207T143427Z" creationid="huanghaohang" creationdate="20180207T143427Z">
        <seg>osgi_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>other.gradle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170918T145337Z" creationid="huanghaohang" creationdate="20170918T145337Z">
        <seg>other.gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>output</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180320T095101Z" creationid="haohang" creationdate="20180320T095101Z">
        <seg>output</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>output.classesDir</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180320T095129Z" creationid="haohang" creationdate="20180320T095129Z">
        <seg>output.classesDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>output.resourcesDir</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180320T095212Z" creationid="haohang" creationdate="20180320T095212Z">
        <seg>output.resourcesDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>outputs.dir &lt;s1&gt;'some-dir'&lt;/s1&gt; &lt;s2&gt;// up-to-date check for outputs&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171015T124926Z" creationid="huanghaohang" creationdate="20171015T124926Z">
        <seg>outputs.dir &lt;s1&gt;'some-dir'&lt;/s1&gt; &lt;s2&gt;// up-to-date check for outputs&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>outputs.dir destDir</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T003856Z" creationid="huanghaohang" creationdate="20170923T003856Z">
        <seg>outputs.dir destDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>overview.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072441Z" creationid="haohang" creationdate="20170720T072441Z">
        <seg>overview.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>overview.html#sec:special_feature_of_gradle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072444Z" creationid="haohang" creationdate="20170720T072444Z">
        <seg>overview.html#sec:special_feature_of_gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>overview.html#sec:why_groovy</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072449Z" creationid="haohang" creationdate="20170720T072449Z">
        <seg>overview.html#sec:why_groovy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>password &lt;s1&gt;"pw"&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T050453Z" creationid="huanghaohang" creationdate="20170908T050453Z">
        <seg>password &lt;s1&gt;"pw"&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>path</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T132137Z" creationid="huanghaohang" creationdate="20170913T132137Z">
        <seg>path</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>path.list().each {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171219T091124Z" creationid="huanghaohang" creationdate="20171219T091124Z">
        <seg>path.list().each {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>plugin {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T133547Z" creationid="huanghaohang" creationdate="20170913T133547Z">
        <seg>plugin {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>plugins.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180123T123627Z" creationid="huanghaohang" creationdate="20180123T123627Z">
        <seg>plugins.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>plugins.html#sub:more_about_convention_objects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T054459Z" creationid="haohang" creationdate="20180313T054459Z">
        <seg>plugins.html#sub:more_about_convention_objects</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>pmd</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180211T085852Z" creationid="huanghaohang" creationdate="20180211T085852Z">
        <seg>pmd</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>pmd
}

dependencies {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T084252Z" creationid="huanghaohang" creationdate="20180105T084252Z">
        <seg>pmd
}

dependencies {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>pmd group: &lt;s0&gt;'pmd'&lt;/s0&gt;, name: &lt;s1&gt;'pmd'&lt;/s1&gt;, version: &lt;s2&gt;'4.2.5'&lt;/s2&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T084253Z" creationid="huanghaohang" creationdate="20180105T084253Z">
        <seg>pmd group: &lt;s0&gt;'pmd'&lt;/s0&gt;, name: &lt;s1&gt;'pmd'&lt;/s1&gt;, version: &lt;s2&gt;'4.2.5'&lt;/s2&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>pmd_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T135423Z" creationid="95" creationdate="20170721T135423Z">
        <seg>-pmd_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s0&gt;"We build the zip with version=$version"&lt;/s0&gt;
}

task release(dependsOn: &lt;s1&gt;'distribution'&lt;/s1&gt;) &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T025304Z" creationid="95" creationdate="20170729T025304Z">
        <seg>println &lt;s0&gt;"We build the zip with version=$version"&lt;/s0&gt;
}

task release(dependsOn: &lt;s1&gt;'distribution'&lt;/s1&gt;) &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s0&gt;"configuring $project"&lt;/s0&gt;
task hello &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170918T145339Z" creationid="huanghaohang" creationdate="20170918T145339Z">
        <seg>println &lt;s0&gt;"configuring $project"&lt;/s0&gt;
task hello &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s0&gt;"hello"&lt;/s0&gt;
}

task(copy, type: Copy) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T120835Z" creationid="huanghaohang" creationdate="20170919T120835Z">
        <seg>println &lt;s0&gt;"hello"&lt;/s0&gt;
}

task(copy, type: Copy) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s0&gt;"in a closure"&lt;/s0&gt;
}
repositories() { println &lt;s1&gt;"in a closure"&lt;/s1&gt; }
repositories({ println &lt;s2&gt;"in a closure"&lt;/s2&gt; })</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T141919Z" creationid="huanghaohang" creationdate="20170913T141919Z">
        <seg>println &lt;s0&gt;"in a closure"&lt;/s0&gt;
}
repositories() { println &lt;s1&gt;"in a closure"&lt;/s1&gt; }
repositories({ println &lt;s2&gt;"in a closure"&lt;/s2&gt; })</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s0&gt;"using build file '$buildFile.name' in '$buildFile.parentFile.name'."&lt;/s0&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T114014Z" creationid="huanghaohang" creationdate="20170909T114014Z">
        <seg>println &lt;s0&gt;"using build file '$buildFile.name' in '$buildFile.parentFile.name'."&lt;/s0&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s0&gt;'A message which is logged at QUIET level'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180107T012024Z" creationid="huanghaohang" creationdate="20180107T012024Z">
        <seg>println &lt;s0&gt;'A message which is logged at QUIET level'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s0&gt;'A task message which is logged at INFO level'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180107T025426Z" creationid="huanghaohang" creationdate="20180107T025426Z">
        <seg>println &lt;s0&gt;'A task message which is logged at INFO level'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s0&gt;'Hello Earth'&lt;/s0&gt;
}
hello.doFirst {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T133109Z" creationid="95" creationdate="20170727T133109Z">
        <seg>println &lt;s0&gt;'Hello Earth'&lt;/s0&gt;
}
hello.doFirst {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s0&gt;'Hello world!'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T144950Z" creationid="95" creationdate="20170724T144950Z">
        <seg>println &lt;s0&gt;'Hello world!'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s0&gt;'Hello world!'&lt;/s0&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155317Z" creationid="95" creationdate="20170726T155317Z">
        <seg>println &lt;s0&gt;'Hello world!'&lt;/s0&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s0&gt;'Hello world!'&lt;/s0&gt;
}
hello.doLast {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T141337Z" creationid="95" creationdate="20170727T141337Z">
        <seg>println &lt;s0&gt;'Hello world!'&lt;/s0&gt;
}
hello.doLast {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s0&gt;'Hello world!'&lt;/s0&gt;
}
task intro(dependsOn: hello) &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T160117Z" creationid="95" creationdate="20170726T160117Z">
        <seg>println &lt;s0&gt;'Hello world!'&lt;/s0&gt;
}
task intro(dependsOn: hello) &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s0&gt;'This should not be printed if the task is disabled.'&lt;/s0&gt;
}
disableMe.enabled = false</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T085326Z" creationid="huanghaohang" creationdate="20170922T085326Z">
        <seg>println &lt;s0&gt;'This should not be printed if the task is disabled.'&lt;/s0&gt;
}
disableMe.enabled = false</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s0&gt;'We are doing the compile.'&lt;/s0&gt;
}

compile.doFirst {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T084833Z" creationid="huanghaohang" creationdate="20170922T084833Z">
        <seg>println &lt;s0&gt;'We are doing the compile.'&lt;/s0&gt;
}

compile.doFirst {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s0&gt;'compiling source'&lt;/s0&gt;
}

task compileTest(dependsOn: compile) &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T031126Z" creationid="huanghaohang" creationdate="20170909T031126Z">
        <seg>println &lt;s0&gt;'compiling source'&lt;/s0&gt;
}

task compileTest(dependsOn: compile) &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s0&gt;'hello world'&lt;/s0&gt;
}

hello.onlyIf { !project.hasProperty(&lt;s1&gt;'skipHello'&lt;/s1&gt;) }</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T084155Z" creationid="huanghaohang" creationdate="20170922T084155Z">
        <seg>println &lt;s0&gt;'hello world'&lt;/s0&gt;
}

hello.onlyIf { !project.hasProperty(&lt;s1&gt;'skipHello'&lt;/s1&gt;) }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s0&gt;'taskX'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T044133Z" creationid="huanghaohang" creationdate="20170923T044133Z">
        <seg>println &lt;s0&gt;'taskX'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s0&gt;'taskX'&lt;/s0&gt;
}

task taskY &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T130249Z" creationid="huanghaohang" creationdate="20170919T130249Z">
        <seg>println &lt;s0&gt;'taskX'&lt;/s0&gt;
}

task taskY &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s0&gt;'taskX'&lt;/s0&gt;
}

taskX.dependsOn {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T130916Z" creationid="huanghaohang" creationdate="20170919T130916Z">
        <seg>println &lt;s0&gt;'taskX'&lt;/s0&gt;
}

taskX.dependsOn {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s0&gt;'taskX'&lt;/s0&gt;
}
task taskY &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T032048Z" creationid="huanghaohang" creationdate="20170922T032048Z">
        <seg>println &lt;s0&gt;'taskX'&lt;/s0&gt;
}
task taskY &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s11&gt;'build completed'&lt;/s11&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180107T144032Z" creationid="huanghaohang" creationdate="20180107T144032Z">
        <seg>println &lt;s11&gt;'build completed'&lt;/s11&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s1&gt;"Greetings from the $hello.name task."&lt;/s1&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T141341Z" creationid="95" creationdate="20170727T141341Z">
        <seg>println &lt;s1&gt;"Greetings from the $hello.name task."&lt;/s1&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s1&gt;"I'm Gradle"&lt;/s1&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T160119Z" creationid="95" creationdate="20170726T160119Z">
        <seg>println &lt;s1&gt;"I'm Gradle"&lt;/s1&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s1&gt;"I'm task number $counter"&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T132726Z" creationid="95" creationdate="20170727T132726Z">
        <seg>println &lt;s1&gt;"I'm task number $counter"&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s1&gt;"Original: "&lt;/s1&gt; + someString</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155826Z" creationid="95" creationdate="20170726T155826Z">
        <seg>println &lt;s1&gt;"Original: "&lt;/s1&gt; + someString</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s1&gt;"hello"&lt;/s1&gt;
}

task(&lt;s2&gt;'copy'&lt;/s2&gt;, type: Copy) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T121055Z" creationid="huanghaohang" creationdate="20170919T121055Z">
        <seg>println &lt;s1&gt;"hello"&lt;/s1&gt;
}

task(&lt;s2&gt;'copy'&lt;/s2&gt;, type: Copy) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s1&gt;"hello"&lt;/s1&gt;
}

tasks.create(name: &lt;s2&gt;'copy'&lt;/s2&gt;, type: Copy) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T121137Z" creationid="huanghaohang" creationdate="20170919T121137Z">
        <seg>println &lt;s1&gt;"hello"&lt;/s1&gt;
}

tasks.create(name: &lt;s2&gt;'copy'&lt;/s2&gt;, type: Copy) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s1&gt;'Hello Venus'&lt;/s1&gt;
}
hello.doLast {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T133111Z" creationid="95" creationdate="20170727T133111Z">
        <seg>println &lt;s1&gt;'Hello Venus'&lt;/s1&gt;
}
hello.doLast {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s1&gt;'Hello, from Gradle'&lt;/s1&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T084638Z" creationid="huanghaohang" creationdate="20180105T084638Z">
        <seg>println &lt;s1&gt;'Hello, from Gradle'&lt;/s1&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s1&gt;'compiling unit tests'&lt;/s1&gt;
}

task test(dependsOn: [compile, compileTest]) &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T031134Z" creationid="huanghaohang" creationdate="20170909T031134Z">
        <seg>println &lt;s1&gt;'compiling unit tests'&lt;/s1&gt;
}

task test(dependsOn: [compile, compileTest]) &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s1&gt;'hello from other script'&lt;/s1&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170918T145341Z" creationid="huanghaohang" creationdate="20170918T145341Z">
        <seg>println &lt;s1&gt;'hello from other script'&lt;/s1&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s1&gt;'taskX'&lt;/s1&gt;
}
task taskY &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T160344Z" creationid="95" creationdate="20170726T160344Z">
        <seg>println &lt;s1&gt;'taskX'&lt;/s1&gt;
}
task taskY &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s1&gt;'taskY'&lt;/s1&gt;
}

taskX.dependsOn taskY</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T130250Z" creationid="huanghaohang" creationdate="20170919T130250Z">
        <seg>println &lt;s1&gt;'taskY'&lt;/s1&gt;
}

taskX.dependsOn taskY</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s1&gt;'taskY'&lt;/s1&gt;
}

taskX.finalizedBy taskY</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T044045Z" creationid="huanghaohang" creationdate="20170923T044045Z">
        <seg>println &lt;s1&gt;'taskY'&lt;/s1&gt;
}

taskX.finalizedBy taskY</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s1&gt;'taskY'&lt;/s1&gt;
}
task taskZ &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T081551Z" creationid="huanghaohang" creationdate="20170922T081551Z">
        <seg>println &lt;s1&gt;'taskY'&lt;/s1&gt;
}
task taskZ &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s1&gt;'taskY'&lt;/s1&gt;
}
taskY.mustRunAfter taskX</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T032049Z" creationid="huanghaohang" creationdate="20170922T032049Z">
        <seg>println &lt;s1&gt;'taskY'&lt;/s1&gt;
}
taskY.mustRunAfter taskX</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s1&gt;'taskY'&lt;/s1&gt;
}
taskY.shouldRunAfter taskX</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T035718Z" creationid="huanghaohang" creationdate="20170922T035718Z">
        <seg>println &lt;s1&gt;'taskY'&lt;/s1&gt;
}
taskY.shouldRunAfter taskX</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s2&gt;" *** $file.name ***"&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170728T153803Z" creationid="95" creationdate="20170728T153803Z">
        <seg>println &lt;s2&gt;" *** $file.name ***"&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s2&gt;"$file.name Checksum: ${ant.properties["&lt;/s2&gt;cs_$file.name&lt;s3&gt;"]}"&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T023459Z" creationid="95" creationdate="20170729T023459Z">
        <seg>println &lt;s2&gt;"$file.name Checksum: ${ant.properties["&lt;/s2&gt;cs_$file.name&lt;s3&gt;"]}"&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s2&gt;"Contents of $srcDir.name"&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T150352Z" creationid="huanghaohang" creationdate="20170927T150352Z">
        <seg>println &lt;s2&gt;"Contents of $srcDir.name"&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s2&gt;"Upper case: "&lt;/s2&gt; + someString.toUpperCase()
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155827Z" creationid="95" creationdate="20170726T155827Z">
        <seg>println &lt;s2&gt;"Upper case: "&lt;/s2&gt; + someString.toUpperCase()
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s2&gt;'Default Cleaning!'&lt;/s2&gt;
}

task run &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T023909Z" creationid="95" creationdate="20170729T023909Z">
        <seg>println &lt;s2&gt;'Default Cleaning!'&lt;/s2&gt;
}

task run &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s2&gt;'Hello Mars'&lt;/s2&gt;
}
hello &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T133111Z" creationid="95" creationdate="20170727T133111Z">
        <seg>println &lt;s2&gt;'Hello Mars'&lt;/s2&gt;
}
hello &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s2&gt;'We release now'&lt;/s2&gt;
}

gradle.taskGraph.whenReady {taskGraph -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T025305Z" creationid="95" creationdate="20170729T025305Z">
        <seg>println &lt;s2&gt;'We release now'&lt;/s2&gt;
}

gradle.taskGraph.whenReady {taskGraph -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s2&gt;'lib1'&lt;/s2&gt;
}

task lib2 &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T130917Z" creationid="huanghaohang" creationdate="20170919T130917Z">
        <seg>println &lt;s2&gt;'lib1'&lt;/s2&gt;
}

task lib2 &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s2&gt;'running unit tests'&lt;/s2&gt;
}

task dist(dependsOn: [compile, test]) &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T031144Z" creationid="huanghaohang" creationdate="20170909T031144Z">
        <seg>println &lt;s2&gt;'running unit tests'&lt;/s2&gt;
}

task dist(dependsOn: [compile, test]) &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s2&gt;'taskX'&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T130153Z" creationid="huanghaohang" creationdate="20170919T130153Z">
        <seg>println &lt;s2&gt;'taskX'&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s2&gt;'taskY'&lt;/s2&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T160347Z" creationid="95" creationdate="20170726T160347Z">
        <seg>println &lt;s2&gt;'taskY'&lt;/s2&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s2&gt;'taskZ'&lt;/s2&gt;
}
taskX.dependsOn taskY
taskY.dependsOn taskZ
taskZ.shouldRunAfter taskX</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T081553Z" creationid="huanghaohang" creationdate="20170922T081553Z">
        <seg>println &lt;s2&gt;'taskZ'&lt;/s2&gt;
}
taskX.dependsOn taskY
taskY.dependsOn taskZ
taskZ.shouldRunAfter taskX</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s3&gt;"${ant.properties[file.name]}"&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170728T153804Z" creationid="95" creationdate="20170728T153804Z">
        <seg>println &lt;s3&gt;"${ant.properties[file.name]}"&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s3&gt;"Pinging: "&lt;/s3&gt; + (taskName - &lt;s4&gt;'ping'&lt;/s4&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T011928Z" creationid="huanghaohang" creationdate="20170923T011928Z">
        <seg>println &lt;s3&gt;"Pinging: "&lt;/s3&gt; + (taskName - &lt;s4&gt;'ping'&lt;/s4&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s3&gt;"Transforming source file."&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T085710Z" creationid="huanghaohang" creationdate="20170922T085710Z">
        <seg>println &lt;s3&gt;"Transforming source file."&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s3&gt;'Default Running!'&lt;/s3&gt;
}

task other &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T023910Z" creationid="95" creationdate="20170729T023910Z">
        <seg>println &lt;s3&gt;'Default Running!'&lt;/s3&gt;
}

task other &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s3&gt;'Hello Jupiter'&lt;/s3&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T133114Z" creationid="95" creationdate="20170727T133114Z">
        <seg>println &lt;s3&gt;'Hello Jupiter'&lt;/s3&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s3&gt;'building the distribution'&lt;/s3&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T031146Z" creationid="huanghaohang" creationdate="20170909T031146Z">
        <seg>println &lt;s3&gt;'building the distribution'&lt;/s3&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s3&gt;'lib2'&lt;/s3&gt;
}

task notALib &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T130918Z" creationid="huanghaohang" creationdate="20170919T130918Z">
        <seg>println &lt;s3&gt;'lib2'&lt;/s3&gt;
}

task notALib &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s3&gt;'taskY'&lt;/s3&gt;
}

taskX.finalizedBy taskY</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T044135Z" creationid="huanghaohang" creationdate="20170923T044135Z">
        <seg>println &lt;s3&gt;'taskY'&lt;/s3&gt;
}

taskX.finalizedBy taskY</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s4&gt;"Contents of $srcDir.name"&lt;/s4&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T150354Z" creationid="huanghaohang" creationdate="20170927T150354Z">
        <seg>println &lt;s4&gt;"Contents of $srcDir.name"&lt;/s4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s4&gt;"I'm not a default task!"&lt;/s4&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T023912Z" creationid="95" creationdate="20170729T023912Z">
        <seg>println &lt;s4&gt;"I'm not a default task!"&lt;/s4&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s4&gt;'notALib'&lt;/s4&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T130919Z" creationid="huanghaohang" creationdate="20170919T130919Z">
        <seg>println &lt;s4&gt;'notALib'&lt;/s4&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s4&gt;'taskY'&lt;/s4&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T130158Z" creationid="huanghaohang" creationdate="20170919T130158Z">
        <seg>println &lt;s4&gt;'taskY'&lt;/s4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s5&gt;"I'm fond of $file.name"&lt;/s5&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T023512Z" creationid="95" creationdate="20170729T023512Z">
        <seg>println &lt;s5&gt;"I'm fond of $file.name"&lt;/s5&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s5&gt;'The class directory exists. I can operate'&lt;/s5&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170917T132409Z" creationid="huanghaohang" creationdate="20170917T132409Z">
        <seg>println &lt;s5&gt;'The class directory exists. I can operate'&lt;/s5&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s6&gt;"$element.relativePath =&gt; $element.file"&lt;/s6&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171002T023628Z" creationid="huanghaohang" creationdate="20171002T023628Z">
        <seg>println &lt;s6&gt;"$element.relativePath =&gt; $element.file"&lt;/s6&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s6&gt;"[$task.name]"&lt;/s6&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180107T144028Z" creationid="huanghaohang" creationdate="20180107T144028Z">
        <seg>println &lt;s6&gt;"[$task.name]"&lt;/s6&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s6&gt;'I am not affected'&lt;/s6&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T084839Z" creationid="huanghaohang" creationdate="20170922T084839Z">
        <seg>println &lt;s6&gt;'I am not affected'&lt;/s6&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println System.properties[&lt;s0&gt;'system'&lt;/s0&gt;]
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170917T135031Z" creationid="huanghaohang" creationdate="20170917T135031Z">
        <seg>println System.properties[&lt;s0&gt;'system'&lt;/s0&gt;]
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println ant.antProp
println ant.properties.antProp
println ant.properties[&lt;s0&gt;'antProp'&lt;/s0&gt;]</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T094622Z" creationid="huanghaohang" creationdate="20180105T094622Z">
        <seg>println ant.antProp
println ant.properties.antProp
println ant.properties[&lt;s0&gt;'antProp'&lt;/s0&gt;]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println ant.references.antPath
println ant.references[&lt;s0&gt;'antPath'&lt;/s0&gt;]</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T094739Z" creationid="huanghaohang" creationdate="20180105T094739Z">
        <seg>println ant.references.antPath
println ant.references[&lt;s0&gt;'antPath'&lt;/s0&gt;]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println commandLineProjectProp</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170917T135024Z" creationid="huanghaohang" creationdate="20170917T135024Z">
        <seg>println commandLineProjectProp</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println emailNotification</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T133555Z" creationid="huanghaohang" creationdate="20170913T133555Z">
        <seg>println emailNotification</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println envProjectProp</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170917T135028Z" creationid="huanghaohang" creationdate="20170917T135028Z">
        <seg>println envProjectProp</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println file
}

&lt;s1&gt;// Filter a tree&lt;/s1&gt;
FileTree filtered = tree.matching {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171002T023626Z" creationid="huanghaohang" creationdate="20171002T023626Z">
        <seg>println file
}

&lt;s1&gt;// Filter a tree&lt;/s1&gt;
FileTree filtered = tree.matching {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println file.name
}

&lt;s1&gt;// Convert the collection to various types&lt;/s1&gt;
Set set = collection.files
Set set2 = collection as Set
List list = collection as List
String path = collection.asPath
File file = collection.singleFile
File file2 = collection as File

&lt;s2&gt;// Add and subtract collections&lt;/s2&gt;
def union = collection + files(&lt;s3&gt;'src/file3.txt'&lt;/s3&gt;)
def different = collection - files(&lt;s4&gt;'src/file3.txt'&lt;/s4&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T132331Z" creationid="huanghaohang" creationdate="20170923T132331Z">
        <seg>println file.name
}

&lt;s1&gt;// Convert the collection to various types&lt;/s1&gt;
Set set = collection.files
Set set2 = collection as Set
List list = collection as List
String path = collection.asPath
File file = collection.singleFile
File file2 = collection as File

&lt;s2&gt;// Add and subtract collections&lt;/s2&gt;
def union = collection + files(&lt;s3&gt;'src/file3.txt'&lt;/s3&gt;)
def different = collection - files(&lt;s4&gt;'src/file3.txt'&lt;/s4&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println gradlePropertiesProp</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170917T135025Z" creationid="huanghaohang" creationdate="20170917T135025Z">
        <seg>println gradlePropertiesProp</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println it</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171219T091125Z" creationid="huanghaohang" creationdate="20171219T091125Z">
        <seg>println it</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println main.output.classesDir
}
sourceSets {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180320T094734Z" creationid="haohang" creationdate="20180320T094734Z">
        <seg>println main.output.classesDir
}
sourceSets {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println myTask.myProperty
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T142000Z" creationid="95" creationdate="20170727T142000Z">
        <seg>println myTask.myProperty
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println name
println project.name</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170912T130250Z" creationid="huanghaohang" creationdate="20170912T130250Z">
        <seg>println name
println project.name</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println name
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180320T094738Z" creationid="haohang" creationdate="20180320T094738Z">
        <seg>println name
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println output.classesDir</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180320T094736Z" creationid="haohang" creationdate="20180320T094736Z">
        <seg>println output.classesDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println pos.beginIndex</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170918T145824Z" creationid="huanghaohang" creationdate="20170918T145824Z">
        <seg>println pos.beginIndex</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println pos.endIndex
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170918T145826Z" creationid="huanghaohang" creationdate="20170918T145826Z">
        <seg>println pos.endIndex
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println relativePath(compileJava.destinationDir)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180130T100202Z" creationid="huanghaohang" creationdate="20180130T100202Z">
        <seg>println relativePath(compileJava.destinationDir)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println relativePath(compileJava.destinationDir)
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T022557Z" creationid="huanghaohang" creationdate="20180131T022557Z">
        <seg>println relativePath(compileJava.destinationDir)
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println relativePath(processResources.destinationDir)
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180130T100203Z" creationid="huanghaohang" creationdate="20180130T100203Z">
        <seg>println relativePath(processResources.destinationDir)
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println springVersion</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T133553Z" creationid="huanghaohang" creationdate="20170913T133553Z">
        <seg>println springVersion</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println systemProjectProp</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170917T135027Z" creationid="huanghaohang" creationdate="20170917T135027Z">
        <seg>println systemProjectProp</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180107T144030Z" creationid="huanghaohang" creationdate="20180107T144030Z">
        <seg>println()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println(&lt;s0&gt;'I am the new one.'&lt;/s0&gt;)
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T083320Z" creationid="huanghaohang" creationdate="20170922T083320Z">
        <seg>println(&lt;s0&gt;'I am the new one.'&lt;/s0&gt;)
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>process&lt;e0&gt;&lt;c1&gt;SourceSet&lt;/c1&gt;&lt;/e0&gt;Resources</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180312T073412Z" creationid="haohang" creationdate="20180312T073412Z">
        <seg>process&lt;e0&gt;&lt;c1&gt;SourceSet&lt;/c1&gt;&lt;/e0&gt;Resources</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>processResources</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180312T062333Z" creationid="haohang" creationdate="20180312T062333Z">
        <seg>processResources</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>processTestResources</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180312T062813Z" creationid="haohang" creationdate="20180312T062813Z">
        <seg>processTestResources</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>project</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T132112Z" creationid="huanghaohang" creationdate="20170913T132112Z">
        <seg>project</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>project(&lt;s0&gt;':projectA'&lt;/s0&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T122000Z" creationid="huanghaohang" creationdate="20170919T122000Z">
        <seg>project(&lt;s0&gt;':projectA'&lt;/s0&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>project(&lt;s0&gt;'projectA'&lt;/s0&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T130122Z" creationid="huanghaohang" creationdate="20170919T130122Z">
        <seg>project(&lt;s0&gt;'projectA'&lt;/s0&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>project-report</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180211T085913Z" creationid="huanghaohang" creationdate="20180211T085913Z">
        <seg>project-report</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>project.name</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233117Z" creationid="huanghaohang" creationdate="20171206T233117Z">
        <seg>project.name</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>project.version</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233200Z" creationid="huanghaohang" creationdate="20171206T233200Z">
        <seg>project.version</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>projectDir</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T132159Z" creationid="huanghaohang" creationdate="20170913T132159Z">
        <seg>projectDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>projectName</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180318T010018Z" creationid="huanghaohang" creationdate="20180318T010018Z">
        <seg>projectName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>project_reports_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T010752Z" creationid="huanghaohang" creationdate="20170910T010752Z">
        <seg>project_reports_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>publishing_ivy.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180207T143843Z" creationid="huanghaohang" creationdate="20180207T143843Z">
        <seg>publishing_ivy.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>publishing_maven.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180207T143916Z" creationid="huanghaohang" creationdate="20180207T143916Z">
        <seg>publishing_maven.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>purpose = &lt;s3&gt;"production"&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T133546Z" creationid="huanghaohang" creationdate="20170913T133546Z">
        <seg>purpose = &lt;s3&gt;"production"&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>purpose = &lt;s4&gt;"test"&lt;/s4&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T133547Z" creationid="huanghaohang" creationdate="20170913T133547Z">
        <seg>purpose = &lt;s4&gt;"test"&lt;/s4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>purpose = &lt;s5&gt;"production"&lt;/s5&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T133548Z" creationid="huanghaohang" creationdate="20170913T133548Z">
        <seg>purpose = &lt;s5&gt;"production"&lt;/s5&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>rename &lt;s6&gt;'(.+)-staging-(.+)'&lt;/s6&gt;, &lt;s7&gt;'$1$2'&lt;/s7&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T060242Z" creationid="huanghaohang" creationdate="20171126T060242Z">
        <seg>rename &lt;s6&gt;'(.+)-staging-(.+)'&lt;/s6&gt;, &lt;s7&gt;'$1$2'&lt;/s7&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>rename { String fileName -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T060238Z" creationid="huanghaohang" creationdate="20171126T060238Z">
        <seg>rename { String fileName -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>rename(/(.+)-staging-(.+)/, &lt;s8&gt;'$1$2'&lt;/s8&gt;)
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T060250Z" creationid="huanghaohang" creationdate="20171126T060250Z">
        <seg>rename(/(.+)-staging-(.+)/, &lt;s8&gt;'$1$2'&lt;/s8&gt;)
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>reportOn subprojects*.test
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T044008Z" creationid="huanghaohang" creationdate="20180406T044008Z">
        <seg>reportOn subprojects*.test
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>reporting-base</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180211T085914Z" creationid="huanghaohang" creationdate="20180211T085914Z">
        <seg>reporting-base</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>reports</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T054652Z" creationid="haohang" creationdate="20180313T054652Z">
        <seg>reports</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>reports.html.enabled = false</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T044002Z" creationid="huanghaohang" creationdate="20180406T044002Z">
        <seg>reports.html.enabled = false</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>reportsDir</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T061218Z" creationid="haohang" creationdate="20180313T061218Z">
        <seg>reportsDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>reportsDirName</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T054649Z" creationid="haohang" creationdate="20180313T054649Z">
        <seg>reportsDirName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>repositories {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T124331Z" creationid="95" creationdate="20170730T124331Z">
        <seg>repositories {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>repository(url: &lt;s1&gt;"file://localhost/tmp/myRepo/"&lt;/s1&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T051022Z" creationid="huanghaohang" creationdate="20170908T051022Z">
        <seg>repository(url: &lt;s1&gt;"file://localhost/tmp/myRepo/"&lt;/s1&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>resources</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180320T100914Z" creationid="haohang" creationdate="20180320T100914Z">
        <seg>resources</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>resources + java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180320T101505Z" creationid="haohang" creationdate="20180320T101505Z">
        <seg>resources + java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>resources {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T053346Z" creationid="haohang" creationdate="20180313T053346Z">
        <seg>resources {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>resources.srcDirs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180320T101209Z" creationid="haohang" creationdate="20180320T101209Z">
        <seg>resources.srcDirs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>result.failure.printStackTrace()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180107T144035Z" creationid="huanghaohang" creationdate="20180107T144035Z">
        <seg>result.failure.printStackTrace()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>runtime</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T032917Z" creationid="huanghaohang" creationdate="20170908T032917Z">
        <seg>runtime</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>runtime, testCompile</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T053833Z" creationid="haohang" creationdate="20180313T053833Z">
        <seg>runtime, testCompile</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>runtimeClasspath</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180320T095335Z" creationid="haohang" creationdate="20180320T095335Z">
        <seg>runtimeClasspath</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>scala</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180205T140936Z" creationid="huanghaohang" creationdate="20180205T140936Z">
        <seg>scala</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>scala-base</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180218T092814Z" creationid="huanghaohang" creationdate="20180218T092814Z">
        <seg>scala-base</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>scala_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180205T140934Z" creationid="huanghaohang" creationdate="20180205T140934Z">
        <seg>scala_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>services/webservice/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T154456Z" creationid="95" creationdate="20170731T154456Z">
        <seg>services/webservice/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>settings.gradle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T123538Z" creationid="95" creationdate="20170803T123538Z">
        <seg>settings.gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>shared/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T154458Z" creationid="95" creationdate="20170731T154458Z">
        <seg>shared/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>signing</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180211T090000Z" creationid="huanghaohang" creationdate="20180211T090000Z">
        <seg>signing</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>signing_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180211T085959Z" creationid="huanghaohang" creationdate="20180211T085959Z">
        <seg>signing_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sonar</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180211T090020Z" creationid="huanghaohang" creationdate="20180211T090020Z">
        <seg>sonar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sonar-runner</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180211T090509Z" creationid="huanghaohang" creationdate="20180211T090509Z">
        <seg>sonar-runner</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sonar_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180211T090019Z" creationid="huanghaohang" creationdate="20180211T090019Z">
        <seg>sonar_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sonar_runner_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180211T090028Z" creationid="huanghaohang" creationdate="20180211T090028Z">
        <seg>sonar_runner_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>source</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T100241Z" creationid="haohang" creationdate="20180326T100241Z">
        <seg>source</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>source &lt;s1&gt;'src/main/java'&lt;/s1&gt;, &lt;s2&gt;'src/main/groovy'&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171002T134316Z" creationid="huanghaohang" creationdate="20171002T134316Z">
        <seg>source &lt;s1&gt;'src/main/java'&lt;/s1&gt;, &lt;s2&gt;'src/main/groovy'&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>source = &lt;s3&gt;'src/main/java'&lt;/s3&gt;
}

&lt;s4&gt;// Use a collection to specify multiple source directories&lt;/s4&gt;
compile {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171002T134050Z" creationid="huanghaohang" creationdate="20171002T134050Z">
        <seg>source = &lt;s3&gt;'src/main/java'&lt;/s3&gt;
}

&lt;s4&gt;// Use a collection to specify multiple source directories&lt;/s4&gt;
compile {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>source = [&lt;s5&gt;'src/main/java'&lt;/s5&gt;, &lt;s6&gt;'../shared/java'&lt;/s6&gt;]
}

&lt;s7&gt;// Use a FileCollection (or FileTree in this case) to specify the source files&lt;/s7&gt;
compile {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171002T134051Z" creationid="huanghaohang" creationdate="20171002T134051Z">
        <seg>source = [&lt;s5&gt;'src/main/java'&lt;/s5&gt;, &lt;s6&gt;'../shared/java'&lt;/s6&gt;]
}

&lt;s7&gt;// Use a FileCollection (or FileTree in this case) to specify the source files&lt;/s7&gt;
compile {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>source = file(&lt;s1&gt;'src/main/java'&lt;/s1&gt;)
}

&lt;s2&gt;// Use a String path to specify the source directory&lt;/s2&gt;
compile {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171002T134049Z" creationid="huanghaohang" creationdate="20171002T134049Z">
        <seg>source = file(&lt;s1&gt;'src/main/java'&lt;/s1&gt;)
}

&lt;s2&gt;// Use a String path to specify the source directory&lt;/s2&gt;
compile {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>source = fileTree(dir: &lt;s8&gt;'src/main/java'&lt;/s8&gt;).matching { include &lt;s9&gt;'org/gradle/api/**'&lt;/s9&gt; }
}

&lt;s10&gt;// Using a closure to specify the source files.&lt;/s10&gt;
compile {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171002T134052Z" creationid="huanghaohang" creationdate="20171002T134052Z">
        <seg>source = fileTree(dir: &lt;s8&gt;'src/main/java'&lt;/s8&gt;).matching { include &lt;s9&gt;'org/gradle/api/**'&lt;/s9&gt; }
}

&lt;s10&gt;// Using a closure to specify the source files.&lt;/s10&gt;
compile {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>source = {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171002T134052Z" creationid="huanghaohang" creationdate="20171002T134052Z">
        <seg>source = {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>source file(&lt;s4&gt;'../shared/java'&lt;/s4&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171002T134317Z" creationid="huanghaohang" creationdate="20171002T134317Z">
        <seg>source file(&lt;s4&gt;'../shared/java'&lt;/s4&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>source sourceSets.intTest.allJava
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T095404Z" creationid="haohang" creationdate="20180326T095404Z">
        <seg>source sourceSets.intTest.allJava
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>source { file(&lt;s6&gt;'src/test/'&lt;/s6&gt;).listFiles() }
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171002T134319Z" creationid="huanghaohang" creationdate="20171002T134319Z">
        <seg>source { file(&lt;s6&gt;'src/test/'&lt;/s6&gt;).listFiles() }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sourceCompatibility</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180314T094218Z" creationid="haohang" creationdate="20180314T094218Z">
        <seg>sourceCompatibility</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sourceCompatibility = &lt;s0&gt;1.5&lt;/s0&gt;
version = &lt;s1&gt;'1.0'&lt;/s1&gt;
jar {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T132603Z" creationid="95" creationdate="20170730T132603Z">
        <seg>sourceCompatibility = &lt;s0&gt;1.5&lt;/s0&gt;
version = &lt;s1&gt;'1.0'&lt;/s1&gt;
jar {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sourceSets</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T062344Z" creationid="haohang" creationdate="20180313T062344Z">
        <seg>sourceSets</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sourceSets {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T053343Z" creationid="haohang" creationdate="20180313T053343Z">
        <seg>sourceSets {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sourceSets.main.allJava</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T100437Z" creationid="haohang" creationdate="20180326T100437Z">
        <seg>sourceSets.main.allJava</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sourceSets.main.output + sourceSets.main.compileClasspath</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T100239Z" creationid="haohang" creationdate="20180326T100239Z">
        <seg>sourceSets.main.output + sourceSets.main.compileClasspath</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sourceSets.matching { it.purpose == &lt;s6&gt;"production"&lt;/s6&gt; }.each { println it.name }
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T133556Z" creationid="huanghaohang" creationdate="20170913T133556Z">
        <seg>sourceSets.matching { it.purpose == &lt;s6&gt;"production"&lt;/s6&gt; }.each { println it.name }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sourceSets.test.java.srcDirs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T104636Z" creationid="huanghaohang" creationdate="20180406T104636Z">
        <seg>sourceSets.test.java.srcDirs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sourceSets.test.output.classesDir</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T104633Z" creationid="huanghaohang" creationdate="20180406T104633Z">
        <seg>sourceSets.test.output.classesDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sourceSets.test.runtimeClasspath</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T104634Z" creationid="huanghaohang" creationdate="20180406T104634Z">
        <seg>sourceSets.test.runtimeClasspath</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>springVersion = &lt;s1&gt;"3.1.0.RELEASE"&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T133530Z" creationid="huanghaohang" creationdate="20170913T133530Z">
        <seg>springVersion = &lt;s1&gt;"3.1.0.RELEASE"&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>src/&lt;e0&gt;&lt;c1&gt;sourceSet&lt;/c1&gt;&lt;/e0&gt;/groovy</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T121740Z" creationid="huanghaohang" creationdate="20180406T121740Z">
        <seg>src/&lt;e0&gt;&lt;c1&gt;sourceSet&lt;/c1&gt;&lt;/e0&gt;/groovy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>src/&lt;e0&gt;&lt;c1&gt;sourceSet&lt;/c1&gt;&lt;/e0&gt;/java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T053011Z" creationid="haohang" creationdate="20180313T053011Z">
        <seg>src/&lt;e0&gt;&lt;c1&gt;sourceSet&lt;/c1&gt;&lt;/e0&gt;/java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>src/&lt;e0&gt;&lt;c1&gt;sourceSet&lt;/c1&gt;&lt;/e0&gt;/resources</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T053023Z" creationid="haohang" creationdate="20180313T053023Z">
        <seg>src/&lt;e0&gt;&lt;c1&gt;sourceSet&lt;/c1&gt;&lt;/e0&gt;/resources</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>src/main/groovy</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T121649Z" creationid="huanghaohang" creationdate="20180406T121649Z">
        <seg>src/main/groovy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>src/main/java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T052938Z" creationid="haohang" creationdate="20180313T052938Z">
        <seg>src/main/java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>src/main/resources</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T052951Z" creationid="haohang" creationdate="20180313T052951Z">
        <seg>src/main/resources</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>src/test/groovy</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T121721Z" creationid="huanghaohang" creationdate="20180406T121721Z">
        <seg>src/test/groovy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>src/test/java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T052957Z" creationid="haohang" creationdate="20180313T052957Z">
        <seg>src/test/java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>src/test/resources</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T053007Z" creationid="haohang" creationdate="20180313T053007Z">
        <seg>src/test/resources</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>srcDir &lt;s0&gt;'src/java'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T053346Z" creationid="haohang" creationdate="20180313T053346Z">
        <seg>srcDir &lt;s0&gt;'src/java'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>srcDir &lt;s1&gt;'src/resources'&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T053348Z" creationid="haohang" creationdate="20180313T053348Z">
        <seg>srcDir &lt;s1&gt;'src/resources'&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>srcDir = file(&lt;s1&gt;'src'&lt;/s1&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T150352Z" creationid="huanghaohang" creationdate="20170927T150352Z">
        <seg>srcDir = file(&lt;s1&gt;'src'&lt;/s1&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>srcDir = file(&lt;s3&gt;'src2'&lt;/s3&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T150354Z" creationid="huanghaohang" creationdate="20170927T150354Z">
        <seg>srcDir = file(&lt;s3&gt;'src2'&lt;/s3&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>srcDirs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T101221Z" creationid="haohang" creationdate="20180326T101221Z">
        <seg>srcDirs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>srcDirs = [&lt;s0&gt;'src/groovy'&lt;/s0&gt;]</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T121941Z" creationid="huanghaohang" creationdate="20180406T121941Z">
        <seg>srcDirs = [&lt;s0&gt;'src/groovy'&lt;/s0&gt;]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>srcDirs = [&lt;s1&gt;'test/groovy'&lt;/s1&gt;]</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T121944Z" creationid="huanghaohang" creationdate="20180406T121944Z">
        <seg>srcDirs = [&lt;s1&gt;'test/groovy'&lt;/s1&gt;]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>standard_plugins.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180130T081441Z" creationid="huanghaohang" creationdate="20180130T081441Z">
        <seg>standard_plugins.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>subdir/myproject.gradle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T114013Z" creationid="huanghaohang" creationdate="20170909T114013Z">
        <seg>subdir/myproject.gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>subprojects {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T124423Z" creationid="95" creationdate="20170803T124423Z">
        <seg>subprojects {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>systemProp.http.proxyHost=www.somehost.org
systemProp.http.proxyPort=8080
systemProp.http.proxyUser=userid
systemProp.http.proxyPassword=password
systemProp.http.nonProxyHosts=*.nonproxyrepos.com|localhost</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180130T073510Z" creationid="huanghaohang" creationdate="20180130T073510Z">
        <seg>systemProp.http.proxyHost=www.somehost.org
systemProp.http.proxyPort=8080
systemProp.http.proxyUser=userid
systemProp.http.proxyPassword=password
systemProp.http.nonProxyHosts=*.nonproxyrepos.com|localhost</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>systemProp.https.proxyHost=www.somehost.org
systemProp.https.proxyPort=8080
systemProp.https.proxyUser=userid
systemProp.https.proxyPassword=password
systemProp.https.nonProxyHosts=*.nonproxyrepos.com|localhost</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180130T073541Z" creationid="huanghaohang" creationdate="20180130T073541Z">
        <seg>systemProp.https.proxyHost=www.somehost.org
systemProp.https.proxyPort=8080
systemProp.https.proxyUser=userid
systemProp.https.proxyPassword=password
systemProp.https.nonProxyHosts=*.nonproxyrepos.com|localhost</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>systemProperties &lt;s0&gt;'property'&lt;/s0&gt;: &lt;s1&gt;'value'&lt;/s1&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T150120Z" creationid="95" creationdate="20170731T150120Z">
        <seg>systemProperties &lt;s0&gt;'property'&lt;/s0&gt;: &lt;s1&gt;'value'&lt;/s1&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>systemProperties &lt;s13&gt;'property'&lt;/s13&gt;: &lt;s14&gt;'value'&lt;/s14&gt;
}

uploadArchives {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T154116Z" creationid="95" creationdate="20170731T154116Z">
        <seg>systemProperties &lt;s13&gt;'property'&lt;/s13&gt;: &lt;s14&gt;'value'&lt;/s14&gt;
}

uploadArchives {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>targetCompatibility</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180314T094343Z" creationid="haohang" creationdate="20180314T094343Z">
        <seg>targetCompatibility</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task &lt;s0&gt;"task$counter"&lt;/s0&gt; &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T132725Z" creationid="95" creationdate="20170727T132725Z">
        <seg>task &lt;s0&gt;"task$counter"&lt;/s0&gt; &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task anotherCopyTask(type: Copy) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171015T075014Z" creationid="huanghaohang" creationdate="20171015T075014Z">
        <seg>task anotherCopyTask(type: Copy) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task barJar(type: Jar) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T111941Z" creationid="huanghaohang" creationdate="20180406T111941Z">
        <seg>task barJar(type: Jar) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task check &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180105T083827Z" creationid="huanghaohang" creationdate="20180105T083827Z">
        <seg>task check &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task checksum &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T023456Z" creationid="95" creationdate="20170729T023456Z">
        <seg>task checksum &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task compile &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T031121Z" creationid="huanghaohang" creationdate="20170909T031121Z">
        <seg>task compile &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task configure &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170918T145818Z" creationid="huanghaohang" creationdate="20170918T145818Z">
        <seg>task configure &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task copy(type: Copy)

task copy(overwrite: true) &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T083319Z" creationid="huanghaohang" creationdate="20170922T083319Z">
        <seg>task copy(type: Copy)

task copy(overwrite: true) &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task copy(type: Copy) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T124931Z" creationid="huanghaohang" creationdate="20170919T124931Z">
        <seg>task copy(type: Copy) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task copyMethod &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171015T094220Z" creationid="huanghaohang" creationdate="20171015T094220Z">
        <seg>task copyMethod &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task copyMethodWithExplicitDependencies{</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171015T124924Z" creationid="huanghaohang" creationdate="20171015T124924Z">
        <seg>task copyMethodWithExplicitDependencies{</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task copyTask(type: Copy) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171002T135607Z" creationid="huanghaohang" creationdate="20171002T135607Z">
        <seg>task copyTask(type: Copy) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task copyTaskWithPatterns(type: Copy) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171015T075116Z" creationid="huanghaohang" creationdate="20171015T075116Z">
        <seg>task copyTaskWithPatterns(type: Copy) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task count &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155856Z" creationid="95" creationdate="20170726T155856Z">
        <seg>task count &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task disableMe &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T085325Z" creationid="huanghaohang" creationdate="20170922T085325Z">
        <seg>task disableMe &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task dist(type: Zip) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T125717Z" creationid="95" creationdate="20170803T125717Z">
        <seg>task dist(type: Zip) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task distribution &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T025303Z" creationid="95" creationdate="20170729T025303Z">
        <seg>task distribution &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task hello

println hello.name
println project.hello.name</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T121723Z" creationid="huanghaohang" creationdate="20170919T121723Z">
        <seg>task hello

println hello.name
println project.hello.name</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task hello

println tasks.hello.name
println tasks[&lt;s0&gt;'hello'&lt;/s0&gt;].name</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T121737Z" creationid="huanghaohang" creationdate="20170919T121737Z">
        <seg>task hello

println tasks.hello.name
println tasks[&lt;s0&gt;'hello'&lt;/s0&gt;].name</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task hello
}

task hello

println tasks.getByPath(&lt;s1&gt;'hello'&lt;/s1&gt;).path
println tasks.getByPath(&lt;s2&gt;':hello'&lt;/s2&gt;).path
println tasks.getByPath(&lt;s3&gt;'projectA:hello'&lt;/s3&gt;).path
println tasks.getByPath(&lt;s4&gt;':projectA:hello'&lt;/s4&gt;).path</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T122001Z" creationid="huanghaohang" creationdate="20170919T122001Z">
        <seg>task hello
}

task hello

println tasks.getByPath(&lt;s1&gt;'hello'&lt;/s1&gt;).path
println tasks.getByPath(&lt;s2&gt;':hello'&lt;/s2&gt;).path
println tasks.getByPath(&lt;s3&gt;'projectA:hello'&lt;/s3&gt;).path
println tasks.getByPath(&lt;s4&gt;':projectA:hello'&lt;/s4&gt;).path</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task hello &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155315Z" creationid="95" creationdate="20170726T155315Z">
        <seg>task hello &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task hello {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T144945Z" creationid="95" creationdate="20170724T144945Z">
        <seg>task hello {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task intTest(type: Test) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T095453Z" creationid="haohang" creationdate="20180326T095453Z">
        <seg>task intTest(type: Test) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task intTestJar(type: Jar) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T095352Z" creationid="haohang" creationdate="20180326T095352Z">
        <seg>task intTestJar(type: Jar) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task intTestJavadoc(type: Javadoc) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T095403Z" creationid="haohang" creationdate="20180326T095403Z">
        <seg>task intTestJavadoc(type: Javadoc) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task libs(type: Sync) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T125146Z" creationid="huanghaohang" creationdate="20171126T125146Z">
        <seg>task libs(type: Sync) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task list &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T150348Z" creationid="huanghaohang" creationdate="20170927T150348Z">
        <seg>task list &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task loadfile &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170728T153755Z" creationid="95" creationdate="20170728T153755Z">
        <seg>task loadfile &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task logInfo {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180107T025423Z" creationid="huanghaohang" creationdate="20180107T025423Z">
        <seg>task logInfo {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task myCopy(type: Copy)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T122242Z" creationid="huanghaohang" creationdate="20170919T122242Z">
        <seg>task myCopy(type: Copy)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task myCopy(type: Copy)

myCopy {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T124609Z" creationid="huanghaohang" creationdate="20170919T124609Z">
        <seg>task myCopy(type: Copy)

myCopy {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task myTask {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T141958Z" creationid="95" creationdate="20170727T141958Z">
        <seg>task myTask {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task nestedSpecs(type: Copy) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T060919Z" creationid="huanghaohang" creationdate="20171126T060919Z">
        <seg>task nestedSpecs(type: Copy) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task printProps &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170917T135023Z" creationid="huanghaohang" creationdate="20170917T135023Z">
        <seg>task printProps &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task rename(type: Copy) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171126T060236Z" creationid="huanghaohang" creationdate="20171126T060236Z">
        <seg>task rename(type: Copy) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task taskX &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T130248Z" creationid="huanghaohang" creationdate="20170919T130248Z">
        <seg>task taskX &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task taskX(dependsOn: &lt;s0&gt;'taskY'&lt;/s0&gt;) &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T160338Z" creationid="95" creationdate="20170726T160338Z">
        <seg>task taskX(dependsOn: &lt;s0&gt;'taskY'&lt;/s0&gt;) &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task taskX(dependsOn: &lt;s1&gt;':projectB:taskY'&lt;/s1&gt;) &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T130123Z" creationid="huanghaohang" creationdate="20170919T130123Z">
        <seg>task taskX(dependsOn: &lt;s1&gt;':projectB:taskY'&lt;/s1&gt;) &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task taskY &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T130156Z" creationid="huanghaohang" creationdate="20170919T130156Z">
        <seg>task taskY &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task transform {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170922T085707Z" creationid="huanghaohang" creationdate="20170922T085707Z">
        <seg>task transform {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task upper &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155757Z" creationid="95" creationdate="20170726T155757Z">
        <seg>task upper &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task zip &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171219T090754Z" creationid="huanghaohang" creationdate="20171219T090754Z">
        <seg>task zip &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task(&lt;s0&gt;'hello'&lt;/s0&gt;) &lt;&lt;
{</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T121054Z" creationid="huanghaohang" creationdate="20170919T121054Z">
        <seg>task(&lt;s0&gt;'hello'&lt;/s0&gt;) &lt;&lt;
{</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task(hello) &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T120833Z" creationid="huanghaohang" creationdate="20170919T120833Z">
        <seg>task(hello) &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task(taskName) &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T011926Z" creationid="huanghaohang" creationdate="20170923T011926Z">
        <seg>task(taskName) &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tasks.addRule(&lt;s0&gt;"Pattern: ping&lt;ID&gt;"&lt;/s0&gt;) { String taskName -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T011924Z" creationid="huanghaohang" creationdate="20170923T011924Z">
        <seg>tasks.addRule(&lt;s0&gt;"Pattern: ping&lt;ID&gt;"&lt;/s0&gt;) { String taskName -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tasks.create(name: &lt;s0&gt;'hello'&lt;/s0&gt;) &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T121136Z" creationid="huanghaohang" creationdate="20170919T121136Z">
        <seg>tasks.create(name: &lt;s0&gt;'hello'&lt;/s0&gt;) &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tasks.findAll { task -&gt; task.name.startsWith(&lt;s1&gt;'lib'&lt;/s1&gt;) }
}

task lib1 &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T130916Z" creationid="huanghaohang" creationdate="20170919T130916Z">
        <seg>tasks.findAll { task -&gt; task.name.startsWith(&lt;s1&gt;'lib'&lt;/s1&gt;) }
}

task lib1 &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>test</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180312T063056Z" creationid="haohang" creationdate="20180312T063056Z">
        <seg>test</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>test {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T150115Z" creationid="95" creationdate="20170731T150115Z">
        <seg>test {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>test-results</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T061249Z" creationid="haohang" creationdate="20180313T061249Z">
        <seg>test-results</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>test.systemProperty &lt;s0&gt;'some.prop'&lt;/s0&gt;, &lt;s1&gt;'value'&lt;/s1&gt;
test.systemProperty(&lt;s2&gt;'some.prop'&lt;/s2&gt;, &lt;s3&gt;'value'&lt;/s3&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T141438Z" creationid="huanghaohang" creationdate="20170913T141438Z">
        <seg>test.systemProperty &lt;s0&gt;'some.prop'&lt;/s0&gt;, &lt;s1&gt;'value'&lt;/s1&gt;
test.systemProperty(&lt;s2&gt;'some.prop'&lt;/s2&gt;, &lt;s3&gt;'value'&lt;/s3&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>testClasses</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180312T062825Z" creationid="haohang" creationdate="20180312T062825Z">
        <seg>testClasses</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>testClassesDir</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T104633Z" creationid="huanghaohang" creationdate="20180406T104633Z">
        <seg>testClassesDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>testClassesDir = sourceSets.intTest.output.classesDir</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T095454Z" creationid="haohang" creationdate="20180326T095454Z">
        <seg>testClassesDir = sourceSets.intTest.output.classesDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>testCompile</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T035005Z" creationid="huanghaohang" creationdate="20170908T035005Z">
        <seg>testCompile</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>testCompile &lt;s0&gt;"org.codehaus.groovy:groovy:2.3.3"&lt;/s0&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T122643Z" creationid="huanghaohang" creationdate="20180406T122643Z">
        <seg>testCompile &lt;s0&gt;"org.codehaus.groovy:groovy:2.3.3"&lt;/s0&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>testCompile &lt;s2&gt;'junit:junit:4.11'&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T124427Z" creationid="95" creationdate="20170803T124427Z">
        <seg>testCompile &lt;s0&gt;'junit:junit:4.11'&lt;/s0&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>testCompile &lt;s3&gt;'junit:junit:4.11'&lt;/s3&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T002855Z" creationid="huanghaohang" creationdate="20170909T002855Z">
        <seg>testCompile &lt;s3&gt;'junit:junit:4.11'&lt;/s3&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>testCompile group: &lt;s10&gt;'junit'&lt;/s10&gt;, name: &lt;s11&gt;'junit'&lt;/s11&gt;, version: &lt;s12&gt;'4.+'&lt;/s12&gt;
}

test {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T154115Z" creationid="95" creationdate="20170731T154115Z">
        <seg>testCompile group: &lt;s10&gt;'junit'&lt;/s10&gt;, name: &lt;s11&gt;'junit'&lt;/s11&gt;, version: &lt;s12&gt;'4.+'&lt;/s12&gt;
}

test {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>testCompile group: &lt;s3&gt;'junit'&lt;/s3&gt;, name: &lt;s4&gt;'junit'&lt;/s4&gt;, version: &lt;s5&gt;'4.+'&lt;/s5&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T124734Z" creationid="95" creationdate="20170730T124734Z">
        <seg>testCompile group: &lt;s3&gt;'junit'&lt;/s3&gt;, name: &lt;s4&gt;'junit'&lt;/s4&gt;, version: &lt;s5&gt;'4.+'&lt;/s5&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>testCompile group: &lt;s4&gt;'junit'&lt;/s4&gt;, name: &lt;s5&gt;'junit'&lt;/s5&gt;, version: &lt;s6&gt;'4.+'&lt;/s6&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170908T013235Z" creationid="haohang" creationdate="20170908T013235Z">
        <seg>testCompile group: &lt;s4&gt;'junit'&lt;/s4&gt;, name: &lt;s5&gt;'junit'&lt;/s5&gt;, version: &lt;s6&gt;'4.+'&lt;/s6&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>testReportDir</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T061425Z" creationid="haohang" creationdate="20180313T061425Z">
        <seg>testReportDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>testReportDirName</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T061408Z" creationid="haohang" creationdate="20180313T061408Z">
        <seg>testReportDirName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>testResultsDir</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T061351Z" creationid="haohang" creationdate="20180313T061351Z">
        <seg>testResultsDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>testResultsDirName</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T061248Z" creationid="haohang" creationdate="20180313T061248Z">
        <seg>testResultsDirName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>testRuntime</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T035202Z" creationid="huanghaohang" creationdate="20170908T035202Z">
        <seg>testRuntime</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>testSrcDirs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T104634Z" creationid="huanghaohang" creationdate="20180406T104634Z">
        <seg>testSrcDirs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tests</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T061411Z" creationid="haohang" creationdate="20180313T061409Z">
        <seg>tests</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>title</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180326T100439Z" creationid="haohang" creationdate="20180326T100439Z">
        <seg>title</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>troubleshooting.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T081148Z" creationid="95" creationdate="20170723T081148Z">
        <seg>troubleshooting.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>troubleshooting.html#N10187</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T013419Z" creationid="huanghaohang" creationdate="20170919T013419Z">
        <seg>troubleshooting.html#N10187</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>troubleshooting.html#N10194</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T013433Z" creationid="huanghaohang" creationdate="20170919T013433Z">
        <seg>troubleshooting.html#N10194</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_gradle_command_line.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T004254Z" creationid="huanghaohang" creationdate="20170909T004254Z">
        <seg>tutorial_gradle_command_line.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_gradle_command_line.html#N1077C</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233849Z" creationid="huanghaohang" creationdate="20171206T233849Z">
        <seg>tutorial_gradle_command_line.html#N1077C</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_gradle_command_line.html#N107F3</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233920Z" creationid="huanghaohang" creationdate="20171206T233920Z">
        <seg>tutorial_gradle_command_line.html#N107F3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_gradle_command_line.html#N10953</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233954Z" creationid="huanghaohang" creationdate="20171206T233954Z">
        <seg>tutorial_gradle_command_line.html#N10953</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_gradle_command_line.html#sec:continue_build_on_failure</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233909Z" creationid="huanghaohang" creationdate="20171206T233909Z">
        <seg>tutorial_gradle_command_line.html#sec:continue_build_on_failure</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_gradle_command_line.html#sec:dry_run</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233946Z" creationid="huanghaohang" creationdate="20171206T233946Z">
        <seg>tutorial_gradle_command_line.html#sec:dry_run</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_gradle_command_line.html#sec:excluding_tasks_from_the_command_line</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233857Z" creationid="huanghaohang" creationdate="20171206T233857Z">
        <seg>tutorial_gradle_command_line.html#sec:excluding_tasks_from_the_command_line</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_gradle_command_line.html#sec:obtaining_information_about_your_build</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233937Z" creationid="huanghaohang" creationdate="20171206T233937Z">
        <seg>tutorial_gradle_command_line.html#sec:obtaining_information_about_your_build</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_gradle_command_line.html#sec:selecting_build</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233928Z" creationid="huanghaohang" creationdate="20171206T233928Z">
        <seg>tutorial_gradle_command_line.html#sec:selecting_build</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_gradle_gui.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T030122Z" creationid="huanghaohang" creationdate="20170909T030122Z">
        <seg>tutorial_gradle_gui.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_gradle_gui.html#N10981</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T234010Z" creationid="huanghaohang" creationdate="20171206T234010Z">
        <seg>tutorial_gradle_gui.html#N10981</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_gradle_gui.html#N10997</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T234020Z" creationid="huanghaohang" creationdate="20171206T234020Z">
        <seg>tutorial_gradle_gui.html#N10997</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_gradle_gui.html#N1099E</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T234026Z" creationid="huanghaohang" creationdate="20171206T234026Z">
        <seg>tutorial_gradle_gui.html#N1099E</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_gradle_gui.html#N109A3</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T234031Z" creationid="huanghaohang" creationdate="20171206T234031Z">
        <seg>tutorial_gradle_gui.html#N109A3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_groovy_projects.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T080836Z" creationid="95" creationdate="20170723T080836Z">
        <seg>tutorial_groovy_projects.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_groovy_projects.html#N106C1</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233747Z" creationid="huanghaohang" creationdate="20171206T233747Z">
        <seg>tutorial_groovy_projects.html#N106C1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_groovy_projects.html#N1070A</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233800Z" creationid="huanghaohang" creationdate="20171206T233800Z">
        <seg>tutorial_groovy_projects.html#N1070A</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_java_projects.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T072818Z" creationid="95" creationdate="20170723T072818Z">
        <seg>tutorial_java_projects.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_java_projects.html#N103C9</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171014T124855Z" creationid="huanghaohang" creationdate="20171014T124855Z">
        <seg>tutorial_java_projects.html#N103C9</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_java_projects.html#N103DA</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171014T124903Z" creationid="huanghaohang" creationdate="20171014T124903Z">
        <seg>tutorial_java_projects.html#N103DA</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_java_projects.html#N10552</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171014T124920Z" creationid="huanghaohang" creationdate="20171014T124920Z">
        <seg>tutorial_java_projects.html#N10552</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_java_projects.html#sec:examples</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171014T124913Z" creationid="huanghaohang" creationdate="20171014T124913Z">
        <seg>tutorial_java_projects.html#sec:examples</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_this_and_that.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170911T150611Z" creationid="huanghaohang" creationdate="20170911T150611Z">
        <seg>tutorial_this_and_that.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_this_and_that.html#N10C8A</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T034101Z" creationid="huanghaohang" creationdate="20180131T034101Z">
        <seg>tutorial_this_and_that.html#N10C8A</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_this_and_that.html#sec:caching</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T034111Z" creationid="huanghaohang" creationdate="20180131T034111Z">
        <seg>tutorial_this_and_that.html#sec:caching</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_this_and_that.html#sec:configuring_arbitrary_objects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T034054Z" creationid="huanghaohang" creationdate="20180131T034054Z">
        <seg>tutorial_this_and_that.html#sec:configuring_arbitrary_objects</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_this_and_that.html#sec:configuring_using_external_script</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T034031Z" creationid="huanghaohang" creationdate="20180131T034031Z">
        <seg>tutorial_this_and_that.html#sec:configuring_using_external_script</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_this_and_that.html#sec:directory_creation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T034012Z" creationid="huanghaohang" creationdate="20180131T034012Z">
        <seg>tutorial_this_and_that.html#sec:directory_creation</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_this_and_that.html#sec:gradle_properties_and_system_properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T034018Z" creationid="huanghaohang" creationdate="20180131T034018Z">
        <seg>tutorial_this_and_that.html#sec:gradle_properties_and_system_properties</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_using_tasks.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T072622Z" creationid="95" creationdate="20170723T072622Z">
        <seg>tutorial_using_tasks.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_using_tasks.html#N101A5</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T031737Z" creationid="huanghaohang" creationdate="20170927T031737Z">
        <seg>tutorial_using_tasks.html#N101A5</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_using_tasks.html#N101BC</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T031749Z" creationid="huanghaohang" creationdate="20170927T031749Z">
        <seg>tutorial_using_tasks.html#N101BC</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_using_tasks.html#N10222</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T031757Z" creationid="huanghaohang" creationdate="20170927T031757Z">
        <seg>tutorial_using_tasks.html#N10222</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_using_tasks.html#N10239</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T031804Z" creationid="huanghaohang" creationdate="20170927T031804Z">
        <seg>tutorial_using_tasks.html#N10239</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_using_tasks.html#N1029B</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T031822Z" creationid="huanghaohang" creationdate="20170927T031822Z">
        <seg>tutorial_using_tasks.html#N1029B</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_using_tasks.html#N102B0</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T031827Z" creationid="huanghaohang" creationdate="20170927T031827Z">
        <seg>tutorial_using_tasks.html#N102B0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_using_tasks.html#N10326</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T031851Z" creationid="huanghaohang" creationdate="20170927T031851Z">
        <seg>tutorial_using_tasks.html#N10326</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_using_tasks.html#N10346</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T031857Z" creationid="huanghaohang" creationdate="20170927T031857Z">
        <seg>tutorial_using_tasks.html#N10346</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_using_tasks.html#N103B3</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T032003Z" creationid="huanghaohang" creationdate="20170927T032003Z">
        <seg>tutorial_using_tasks.html#N103B3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_using_tasks.html#configure-by-dag</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T031923Z" creationid="huanghaohang" creationdate="20170927T031923Z">
        <seg>tutorial_using_tasks.html#configure-by-dag</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_using_tasks.html#sec:default_tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T031918Z" creationid="huanghaohang" creationdate="20170927T031918Z">
        <seg>tutorial_using_tasks.html#sec:default_tasks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_using_tasks.html#sec:extra_task_properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170927T031842Z" creationid="huanghaohang" creationdate="20170927T031842Z">
        <seg>tutorial_using_tasks.html#sec:extra_task_properties</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_using_tasks.html#sec:shortcut_notations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T132111Z" creationid="95" creationdate="20170727T132111Z">
        <seg>tutorial_using_tasks.html#sec:shortcut_notations</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_using_tasks.html#sec:task_dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T124951Z" creationid="huanghaohang" creationdate="20170919T124951Z">
        <seg>tutorial_using_tasks.html#sec:task_dependencies</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorials.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T141647Z" creationid="95" creationdate="20170721T141647Z">
        <seg>tutorials.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorials.html#N100CE</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170801T014537Z" creationid="haohang" creationdate="20170801T014537Z">
        <seg>tutorials.html#N100CE</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>unspecified</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T132252Z" creationid="huanghaohang" creationdate="20170913T132252Z">
        <seg>未指定</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>upload&lt;e0&gt;&lt;c1&gt;ConfigurationName&lt;/c1&gt;&lt;/e0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180313T035735Z" creationid="haohang" creationdate="20180313T035735Z">
        <seg>upload&lt;e0&gt;&lt;c1&gt;ConfigurationName&lt;/c1&gt;&lt;/e0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>uploadArchives</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180312T063137Z" creationid="haohang" creationdate="20180312T063137Z">
        <seg>uploadArchives</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>uploadArchives {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T153705Z" creationid="95" creationdate="20170731T153705Z">
        <seg>uploadArchives {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>url &lt;s0&gt;"http://repo.mycompany.com/maven2"&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T044841Z" creationid="huanghaohang" creationdate="20170908T044841Z">
        <seg>url &lt;s0&gt;"http://repo.mycompany.com/maven2"&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>url &lt;s0&gt;"http://repo.mycompany.com/repo"&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T044954Z" creationid="huanghaohang" creationdate="20170908T044954Z">
        <seg>url &lt;s0&gt;"http://repo.mycompany.com/repo"&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>url &lt;s1&gt;"../local-repo"&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T045148Z" creationid="huanghaohang" creationdate="20170908T045148Z">
        <seg>url &lt;s1&gt;"../local-repo"&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>url &lt;s2&gt;"http://repo.mycompany.com"&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T050456Z" creationid="huanghaohang" creationdate="20170908T050456Z">
        <seg>url &lt;s2&gt;"http://repo.mycompany.com"&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>useJUnit {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T041838Z" creationid="huanghaohang" creationdate="20180406T041838Z">
        <seg>useJUnit {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>useLogger(&lt;s0&gt;new&lt;/s0&gt; CustomEventLogger())

&lt;s1&gt;class&lt;/s1&gt; CustomEventLogger &lt;s2&gt;extends&lt;/s2&gt; BuildAdapter &lt;s3&gt;implements&lt;/s3&gt; TaskExecutionListener {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180107T144026Z" creationid="huanghaohang" creationdate="20180107T144026Z">
        <seg>useLogger(&lt;s0&gt;new&lt;/s0&gt; CustomEventLogger())

&lt;s1&gt;class&lt;/s1&gt; CustomEventLogger &lt;s2&gt;extends&lt;/s2&gt; BuildAdapter &lt;s3&gt;implements&lt;/s3&gt; TaskExecutionListener {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>useTestNG {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T042049Z" creationid="huanghaohang" creationdate="20180406T042049Z">
        <seg>useTestNG {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>userguide.css</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072246Z" creationid="haohang" creationdate="20170720T072246Z">
        <seg>userguide.css</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>userguide.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072248Z" creationid="haohang" creationdate="20170720T072248Z">
        <seg>userguide.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>username &lt;s0&gt;"username"&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T050451Z" creationid="huanghaohang" creationdate="20170908T050451Z">
        <seg>username &lt;s0&gt;"username"&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>version</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T132255Z" creationid="huanghaohang" creationdate="20170913T132255Z">
        <seg>version</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>version = &lt;s3&gt;'1.0'&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T124428Z" creationid="95" creationdate="20170803T124428Z">
        <seg>version = &lt;s4&gt;'1.0'&lt;/s4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>version = &lt;s4&gt;'1.0'&lt;/s4&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T025308Z" creationid="95" creationdate="20170729T025308Z">
        <seg>version = &lt;s4&gt;'1.0'&lt;/s4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>version = &lt;s6&gt;'1.0-SNAPSHOT'&lt;/s6&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T025311Z" creationid="95" creationdate="20170729T025311Z">
        <seg>version = &lt;s6&gt;'1.0-SNAPSHOT'&lt;/s6&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>visual-studio</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180211T090639Z" creationid="huanghaohang" creationdate="20180211T090639Z">
        <seg>visual-studio</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>war</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180206T014518Z" creationid="huanghaohang" creationdate="20180206T014518Z">
        <seg>war</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>war_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T010147Z" creationid="huanghaohang" creationdate="20170909T010147Z">
        <seg>war_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>web_project_tutorial.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T080955Z" creationid="95" creationdate="20170723T080955Z">
        <seg>web_project_tutorial.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>web_project_tutorial.html#N10725</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233815Z" creationid="huanghaohang" creationdate="20171206T233815Z">
        <seg>web_project_tutorial.html#N10725</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>web_project_tutorial.html#N1074A</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233828Z" creationid="huanghaohang" creationdate="20171206T233828Z">
        <seg>web_project_tutorial.html#N1074A</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>web_project_tutorial.html#N10763</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T233842Z" creationid="huanghaohang" creationdate="20171206T233842Z">
        <seg>web_project_tutorial.html#N10763</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>webapp:compile - Compiles the source files

Build Setup tasks
-----------------
init - Initializes a new Gradle build. [incubating]
wrapper - Generates Gradle wrapper files. [incubating]

Help tasks
----------
dependencies - Displays all dependencies declared in root project 'projectReports'.
api:dependencies - Displays all dependencies declared in project ':api'.
webapp:dependencies - Displays all dependencies declared in project ':webapp'.
dependencyInsight - Displays the insight into a specific dependency in root project 'projectReports'.
api:dependencyInsight - Displays the insight into a specific dependency in project ':api'.
webapp:dependencyInsight - Displays the insight into a specific dependency in project ':webapp'.
help - Displays a help message
api:help - Displays a help message
webapp:help - Displays a help message
projects - Displays the sub-projects of root project 'projectReports'.
api:projects - Displays the sub-projects of project ':api'.
webapp:projects - Displays the sub-projects of project ':webapp'.
properties - Displays the properties of root project 'projectReports'.
api:properties - Displays the properties of project ':api'.
webapp:properties - Displays the properties of project ':webapp'.
tasks - Displays the tasks runnable from root project 'projectReports' (some of the displayed tasks may belong to subprojects).
api:tasks - Displays the tasks runnable from project ':api'.
webapp:tasks - Displays the tasks runnable from project ':webapp'.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T012331Z" creationid="huanghaohang" creationdate="20170910T012331Z">
        <seg>webapp:compile - Compiles the source files

Build Setup tasks
-----------------
init - Initializes a new Gradle build. [incubating]
wrapper - Generates Gradle wrapper files. [incubating]

Help tasks
----------
dependencies - Displays all dependencies declared in root project 'projectReports'.
api:dependencies - Displays all dependencies declared in project ':api'.
webapp:dependencies - Displays all dependencies declared in project ':webapp'.
dependencyInsight - Displays the insight into a specific dependency in root project 'projectReports'.
api:dependencyInsight - Displays the insight into a specific dependency in project ':api'.
webapp:dependencyInsight - Displays the insight into a specific dependency in project ':webapp'.
help - Displays a help message
api:help - Displays a help message
webapp:help - Displays a help message
projects - Displays the sub-projects of root project 'projectReports'.
api:projects - Displays the sub-projects of project ':api'.
webapp:projects - Displays the sub-projects of project ':webapp'.
properties - Displays the properties of root project 'projectReports'.
api:properties - Displays the properties of project ':api'.
webapp:properties - Displays the properties of project ':webapp'.
tasks - Displays the tasks runnable from root project 'projectReports' (some of the displayed tasks may belong to subprojects).
api:tasks - Displays the tasks runnable from project ':api'.
webapp:tasks - Displays the tasks runnable from project ':webapp'.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>windows-resources</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180205T143109Z" creationid="huanghaohang" creationdate="20180205T143109Z">
        <seg>windows-resources</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>working_with_files.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170918T151556Z" creationid="huanghaohang" creationdate="20170918T151556Z">
        <seg>working_with_files.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>working_with_files.html#archiveTasksNamingProperties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171206T232311Z" creationid="huanghaohang" creationdate="20171206T232311Z">
        <seg>working_with_files.html#archiveTasksNamingProperties</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>working_with_files.html#sec:archive_contents</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180218T093026Z" creationid="huanghaohang" creationdate="20180218T093026Z">
        <seg>working_with_files.html#sec:archive_contents</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>working_with_files.html#sec:archives</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180218T093109Z" creationid="huanghaohang" creationdate="20180218T093109Z">
        <seg>working_with_files.html#sec:archives</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>working_with_files.html#sec:copying_files</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180218T093051Z" creationid="huanghaohang" creationdate="20180218T093051Z">
        <seg>working_with_files.html#sec:copying_files</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>working_with_files.html#sec:file_collections</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20171002T133631Z" creationid="huanghaohang" creationdate="20171002T133631Z">
        <seg>working_with_files.html#sec:file_collections</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>working_with_files.html#sec:file_trees</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180218T093020Z" creationid="huanghaohang" creationdate="20180218T093020Z">
        <seg>working_with_files.html#sec:file_trees</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>working_with_files.html#sec:locating_files</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T130840Z" creationid="huanghaohang" creationdate="20170923T130840Z">
        <seg>working_with_files.html#sec:locating_files</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>working_with_files.html#sec:specifying_multiple_files</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180218T093040Z" creationid="huanghaohang" creationdate="20180218T093040Z">
        <seg>working_with_files.html#sec:specifying_multiple_files</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>working_with_files.html#sec:sync_task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180218T093057Z" creationid="huanghaohang" creationdate="20180218T093057Z">
        <seg>working_with_files.html#sec:sync_task</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>wrapper</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180211T090214Z" creationid="huanghaohang" creationdate="20180211T090214Z">
        <seg>wrapper</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>wrapper_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180211T090700Z" creationid="huanghaohang" creationdate="20180211T090700Z">
        <seg>wrapper_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>writing_build_scripts.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170911T143145Z" creationid="huanghaohang" creationdate="20170911T143145Z">
        <seg>writing_build_scripts.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>writing_build_scripts.html#N109CD</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T032747Z" creationid="huanghaohang" creationdate="20180131T032747Z">
        <seg>writing_build_scripts.html#N109CD</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>writing_build_scripts.html#N10AD9</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T032804Z" creationid="huanghaohang" creationdate="20180131T032804Z">
        <seg>writing_build_scripts.html#N10AD9</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>writing_build_scripts.html#N10AE6</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T032832Z" creationid="huanghaohang" creationdate="20180131T032832Z">
        <seg>writing_build_scripts.html#N10AE6</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>writing_build_scripts.html#N10B36</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T032841Z" creationid="huanghaohang" creationdate="20180131T032841Z">
        <seg>writing_build_scripts.html#N10B36</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>writing_build_scripts.html#sec:extra_properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T142011Z" creationid="95" creationdate="20170727T142011Z">
        <seg>writing_build_scripts.html#sec:extra_properties</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>writing_build_scripts.html#sec:project_api</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180131T032756Z" creationid="huanghaohang" creationdate="20180131T032756Z">
        <seg>writing_build_scripts.html#sec:project_api</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170728T153819Z" creationid="95" creationdate="20170728T153819Z">
        <seg>}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T144952Z" creationid="95" creationdate="20170724T144952Z">
        <seg>}
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}
}

&lt;s2&gt;// Iterate over the source sets&lt;/s2&gt;
sourceSets.all {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20180320T094737Z" creationid="haohang" creationdate="20180320T094737Z">
        <seg>}
}

&lt;s2&gt;// Iterate over the source sets&lt;/s2&gt;
sourceSets.all {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}
}

File[] fileList(String dir) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T023512Z" creationid="95" creationdate="20170729T023512Z">
        <seg>}
}

File[] fileList(String dir) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}
}

artifacts {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T125722Z" creationid="95" creationdate="20170803T125722Z">
        <seg>}
}

artifacts {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}
}

project(&lt;s3&gt;'projectB'&lt;/s3&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170919T130155Z" creationid="huanghaohang" creationdate="20170919T130155Z">
        <seg>}
}

project(&lt;s3&gt;'projectB'&lt;/s3&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}
}

repositories {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T154103Z" creationid="95" creationdate="20170731T154103Z">
        <seg>}
}

repositories {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}
}

task groupPing {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170923T043836Z" creationid="huanghaohang" creationdate="20170923T043836Z">
        <seg>}
}

task groupPing {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}
}

task loadfile &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T023508Z" creationid="95" creationdate="20170729T023501Z">
        <seg>}
}

task loadfile &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}
}

task printProperties &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170913T133549Z" creationid="huanghaohang" creationdate="20170913T133549Z">
        <seg>}
}

task printProperties &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}
}

task testReport(type: TestReport) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20180406T044003Z" creationid="huanghaohang" creationdate="20180406T044003Z">
        <seg>}
}

task testReport(type: TestReport) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}
}
task0.dependsOn task2, task3</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T133026Z" creationid="95" creationdate="20170727T133026Z">
        <seg>}
}
task0.dependsOn task2, task3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>} &lt;s5&gt;else&lt;/s5&gt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T025309Z" creationid="95" creationdate="20170729T025309Z">
        <seg>} &lt;s5&gt;else&lt;/s5&gt; {</seg>
      </tuv>
    </tu>
<!-- Alternative translations -->
  </body>
</tmx>
