<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE tmx SYSTEM "tmx11.dtd">
<tmx version="1.1">
  <header creationtool="OmegaT" o-tmf="OmegaT TMX" adminlang="EN-US" datatype="plaintext" creationtoolversion="OmegaT-3.6.0" segtype="sentence" srclang="EN-US"/>
  <body>
<!-- Default translations -->
    <tu>
      <tuv lang="EN-US">
        <seg>"$project.buildDir/sonar"</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T065250Z" creationid="msdx" creationdate="20150513T065250Z">
        <seg>"$project.buildDir/sonar"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>"$project.group:$project.name" (for root project of analysed hierarchy; left to Sonar Runner otherwise)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T065559Z" creationid="msdx" creationdate="20150513T065246Z">
        <seg>"$project.group:$project.name" （所分析的层次结构的根项目，否则留给 Sonar Runner 处理）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>"&lt;e0&gt;&lt;c1&gt;$buildDir&lt;/c1&gt;&lt;/e0&gt;/reports/jacoco"</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T131630Z" creationid="msdx" creationdate="20150506T131630Z">
        <seg>"&lt;e0&gt;&lt;c1&gt;$buildDir&lt;/c1&gt;&lt;/e0&gt;/reports/jacoco"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>"reuseReports"</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T065250Z" creationid="msdx" creationdate="20150513T065250Z">
        <seg>"reuseReports"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#N10048</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141127T141002Z" creationid="msdx" creationdate="20141127T141002Z">
        <seg>#N10048</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#N100CE</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141127T141010Z" creationid="msdx" creationdate="20141127T141010Z">
        <seg>#N100CE</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#N10116</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141127T141012Z" creationid="msdx" creationdate="20141127T141012Z">
        <seg>#N10116</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#N10123</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141127T141013Z" creationid="msdx" creationdate="20141127T141013Z">
        <seg>#N10123</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#N1012C</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141127T141018Z" creationid="msdx" creationdate="20141127T141018Z">
        <seg>#N1012C</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#N10148</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141127T141018Z" creationid="msdx" creationdate="20141127T141018Z">
        <seg>#N10148</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#N10155</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141127T141019Z" creationid="msdx" creationdate="20141127T141019Z">
        <seg>#N10155</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#N10160</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141127T141020Z" creationid="msdx" creationdate="20141127T141020Z">
        <seg>#N10160</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#N10187</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141127T141022Z" creationid="msdx" creationdate="20141127T141022Z">
        <seg>#N10187</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#N10194</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141127T141023Z" creationid="msdx" creationdate="20141127T141023Z">
        <seg>#N10194</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#N101A5</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141127T141024Z" creationid="msdx" creationdate="20141127T141024Z">
        <seg>#N101A5</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#N101BC</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141127T141025Z" creationid="msdx" creationdate="20141127T141025Z">
        <seg>#N101BC</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#N10222</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141127T141026Z" creationid="msdx" creationdate="20141127T141026Z">
        <seg>#N10222</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#N10239</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141127T141026Z" creationid="msdx" creationdate="20141127T141026Z">
        <seg>#N10239</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#N10C0B</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T153807Z" creationid="msdx" creationdate="20141109T153807Z">
        <seg>#N10C0B</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#N10EFC</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T124042Z" creationid="msdx" creationdate="20141111T124042Z">
        <seg>#N10EFC</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#N113E2</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T063028Z" creationid="msdx" creationdate="20141116T063028Z">
        <seg>#N113E2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#N128A7</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T151601Z" creationid="msdx" creationdate="20150428T151601Z">
        <seg>#N128A7</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#N128BD</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T151624Z" creationid="msdx" creationdate="20150428T151624Z">
        <seg>#N128BD</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#N12A9E</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T094736Z" creationid="msdx" creationdate="20150429T094736Z">
        <seg>#N12A9E</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#N12E35</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T082243Z" creationid="msdx" creationdate="20150503T082243Z">
        <seg>#N12E35</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#N130DF</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T093826Z" creationid="msdx" creationdate="20150503T093826Z">
        <seg>#N130DF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#N14D3A</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151201T070342Z" creationid="haohang" creationdate="20151201T070342Z">
        <seg>#N14D3A</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#N14D58</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151201T070429Z" creationid="haohang" creationdate="20151201T070429Z">
        <seg>#N14D58</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#N150EB</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151201T070437Z" creationid="haohang" creationdate="20151201T070437Z">
        <seg>#N150EB</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#N15329</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151201T070524Z" creationid="haohang" creationdate="20151201T070524Z">
        <seg>#N15329</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#N15387</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151227T160747Z" creationid="95" creationdate="20151227T160747Z">
        <seg>#N15387</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#N15521</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T145717Z" creationid="95" creationdate="20160106T145717Z">
        <seg>#N15521</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#N15DE5</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T140256Z" creationid="95" creationdate="20160521T140256Z">
        <seg>#N15DE5</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#N162AF</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160727T054321Z" creationid="haohang" creationdate="20160727T054321Z">
        <seg>#N162AF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#N16335</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160727T055013Z" creationid="haohang" creationdate="20160727T055013Z">
        <seg>#N16335</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#N16351</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160727T055143Z" creationid="haohang" creationdate="20160727T055143Z">
        <seg>#N16351</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#N16459</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160727T055236Z" creationid="haohang" creationdate="20160727T055236Z">
        <seg>#N16459</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#ftn.N10B28</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T054401Z" creationid="msdx" creationdate="20141108T054401Z">
        <seg>#ftn.N10B28</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#ftn.N10C0B</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T141100Z" creationid="msdx" creationdate="20141109T141100Z">
        <seg>#ftn.N10C0B</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#ftn.N10EFC</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T055305Z" creationid="msdx" creationdate="20141111T055305Z">
        <seg>#ftn.N10EFC</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#ftn.N113E2</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141114T141737Z" creationid="msdx" creationdate="20141114T141737Z">
        <seg>#ftn.N113E2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#ftn.N128A7</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T082400Z" creationid="msdx" creationdate="20150428T082400Z">
        <seg>#ftn.N128A7</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#ftn.N128BD</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T082905Z" creationid="msdx" creationdate="20150428T082905Z">
        <seg>#ftn.N128BD</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#ftn.N12A9E</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T071822Z" creationid="msdx" creationdate="20150429T071822Z">
        <seg>#ftn.N12A9E</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#ftn.N12E35</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T152740Z" creationid="msdx" creationdate="20150429T152740Z">
        <seg>#ftn.N12E35</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#ftn.N130DF</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T092354Z" creationid="msdx" creationdate="20150503T092354Z">
        <seg>#ftn.N130DF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#ftn.N14D3A</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150730T040315Z" creationid="haohang" creationdate="20150730T040315Z">
        <seg>#ftn.N14D3A</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#ftn.N14D58</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150731T035215Z" creationid="haohang" creationdate="20150731T035215Z">
        <seg>#ftn.N14D58</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#ftn.N150EB</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T134258Z" creationid="95" creationdate="20151006T134258Z">
        <seg>#ftn.N150EB</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#ftn.N15329</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151130T051153Z" creationid="haohang" creationdate="20151130T051153Z">
        <seg>#ftn.N15329</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#ftn.N15387</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151220T123617Z" creationid="95" creationdate="20151220T123617Z">
        <seg>#ftn.N15387</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#ftn.N15521</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160104T154654Z" creationid="95" creationdate="20160104T154654Z">
        <seg>#ftn.N15521</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#ftn.N15DE5</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T070549Z" creationid="haohang" creationdate="20160519T070549Z">
        <seg>#ftn.N15DE5</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#ftn.N162AF</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160722T090413Z" creationid="haohang" creationdate="20160722T090413Z">
        <seg>#ftn.N162AF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#ftn.N16335</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T083548Z" creationid="haohang" creationdate="20160726T083548Z">
        <seg>#ftn.N16335</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#ftn.N16351</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T083853Z" creationid="haohang" creationdate="20160726T083853Z">
        <seg>#ftn.N16351</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#ftn.N16459</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160727T053550Z" creationid="haohang" creationdate="20160727T053550Z">
        <seg>#ftn.N16459</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#include &lt;CUnit/Basic.h&gt;
#include "gradle_cunit_register.h"
#include "test_operators.h"

int suite_init(void) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T150239Z" creationid="95" creationdate="20160504T150239Z">
        <seg>#include &lt;CUnit/Basic.h&gt;
#include "gradle_cunit_register.h"
#include "test_operators.h"

int suite_init(void) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#installation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141127T141011Z" creationid="msdx" creationdate="20141127T141011Z">
        <seg>#installation</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#introduction</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141127T141001Z" creationid="msdx" creationdate="20141127T141001Z">
        <seg>#introduction</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#overview</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141127T141003Z" creationid="msdx" creationdate="20141127T141003Z">
        <seg>#overview</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#sec:special_feature_of_gradle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141127T141005Z" creationid="msdx" creationdate="20141127T141005Z">
        <seg>#sec:special_feature_of_gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#sec:task_dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141127T141027Z" creationid="msdx" creationdate="20141127T141027Z">
        <seg>#sec:task_dependencies</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#sec:why_groovy</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141127T141008Z" creationid="msdx" creationdate="20141127T141008Z">
        <seg>#sec:why_groovy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#troubleshooting</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141127T141022Z" creationid="msdx" creationdate="20141127T141022Z">
        <seg>#troubleshooting</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#tutorial_using_tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141127T141024Z" creationid="msdx" creationdate="20141127T141024Z">
        <seg>#tutorial_using_tasks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#tutorials</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141127T141009Z" creationid="msdx" creationdate="20141127T141009Z">
        <seg>#tutorials</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>'build' never runs before 'clean'.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T144040Z" creationid="msdx" creationdate="20141110T144040Z">
        <seg>'build' 永远不会在 'clean' 前面执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(But, once you've migrated, it might be a good idea to move away from a .classpath file and use Gradle's dependency management features directly.)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150716T045300Z" creationid="haohang" creationdate="20150716T045250Z">
        <seg>（但是，一旦你已经迁移，远离 .classpath 文件，直接使用 Gradle 的依赖管理功能会是一个好主意。）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(In the case of dependency entries, this is also the default behavior.) Other sections of the &lt;c1&gt;.classpath&lt;/c1&gt; file will be either left as-is or merged.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T065611Z" creationid="haohang" creationdate="20150625T065611Z">
        <seg>(对于依赖项，这也是默认行为。)其他部分的&lt;c1&gt;.classpath&lt;/c1&gt;文件将会被合并或者保留。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(In the case of dependency entries, this is also the default behavior.) Other sections of the module file will be either left as-is or merged.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T074004Z" creationid="haohang" creationdate="20150625T074004Z">
        <seg>(对于依赖项，这也是默认行为。)其他部分的模块文件将会被保留或合并。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(It does detect changes to the compile class path itself.) This makes it less suitable for multi-project builds.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150430T155541Z" creationid="msdx" creationdate="20150430T155541Z">
        <seg>(它本身不会去检测编译类路径的更改。）这使得它不太适合于多项目的构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(See &lt;a0&gt;Section 13.4.2, “Extra properties”&lt;/a0&gt; for more information on extra properties.)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160530T144340Z" creationid="95" creationdate="20160530T144340Z">
        <seg>（有关额外属性的更多信息，请参见&lt;a0&gt;第 13.4.2 节，“额外属性”&lt;/a0&gt;。）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(The Cygwin runtime is not yet modelled as part of the Platform, but will be in the future.)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T092524Z" creationid="haohang" creationdate="20160408T092404Z">
        <seg>（Cywgin运行时还不能模拟为Platform的一部分，但以后将会实现。）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T102847Z" creationid="haohang" creationdate="20150722T102847Z">
        <seg>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>-</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141126T120903Z" creationid="msdx" creationdate="20141126T120903Z">
        <seg>-</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>- I love to spend time in the arctic waters.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160530T144441Z" creationid="95" creationdate="20160530T144441Z">
        <seg>- I love to spend time in the arctic waters.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>- I'm the largest animal that has ever lived on this planet.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160527T163833Z" creationid="95" creationdate="20160527T163833Z">
        <seg>- I'm the largest animal that has ever lived on this planet.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>- The weight of my species in summer is twice as heavy as all human beings.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160527T163841Z" creationid="95" creationdate="20160527T163841Z">
        <seg>- The weight of my species in summer is twice as heavy as all human beings.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.DefaultTask.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T145323Z" creationid="95" creationdate="20160814T145323Z">
        <seg>../dsl/org.gradle.api.DefaultTask.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.Project.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T040006Z" creationid="msdx" creationdate="20141108T040006Z">
        <seg>../dsl/org.gradle.api.Project.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:apply(java.util.Map)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141122T161837Z" creationid="msdx" creationdate="20141122T161837Z">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:apply(java.util.Map)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:copy(groovy.lang.Closure)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T131125Z" creationid="msdx" creationdate="20141113T131125Z">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:copy(groovy.lang.Closure)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:copySpec(groovy.lang.Closure)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T160721Z" creationid="msdx" creationdate="20141113T160721Z">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:copySpec(groovy.lang.Closure)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:file(java.lang.Object)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T043529Z" creationid="msdx" creationdate="20141112T043529Z">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:file(java.lang.Object)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:fileTree(java.util.Map)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T101623Z" creationid="msdx" creationdate="20141113T101623Z">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:fileTree(java.util.Map)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:files(java.lang.Object...)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T145251Z" creationid="msdx" creationdate="20141112T145251Z">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:files(java.lang.Object...)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:tarTree(java.lang.Object)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T120412Z" creationid="msdx" creationdate="20141113T120412Z">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:tarTree(java.lang.Object)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:zipTree(java.lang.Object)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T120411Z" creationid="msdx" creationdate="20141113T120411Z">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:zipTree(java.lang.Object)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.Script.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T044531Z" creationid="msdx" creationdate="20141108T044531Z">
        <seg>../dsl/org.gradle.api.Script.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.Task.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T123909Z" creationid="msdx" creationdate="20141110T123909Z">
        <seg>../dsl/org.gradle.api.Task.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.Task.html#org.gradle.api.Task:dependsOn(java.lang.Object...)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T013526Z" creationid="msdx" creationdate="20141111T013526Z">
        <seg>../dsl/org.gradle.api.Task.html#org.gradle.api.Task:dependsOn(java.lang.Object...)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.Task.html#org.gradle.api.Task:finalizedBy(java.lang.Object...)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T123038Z" creationid="msdx" creationdate="20141111T123038Z">
        <seg>../dsl/org.gradle.api.Task.html#org.gradle.api.Task:finalizedBy(java.lang.Object...)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.Task.html#org.gradle.api.Task:mustRunAfter(java.lang.Object...)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T013523Z" creationid="msdx" creationdate="20141111T013523Z">
        <seg>../dsl/org.gradle.api.Task.html#org.gradle.api.Task:mustRunAfter(java.lang.Object...)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.artifacts.Configuration.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T094950Z" creationid="haohang" creationdate="20150801T094950Z">
        <seg>../dsl/org.gradle.api.artifacts.Configuration.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.artifacts.ConfigurationContainer.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T075618Z" creationid="haohang" creationdate="20150722T075618Z">
        <seg>../dsl/org.gradle.api.artifacts.ConfigurationContainer.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.artifacts.ResolutionStrategy.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150721T061625Z" creationid="haohang" creationdate="20150721T061625Z">
        <seg>../dsl/org.gradle.api.artifacts.ResolutionStrategy.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.artifacts.dsl.DependencyHandler.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150721T083840Z" creationid="haohang" creationdate="20150721T083840Z">
        <seg>../dsl/org.gradle.api.artifacts.dsl.DependencyHandler.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.artifacts.dsl.DependencyHandler.html#org.gradle.api.artifacts.dsl.DependencyHandler:gradleApi()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T094515Z" creationid="haohang" creationdate="20150801T094515Z">
        <seg>../dsl/org.gradle.api.artifacts.dsl.DependencyHandler.html#org.gradle.api.artifacts.dsl.DependencyHandler:gradleApi()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.artifacts.dsl.DependencyHandler.html#org.gradle.api.artifacts.dsl.DependencyHandler:localGroovy()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T094707Z" creationid="haohang" creationdate="20150801T094707Z">
        <seg>../dsl/org.gradle.api.artifacts.dsl.DependencyHandler.html#org.gradle.api.artifacts.dsl.DependencyHandler:localGroovy()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.artifacts.repositories.IvyArtifactRepository.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T110444Z" creationid="95" creationdate="20151006T110444Z">
        <seg>../dsl/org.gradle.api.artifacts.repositories.IvyArtifactRepository.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.distribution.DistributionContainer.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150701T025859Z" creationid="haohang" creationdate="20150701T025859Z">
        <seg>../dsl/org.gradle.api.distribution.DistributionContainer.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.initialization.Settings.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T025439Z" creationid="haohang" creationdate="20160519T025439Z">
        <seg>../dsl/org.gradle.api.initialization.Settings.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.invocation.Gradle.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T132221Z" creationid="95" creationdate="20160521T132221Z">
        <seg>../dsl/org.gradle.api.invocation.Gradle.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.invocation.Gradle.html#org.gradle.api.invocation.Gradle:useLogger(java.lang.Object)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T152843Z" creationid="msdx" creationdate="20141116T152843Z">
        <seg>../dsl/org.gradle.api.invocation.Gradle.html#org.gradle.api.invocation.Gradle:useLogger(java.lang.Object)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.plugins.BasePluginConvention.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083247Z" creationid="msdx" creationdate="20150428T083247Z">
        <seg>../dsl/org.gradle.api.plugins.BasePluginConvention.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.plugins.ExtraPropertiesExtension.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T055333Z" creationid="msdx" creationdate="20141108T055333Z">
        <seg>../dsl/org.gradle.api.plugins.ExtraPropertiesExtension.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.plugins.JavaPluginConvention.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083246Z" creationid="msdx" creationdate="20150428T083246Z">
        <seg>../dsl/org.gradle.api.plugins.JavaPluginConvention.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.plugins.MavenPluginConvention.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151228T153151Z" creationid="95" creationdate="20151228T153151Z">
        <seg>../dsl/org.gradle.api.plugins.MavenPluginConvention.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.plugins.ProjectReportsPluginConvention.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T062250Z" creationid="haohang" creationdate="20150628T062250Z">
        <seg>../dsl/org.gradle.api.plugins.ProjectReportsPluginConvention.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.plugins.ReportingBasePluginConvention.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083247Z" creationid="msdx" creationdate="20150428T083247Z">
        <seg>../dsl/org.gradle.api.plugins.ReportingBasePluginConvention.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.plugins.WarPluginConvention.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T092327Z" creationid="msdx" creationdate="20150503T092327Z">
        <seg>../dsl/org.gradle.api.plugins.WarPluginConvention.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.plugins.announce.AnnouncePluginExtension.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T090948Z" creationid="haohang" creationdate="20150628T090948Z">
        <seg>../dsl/org.gradle.api.plugins.announce.AnnouncePluginExtension.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.plugins.antlr.AntlrTask.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T094930Z" creationid="haohang" creationdate="20150625T094930Z">
        <seg>../dsl/org.gradle.api.plugins.antlr.AntlrTask.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.plugins.jetty.JettyPluginConvention.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T151348Z" creationid="msdx" creationdate="20150504T151348Z">
        <seg>../dsl/org.gradle.api.plugins.jetty.JettyPluginConvention.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.plugins.jetty.JettyRun.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T150216Z" creationid="msdx" creationdate="20150504T150216Z">
        <seg>../dsl/org.gradle.api.plugins.jetty.JettyRun.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.plugins.jetty.JettyRunWar.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T150421Z" creationid="msdx" creationdate="20150504T150421Z">
        <seg>../dsl/org.gradle.api.plugins.jetty.JettyRunWar.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.plugins.jetty.JettyStop.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T150446Z" creationid="msdx" creationdate="20150504T150446Z">
        <seg>../dsl/org.gradle.api.plugins.jetty.JettyStop.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.plugins.osgi.OsgiPluginConvention.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150526T004507Z" creationid="haohang" creationdate="20150526T004507Z">
        <seg>../dsl/org.gradle.api.plugins.osgi.OsgiPluginConvention.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.plugins.quality.Checkstyle.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T024701Z" creationid="msdx" creationdate="20150505T024701Z">
        <seg>../dsl/org.gradle.api.plugins.quality.Checkstyle.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.plugins.quality.CheckstyleExtension.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T132837Z" creationid="msdx" creationdate="20150505T132837Z">
        <seg>../dsl/org.gradle.api.plugins.quality.CheckstyleExtension.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.plugins.quality.CodeNarc.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T133151Z" creationid="msdx" creationdate="20150505T133151Z">
        <seg>../dsl/org.gradle.api.plugins.quality.CodeNarc.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.plugins.quality.CodeNarcExtension.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T133513Z" creationid="msdx" creationdate="20150505T133513Z">
        <seg>../dsl/org.gradle.api.plugins.quality.CodeNarcExtension.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.plugins.quality.FindBugs.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T133646Z" creationid="msdx" creationdate="20150505T133646Z">
        <seg>../dsl/org.gradle.api.plugins.quality.FindBugs.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.plugins.quality.FindBugsExtension.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T133856Z" creationid="msdx" creationdate="20150505T133856Z">
        <seg>../dsl/org.gradle.api.plugins.quality.FindBugsExtension.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.plugins.quality.JDepend.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T134230Z" creationid="msdx" creationdate="20150505T134230Z">
        <seg>../dsl/org.gradle.api.plugins.quality.JDepend.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.plugins.quality.JDependExtension.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T134502Z" creationid="msdx" creationdate="20150505T134502Z">
        <seg>../dsl/org.gradle.api.plugins.quality.JDependExtension.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.plugins.quality.Pmd.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T135544Z" creationid="msdx" creationdate="20150505T135544Z">
        <seg>../dsl/org.gradle.api.plugins.quality.Pmd.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.plugins.quality.PmdExtension.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T135724Z" creationid="msdx" creationdate="20150505T135724Z">
        <seg>../dsl/org.gradle.api.plugins.quality.PmdExtension.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.plugins.sonar.SonarAnalyze.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T054214Z" creationid="msdx" creationdate="20150513T054214Z">
        <seg>../dsl/org.gradle.api.plugins.sonar.SonarAnalyze.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.reporting.GenerateBuildDashboard.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150713T100312Z" creationid="haohang" creationdate="20150713T100312Z">
        <seg>../dsl/org.gradle.api.reporting.GenerateBuildDashboard.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.reporting.Reporting.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T131640Z" creationid="msdx" creationdate="20150506T131640Z">
        <seg>../dsl/org.gradle.api.reporting.Reporting.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.reporting.ReportingExtension.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150713T100450Z" creationid="haohang" creationdate="20150713T100450Z">
        <seg>../dsl/org.gradle.api.reporting.ReportingExtension.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.reporting.dependencies.HtmlDependencyReportTask.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T061236Z" creationid="haohang" creationdate="20150628T061236Z">
        <seg>../dsl/org.gradle.api.reporting.dependencies.HtmlDependencyReportTask.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.Copy.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T090224Z" creationid="msdx" creationdate="20141110T090224Z">
        <seg>../dsl/org.gradle.api.tasks.Copy.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.Delete.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083222Z" creationid="msdx" creationdate="20150428T083222Z">
        <seg>../dsl/org.gradle.api.tasks.Delete.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.GroovySourceSet.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T093602Z" creationid="msdx" creationdate="20150429T093602Z">
        <seg>../dsl/org.gradle.api.tasks.GroovySourceSet.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.JavaExec.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150702T105010Z" creationid="haohang" creationdate="20150702T105010Z">
        <seg>../dsl/org.gradle.api.tasks.JavaExec.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.ScalaSourceSet.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150430T154908Z" creationid="msdx" creationdate="20150430T154908Z">
        <seg>../dsl/org.gradle.api.tasks.ScalaSourceSet.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.SourceSet.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141121T142848Z" creationid="msdx" creationdate="20141121T142848Z">
        <seg>../dsl/org.gradle.api.tasks.SourceSet.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.SourceSetOutput.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083250Z" creationid="msdx" creationdate="20150428T083250Z">
        <seg>../dsl/org.gradle.api.tasks.SourceSetOutput.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.Sync.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T143959Z" creationid="msdx" creationdate="20141113T143959Z">
        <seg>../dsl/org.gradle.api.tasks.Sync.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.Upload.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083218Z" creationid="msdx" creationdate="20150428T083218Z">
        <seg>../dsl/org.gradle.api.tasks.Upload.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.application.CreateStartScripts.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150702T105016Z" creationid="haohang" creationdate="20150702T105016Z">
        <seg>../dsl/org.gradle.api.tasks.application.CreateStartScripts.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.bundling.AbstractArchiveTask.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104929Z" creationid="msdx" creationdate="20150428T104929Z">
        <seg>../dsl/org.gradle.api.tasks.bundling.AbstractArchiveTask.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.bundling.Jar.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T145509Z" creationid="msdx" creationdate="20141113T145509Z">
        <seg>../dsl/org.gradle.api.tasks.bundling.Jar.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.bundling.Tar.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T145509Z" creationid="msdx" creationdate="20141113T145509Z">
        <seg>../dsl/org.gradle.api.tasks.bundling.Tar.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.bundling.War.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T145509Z" creationid="msdx" creationdate="20141113T145509Z">
        <seg>../dsl/org.gradle.api.tasks.bundling.War.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.bundling.Zip.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T145508Z" creationid="msdx" creationdate="20141113T145508Z">
        <seg>../dsl/org.gradle.api.tasks.bundling.Zip.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.compile.GroovyCompile.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T071352Z" creationid="msdx" creationdate="20150429T071352Z">
        <seg>../dsl/org.gradle.api.tasks.compile.GroovyCompile.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.compile.JavaCompile.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T122857Z" creationid="msdx" creationdate="20141113T122857Z">
        <seg>../dsl/org.gradle.api.tasks.compile.JavaCompile.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.diagnostics.DependencyReportTask.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T061214Z" creationid="haohang" creationdate="20150628T061214Z">
        <seg>../dsl/org.gradle.api.tasks.diagnostics.DependencyReportTask.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.diagnostics.PropertyReportTask.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T061522Z" creationid="haohang" creationdate="20150628T061522Z">
        <seg>../dsl/org.gradle.api.tasks.diagnostics.PropertyReportTask.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.diagnostics.TaskReportTask.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T061527Z" creationid="haohang" creationdate="20150628T061527Z">
        <seg>../dsl/org.gradle.api.tasks.diagnostics.TaskReportTask.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.javadoc.Groovydoc.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T071455Z" creationid="msdx" creationdate="20150429T071455Z">
        <seg>../dsl/org.gradle.api.tasks.javadoc.Groovydoc.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.javadoc.Javadoc.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083216Z" creationid="msdx" creationdate="20150428T083216Z">
        <seg>../dsl/org.gradle.api.tasks.javadoc.Javadoc.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.scala.ScalaCompile.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T145448Z" creationid="msdx" creationdate="20150429T145448Z">
        <seg>../dsl/org.gradle.api.tasks.scala.ScalaCompile.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.scala.ScalaDoc.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T145512Z" creationid="msdx" creationdate="20150429T145512Z">
        <seg>../dsl/org.gradle.api.tasks.scala.ScalaDoc.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.testing.Test.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083217Z" creationid="msdx" creationdate="20150428T083217Z">
        <seg>../dsl/org.gradle.api.tasks.testing.Test.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.testing.Test.html#org.gradle.api.tasks.testing.Test:debug</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083450Z" creationid="msdx" creationdate="20150428T083450Z">
        <seg>../dsl/org.gradle.api.tasks.testing.Test.html#org.gradle.api.tasks.testing.Test:debug</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.testing.TestReport.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T142153Z" creationid="msdx" creationdate="20150428T142153Z">
        <seg>../dsl/org.gradle.api.tasks.testing.TestReport.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.testing.logging.TestLoggingContainer.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083449Z" creationid="msdx" creationdate="20150428T083449Z">
        <seg>../dsl/org.gradle.api.tasks.testing.logging.TestLoggingContainer.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.wrapper.Wrapper.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104928Z" creationid="msdx" creationdate="20150428T104928Z">
        <seg>../dsl/org.gradle.api.tasks.wrapper.Wrapper.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.buildinit.tasks.InitBuild.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T071554Z" creationid="haohang" creationdate="20150707T071554Z">
        <seg>../dsl/org.gradle.buildinit.tasks.InitBuild.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.ide.visualstudio.VisualStudioExtension.html#org.gradle.ide.visualstudio.VisualStudioExtension:projects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T095432Z" creationid="haohang" creationdate="20160408T095432Z">
        <seg>../dsl/org.gradle.ide.visualstudio.VisualStudioExtension.html#org.gradle.ide.visualstudio.VisualStudioExtension:projects</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.ide.visualstudio.VisualStudioExtension.html#org.gradle.ide.visualstudio.VisualStudioExtension:solutions</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T095432Z" creationid="haohang" creationdate="20160408T095432Z">
        <seg>../dsl/org.gradle.ide.visualstudio.VisualStudioExtension.html#org.gradle.ide.visualstudio.VisualStudioExtension:solutions</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.language.assembler.AssemblerSourceSet.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160313T053832Z" creationid="95" creationdate="20160313T053832Z">
        <seg>../dsl/org.gradle.language.assembler.AssemblerSourceSet.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.language.c.CSourceSet.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160225T090444Z" creationid="haohang" creationdate="20160225T090444Z">
        <seg>../dsl/org.gradle.language.c.CSourceSet.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.language.cpp.CppSourceSet.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160219T082845Z" creationid="haohang" creationdate="20160219T082845Z">
        <seg>../dsl/org.gradle.language.cpp.CppSourceSet.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.language.objectivec.ObjectiveCSourceSet.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160319T115139Z" creationid="95" creationdate="20160319T115139Z">
        <seg>../dsl/org.gradle.language.objectivec.ObjectiveCSourceSet.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.language.objectivecpp.ObjectiveCppSourceSet.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160319T115450Z" creationid="95" creationdate="20160319T115450Z">
        <seg>../dsl/org.gradle.language.objectivecpp.ObjectiveCppSourceSet.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.language.rc.WindowsResourceSet.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160324T153250Z" creationid="95" creationdate="20160324T153250Z">
        <seg>../dsl/org.gradle.language.rc.WindowsResourceSet.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.nativebinaries.Executable.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160128T153603Z" creationid="95" creationdate="20160128T153603Z">
        <seg>../dsl/org.gradle.nativebinaries.Executable.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.nativebinaries.ExecutableBinary.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160219T072229Z" creationid="haohang" creationdate="20160219T072229Z">
        <seg>../dsl/org.gradle.nativebinaries.ExecutableBinary.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.nativebinaries.Library.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160128T153603Z" creationid="95" creationdate="20160128T153603Z">
        <seg>../dsl/org.gradle.nativebinaries.Library.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.nativebinaries.NativeBinary.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160128T153604Z" creationid="95" creationdate="20160128T153604Z">
        <seg>../dsl/org.gradle.nativebinaries.NativeBinary.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.nativebinaries.ProjectNativeBinary.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T150552Z" creationid="95" creationdate="20160504T150552Z">
        <seg>../dsl/org.gradle.nativebinaries.ProjectNativeBinary.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.nativebinaries.SharedLibraryBinary.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160219T064959Z" creationid="haohang" creationdate="20160219T064959Z">
        <seg>../dsl/org.gradle.nativebinaries.SharedLibraryBinary.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.nativebinaries.StaticLibraryBinary.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160219T065000Z" creationid="haohang" creationdate="20160219T065000Z">
        <seg>../dsl/org.gradle.nativebinaries.StaticLibraryBinary.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.nativebinaries.TargetedNativeComponent.html#org.gradle.nativebinaries.TargetedNativeComponent:targetBuildTypes(java.lang.String...)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T083048Z" creationid="haohang" creationdate="20160408T083048Z">
        <seg>../dsl/org.gradle.nativebinaries.TargetedNativeComponent.html#org.gradle.nativebinaries.TargetedNativeComponent:targetBuildTypes(java.lang.String...)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.nativebinaries.TargetedNativeComponent.html#org.gradle.nativebinaries.TargetedNativeComponent:targetFlavors(java.lang.String...)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T083049Z" creationid="haohang" creationdate="20160408T083049Z">
        <seg>../dsl/org.gradle.nativebinaries.TargetedNativeComponent.html#org.gradle.nativebinaries.TargetedNativeComponent:targetFlavors(java.lang.String...)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.nativebinaries.TargetedNativeComponent.html#org.gradle.nativebinaries.TargetedNativeComponent:targetPlatforms(java.lang.String...)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T082931Z" creationid="haohang" creationdate="20160408T082931Z">
        <seg>../dsl/org.gradle.nativebinaries.TargetedNativeComponent.html#org.gradle.nativebinaries.TargetedNativeComponent:targetPlatforms(java.lang.String...)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.nativebinaries.language.PreprocessingTool.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160325T023109Z" creationid="haohang" creationdate="20160325T023109Z">
        <seg>../dsl/org.gradle.nativebinaries.language.PreprocessingTool.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.nativebinaries.platform.Platform.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160401T091008Z" creationid="haohang" creationdate="20160401T091008Z">
        <seg>../dsl/org.gradle.nativebinaries.platform.Platform.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.nativebinaries.test.cunit.CUnitTestSuite.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T144035Z" creationid="95" creationdate="20160504T144035Z">
        <seg>../dsl/org.gradle.nativebinaries.test.cunit.CUnitTestSuite.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.nativebinaries.toolchain.Clang.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T091210Z" creationid="haohang" creationdate="20160408T091210Z">
        <seg>../dsl/org.gradle.nativebinaries.toolchain.Clang.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.nativebinaries.toolchain.Gcc.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T091206Z" creationid="haohang" creationdate="20160408T091206Z">
        <seg>../dsl/org.gradle.nativebinaries.toolchain.Gcc.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.nativebinaries.toolchain.PlatformConfigurableToolChain.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T092742Z" creationid="haohang" creationdate="20160408T092742Z">
        <seg>../dsl/org.gradle.nativebinaries.toolchain.PlatformConfigurableToolChain.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.nativebinaries.toolchain.ToolChain.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160324T151803Z" creationid="95" creationdate="20160324T151803Z">
        <seg>../dsl/org.gradle.nativebinaries.toolchain.ToolChain.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.nativebinaries.toolchain.VisualCpp.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160324T153130Z" creationid="95" creationdate="20160324T153130Z">
        <seg>../dsl/org.gradle.nativebinaries.toolchain.VisualCpp.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.plugins.ear.Ear.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T145510Z" creationid="msdx" creationdate="20141113T145510Z">
        <seg>../dsl/org.gradle.plugins.ear.Ear.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.plugins.ear.EarPluginConvention.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T142436Z" creationid="msdx" creationdate="20150504T142436Z">
        <seg>../dsl/org.gradle.plugins.ear.EarPluginConvention.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.plugins.ide.eclipse.GenerateEclipseClasspath.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T004450Z" creationid="haohang" creationdate="20150603T004450Z">
        <seg>../dsl/org.gradle.plugins.ide.eclipse.GenerateEclipseClasspath.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.plugins.ide.eclipse.GenerateEclipseJdt.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T004502Z" creationid="haohang" creationdate="20150603T004502Z">
        <seg>../dsl/org.gradle.plugins.ide.eclipse.GenerateEclipseJdt.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.plugins.ide.eclipse.GenerateEclipseProject.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T004432Z" creationid="haohang" creationdate="20150603T004432Z">
        <seg>../dsl/org.gradle.plugins.ide.eclipse.GenerateEclipseProject.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.plugins.ide.eclipse.GenerateEclipseWtpComponent.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T004510Z" creationid="haohang" creationdate="20150603T004510Z">
        <seg>../dsl/org.gradle.plugins.ide.eclipse.GenerateEclipseWtpComponent.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.plugins.ide.eclipse.GenerateEclipseWtpFacet.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T004539Z" creationid="haohang" creationdate="20150603T004539Z">
        <seg>../dsl/org.gradle.plugins.ide.eclipse.GenerateEclipseWtpFacet.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.plugins.ide.eclipse.model.EclipseClasspath.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T022411Z" creationid="haohang" creationdate="20150624T022411Z">
        <seg>../dsl/org.gradle.plugins.ide.eclipse.model.EclipseClasspath.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.plugins.ide.eclipse.model.EclipseJdt.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T022423Z" creationid="haohang" creationdate="20150624T022423Z">
        <seg>../dsl/org.gradle.plugins.ide.eclipse.model.EclipseJdt.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.plugins.ide.eclipse.model.EclipseModel.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T004645Z" creationid="haohang" creationdate="20150603T004645Z">
        <seg>../dsl/org.gradle.plugins.ide.eclipse.model.EclipseModel.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.plugins.ide.eclipse.model.EclipseProject.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T022122Z" creationid="haohang" creationdate="20150624T022122Z">
        <seg>../dsl/org.gradle.plugins.ide.eclipse.model.EclipseProject.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T022452Z" creationid="haohang" creationdate="20150624T022452Z">
        <seg>../dsl/org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.plugins.ide.eclipse.model.EclipseWtpFacet.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T022523Z" creationid="haohang" creationdate="20150624T022523Z">
        <seg>../dsl/org.gradle.plugins.ide.eclipse.model.EclipseWtpFacet.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.plugins.ide.idea.GenerateIdeaModule.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T072554Z" creationid="haohang" creationdate="20150625T072554Z">
        <seg>../dsl/org.gradle.plugins.ide.idea.GenerateIdeaModule.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.plugins.ide.idea.GenerateIdeaProject.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T072517Z" creationid="haohang" creationdate="20150625T072517Z">
        <seg>../dsl/org.gradle.plugins.ide.idea.GenerateIdeaProject.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.plugins.ide.idea.GenerateIdeaWorkspace.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T072603Z" creationid="haohang" creationdate="20150625T072603Z">
        <seg>../dsl/org.gradle.plugins.ide.idea.GenerateIdeaWorkspace.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.plugins.ide.idea.model.IdeaModel.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T072640Z" creationid="haohang" creationdate="20150625T072640Z">
        <seg>../dsl/org.gradle.plugins.ide.idea.model.IdeaModel.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.plugins.ide.idea.model.IdeaModule.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T072705Z" creationid="haohang" creationdate="20150625T072705Z">
        <seg>../dsl/org.gradle.plugins.ide.idea.model.IdeaModule.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.plugins.ide.idea.model.IdeaProject.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T072658Z" creationid="haohang" creationdate="20150625T072658Z">
        <seg>../dsl/org.gradle.plugins.ide.idea.model.IdeaProject.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.plugins.ide.idea.model.IdeaWorkspace.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T072713Z" creationid="haohang" creationdate="20150625T072713Z">
        <seg>../dsl/org.gradle.plugins.ide.idea.model.IdeaWorkspace.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.plugins.signing.Sign.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160109T072234Z" creationid="95" creationdate="20160109T072234Z">
        <seg>../dsl/org.gradle.plugins.signing.Sign.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.plugins.signing.SigningExtension.html#org.gradle.plugins.signing.SigningExtension:signPom(org.gradle.api.artifacts.maven.MavenDeployment, groovy.lang.Closure)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160126T144649Z" creationid="95" creationdate="20160126T144649Z">
        <seg>../dsl/org.gradle.plugins.signing.SigningExtension.html#org.gradle.plugins.signing.SigningExtension:signPom(org.gradle.api.artifacts.maven.MavenDeployment, groovy.lang.Closure)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.testing.jacoco.plugins.JacocoPluginExtension.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T130435Z" creationid="msdx" creationdate="20150506T130435Z">
        <seg>../dsl/org.gradle.testing.jacoco.plugins.JacocoPluginExtension.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.testing.jacoco.plugins.JacocoTaskExtension.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T132017Z" creationid="msdx" creationdate="20150506T132017Z">
        <seg>../dsl/org.gradle.testing.jacoco.plugins.JacocoTaskExtension.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.testing.jacoco.tasks.JacocoReport.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T131639Z" creationid="msdx" creationdate="20150506T131639Z">
        <seg>../dsl/org.gradle.testing.jacoco.tasks.JacocoReport.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../groovydoc/org/gradle/api/plugins/sonar/model/SonarDatabase.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150510T143858Z" creationid="msdx" creationdate="20150510T143858Z">
        <seg>../groovydoc/org/gradle/api/plugins/sonar/model/SonarRootModel.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../groovydoc/org/gradle/api/plugins/sonar/model/SonarProject.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150510T143859Z" creationid="msdx" creationdate="20150510T143859Z">
        <seg>../groovydoc/org/gradle/api/plugins/sonar/model/SonarRootModel.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../groovydoc/org/gradle/api/plugins/sonar/model/SonarProjectModel.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T091356Z" creationid="msdx" creationdate="20150512T091356Z">
        <seg>../groovydoc/org/gradle/api/plugins/sonar/model/SonarRootModel.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../groovydoc/org/gradle/api/plugins/sonar/model/SonarProperty.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T092754Z" creationid="msdx" creationdate="20150512T092754Z">
        <seg>../groovydoc/org/gradle/api/plugins/sonar/model/SonarRootModel.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../groovydoc/org/gradle/api/plugins/sonar/model/SonarRootModel.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150510T143857Z" creationid="msdx" creationdate="20150510T143857Z">
        <seg>../groovydoc/org/gradle/api/plugins/sonar/model/SonarRootModel.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../groovydoc/org/gradle/api/plugins/sonar/model/SonarServer.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150510T143858Z" creationid="msdx" creationdate="20150510T143858Z">
        <seg>../groovydoc/org/gradle/api/plugins/sonar/model/SonarRootModel.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../groovydoc/org/gradle/api/sonar/runner/SonarRunner.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T062400Z" creationid="msdx" creationdate="20150513T062400Z">
        <seg>../groovydoc/org/gradle/api/sonar/runner/SonarRunner.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../groovydoc/org/gradle/plugins/ide/eclipse/model/Classpath.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T105327Z" creationid="haohang" creationdate="20150624T105257Z">
        <seg>../groovydoc/org/gradle/plugins/ide/eclipse/model/Classpath.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../groovydoc/org/gradle/plugins/ide/eclipse/model/Project.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T105252Z" creationid="haohang" creationdate="20150624T105252Z">
        <seg>../groovydoc/org/gradle/plugins/ide/eclipse/model/Project.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../groovydoc/org/gradle/plugins/ide/eclipse/model/WtpComponent.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T105355Z" creationid="haohang" creationdate="20150624T105349Z">
        <seg>../groovydoc/org/gradle/plugins/ide/eclipse/model/WtpComponent.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../groovydoc/org/gradle/plugins/ide/eclipse/model/WtpFacet.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T105405Z" creationid="haohang" creationdate="20150624T105405Z">
        <seg>../groovydoc/org/gradle/plugins/ide/eclipse/model/WtpFacet.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../groovydoc/org/gradle/plugins/ide/idea/model/Module.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T073731Z" creationid="haohang" creationdate="20150625T073731Z">
        <seg>../groovydoc/org/gradle/plugins/ide/idea/model/Module.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../groovydoc/org/gradle/plugins/ide/idea/model/Project.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T073723Z" creationid="haohang" creationdate="20150625T073723Z">
        <seg>../groovydoc/org/gradle/plugins/ide/idea/model/Project.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../groovydoc/org/gradle/plugins/ide/idea/model/Workspace.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T073754Z" creationid="haohang" creationdate="20150625T073754Z">
        <seg>../groovydoc/org/gradle/plugins/ide/idea/model/Workspace.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../groovydoc/org/gradle/plugins/signing/SigningExtension.html#setRequired(java.lang.Object)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160126T141412Z" creationid="95" creationdate="20160126T141412Z">
        <seg>../groovydoc/org/gradle/plugins/signing/SigningExtension.html#setRequired(java.lang.Object)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/BuildListener.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T155216Z" creationid="msdx" creationdate="20141116T155216Z">
        <seg>../javadoc/org/gradle/BuildListener.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/Action.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T135114Z" creationid="95" creationdate="20160521T135110Z">
        <seg>../javadoc/org/gradle/api/Action.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/AntBuilder.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T044455Z" creationid="msdx" creationdate="20141108T044455Z">
        <seg>../javadoc/org/gradle/api/AntBuilder.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/JavaVersion.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083245Z" creationid="msdx" creationdate="20150428T083245Z">
        <seg>../javadoc/org/gradle/api/JavaVersion.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/Plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141122T162842Z" creationid="msdx" creationdate="20141122T162842Z">
        <seg>../javadoc/org/gradle/api/Plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/ProjectEvaluationListener.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T155218Z" creationid="msdx" creationdate="20141116T155218Z">
        <seg>../javadoc/org/gradle/api/ProjectEvaluationListener.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/Task.html#shouldRunAfter(java.lang.Object...)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T013525Z" creationid="msdx" creationdate="20141111T013525Z">
        <seg>../javadoc/org/gradle/api/Task.html#shouldRunAfter(java.lang.Object...)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/XmlProvider.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T105323Z" creationid="haohang" creationdate="20150624T105253Z">
        <seg>../javadoc/org/gradle/api/XmlProvider.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/artifacts/ClientModule.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T091430Z" creationid="haohang" creationdate="20150801T091430Z">
        <seg>../javadoc/org/gradle/api/artifacts/ClientModule.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/artifacts/Dependency.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T094948Z" creationid="haohang" creationdate="20150801T094948Z">
        <seg>../javadoc/org/gradle/api/artifacts/Dependency.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/artifacts/ExternalModuleDependency.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T102909Z" creationid="haohang" creationdate="20150722T102909Z">
        <seg>../javadoc/org/gradle/api/artifacts/ExternalModuleDependency.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/artifacts/ModuleDependency.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T102952Z" creationid="haohang" creationdate="20150801T102952Z">
        <seg>../javadoc/org/gradle/api/artifacts/ModuleDependency.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/artifacts/ProjectDependency.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T092525Z" creationid="haohang" creationdate="20150801T092525Z">
        <seg>../javadoc/org/gradle/api/artifacts/ProjectDependency.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/artifacts/ResolvableDependencies.html#getResolutionResult()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T033056Z" creationid="haohang" creationdate="20150807T033056Z">
        <seg>../javadoc/org/gradle/api/artifacts/ResolvableDependencies.html#getResolutionResult()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/artifacts/maven/Conf2ScopeMappingContainer.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151228T152758Z" creationid="95" creationdate="20151228T152758Z">
        <seg>../javadoc/org/gradle/api/artifacts/maven/Conf2ScopeMappingContainer.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/artifacts/maven/MavenDeployer.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T141855Z" creationid="95" creationdate="20160105T141855Z">
        <seg>../javadoc/org/gradle/api/artifacts/maven/MavenDeployer.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/artifacts/maven/MavenPom.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160104T152823Z" creationid="95" creationdate="20160104T152823Z">
        <seg>../javadoc/org/gradle/api/artifacts/maven/MavenPom.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/artifacts/maven/PomFilterContainer.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T144236Z" creationid="95" creationdate="20160106T144236Z">
        <seg>../javadoc/org/gradle/api/artifacts/maven/PomFilterContainer.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/artifacts/result/ResolutionResult.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T033058Z" creationid="haohang" creationdate="20150807T033058Z">
        <seg>../javadoc/org/gradle/api/artifacts/result/ResolutionResult.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/distribution/Distribution.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150701T031650Z" creationid="haohang" creationdate="20150701T031650Z">
        <seg>../javadoc/org/gradle/api/distribution/Distribution.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/execution/TaskActionListener.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T155223Z" creationid="msdx" creationdate="20141116T155223Z">
        <seg>../javadoc/org/gradle/api/execution/TaskActionListener.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/execution/TaskExecutionGraph.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T135652Z" creationid="95" creationdate="20160521T135652Z">
        <seg>../javadoc/org/gradle/api/execution/TaskExecutionGraph.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/execution/TaskExecutionGraphListener.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T155220Z" creationid="msdx" creationdate="20141116T155220Z">
        <seg>../javadoc/org/gradle/api/execution/TaskExecutionGraphListener.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/execution/TaskExecutionListener.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T155222Z" creationid="msdx" creationdate="20141116T155222Z">
        <seg>../javadoc/org/gradle/api/execution/TaskExecutionListener.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/file/CopySpec.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T123855Z" creationid="msdx" creationdate="20141113T123855Z">
        <seg>../javadoc/org/gradle/api/file/CopySpec.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/file/CopySpec.html#from(java.lang.Object...)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T123855Z" creationid="msdx" creationdate="20141113T123855Z">
        <seg>../javadoc/org/gradle/api/file/CopySpec.html#from(java.lang.Object...)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/file/CopySpec.html#into(java.lang.Object)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T123858Z" creationid="msdx" creationdate="20141113T123858Z">
        <seg>../javadoc/org/gradle/api/file/CopySpec.html#into(java.lang.Object)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/file/FileCollection.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T144830Z" creationid="msdx" creationdate="20141112T144830Z">
        <seg>../javadoc/org/gradle/api/file/FileCollection.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/file/FileTree.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T161530Z" creationid="msdx" creationdate="20141112T161530Z">
        <seg>../javadoc/org/gradle/api/file/FileTree.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/file/SourceDirectorySet.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083343Z" creationid="msdx" creationdate="20150428T083343Z">
        <seg>../javadoc/org/gradle/api/file/SourceDirectorySet.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/initialization/ProjectDescriptor.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T070501Z" creationid="haohang" creationdate="20160519T070501Z">
        <seg>../javadoc/org/gradle/api/initialization/ProjectDescriptor.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/java/archives/Manifest.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083246Z" creationid="msdx" creationdate="20150428T083246Z">
        <seg>../javadoc/org/gradle/api/java/archives/Manifest.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/java/archives/ManifestMergeDetails.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T145619Z" creationid="msdx" creationdate="20150428T145619Z">
        <seg>../javadoc/org/gradle/api/java/archives/ManifestMergeDetails.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/logging/Logger.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T122541Z" creationid="msdx" creationdate="20141116T122541Z">
        <seg>../javadoc/org/gradle/api/logging/Logger.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/logging/LoggingManager.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T131052Z" creationid="msdx" creationdate="20141116T131052Z">
        <seg>../javadoc/org/gradle/api/logging/LoggingManager.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/plugins/JavaPlugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141122T162033Z" creationid="msdx" creationdate="20141122T162033Z">
        <seg>../javadoc/org/gradle/api/plugins/JavaPlugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/plugins/osgi/OsgiManifest.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150526T003756Z" creationid="haohang" creationdate="20150526T003756Z">
        <seg>../javadoc/org/gradle/api/plugins/osgi/OsgiManifest.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/tasks/JavaExec.html#setDebug(boolean)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150702T103936Z" creationid="haohang" creationdate="20150702T103936Z">
        <seg>../javadoc/org/gradle/api/tasks/JavaExec.html#setDebug(boolean)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/tasks/SourceSetContainer.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083244Z" creationid="msdx" creationdate="20150428T083244Z">
        <seg>../javadoc/org/gradle/api/tasks/SourceSetContainer.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/tasks/StopExecutionException.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T021050Z" creationid="msdx" creationdate="20141111T021050Z">
        <seg>../javadoc/org/gradle/api/tasks/StopExecutionException.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/tasks/TaskAction.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T145409Z" creationid="95" creationdate="20160814T145409Z">
        <seg>../javadoc/org/gradle/api/tasks/TaskAction.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/tasks/TaskContainer.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T023141Z" creationid="msdx" creationdate="20141110T023141Z">
        <seg>../javadoc/org/gradle/api/tasks/TaskContainer.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/tasks/TaskInputs.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T061359Z" creationid="msdx" creationdate="20141111T061359Z">
        <seg>../javadoc/org/gradle/api/tasks/TaskInputs.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/tasks/TaskOutputs.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T061401Z" creationid="msdx" creationdate="20141111T061401Z">
        <seg>../javadoc/org/gradle/api/tasks/TaskOutputs.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/tasks/TaskOutputs.html#upToDateWhen(groovy.lang.Closure)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T061518Z" creationid="msdx" creationdate="20141111T061518Z">
        <seg>../javadoc/org/gradle/api/tasks/TaskOutputs.html#upToDateWhen(groovy.lang.Closure)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/tasks/testing/Test.html#setMaxParallelForks(int)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T085948Z" creationid="haohang" creationdate="20160726T085948Z">
        <seg>../javadoc/org/gradle/api/tasks/testing/Test.html#setMaxParallelForks(int)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/tasks/testing/Test.html#setTestReport(boolean)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T142025Z" creationid="msdx" creationdate="20150428T142025Z">
        <seg>../javadoc/org/gradle/api/tasks/testing/Test.html#setTestReport(boolean)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/api/tasks/testing/TestFilter.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083456Z" creationid="msdx" creationdate="20150428T083456Z">
        <seg>../javadoc/org/gradle/api/tasks/testing/TestFilter.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/external/javadoc/CoreJavadocOptions.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083435Z" creationid="msdx" creationdate="20150428T083435Z">
        <seg>../javadoc/org/gradle/external/javadoc/CoreJavadocOptions.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/external/javadoc/StandardJavadocDocletOptions.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083436Z" creationid="msdx" creationdate="20150428T083436Z">
        <seg>../javadoc/org/gradle/external/javadoc/StandardJavadocDocletOptions.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/language/base/FunctionalSourceSet.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160128T153606Z" creationid="95" creationdate="20160128T153606Z">
        <seg>../javadoc/org/gradle/language/base/FunctionalSourceSet.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/nativebinaries/test/TestSuiteExecutableBinary.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T150553Z" creationid="95" creationdate="20160504T150553Z">
        <seg>../javadoc/org/gradle/nativebinaries/test/TestSuiteExecutableBinary.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/nativebinaries/toolchain/TargetPlatformConfiguration.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T092744Z" creationid="haohang" creationdate="20160408T092744Z">
        <seg>../javadoc/org/gradle/nativebinaries/toolchain/TargetPlatformConfiguration.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/plugins/ide/eclipse/model/Jdt.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T105305Z" creationid="haohang" creationdate="20150624T105305Z">
        <seg>../javadoc/org/gradle/plugins/ide/eclipse/model/Jdt.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/process/JavaForkOptions.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T132326Z" creationid="msdx" creationdate="20150506T132326Z">
        <seg>../javadoc/org/gradle/process/JavaForkOptions.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../javadoc/org/gradle/testing/jacoco/tasks/JacocoReportsContainer.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T131641Z" creationid="msdx" creationdate="20150506T131641Z">
        <seg>../javadoc/org/gradle/testing/jacoco/tasks/JacocoReportsContainer.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// Maven2 layout (if a repository is marked as Maven2 compatible, the organization (group) is split into subfolders according to the dots.)
someroot/[organisation]/[module]/[revision]/[module]-[revision].[ext]

// Typical layout for an Ivy repository (the organization is not split into subfolder)
someroot/[organisation]/[module]/[revision]/[type]s/[artifact].[ext]

// Simple layout (the organization is not used, no nested folders.)
someroot/[artifact]-[revision].[ext]</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T134609Z" creationid="95" creationdate="20151006T134609Z">
        <seg>// Maven2 layout (if a repository is marked as Maven2 compatible, the organization (group) is split into subfolders according to the dots.)
someroot/[organisation]/[module]/[revision]/[module]-[revision].[ext]

// Typical layout for an Ivy repository (the organization is not split into subfolder)
someroot/[organisation]/[module]/[revision]/[type]s/[artifact].[ext]

// Simple layout (the organization is not used, no nested folders.)
someroot/[artifact]-[revision].[ext]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>// Use Java 6's console to read from the console (no good for a CI environment)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160108T152904Z" creationid="95" creationdate="20160108T152904Z">
        <seg>// Use Java 6's console to read from the console (no good for a CI environment)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>/home/user/gradle/samples/native-binaries/cunit/src/operatorsTest/cunit/test_plus.c:6  - plus(0, -2) == -2</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T151530Z" creationid="95" creationdate="20160504T151530Z">
        <seg>/home/user/gradle/samples/native-binaries/cunit/src/operatorsTest/cunit/test_plus.c:6  - plus(0, -2) == -2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>/home/user/gradle/samples/native-binaries/cunit/src/operatorsTest/cunit/test_plus.c:7  - plus(2, 2) == 4

:runFailingOperatorsTestCUnitExe FAILED

BUILD FAILED

Total time: 1 secs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T151534Z" creationid="95" creationdate="20160504T151534Z">
        <seg>/home/user/gradle/samples/native-binaries/cunit/src/operatorsTest/cunit/test_plus.c:7  - plus(2, 2) == 4

:runFailingOperatorsTestCUnitExe FAILED

BUILD FAILED

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T161837Z" creationid="msdx" creationdate="20141109T161837Z">
        <seg>1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>1.1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T161843Z" creationid="msdx" creationdate="20141109T161843Z">
        <seg>1.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>10.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163736Z" creationid="msdx" creationdate="20141109T163736Z">
        <seg>10.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>10.1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163746Z" creationid="msdx" creationdate="20141109T163746Z">
        <seg>10.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>10.1. Building a WAR file</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T084909Z" creationid="msdx" creationdate="20141030T084909Z">
        <seg>10.1. 构建一个WAR文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>10.2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163758Z" creationid="msdx" creationdate="20141109T163758Z">
        <seg>10.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>10.2. Running your web application</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T091033Z" creationid="msdx" creationdate="20141030T091033Z">
        <seg>10.2.运行您的 web 应用程序</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>10.3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163811Z" creationid="msdx" creationdate="20141109T163811Z">
        <seg>10.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>10.3. Summary</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T123416Z" creationid="msdx" creationdate="20141030T095653Z">
        <seg>10.3.总结</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>11.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163813Z" creationid="msdx" creationdate="20141109T163813Z">
        <seg>11.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>11.1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163826Z" creationid="msdx" creationdate="20141109T163826Z">
        <seg>11.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>11.2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163832Z" creationid="msdx" creationdate="20141109T163832Z">
        <seg>11.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>11.3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163847Z" creationid="msdx" creationdate="20141109T163847Z">
        <seg>11.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>11.4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163857Z" creationid="msdx" creationdate="20141109T163857Z">
        <seg>11.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>11.5.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163908Z" creationid="msdx" creationdate="20141109T163908Z">
        <seg>11.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>11.6.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163922Z" creationid="msdx" creationdate="20141109T163922Z">
        <seg>11.6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>11.7.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163937Z" creationid="msdx" creationdate="20141109T163937Z">
        <seg>11.7.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>11.8.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T164818Z" creationid="msdx" creationdate="20141109T164818Z">
        <seg>11.8.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>12.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T164820Z" creationid="msdx" creationdate="20141109T164820Z">
        <seg>12.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>12.1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T031056Z" creationid="msdx" creationdate="20141108T031056Z">
        <seg>12.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>12.1. Task Tree</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T150950Z" creationid="msdx" creationdate="20141105T150950Z">
        <seg>12.1. 任务树</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>12.2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T164822Z" creationid="msdx" creationdate="20141109T164822Z">
        <seg>12.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>12.2. Favorites</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T154402Z" creationid="msdx" creationdate="20141105T154402Z">
        <seg>12.2. 收藏夹</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>12.3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T164823Z" creationid="msdx" creationdate="20141109T164823Z">
        <seg>12.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>12.3. Command Line</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T160003Z" creationid="msdx" creationdate="20141105T160003Z">
        <seg>12.3. 命令行</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>12.4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T164826Z" creationid="msdx" creationdate="20141109T164826Z">
        <seg>12.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>12.4. Setup</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T160611Z" creationid="msdx" creationdate="20141105T160611Z">
        <seg>12.4. 设置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>13.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T164828Z" creationid="msdx" creationdate="20141109T164828Z">
        <seg>13.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>13.1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T164831Z" creationid="msdx" creationdate="20141109T164831Z">
        <seg>13.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>13.1. The Gradle build language</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T161444Z" creationid="msdx" creationdate="20141108T034611Z">
        <seg>13.1. Gradle 构建语言</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>13.2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T164841Z" creationid="msdx" creationdate="20141109T164841Z">
        <seg>13.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>13.2.1. Standard project properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T043844Z" creationid="msdx" creationdate="20141108T043844Z">
        <seg>13.2.1. 标准project属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>13.2. The Project API</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T040425Z" creationid="msdx" creationdate="20141108T035914Z">
        <seg>13.2. Project API</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>13.3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T164850Z" creationid="msdx" creationdate="20141109T164850Z">
        <seg>13.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>13.3. The Script API</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T044523Z" creationid="msdx" creationdate="20141108T044523Z">
        <seg>13.3.  Script API</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>13.4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T164854Z" creationid="msdx" creationdate="20141109T164854Z">
        <seg>13.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>13.4.1. Local variables</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T045137Z" creationid="msdx" creationdate="20141108T044841Z">
        <seg>13.4.1. 局部变量局部</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>13.4.2. Extra properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T050415Z" creationid="msdx" creationdate="20141108T045233Z">
        <seg>13.4.2. 额外属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>13.4. Declaring variables</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T044747Z" creationid="msdx" creationdate="20141108T044743Z">
        <seg>13.4. 声明变量</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>13.5.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T164859Z" creationid="msdx" creationdate="20141109T164859Z">
        <seg>13.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>13.5.1. Groovy JDK</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T061009Z" creationid="msdx" creationdate="20141108T061009Z">
        <seg>13.5.1. Groovy JDK</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>13.5.2. Property accessors</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T061433Z" creationid="msdx" creationdate="20141108T061429Z">
        <seg>13.5.2. 属性访问器</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>13.5.3. Optional parentheses on method calls</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T062539Z" creationid="msdx" creationdate="20141108T061841Z">
        <seg>13.5.3 括号可选的方法调用</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>13.5.4. List and map literals</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T062739Z" creationid="msdx" creationdate="20141108T062739Z">
        <seg>13.5.4. List 和 Map </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>13.5.5. Closures as the last parameter in a method</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T063201Z" creationid="msdx" creationdate="20141108T063201Z">
        <seg>13.5.5.作为方法最后一个参数的闭包</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>13.5.6. Closure delegate</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T063606Z" creationid="msdx" creationdate="20141108T063425Z">
        <seg>13.5.6. 闭包委托（delegate）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>13.5. Some Groovy basics</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T055511Z" creationid="msdx" creationdate="20141108T055511Z">
        <seg>13.5.一些 Groovy 的基础知识</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>14.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T164909Z" creationid="msdx" creationdate="20141109T164909Z">
        <seg>14.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>14.1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T164919Z" creationid="msdx" creationdate="20141109T164919Z">
        <seg>14.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>14.1. Directory creation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T072428Z" creationid="msdx" creationdate="20141109T072428Z">
        <seg>14.1. 创建目录</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>14.2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T164926Z" creationid="msdx" creationdate="20141109T164926Z">
        <seg>14.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>14.2.1. Checking for project properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T151230Z" creationid="msdx" creationdate="20141109T151230Z">
        <seg>14.2.1.检查项目的属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>14.2. Gradle properties and system properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T073712Z" creationid="msdx" creationdate="20141109T073712Z">
        <seg>14.2. Gradle 属性和系统属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>14.3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T164934Z" creationid="msdx" creationdate="20141109T164934Z">
        <seg>14.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>14.3. Configuring the project using an external build script</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T152047Z" creationid="msdx" creationdate="20141109T152047Z">
        <seg>14.3. 使用外部构建脚本配置项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>14.4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T164944Z" creationid="msdx" creationdate="20141109T164944Z">
        <seg>14.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>14.4. Configuring arbitrary objects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T152513Z" creationid="msdx" creationdate="20141109T152513Z">
        <seg>14.4. 配置任意对象</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>14.5.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T164951Z" creationid="msdx" creationdate="20141109T164951Z">
        <seg>14.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>14.5. Configuring arbitrary objects using an external script</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T152919Z" creationid="msdx" creationdate="20141109T152851Z">
        <seg>14.5. 使用外部脚本配置任意对象</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>14.6.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T165000Z" creationid="msdx" creationdate="20141109T165000Z">
        <seg>14.6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>14.6. Caching</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T153053Z" creationid="msdx" creationdate="20141109T153053Z">
        <seg>14.6. 缓存</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T165003Z" creationid="msdx" creationdate="20141109T165003Z">
        <seg>15.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T030352Z" creationid="msdx" creationdate="20150501T030352Z">
        <seg>15.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.1. Defining tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T160804Z" creationid="msdx" creationdate="20141109T160804Z">
        <seg>15.1. 定义任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.10.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T030358Z" creationid="msdx" creationdate="20150501T030358Z">
        <seg>15.10.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.10. Task rules</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T064203Z" creationid="msdx" creationdate="20141111T064203Z">
        <seg>15.10. 任务规则</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.11.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T030358Z" creationid="msdx" creationdate="20150501T030358Z">
        <seg>15.11.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.11. Finalizer tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T070408Z" creationid="msdx" creationdate="20141111T065725Z">
        <seg>15.11. 析构器任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.12.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T030359Z" creationid="msdx" creationdate="20150501T030359Z">
        <seg>15.12.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.12. Summary</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T123436Z" creationid="msdx" creationdate="20141111T123221Z">
        <seg>15.12. 总结</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T030352Z" creationid="msdx" creationdate="20150501T030352Z">
        <seg>15.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.2. Locating tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150330T150943Z" creationid="msdx" creationdate="20141110T023434Z">
        <seg>15.2. 查找任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T030353Z" creationid="msdx" creationdate="20150501T030353Z">
        <seg>15.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.3. Configuring tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T090054Z" creationid="msdx" creationdate="20141110T090054Z">
        <seg>15.3. .配置任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T030354Z" creationid="msdx" creationdate="20150501T030354Z">
        <seg>15.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.4. Adding dependencies to a task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150330T141639Z" creationid="msdx" creationdate="20141110T100017Z">
        <seg>15.4. 向任务添加依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.5.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T030355Z" creationid="msdx" creationdate="20150501T030355Z">
        <seg>15.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.5. Ordering tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T124019Z" creationid="msdx" creationdate="20141110T124019Z">
        <seg>15.5. 任务排序</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.6.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T030356Z" creationid="msdx" creationdate="20150501T030356Z">
        <seg>15.6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.6. Adding a description to a task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T015007Z" creationid="msdx" creationdate="20141111T015007Z">
        <seg>15.6. 向任务添加描述</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.7.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T030356Z" creationid="msdx" creationdate="20150501T030356Z">
        <seg>15.7.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.7. Replacing tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T015829Z" creationid="msdx" creationdate="20141111T015531Z">
        <seg>15.7. 替换任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.8.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T030357Z" creationid="msdx" creationdate="20150501T030357Z">
        <seg>15.8.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.8.1. Using a predicate</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T020334Z" creationid="msdx" creationdate="20141111T020304Z">
        <seg>15.8.1. 使用断言</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.8.2. Using StopExecutionException</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T021045Z" creationid="msdx" creationdate="20141111T021045Z">
        <seg>15.8.2. 使用 StopExecutionException</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.8.3. Enabling and disabling tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T055510Z" creationid="msdx" creationdate="20141111T055510Z">
        <seg>15.8.3. 启用和禁用任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.8. Skipping tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T020253Z" creationid="msdx" creationdate="20141111T020253Z">
        <seg>15.8. 跳过任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.9.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T030357Z" creationid="msdx" creationdate="20150501T030357Z">
        <seg>15.9.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.9.1. Declaring a task's inputs and outputs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T060227Z" creationid="msdx" creationdate="20141111T060205Z">
        <seg>15.9.1. 声明一个任务的输入和输出</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.9.2. How does it work?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T063038Z" creationid="msdx" creationdate="20141111T063038Z">
        <seg>15.9.2. 它是怎么实现的？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>15.9. Skipping tasks that are up-to-date</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T055840Z" creationid="msdx" creationdate="20141111T055840Z">
        <seg>15.9.  跳过处于最新状态的任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>16.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T030359Z" creationid="msdx" creationdate="20150501T030359Z">
        <seg>16.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>16.1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T030359Z" creationid="msdx" creationdate="20150501T030359Z">
        <seg>16.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>16.1. Locating files</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T125316Z" creationid="msdx" creationdate="20141111T125316Z">
        <seg>16.1. 定位文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>16.2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T030359Z" creationid="msdx" creationdate="20150501T030359Z">
        <seg>16.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>16.2. File collections</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150330T141559Z" creationid="msdx" creationdate="20141112T144829Z">
        <seg>16.2. 文件集合</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>16.3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T030400Z" creationid="msdx" creationdate="20150501T030400Z">
        <seg>16.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>16.3. File trees</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T161530Z" creationid="msdx" creationdate="20141112T161530Z">
        <seg>16.3. 文件树</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>16.4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T030401Z" creationid="msdx" creationdate="20150501T030401Z">
        <seg>16.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>16.4. Using the contents of an archive as a file tree</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T120410Z" creationid="msdx" creationdate="20141113T120410Z">
        <seg>16.4. 使用归档文件的内容作为文件树</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>16.5.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T030401Z" creationid="msdx" creationdate="20150501T030401Z">
        <seg>16.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>16.5. Specifying a set of input files</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T122856Z" creationid="msdx" creationdate="20141113T122856Z">
        <seg>16.5. 指定一组输入文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>16.6.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T030402Z" creationid="msdx" creationdate="20150501T030402Z">
        <seg>16.6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>16.6.1. Renaming files</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T140648Z" creationid="msdx" creationdate="20141113T140648Z">
        <seg>16.6.1. 重命名文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>16.6.2. Filtering files</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T140725Z" creationid="msdx" creationdate="20141113T140725Z">
        <seg>16.6. 过滤文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>16.6.3. Using the &lt;c0&gt;CopySpec&lt;/c0&gt; class</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T140910Z" creationid="msdx" creationdate="20141113T140910Z">
        <seg>16.6.3. 使用&lt;c0&gt;CopySpec&lt;/c0&gt;类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>16.6. Copying files</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T123643Z" creationid="msdx" creationdate="20141113T123643Z">
        <seg>16.6. 复制文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>16.7.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T030402Z" creationid="msdx" creationdate="20150501T030402Z">
        <seg>16.7.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>16.7. Using the &lt;c0&gt;Sync&lt;/c0&gt; task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T143943Z" creationid="msdx" creationdate="20141113T143943Z">
        <seg>16.7. 使用&lt;c0&gt;Sync&lt;/c0&gt;任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>16.8.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T030403Z" creationid="msdx" creationdate="20150501T030403Z">
        <seg>16.8.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>16.8.1. Archive naming</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T154626Z" creationid="msdx" creationdate="20141113T154626Z">
        <seg>16.8.1. 归档命名</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>16.8.2. Sharing content between multiple archives</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T160721Z" creationid="msdx" creationdate="20141113T160721Z">
        <seg>16.8.2. 共享多个归档之间的内容</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>16.8. Creating archives</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T145507Z" creationid="msdx" creationdate="20141113T145507Z">
        <seg>16.8. 创建归档文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>17.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T030403Z" creationid="msdx" creationdate="20150501T030403Z">
        <seg>17.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>17.1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T030405Z" creationid="msdx" creationdate="20150501T030405Z">
        <seg>17.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>17.1.1. Using custom Ant tasks in your build</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T011536Z" creationid="msdx" creationdate="20141116T011536Z">
        <seg>17.1.1. 在您的构建中使用自定义 Ant 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>17.1. Using Ant tasks and types in your build</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141114T143250Z" creationid="msdx" creationdate="20141114T143250Z">
        <seg>17.1. 在构建中使用 Ant 任务和类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>17.2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T030405Z" creationid="msdx" creationdate="20150501T030405Z">
        <seg>17.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>17.2. Importing an Ant build</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T060645Z" creationid="msdx" creationdate="20141116T060645Z">
        <seg>17.2. 导入 Ant 构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>17.3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T030406Z" creationid="msdx" creationdate="20150501T030406Z">
        <seg>17.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>17.3. Ant properties and references</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T061157Z" creationid="msdx" creationdate="20141116T061157Z">
        <seg>17.3. Ant 属性和引用</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>17.4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T030407Z" creationid="msdx" creationdate="20150501T030407Z">
        <seg>17.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>17.4. API</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T062723Z" creationid="msdx" creationdate="20141116T062723Z">
        <seg>17.4. API</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>18.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T030407Z" creationid="msdx" creationdate="20150501T030407Z">
        <seg>18.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>18.1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T030408Z" creationid="msdx" creationdate="20150501T030408Z">
        <seg>18.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>18.1. Choosing a log level</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T070958Z" creationid="msdx" creationdate="20141116T070958Z">
        <seg>18.1. 选择一个日志级别</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>18.2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T030409Z" creationid="msdx" creationdate="20150501T030409Z">
        <seg>18.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>18.2. Writing your own log messages</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T113137Z" creationid="msdx" creationdate="20141116T113137Z">
        <seg>18.2. 编写自己的日志消息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>18.3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T030410Z" creationid="msdx" creationdate="20150501T030410Z">
        <seg>18.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>18.3. Logging from external tools and libraries</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T034124Z" creationid="msdx" creationdate="20141116T130627Z">
        <seg>18.3. 使用外部的工具和类库来记录日志</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>18.4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T030413Z" creationid="msdx" creationdate="20150501T030413Z">
        <seg>18.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>18.4. Changing what Gradle logs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T152843Z" creationid="msdx" creationdate="20141116T152843Z">
        <seg>18.4. 改变 Gradle 日志</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>19.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T030433Z" creationid="msdx" creationdate="20150501T030433Z">
        <seg>19.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>19.1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150508T131739Z" creationid="msdx" creationdate="20150508T131739Z">
        <seg>19.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>19.1. Enter the daemon</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141117T131818Z" creationid="msdx" creationdate="20141117T123824Z">
        <seg>19.1. 走进守护进程</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>19.2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150508T131746Z" creationid="msdx" creationdate="20150508T131746Z">
        <seg>19.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>19.2. Reusing and expiration of daemons</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141117T151322Z" creationid="msdx" creationdate="20141117T151322Z">
        <seg>19.2. 重用和失效的守护程序</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>19.3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150508T131756Z" creationid="msdx" creationdate="20150508T131756Z">
        <seg>19.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>19.3. Usage and troubleshooting</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141118T095701Z" creationid="msdx" creationdate="20141118T095701Z">
        <seg>19.3. 用法和故障排除</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>19.4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150508T131802Z" creationid="msdx" creationdate="20150508T131802Z">
        <seg>19.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>19.4. Configuring the daemon</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141119T030840Z" creationid="msdx" creationdate="20141119T030840Z">
        <seg>19.4. 配置守护进程</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T161850Z" creationid="msdx" creationdate="20141109T161850Z">
        <seg>2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>2.1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T161854Z" creationid="msdx" creationdate="20141109T161854Z">
        <seg>2.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>2.1. Features</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141101T034425Z" creationid="msdx" creationdate="20141101T034417Z">
        <seg>2.1. 特性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>2.2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T161959Z" creationid="msdx" creationdate="20141109T161959Z">
        <seg>2.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>20.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150508T131810Z" creationid="msdx" creationdate="20150508T131810Z">
        <seg>20.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>20.1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150508T131814Z" creationid="msdx" creationdate="20150508T131814Z">
        <seg>20.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>20.1.1. Forked java processes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141120T053834Z" creationid="msdx" creationdate="20141120T053834Z">
        <seg>20.1.1. Forked java 进程</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>20.1. Configuring the build environment via gradle.properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141119T031610Z" creationid="msdx" creationdate="20141119T031610Z">
        <seg>20.1. 通过 gradle.properties 配置构建环境</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>20.2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150508T131820Z" creationid="msdx" creationdate="20150508T131820Z">
        <seg>20.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>20.2.1. NTLM Authentication</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141121T142419Z" creationid="msdx" creationdate="20141121T142408Z">
        <seg>20.2.1. NTLM 身份验证</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>20.2. Accessing the web via a proxy</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141121T141218Z" creationid="msdx" creationdate="20141121T141218Z">
        <seg>20.2. 通过代理访问网站</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>21.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150508T131829Z" creationid="msdx" creationdate="20150508T131829Z">
        <seg>21.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>21.1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131415Z" creationid="msdx" creationdate="20150509T131415Z">
        <seg>21.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>21.1. Applying plugins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141122T161836Z" creationid="msdx" creationdate="20141122T161836Z">
        <seg>21.1. 应用插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>21.2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131421Z" creationid="msdx" creationdate="20150509T131421Z">
        <seg>21.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>21.2. What plugins do</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141123T150732Z" creationid="msdx" creationdate="20141123T150732Z">
        <seg>21.2. 插件都做了什么</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>21.3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131429Z" creationid="msdx" creationdate="20150509T131429Z">
        <seg>21.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>21.3. Conventions</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141123T151310Z" creationid="msdx" creationdate="20141123T151310Z">
        <seg>21.3. 约定</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>21.4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131514Z" creationid="msdx" creationdate="20150509T131514Z">
        <seg>21.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>21.4. More on plugins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141124T095258Z" creationid="msdx" creationdate="20141124T095258Z">
        <seg>21.4. 更多关于插件的内容</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>22.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131520Z" creationid="msdx" creationdate="20150509T131520Z">
        <seg>22.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>22.1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131529Z" creationid="msdx" creationdate="20150509T131529Z">
        <seg>22.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>22.1. Language plugins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141126T120655Z" creationid="msdx" creationdate="20141126T120655Z">
        <seg>22.1. 语言插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>22.2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131534Z" creationid="msdx" creationdate="20150509T131534Z">
        <seg>22.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>22.2. Incubating language plugins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141209T073715Z" creationid="msdx" creationdate="20141209T073546Z">
        <seg>22.2. 正在孵化的语言插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>22.3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131541Z" creationid="msdx" creationdate="20150509T131541Z">
        <seg>22.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>22.3. Integration plugins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141209T074424Z" creationid="msdx" creationdate="20141209T074424Z">
        <seg>22.3. 集成插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>22.4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131547Z" creationid="msdx" creationdate="20150509T131547Z">
        <seg>22.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>22.4. Incubating integration plugins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T031727Z" creationid="Administrator" creationdate="20150425T031727Z">
        <seg>22.4. 孵化中的集成插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>22.5.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131551Z" creationid="msdx" creationdate="20150509T131551Z">
        <seg>22.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>22.5. Software development plugins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T032321Z" creationid="Administrator" creationdate="20150425T032321Z">
        <seg>22.5. 软件开发插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>22.6.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131555Z" creationid="msdx" creationdate="20150509T131555Z">
        <seg>22.6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>22.6. Incubating software development plugins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T035832Z" creationid="Administrator" creationdate="20150425T035832Z">
        <seg>22.6. 孵化中的软件开发插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>22.7.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131558Z" creationid="msdx" creationdate="20150509T131558Z">
        <seg>22.7.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>22.7. Base plugins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T040539Z" creationid="Administrator" creationdate="20150425T040539Z">
        <seg>22.7. 基本插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>22.8.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131602Z" creationid="msdx" creationdate="20150509T131602Z">
        <seg>22.8.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>22.8. Third party plugins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T072519Z" creationid="Administrator" creationdate="20150425T072519Z">
        <seg>22.8. 第三方插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131605Z" creationid="msdx" creationdate="20150509T131605Z">
        <seg>23.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131609Z" creationid="msdx" creationdate="20150509T131609Z">
        <seg>23.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.1. Usage</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T073543Z" creationid="Administrator" creationdate="20150425T073543Z">
        <seg>23.1. 用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.10.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131754Z" creationid="msdx" creationdate="20150509T131754Z">
        <seg>23.10.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.10. Resources</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T134512Z" creationid="Administrator" creationdate="20150427T134512Z">
        <seg>23.10. 资源</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.11.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131803Z" creationid="msdx" creationdate="20150509T131803Z">
        <seg>23.11.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.11. CompileJava</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T134842Z" creationid="Administrator" creationdate="20150427T134842Z">
        <seg>23.11. CompileJava</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.12.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131810Z" creationid="msdx" creationdate="20150509T131810Z">
        <seg>23.12.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.12.1. Test execution</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T140352Z" creationid="Administrator" creationdate="20150427T140352Z">
        <seg>23.12.1. 测试执行</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.12.2. Debugging</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T015418Z" creationid="Administrator" creationdate="20150428T015418Z">
        <seg>23.12.2. 调试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.12.3. Test filtering</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T021658Z" creationid="Administrator" creationdate="20150428T015805Z">
        <seg>23.12.3. 测试过滤</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.12.4. Single test execution via System Properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T035202Z" creationid="Administrator" creationdate="20150428T035202Z">
        <seg>23.12.4. 通过系统属性执行单一的测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.12.5. Test detection</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T040258Z" creationid="Administrator" creationdate="20150428T040258Z">
        <seg>23.12.5. 测试检测</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.12.6. Test grouping</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T082059Z" creationid="Administrator" creationdate="20150428T082059Z">
        <seg>23.12.6. 测试分组</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.12.7.1. TestNG parameterized methods and reporting</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T143801Z" creationid="msdx" creationdate="20150428T143801Z">
        <seg>23.12.7.1. TestNG 参数化方法和报告</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.12.7. Test reporting</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083208Z" creationid="msdx" creationdate="20150428T083208Z">
        <seg>23.12.7. 测试报告</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.12.8. Convention values</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T144333Z" creationid="msdx" creationdate="20150428T144333Z">
        <seg>23.12.8. 常规值</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.12. Test</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083448Z" creationid="msdx" creationdate="20150428T083448Z">
        <seg>23.12. Test</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.13.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131827Z" creationid="msdx" creationdate="20150509T131827Z">
        <seg>23.13.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.13.1. Manifest</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T145132Z" creationid="msdx" creationdate="20150428T145020Z">
        <seg>23.13.1. Manifest</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.13. Jar</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T144402Z" creationid="msdx" creationdate="20150428T144402Z">
        <seg>23.13. Jar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.14.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131829Z" creationid="msdx" creationdate="20150509T131829Z">
        <seg>23.14.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.14. Uploading</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T151512Z" creationid="msdx" creationdate="20150428T151512Z">
        <seg>23.14. 上传</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131615Z" creationid="msdx" creationdate="20150509T131615Z">
        <seg>23.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.2. Source sets</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T073944Z" creationid="Administrator" creationdate="20150425T073900Z">
        <seg>23.2 源集</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131627Z" creationid="msdx" creationdate="20150509T131627Z">
        <seg>23.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.3. Tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T173937Z" creationid="Administrator" creationdate="20150425T173937Z">
        <seg>23.3. 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131636Z" creationid="msdx" creationdate="20150509T131636Z">
        <seg>23.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.4.1. Changing the project layout</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T083534Z" creationid="Administrator" creationdate="20150426T083534Z">
        <seg>23.4.1. 更改项目布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.4. Project layout</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T082958Z" creationid="Administrator" creationdate="20150426T082958Z">
        <seg>23.4. 项目布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.5.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131641Z" creationid="msdx" creationdate="20150509T131641Z">
        <seg>23.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.5. Dependency management</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T083835Z" creationid="Administrator" creationdate="20150426T083835Z">
        <seg>23.5. 依赖管理</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.6.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131645Z" creationid="msdx" creationdate="20150509T131645Z">
        <seg>23.6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.6. Convention properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T085556Z" creationid="Administrator" creationdate="20150426T085239Z">
        <seg>23.6. 常规属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.7.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131651Z" creationid="msdx" creationdate="20150509T131651Z">
        <seg>23.7.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.7.1. Source set properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T051128Z" creationid="Administrator" creationdate="20150427T051128Z">
        <seg>23.7.1. 源集属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.7.2. Defining new source sets</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T053301Z" creationid="Administrator" creationdate="20150427T053301Z">
        <seg>23.7.2. 定义新的源集</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.7.3. Some source set examples</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T133254Z" creationid="Administrator" creationdate="20150427T133246Z">
        <seg>23.7.3. 一些源集的范例</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.7. Working with source sets</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T050419Z" creationid="Administrator" creationdate="20150427T050419Z">
        <seg>23.7. 使用源集</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.8.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131701Z" creationid="msdx" creationdate="20150509T131701Z">
        <seg>23.8.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.8. Javadoc</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083434Z" creationid="msdx" creationdate="20150428T083434Z">
        <seg>23.8. Javadoc</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.9.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131703Z" creationid="msdx" creationdate="20150509T131703Z">
        <seg>23.9.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>23.9. Clean</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T134505Z" creationid="Administrator" creationdate="20150427T134154Z">
        <seg>23.9. 清理</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>24.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131834Z" creationid="msdx" creationdate="20150509T131834Z">
        <seg>24.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>24.1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131845Z" creationid="msdx" creationdate="20150509T131845Z">
        <seg>24.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>24.1. Usage</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T071245Z" creationid="msdx" creationdate="20150429T071245Z">
        <seg>24.1. 用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>24.2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131846Z" creationid="msdx" creationdate="20150509T131846Z">
        <seg>24.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>24.2. Tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T071321Z" creationid="msdx" creationdate="20150429T071321Z">
        <seg>24.2. 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>24.3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131848Z" creationid="msdx" creationdate="20150509T131848Z">
        <seg>24.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>24.3.1. Changing the project layout</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T075208Z" creationid="msdx" creationdate="20150429T075208Z">
        <seg>24.3.1. 更改项目布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>24.3. Project layout</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T071810Z" creationid="msdx" creationdate="20150429T071757Z">
        <seg>24.3. 项目布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>24.4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131854Z" creationid="msdx" creationdate="20150509T131854Z">
        <seg>24.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>24.4. Dependency management</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T075404Z" creationid="msdx" creationdate="20150429T075404Z">
        <seg>24.4. 依赖管理</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>24.5.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131859Z" creationid="msdx" creationdate="20150509T131859Z">
        <seg>24.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>24.5. Automatic configuration of groovyClasspath</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T081052Z" creationid="msdx" creationdate="20150429T080916Z">
        <seg>24.5. groovyClasspath 的自动配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>24.6.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131910Z" creationid="msdx" creationdate="20150509T131910Z">
        <seg>24.6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>24.6. Convention properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T092304Z" creationid="msdx" creationdate="20150429T092304Z">
        <seg>24.6. 常规属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>24.7.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131925Z" creationid="msdx" creationdate="20150509T131925Z">
        <seg>24.7.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>24.7. Source set properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T092345Z" creationid="msdx" creationdate="20150429T092345Z">
        <seg>24.7. source set 属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>24.8.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131938Z" creationid="msdx" creationdate="20150509T131938Z">
        <seg>24.8.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>24.8. GroovyCompile</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T094143Z" creationid="msdx" creationdate="20150429T094143Z">
        <seg>24.8. GroovyCompile</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>25.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131939Z" creationid="msdx" creationdate="20150509T131939Z">
        <seg>25.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>25.1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131949Z" creationid="msdx" creationdate="20150509T131949Z">
        <seg>25.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>25.1. Usage</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T145008Z" creationid="msdx" creationdate="20150429T145008Z">
        <seg>25.1. 用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>25.10.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T132105Z" creationid="msdx" creationdate="20150509T132105Z">
        <seg>25.10.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>25.10. Incremental compilation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150430T160101Z" creationid="msdx" creationdate="20150430T160101Z">
        <seg>25.10. 增量编译</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>25.11.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T132111Z" creationid="msdx" creationdate="20150509T132111Z">
        <seg>25.11.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>25.11. Eclipse Integration</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T081849Z" creationid="msdx" creationdate="20150503T081849Z">
        <seg>25.11. eclipse 集成</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>25.12.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T132122Z" creationid="msdx" creationdate="20150509T132122Z">
        <seg>25.12.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>25.12. IntelliJ IDEA Integration</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T082050Z" creationid="msdx" creationdate="20150503T082050Z">
        <seg>25.12. IntelliJ 集成</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>25.2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131952Z" creationid="msdx" creationdate="20150509T131952Z">
        <seg>25.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>25.2. Tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T145412Z" creationid="msdx" creationdate="20150429T145341Z">
        <seg>25.2. 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>25.3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131954Z" creationid="msdx" creationdate="20150509T131954Z">
        <seg>25.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>25.3.1. Changing the project layout</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T152651Z" creationid="msdx" creationdate="20150429T152651Z">
        <seg>25.3.1. 更改项目布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>25.3. Project layout</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T152451Z" creationid="msdx" creationdate="20150429T152451Z">
        <seg>25.3. 项目布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>25.4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131956Z" creationid="msdx" creationdate="20150509T131956Z">
        <seg>25.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>25.4. Dependency management</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T152740Z" creationid="msdx" creationdate="20150429T152740Z">
        <seg>25.4. 依赖管理</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>25.5.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131958Z" creationid="msdx" creationdate="20150509T131958Z">
        <seg>25.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>25.5. Automatic configuration of scalaClasspath</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T153855Z" creationid="msdx" creationdate="20150429T153855Z">
        <seg>25.5. scalaClasspath 的自动配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>25.6.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T132006Z" creationid="msdx" creationdate="20150509T132006Z">
        <seg>25.6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>25.6. Convention properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150430T154655Z" creationid="msdx" creationdate="20150430T154655Z">
        <seg>25.6. 公约属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>25.7.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T132009Z" creationid="msdx" creationdate="20150509T132009Z">
        <seg>25.7.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>25.7. Source set properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150430T154720Z" creationid="msdx" creationdate="20150430T154720Z">
        <seg>25.7. source set 属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>25.8.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T132011Z" creationid="msdx" creationdate="20150509T132011Z">
        <seg>25.8.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>25.8. Fast Scala Compiler</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150430T155122Z" creationid="msdx" creationdate="20150430T155004Z">
        <seg>25.8. Fast Scala Compiler</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>25.9.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T132030Z" creationid="msdx" creationdate="20150509T132030Z">
        <seg>25.9.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>25.9. Compiling in external process</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150430T155557Z" creationid="msdx" creationdate="20150430T155557Z">
        <seg>25.9. 在外部进程中编译</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>26.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T132137Z" creationid="msdx" creationdate="20150509T132137Z">
        <seg>26.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>26.1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T132200Z" creationid="msdx" creationdate="20150509T132200Z">
        <seg>26.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>26.1. Usage</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T085841Z" creationid="msdx" creationdate="20150503T085841Z">
        <seg>26.1. 用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>26.2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T132202Z" creationid="msdx" creationdate="20150509T132202Z">
        <seg>26.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>26.2. Tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T085909Z" creationid="msdx" creationdate="20150503T085909Z">
        <seg>26.2. 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>26.3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T132204Z" creationid="msdx" creationdate="20150509T132204Z">
        <seg>26.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>26.3. Project layout</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T090117Z" creationid="msdx" creationdate="20150503T090106Z">
        <seg>26.3. 项目布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>26.4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T132206Z" creationid="msdx" creationdate="20150509T132206Z">
        <seg>26.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>26.4. Dependency management</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T090147Z" creationid="msdx" creationdate="20150503T090147Z">
        <seg>26.4. 依赖管理</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>26.5.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T132211Z" creationid="msdx" creationdate="20150509T132211Z">
        <seg>26.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>26.5. Convention properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T092115Z" creationid="msdx" creationdate="20150503T092115Z">
        <seg>26.5. 公约属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>26.6.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T132214Z" creationid="msdx" creationdate="20150509T132214Z">
        <seg>26.6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>26.6. War</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T092353Z" creationid="msdx" creationdate="20150503T092353Z">
        <seg>26.6. War</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>26.7.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T132218Z" creationid="msdx" creationdate="20150509T132218Z">
        <seg>26.7.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>26.7. Customizing</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T093641Z" creationid="msdx" creationdate="20150503T093551Z">
        <seg>26.7. 自定义</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>27.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T132223Z" creationid="msdx" creationdate="20150509T132223Z">
        <seg>27.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>27.1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T132234Z" creationid="msdx" creationdate="20150509T132234Z">
        <seg>27.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>27.1. Usage</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T094429Z" creationid="msdx" creationdate="20150503T094429Z">
        <seg>27.1. 用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>27.2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T132238Z" creationid="msdx" creationdate="20150509T132238Z">
        <seg>27.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>27.2. Tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T094459Z" creationid="msdx" creationdate="20150503T094459Z">
        <seg>27.2. Tasks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>27.3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T132241Z" creationid="msdx" creationdate="20150509T132241Z">
        <seg>27.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>27.3. Project layout</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T095215Z" creationid="msdx" creationdate="20150503T095215Z">
        <seg>27.3. 项目布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>27.4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T132243Z" creationid="msdx" creationdate="20150509T132243Z">
        <seg>27.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>27.4. Dependency management</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T095243Z" creationid="msdx" creationdate="20150503T095243Z">
        <seg>27.4. 依赖管理</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>27.5.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T132246Z" creationid="msdx" creationdate="20150509T132246Z">
        <seg>27.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>27.5. Convention properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T141328Z" creationid="msdx" creationdate="20150504T141328Z">
        <seg>27.5. 公约属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>27.6.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T132257Z" creationid="msdx" creationdate="20150509T132257Z">
        <seg>27.6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>27.6. Ear</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T142456Z" creationid="msdx" creationdate="20150504T142456Z">
        <seg>27.6. Ear</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>27.7.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150514T151803Z" creationid="msdx" creationdate="20150514T151803Z">
        <seg>27.7.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>27.7. Customizing</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T142829Z" creationid="msdx" creationdate="20150504T142829Z">
        <seg>27.7. 自定义</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>27.8.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150514T151808Z" creationid="msdx" creationdate="20150514T151808Z">
        <seg>27.8.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>27.8. Using custom descriptor file</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T143326Z" creationid="msdx" creationdate="20150504T143326Z">
        <seg>27.8. 使用自定义的描述符文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>28.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150514T151814Z" creationid="msdx" creationdate="20150514T151814Z">
        <seg>28.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>28.1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150514T151825Z" creationid="msdx" creationdate="20150514T151825Z">
        <seg>28.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>28.1. Usage</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T150127Z" creationid="msdx" creationdate="20150504T150127Z">
        <seg>28.1. 用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>28.2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150514T151828Z" creationid="msdx" creationdate="20150514T151828Z">
        <seg>28.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>28.2. Tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T150155Z" creationid="msdx" creationdate="20150504T150155Z">
        <seg>28.2. 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>28.3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150514T151831Z" creationid="msdx" creationdate="20150514T151831Z">
        <seg>28.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>28.3. Project layout</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T150547Z" creationid="msdx" creationdate="20150504T150547Z">
        <seg>28.3. 项目布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>28.4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150514T151834Z" creationid="msdx" creationdate="20150514T151834Z">
        <seg>28.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>28.4. Dependency management</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T150922Z" creationid="msdx" creationdate="20150504T150922Z">
        <seg>28.4. 依赖管理</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>28.5.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150514T151837Z" creationid="msdx" creationdate="20150514T151837Z">
        <seg>28.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>28.5. Convention properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T150954Z" creationid="msdx" creationdate="20150504T150954Z">
        <seg>28.5. 公约属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>29.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150514T151838Z" creationid="msdx" creationdate="20150514T151838Z">
        <seg>29.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>29.1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150514T151853Z" creationid="msdx" creationdate="20150514T151853Z">
        <seg>29.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>29.1. Usage</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T151735Z" creationid="msdx" creationdate="20150504T151735Z">
        <seg>29.1. 用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>29.2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150514T151900Z" creationid="msdx" creationdate="20150514T151900Z">
        <seg>29.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>29.2. Tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T024625Z" creationid="msdx" creationdate="20150505T024625Z">
        <seg>29.2. Tasks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>29.3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150514T151904Z" creationid="msdx" creationdate="20150514T151904Z">
        <seg>29.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>29.3. Project layout</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T132539Z" creationid="msdx" creationdate="20150505T132539Z">
        <seg>29.3. 项目布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>29.4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150514T151909Z" creationid="msdx" creationdate="20150514T151909Z">
        <seg>29.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>29.4. Dependency management</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T132642Z" creationid="msdx" creationdate="20150505T132642Z">
        <seg>29.4. 依赖管理</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>29.5.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150514T151913Z" creationid="msdx" creationdate="20150514T151913Z">
        <seg>29.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>29.5. Configuration</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T132836Z" creationid="msdx" creationdate="20150505T132836Z">
        <seg>29.5. 配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162018Z" creationid="msdx" creationdate="20141109T162018Z">
        <seg>3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>3.1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162022Z" creationid="msdx" creationdate="20141109T162022Z">
        <seg>3.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>30.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150514T151916Z" creationid="msdx" creationdate="20150514T151916Z">
        <seg>30.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>30.1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150514T151932Z" creationid="msdx" creationdate="20150514T151932Z">
        <seg>30.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>30.1. Usage</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T133043Z" creationid="msdx" creationdate="20150505T133043Z">
        <seg>30.1. 用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>30.2. Tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T133124Z" creationid="msdx" creationdate="20150505T133109Z">
        <seg>30.2. 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>30.3. Project layout</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T133402Z" creationid="msdx" creationdate="20150505T133402Z">
        <seg>30.3. 项目布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>30.4. Dependency management</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T133432Z" creationid="msdx" creationdate="20150505T133425Z">
        <seg>30.4. 依赖管理</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>30.5. Configuration</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T133512Z" creationid="msdx" creationdate="20150505T133512Z">
        <seg>30.5. 配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>31.1. Usage</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T133608Z" creationid="msdx" creationdate="20150505T133608Z">
        <seg>31.1. 用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>31.2. Tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T133626Z" creationid="msdx" creationdate="20150505T133626Z">
        <seg>31.2. 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>31.3. Dependency management</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T133813Z" creationid="msdx" creationdate="20150505T133813Z">
        <seg>31.3. 依赖管理</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>31.4. Configuration</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T133856Z" creationid="msdx" creationdate="20150505T133856Z">
        <seg>31.4. 配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>32.1. Usage</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T134155Z" creationid="msdx" creationdate="20150505T134123Z">
        <seg>32.1. 用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>32.2. Tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T134212Z" creationid="msdx" creationdate="20150505T134212Z">
        <seg>32.2. 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>32.3. Dependency management</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T134436Z" creationid="msdx" creationdate="20150505T134436Z">
        <seg>32.3. 依赖管理</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>32.4. Configuration</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T134501Z" creationid="msdx" creationdate="20150505T134501Z">
        <seg>32.4. 配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>33.1. Usage</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T135450Z" creationid="msdx" creationdate="20150505T135450Z">
        <seg>33.1. 用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>33.2. Tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T135528Z" creationid="msdx" creationdate="20150505T135528Z">
        <seg>33.2. 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>33.3. Dependency management</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T135654Z" creationid="msdx" creationdate="20150505T135654Z">
        <seg>33.3. 依赖管理</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>33.4. Configuration</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T135723Z" creationid="msdx" creationdate="20150505T135723Z">
        <seg>33.4. 配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>34.1. Getting Started</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T130018Z" creationid="msdx" creationdate="20150506T130018Z">
        <seg>34.1. 入门</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>34.2. Configuring the JaCoCo Plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T130434Z" creationid="msdx" creationdate="20150506T130434Z">
        <seg>34.2.  配置 JaCoCo 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>34.3. JaCoCo Report configuration</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T131638Z" creationid="msdx" creationdate="20150506T131638Z">
        <seg>34.3. JaCoCo 报告配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>34.4. JaCoCo specific task configuration</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T132017Z" creationid="msdx" creationdate="20150506T132017Z">
        <seg>34.4. JaCoCo 的特定任务配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>34.5. Tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T135841Z" creationid="msdx" creationdate="20150506T135833Z">
        <seg>34.5. 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>34.6. Dependency management</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T135939Z" creationid="msdx" creationdate="20150506T135939Z">
        <seg>34.6. 依赖管理</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>35.1. Usage</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150510T143237Z" creationid="msdx" creationdate="20150510T143237Z">
        <seg>35.1. 用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>35.2. Analyzing Multi-Project Builds</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150510T144131Z" creationid="msdx" creationdate="20150510T144131Z">
        <seg>35.2. 分析多项目构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>35.3. Analyzing Custom Source Sets</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T092233Z" creationid="msdx" creationdate="20150512T092233Z">
        <seg>35.3. 分析自定义的Source Sets</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>35.4. Analyzing languages other than Java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T092545Z" creationid="msdx" creationdate="20150512T092545Z">
        <seg>35.4. 分析非 Java 语言</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>35.5. Setting Custom Sonar Properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T092753Z" creationid="msdx" creationdate="20150512T092753Z">
        <seg>35.5. 设置自定义的 Sonar 属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>35.6. Configuring Sonar Settings from the Command Line</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T102148Z" creationid="msdx" creationdate="20150512T102058Z">
        <seg>35.6. 从命令行配置 Sonar 的设置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>35.7. Tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T054151Z" creationid="msdx" creationdate="20150513T054151Z">
        <seg>35.7. 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>36.1. Plugin Status and Compatibility</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T060220Z" creationid="msdx" creationdate="20150513T060220Z">
        <seg>36.1. 插件状态和兼容性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>36.10. Tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150525T234936Z" creationid="haohang" creationdate="20150525T234936Z">
        <seg>36.10. 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>36.2. Getting Started</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T060619Z" creationid="msdx" creationdate="20150513T060619Z">
        <seg>36.2. 入门</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>36.3. Configuring the Sonar Runner</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T062347Z" creationid="msdx" creationdate="20150513T062347Z">
        <seg>36.3. 配置 Sonar Runner</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>36.4. Analyzing Multi-Project Builds</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150514T152059Z" creationid="msdx" creationdate="20150514T152048Z">
        <seg>36.4. 分析多项目构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>36.5. Analyzing Custom Source Sets</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150519T124746Z" creationid="msdx" creationdate="20150519T124746Z">
        <seg>36.5. 分析自定义的Source Sets</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>36.6. Analyzing languages other than Java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150520T143123Z" creationid="msdx" creationdate="20150520T143123Z">
        <seg>36.6. 分析非 Java 语言</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>36.7. More on configuring Sonar properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150710T010849Z" creationid="msdx" creationdate="20150520T143237Z">
        <seg>36.7. 更多关于配置 Sonar 的属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>36.8. Setting Sonar Properties from the Command Line</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150525T233253Z" creationid="haohang" creationdate="20150525T233253Z">
        <seg>36.8. 从命令行设置 Sonar 属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>36.9. Executing Sonar Runner in a separate process</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150525T234409Z" creationid="haohang" creationdate="20150525T234409Z">
        <seg>36.9. 在一个单独的进程中执行 Sonar Runner</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>37.1. Usage</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150526T004241Z" creationid="haohang" creationdate="20150526T004241Z">
        <seg>37.1. 用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>37.2. Implicitly applied plugins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150526T004326Z" creationid="haohang" creationdate="20150526T004305Z">
        <seg>37.2. 隐式应用插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>37.3. Tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150526T004426Z" creationid="haohang" creationdate="20150526T004426Z">
        <seg>37.3. 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>37.4. Dependency management</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150526T004451Z" creationid="haohang" creationdate="20150526T004451Z">
        <seg>37.4. 依赖管理</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>37.5.1. Convention properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150526T004549Z" creationid="haohang" creationdate="20150526T004549Z">
        <seg>37.5.1. 约定属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>37.5.2. Convention methods</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150526T004607Z" creationid="haohang" creationdate="20150526T004607Z">
        <seg>37.5.2. 约定方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>37.5. Convention object</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150526T004505Z" creationid="haohang" creationdate="20150526T004505Z">
        <seg>37.5. 约定对象</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>38.1. Usage</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T004107Z" creationid="haohang" creationdate="20150603T004107Z">
        <seg>38.1. 用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>38.2. Tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T004252Z" creationid="haohang" creationdate="20150603T004252Z">
        <seg>38.2. 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>38.3. Configuration</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T004615Z" creationid="haohang" creationdate="20150603T004615Z">
        <seg>38.3. 配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>38.4.1.1. Disabling merging with a complete overwrite</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T103221Z" creationid="haohang" creationdate="20150624T103221Z">
        <seg>38.4.1.1. 禁用完全覆盖的合并</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>38.4.1. Merging</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T101125Z" creationid="haohang" creationdate="20150624T101125Z">
        <seg>38.4.1. 合并</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>38.4.2.1. Partial overwrite of existing content</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T105433Z" creationid="haohang" creationdate="20150624T105433Z">
        <seg>38.4.2.1. 部分重写现有内容</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>38.4.2.2. Modifying the fully populated domain objects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T065838Z" creationid="haohang" creationdate="20150625T065838Z">
        <seg>38.4.2.2. 修改完全填充的域对象</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>38.4.2.3. Modifying the XML representation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T070010Z" creationid="haohang" creationdate="20150625T070010Z">
        <seg>38.4.2.3. 修改 XML 的表示形式</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>38.4.2. Hooking into the generation lifecycle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T103508Z" creationid="haohang" creationdate="20150624T103508Z">
        <seg>38.4.2. Hooking到生成的生命周期中</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>38.4. Customizing the generated files</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T022608Z" creationid="haohang" creationdate="20150624T022608Z">
        <seg>38.4. 自定义生成的文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>39.1. Usage</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T071709Z" creationid="haohang" creationdate="20150625T071709Z">
        <seg>39.1. 用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>39.2. Tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T071835Z" creationid="haohang" creationdate="20150625T071835Z">
        <seg>39.2. 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>39.3. Configuration</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T072617Z" creationid="haohang" creationdate="20150625T072617Z">
        <seg>39.3. 配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>39.4.1.1. Disabling merging with a complete overwrite</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T073353Z" creationid="haohang" creationdate="20150625T073353Z">
        <seg>39.4.1.1. 禁用完整覆盖的合并</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>39.4.1. Merging</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T073330Z" creationid="haohang" creationdate="20150625T073330Z">
        <seg>39.4.1. 合并</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>39.4.2.1. Partial overwrite of existing content</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T073807Z" creationid="haohang" creationdate="20150625T073807Z">
        <seg>39.4.2.1. 部分重写现有内容</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>39.4.2.2. Modifying the fully populated domain objects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T074126Z" creationid="haohang" creationdate="20150625T074126Z">
        <seg>39.4.2.2. 修改完全填充的域对象</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>39.4.2.3. Modifying the XML representation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T074617Z" creationid="haohang" creationdate="20150625T074617Z">
        <seg>39.4.2.3. 修改 XML 的表示形式</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>39.4.2. Hooking into the generation lifecycle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T073550Z" creationid="haohang" creationdate="20150625T073550Z">
        <seg>39.4.2. Hooking到生成的生命周期中</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>39.4. Customizing the generated files</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T072734Z" creationid="haohang" creationdate="20150625T072734Z">
        <seg>39.4. 自定义生成的文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>39.5. Further things to consider</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T074641Z" creationid="haohang" creationdate="20150625T074641Z">
        <seg>39.5. 进一步要考虑的事项</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162027Z" creationid="msdx" creationdate="20141109T162027Z">
        <seg>4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>4.1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162033Z" creationid="msdx" creationdate="20141109T162033Z">
        <seg>4.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>4.2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162125Z" creationid="msdx" creationdate="20141109T162125Z">
        <seg>4.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>4.3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162128Z" creationid="msdx" creationdate="20141109T162128Z">
        <seg>4.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>4.4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162137Z" creationid="msdx" creationdate="20141109T162137Z">
        <seg>4.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>4.5.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162143Z" creationid="msdx" creationdate="20141109T162143Z">
        <seg>4.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>4.6.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162150Z" creationid="msdx" creationdate="20141109T162150Z">
        <seg>4.6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>40.1. Usage</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T094847Z" creationid="haohang" creationdate="20150625T094847Z">
        <seg>40.1. 用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>40.2. Tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T094910Z" creationid="haohang" creationdate="20150625T094910Z">
        <seg>40.2. 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>40.3. Project layout</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T095117Z" creationid="haohang" creationdate="20150625T095117Z">
        <seg>40.3. 项目布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>40.4. Dependency management</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T095233Z" creationid="haohang" creationdate="20150625T095233Z">
        <seg>40.4. 依赖管理</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>40.5. Convention properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T095748Z" creationid="haohang" creationdate="20150625T095748Z">
        <seg>40.5. 约定属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>40.6. Source set properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T102700Z" creationid="haohang" creationdate="20150625T102700Z">
        <seg>40.6. Source set 属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>41.1. Usage</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150626T100318Z" creationid="haohang" creationdate="20150626T100318Z">
        <seg>41.1. 用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>41.2. Tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T061106Z" creationid="haohang" creationdate="20150628T061106Z">
        <seg>41.2. 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>41.3. Project layout</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T061544Z" creationid="haohang" creationdate="20150628T061544Z">
        <seg>41.3. 项目布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>41.4. Dependency management</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T061557Z" creationid="haohang" creationdate="20150628T061557Z">
        <seg>41.4. 依赖管理</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>41.5. Convention properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T061655Z" creationid="haohang" creationdate="20150628T061655Z">
        <seg>41.5. 约定属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>42.1. Usage</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T062812Z" creationid="haohang" creationdate="20150628T062812Z">
        <seg>42.1. 用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>42.2. Configuration</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T090946Z" creationid="haohang" creationdate="20150628T090946Z">
        <seg>42.2. 配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>43.1. Usage</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T091558Z" creationid="haohang" creationdate="20150628T091558Z">
        <seg>43.1. 用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>44.1. Usage</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150701T025826Z" creationid="haohang" creationdate="20150701T025826Z">
        <seg>44.1. 用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>44.2. Tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150701T030753Z" creationid="haohang" creationdate="20150701T030753Z">
        <seg>44.2. 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>44.3. Distribution contents</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150701T031649Z" creationid="haohang" creationdate="20150701T031649Z">
        <seg>44.3. 分发内容</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>45.1. Usage</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150701T035525Z" creationid="haohang" creationdate="20150701T035525Z">
        <seg>45.1. 用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>45.2. Tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150702T104919Z" creationid="haohang" creationdate="20150702T104919Z">
        <seg>45.2. 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>45.3. Convention properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150702T105200Z" creationid="haohang" creationdate="20150702T105200Z">
        <seg>45.3. 约定属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>45.4. Including other resources in the distribution</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150702T105321Z" creationid="haohang" creationdate="20150702T105321Z">
        <seg>45.4. 在 distribution 中包含其他资源</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>46.1. Usage</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150705T084511Z" creationid="haohang" creationdate="20150705T084511Z">
        <seg>46.1. 用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>46.2. Tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T070259Z" creationid="haohang" creationdate="20150707T070259Z">
        <seg>46.2. 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>46.3. Including other resources in the distribution</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T070404Z" creationid="haohang" creationdate="20150707T070404Z">
        <seg>46.3. 在 distribution 中包含其他资源</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>47.1. Tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T071518Z" creationid="haohang" creationdate="20150707T071518Z">
        <seg>47.1. 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>47.2. What to set up</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T071622Z" creationid="haohang" creationdate="20150707T071622Z">
        <seg>47.2. 要设置什么</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>47.3.1. "&lt;c0&gt;pom&lt;/c0&gt;" (Maven conversion)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T074923Z" creationid="haohang" creationdate="20150707T074923Z">
        <seg>47.3.1. “&lt;c0&gt;pom&lt;/c0&gt;”（Maven 转换）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>47.3.2. "&lt;c0&gt;java-library&lt;/c0&gt;"</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T094044Z" creationid="haohang" creationdate="20150707T094044Z">
        <seg>47.3.2. “&lt;c0&gt;java-library&lt;/c0&gt;”</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>47.3.3. "&lt;c0&gt;scala-library&lt;/c0&gt;"</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T094320Z" creationid="haohang" creationdate="20150707T094320Z">
        <seg>47.3.3. “&lt;c0&gt;scala-library&lt;/c0&gt;”</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>47.3.4. "&lt;c0&gt;groovy-library&lt;/c0&gt;"</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T094533Z" creationid="haohang" creationdate="20150707T094533Z">
        <seg>47.3.4. “&lt;c0&gt;groovy-library&lt;/c0&gt;”</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>47.3.5. "basic"</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T094802Z" creationid="haohang" creationdate="20150707T094802Z">
        <seg>47.3.5. “basic”</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>47.3. Build init types</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T074825Z" creationid="haohang" creationdate="20150707T074734Z">
        <seg>47.3. 构建初始化的类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>48.1. Usage</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150710T012639Z" creationid="haohang" creationdate="20150710T012639Z">
        <seg>48.1. 用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>48.2. Tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150710T012905Z" creationid="haohang" creationdate="20150710T012905Z">
        <seg>48.2. 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>49.1. Usage</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150713T095144Z" creationid="haohang" creationdate="20150713T095144Z">
        <seg>49.1. 用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>49.2. Tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150713T100235Z" creationid="haohang" creationdate="20150713T100235Z">
        <seg>49.2. 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>49.3. Project layout</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150713T100337Z" creationid="haohang" creationdate="20150713T100337Z">
        <seg>49.3. 项目布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>49.4. Dependency management</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150713T100430Z" creationid="haohang" creationdate="20150713T100430Z">
        <seg>49.4. 依赖管理</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>49.5. Configuration</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150713T100449Z" creationid="haohang" creationdate="20150713T100443Z">
        <seg>49.5. 配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>5.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162153Z" creationid="msdx" creationdate="20141109T162153Z">
        <seg>5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>5.1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162212Z" creationid="msdx" creationdate="20141109T162212Z">
        <seg>5.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>5.2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162243Z" creationid="msdx" creationdate="20141109T162243Z">
        <seg>5.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.1.1. Flexible dependency management for migrations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150716T035935Z" creationid="haohang" creationdate="20150716T035850Z">
        <seg>50.1.1. 为了迁移的灵活的依赖管理</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.1.2. Dependency management and Java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150716T045309Z" creationid="haohang" creationdate="20150716T045309Z">
        <seg>50.1.2. 依赖管理和 Java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.1. Introduction</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150714T015848Z" creationid="haohang" creationdate="20150714T015848Z">
        <seg>50.1. 介绍</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.10.1. Implicit transitive dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151201T063844Z" creationid="haohang" creationdate="20151201T063844Z">
        <seg>50.10.1. 隐式传递依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.10. Strategies for transitive dependency management</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151130T032658Z" creationid="haohang" creationdate="20151130T032658Z">
        <seg>50.10. 传递依赖管理的策略</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.2.1. Put the Version in the Filename (Version the jar)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150716T092139Z" creationid="haohang" creationdate="20150716T092139Z">
        <seg>50.2.1. 在文件名中包含版本号（版本化 jar 文件）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.2.2. Manage transitive dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150716T094057Z" creationid="haohang" creationdate="20150716T094034Z">
        <seg>50.2.2. 管理传递依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.2.3. Resolve version conflicts</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150721T054138Z" creationid="haohang" creationdate="20150721T054138Z">
        <seg>50.2.3. 解决版本冲突的问题</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.2.4. Use Dynamic Versions and Changing Modules</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T010309Z" creationid="haohang" creationdate="20150722T010309Z">
        <seg>50.2.4. 使用动态版本和变化的模块</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.2. Dependency Management Best Practices</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150716T083446Z" creationid="haohang" creationdate="20150716T083446Z">
        <seg>50.2. 依赖管理的最佳实践</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.3. Dependency configurations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T075056Z" creationid="haohang" creationdate="20150722T075056Z">
        <seg>50.3. 依赖配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.4.1.1. Depending on modules with multiple artifacts</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150724T035708Z" creationid="haohang" creationdate="20150724T035636Z">
        <seg>50.4.1.1. 依赖有多个 artifacts 的模块</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.4.1.2. Artifact only notation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150730T035751Z" creationid="haohang" creationdate="20150730T035751Z">
        <seg>50.4.1.2. Artifact only notation</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.4.1.3. Classifiers</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150731T035214Z" creationid="haohang" creationdate="20150731T035214Z">
        <seg>50.4.1.3. Classifiers</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.4.1. External module dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T080837Z" creationid="haohang" creationdate="20150722T080837Z">
        <seg>50.4.1. 外部模块依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.4.10. Dependency reports</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T032810Z" creationid="haohang" creationdate="20150807T032810Z">
        <seg>50.4.10. 依赖报告</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.4.2. Client module dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T091230Z" creationid="haohang" creationdate="20150801T091230Z">
        <seg>50.4.2. 客户端模块依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.4.3. Project dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T092017Z" creationid="haohang" creationdate="20150801T092017Z">
        <seg>50.4.3. 项目依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.4.4. File dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T092619Z" creationid="haohang" creationdate="20150801T092619Z">
        <seg>50.4.4. 文件依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.4.5. Gradle API Dependency</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T094514Z" creationid="haohang" creationdate="20150801T094514Z">
        <seg>50.4.5. Gradle API 依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.4.6. Local Groovy Dependency</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T094706Z" creationid="haohang" creationdate="20150801T094706Z">
        <seg>50.4.6. 本地 Groovy 依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.4.7. Excluding transitive dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T094852Z" creationid="haohang" creationdate="20150801T094852Z">
        <seg>50.4.7. 排除传递依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.4.8. Optional attributes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T103051Z" creationid="haohang" creationdate="20150801T103051Z">
        <seg>50.4.8. 可选属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.4.9. Dependency configurations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T103725Z" creationid="haohang" creationdate="20150801T103725Z">
        <seg>50.4.9. 依赖配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.4. How to declare your dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T075957Z" creationid="haohang" creationdate="20150722T075957Z">
        <seg>50.4. 如何声明依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.5. Working with dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T034203Z" creationid="haohang" creationdate="20150807T034203Z">
        <seg>50.5. 使用依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.6.1. Maven central repository</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T095740Z" creationid="haohang" creationdate="20150807T095740Z">
        <seg>50.6.1. Maven 中央仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.6.2. Maven JCenter repository</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T095935Z" creationid="haohang" creationdate="20150807T095935Z">
        <seg>50.6.2. Maven JCenter 仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.6.3. Local Maven repository</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T100904Z" creationid="haohang" creationdate="20150807T100904Z">
        <seg>50.6.3. 本地 Maven 仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.6.4.1. Accessing password protected Maven repositories</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150909T053258Z" creationid="haohang" creationdate="20150909T053258Z">
        <seg>50.6.4.1. 访问密码保护的 Maven 仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.6.4. Maven repositories</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150909T052845Z" creationid="haohang" creationdate="20150909T052845Z">
        <seg>50.6.4. Maven 仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.6.5. Flat directory repository</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150910T011839Z" creationid="haohang" creationdate="20150910T011749Z">
        <seg>50.6.5. 平面的目录仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.6.6.1. Defining custom patterns for an Ivy repository</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T110538Z" creationid="95" creationdate="20151006T110538Z">
        <seg>50.6.6.1. 为一个 Ivy 存储库定义自定义的模式</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.6.6.2. Ivy repository with Maven compatible layout</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T110709Z" creationid="95" creationdate="20151006T110709Z">
        <seg>50.6.6.2. 使用 Maven 兼容布局的 Ivy 仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.6.6.3. Defining different artifact and Ivy file locations for an Ivy repository</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T111142Z" creationid="95" creationdate="20151006T111142Z">
        <seg>50.6.6.3. 为一个 Ivy 仓库定义不同的 artifact 和 Ivy 文件位置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.6.6.4. Accessing password protected Ivy repositories</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T133214Z" creationid="95" creationdate="20151006T133214Z">
        <seg>50.6.6.4. 访问密码保护的 Ivy 仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.6.6. Ivy repositories</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T110337Z" creationid="95" creationdate="20151006T110337Z">
        <seg>50.6.6. Ivy 存储库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.6.7. Working with repositories</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T133349Z" creationid="95" creationdate="20151006T133349Z">
        <seg>50.6.7. 使用仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.6.8. More about Ivy resolvers</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T133747Z" creationid="95" creationdate="20151006T133747Z">
        <seg>50.6.8. 更多关于 Ivy 解析器的信息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.6. Repositories</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T091333Z" creationid="haohang" creationdate="20150807T091333Z">
        <seg>50.6. 仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.7. How dependency resolution works</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151007T022618Z" creationid="95" creationdate="20151007T022618Z">
        <seg>50.7. 依赖解析的工作原理</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.8.1. Forcing a particular module version</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T054038Z" creationid="95" creationdate="20151115T054038Z">
        <seg>50.8.1. 强制一个特定模块的版本</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.8.2.1. Modelling releaseable units</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T060424Z" creationid="95" creationdate="20151115T060424Z">
        <seg>50.8.2.1. 模块化可发布的单位</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.8.2.2. Implement a custom versioning scheme</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T061610Z" creationid="95" creationdate="20151115T061610Z">
        <seg>50.8.2.2. 实现一个自定义的版本方案</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.8.2.3. Blacklisting a particular version with a replacement</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T070725Z" creationid="95" creationdate="20151115T055649Z">
        <seg>50.8.2.3. 黑名单替换特定版本</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.8.2.4. Substituting a dependency module with a compatible replacement</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T090008Z" creationid="95" creationdate="20151115T090008Z">
        <seg>50.8.2.4. 使用一个兼容模块替换一个依赖模块</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.8.2. Using dependency resolve rules</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T055311Z" creationid="95" creationdate="20151115T055311Z">
        <seg>50.8.2. 使用依赖解析规则</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.8.3. Enabling Ivy dynamic resolve mode</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T055635Z" creationid="95" creationdate="20151115T055635Z">
        <seg>50.8.3. 启用 Ivy 动态解析模式</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.8.4. Component metadata rules</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T091523Z" creationid="95" creationdate="20151115T091523Z">
        <seg>50.8.4. 组件元数据规则</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.8. Fine-tuning the dependency resolution process</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T053827Z" creationid="95" creationdate="20151115T053827Z">
        <seg>50.8. 微调依赖解析过程</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.9.1.1. Separate metadata cache</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T043934Z" creationid="95" creationdate="20151129T043905Z">
        <seg>50.9.1.1. 单独的元数据缓存</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.9.1.2. Repository caches are independent</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T045617Z" creationid="95" creationdate="20151129T045617Z">
        <seg>50.9.1.2. 仓库缓存是独立的</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.9.1.3. Artifact reuse</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T151039Z" creationid="95" creationdate="20151129T151039Z">
        <seg>50.9.1.3. 构件重用</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.9.1.4. Checksum based storage</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T152935Z" creationid="95" creationdate="20151129T152353Z">
        <seg>50.9.1.4. 基于校验和的存储</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.9.1.5. Cache Locking</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T153329Z" creationid="95" creationdate="20151129T153314Z">
        <seg>50.9.1.5. 缓存锁</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.9.1. Key features of the Gradle dependency cache</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T043918Z" creationid="95" creationdate="20151129T043901Z">
        <seg>50.9.1. Gradle 依赖缓存的主要特点</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.9.2.1. Offline</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T153605Z" creationid="95" creationdate="20151129T153605Z">
        <seg>50.9.2.1. 离线</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.9.2.2. Refresh</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T153839Z" creationid="95" creationdate="20151129T153839Z">
        <seg>50.9.2.2. 刷新</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.9.2. Command line options to override caching</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T153600Z" creationid="95" creationdate="20151129T153600Z">
        <seg>50.9.2. 重写缓存的命令行选项</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.9.3. Fine-tuned control over dependency caching</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T154725Z" creationid="95" creationdate="20151129T154725Z">
        <seg>50.9.3. 依赖缓存的微调控制</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>50.9. The dependency cache</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T041856Z" creationid="95" creationdate="20151129T041856Z">
        <seg>50.9. 依赖缓存</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>51.1. Introduction</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151220T120806Z" creationid="95" creationdate="20151220T120806Z">
        <seg>51.1. 介绍</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>51.2. Artifacts and configurations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151220T123509Z" creationid="95" creationdate="20151220T123509Z">
        <seg>51.2. 构件和配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>51.3.1. Archive task artifacts</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151226T090810Z" creationid="95" creationdate="20151226T085533Z">
        <seg>51.3.1. Archive task artifacts</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>51.3.2. File artifacts</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151226T091026Z" creationid="95" creationdate="20151226T091026Z">
        <seg>51.3.2. 文件构件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>51.3. Declaring artifacts</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151226T085505Z" creationid="95" creationdate="20151226T085505Z">
        <seg>51.3. 声明构件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>51.4. Publishing artifacts</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151226T091522Z" creationid="95" creationdate="20151226T091522Z">
        <seg>51.4 发布构件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>51.5. More about project libraries</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151226T093131Z" creationid="95" creationdate="20151226T093131Z">
        <seg>51.5. 更多关于项目库的内容</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>52.1. Usage</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151228T151847Z" creationid="95" creationdate="20151228T151847Z">
        <seg>52.1. 用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>52.2. Tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151228T151907Z" creationid="95" creationdate="20151228T151907Z">
        <seg>52.2. 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>52.3. Dependency management</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151228T152435Z" creationid="95" creationdate="20151228T152435Z">
        <seg>52.3. 依赖管理</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>52.4. Convention properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151228T152452Z" creationid="95" creationdate="20151228T152452Z">
        <seg>52.4. 约定属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>52.5. Convention methods</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151228T153219Z" creationid="95" creationdate="20151228T153219Z">
        <seg>52.5. 约定方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>52.6.1. Introduction</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160104T153158Z" creationid="95" creationdate="20160104T153158Z">
        <seg>52.6.1. 介绍</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>52.6.2. Deploying to a Maven repository</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160104T154111Z" creationid="95" creationdate="20160104T154111Z">
        <seg>52.6.2. 部署到 Maven 仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>52.6.3. Installing to the local repository</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T142718Z" creationid="95" creationdate="20160105T141921Z">
        <seg>52.6.3. 安装到本地仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>52.6.4.1. Multiple artifacts per project</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T143550Z" creationid="95" creationdate="20160106T143523Z">
        <seg>52.6.4.1. 一个项目多个构件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>52.6.4.2. Dependency mapping</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T144506Z" creationid="95" creationdate="20160106T144506Z">
        <seg>52.6.4.2. 依赖映射</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>52.6.4. Maven POM generation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T143555Z" creationid="95" creationdate="20160105T143555Z">
        <seg>52.6.4. Maven POM 生成</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>52.6. Interacting with Maven repositories</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160104T153147Z" creationid="95" creationdate="20160104T153147Z">
        <seg>52.6. 与 Maven 仓库的交互</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>53.1. Usage</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160108T151044Z" creationid="95" creationdate="20160108T151044Z">
        <seg>53.1. 用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>53.2. Signatory credentials</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160108T151155Z" creationid="95" creationdate="20160108T151155Z">
        <seg>53.2. 签名凭证</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>53.3.1. Signing Configurations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160108T153449Z" creationid="95" creationdate="20160108T153449Z">
        <seg>53.3.1. 签名配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>53.3.2. Signing Tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160109T072608Z" creationid="95" creationdate="20160109T072608Z">
        <seg>53.3.2. 签名任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>53.3.3. Conditional Signing</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160126T141149Z" creationid="95" creationdate="20160126T141025Z">
        <seg>53.3.3. 有条件的签名</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>53.3. Specifying what to sign</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160108T152956Z" creationid="95" creationdate="20160108T152925Z">
        <seg>53.3. 指定要签名的内容</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>53.4. Publishing the signatures</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160126T143736Z" creationid="95" creationdate="20160126T143736Z">
        <seg>53.4. 发布签名</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>53.5. Signing POM files</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160126T144649Z" creationid="95" creationdate="20160126T144649Z">
        <seg>53.5. 签名 POM 文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>54.1. Tool chain support</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160128T152548Z" creationid="95" creationdate="20160128T152548Z">
        <seg>54.1. 工具链支持</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>54.10. Visual Studio IDE integration</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T094807Z" creationid="haohang" creationdate="20160408T094807Z">
        <seg>54.10. Visual Studio IDE 集成</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>54.11.1. CUnit sources</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T144341Z" creationid="95" creationdate="20160504T144341Z">
        <seg>54.11.1. CUnit 源码</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>54.11.2. Building CUnit executables</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T150551Z" creationid="95" creationdate="20160504T150551Z">
        <seg>54.11.2. 构建 CUnit 可执行文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>54.11.3. Running CUnit tests</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T151249Z" creationid="95" creationdate="20160504T151226Z">
        <seg>54.11.3. 运行 CUnit 测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>54.11. CUnit support</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T095635Z" creationid="haohang" creationdate="20160408T095635Z">
        <seg>54.11. CUnit 支持</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>54.2. Component model</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160128T153602Z" creationid="95" creationdate="20160128T153602Z">
        <seg>54.2. 组件模型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>54.3.1. Working with shared libraries</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160219T072317Z" creationid="haohang" creationdate="20160219T072317Z">
        <seg>54.3.1. 使用共享库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>54.3. Tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160219T070039Z" creationid="haohang" creationdate="20160219T070039Z">
        <seg>54.3. 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>54.4.1. C++ sources</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160219T082800Z" creationid="haohang" creationdate="20160219T082800Z">
        <seg>54.4.1. C++ 源代码</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>54.4.2. C sources</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160225T090421Z" creationid="haohang" creationdate="20160225T090421Z">
        <seg>54.4.2. C 源代码</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>54.4.3. Assembler sources</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160313T053703Z" creationid="95" creationdate="20160313T053625Z">
        <seg>54.4.3. 汇编代码</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>54.4.4. Objective-C sources</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160319T115055Z" creationid="95" creationdate="20160319T115055Z">
        <seg>54.4.4. Objective-C 源码</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>54.4.5. Objective-C++ sources</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160319T115355Z" creationid="95" creationdate="20160319T115355Z">
        <seg>54.4.5. Objective-C++ 源码</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>54.4. Core language support: C, C++, Assembler, Objective-C and Objective-C++</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160219T081305Z" creationid="haohang" creationdate="20160219T081305Z">
        <seg>544.核心语言支持: C、C++、汇编，Objective-C和Objective-C++</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>54.5. Configuring the compiler, assembler and linker</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160319T115547Z" creationid="95" creationdate="20160319T115547Z">
        <seg>54.5. 配置编译器，汇编器和连接器</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>54.6. Windows Resources</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160324T153152Z" creationid="95" creationdate="20160324T153117Z">
        <seg>54.6. Windows Resource</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>54.7.1. Dependencies within the same project</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160325T025640Z" creationid="haohang" creationdate="20160325T025640Z">
        <seg>54.7.1. 同一项目的依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>54.7.2. Project Dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160325T033147Z" creationid="haohang" creationdate="20160325T033147Z">
        <seg>54.7.2. 项目依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>54.7. Library Dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160325T025508Z" creationid="haohang" creationdate="20160325T025508Z">
        <seg>54.7. 库依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>54.8.1. Build types</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160401T090003Z" creationid="haohang" creationdate="20160401T090003Z">
        <seg>54.8.1. 构建类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>54.8.2. Platform</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160401T091010Z" creationid="haohang" creationdate="20160401T091006Z">
        <seg>54.8.2. 平台</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>54.8.3. Flavor</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T080655Z" creationid="haohang" creationdate="20160405T034222Z">
        <seg>54.8.3. Flavor</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>54.8.4. Selecting the build types, platforms and flavors for a component</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T081619Z" creationid="haohang" creationdate="20160408T081619Z">
        <seg>54.8.4. 为一个组件选择构建类型，平台和flavor</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>54.8.5. Building all possible variants</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T083118Z" creationid="haohang" creationdate="20160408T083118Z">
        <seg>54.8.5. 构建所有可能的变种</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>54.8. Native Binary Variants</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160325T033517Z" creationid="haohang" creationdate="20160325T033517Z">
        <seg>54.8. 本地二进制变种</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>54.9.1. Defining tool chains</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T091158Z" creationid="haohang" creationdate="20160408T091158Z">
        <seg>54.9.1. 定义工具链</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>54.9.2. Using tool chains</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T091355Z" creationid="haohang" creationdate="20160408T091355Z">
        <seg>54.9.2. 使用工具链</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>54.9.3. Cross-compiling with GCC</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T092741Z" creationid="haohang" creationdate="20160408T092741Z">
        <seg>54.9.3. 使用GCC进行交叉编译</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>54.9. Tool chains</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T084725Z" creationid="haohang" creationdate="20160408T084725Z">
        <seg>54.9. 工具链</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>55.1. Build phases</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160518T032514Z" creationid="haohang" creationdate="20160518T032514Z">
        <seg>55.1. 构建阶段</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>55.2. Settings file</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T024517Z" creationid="haohang" creationdate="20160519T024517Z">
        <seg>55.2. 设置文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>55.3.1. Project locations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T030455Z" creationid="haohang" creationdate="20160519T030455Z">
        <seg>55.3.1. 项目位置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>55.3.2.1. Hierarchical layouts</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T041314Z" creationid="haohang" creationdate="20160519T041314Z">
        <seg>55.3.2.1. 分层布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>55.3.2.2. Flat layouts</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T041850Z" creationid="haohang" creationdate="20160519T041850Z">
        <seg>55.3.2.2. 平面布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>55.3.2. Building the tree</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T041148Z" creationid="haohang" creationdate="20160519T041148Z">
        <seg>55.3.2. 生成树</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>55.3.3. Modifying elements of the project tree</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T070226Z" creationid="haohang" creationdate="20160519T063923Z">
        <seg>55.3.3. 修改项目树元素</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>55.3. Multi-project builds</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T030007Z" creationid="haohang" creationdate="20160519T030007Z">
        <seg>55.3. 多项目构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>55.4. Initialization</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T070548Z" creationid="haohang" creationdate="20160519T070548Z">
        <seg>55.4. 初始化</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>55.5. Configuration and execution of a single project build</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T080718Z" creationid="haohang" creationdate="20160519T080718Z">
        <seg>55.5. 配置和执行单个项目构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>55.6.1. Project evaluation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T124833Z" creationid="95" creationdate="20160521T124833Z">
        <seg>55.6.1. 项目评估</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>55.6.2. Task creation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T134036Z" creationid="95" creationdate="20160521T134036Z">
        <seg>55.6.2. 任务创建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>55.6.3. Task execution graph ready</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T135250Z" creationid="95" creationdate="20160521T135250Z">
        <seg>55.6.3. 任务执行图准备</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>55.6.4. Task execution</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T135738Z" creationid="95" creationdate="20160521T135738Z">
        <seg>55.6.4. 任务执行</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>55.6. Responding to the lifecycle in the build script</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160520T124246Z" creationid="95" creationdate="20160520T124246Z">
        <seg>55.6. 构建脚本生命周期的响应</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>56.1.1.1. Configuration on demand</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160522T120416Z" creationid="95" creationdate="20160522T120416Z">
        <seg>56.1.1.1. 按需配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>56.1.1. Configuration and execution</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160522T025001Z" creationid="95" creationdate="20160522T025001Z">
        <seg>56.1.1. 配置和执行</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>56.1.2. Defining common behavior</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160522T125126Z" creationid="95" creationdate="20160522T125126Z">
        <seg>56.1.2. 定义共同行为</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>56.1. Cross project configuration</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160522T024630Z" creationid="95" creationdate="20160522T024630Z">
        <seg>56.1. 跨项目配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>56.10. Multi-Project Building and Testing</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T094512Z" creationid="haohang" creationdate="20160726T094512Z">
        <seg>56.10. 多项目构建和测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>56.11. Property and method inheritance</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160727T052904Z" creationid="haohang" creationdate="20160727T052904Z">
        <seg>56.11. 属性和方法的继承</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>56.12. Summary</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160727T053549Z" creationid="haohang" creationdate="20160727T053549Z">
        <seg>56.12. 总结</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>56.2.1. Defining common behavior</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160527T162233Z" creationid="95" creationdate="20160527T162233Z">
        <seg>56.2.1. 定义共同行为</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>56.2.2. Adding specific behavior</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160527T162408Z" creationid="95" creationdate="20160527T162408Z">
        <seg>56.2.2. 添加特定的行为</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>56.2.3.1. Filtering by name</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160527T163747Z" creationid="95" creationdate="20160527T163747Z">
        <seg>56.2.3.1. 按名称过滤</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>56.2.3.2. Filtering by properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160530T144247Z" creationid="95" creationdate="20160530T144113Z">
        <seg>56.2.3.2. 通过属性筛选</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>56.2.3. Project filtering</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160527T163329Z" creationid="95" creationdate="20160527T163329Z">
        <seg>56.2.3. 项目筛选</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>56.2. Subproject configuration</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160527T162137Z" creationid="95" creationdate="20160527T162137Z">
        <seg>56.2. 子项目配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>56.3. Execution rules for multi-project builds</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160530T151540Z" creationid="95" creationdate="20160530T151540Z">
        <seg>56.3. 多项目构建的执行规则</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>56.4. Running tasks by their absolute path</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160715T091059Z" creationid="haohang" creationdate="20160715T091059Z">
        <seg>56.4. 按绝对路径运行任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>56.5. Project and task paths</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160715T092100Z" creationid="haohang" creationdate="20160715T092100Z">
        <seg>56.5. 项目和任务路径</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>56.6.1.1. Dependencies and execution order</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T062236Z" creationid="haohang" creationdate="20160718T062236Z">
        <seg>56.6.1.1. 依赖和执行顺序</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>56.6.1.2. Declaring dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T071005Z" creationid="haohang" creationdate="20160718T071005Z">
        <seg>56.6.1.2. 声明依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>56.6.1.3. The nature of cross project task dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T071943Z" creationid="haohang" creationdate="20160718T071943Z">
        <seg>56.6.1.3. 跨项目任务依赖的本质</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>56.6.1. Execution dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T062229Z" creationid="haohang" creationdate="20160718T062229Z">
        <seg>56.6.1. 执行依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>56.6.2. Configuration time dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T072106Z" creationid="haohang" creationdate="20160718T072106Z">
        <seg>56.6.2. 配置时依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>56.6.3. Real life examples</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160722T090411Z" creationid="haohang" creationdate="20160722T090411Z">
        <seg>56.6.3. 实际生活中的例子</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>56.6. Dependencies - Which dependencies?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T061913Z" creationid="haohang" creationdate="20160718T061913Z">
        <seg>56.6. 依赖-哪些依赖？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>56.7.1. Disabling the build of dependency projects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T085308Z" creationid="haohang" creationdate="20160726T085308Z">
        <seg>56.7.1. 禁止依赖项目的构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>56.7. Project lib dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T083211Z" creationid="haohang" creationdate="20160726T083211Z">
        <seg>56.7. 项目库依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>56.8. Parallel project execution</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T085423Z" creationid="haohang" creationdate="20160726T085423Z">
        <seg>56.8. 并行项目执行</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>56.9. Decoupled Projects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T092128Z" creationid="haohang" creationdate="20160726T092128Z">
        <seg>56.9. 解耦的项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>57.1. Packaging a task class</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T143847Z" creationid="95" creationdate="20160814T143847Z">
        <seg>57.1. 封装一个任务类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>57.2. Writing a simple task class</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T145322Z" creationid="95" creationdate="20160814T145322Z">
        <seg>57.2. 编写一个简单的任务类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>57.3. A standalone project</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T151631Z" creationid="95" creationdate="20160814T151631Z">
        <seg>57.3. 一个独立项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162246Z" creationid="msdx" creationdate="20141109T162246Z">
        <seg>6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162302Z" creationid="msdx" creationdate="20141109T162302Z">
        <seg>6.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.1. Projects and tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T154138Z" creationid="msdx" creationdate="20141109T154138Z">
        <seg>6.1. Projects and tasks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.10.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163250Z" creationid="msdx" creationdate="20141109T163250Z">
        <seg>6.10.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.11.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163310Z" creationid="msdx" creationdate="20141109T163310Z">
        <seg>6.11.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.12.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163340Z" creationid="msdx" creationdate="20141109T163340Z">
        <seg>6.12.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.13.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163349Z" creationid="msdx" creationdate="20141109T163349Z">
        <seg>6.13.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.14.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163409Z" creationid="msdx" creationdate="20141109T163409Z">
        <seg>6.14.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162324Z" creationid="msdx" creationdate="20141109T162324Z">
        <seg>6.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162330Z" creationid="msdx" creationdate="20141109T162330Z">
        <seg>6.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162413Z" creationid="msdx" creationdate="20141109T162413Z">
        <seg>6.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.5.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T164805Z" creationid="msdx" creationdate="20141109T164805Z">
        <seg>6.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.6.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162455Z" creationid="msdx" creationdate="20141109T162455Z">
        <seg>6.6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.7.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162459Z" creationid="msdx" creationdate="20141109T162459Z">
        <seg>6.7.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.8.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162515Z" creationid="msdx" creationdate="20141109T162515Z">
        <seg>6.8.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.9.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163236Z" creationid="msdx" creationdate="20141109T163236Z">
        <seg>6.9.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>7.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163423Z" creationid="msdx" creationdate="20141109T163423Z">
        <seg>7.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>7.1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163427Z" creationid="msdx" creationdate="20141109T163427Z">
        <seg>7.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>7.1. The Java plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104749Z" creationid="msdx" creationdate="20150428T104749Z">
        <seg>7.1. Java 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>7.2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163432Z" creationid="msdx" creationdate="20141109T163432Z">
        <seg>7.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>7.3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163438Z" creationid="msdx" creationdate="20141109T163438Z">
        <seg>7.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>7.4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163504Z" creationid="msdx" creationdate="20141109T163504Z">
        <seg>7.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>8.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163509Z" creationid="msdx" creationdate="20141109T163509Z">
        <seg>8.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>8.1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163518Z" creationid="msdx" creationdate="20141109T163518Z">
        <seg>8.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>8.1. What is dependency management?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150703T100752Z" creationid="haohang" creationdate="20150703T100752Z">
        <seg>8.1. 什么是依赖管理？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>8.2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163536Z" creationid="msdx" creationdate="20141109T163536Z">
        <seg>8.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>8.3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163601Z" creationid="msdx" creationdate="20141109T163601Z">
        <seg>8.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>8.4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163610Z" creationid="msdx" creationdate="20141109T163610Z">
        <seg>8.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>8.5.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163621Z" creationid="msdx" creationdate="20141109T163621Z">
        <seg>8.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>8.6.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163640Z" creationid="msdx" creationdate="20141109T163640Z">
        <seg>8.6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>8.7.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163651Z" creationid="msdx" creationdate="20141109T163651Z">
        <seg>8.7.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>8080</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T151123Z" creationid="msdx" creationdate="20150504T151123Z">
        <seg>8080</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>9.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163652Z" creationid="msdx" creationdate="20141109T163652Z">
        <seg>9.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>9.1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163700Z" creationid="msdx" creationdate="20141109T163700Z">
        <seg>9.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>9.1. A basic Groovy project</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T062227Z" creationid="msdx" creationdate="20141030T061526Z">
        <seg>9.1. 一个基本的Groovy project</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>9.2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163729Z" creationid="msdx" creationdate="20141109T163729Z">
        <seg>9.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>9.2. Summary</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T123354Z" creationid="msdx" creationdate="20141030T065520Z">
        <seg>9.2. 总结</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>:test
This is executed during the execution phase.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T025437Z" creationid="haohang" creationdate="20160519T025437Z">
        <seg>:test
This is executed during the execution phase.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;&lt;c1&gt;FileTree&lt;/c1&gt;&lt;/a0&gt; (read-only)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T093522Z" creationid="msdx" creationdate="20150429T093522Z">
        <seg>&lt;a0&gt;&lt;c1&gt;FileTree&lt;/c1&gt;&lt;/a0&gt; (read-only)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;&lt;c1&gt;FileTree&lt;/c1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083439Z" creationid="msdx" creationdate="20150428T083439Z">
        <seg>&lt;a0&gt;&lt;c1&gt;FileTree&lt;/c1&gt;&lt;/a0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;&lt;c1&gt;JavaVersion&lt;/c1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083245Z" creationid="msdx" creationdate="20150428T083245Z">
        <seg>&lt;a0&gt;&lt;c1&gt;JavaVersion&lt;/c1&gt;&lt;/a0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;&lt;c1&gt;SourceDirectorySet&lt;/c1&gt;&lt;/a0&gt; (read-only)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083417Z" creationid="msdx" creationdate="20150428T083417Z">
        <seg>&lt;a0&gt;&lt;c1&gt;SourceDirectorySet&lt;/c1&gt;&lt;/a0&gt; (read-only)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;&lt;c1&gt;SourceSetContainer&lt;/c1&gt;&lt;/a0&gt; (read-only)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083244Z" creationid="msdx" creationdate="20150428T083244Z">
        <seg>&lt;a0&gt;&lt;c1&gt;SourceSetContainer&lt;/c1&gt;&lt;/a0&gt; (read-only)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;&lt;c1&gt;SourceSetOutput&lt;/c1&gt;&lt;/a0&gt; (read-only)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083250Z" creationid="msdx" creationdate="20150428T083250Z">
        <seg>&lt;a0&gt;&lt;c1&gt;SourceSetOutput&lt;/c1&gt;&lt;/a0&gt; (read-only)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;Bintray&lt;/a0&gt;'s JCenter is an up-to-date collection of all popular Maven OSS artifacts, including artifacts published directly to Bintray.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T100434Z" creationid="haohang" creationdate="20150807T100434Z">
        <seg>&lt;a0&gt;Bintray&lt;/a0&gt;JCenter 是所有流行的 Maven OSS artifacts 的up-to-date 集合，包括直接发布到 Bintray 的 artifacts。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;Growl&lt;/a0&gt; (Mac OS X)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T062807Z" creationid="haohang" creationdate="20150628T062807Z">
        <seg>&lt;a0&gt;Growl&lt;/a0&gt; (Mac OS X)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;Previous&lt;/a0&gt;&lt;s1&gt;|&lt;/s1&gt;&lt;a2&gt;Contents&lt;/a2&gt;&lt;s3&gt;|&lt;/s3&gt;&lt;a4&gt;Next&lt;/a4&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T040034Z" creationid="msdx" creationdate="20141030T040034Z">
        <seg>&lt;a0&gt;上一章&lt;/a0&gt;&lt;s1&gt;|&lt;/s1&gt;&lt;a2&gt;目录&lt;/a2&gt;&lt;s3&gt;|&lt;/s3&gt;&lt;a4&gt;下一章&lt;/a4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;Section 55.1, “Build phases”&lt;/a0&gt; describes the phases of every Gradle build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160522T025129Z" creationid="95" creationdate="20160522T025129Z">
        <seg>&lt;a0&gt;第 55.1 节，“构建阶段”&lt;/a0&gt;描述了每个 Gradle 构建阶段。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;Section 56.1.1.1, “Configuration on demand”&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T090554Z" creationid="haohang" creationdate="20160726T090554Z">
        <seg>&lt;a0&gt;第 56.1.1.1 节，“按需配置”&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;Snarl&lt;/a0&gt; (Windows)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T062804Z" creationid="haohang" creationdate="20150628T062804Z">
        <seg>&lt;a0&gt;Snarl&lt;/a0&gt; (Windows)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;notify-send&lt;/a0&gt; (Ubuntu)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T062802Z" creationid="haohang" creationdate="20150628T062802Z">
        <seg>&lt;a0&gt;notify-send&lt;/a0&gt; (Ubuntu)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a4&gt;Table 52.4, “Configuration elements of the MavenDeployer”&lt;/a4&gt; lists the available bean elements and a link to the javadoc of the corresponding class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T135608Z" creationid="95" creationdate="20160105T135608Z">
        <seg>&lt;a4&gt;表 52.4，"MavenDeployer 的配置元素"&lt;/a4&gt;列出了可用的 bean 元素，以及 javadoc 中相应类的链接。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;-S&lt;/c0&gt; or &lt;c1&gt;--full-stacktrace&lt;/c1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T113103Z" creationid="msdx" creationdate="20141116T113103Z">
        <seg>&lt;c0&gt;-S&lt;/c0&gt; or &lt;c1&gt;--full-stacktrace&lt;/c1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;-d&lt;/c0&gt; or &lt;c1&gt;--debug&lt;/c1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T103030Z" creationid="msdx" creationdate="20141116T103030Z">
        <seg>&lt;c0&gt;-d&lt;/c0&gt; or &lt;c1&gt;--debug&lt;/c1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;-i&lt;/c0&gt; or &lt;c1&gt;--info&lt;/c1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T103024Z" creationid="msdx" creationdate="20141116T103024Z">
        <seg>&lt;c0&gt;-i&lt;/c0&gt; or &lt;c1&gt;--info&lt;/c1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;-q&lt;/c0&gt; or &lt;c1&gt;--quiet&lt;/c1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T102927Z" creationid="msdx" creationdate="20141116T102927Z">
        <seg>&lt;c0&gt;-q&lt;/c0&gt; or &lt;c1&gt;--quiet&lt;/c1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;-s&lt;/c0&gt; or &lt;c1&gt;--stacktrace&lt;/c1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T104046Z" creationid="msdx" creationdate="20141116T104046Z">
        <seg>&lt;c0&gt;-s&lt;/c0&gt; or &lt;c1&gt;--stacktrace&lt;/c1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;File&lt;/c0&gt; (read-only)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083236Z" creationid="msdx" creationdate="20150428T083236Z">
        <seg>&lt;c0&gt;File&lt;/c0&gt; (read-only)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;File&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083444Z" creationid="msdx" creationdate="20150428T083444Z">
        <seg>&lt;c0&gt;File&lt;/c0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;GroovyCompile&lt;/c0&gt; and &lt;c1&gt;Groovydoc&lt;/c1&gt; tasks consume Groovy in two ways: on their &lt;c2&gt;classpath&lt;/c2&gt;, and on their &lt;c3&gt;groovyClasspath&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T090738Z" creationid="msdx" creationdate="20150429T081055Z">
        <seg>&lt;c0&gt;GroovyCompile&lt;/c0&gt;和&lt;c1&gt;Groovydoc&lt;/c1&gt; tasks 会以两种方式使用 Groovy： 在它们的&lt;c2&gt;classpath&lt;/c2&gt;以及它们的&lt;c3&gt;groovyClasspath&lt;/c3&gt;上。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;Object&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083443Z" creationid="msdx" creationdate="20150428T083443Z">
        <seg>&lt;c0&gt;Object&lt;/c0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;ScalaCompile&lt;/c0&gt; and &lt;c1&gt;ScalaDoc&lt;/c1&gt; tasks consume Scala in two ways: on their &lt;c2&gt;classpath&lt;/c2&gt;, and on their &lt;c3&gt;scalaClasspath&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150430T020720Z" creationid="msdx" creationdate="20150430T020555Z">
        <seg>&lt;c0&gt;ScalaCompile&lt;/c0&gt;和&lt;c1&gt;ScalaDoc&lt;/c1&gt; tasks 会以两种方式使用 Scala： 在它们的&lt;c2&gt;classpath&lt;/c2&gt;以及&lt;c3&gt;scalaClasspath&lt;/c3&gt;上。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;Set&lt;File&gt;&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083418Z" creationid="msdx" creationdate="20150428T083418Z">
        <seg>&lt;c0&gt;Set&lt;File&gt;&lt;/c0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;String&lt;/c0&gt; (read-only)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083250Z" creationid="msdx" creationdate="20150428T083250Z">
        <seg>&lt;c0&gt;String&lt;/c0&gt; (read-only)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;beforeMerged { arg -&gt; }&lt;/c0&gt; argument type</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T105229Z" creationid="haohang" creationdate="20150624T105229Z">
        <seg>&lt;c0&gt;beforeMerged { arg -&gt; }&lt;/c0&gt; 参数类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;build&lt;/c0&gt; and &lt;c1&gt;build&lt;/c1&gt; tasks in all project lib dependencies of the &lt;c2&gt;testRuntime&lt;/c2&gt; configuration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T011353Z" creationid="Administrator" creationdate="20150426T011353Z">
        <seg>&lt;c0&gt;build&lt;/c0&gt;任务，以及在&lt;c2&gt;testRuntime&lt;/c2&gt;配置的所有项目库依赖项的&lt;c1&gt;build&lt;/c1&gt;任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;build&lt;/c0&gt; and &lt;c1&gt;build&lt;/c1&gt; tasks in all projects with a project lib dependency on this project in a &lt;c2&gt;testRuntime&lt;/c2&gt; configuration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T011640Z" creationid="Administrator" creationdate="20150426T011640Z">
        <seg>&lt;c0&gt;build&lt;/c0&gt;任务，以及在&lt;c2&gt;testRuntime&lt;/c2&gt;配置中对此项目有库依赖的所有项目的&lt;c1&gt;build&lt;/c1&gt;任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;buildSrc&lt;/c0&gt; project</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T144151Z" creationid="95" creationdate="20160814T144151Z">
        <seg>&lt;c0&gt;buildSrc&lt;/c0&gt; 项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;check&lt;/c0&gt; and &lt;c1&gt;assemble&lt;/c1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T010459Z" creationid="Administrator" creationdate="20150426T010459Z">
        <seg>&lt;c0&gt;check&lt;/c0&gt; 和 &lt;c1&gt;assemble&lt;/c1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;cleanEclipseProject&lt;/c0&gt;, &lt;c1&gt;cleanEclipseClasspath&lt;/c1&gt;, &lt;c2&gt;cleanEclipseJdt&lt;/c2&gt;, &lt;c3&gt;cleanEclipseWtpComponent&lt;/c3&gt;, &lt;c4&gt;cleanEclipseWtpFacet&lt;/c4&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T004402Z" creationid="haohang" creationdate="20150603T004402Z">
        <seg>&lt;c0&gt;cleanEclipseProject&lt;/c0&gt;, &lt;c1&gt;cleanEclipseClasspath&lt;/c1&gt;, &lt;c2&gt;cleanEclipseJdt&lt;/c2&gt;, &lt;c3&gt;cleanEclipseWtpComponent&lt;/c3&gt;, &lt;c4&gt;cleanEclipseWtpFacet&lt;/c4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;cleanIdeaProject&lt;/c0&gt;, &lt;c1&gt;cleanIdeaModule&lt;/c1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T072338Z" creationid="haohang" creationdate="20150625T072338Z">
        <seg>&lt;c0&gt;cleanIdeaProject&lt;/c0&gt;, &lt;c1&gt;cleanIdeaModule&lt;/c1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;compile&lt;/c0&gt; (only if the Java plugin is also applied)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T094605Z" creationid="msdx" creationdate="20150503T094605Z">
        <seg>&lt;c0&gt;compile&lt;/c0&gt;（仅在也配置了使用 Java 插件的时候）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;compile&lt;/c0&gt;, &lt;c1&gt;compileTest&lt;/c1&gt;, plus all tasks which produce the test runtime classpath.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T004821Z" creationid="Administrator" creationdate="20150426T004821Z">
        <seg>&lt;c0&gt;compile&lt;/c0&gt;， &lt;c1&gt;compileTest&lt;/c1&gt;，再加上所有产生测试运行时类路径的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;compile&lt;/c0&gt;, plus all tasks which produce the test compile classpath.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T004358Z" creationid="Administrator" creationdate="20150426T004358Z">
        <seg>&lt;c0&gt;compile&lt;/c0&gt;，再加上所有能产生测试编译类路径的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;compile&lt;e1&gt;&lt;c2&gt;SourceSet&lt;/c2&gt;&lt;/e1&gt;&lt;/c0&gt; configuration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083410Z" creationid="msdx" creationdate="20150428T083252Z">
        <seg>&lt;c0&gt;compile&lt;e1&gt;&lt;c2&gt;SourceSet&lt;/c2&gt;&lt;/e1&gt;&lt;/c0&gt; 配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;compile&lt;e1&gt;&lt;c2&gt;SourceSet&lt;/c2&gt;&lt;/e1&gt;Java&lt;/c0&gt; and &lt;c3&gt;process&lt;e4&gt;&lt;c5&gt;SourceSet&lt;/c5&gt;&lt;/e4&gt;Resources&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T005858Z" creationid="Administrator" creationdate="20150426T005858Z">
        <seg>&lt;c0&gt;compile&lt;e1&gt;&lt;c2&gt;SourceSet&lt;/c2&gt;&lt;/e1&gt;Java&lt;/c0&gt; 和 &lt;c3&gt;process&lt;e4&gt;&lt;c5&gt;SourceSet&lt;/c5&gt;&lt;/e4&gt;Resources&lt;/c3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;compileJava&lt;/c0&gt; and &lt;c1&gt;processResources&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T174735Z" creationid="Administrator" creationdate="20150425T174735Z">
        <seg>&lt;c0&gt;compileJava&lt;/c0&gt;和&lt;c1&gt;processResources&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;compileTestJava&lt;/c0&gt; and &lt;c1&gt;processTestResources&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T004531Z" creationid="Administrator" creationdate="20150426T004531Z">
        <seg>&lt;c0&gt;compileTestJava&lt;/c0&gt;和&lt;c1&gt;processTestResources&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;dependencies&lt;/c0&gt; returns only the dependencies belonging explicitly to the configuration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T034507Z" creationid="haohang" creationdate="20150807T034422Z">
        <seg>&lt;c0&gt;dependencies&lt;/c0&gt;返回只明确属于配置的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;dependencyReport&lt;/c0&gt;, &lt;c1&gt;propertyReport&lt;/c1&gt;, &lt;c2&gt;taskReport&lt;/c2&gt;, &lt;c3&gt;htmlDependencyReport&lt;/c3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T061534Z" creationid="haohang" creationdate="20150628T061534Z">
        <seg>&lt;c0&gt;dependencyReport&lt;/c0&gt;, &lt;c1&gt;propertyReport&lt;/c1&gt;, &lt;c2&gt;taskReport&lt;/c2&gt;, &lt;c3&gt;htmlDependencyReport&lt;/c3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;ear&lt;/c0&gt;, &lt;c1&gt;war&lt;/c1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104849Z" creationid="msdx" creationdate="20150428T104849Z">
        <seg>&lt;c0&gt;ear&lt;/c0&gt;，&lt;c1&gt;war&lt;/c1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;eclipseProject&lt;/c0&gt;, &lt;c1&gt;eclipseClasspath&lt;/c1&gt;, &lt;c2&gt;eclipseJdt&lt;/c2&gt;, &lt;c3&gt;eclipseWtpComponent&lt;/c3&gt;, &lt;c4&gt;cleanEclipseWtpFacet&lt;/c4&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T004339Z" creationid="haohang" creationdate="20150603T004339Z">
        <seg>&lt;c0&gt;eclipseProject&lt;/c0&gt;, &lt;c1&gt;eclipseClasspath&lt;/c1&gt;, &lt;c2&gt;eclipseJdt&lt;/c2&gt;, &lt;c3&gt;eclipseWtpComponent&lt;/c3&gt;, &lt;c4&gt;cleanEclipseWtpFacet&lt;/c4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;groovy&lt;/c0&gt; configuration if non-empty; Groovy library found on &lt;c1&gt;classpath&lt;/c1&gt; otherwise</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T094735Z" creationid="msdx" creationdate="20150429T094548Z">
        <seg>如果&lt;c0&gt;groovy&lt;/c0&gt; 配置不为空，则为该配置；否则为 &lt;c1&gt;classpath&lt;/c1&gt; 中找到的 Groovy 库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;ideaProject&lt;/c0&gt;, &lt;c1&gt;ideaModule&lt;/c1&gt;, &lt;c2&gt;ideaWorkspace&lt;/c2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T072246Z" creationid="haohang" creationdate="20150625T072246Z">
        <seg>&lt;c0&gt;ideaProject&lt;/c0&gt;, &lt;c1&gt;ideaModule&lt;/c1&gt;, &lt;c2&gt;ideaWorkspace&lt;/c2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;jar&lt;/c0&gt;, &lt;c1&gt;startScripts&lt;/c1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150702T105053Z" creationid="haohang" creationdate="20150702T105053Z">
        <seg>&lt;c0&gt;jar&lt;/c0&gt;, &lt;c1&gt;startScripts&lt;/c1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;java&lt;/c0&gt;, &lt;c1&gt;distribution&lt;/c1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104801Z" creationid="msdx" creationdate="20150428T104801Z">
        <seg>&lt;c0&gt;java&lt;/c0&gt;, &lt;c1&gt;distribution&lt;/c1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;java&lt;/c0&gt;, &lt;c1&gt;groovy-base&lt;/c1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141126T121042Z" creationid="msdx" creationdate="20141126T121042Z">
        <seg>&lt;c0&gt;java&lt;/c0&gt;, &lt;c1&gt;groovy-base&lt;/c1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;java&lt;/c0&gt;, &lt;c1&gt;scala-base&lt;/c1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141126T121122Z" creationid="msdx" creationdate="20141126T121122Z">
        <seg>&lt;c0&gt;java&lt;/c0&gt;, &lt;c1&gt;scala-base&lt;/c1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;java&lt;/c0&gt;, &lt;c1&gt;war&lt;/c1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104758Z" creationid="msdx" creationdate="20150428T104758Z">
        <seg>&lt;c0&gt;java&lt;/c0&gt;, &lt;c1&gt;war&lt;/c1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;java&lt;/c0&gt;,&lt;c1&gt;groovy&lt;/c1&gt;, &lt;c2&gt;scala&lt;/c2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104807Z" creationid="msdx" creationdate="20150428T104807Z">
        <seg>&lt;c0&gt;java&lt;/c0&gt;,&lt;c1&gt;groovy&lt;/c1&gt;, &lt;c2&gt;scala&lt;/c2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;module-a&lt;/c0&gt; depends on &lt;c1&gt;releasable-unit:part-one:1.0&lt;/c1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T061022Z" creationid="95" creationdate="20151115T061022Z">
        <seg>&lt;c0&gt;module-a&lt;/c0&gt; 依赖于 &lt;c1&gt;releasable-unit:part-one:1.0&lt;/c1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;module-b&lt;/c0&gt; depends on &lt;c1&gt;releasable-unit:part-two:1.1&lt;/c1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T061101Z" creationid="95" creationdate="20151115T061101Z">
        <seg>&lt;c0&gt;module-a&lt;/c0&gt; 依赖于 &lt;c1&gt;releasable-unit:part-one:1.0&lt;/c1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;output&lt;/c0&gt; + &lt;c1&gt;runtime&lt;e2&gt;&lt;c3&gt;SourceSet&lt;/c3&gt;&lt;/e2&gt;&lt;/c1&gt; configuration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083416Z" creationid="msdx" creationdate="20150428T083257Z">
        <seg>&lt;c0&gt;output&lt;/c0&gt; + &lt;c1&gt;runtime&lt;e2&gt;&lt;c3&gt;SourceSet&lt;/c3&gt;&lt;/e2&gt;&lt;/c1&gt; 配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;whenMerged { arg -&gt; }&lt;/c0&gt; argument type</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T105235Z" creationid="haohang" creationdate="20150624T105235Z">
        <seg>&lt;c0&gt;whenMerged { arg -&gt; }&lt;/c0&gt; 参数类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;withXml { arg -&gt; }&lt;/c0&gt; argument type</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T105249Z" creationid="haohang" creationdate="20150624T105249Z">
        <seg>&lt;c0&gt;withXml { arg -&gt; }&lt;/c0&gt; 参数类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c11&gt;webDist&lt;/c11&gt; has a &lt;s12&gt;&lt;e13&gt;configuration&lt;/e13&gt;&lt;/s12&gt; dependency on &lt;c14&gt;date&lt;/c14&gt; and &lt;c15&gt;hello&lt;/c15&gt; because it needs to know the &lt;c16&gt;archivePath&lt;/c16&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T082617Z" creationid="haohang" creationdate="20160726T082617Z">
        <seg>&lt;c11&gt;webDist&lt;/c11&gt;有一个&lt;s12&gt;&lt;e13&gt;配置&lt;/e13&gt;&lt;/s12&gt; 依赖于 &lt;c14&gt;date&lt;/c14&gt; 和 &lt;c15&gt;hello&lt;/c15&gt;，因为它需要知道 &lt;c16&gt;archivePath&lt;/c16&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c1&gt;allDependencies&lt;/c1&gt; includes the dependencies from extended configurations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T034532Z" creationid="haohang" creationdate="20150807T034532Z">
        <seg>&lt;c1&gt;allDependencies&lt;/c1&gt;包括了扩展配置的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c1&gt;fsc&lt;/c1&gt; runs in a separate daemon process and can speed up compilation significantly.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150430T155155Z" creationid="msdx" creationdate="20150430T155155Z">
        <seg>&lt;c1&gt;fsc&lt;/c1&gt;运行在一个单独的进程中，并且可以显著地提高编译速度。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c2&gt;OsgiManifest&lt;/c2&gt; extends &lt;a3&gt;&lt;c4&gt;Manifest&lt;/c4&gt;&lt;/a3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150526T003902Z" creationid="haohang" creationdate="20150526T003902Z">
        <seg>&lt;c2&gt;OsgiManifest&lt;/c2&gt; 继承自 &lt;a3&gt;&lt;c4&gt;Manifest&lt;/c4&gt;&lt;/a3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c3&gt;personService&lt;/c3&gt; has a lib dependency on the other two projects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T083703Z" creationid="haohang" creationdate="20160726T083703Z">
        <seg>&lt;c3&gt;personService&lt;/c3&gt; 对其他两个项目有一个库依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c4&gt;api&lt;/c4&gt; has a lib dependency on &lt;c5&gt;shared&lt;/c5&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T083718Z" creationid="haohang" creationdate="20160726T083718Z">
        <seg>&lt;c4&gt;api&lt;/c4&gt; 对 &lt;c5&gt;shared&lt;/c5&gt;有一个库依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c4&gt;archiveTask.baseName&lt;/c4&gt; defaults to &lt;c5&gt;project.archivesBaseName&lt;/c5&gt; which in turn defaults to &lt;c6&gt;project.name&lt;/c6&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T141949Z" creationid="95" creationdate="20160106T141949Z">
        <seg>&lt;c4&gt;archiveTask.baseName&lt;/c4&gt;默认为&lt;c5&gt;project.archivesBaseName&lt;/c5&gt;，后者默认为&lt;c6&gt;project.name&lt;/c6&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;&lt;c1&gt;$buildDir&lt;/c1&gt;&lt;/e0&gt;/binaries/&lt;e2&gt;&lt;c3&gt;$binary.name&lt;/c3&gt;&lt;/e2&gt;/&lt;e4&gt;&lt;c5&gt;$component.name&lt;/c5&gt;&lt;/e4&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160219T072249Z" creationid="haohang" creationdate="20160219T072249Z">
        <seg>&lt;e0&gt;&lt;c1&gt;$buildDir&lt;/c1&gt;&lt;/e0&gt;/binaries/&lt;e2&gt;&lt;c3&gt;$binary.name&lt;/c3&gt;&lt;/e2&gt;/&lt;e4&gt;&lt;c5&gt;$component.name&lt;/c5&gt;&lt;/e4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;&lt;c1&gt;$buildDir&lt;/c1&gt;&lt;/e0&gt;/binaries/&lt;e2&gt;&lt;c3&gt;$binary.name&lt;/c3&gt;&lt;/e2&gt;/&lt;e4&gt;&lt;c5&gt;$component.name&lt;/c5&gt;&lt;/e4&gt;.a</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160219T072306Z" creationid="haohang" creationdate="20160219T072306Z">
        <seg>&lt;e0&gt;&lt;c1&gt;$buildDir&lt;/c1&gt;&lt;/e0&gt;/binaries/&lt;e2&gt;&lt;c3&gt;$binary.name&lt;/c3&gt;&lt;/e2&gt;/&lt;e4&gt;&lt;c5&gt;$component.name&lt;/c5&gt;&lt;/e4&gt;.a</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;&lt;c1&gt;$buildDir&lt;/c1&gt;&lt;/e0&gt;/binaries/&lt;e2&gt;&lt;c3&gt;$binary.name&lt;/c3&gt;&lt;/e2&gt;/lib&lt;e4&gt;&lt;c5&gt;$component.name&lt;/c5&gt;&lt;/e4&gt;.so</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160219T072259Z" creationid="haohang" creationdate="20160219T072259Z">
        <seg>&lt;e0&gt;&lt;c1&gt;$buildDir&lt;/c1&gt;&lt;/e0&gt;/binaries/&lt;e2&gt;&lt;c3&gt;$binary.name&lt;/c3&gt;&lt;/e2&gt;/lib&lt;e4&gt;&lt;c5&gt;$component.name&lt;/c5&gt;&lt;/e4&gt;.so</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;&lt;c1&gt;$buildDir&lt;/c1&gt;&lt;/e0&gt;/jacoco</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T132307Z" creationid="msdx" creationdate="20150506T132307Z">
        <seg>&lt;e0&gt;&lt;c1&gt;$buildDir&lt;/c1&gt;&lt;/e0&gt;/jacoco</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;&lt;c1&gt;$component.name&lt;/c1&gt;&lt;/e0&gt;Executable</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160219T072236Z" creationid="haohang" creationdate="20160219T072236Z">
        <seg>&lt;e0&gt;&lt;c1&gt;$component.name&lt;/c1&gt;&lt;/e0&gt;Executable</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;&lt;c1&gt;$component.name&lt;/c1&gt;&lt;/e0&gt;SharedLibrary</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160219T072253Z" creationid="haohang" creationdate="20160219T072253Z">
        <seg>&lt;e0&gt;&lt;c1&gt;$component.name&lt;/c1&gt;&lt;/e0&gt;SharedLibrary</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;&lt;c1&gt;$component.name&lt;/c1&gt;&lt;/e0&gt;StaticLibrary</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160219T072300Z" creationid="haohang" creationdate="20160219T072300Z">
        <seg>&lt;e0&gt;&lt;c1&gt;$component.name&lt;/c1&gt;&lt;/e0&gt;StaticLibrary</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;&lt;c1&gt;${distribution.name}&lt;/c1&gt;&lt;/e0&gt;DistTar</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150701T031227Z" creationid="haohang" creationdate="20150701T031227Z">
        <seg>&lt;e0&gt;&lt;c1&gt;${distribution.name}&lt;/c1&gt;&lt;/e0&gt;DistTar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;&lt;c1&gt;${distribution.name}&lt;/c1&gt;&lt;/e0&gt;DistZip</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150701T031219Z" creationid="haohang" creationdate="20150701T031219Z">
        <seg>&lt;e0&gt;&lt;c1&gt;${distribution.name}&lt;/c1&gt;&lt;/e0&gt;DistZip</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;&lt;c1&gt;baseName&lt;/c1&gt;&lt;/e0&gt;-&lt;e2&gt;&lt;c3&gt;appendix&lt;/c3&gt;&lt;/e2&gt;-&lt;e4&gt;&lt;c5&gt;version&lt;/c5&gt;&lt;/e4&gt;-&lt;e6&gt;&lt;c7&gt;classifier&lt;/c7&gt;&lt;/e6&gt;.&lt;e8&gt;&lt;c9&gt;extension&lt;/c9&gt;&lt;/e8&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T155825Z" creationid="msdx" creationdate="20141113T155825Z">
        <seg>&lt;e0&gt;&lt;c1&gt;baseName&lt;/c1&gt;&lt;/e0&gt;-&lt;e2&gt;&lt;c3&gt;appendix&lt;/c3&gt;&lt;/e2&gt;-&lt;e4&gt;&lt;c5&gt;version&lt;/c5&gt;&lt;/e4&gt;-&lt;e6&gt;&lt;c7&gt;classifier&lt;/c7&gt;&lt;/e6&gt;.&lt;e8&gt;&lt;c9&gt;extension&lt;/c9&gt;&lt;/e8&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;&lt;c1&gt;buildDir&lt;/c1&gt;&lt;/e0&gt;/&lt;e2&gt;&lt;c3&gt;dependencyCacheDirName&lt;/c3&gt;&lt;/e2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083244Z" creationid="msdx" creationdate="20150428T083244Z">
        <seg>&lt;e0&gt;&lt;c1&gt;buildDir&lt;/c1&gt;&lt;/e0&gt;/&lt;e2&gt;&lt;c3&gt;dependencyCacheDirName&lt;/c3&gt;&lt;/e2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;&lt;c1&gt;buildDir&lt;/c1&gt;&lt;/e0&gt;/&lt;e2&gt;&lt;c3&gt;distsDirName&lt;/c3&gt;&lt;/e2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083242Z" creationid="msdx" creationdate="20150428T083242Z">
        <seg>&lt;e0&gt;&lt;c1&gt;buildDir&lt;/c1&gt;&lt;/e0&gt;/&lt;e2&gt;&lt;c3&gt;distsDirName&lt;/c3&gt;&lt;/e2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;&lt;c1&gt;buildDir&lt;/c1&gt;&lt;/e0&gt;/&lt;e2&gt;&lt;c3&gt;docsDirName&lt;/c3&gt;&lt;/e2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083243Z" creationid="msdx" creationdate="20150428T083243Z">
        <seg>&lt;e0&gt;&lt;c1&gt;buildDir&lt;/c1&gt;&lt;/e0&gt;/&lt;e2&gt;&lt;c3&gt;docsDirName&lt;/c3&gt;&lt;/e2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;&lt;c1&gt;buildDir&lt;/c1&gt;&lt;/e0&gt;/&lt;e2&gt;&lt;c3&gt;libsDirName&lt;/c3&gt;&lt;/e2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083241Z" creationid="msdx" creationdate="20150428T083241Z">
        <seg>&lt;e0&gt;&lt;c1&gt;buildDir&lt;/c1&gt;&lt;/e0&gt;/&lt;e2&gt;&lt;c3&gt;libsDirName&lt;/c3&gt;&lt;/e2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;&lt;c1&gt;buildDir&lt;/c1&gt;&lt;/e0&gt;/&lt;e2&gt;&lt;c3&gt;pomDirName&lt;/c3&gt;&lt;/e2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151228T152724Z" creationid="95" creationdate="20151228T152724Z">
        <seg>&lt;e0&gt;&lt;c1&gt;buildDir&lt;/c1&gt;&lt;/e0&gt;/&lt;e2&gt;&lt;c3&gt;pomDirName&lt;/c3&gt;&lt;/e2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;&lt;c1&gt;buildDir&lt;/c1&gt;&lt;/e0&gt;/&lt;e2&gt;&lt;c3&gt;reportsDirName&lt;/c3&gt;&lt;/e2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083236Z" creationid="msdx" creationdate="20150428T083236Z">
        <seg>&lt;e0&gt;&lt;c1&gt;buildDir&lt;/c1&gt;&lt;/e0&gt;/&lt;e2&gt;&lt;c3&gt;reportsDirName&lt;/c3&gt;&lt;/e2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;&lt;c1&gt;buildDir&lt;/c1&gt;&lt;/e0&gt;/&lt;e2&gt;&lt;c3&gt;testResultsDirName&lt;/c3&gt;&lt;/e2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083238Z" creationid="msdx" creationdate="20150428T083238Z">
        <seg>&lt;e0&gt;&lt;c1&gt;buildDir&lt;/c1&gt;&lt;/e0&gt;/&lt;e2&gt;&lt;c3&gt;testResultsDirName&lt;/c3&gt;&lt;/e2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;&lt;c1&gt;buildDir&lt;/c1&gt;&lt;/e0&gt;/classes/&lt;e2&gt;&lt;c3&gt;name&lt;/c3&gt;&lt;/e2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083251Z" creationid="msdx" creationdate="20150428T083251Z">
        <seg>&lt;e0&gt;&lt;c1&gt;buildDir&lt;/c1&gt;&lt;/e0&gt;/classes/&lt;e2&gt;&lt;c3&gt;name&lt;/c3&gt;&lt;/e2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;&lt;c1&gt;buildDir&lt;/c1&gt;&lt;/e0&gt;/resources/&lt;e2&gt;&lt;c3&gt;name&lt;/c3&gt;&lt;/e2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083252Z" creationid="msdx" creationdate="20150428T083252Z">
        <seg>&lt;e0&gt;&lt;c1&gt;buildDir&lt;/c1&gt;&lt;/e0&gt;/resources/&lt;e2&gt;&lt;c3&gt;name&lt;/c3&gt;&lt;/e2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;&lt;c1&gt;destinationDir&lt;/c1&gt;&lt;/e0&gt;/&lt;e2&gt;&lt;c3&gt;archiveName&lt;/c3&gt;&lt;/e2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T155931Z" creationid="msdx" creationdate="20141113T155931Z">
        <seg>&lt;e0&gt;&lt;c1&gt;destinationDir&lt;/c1&gt;&lt;/e0&gt;/&lt;e2&gt;&lt;c3&gt;archiveName&lt;/c3&gt;&lt;/e2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;&lt;c1&gt;docsDir&lt;/c1&gt;&lt;/e0&gt;/javadoc</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083440Z" creationid="msdx" creationdate="20150428T083440Z">
        <seg>&lt;e0&gt;&lt;c1&gt;docsDir&lt;/c1&gt;&lt;/e0&gt;/javadoc</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;&lt;c1&gt;projectDir&lt;/c1&gt;&lt;/e0&gt;/&lt;e2&gt;&lt;c3&gt;webAppDirName&lt;/c3&gt;&lt;/e2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T092315Z" creationid="msdx" creationdate="20150503T092315Z">
        <seg>&lt;e0&gt;&lt;c1&gt;projectDir&lt;/c1&gt;&lt;/e0&gt;/&lt;e2&gt;&lt;c3&gt;webAppDirName&lt;/c3&gt;&lt;/e2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;&lt;c1&gt;projectDir&lt;/c1&gt;&lt;/e0&gt;/build</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T044426Z" creationid="msdx" creationdate="20141108T044426Z">
        <seg>&lt;e0&gt;&lt;c1&gt;projectDir&lt;/c1&gt;&lt;/e0&gt;/build</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;&lt;c1&gt;reportsDir&lt;/c1&gt;&lt;/e0&gt;/&lt;c2&gt;testReportDirName&lt;/c2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083239Z" creationid="msdx" creationdate="20150428T083239Z">
        <seg>&lt;e0&gt;&lt;c1&gt;reportsDir&lt;/c1&gt;&lt;/e0&gt;/&lt;c2&gt;testReportDirName&lt;/c2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;&lt;c1&gt;reportsDir&lt;/c1&gt;&lt;/e0&gt;/&lt;e2&gt;&lt;c3&gt;projectReportDirName&lt;/c3&gt;&lt;/e2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T062025Z" creationid="haohang" creationdate="20150628T062025Z">
        <seg>&lt;e0&gt;&lt;c1&gt;reportsDir&lt;/c1&gt;&lt;/e0&gt;/&lt;e2&gt;&lt;c3&gt;projectReportDirName&lt;/c3&gt;&lt;/e2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;&lt;c1&gt;sourceSet&lt;/c1&gt;&lt;/e0&gt;.compileClasspath</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083445Z" creationid="msdx" creationdate="20150428T083445Z">
        <seg>&lt;e0&gt;&lt;c1&gt;sourceSet&lt;/c1&gt;&lt;/e0&gt;.compileClasspath</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;&lt;c1&gt;sourceSet&lt;/c1&gt;&lt;/e0&gt;.groovy</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T094544Z" creationid="msdx" creationdate="20150429T094544Z">
        <seg>&lt;e0&gt;&lt;c1&gt;sourceSet&lt;/c1&gt;&lt;/e0&gt;.groovy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;&lt;c1&gt;sourceSet&lt;/c1&gt;&lt;/e0&gt;.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083447Z" creationid="msdx" creationdate="20150428T083447Z">
        <seg>&lt;e0&gt;&lt;c1&gt;sourceSet&lt;/c1&gt;&lt;/e0&gt;.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;&lt;c1&gt;sourceSet&lt;/c1&gt;&lt;/e0&gt;.output.classesDir</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083447Z" creationid="msdx" creationdate="20150428T083447Z">
        <seg>&lt;e0&gt;&lt;c1&gt;sourceSet&lt;/c1&gt;&lt;/e0&gt;.output.classesDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;&lt;c1&gt;sourceSet&lt;/c1&gt;&lt;/e0&gt;.output.resourcesDir</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083445Z" creationid="msdx" creationdate="20150428T083445Z">
        <seg>&lt;e0&gt;&lt;c1&gt;sourceSet&lt;/c1&gt;&lt;/e0&gt;.output.resourcesDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;&lt;c1&gt;sourceSet&lt;/c1&gt;&lt;/e0&gt;.resources</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083443Z" creationid="msdx" creationdate="20150428T083443Z">
        <seg>&lt;e0&gt;&lt;c1&gt;sourceSet&lt;/c1&gt;&lt;/e0&gt;.resources</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;&lt;c1&gt;sourceSet&lt;/c1&gt;&lt;/e0&gt;Classes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083225Z" creationid="msdx" creationdate="20150428T083225Z">
        <seg>&lt;e0&gt;&lt;c1&gt;sourceSet&lt;/c1&gt;&lt;/e0&gt;Classes</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;&lt;c1&gt;sourceSet&lt;/c1&gt;&lt;/e0&gt;Compile</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083233Z" creationid="msdx" creationdate="20150428T083233Z">
        <seg>&lt;e0&gt;&lt;c1&gt;sourceSet&lt;/c1&gt;&lt;/e0&gt;Compile</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;&lt;c1&gt;sourceSet&lt;/c1&gt;&lt;/e0&gt;Runtime</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083233Z" creationid="msdx" creationdate="20150428T083233Z">
        <seg>&lt;e0&gt;&lt;c1&gt;sourceSet&lt;/c1&gt;&lt;/e0&gt;Runtime</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;// Add some source directories use String paths&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T123632Z" creationid="msdx" creationdate="20141113T123632Z">
        <seg>&lt;s0&gt;// Add some source directories use String paths&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;// Can enable dynamic resolve mode when you define the repository&lt;/s0&gt;
repositories {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T091450Z" creationid="95" creationdate="20151115T091450Z">
        <seg>&lt;s0&gt;// Can enable dynamic resolve mode when you define the repository&lt;/s0&gt;
repositories {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;// Copy everything under src/main/webapp&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T130948Z" creationid="msdx" creationdate="20141113T130948Z">
        <seg>&lt;s0&gt;// Copy everything under src/main/webapp&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;// Create a ZIP file tree using path&lt;/s0&gt;
FileTree zip = zipTree(&lt;s1&gt;'someFile.zip'&lt;/s1&gt;)

&lt;s2&gt;// Create a TAR file tree using path&lt;/s2&gt;
FileTree tar = tarTree(&lt;s3&gt;'someFile.tar'&lt;/s3&gt;)

&lt;s4&gt;//tar tree attempts to guess the compression based on the file extension&lt;/s4&gt;
&lt;s5&gt;//however if you must specify the compression explicitly you can:&lt;/s5&gt;
FileTree someTar = tarTree(resources.gzip(&lt;s6&gt;'someTar.ext'&lt;/s6&gt;))</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T122848Z" creationid="msdx" creationdate="20141113T122848Z">
        <seg>&lt;s0&gt;// Create a ZIP file tree using path&lt;/s0&gt;
FileTree zip = zipTree(&lt;s1&gt;'someFile.zip'&lt;/s1&gt;)

&lt;s2&gt;// Create a TAR file tree using path&lt;/s2&gt;
FileTree tar = tarTree(&lt;s3&gt;'someFile.tar'&lt;/s3&gt;)

&lt;s4&gt;//tar tree attempts to guess the compression based on the file extension&lt;/s4&gt;
&lt;s5&gt;//however if you must specify the compression explicitly you can:&lt;/s5&gt;
FileTree someTar = tarTree(resources.gzip(&lt;s6&gt;'someTar.ext'&lt;/s6&gt;))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;// Create a file collection using a closure&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T160737Z" creationid="msdx" creationdate="20141112T160737Z">
        <seg>&lt;s0&gt;// Create a file collection using a closure&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;// Create a file tree with a base directory&lt;/s0&gt;
FileTree tree = fileTree(dir: &lt;s1&gt;'src/main'&lt;/s1&gt;)

&lt;s2&gt;// Add include and exclude patterns to the tree&lt;/s2&gt;
tree.include &lt;s3&gt;'**/*.java'&lt;/s3&gt;
tree.exclude &lt;s4&gt;'**/Abstract*'&lt;/s4&gt;

&lt;s5&gt;// Create a tree using path&lt;/s5&gt;
tree = fileTree(&lt;s6&gt;'src'&lt;/s6&gt;).include(&lt;s7&gt;'**/*.java'&lt;/s7&gt;)

&lt;s8&gt;// Create a tree using closure&lt;/s8&gt;
tree = fileTree(&lt;s9&gt;'src'&lt;/s9&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T120221Z" creationid="msdx" creationdate="20141113T120221Z">
        <seg>&lt;s0&gt;// Create a file tree with a base directory&lt;/s0&gt;
FileTree tree = fileTree(dir: &lt;s1&gt;'src/main'&lt;/s1&gt;)

&lt;s2&gt;// Add include and exclude patterns to the tree&lt;/s2&gt;
tree.include &lt;s3&gt;'**/*.java'&lt;/s3&gt;
tree.exclude &lt;s4&gt;'**/Abstract*'&lt;/s4&gt;

&lt;s5&gt;// Create a tree using path&lt;/s5&gt;
tree = fileTree(&lt;s6&gt;'src'&lt;/s6&gt;).include(&lt;s7&gt;'**/*.java'&lt;/s7&gt;)

&lt;s8&gt;// Create a tree using closure&lt;/s8&gt;
tree = fileTree(&lt;s9&gt;'src'&lt;/s9&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;// Define a preprocessor macro for every binary&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160324T151754Z" creationid="95" creationdate="20160324T151754Z">
        <seg>&lt;s0&gt;// Define a preprocessor macro for every binary&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;// Define a preprocessor macro that only applies to shared libraries&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160324T153107Z" creationid="95" creationdate="20160324T153107Z">
        <seg>&lt;s0&gt;// Define a preprocessor macro that only applies to shared libraries&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;// Each executable binary produced uses the 'hello' static library binary&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160325T033131Z" creationid="haohang" creationdate="20160325T033131Z">
        <seg>&lt;s0&gt;// Each executable binary produced uses the 'hello' static library binary&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;// For any shared library binaries built with Visual C++, define the DLL_EXPORT macro&lt;/s0&gt;
binaries.withType(SharedLibraryBinary) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160324T152305Z" creationid="95" creationdate="20160324T152305Z">
        <seg>&lt;s0&gt;// For any shared library binaries built with Visual C++, define the DLL_EXPORT macro&lt;/s0&gt;
binaries.withType(SharedLibraryBinary) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;// Iterable gets an each() method&lt;/s0&gt;
configurations.runtime.each { File f -&gt; println f }</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T061357Z" creationid="msdx" creationdate="20141108T061357Z">
        <seg>&lt;s0&gt;// Iterable gets an each() method&lt;/s0&gt;
configurations.runtime.each { File f -&gt; println f }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;// Iterate over the contents of a tree&lt;/s0&gt;
tree.each {File file -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T120357Z" creationid="msdx" creationdate="20141113T120357Z">
        <seg>&lt;s0&gt;// Iterate over the contents of a tree&lt;/s0&gt;
tree.each {File file -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;// Iterate over the files in the collection&lt;/s0&gt;
collection.each {File file -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T155846Z" creationid="msdx" creationdate="20141112T155846Z">
        <seg>&lt;s0&gt;// Iterate over the files in the collection&lt;/s0&gt;
collection.each {File file -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;// Look for POMs and artifacts, such as JARs, here&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150909T053115Z" creationid="haohang" creationdate="20150909T053115Z">
        <seg>&lt;s0&gt;// Look for POMs and artifacts, such as JARs, here&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;// Specify the installDir if Visual Studio cannot be located by default&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T091222Z" creationid="haohang" creationdate="20160408T091222Z">
        <seg>&lt;s0&gt;// Specify the installDir if Visual Studio cannot be located by default&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;// Use a File object to specify the source directory&lt;/s0&gt;
compile {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T123333Z" creationid="msdx" creationdate="20141113T123333Z">
        <seg>&lt;s0&gt;// Use a File object to specify the source directory&lt;/s0&gt;
compile {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;// Use the default greeting&lt;/s0&gt;
task hello(type: GreetingTask)

&lt;s1&gt;// Customize the greeting&lt;/s1&gt;
task greeting(type: GreetingTask) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T151531Z" creationid="95" creationdate="20160814T151531Z">
        <seg>&lt;s0&gt;// Use the default greeting&lt;/s0&gt;
task hello(type: GreetingTask)

&lt;s1&gt;// Customize the greeting&lt;/s1&gt;
task greeting(type: GreetingTask) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;// Using a relative path&lt;/s0&gt;
File configFile = file(&lt;s1&gt;'src/config.xml'&lt;/s1&gt;)

&lt;s2&gt;// Using an absolute path&lt;/s2&gt;
configFile = file(configFile.absolutePath)

&lt;s3&gt;// Using a File object with a relative path&lt;/s3&gt;
configFile = file(&lt;s4&gt;new&lt;/s4&gt; File(&lt;s5&gt;'src/config.xml'&lt;/s5&gt;))</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T043524Z" creationid="msdx" creationdate="20141112T043524Z">
        <seg>&lt;s0&gt;// Using a relative path&lt;/s0&gt;
File configFile = file(&lt;s1&gt;'src/config.xml'&lt;/s1&gt;)

&lt;s2&gt;// Using an absolute path&lt;/s2&gt;
configFile = file(configFile.absolutePath)

&lt;s3&gt;// Using a File object with a relative path&lt;/s3&gt;
configFile = file(&lt;s4&gt;new&lt;/s4&gt; File(&lt;s5&gt;'src/config.xml'&lt;/s5&gt;))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;// Various ways to access the main source set&lt;/s0&gt;
println sourceSets.main.output.classesDir
println sourceSets[&lt;s1&gt;'main'&lt;/s1&gt;].output.classesDir
sourceSets {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083248Z" creationid="msdx" creationdate="20150428T083248Z">
        <seg>&lt;s0&gt;// Various ways to access the main source set&lt;/s0&gt;
println sourceSets.main.output.classesDir
println sourceSets[&lt;s1&gt;'main'&lt;/s1&gt;].output.classesDir
sourceSets {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;// optionally specify host and port of the daemon:&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150430T155214Z" creationid="msdx" creationdate="20150430T155214Z">
        <seg>&lt;s0&gt;// optionally specify host and port of the daemon:&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;//include specific method in any of the tests&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083452Z" creationid="msdx" creationdate="20150428T083452Z">
        <seg>&lt;s0&gt;//include specific method in any of the tests&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;&lt;e1&gt;A fully customizable approach to Dependency Resolution&lt;/e1&gt;&lt;/s0&gt;: Gradle provides you with the ability to customize resolution rules making dependency substitution easy.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150715T034218Z" creationid="haohang" creationdate="20150715T034218Z">
        <seg>&lt;s0&gt;&lt;e1&gt;一个完全可自定义的依赖解析的方法&lt;/e1&gt;&lt;/s0&gt;：Gradle 为你提供了自定义解析规则的能力，让你可以轻松替换依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;&lt;e1&gt;Fail&lt;/e1&gt;&lt;/s0&gt;: A version conflict results in a build failure.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150721T061654Z" creationid="haohang" creationdate="20150721T061654Z">
        <seg>&lt;s0&gt;&lt;e1&gt;Fail&lt;/e1&gt;&lt;/s0&gt;：一个版本冲突将导致构建失败。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;&lt;e1&gt;Full Compatibility with Maven and Ivy&lt;/e1&gt;&lt;/s0&gt;: If you have defined dependencies in a Maven POM or an Ivy file, Gradle provide seamless integration with a range of popular build tools.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150716T021629Z" creationid="haohang" creationdate="20150716T021629Z">
        <seg>&lt;s0&gt;&lt;e1&gt;完全兼容 Maven 和 Ivy &lt;/e1&gt;&lt;/s0&gt;：如果你已经在 Maven POM 文件或 Ivy 文件中定义了依赖，Gradle 提供了一系列受欢迎的构建工具可以进行无缝集成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;&lt;e1&gt;If you think version conflicts don't happen to you, think again.&lt;/e1&gt;&lt;/s0&gt; It is very common for different first-level dependencies to rely on a range of different overlapping versions for other dependencies, and the JVM doesn't yet offer an easy way to have different versions of the same jar in the classpath (see &lt;a2&gt;Section 50.1.2, “Dependency management and Java”&lt;/a2&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150721T061329Z" creationid="haohang" creationdate="20150721T060735Z">
        <seg>&lt;s0&gt;&lt;e1&gt;如果你觉得你不会发生版本冲突，再想想。&lt;/e1&gt; &lt;/s0&gt;不同的第一级依赖，依赖于一系列不同的重叠版本的其他依赖，这种情况是很常见的，而 JVM 还不能提供简单的方法，使得能在类路径中让相同的 jar 包可以有不同的版本（请参阅&lt;a2&gt;第 50.1.2 节，“依赖管理和 Java”&lt;/a2&gt;）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;&lt;e1&gt;Integration with existing dependency management infrastructure&lt;/e1&gt;&lt;/s0&gt;: Gradle is compatible with both Maven and Ivy repositories.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150716T021716Z" creationid="haohang" creationdate="20150716T021716Z">
        <seg>&lt;s0&gt;&lt;e1&gt;与现有依赖管理基础结构的集成&lt;/e1&gt;&lt;/s0&gt;：Gradle 兼容 Maven 和 Ivy 仓库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;&lt;e1&gt;NOTE:&lt;/e1&gt;&lt;/s0&gt;In one project, we found a mystery, LDAP related jar in the classpath.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150721T053441Z" creationid="haohang" creationdate="20150721T012725Z">
        <seg>&lt;s0&gt;&lt;e1&gt;注：&lt;/e1&gt; &lt;/s0&gt;在一个项目中，我们发现在类路径中有一个神秘、LDAP 相关的 jar 包。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;&lt;e1&gt;Newest&lt;/e1&gt;&lt;/s0&gt;: The newest version of the dependency is used.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150721T061449Z" creationid="haohang" creationdate="20150721T061430Z">
        <seg>&lt;s0&gt;&lt;e1&gt;Newest&lt;/e1&gt;&lt;/s0&gt;：使用最新版本的依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;&lt;e1&gt;Note:&lt;/e1&gt;&lt;/s0&gt; The code for this example can be found at &lt;c2&gt;samples/groovy/quickstart&lt;/c2&gt; which is in both the binary and source distributions of Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T063505Z" creationid="msdx" creationdate="20141030T061718Z">
        <seg>&lt;s0&gt;&lt;e1&gt;注意：&lt;/e1&gt;&lt;/s0&gt; 此例子的代码可以在Gradle的二进制文件或源码中的 &lt;c2&gt;samples/groovy/quickstart&lt;/c2&gt; 里看到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;&lt;e1&gt;Note:&lt;/e1&gt;&lt;/s0&gt; The code for this example can be found at &lt;c2&gt;samples/native-binaries/cunit&lt;/c2&gt; which is in both the binary and source distributions of Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T151528Z" creationid="95" creationdate="20160504T151528Z">
        <seg>&lt;s0&gt;&lt;e1&gt;注意︰&lt;/e1&gt; &lt;/s0&gt;此示例的代码可以在Gradle 的 binary 或 source 分发包的&lt;c2&gt;samples/native-binaries/cunit&lt;/c2&gt;中找到。。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;&lt;e1&gt;Note:&lt;/e1&gt;&lt;/s0&gt; The code for this example can be found at &lt;c2&gt;samples/testing/jacoco/application&lt;/c2&gt; which is in both the binary and source distributions of Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T135747Z" creationid="msdx" creationdate="20150506T135606Z">
        <seg>&lt;s0&gt;&lt;e1&gt;注:&lt;/e1&gt; &lt;/s0&gt;此示例中的代码可以在Gradle 的二进制分发包及源代码分发包中的&lt;c2&gt;samples/testing/jacoco/application&lt;/c2&gt;中找到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;&lt;e1&gt;Note:&lt;/e1&gt;&lt;/s0&gt; The code for this example can be found at &lt;c2&gt;samples/userguide/multiproject/addKrill/water&lt;/c2&gt; which is in both the binary and source distributions of Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160526T155344Z" creationid="95" creationdate="20160526T155344Z">
        <seg>&lt;s0&gt;&lt;e1&gt;注︰&lt;/e1&gt; &lt;/s0&gt;此示例的代码可以在Gradle 的二进制及源码分发包的&lt;c2&gt;samples/userguide/multiproject/addKrill/water&lt;/c2&gt;中找到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;&lt;e1&gt;Note:&lt;/e1&gt;&lt;/s0&gt; The code for this example can be found at &lt;c2&gt;samples/userguide/multiproject/addTropical/water&lt;/c2&gt; which is in both the binary and source distributions of Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160527T163818Z" creationid="95" creationdate="20160527T163818Z">
        <seg>&lt;s0&gt;&lt;e1&gt;注︰&lt;/e1&gt; &lt;/s0&gt;此示例的代码可以在Gradle 的二进制及源码分发包的&lt;c2&gt;samples/userguide/multiproject/addTropical/water&lt;/c2&gt;中找到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;&lt;e1&gt;Note:&lt;/e1&gt;&lt;/s0&gt; The code for this example can be found at &lt;c2&gt;samples/userguide/multiproject/dependencies/firstMessages/messages&lt;/c2&gt; which is in both the binary and source distributions of Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T062355Z" creationid="haohang" creationdate="20160718T062355Z">
        <seg>&lt;s0&gt;&lt;e1&gt;注︰&lt;/e1&gt; &lt;/s0&gt;此示例的代码可以在 Gradle 二进制和源码分发包的&lt;c2&gt;samples/userguide/multiproject/dependencies/firstMessages/messages&lt;/c2&gt;中找到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;&lt;e1&gt;Note:&lt;/e1&gt;&lt;/s0&gt; The code for this example can be found at &lt;c2&gt;samples/userguide/multiproject/dependencies/java&lt;/c2&gt; which is in both the binary and source distributions of Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T083547Z" creationid="haohang" creationdate="20160726T083547Z">
        <seg>&lt;s0&gt;&lt;e1&gt;注︰&lt;/e1&gt; &lt;/s0&gt;此示例的代码可以在 Gradle 二进制和源码分发包的&lt;c2&gt;samples/userguide/multiproject/dependencies/java/messages&lt;/c2&gt;中找到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;&lt;e1&gt;Note:&lt;/e1&gt;&lt;/s0&gt; The code for this example can be found at &lt;c2&gt;samples/userguide/multiproject/dependencies/messagesWithDependencies/messages&lt;/c2&gt; which is in both the binary and source distributions of Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T071034Z" creationid="haohang" creationdate="20160718T071034Z">
        <seg>&lt;s0&gt;&lt;e1&gt;注︰&lt;/e1&gt; &lt;/s0&gt;此示例的代码可以在 Gradle 二进制和源码分发包的&lt;c2&gt;samples/userguide/multiproject/dependencies/messagesWithDependencies/messages&lt;/c2&gt;中找到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;&lt;e1&gt;Note:&lt;/e1&gt;&lt;/s0&gt; The code for this example can be found at &lt;c2&gt;samples/userguide/multiproject/dependencies/webDist&lt;/c2&gt; which is in both the binary and source distributions of Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160722T091234Z" creationid="haohang" creationdate="20160722T091214Z">
        <seg>&lt;s0&gt;&lt;e1&gt;注︰&lt;/e1&gt; &lt;/s0&gt;此示例的代码可以在 Gradle 二进制和源码分发包的&lt;c2&gt;samples/userguide/multiproject/dependencies/webDist/messages&lt;/c2&gt;中找到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;&lt;e1&gt;Note:&lt;/e1&gt;&lt;/s0&gt; The code for this example can be found at &lt;c2&gt;samples/userguide/multiproject/firstExample/water&lt;/c2&gt; which is in both the binary and source distributions of Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160526T155348Z" creationid="95" creationdate="20160522T125534Z">
        <seg>&lt;s0&gt;&lt;e1&gt;注︰&lt;/e1&gt; &lt;/s0&gt;此示例的代码可以在Gradle 的二进制及源码分发包的&lt;c2&gt;samples/userguide/multiproject/firstExample/water&lt;/c2&gt;中找到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;&lt;e1&gt;Note:&lt;/e1&gt;&lt;/s0&gt; The code for this example can be found at &lt;c2&gt;samples/userguide/multiproject/spreadSpecifics/water&lt;/c2&gt; which is in both the binary and source distributions of Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160527T163301Z" creationid="95" creationdate="20160527T163301Z">
        <seg>&lt;s0&gt;&lt;e1&gt;注︰&lt;/e1&gt; &lt;/s0&gt;此示例的代码可以在Gradle 的二进制及源码分发包的&lt;c2&gt;samples/userguide/multiproject/spreadSpecifics/water&lt;/c2&gt;中找到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;&lt;e1&gt;Note:&lt;/e1&gt;&lt;/s0&gt; The code for this example can be found at &lt;c2&gt;samples/userguide/multiproject/tropicalWithProperties/water&lt;/c2&gt; which is in both the binary and source distributions of Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160530T144406Z" creationid="95" creationdate="20160530T144406Z">
        <seg>&lt;s0&gt;&lt;e1&gt;注︰&lt;/e1&gt; &lt;/s0&gt;此示例的代码可以在Gradle 的二进制及源码分发包的&lt;c2&gt;samples/userguide/multiproject/tropicalWithProperties/water&lt;/c2&gt;中找到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;&lt;e1&gt;Note:&lt;/e1&gt;&lt;/s0&gt; The code for this example can be found at &lt;c2&gt;samples/webApplication/quickstart&lt;/c2&gt; which is in both the binary and source distributions of Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T085559Z" creationid="msdx" creationdate="20141030T085447Z">
        <seg>&lt;s0&gt;&lt;e1&gt;注：&lt;/e1&gt;&lt;/s0&gt;此例子代码可以在Gradle的二进制文件或源码当中的&lt;c2&gt;samples/webApplication/quickstart&lt;/c2&gt;里找到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;&lt;e1&gt;Support for custom dependency definitions.&lt;/e1&gt;&lt;/s0&gt;: Gradle's Module Dependencies give you the ability to describe the dependency hierarchy in the build script.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150715T030916Z" creationid="haohang" creationdate="20150714T083007Z">
        <seg>&lt;s0&gt;&lt;e1&gt;支持依赖定义的自定义&lt;/e1&gt;&lt;/s0&gt;：Gradle 的模块依赖给你在构建脚本中描述依赖项层次结构的能力。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;&lt;e1&gt;Support for non-managed dependencies&lt;/e1&gt;&lt;/s0&gt;: If your dependencies are simply files in version control or a shared drive, Gradle provides powerful functionality to support this.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150714T082913Z" creationid="haohang" creationdate="20150714T082913Z">
        <seg>&lt;s0&gt;&lt;e1&gt;对非管理依赖的支持&lt;/e1&gt;&lt;/s0&gt;：如果你的依赖只是版本控制下或共享的驱动器中的文件，Gradle 也提供了强大的功能以支持这种情况。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;&lt;e1&gt;The Gradle daemon&lt;/e1&gt;&lt;/s0&gt; (sometimes referred as &lt;s2&gt;&lt;e3&gt;the build daemon&lt;/e3&gt;&lt;/s2&gt;) aims to improve the startup and execution time of Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141117T132006Z" creationid="msdx" creationdate="20141117T130746Z">
        <seg>&lt;s0&gt; &lt;e1&gt;Gradle 守护进程&lt;/e1&gt;&lt;/s0&gt;（有时也称为&lt;s2&gt;&lt;e3&gt;构建守护进程&lt;/e3&gt;&lt;/s2&gt;） 的目的是改善 Gradle 的启动和执行时间。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;&lt;e1&gt;Transitive dependency management&lt;/e1&gt;&lt;/s0&gt;: Gradle gives you full control of your project's dependency tree.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150714T080810Z" creationid="haohang" creationdate="20150714T080810Z">
        <seg>&lt;s0&gt;&lt;e1&gt;依赖管理传递&lt;/e1&gt;&lt;/s0&gt;： Gradle 赋予你对你的项目依赖项树的完全控制。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;&lt;echo&gt;&lt;/s0&gt;buildDir = ${buildDir}&lt;s1&gt;&lt;/echo&gt;&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T062047Z" creationid="msdx" creationdate="20141116T062047Z">
        <seg>&lt;s0&gt;&lt;echo&gt;&lt;/s0&gt;buildDir = ${buildDir}&lt;s1&gt;&lt;/echo&gt;&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;&lt;path&lt;/s0&gt; &lt;s1&gt;id&lt;/s1&gt;=&lt;s2&gt;"antPath"&lt;/s2&gt; &lt;s3&gt;location&lt;/s3&gt;=&lt;s4&gt;"libs"&lt;/s4&gt;&lt;s5&gt;/&gt;&lt;/s5&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T062719Z" creationid="msdx" creationdate="20141116T062719Z">
        <seg>&lt;s0&gt;&lt;path&lt;/s0&gt; &lt;s1&gt;id&lt;/s1&gt;=&lt;s2&gt;"antPath"&lt;/s2&gt; &lt;s3&gt;location&lt;/s3&gt;=&lt;s4&gt;"libs"&lt;/s4&gt;&lt;s5&gt;/&gt;&lt;/s5&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;&lt;path&lt;/s0&gt; &lt;s1&gt;refid&lt;/s1&gt;=&lt;s2&gt;"classpath"&lt;/s2&gt;&lt;s3&gt;/&gt;&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T062651Z" creationid="msdx" creationdate="20141116T062651Z">
        <seg>&lt;s0&gt;&lt;path&lt;/s0&gt; &lt;s1&gt;refid&lt;/s1&gt;=&lt;s2&gt;"classpath"&lt;/s2&gt;&lt;s3&gt;/&gt;&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;&lt;project&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T060915Z" creationid="msdx" creationdate="20141116T060915Z">
        <seg>&lt;s0&gt;&lt;project&gt;&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;&lt;property&lt;/s0&gt; &lt;s1&gt;name&lt;/s1&gt;=&lt;s2&gt;"antProp"&lt;/s2&gt; &lt;s3&gt;value&lt;/s3&gt;=&lt;s4&gt;"a property defined in an Ant build"&lt;/s4&gt;&lt;s5&gt;/&gt;&lt;/s5&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T062232Z" creationid="msdx" creationdate="20141116T062232Z">
        <seg>&lt;s0&gt;&lt;property&lt;/s0&gt; &lt;s1&gt;name&lt;/s1&gt;=&lt;s2&gt;"antProp"&lt;/s2&gt; &lt;s3&gt;value&lt;/s3&gt;=&lt;s4&gt;"a property defined in an Ant build"&lt;/s4&gt;&lt;s5&gt;/&gt;&lt;/s5&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;[&lt;a1&gt;10&lt;/a1&gt;] &lt;/s0&gt;The TestNG documentation contains more details about test groups: &lt;a2&gt;http://testng.org/doc/documentation-main.html#test-groups&lt;/a2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T151644Z" creationid="msdx" creationdate="20150428T151644Z">
        <seg>&lt;s0&gt;[&lt;a1&gt;10&lt;/a1&gt;] &lt;/s0&gt;TestNG 文档包含了有关测试组的更多详细信息： &lt;a2&gt;http://testng.org/doc/documentation-main.html#test-groups&lt;/a2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;[&lt;a1&gt;10&lt;/a1&gt;]&lt;/s0&gt; The test groups that should be included or excluded from the test execution can be configured in the test task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083121Z" creationid="msdx" creationdate="20150428T083121Z">
        <seg>&lt;s0&gt;[&lt;a1&gt;10&lt;/a1&gt;]&lt;/s0&gt;应从测试执行中include或exclude的测试组，可以在test任务中配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;[&lt;a1&gt;11&lt;/a1&gt;] &lt;/s0&gt;We are using the same conventions as introduced by Russel Winder's Gant tool (&lt;a2&gt;http://gant.codehaus.org&lt;/a2&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T094850Z" creationid="msdx" creationdate="20150429T094850Z">
        <seg>&lt;s0&gt;[&lt;a1&gt;11&lt;/a1&gt;] &lt;/s0&gt;我们使用和 Russel Winder 的 Gant 工具同样的约定（&lt;a2&gt;http://gant.codehaus.org&lt;/a2&gt;）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;[&lt;a1&gt;12&lt;/a1&gt;] &lt;/s0&gt;See &lt;a2&gt;Section 25.5, “Automatic configuration of scalaClasspath”&lt;/a2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T082312Z" creationid="msdx" creationdate="20150503T082312Z">
        <seg>&lt;s0&gt;[&lt;a1&gt;12&lt;/a1&gt;]&lt;/s0&gt;参阅&lt;a2&gt;第 25.5 节，“scalaClasspath 的自动配置”&lt;/a2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;[&lt;a1&gt;13&lt;/a1&gt;] &lt;/s0&gt;The &lt;c2&gt;runtime&lt;/c2&gt; configuration extends the &lt;c3&gt;compile&lt;/c3&gt; configuration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T094036Z" creationid="msdx" creationdate="20150503T094036Z">
        <seg>&lt;s0&gt;[&lt;a1&gt;13&lt;/a1&gt;]&lt;/s0&gt;&lt;c2&gt;runtime&lt;/c2&gt;配置继承自&lt;c3&gt;compile&lt;/c3&gt;配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;[&lt;a1&gt;14&lt;/a1&gt;] &lt;/s0&gt;Gradle supports partial multiproject builds (see &lt;a2&gt;Chapter 56, &lt;i3&gt;Multi-project Builds&lt;/i3&gt;&lt;/a2&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151201T070428Z" creationid="haohang" creationdate="20151201T070428Z">
        <seg>&lt;s0&gt;[&lt;a1&gt;14&lt;/a1&gt;] &lt;/s0&gt;Gradle 支持部分多项目构建（参见 &lt;a2&gt;第 56 章， &lt;i3&gt;多项目构建&lt;/i3&gt;&lt;/a2&gt;）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;[&lt;a1&gt;14&lt;/a1&gt;]&lt;/s0&gt; And sometimes you want to download a zip from a repository, that does not have module descriptors.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150731T033810Z" creationid="haohang" creationdate="20150731T033810Z">
        <seg>&lt;s0&gt;[&lt;a1&gt;14&lt;/a1&gt;]&lt;/s0&gt; 而有时候你想要从一个仓库中下载一个 zip，而它没有模块描述符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;[&lt;a1&gt;15&lt;/a1&gt;] &lt;/s0&gt; &lt;a2&gt;http://books.sonatype.com/mvnref-book/reference/pom-relationships-sect-project-relationships.html&lt;/a2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151201T070436Z" creationid="haohang" creationdate="20151201T070436Z">
        <seg>&lt;s0&gt;[&lt;a1&gt;15&lt;/a1&gt;] &lt;/s0&gt; &lt;a2&gt;http://books.sonatype.com/mvnref-book/reference/pom-relationships-sect-project-relationships.html&lt;/a2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;[&lt;a1&gt;15&lt;/a1&gt;]&lt;/s0&gt; Gradle supports this.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150731T100752Z" creationid="haohang" creationdate="20150731T100752Z">
        <seg>&lt;s0&gt;[&lt;a1&gt;15&lt;/a1&gt;]&lt;/s0&gt; 而 Gradle 支持这一点。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;[&lt;a1&gt;16&lt;/a1&gt;] &lt;/s0&gt;At &lt;a2&gt;http://ant.apache.org/ivy/history/latest-milestone/concept.html&lt;/a2&gt; you can learn more about ivy patterns.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151201T070524Z" creationid="haohang" creationdate="20151201T070524Z">
        <seg>&lt;s0&gt;[&lt;a1&gt;16&lt;/a1&gt;] &lt;/s0&gt;在&lt;a2&gt;http://ant.apache.org/ivy/history/latest-milestone/concept.html&lt;/a2&gt;，你可以了解到更多关于 ivy 模式的内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;[&lt;a1&gt;17&lt;/a1&gt;] &lt;/s0&gt;If you want to shield your project from the downtimes of Maven Central things get more complicated.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151201T070804Z" creationid="haohang" creationdate="20151201T070804Z">
        <seg>&lt;s0&gt;[&lt;a1&gt;17&lt;/a1&gt;] &lt;/s0&gt;如果你想要从 Maven 中央仓库停机保护你的项目不变得更加复杂时，</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;[&lt;a1&gt;17&lt;/a1&gt;]&lt;/s0&gt; But it can be tedious, to keep it up to date.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151130T051455Z" creationid="haohang" creationdate="20151130T051455Z">
        <seg>&lt;s0&gt;[&lt;a1&gt;17&lt;/a1&gt;]&lt;/s0&gt;但想让这个仓库保持最新的状态，可能会很乏味。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;[&lt;a1&gt;18&lt;/a1&gt;] &lt;/s0&gt;To be exact, the Base plugin provides those tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151227T160810Z" creationid="95" creationdate="20151227T160810Z">
        <seg>&lt;s0&gt;[&lt;a1&gt;18&lt;/a1&gt;] &lt;/s0&gt;确切地说，Base插件提供了这些任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;[&lt;a1&gt;19&lt;/a1&gt;] &lt;/s0&gt;It is planned for a future release to provide out-of-the-box support for this</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T145842Z" creationid="95" creationdate="20160106T145842Z">
        <seg>&lt;s0&gt;[&lt;a1&gt;19&lt;/a1&gt;] &lt;/s0&gt;已经计划在将来的发行版中为其提供开箱即用的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;[&lt;a1&gt;20&lt;/a1&gt;] &lt;/s0&gt;Gradle supports partial multiproject builds (see &lt;a2&gt;Chapter 56, &lt;i3&gt;Multi-project Builds&lt;/i3&gt;&lt;/a2&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T140327Z" creationid="95" creationdate="20160521T140327Z">
        <seg>&lt;s0&gt;[&lt;a1&gt;20&lt;/a1&gt;] &lt;/s0&gt;Gradle 支持部分多项目构建（参见 &lt;a2&gt;第 56 章， &lt;i3&gt;多项目建&lt;/i3&gt;&lt;/a2&gt;）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;[&lt;a1&gt;20&lt;/a1&gt;]&lt;/s0&gt; If you execute Gradle from within a project that has no &lt;c2&gt;settings.gradle&lt;/c2&gt; file, Gradle does the following:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T070939Z" creationid="haohang" creationdate="20160519T070833Z">
        <seg>&lt;s0&gt;[&lt;a1&gt;20&lt;/a1&gt;]&lt;/s0&gt;如果你在没有&lt;c2&gt;settings.gradle&lt;/c2&gt;文件的项目中执行从 Gradle，Gradle 将执行以下操作︰</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;[&lt;a1&gt;21&lt;/a1&gt;] &lt;/s0&gt;The real use case we had, was using &lt;a2&gt;http://lucene.apache.org/solr&lt;/a2&gt;, where you need a separate war for each index you are accessing.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160727T054637Z" creationid="haohang" creationdate="20160727T054637Z">
        <seg>&lt;s0&gt;[&lt;a1&gt;21&lt;/a1&gt;] &lt;/s0&gt;我们真正的使用情况，正使用&lt;a2&gt;http://lucene.apache.org/solr&lt;/a2&gt;，在上面你所访问的每一个索引你都需要一个单独的war。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;[&lt;a1&gt;21&lt;/a1&gt;]&lt;/s0&gt; For the example we use only one build script and do &lt;s2&gt;&lt;e3&gt;cross project configuration&lt;/e3&gt;&lt;/s2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160722T091139Z" creationid="haohang" creationdate="20160722T091139Z">
        <seg>&lt;s0&gt;[&lt;a1&gt;21&lt;/a1&gt;]&lt;/s0&gt; 对于这个例子，我们仅使用了一个构建脚本，并且进行了&lt;s2&gt;&lt;e3&gt;跨项目的配置&lt;/e3&gt;&lt;/s2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;[&lt;a1&gt;22&lt;/a1&gt;] &lt;/s0&gt; &lt;c2&gt;services&lt;/c2&gt; is also a project, but we use it just as a container.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160727T055049Z" creationid="haohang" creationdate="20160727T055049Z">
        <seg>&lt;s0&gt;[&lt;a1&gt;22&lt;/a1&gt;] &lt;/s0&gt; &lt;c2&gt;services&lt;/c2&gt; 也是一个项目，但我们只是把它用作一个容器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;[&lt;a1&gt;23&lt;/a1&gt;] &lt;/s0&gt;We do this here, as it makes the layout a bit easier.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160727T055210Z" creationid="haohang" creationdate="20160727T055210Z">
        <seg>&lt;s0&gt;[&lt;a1&gt;23&lt;/a1&gt;] &lt;/s0&gt;我们在这里实现，因为它可以使布局更容易。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;[&lt;a1&gt;24&lt;/a1&gt;] &lt;/s0&gt;So we are well in the range of the &lt;a2&gt;7 plus 2 Rule &lt;/a2&gt; :)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160727T055522Z" creationid="haohang" creationdate="20160727T055522Z">
        <seg>&lt;s0&gt;[&lt;a1&gt;24&lt;/a1&gt;] &lt;/s0&gt;因为在 &lt;a2&gt;7 plus 2 Rule &lt;/a2&gt; 的范围内我们做得很好:)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;[&lt;a1&gt;5&lt;/a1&gt;] &lt;/s0&gt;As of Gradle 1.0-milestone-9, using &lt;c2&gt;ext&lt;/c2&gt; to add extra properties is strongly encouraged but not yet enforced.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T065302Z" creationid="msdx" creationdate="20141108T065302Z">
        <seg>&lt;s0&gt;[&lt;a1&gt;5&lt;/a1&gt;] &lt;/s0&gt;截至 Gradle 1.0-milestone-9版本，我们鼓励但不强制要求使用 &lt;c2&gt;ext&lt;/c2&gt; 来添加额外属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;[&lt;a1&gt;5&lt;/a1&gt;]&lt;/s0&gt; Extra properties can be accessed from anywhere their owning object can be accessed, giving them a wider scope than local variables.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T061222Z" creationid="msdx" creationdate="20141108T055139Z">
        <seg>&lt;s0&gt;[&lt;a1&gt;5&lt;/a1&gt;]&lt;/s0&gt;额外属性在任何能够访问它们所属的对象的地方都可以被访问，这使它们有着比局部变量更广泛的作用域。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;[&lt;a1&gt;6&lt;/a1&gt;] &lt;/s0&gt; &lt;s2&gt;&lt;e3&gt;Teamcity&lt;/e3&gt;&lt;/s2&gt; or &lt;s4&gt;&lt;e5&gt;Bamboo&lt;/e5&gt;&lt;/s4&gt; are for example CI servers which offer this functionality.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T154043Z" creationid="msdx" creationdate="20141109T153810Z">
        <seg>&lt;s0&gt;[&lt;a1&gt;6&lt;/a1&gt;]&lt;/s0&gt; &lt;s2&gt; &lt;e3&gt;Teamcity&lt;/e3&gt;&lt;/s2&gt;或&lt;s4&gt;&lt;e5&gt;Bamboo&lt;/e5&gt;&lt;/s4&gt;就是提供这个功能的 CI 服务器的例子。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;[&lt;a1&gt;7&lt;/a1&gt;] &lt;/s0&gt;You might be wondering why there is neither an import for the &lt;c2&gt;StopExecutionException&lt;/c2&gt; nor do we access it via its fully qualified name.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T124203Z" creationid="msdx" creationdate="20141111T124203Z">
        <seg>&lt;s0&gt;[&lt;a1&gt;7&lt;/a1&gt;]&lt;/s0&gt;你可能会想，为什么既不导入&lt;c2&gt;StopExecutionException&lt;/c2&gt;也没有通过其完全限定名来访问它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;[&lt;a1&gt;8&lt;/a1&gt;] &lt;/s0&gt;In Groovy you can execute Strings.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T063211Z" creationid="msdx" creationdate="20141116T063203Z">
        <seg>&lt;s0&gt;[&lt;a1&gt;8&lt;/a1&gt;] &lt;/s0&gt;In Groovy you can execute 字符串表示的命令。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;[&lt;a1&gt;9&lt;/a1&gt;] &lt;/s0&gt;The JUnit wiki contains a detailed description on how to work with JUnit categories: &lt;a2&gt;https://github.com/junit-team/junit/wiki/Categories&lt;/a2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T151623Z" creationid="msdx" creationdate="20150428T151623Z">
        <seg>&lt;s0&gt;[&lt;a1&gt;9&lt;/a1&gt;] &lt;/s0&gt;JUnit wiki 包含了有关如何使用 JUnit 类别的详细说明： &lt;a2&gt;https://github.com/junit-team/junit/wiki/Categories&lt;/a2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;[&lt;a1&gt;9&lt;/a1&gt;]&lt;/s0&gt; The &lt;c2&gt;test&lt;/c2&gt; task allows the specification of the JUnit categories you want to include and exclude.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T082846Z" creationid="msdx" creationdate="20150428T082401Z">
        <seg>&lt;s0&gt;[&lt;a1&gt;9&lt;/a1&gt;]&lt;/s0&gt; &lt;c2&gt;test&lt;/c2&gt;任务可以实现一个规范，让你include和exclude 想要的 JUnit 类别。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;class&lt;/s0&gt; GreetingTask &lt;s1&gt;extends&lt;/s1&gt; DefaultTask {
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T145405Z" creationid="95" creationdate="20160814T145405Z">
        <seg>&lt;s0&gt;class&lt;/s0&gt; GreetingTask &lt;s1&gt;extends&lt;/s1&gt; DefaultTask {
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;if&lt;/s0&gt; (details.requested.group == &lt;s1&gt;'org.gradle'&lt;/s1&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T061533Z" creationid="95" creationdate="20151115T061533Z">
        <seg>&lt;s0&gt;if&lt;/s0&gt; (details.requested.group == &lt;s1&gt;'org.gradle'&lt;/s1&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;if&lt;/s0&gt; (details.requested.group == &lt;s1&gt;'org.software'&lt;/s1&gt; &amp;&amp; details.requested.name == &lt;s2&gt;'some-library'&lt;/s2&gt; &amp;&amp; details.requested.version == &lt;s3&gt;'1.2'&lt;/s3&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T085801Z" creationid="95" creationdate="20151115T085801Z">
        <seg>&lt;s0&gt;if&lt;/s0&gt; (details.requested.group == &lt;s1&gt;'org.software'&lt;/s1&gt; &amp;&amp; details.requested.name == &lt;s2&gt;'some-library'&lt;/s2&gt; &amp;&amp; details.requested.version == &lt;s3&gt;'1.2'&lt;/s3&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;if&lt;/s0&gt; (details.requested.name == &lt;s1&gt;'groovy-all'&lt;/s1&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T090640Z" creationid="95" creationdate="20151115T090640Z">
        <seg>&lt;s0&gt;if&lt;/s0&gt; (details.requested.name == &lt;s1&gt;'groovy-all'&lt;/s1&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;if&lt;/s0&gt; (details.requested.version == &lt;s1&gt;'default'&lt;/s1&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T070652Z" creationid="95" creationdate="20151115T070652Z">
        <seg>&lt;s0&gt;if&lt;/s0&gt; (details.requested.version == &lt;s1&gt;'default'&lt;/s1&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;if&lt;/s0&gt; (flavor == flavors.french) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T081120Z" creationid="haohang" creationdate="20160408T081120Z">
        <seg>&lt;s0&gt;if&lt;/s0&gt; (flavor == flavors.french) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;if&lt;/s0&gt; (project.hasTests) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T125503Z" creationid="95" creationdate="20160521T125503Z">
        <seg>&lt;s0&gt;if&lt;/s0&gt; (project.hasTests) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;if&lt;/s0&gt; (projectState.failure) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T132216Z" creationid="95" creationdate="20160521T132216Z">
        <seg>&lt;s0&gt;if&lt;/s0&gt; (projectState.failure) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;if&lt;/s0&gt; (toolChain in Gcc &amp;&amp; buildType == buildTypes.debug) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160401T090611Z" creationid="haohang" creationdate="20160401T090611Z">
        <seg>&lt;s0&gt;if&lt;/s0&gt; (toolChain in Gcc &amp;&amp; buildType == buildTypes.debug) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;if&lt;/s0&gt; (toolChain in VisualCpp) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160324T152624Z" creationid="95" creationdate="20160324T152624Z">
        <seg>&lt;s0&gt;if&lt;/s0&gt; (toolChain in VisualCpp) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;import&lt;/s0&gt; org.apache.tools.ant.filters.FixCrLfFilter
&lt;s1&gt;import&lt;/s1&gt; org.apache.tools.ant.filters.ReplaceTokens

task filter(type: Copy) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T140842Z" creationid="msdx" creationdate="20141113T140842Z">
        <seg>&lt;s0&gt;import&lt;/s0&gt; org.apache.tools.ant.filters.FixCrLfFilter
&lt;s1&gt;import&lt;/s1&gt; org.apache.tools.ant.filters.ReplaceTokens

task filter(type: Copy) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;import&lt;/s0&gt; org.slf4j.Logger
&lt;s1&gt;import&lt;/s1&gt; org.slf4j.LoggerFactory

Logger slf4jLogger = LoggerFactory.getLogger(&lt;s2&gt;'some-logger'&lt;/s2&gt;)
slf4jLogger.info(&lt;s3&gt;'An info log message logged using SLF4j'&lt;/s3&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T130534Z" creationid="msdx" creationdate="20141116T130534Z">
        <seg>&lt;s0&gt;import&lt;/s0&gt; org.slf4j.Logger
&lt;s1&gt;import&lt;/s1&gt; org.slf4j.LoggerFactory

Logger slf4jLogger = LoggerFactory.getLogger(&lt;s2&gt;'some-logger'&lt;/s2&gt;)
slf4jLogger.info(&lt;s3&gt;'An info log message logged using SLF4j'&lt;/s3&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;throw&lt;/s0&gt; &lt;s1&gt;new&lt;/s1&gt; RuntimeException(&lt;s2&gt;'broken'&lt;/s2&gt;)
}

gradle.taskGraph.beforeTask { Task task -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T140114Z" creationid="95" creationdate="20160521T140114Z">
        <seg>&lt;s0&gt;throw&lt;/s0&gt; &lt;s1&gt;new&lt;/s1&gt; RuntimeException(&lt;s2&gt;'broken'&lt;/s2&gt;)
}

gradle.taskGraph.beforeTask { Task task -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s10&gt;// Use a closure to filter each line&lt;/s10&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T140853Z" creationid="msdx" creationdate="20141113T140853Z">
        <seg>&lt;s10&gt;// Use a closure to filter each line&lt;/s10&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s11&gt;"[$line]"&lt;/s11&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T140854Z" creationid="msdx" creationdate="20141113T140854Z">
        <seg>&lt;s11&gt;"[$line]"&lt;/s11&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s11&gt;// Use the contents of each zip file in the src dir&lt;/s11&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T123339Z" creationid="msdx" creationdate="20141113T123339Z">
        <seg>&lt;s11&gt;// Use the contents of each zip file in the src dir&lt;/s11&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s12&gt;if&lt;/s12&gt; (result.failure != null) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T154820Z" creationid="msdx" creationdate="20141116T154820Z">
        <seg>&lt;s12&gt;if&lt;/s12&gt; (result.failure != null) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s13&gt;// also modify the generated deployment descriptor accordingly&lt;/s13&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T142900Z" creationid="msdx" creationdate="20150504T142900Z">
        <seg>&lt;s13&gt;// also modify the generated deployment descriptor accordingly&lt;/s13&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s1&gt;"commons-cli:commons-cli:1.0@jar"&lt;/s1&gt;,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T103703Z" creationid="haohang" creationdate="20150801T103703Z">
        <seg>&lt;s1&gt;"commons-cli:commons-cli:1.0@jar"&lt;/s1&gt;,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s1&gt;// Disable the test report for the individual test task&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083546Z" creationid="msdx" creationdate="20150428T083546Z">
        <seg>&lt;s1&gt;// Disable the test report for the individual test task&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s1&gt;// Here you would put arbitrary conditions in real life.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T054823Z" creationid="msdx" creationdate="20141111T054823Z">
        <seg>&lt;s1&gt;// Here you would put arbitrary conditions in real life.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s1&gt;// installDir "C:/Apps/Microsoft Visual Studio 10.0"&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T091223Z" creationid="haohang" creationdate="20160408T091223Z">
        <seg>&lt;s1&gt;// installDir "C:/Apps/Microsoft Visual Studio 10.0"&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s1&gt;&lt;target&lt;/s1&gt; &lt;s2&gt;name&lt;/s2&gt;=&lt;s3&gt;"hello"&lt;/s3&gt; &lt;s4&gt;depends&lt;/s4&gt;=&lt;s5&gt;"intro"&lt;/s5&gt;&lt;s6&gt;&gt;&lt;/s6&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T061143Z" creationid="msdx" creationdate="20141116T061143Z">
        <seg>&lt;s1&gt;&lt;target&lt;/s1&gt; &lt;s2&gt;name&lt;/s2&gt;=&lt;s3&gt;"hello"&lt;/s3&gt; &lt;s4&gt;depends&lt;/s4&gt;=&lt;s5&gt;"intro"&lt;/s5&gt;&lt;s6&gt;&gt;&lt;/s6&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s1&gt;&lt;target&lt;/s1&gt; &lt;s2&gt;name&lt;/s2&gt;=&lt;s3&gt;"hello"&lt;/s3&gt;&lt;s4&gt;&gt;&lt;/s4&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T060915Z" creationid="msdx" creationdate="20141116T060915Z">
        <seg>&lt;s1&gt;&lt;target&lt;/s1&gt; &lt;s2&gt;name&lt;/s2&gt;=&lt;s3&gt;"hello"&lt;/s3&gt;&lt;s4&gt;&gt;&lt;/s4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s1&gt;[&lt;a2&gt;12&lt;/a2&gt;]&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T152831Z" creationid="msdx" creationdate="20150429T152831Z">
        <seg>&lt;s1&gt;[&lt;a2&gt;12&lt;/a2&gt;]&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s1&gt;[&lt;a2&gt;23&lt;/a2&gt;]&lt;/s1&gt; A &lt;s3&gt;&lt;e4&gt;lib&lt;/e4&gt;&lt;/s3&gt; dependency is a special form of an execution dependency.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T084005Z" creationid="haohang" creationdate="20160726T084005Z">
        <seg>&lt;s1&gt;[&lt;a2&gt;23&lt;/a2&gt;]&lt;/s1&gt; 一个 &lt;s3&gt;&lt;e4&gt;lib&lt;/e4&gt;&lt;/s3&gt; 依赖是一种特殊形式的执行依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s1&gt;[&lt;a2&gt;8&lt;/a2&gt;]&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141114T142101Z" creationid="msdx" creationdate="20141114T142101Z">
        <seg>&lt;s1&gt;[&lt;a2&gt;8&lt;/a2&gt;]&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s1&gt;if&lt;/s1&gt; (details.id.group == &lt;s2&gt;"air.birds"&lt;/s2&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T041820Z" creationid="95" creationdate="20151129T041820Z">
        <seg>&lt;s1&gt;if&lt;/s1&gt; (details.id.group == &lt;s2&gt;"air.birds"&lt;/s2&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s1&gt;if&lt;/s1&gt; (taskName.startsWith(&lt;s2&gt;"ping"&lt;/s2&gt;)) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T064959Z" creationid="msdx" creationdate="20141111T064959Z">
        <seg>&lt;s1&gt;if&lt;/s1&gt; (taskName.startsWith(&lt;s2&gt;"ping"&lt;/s2&gt;)) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s1&gt;if&lt;/s1&gt; (toolChain in VisualCpp) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160324T152307Z" creationid="95" creationdate="20160324T152307Z">
        <seg>&lt;s1&gt;if&lt;/s1&gt; (toolChain in VisualCpp) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s1&gt;new&lt;/s1&gt; File(docs, &lt;s2&gt;"readme.txt"&lt;/s2&gt;).write(&lt;s3&gt;"Read me!"&lt;/s3&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150703T100427Z" creationid="haohang" creationdate="20150703T100427Z">
        <seg>&lt;s1&gt;new&lt;/s1&gt; File(docs, &lt;s2&gt;"readme.txt"&lt;/s2&gt;).write(&lt;s3&gt;"Read me!"&lt;/s3&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s1&gt;throw&lt;/s1&gt; &lt;s2&gt;new&lt;/s2&gt; RuntimeException()
}
task taskY &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T070352Z" creationid="msdx" creationdate="20141111T070352Z">
        <seg>&lt;s1&gt;throw&lt;/s1&gt; &lt;s2&gt;new&lt;/s2&gt; RuntimeException()
}
task taskY &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s2&gt;"org.apache.ant:ant:1.9.3@jar"&lt;/s2&gt;]
List hibernate = [&lt;s3&gt;'org.hibernate:hibernate:3.0.5@jar'&lt;/s3&gt;, &lt;s4&gt;'somegroup:someorg:1.0@jar'&lt;/s4&gt;]
dependencies {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T103704Z" creationid="haohang" creationdate="20150801T103704Z">
        <seg>&lt;s2&gt;"org.apache.ant:ant:1.9.3@jar"&lt;/s2&gt;]
List hibernate = [&lt;s3&gt;'org.hibernate:hibernate:3.0.5@jar'&lt;/s3&gt;, &lt;s4&gt;'somegroup:someorg:1.0@jar'&lt;/s4&gt;]
dependencies {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s2&gt;// Apply the script&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T153043Z" creationid="msdx" creationdate="20141109T153043Z">
        <seg>&lt;s2&gt;// Apply the script&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s2&gt;// Copy a single file&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T130949Z" creationid="msdx" creationdate="20141113T130949Z">
        <seg>&lt;s2&gt;// Copy a single file&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s2&gt;// Define toolchain-specific compiler and linker options&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160324T151757Z" creationid="95" creationdate="20160324T151757Z">
        <seg>&lt;s2&gt;// Define toolchain-specific compiler and linker options&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s2&gt;// Look for artifacts here if not found at the above location&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150909T053117Z" creationid="haohang" creationdate="20150909T053117Z">
        <seg>&lt;s2&gt;// Look for artifacts here if not found at the above location&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s2&gt;// Uncomment to use a GCC install that is not in the PATH&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T091224Z" creationid="haohang" creationdate="20160408T091224Z">
        <seg>&lt;s2&gt;// Uncomment to use a GCC install that is not in the PATH&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s2&gt;// Use a closure to map the file name&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T140712Z" creationid="msdx" creationdate="20141113T140712Z">
        <seg>&lt;s2&gt;// Use a closure to map the file name&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s2&gt;// do something&lt;/s2&gt;
}
task compile(dependsOn: &lt;s3&gt;'resources'&lt;/s3&gt;) &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T093715Z" creationid="msdx" creationdate="20141109T093715Z">
        <seg>&lt;s2&gt;// do something&lt;/s2&gt;
}
task compile(dependsOn: &lt;s3&gt;'resources'&lt;/s3&gt;) &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s2&gt;// non-String values are automatically converted to Strings&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T101339Z" creationid="msdx" creationdate="20150512T101339Z">
        <seg>&lt;s2&gt;// non-String values are automatically converted to Strings&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s2&gt;//following dependencies will become the ear modules and placed in the ear root&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T142849Z" creationid="msdx" creationdate="20150504T142849Z">
        <seg>&lt;s2&gt;//following dependencies will become the ear modules and placed in the ear root&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s2&gt;//include all tests from package&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083455Z" creationid="msdx" creationdate="20150428T083455Z">
        <seg>&lt;s2&gt;//include all tests from package&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s2&gt;//prefer 'groovy' over 'groovy-all':&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T090641Z" creationid="95" creationdate="20151115T090641Z">
        <seg>&lt;s2&gt;//prefer 'groovy' over 'groovy-all':&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s2&gt;//some custom logic that resolves the default version into a specific version&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T070656Z" creationid="95" creationdate="20151115T070656Z">
        <seg>&lt;s2&gt;//some custom logic that resolves the default version into a specific version&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s2&gt;@TaskAction&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T145741Z" creationid="95" creationdate="20160814T145741Z">
        <seg>&lt;s2&gt;@TaskAction&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s2&gt;[&lt;a3&gt;19&lt;/a3&gt;]&lt;/s2&gt; For example to use the ssh protocol you can do:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T134836Z" creationid="95" creationdate="20160105T134836Z">
        <seg>&lt;s2&gt;[&lt;a3&gt;19&lt;/a3&gt;]&lt;/s2&gt; 举个例子，要使用ssh协议，你可以：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s2&gt;[&lt;a3&gt;7&lt;/a3&gt;]&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T055457Z" creationid="msdx" creationdate="20141111T055457Z">
        <seg>&lt;s2&gt;[&lt;a3&gt;7&lt;/a3&gt;]&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s2&gt;if&lt;/s2&gt; (flavor == flavors.failing) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T151037Z" creationid="95" creationdate="20160504T151037Z">
        <seg>&lt;s2&gt;if&lt;/s2&gt; (flavor == flavors.failing) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s2&gt;if&lt;/s2&gt; (project.arctic) { doLast {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160530T144431Z" creationid="95" creationdate="20160530T144431Z">
        <seg>&lt;s2&gt;if&lt;/s2&gt; (project.arctic) { doLast {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s2&gt;if&lt;/s2&gt; (toolChain in VisualCpp &amp;&amp; buildType == buildTypes.debug) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160401T090618Z" creationid="haohang" creationdate="20160401T090618Z">
        <seg>&lt;s2&gt;if&lt;/s2&gt; (toolChain in VisualCpp &amp;&amp; buildType == buildTypes.debug) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s2&gt;if&lt;/s2&gt; (true) { &lt;s3&gt;throw&lt;/s3&gt; &lt;s4&gt;new&lt;/s4&gt; StopExecutionException() }
}
task myTask(dependsOn: &lt;s5&gt;'compile'&lt;/s5&gt;) &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T055252Z" creationid="msdx" creationdate="20141111T055252Z">
        <seg>&lt;s2&gt;if&lt;/s2&gt; (true) { &lt;s3&gt;throw&lt;/s3&gt; &lt;s4&gt;new&lt;/s4&gt; StopExecutionException() }
}
task myTask(dependsOn: &lt;s5&gt;'compile'&lt;/s5&gt;) &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s3&gt;"1.0"&lt;/s3&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T070658Z" creationid="95" creationdate="20151115T070658Z">
        <seg>&lt;s3&gt;"1.0"&lt;/s3&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s3&gt;'org.mycomp.package1'&lt;/s3&gt;,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150526T064441Z" creationid="haohang" creationdate="20150526T064441Z">
        <seg>&lt;s3&gt;'org.mycomp.package1'&lt;/s3&gt;,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s3&gt;// Add a source directory using a File object&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T123633Z" creationid="msdx" creationdate="20141113T123633Z">
        <seg>&lt;s3&gt;// Add a source directory using a File object&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s3&gt;// Copy the output of copyTask&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T134202Z" creationid="msdx" creationdate="20141113T134202Z">
        <seg>&lt;s3&gt;// Copy the output of copyTask&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s3&gt;// Include the results from the `test` task in all subprojects&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T142811Z" creationid="msdx" creationdate="20150428T142811Z">
        <seg>&lt;s3&gt;// Include the results from the `test` task in all subprojects&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s3&gt;// path "/usr/bin/gcc"&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T091225Z" creationid="haohang" creationdate="20160408T091225Z">
        <seg>&lt;s3&gt;// path "/usr/bin/gcc"&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s3&gt;[&lt;a4&gt;11&lt;/a4&gt;]&lt;/s3&gt; None of these directories need to exist or have anything in them; the Groovy plugin will simply compile whatever it finds.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T075101Z" creationid="msdx" creationdate="20150429T074832Z">
        <seg>&lt;s3&gt;[&lt;a4&gt;11&lt;/a4&gt;]&lt;/s3&gt;这些目录不一定得存在或是里面包含有什么内容；Groovy 的插件只会进行编译，而不管它发现什么。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s3&gt;if&lt;/s3&gt; (toolChain in Gcc) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160324T151758Z" creationid="95" creationdate="20160324T151758Z">
        <seg>&lt;s3&gt;if&lt;/s3&gt; (toolChain in Gcc) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s4&gt;'org.mycomp.package2'&lt;/s4&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150526T064442Z" creationid="haohang" creationdate="20150526T064442Z">
        <seg>&lt;s4&gt;'org.mycomp.package2'&lt;/s4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s4&gt;// Copy the output of a task&lt;/s4&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T130951Z" creationid="msdx" creationdate="20141113T130951Z">
        <seg>&lt;s4&gt;// Copy the output of a task&lt;/s4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s4&gt;// Substitute property references in files&lt;/s4&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T140844Z" creationid="msdx" creationdate="20141113T140844Z">
        <seg>&lt;s4&gt;// Substitute property references in files&lt;/s4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s4&gt;//following dependencies will become ear libs and placed in a dir configured via libDirName property&lt;/s4&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T142850Z" creationid="msdx" creationdate="20150504T142850Z">
        <seg>&lt;s4&gt;//following dependencies will become ear libs and placed in a dir configured via libDirName property&lt;/s4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s4&gt;//include all integration tests&lt;/s4&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083455Z" creationid="msdx" creationdate="20150428T083455Z">
        <seg>&lt;s4&gt;//include all integration tests&lt;/s4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s4&gt;//prefer different version which contains some necessary fixes&lt;/s4&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T085802Z" creationid="95" creationdate="20151115T085802Z">
        <seg>&lt;s4&gt;//prefer different version which contains some necessary fixes&lt;/s4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s4&gt;if&lt;/s4&gt; (classesDir.isDirectory()) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T093716Z" creationid="msdx" creationdate="20141109T093716Z">
        <seg>&lt;s4&gt;if&lt;/s4&gt; (classesDir.isDirectory()) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s4&gt;if&lt;/s4&gt; (details.baseValue != details.mergeValue) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T145617Z" creationid="msdx" creationdate="20150428T145617Z">
        <seg>&lt;s4&gt;if&lt;/s4&gt; (details.baseValue != details.mergeValue) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s4&gt;if&lt;/s4&gt; (details.requested.name == &lt;s5&gt;'log4j'&lt;/s5&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T090643Z" creationid="95" creationdate="20151115T090643Z">
        <seg>&lt;s4&gt;if&lt;/s4&gt; (details.requested.name == &lt;s5&gt;'log4j'&lt;/s5&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s4&gt;if&lt;/s4&gt; (state.failure) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T140116Z" creationid="95" creationdate="20160521T140116Z">
        <seg>&lt;s4&gt;if&lt;/s4&gt; (state.failure) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s4&gt;public&lt;/s4&gt; &lt;s5&gt;void&lt;/s5&gt; beforeExecute(Task task) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T154816Z" creationid="msdx" creationdate="20141116T154816Z">
        <seg>&lt;s4&gt;public&lt;/s4&gt; &lt;s5&gt;void&lt;/s5&gt; beforeExecute(Task task) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s5&gt;// Add some source directories using a closure&lt;/s5&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T123634Z" creationid="msdx" creationdate="20141113T123634Z">
        <seg>&lt;s5&gt;// Add some source directories using a closure&lt;/s5&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s5&gt;// Copy the output of a task using Task outputs explicitly.&lt;/s5&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T130953Z" creationid="msdx" creationdate="20141113T130953Z">
        <seg>&lt;s5&gt;// Copy the output of a task using Task outputs explicitly.&lt;/s5&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s5&gt;// Use a regular expression to map the file name&lt;/s5&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T140714Z" creationid="msdx" creationdate="20141113T140714Z">
        <seg>&lt;s5&gt;// Use a regular expression to map the file name&lt;/s5&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s5&gt;&lt;echo&gt;&lt;/s5&gt;Hello, from Ant&lt;s6&gt;&lt;/echo&gt;&lt;/s6&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T060916Z" creationid="msdx" creationdate="20141116T060916Z">
        <seg>&lt;s5&gt;&lt;echo&gt;&lt;/s5&gt;Hello, from Ant&lt;s6&gt;&lt;/echo&gt;&lt;/s6&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s5&gt;if&lt;/s5&gt; (details.key == &lt;s6&gt;'foo'&lt;/s6&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T145618Z" creationid="msdx" creationdate="20150428T145618Z">
        <seg>&lt;s5&gt;if&lt;/s5&gt; (details.key == &lt;s6&gt;'foo'&lt;/s6&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s6&gt;// Copy the contents of a Zip file&lt;/s6&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T130955Z" creationid="msdx" creationdate="20141113T130955Z">
        <seg>&lt;s6&gt;// Copy the contents of a Zip file&lt;/s6&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s6&gt;// do something&lt;/s6&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T093722Z" creationid="msdx" creationdate="20141109T093722Z">
        <seg>&lt;s6&gt;// do something&lt;/s6&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s6&gt;//prefer 'log4j-over-slf4j' over 'log4j', with fixed version:&lt;/s6&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T090644Z" creationid="95" creationdate="20151115T090644Z">
        <seg>&lt;s6&gt;//prefer 'log4j-over-slf4j' over 'log4j', with fixed version:&lt;/s6&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s6&gt;@TaskAction&lt;/s6&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T151535Z" creationid="95" creationdate="20160814T151535Z">
        <seg>&lt;s6&gt;@TaskAction&lt;/s6&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s6&gt;[&lt;a7&gt;18&lt;/a7&gt;]&lt;/s6&gt; Execution of these tasks will build or upload the artifacts belonging to the respective configuration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151221T141633Z" creationid="95" creationdate="20151221T141633Z">
        <seg>&lt;s6&gt;[&lt;a7&gt;18&lt;/a7&gt;]&lt;/s6&gt;这些任务的执行将会构建或上传属于各自配置的构件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s6&gt;[&lt;a7&gt;22&lt;/a7&gt;]&lt;/s6&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T083719Z" creationid="haohang" creationdate="20160726T083719Z">
        <seg>&lt;s6&gt;[&lt;a7&gt;22&lt;/a7&gt;]&lt;/s6&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s6&gt;[&lt;a7&gt;24&lt;/a7&gt;]&lt;/s6&gt; With those elements, and keeping in mind that Gradle has a distinct configuration and execution phase, you have already a lot of flexibility.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160727T054011Z" creationid="haohang" creationdate="20160727T053929Z">
        <seg>&lt;s6&gt;[&lt;a7&gt;24&lt;/a7&gt;]&lt;/s6&gt; 使用这些元素，并记住 Gradle 具有不同的配置和执行阶段，你就已经可以很灵活地使用它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s6&gt;[&lt;a7&gt;6&lt;/a7&gt;]&lt;/s6&gt; If the environment property follows the pattern &lt;c8&gt;ORG_GRADLE_PROJECT_&lt;e9&gt;&lt;c10&gt;propertyName&lt;/c10&gt;&lt;/e9&gt;=somevalue&lt;/c8&gt;, &lt;c11&gt;propertyName&lt;/c11&gt; is added to your project object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T145631Z" creationid="msdx" creationdate="20141109T141951Z">
        <seg>&lt;s6&gt;[&lt;a7&gt;6&lt;/a7&gt;]&lt;/s6&gt;如果环境属性遵循&lt;c8&gt;ORG_GRADLE_PROJECT_&lt;e9&gt;&lt;c10&gt;propertyName&lt;/c10&gt;&lt;/e9&gt;= somevalue&lt;/c8&gt;的模式，这里的&lt;c11&gt;propertyName&lt;/c11&gt;会被添加到您的项目对象中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s6&gt;else&lt;/s6&gt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T140119Z" creationid="95" creationdate="20160521T140119Z">
        <seg>&lt;s6&gt;else&lt;/s6&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s6&gt;if&lt;/s6&gt; (flavor == flavors.failing) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T151357Z" creationid="95" creationdate="20160504T151357Z">
        <seg>&lt;s6&gt;if&lt;/s6&gt; (flavor == flavors.failing) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s7&gt;// Use some of the filters provided by Ant&lt;/s7&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T140847Z" creationid="msdx" creationdate="20141113T140847Z">
        <seg>&lt;s7&gt;// Use some of the filters provided by Ant&lt;/s7&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s7&gt;&lt;/target&gt;&lt;/s7&gt;
&lt;s8&gt;&lt;/project&gt;&lt;/s8&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T060916Z" creationid="msdx" creationdate="20141116T060916Z">
        <seg>&lt;s7&gt;&lt;/target&gt;&lt;/s7&gt;
&lt;s8&gt;&lt;/project&gt;&lt;/s8&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s7&gt;&lt;echo&gt;&lt;/s7&gt;Hello, from Ant&lt;s8&gt;&lt;/echo&gt;&lt;/s8&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T061145Z" creationid="msdx" creationdate="20141116T061145Z">
        <seg>&lt;s7&gt;&lt;echo&gt;&lt;/s7&gt;Hello, from Ant&lt;s8&gt;&lt;/echo&gt;&lt;/s8&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s7&gt;public&lt;/s7&gt; &lt;s8&gt;void&lt;/s8&gt; afterExecute(Task task, TaskState state) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T154818Z" creationid="msdx" creationdate="20141116T154818Z">
        <seg>&lt;s7&gt;public&lt;/s7&gt; &lt;s8&gt;void&lt;/s8&gt; afterExecute(Task task, TaskState state) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s8&gt;// Determine the destination directory later&lt;/s8&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T130957Z" creationid="msdx" creationdate="20141113T130957Z">
        <seg>&lt;s8&gt;// Determine the destination directory later&lt;/s8&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s8&gt;if&lt;/s8&gt; (toolChain in VisualCpp) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160324T151800Z" creationid="95" creationdate="20160324T151800Z">
        <seg>&lt;s8&gt;if&lt;/s8&gt; (toolChain in VisualCpp) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s9&gt;&lt;/target&gt;&lt;/s9&gt;
&lt;s10&gt;&lt;/project&gt;&lt;/s10&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T061145Z" creationid="msdx" creationdate="20141116T061145Z">
        <seg>&lt;s9&gt;&lt;/target&gt;&lt;/s9&gt;
&lt;s10&gt;&lt;/project&gt;&lt;/s10&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s9&gt;public&lt;/s9&gt; &lt;s10&gt;void&lt;/s10&gt; buildFinished(BuildResult result) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T154819Z" creationid="msdx" creationdate="20141116T154819Z">
        <seg>&lt;s9&gt;public&lt;/s9&gt; &lt;s10&gt;void&lt;/s10&gt; buildFinished(BuildResult result) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -I init.gradle build
[compile]
compiling source

[testCompile]
compiling test source

[test]
running unit tests

[build]

build completed</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T154831Z" creationid="msdx" creationdate="20141116T154831Z">
        <seg>&gt; gradle -I init.gradle build
[compile]
compiling source

[testCompile]
compiling test source

[test]
running unit tests

[build]

build completed</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -a :api:build
:api:compileJava
:api:processResources
:api:classes
:api:jar
:api:assemble
:api:compileTestJava
:api:processTestResources
:api:testClasses
:api:test
:api:check
:api:build

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160727T051922Z" creationid="haohang" creationdate="20160727T051922Z">
        <seg>-&gt; gradle :api:build
:shared:compileJava
:shared:processResources
:shared:classes
:shared:jar
:api:compileJava
:api:processResources
:api:classes
:api:jar
:api:assemble
:api:compileTestJava
:api:processTestResources
:api:testClasses
:api:test
:api:check
:api:build

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q -PcommandLineProjectProp=commandLineProjectPropValue -Dorg.gradle.project.systemProjectProp=systemPropertyValue printProps
commandLineProjectPropValue
gradlePropertiesValue
systemPropertyValue
envPropertyValue
systemValue</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T151221Z" creationid="msdx" creationdate="20141109T151221Z">
        <seg>&gt; gradle -q -PcommandLineProjectProp=commandLineProjectPropValue -Dorg.gradle.project.systemProjectProp=systemPropertyValue printProps
commandLineProjectPropValue
gradlePropertiesValue
systemPropertyValue
envPropertyValue
systemValue</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q :hello :krill:hello hello
I'm water
I'm krill
- I depend on water
- The weight of my species in summer is twice as heavy as all human beings.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160715T091719Z" creationid="haohang" creationdate="20160715T091719Z">
        <seg>&gt; gradle -q :hello :krill:hello hello
I'm water
I'm krill
- I depend on water
- The weight of my species in summer is twice as heavy as all human beings.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q a
source dir is src/main/java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T135109Z" creationid="95" creationdate="20160521T135109Z">
        <seg>&gt; gradle -q a
source dir is src/main/java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q action
Consuming message: null</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T070720Z" creationid="haohang" creationdate="20160718T070720Z">
        <seg>&gt; gradle -q action
Consuming message: null</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q action
Consuming message: null
Producing message:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T062416Z" creationid="haohang" creationdate="20160718T062416Z">
        <seg>&gt; gradle -q action
Consuming message: null
Producing message:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q action
Producing message:
Consuming message: Watch the order of execution.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T070218Z" creationid="haohang" creationdate="20160718T070218Z">
        <seg>&gt; gradle -q action
Producing message:
Consuming message: Watch the order of execution.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q allFiles
orca-1.0.jar
shark-1.0.jar
tuna-1.0.jar
herring-1.0.jar
seal-2.0.jar</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T034620Z" creationid="haohang" creationdate="20150807T034620Z">
        <seg>&gt; gradle -q allFiles
orca-1.0.jar
shark-1.0.jar
tuna-1.0.jar
herring-1.0.jar
seal-2.0.jar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q broken
executing task ':ok' ...
done
executing task ':broken' ...</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T140131Z" creationid="95" creationdate="20160521T140131Z">
        <seg>&gt; gradle -q broken
executing task ':ok' ...
done
executing task ':broken' ...</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q check
projectApi
projectApi</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T043159Z" creationid="msdx" creationdate="20141108T043159Z">
        <seg>&gt; gradle -q check
projectApi
projectApi</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q compile
The class directory exists.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T093725Z" creationid="msdx" creationdate="20141109T093725Z">
        <seg>&gt; gradle -q compile
The class directory exists.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q configure
1
5</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T152822Z" creationid="msdx" creationdate="20141109T152822Z">
        <seg>&gt; gradle -q configure
1
5</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q consume
Consuming message: Watch the order of evaluation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T075005Z" creationid="haohang" creationdate="20160718T075005Z">
        <seg>&gt; gradle -q consume
Consuming message: Watch the order of evaluation.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q consume
Consuming message: null</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T072800Z" creationid="haohang" creationdate="20160718T072800Z">
        <seg>&gt; gradle -q consume
Consuming message: null</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q consume
Producing message:
Consuming message: Watch the order of execution.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T072056Z" creationid="haohang" creationdate="20160718T072056Z">
        <seg>-&gt; gradle -q action
Producing message:
Consuming message: Watch the order of execution.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q copy
I am the new one.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T015907Z" creationid="msdx" creationdate="20141111T015907Z">
        <seg>&gt; gradle -q copy
I am the new one.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q copy
albatros
shark
tuna

albatros</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T040605Z" creationid="haohang" creationdate="20150807T040605Z">
        <seg>&gt; gradle -q copy
albatros
shark
tuna

albatros</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q copyVsFiles
orca-1.0.jar
seal-1.0.jar

orca-1.0.jar
seal-2.0.jar</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T041259Z" creationid="haohang" creationdate="20150807T041259Z">
        <seg>&gt; gradle -q copyVsFiles
orca-1.0.jar
seal-1.0.jar

orca-1.0.jar
seal-2.0.jar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q dependencies
albatros

albatros
orca
shark
tuna

albatros
shark
tuna</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T034419Z" creationid="haohang" creationdate="20150807T034419Z">
        <seg>&gt; gradle -q dependencies
albatros

albatros
orca
shark
tuna

albatros
shark
tuna</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q distanceToIceberg
20 nautical miles
5 nautical miles</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160715T080007Z" creationid="haohang" creationdate="20160715T080007Z">
        <seg>&gt; gradle -q distanceToIceberg
20 nautical miles
5 nautical miles</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q files
orca-1.0.jar
seal-2.0.jar</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T034750Z" creationid="haohang" creationdate="20150807T034750Z">
        <seg>&gt; gradle -q files
orca-1.0.jar
seal-2.0.jar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q groupPing
Pinging: Server1
Pinging: Server2</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T065657Z" creationid="msdx" creationdate="20141111T065657Z">
        <seg>&gt; gradle -q groupPing
Pinging: Server1
Pinging: Server2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q hello
:hello
:hello
:projectA:hello
:projectA:hello</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T082200Z" creationid="msdx" creationdate="20141110T082200Z">
        <seg>&gt; gradle -q hello
:hello
:hello
:projectA:hello
:projectA:hello</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q hello
I'm bluewhale
- I depend on water
- I'm the largest animal that has ever lived on this planet.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160530T152047Z" creationid="95" creationdate="20160530T152047Z">
        <seg>&gt; gradle -q hello
I'm bluewhale
- I depend on water
- I'm the largest animal that has ever lived on this planet.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q hello
I'm water
I'm bluewhale</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160522T125912Z" creationid="95" creationdate="20160522T125912Z">
        <seg>&gt; gradle -q hello
I'm water
I'm bluewhale</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q hello
I'm water
I'm bluewhale
- I depend on water
- I love to spend time in the arctic waters.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160527T163822Z" creationid="95" creationdate="20160527T163822Z">
        <seg>&gt; gradle -q hello
I'm water
I'm bluewhale
- I depend on water
- I love to spend time in the arctic waters.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q hello
I'm water
I'm bluewhale
- I depend on water
- I'm the largest animal that has ever lived on this planet.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160527T162903Z" creationid="95" creationdate="20160527T162903Z">
        <seg>&gt; gradle -q hello
I'm water
I'm bluewhale
- I depend on water
- I'm the largest animal that has ever lived on this planet.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q hello
I'm water
I'm bluewhale
- I depend on water
I'm krill
- I depend on water</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160527T162359Z" creationid="95" creationdate="20160527T162359Z">
        <seg>&gt; gradle -q hello
I'm water
I'm bluewhale
- I depend on water
I'm krill
- I depend on water</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q hello
I'm water
I'm bluewhale
I'm krill</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160527T161033Z" creationid="95" creationdate="20160527T161033Z">
        <seg>&gt; gradle -q hello
I'm water
I'm bluewhale
I'm krill</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q hello
configuring root project 'configureProjectUsingScript'
hello from other script</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T152459Z" creationid="msdx" creationdate="20141109T152459Z">
        <seg>&gt; gradle -q hello
configuring root project 'configureProjectUsingScript'
hello from other script</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q hello
hello from GreetingTask</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T145747Z" creationid="95" creationdate="20160814T145747Z">
        <seg>&gt; gradle -q hello
hello from GreetingTask</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q hello greeting
hello from GreetingTask
greetings from GreetingTask</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T151606Z" creationid="95" creationdate="20160814T151606Z">
        <seg>&gt; gradle -q hello greeting
hello from GreetingTask
greetings from GreetingTask</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q list
Contents of src
src/dir1
src/file1.txt
Contents of src2
src2/dir1
src2/dir2</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T160903Z" creationid="msdx" creationdate="20141112T160903Z">
        <seg>&gt; gradle -q list
Contents of src
src/dir1
src/file1.txt
Contents of src2
src2/dir1
src2/dir2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q list
compiling classes
classpath = [classes]</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T094505Z" creationid="haohang" creationdate="20150801T094505Z">
        <seg>&gt; gradle -q list
compiling classes
classpath = [classes]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q listBirds
albatros-2.0.jar</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T041840Z" creationid="95" creationdate="20151129T041840Z">
        <seg>&gt; gradle -q listBirds
albatros-2.0.jar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q listFish
tuna-1.5.jar

tuna-1.4.jar</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T041654Z" creationid="95" creationdate="20151129T041654Z">
        <seg>&gt; gradle -q listFish
tuna-1.5.jar

tuna-1.4.jar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q listJars
hibernate-core-3.6.7.Final.jar
antlr-2.7.6.jar
commons-collections-3.1.jar
dom4j-1.6.1.jar
hibernate-commons-annotations-3.2.0.Final.jar
hibernate-jpa-2.0-api-1.0.1.Final.jar
jta-1.1.jar
slf4j-api-1.6.1.jar</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T091218Z" creationid="haohang" creationdate="20150801T091218Z">
        <seg>&gt; gradle -q listJars
hibernate-core-3.6.7.Final.jar
antlr-2.7.6.jar
commons-collections-3.1.jar
dom4j-1.6.1.jar
hibernate-commons-annotations-3.2.0.Final.jar
hibernate-jpa-2.0-api-1.0.1.Final.jar
jta-1.1.jar
slf4j-api-1.6.1.jar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q myTask
I am not affected</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T055304Z" creationid="msdx" creationdate="20141111T055304Z">
        <seg>&gt; gradle -q myTask
I am not affected</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q myZip
customName-1.0.zip</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T155548Z" creationid="msdx" creationdate="20141113T155548Z">
        <seg>&gt; gradle -q myZip
customName-1.0.zip</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q myZip
gradle-wrapper-1.0-src.zip</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T155804Z" creationid="msdx" creationdate="20141113T155804Z">
        <seg>&gt; gradle -q myZip
gradle-wrapper-1.0-src.zip</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q myZip
zipProject-1.0.zip
build/distributions
build/distributions/zipProject-1.0.zip</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T154747Z" creationid="msdx" creationdate="20141113T154747Z">
        <seg>&gt; gradle -q myZip
zipProject-1.0.zip
build/distributions
build/distributions/zipProject-1.0.zip</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q pingServer1
Pinging: Server1</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T065022Z" creationid="msdx" creationdate="20141111T065022Z">
        <seg>&gt; gradle -q pingServer1
Pinging: Server1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q printProperties
3.1.0.RELEASE
build@master.org
main
plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150710T012944Z" creationid="haohang" creationdate="20150710T012944Z">
        <seg>&gt; gradle -q printProperties
3.1.0.RELEASE
build@master.org
main
plugin</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q runFailingOperatorsTestCUnitExe

There were test failures:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T151528Z" creationid="95" creationdate="20160504T151528Z">
        <seg>&gt; gradle -q runFailingOperatorsTestCUnitExe

There were test failures:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q show
build/classes/main
build/resources/main</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141123T151139Z" creationid="msdx" creationdate="20141123T151139Z">
        <seg>&gt; gradle -q show
build/classes/main
build/resources/main</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q show
build/output/classes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141123T154213Z" creationid="msdx" creationdate="20141123T154213Z">
        <seg>&gt; gradle -q show
build/output/classes</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q taskX
lib1
lib2
taskX</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T123908Z" creationid="msdx" creationdate="20141110T123908Z">
        <seg>&gt; gradle -q taskX
lib1
lib2
taskX</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q taskX
taskX
taskY</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T070214Z" creationid="msdx" creationdate="20141111T070214Z">
        <seg>&gt; gradle -q taskX
taskX
taskY</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q taskX
taskY
taskX</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T122338Z" creationid="msdx" creationdate="20141110T122338Z">
        <seg>&gt; gradle -q taskX
taskY
taskX</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q taskX
taskZ
taskY
taskX</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T014956Z" creationid="msdx" creationdate="20141111T014956Z">
        <seg>&gt; gradle -q taskX
taskZ
taskY
taskX</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q taskY
taskY</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T013522Z" creationid="msdx" creationdate="20141111T013522Z">
        <seg>&gt; gradle -q taskY
taskY</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q taskY taskX
taskX
taskY</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T012848Z" creationid="msdx" creationdate="20141111T012848Z">
        <seg>&gt; gradle -q taskY taskX
taskX
taskY</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q test
Adding test task to project ':projectA'
Running tests for project ':projectA'</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T125725Z" creationid="95" creationdate="20160521T125725Z">
        <seg>&gt; gradle -q test
Adding test task to project ':projectA'
Running tests for project ':projectA'</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q test
Evaluation of root project 'buildProjectEvaluateEvents' succeeded
Evaluation of project ':projectA' succeeded
Evaluation of project ':projectB' FAILED</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T132220Z" creationid="95" creationdate="20160521T132220Z">
        <seg>&gt; gradle -q test
Evaluation of root project 'buildProjectEvaluateEvents' succeeded
Evaluation of project ':projectA' succeeded
Evaluation of project ':projectB' FAILED</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle :api:build
:shared:compileJava
:shared:processResources
:shared:classes
:shared:jar
:api:compileJava
:api:processResources
:api:classes
:api:jar
:api:assemble
:api:compileTestJava
:api:processTestResources
:api:testClasses
:api:test
:api:check
:api:build

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T095312Z" creationid="haohang" creationdate="20160726T095312Z">
        <seg>&gt; gradle :api:build
:shared:compileJava
:shared:processResources
:shared:classes
:shared:jar
:api:compileJava
:api:processResources
:api:classes
:api:jar
:api:assemble
:api:compileTestJava
:api:processTestResources
:api:testClasses
:api:test
:api:check
:api:build

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle :api:buildDependents
:shared:compileJava
:shared:processResources
:shared:classes
:shared:jar
:api:compileJava
:api:processResources
:api:classes
:api:jar
:api:assemble
:api:compileTestJava
:api:processTestResources
:api:testClasses
:api:test
:api:check
:api:build
:services:personService:compileJava
:services:personService:processResources
:services:personService:classes
:services:personService:jar
:services:personService:assemble
:services:personService:compileTestJava
:services:personService:processTestResources
:services:personService:testClasses
:services:personService:test
:services:personService:check
:services:personService:build
:services:personService:buildDependents
:api:buildDependents

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160727T052711Z" creationid="haohang" creationdate="20160727T052711Z">
        <seg>&gt; gradle :api:buildDependents
:shared:compileJava
:shared:processResources
:shared:classes
:shared:jar
:api:compileJava
:api:processResources
:api:classes
:api:jar
:api:assemble
:api:compileTestJava
:api:processTestResources
:api:testClasses
:api:test
:api:check
:api:build
:services:personService:compileJava
:services:personService:processResources
:services:personService:classes
:services:personService:jar
:services:personService:assemble
:services:personService:compileTestJava
:services:personService:processTestResources
:services:personService:testClasses
:services:personService:test
:services:personService:check
:services:personService:build
:services:personService:buildDependents
:api:buildDependents

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle :api:buildNeeded
:shared:compileJava
:shared:processResources
:shared:classes
:shared:jar
:api:compileJava
:api:processResources
:api:classes
:api:jar
:api:assemble
:api:compileTestJava
:api:processTestResources
:api:testClasses
:api:test
:api:check
:api:build
:shared:assemble
:shared:compileTestJava
:shared:processTestResources
:shared:testClasses
:shared:test
:shared:check
:shared:build
:shared:buildNeeded
:api:buildNeeded

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160727T052320Z" creationid="haohang" creationdate="20160727T052320Z">
        <seg>&gt; gradle :api:buildNeeded
:shared:compileJava
:shared:processResources
:shared:classes
:shared:jar
:api:compileJava
:api:processResources
:api:classes
:api:jar
:api:assemble
:api:compileTestJava
:api:processTestResources
:api:testClasses
:api:test
:api:check
:api:build
:shared:assemble
:shared:compileTestJava
:shared:processTestResources
:shared:testClasses
:shared:test
:shared:check
:shared:build
:shared:buildNeeded
:api:buildNeeded

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle disableMe
:disableMe SKIPPED

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T055753Z" creationid="msdx" creationdate="20141111T055753Z">
        <seg>&gt; gradle disableMe
:disableMe SKIPPED

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle distZip
:createDocs
:compileJava
:processResources UP-TO-DATE
:classes
:jar
:startScripts
:distZip

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150703T100713Z" creationid="haohang" creationdate="20150703T100713Z">
        <seg>&gt; gradle distZip
:createDocs
:compileJava
:processResources UP-TO-DATE
:classes
:jar
:startScripts
:distZip

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle distanceToIceberg
:bluewhale:distanceToIceberg
20 nautical miles
:krill:distanceToIceberg
5 nautical miles

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160715T080055Z" creationid="haohang" creationdate="20160715T080055Z">
        <seg>&gt; gradle distanceToIceberg
:bluewhale:distanceToIceberg
20 nautical miles
:krill:distanceToIceberg
5 nautical miles

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle hello
:hello
[ant:echo] Hello, from Ant

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T060919Z" creationid="msdx" creationdate="20141116T060919Z">
        <seg>&gt; gradle hello
:hello
[ant:echo] Hello, from Ant

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle hello
:hello
[ant:echo] Hello, from Ant
Hello, from Gradle

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T061047Z" creationid="msdx" creationdate="20141116T061047Z">
        <seg>&gt; gradle hello
:hello
[ant:echo] Hello, from Ant
Hello, from Gradle

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle hello
:hello
[ant:echo] hello from Ant

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141115T153419Z" creationid="msdx" creationdate="20141115T153419Z">
        <seg>&gt; gradle hello
:hello
[ant:echo] hello from Ant

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle hello
:intro
Hello, from Gradle
:hello
[ant:echo] Hello, from Ant

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T061147Z" creationid="msdx" creationdate="20141116T061147Z">
        <seg>&gt; gradle hello
:intro
Hello, from Gradle
:hello
[ant:echo] Hello, from Ant

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle hello -PskipHello
:hello SKIPPED

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T021034Z" creationid="msdx" creationdate="20141111T021034Z">
        <seg>&gt; gradle hello -PskipHello
:hello SKIPPED

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle intTestClasses
:compileIntTestJava
:processIntTestResources
:intTestClasses

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083426Z" creationid="msdx" creationdate="20150428T083426Z">
        <seg>&gt; gradle intTestClasses
:compileIntTestJava
:processIntTestResources
:intTestClasses

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle intro
:hello
[ant:echo] Hello, from Ant
:intro
Hello, from Gradle

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T061021Z" creationid="msdx" creationdate="20141116T061021Z">
        <seg>&gt; gradle intro
:hello
[ant:echo] Hello, from Ant
:intro
Hello, from Gradle

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle signArchives
:compileJava
:processResources
:classes
:jar
:signArchives

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160109T072552Z" creationid="95" creationdate="20160109T072552Z">
        <seg>&gt; gradle signArchives
:compileJava
:processResources
:classes
:jar
:signArchives

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle signStuffZip
:stuffZip
:signStuffZip

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160126T140544Z" creationid="95" creationdate="20160126T140544Z">
        <seg>&gt; gradle signStuffZip
:stuffZip
:signStuffZip

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle test
This is executed during the initialization phase.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T025352Z" creationid="haohang" creationdate="20160519T025352Z">
        <seg>&gt; gradle test
This is executed during the initialization phase.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle transform
:transform
Transforming source file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T060345Z" creationid="msdx" creationdate="20141111T060345Z">
        <seg>&gt; gradle transform
:transform
Transforming source file.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle transform
:transform UP-TO-DATE</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T061316Z" creationid="msdx" creationdate="20141111T061316Z">
        <seg>&gt; gradle transform
:transform UP-TO-DATE</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;a0&gt;&lt;c1&gt;CUnitTestSuite&lt;/c1&gt;&lt;/a0&gt; component has an associated &lt;a2&gt;&lt;c3&gt;Executable&lt;/c3&gt;&lt;/a2&gt; or &lt;a4&gt;&lt;c5&gt;Library&lt;/c5&gt;&lt;/a4&gt; component.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T150632Z" creationid="95" creationdate="20160504T150632Z">
        <seg>一个 &lt;a0&gt;&lt;c1&gt;CUnitTestSuite&lt;/c1&gt;&lt;/a0&gt; 组件会有一个相关联的 &lt;a2&gt;&lt;c3&gt;Executable&lt;/c3&gt;&lt;/a2&gt; 或 &lt;a4&gt;&lt;c5&gt;Library&lt;/c5&gt;&lt;/a4&gt; 组件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;a0&gt;complete overwrite&lt;/a0&gt; causes all existing content to be discarded, thereby losing any changes made directly in the IDE.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T064559Z" creationid="haohang" creationdate="20150625T064559Z">
        <seg>一个&lt;a0&gt;完全覆盖&lt;/a0&gt;会导致现有的所有内容被丢弃，从而丢失在 IDE 中直接做的任何修改。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;c0&gt;build type&lt;/c0&gt; determines various non-functional aspects of a binary, such as whether debug information is included, or what optimisation level the binary is compiled with.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160401T090147Z" creationid="haohang" creationdate="20160401T090147Z">
        <seg>一个 &lt;c0&gt;build type&lt;/c0&gt; 确定了一个二进制文件的各种非功能性方面，比如是否包含调试信息，或者使用什么样的优化级别来编译二进制文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;e0&gt;file collection&lt;/e0&gt; is simply a set of files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T145002Z" creationid="msdx" creationdate="20141112T144931Z">
        <seg>一个&lt;e0&gt;文件集合&lt;/e0&gt;只是表示一组文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;e0&gt;file tree&lt;/e0&gt; is a collection of files arranged in a hierarchy.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T161626Z" creationid="msdx" creationdate="20141112T161626Z">
        <seg>&lt;e0&gt;文件树&lt;/e0&gt;是按层次结构排序的文件集合。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A Gradle build has three distinct phases.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160518T032550Z" creationid="haohang" creationdate="20160518T032516Z">
        <seg>一个 Gradle 构建具有三个明显的阶段。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A Gradle dependency offers the &lt;c0&gt;configuration&lt;/c0&gt; property to declare this.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151227T155552Z" creationid="95" creationdate="20151227T155503Z">
        <seg>一个Gradle依赖提供了&lt;c0&gt;configuration&lt;/c0&gt; 属性来声明它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A Maven repository.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T095629Z" creationid="haohang" creationdate="20150807T095629Z">
        <seg>一个 Maven 仓库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A Sonar property value set via a system property overrides any value set in a build script (for the same property).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150525T234241Z" creationid="haohang" creationdate="20150525T234241Z">
        <seg>通过一个系统属性设置的 Sonar 属性值将覆盖构建脚本中设置的任何值（同样的属性名称）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A basic Groovy project</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163716Z" creationid="msdx" creationdate="20141109T163711Z">
        <seg>一个基本的Groovy 项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A basic Java project</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163435Z" creationid="msdx" creationdate="20141109T163435Z">
        <seg>一个基本的 Java 项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A binary store of resolved module meta-data, including the results of resolving dynamic versions, module descriptors, and artifacts.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T042820Z" creationid="95" creationdate="20151129T042820Z">
        <seg>解析的模块元数据的二进制存储，包括解析动态版本、 模块描述符和构件的结果。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A build depending on both &lt;c0&gt;module-a&lt;/c0&gt; and &lt;c1&gt;module-b&lt;/c1&gt; will obtain different versions of libraries within the releasable unit.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T061243Z" creationid="95" creationdate="20151115T061243Z">
        <seg>一个依赖于&lt;c0&gt;module-a&lt;/c0&gt;和&lt;c1&gt;module-b&lt;/c1&gt;的构建，将在可发布单位内获得这个库的不同版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A collection of files with names like &lt;c0&gt;commons-beanutils-1.3.jar&lt;/c0&gt; or a collection of files with names like &lt;c1&gt;spring.jar&lt;/c1&gt;?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150716T092438Z" creationid="haohang" creationdate="20150716T092438Z">
        <seg>一个文件命名为 &lt;c0&gt;beanutils-beanutils-1.3.jar&lt;/c0&gt; 的集合，还是文件命名为 &lt;c1&gt;spring.jar&lt;/c1&gt; 的集合？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A common example is a native executable component that uses functions provided by a separate native library component.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160325T032650Z" creationid="haohang" creationdate="20160325T032650Z">
        <seg>一个常见的例子是一个本地可执行组件，使用了由一个单独的本地库组件提供的功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A common usage pattern is to only sign build artifacts under certain conditions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160126T141141Z" creationid="95" creationdate="20160126T141141Z">
        <seg>常见的使用模式是只在一定条件下签名构建的artifacts。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A copy spec inherits its destination path, include patterns, exclude patterns, copy actions, name mappings and filters.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T143851Z" creationid="msdx" creationdate="20141113T141351Z">
        <seg>一个复制规范继承其目标路径，包含模式，排除模式，复制操作，名称映射和过滤器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A copy spec is represented by the &lt;a2&gt;&lt;c3&gt;CopySpec&lt;/c3&gt;&lt;/a2&gt; interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T124233Z" creationid="msdx" creationdate="20141113T124233Z">
        <seg>一个复制规范通过 &lt;a2&gt;&lt;c3&gt;CopySpec&lt;/c3&gt;&lt;/a2&gt; 接口来表示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A couple of examples are shown below.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T091335Z" creationid="95" creationdate="20151115T091335Z">
        <seg>下面展示了几个例子。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A dependency of a first level dependency might also be a first level dependency itself, or it might be a transitive dependency of yet another first level dependency.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150721T011234Z" creationid="haohang" creationdate="20150721T011234Z">
        <seg>第一级依赖的依赖项也可能是第一级依赖本身，或者也可能是另一个第一级依赖的传递依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A dependency on a set of files on the local filesystem.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T080441Z" creationid="haohang" creationdate="20150722T080441Z">
        <seg>对本地文件系统中的一些文件的依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A dependency on an external module in some repository.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T080427Z" creationid="haohang" creationdate="20150722T080346Z">
        <seg>对一些仓库中的外部模块的依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A dependency on an external module, where the artifacts are located in some repository but the module meta-data is specified by the local build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T080603Z" creationid="haohang" creationdate="20150722T080603Z">
        <seg>对外部模块的依赖，该块部模块的 artifacts 存储于一些仓库中，但是模块的元数据由本地构建指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A dependency on another project in the same build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T080416Z" creationid="haohang" creationdate="20150722T080416Z">
        <seg>在同一个构建中对另一个项目的依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A dependency on the API of the current Gradle version.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T080646Z" creationid="haohang" creationdate="20150722T080646Z">
        <seg>对当前的 Gradle 版本的 API 的依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A dependency on the Groovy version used by the current Gradle version.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T080827Z" creationid="haohang" creationdate="20150722T080827Z">
        <seg>对当前的 Gradle 所使用的 Groovy 版本的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A dependency resolve rule is executed for each resolved dependency, and offers a powerful api for manipulating a requested dependency prior to that dependency being resolved.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T055618Z" creationid="95" creationdate="20151115T055618Z">
        <seg>一个依赖解析规则为每一个解析依赖执行，并提供功能强大的 api 用于在解析依赖之前处理这个依赖的请求。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A deployment descriptor with sensible defaults named &lt;c0&gt;application.xml&lt;/c0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T142107Z" creationid="msdx" creationdate="20150504T142107Z">
        <seg>部署描述符，它有一个合理的名为&lt;c0&gt;application.xml&lt;/c0&gt;的默认值</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A description for the project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T044345Z" creationid="msdx" creationdate="20141108T044345Z">
        <seg>项目的描述。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A dynamic version can be either a version range (e.g. &lt;c2&gt;2.+&lt;/c2&gt;) or it can be a placeholder for the latest version available (e.g. &lt;c3&gt;latest.integration&lt;/c3&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T011437Z" creationid="haohang" creationdate="20150722T011437Z">
        <seg>一个动态的版本可以是一个版本范围（例如&lt;c2&gt;2.+&lt;/c2&gt;），也可以是表示可用的最新版本的占位符（例如&lt;c3&gt;latest.integration&lt;/c3&gt;）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A file collection is iterable, and can be converted to a number of other types using the &lt;c0&gt;as&lt;/c0&gt; operator.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T155653Z" creationid="msdx" creationdate="20141112T155548Z">
        <seg>一个文件集合是可迭代的，并且可以使用&lt;c0&gt;as&lt;/c0&gt;操作符转换为其他类型的对象集合。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A file-based store of downloaded artifacts, including binaries like jars as well as raw downloaded meta-data like POM files and Ivy files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T042341Z" creationid="95" creationdate="20151129T042322Z">
        <seg>一个基于文件的下载构件存储，包括像jars这样的二进制文件，以及像 POM 文件以及 Ivy 文件这样的原始下载的元数据。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A fresh resolve will be performed against all configured repositories, with dynamic versions recalculated, modules refreshed, and artifacts downloaded.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T154300Z" creationid="95" creationdate="20151129T154300Z">
        <seg>对所有已配置的仓库执行新的解析，通过重新计算动态版本，模块刷新，以及下载构件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A list of available Sonar properties can be found in the &lt;a0&gt;Sonar documentation&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T101914Z" creationid="msdx" creationdate="20150512T101431Z">
        <seg>Sonar 的可用属性的列表可以在&lt;a0&gt;Sonar 文档&lt;/a0&gt;中找到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A module dependency has an API which allows for further configuration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150724T034716Z" creationid="haohang" creationdate="20150724T034716Z">
        <seg>模块依赖有一个 API，用于进行进一步的配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A module's status and status scheme are taken into consideration when a &lt;c0&gt;latest&lt;/c0&gt; version selector is resolved.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T013527Z" creationid="95" creationdate="20151129T013527Z">
        <seg>一个模块的状态以及状态模式，会在解析 &lt;c0&gt;latest&lt;/c0&gt; 版本选择器时考虑到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A multi-project build is a build where you build more than one project during a single execution of Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T030152Z" creationid="haohang" creationdate="20160519T030011Z">
        <seg>多项目构建是指在一次Gradle执行中，构建多个项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A multiproject build must have a &lt;c0&gt;settings.gradle&lt;/c0&gt; file in the root project of the multiproject hierarchy.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T024919Z" creationid="haohang" creationdate="20160519T024919Z">
        <seg>一个多项目的构建，必须在这个多项目的层次结构中的根目录下有一个&lt;c0&gt;settings.gradle&lt;/c0&gt; 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A native binary project defines a set of &lt;a0&gt;&lt;c1&gt;Executable&lt;/c1&gt;&lt;/a0&gt; and &lt;a2&gt;&lt;c3&gt;Library&lt;/c3&gt;&lt;/a2&gt; components, each of which Gradle maps to a number of &lt;a4&gt;&lt;c5&gt;NativeBinary&lt;/c5&gt;&lt;/a4&gt; outputs.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160219T064641Z" creationid="95" creationdate="20160128T153607Z">
        <seg>一个原生二进制project定义了一组&lt;a0&gt;&lt;c1&gt;Executable&lt;/c1&gt;&lt;/a0&gt;和&lt;a2&gt;&lt;c3&gt;Library&lt;/c3&gt;&lt;/a2&gt;组件，每一个的 Gradle 都映射大量的&lt;a4&gt;&lt;c5&gt;NativeBinary&lt;/c5&gt;&lt;/a4&gt;输出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A native binary project will contain one or more named &lt;c0&gt;FunctionalSourceSet&lt;/c0&gt; instances (eg 'main', 'test', etc), each of which can contain &lt;c1&gt;LanguageSourceSet&lt;/c1&gt;s containing C++, C, Assembler, Objective-C or Objective-C++ source files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160219T082804Z" creationid="haohang" creationdate="20160219T082747Z">
        <seg>一个原生二进制project 将包含一个或多个叫做&lt;c0&gt;FunctionalSourceSet&lt;/c0&gt;的实例（如"main"，"test"等），其中每一个都可以包含含有C++，C，Assembler，Objective-C或Objective-C++源代码的&lt;c1&gt;LanguageSourceSet&lt;/c1&gt;s。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A one element set with the project the plugin was applied to.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T061856Z" creationid="haohang" creationdate="20150628T061856Z">
        <seg>一个元素集合，用于保存将要应用该插件的project</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A plugin is simply any class that implements the &lt;a0&gt;&lt;c1&gt;Plugin&lt;/c1&gt;&lt;/a0&gt; interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141123T134508Z" creationid="msdx" creationdate="20141122T162925Z">
        <seg>一个插件是任何实现了 &lt;a0&gt;&lt;c1&gt;Plugin&lt;/c1&gt;&lt;/a0&gt; 接口的简单的类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A pre-configured repository that looks for dependencies in Bintray's JCenter.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T095555Z" creationid="haohang" creationdate="20150807T094212Z">
        <seg>一个会在 Bintray 的 Jcenter 查找依赖的预配置仓库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A pre-configured repository that looks for dependencies in Maven Central.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T094223Z" creationid="haohang" creationdate="20150807T094157Z">
        <seg>一个会在 Maven 中央仓中查找依赖的预配置仓库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A pre-configured repository that looks for dependencies in the local Maven repository.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T095616Z" creationid="haohang" creationdate="20150807T095616Z">
        <seg>一个会在本地 Maven 仓库中查找依赖的预配置仓库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A project can have as many as JAR archives as you want.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T145558Z" creationid="msdx" creationdate="20141113T145558Z">
        <seg>一个项目可以有你所想要的一样多的 JAR 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A project can publish as many artifacts as it wants.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151220T123450Z" creationid="95" creationdate="20151220T123423Z">
        <seg>一个项目可以发布为它想要的所有构件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A project has a path which denotes the position of the project in the multi-project build tree.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T040929Z" creationid="haohang" creationdate="20160519T040929Z">
        <seg>一个项目有一个路径，表示在多项目构建树中的位置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A project path has the following pattern: It starts always with a colon, which denotes the root project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160715T092127Z" creationid="haohang" creationdate="20160715T092127Z">
        <seg>一个项目路径有以下模式︰它总是始于一个冒号，表示根项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A project's configurations are managed by a &lt;c0&gt;configurations&lt;/c0&gt; object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T075655Z" creationid="haohang" creationdate="20150722T075655Z">
        <seg>一个项目的配置被一个 &lt;c0&gt;configurations&lt;/c0&gt; 对象所管理。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A proper build system has to be designed to be flexible, and Gradle can handle any situation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150716T035726Z" creationid="haohang" creationdate="20150716T035726Z">
        <seg>一个正确的构建系统必须被设计得很灵活，而 Gradle 可以应付任何情况。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A repository is identified by its URL, type and layout.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T045721Z" creationid="95" creationdate="20151129T045704Z">
        <seg>一个仓库由它的 URL、类型和布局来区分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A set of sources may depend on header files provided by another binary component within the same project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160325T025747Z" creationid="haohang" creationdate="20160325T025747Z">
        <seg>一组源文件可能依赖于在同一个项目中由另一个二进制组件提供的头文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A shortcut task definition</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162411Z" creationid="msdx" creationdate="20141109T162355Z">
        <seg>快速任务定义</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A similar mechanism exists for selecting &lt;a0&gt;&lt;c1&gt;TargetedNativeComponent.targetBuildTypes()&lt;/c1&gt;&lt;/a0&gt; and &lt;a2&gt;&lt;c3&gt;TargetedNativeComponent.targetFlavors()&lt;/c3&gt;&lt;/a2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T083111Z" creationid="haohang" creationdate="20160408T083111Z">
        <seg>在选择 &lt;a0&gt;&lt;c1&gt;TargetedNativeComponent.targetBuildTypes()&lt;/c1&gt;&lt;/a0&gt; and和&lt;a2&gt;&lt;c3&gt;TargetedNativeComponent.targetFlavors()&lt;/c3&gt;&lt;/a2&gt;上也有类似的机制。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A simple option for logging in your build file is to write messages to standard output.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T033750Z" creationid="msdx" creationdate="20141116T122326Z">
        <seg>在构建文件中打印日志的一个简单方法是把消息写到标准输出中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A simple repository on the local filesystem.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T095724Z" creationid="haohang" creationdate="20150807T095724Z">
        <seg>一个在本地文件系统上的简单的仓库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A single build may utilize different tool chains to build variants for different platforms.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T085038Z" creationid="haohang" creationdate="20160408T085038Z">
        <seg>一个构建可以使用不同的工具链来构建不同平台的变种。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A source set has an associated compile classpath, and runtime classpath.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T074343Z" creationid="Administrator" creationdate="20150425T074343Z">
        <seg>一个源集有一个相关联的编译类路径和运行时类路径。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A source set is simply a group of source files which are compiled and executed together.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T074131Z" creationid="Administrator" creationdate="20150425T074131Z">
        <seg>一个源集只是一组用于编译并一起执行的源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A task parameter will override any corresponding value set in the build script.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T053932Z" creationid="msdx" creationdate="20150513T053825Z">
        <seg>任务参数将覆盖任何在构建脚本中设置的相应值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A task that aggregates the results of all tasks of a particular type: eg.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T145334Z" creationid="msdx" creationdate="20141110T145038Z">
        <seg>一个任务聚合了某一特定类型的所有任务的结果：如，</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A task with no defined outputs will &lt;s0&gt;&lt;e1&gt;never&lt;/e1&gt;&lt;/s0&gt; be considered up-to-date.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T061602Z" creationid="msdx" creationdate="20141111T061602Z">
        <seg>一个没有定义输出的任务将&lt;s0&gt;&lt;e1&gt;永远不会&lt;/e1&gt;&lt;/s0&gt;被当作是最新的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A task with only outputs defined will be considered up-to-date if those outputs are unchanged since the previous build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T063025Z" creationid="msdx" creationdate="20141111T063025Z">
        <seg>一个只定义了输出的任务，如果自上一次构建以来它的输出没有改变，那么它会被判定为最新状态。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A typical base line configuration includes connection settings for the Sonar server and database.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T063329Z" creationid="msdx" creationdate="20150513T062624Z">
        <seg>一个典型的基线配置包括了Sonar 服务器和数据库的连接设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A very common way for projects to be coupled is by using configuration injection (&lt;a0&gt;Section 56.1, “Cross project configuration”&lt;/a0&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T093500Z" creationid="haohang" creationdate="20160726T093309Z">
        <seg>使项目之间耦合的一种很常的方式是使用配置注入（&lt;a0&gt;第56.1节， “跨项目配置”&lt;/a0&gt;）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A very nice and expressive way to provide such tasks are task rules:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T064945Z" creationid="msdx" creationdate="20141111T064945Z">
        <seg>任务规则是提供此类任务的一个很好的表达方式：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ANTLR grammar files for the given source set.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T095202Z" creationid="haohang" creationdate="20150625T095202Z">
        <seg>对于给定的source set 的 ANTLR 语法文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>API</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T030407Z" creationid="msdx" creationdate="20150501T030407Z">
        <seg>17.4. API</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>About this user guide</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T161848Z" creationid="msdx" creationdate="20141109T161848Z">
        <seg>关于本用户指南</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Above copying the starting scripts to the &lt;c5&gt;bin&lt;/c5&gt; dir and necessary jars to &lt;c6&gt;lib&lt;/c6&gt; in the distribution, all of the files from the &lt;c7&gt;src/dist&lt;/c7&gt; directory are also copied.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150703T100214Z" creationid="haohang" creationdate="20150703T054702Z">
        <seg>以上在 distribution 中将启动脚本复制到&lt;c5&gt;bin&lt;/c5&gt;目录，并且将必要的 jar 文件复制到&lt;c6&gt;lib&lt;/c6&gt;目录，所有在&lt;c7&gt;src/dist&lt;/c7&gt;目录的文件也会被复制。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Accessing the web via a proxy</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150508T131824Z" creationid="msdx" creationdate="20150508T131824Z">
        <seg>通过代理访问网站</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Add dependency configurations to the project (see &lt;a0&gt;Section 8.3, “Dependency configurations”&lt;/a0&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141123T151026Z" creationid="msdx" creationdate="20141123T150952Z">
        <seg>向项目中添加依赖配置 （见&lt;a0&gt;第 8.3 节，“依赖配置”&lt;/a0&gt;）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Add new properties and methods to existing type via extensions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141123T151114Z" creationid="msdx" creationdate="20141123T150958Z">
        <seg>通过扩展对现有类型添加新的属性和方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Add tasks to the favorites (see Favorites tab)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T154012Z" creationid="msdx" creationdate="20141105T154012Z">
        <seg>将任务添加到收藏夹（见收藏夹（Favourites）选项卡）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Add tasks to the project (e.g. compile, test)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141123T150901Z" creationid="msdx" creationdate="20141123T150901Z">
        <seg>将任务添加到项目 （如编译、 测试）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Add your own new language elements or enhance the existing ones.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141101T035422Z" creationid="msdx" creationdate="20141101T035422Z">
        <seg>你可以添加新的语言元素，或增强现有的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Added a new domain object type: &lt;a0&gt;&lt;c1&gt;SourceSet&lt;/c1&gt;&lt;/a0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141124T074017Z" creationid="msdx" creationdate="20141124T074017Z">
        <seg>添加了一个新的域对象类型： &lt;a0&gt; &lt;c1&gt;SourceSet&lt;/c1&gt; &lt;/a0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adding a JAR containing the classes of a source set:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T133345Z" creationid="Administrator" creationdate="20150427T133345Z">
        <seg>添加一个包含了源集的类的JAR包</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adding a description to a task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150330T141030Z" creationid="Administrator" creationdate="20150330T141030Z">
        <seg>向任务中添加描述</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adding a test suite to run the tests in a source set:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T133518Z" creationid="Administrator" creationdate="20150427T133518Z">
        <seg>添加一个测试套件以运行一个源集里的测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adding dependencies to a task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150330T141013Z" creationid="Administrator" creationdate="20150330T141013Z">
        <seg>向任务添加依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adding the &lt;c0&gt;-a&lt;/c0&gt; option will cause Gradle to use cached jars to resolve any project lib dependencies and not try to re-build the depended on projects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160727T051902Z" creationid="haohang" creationdate="20160727T051902Z">
        <seg>添加&lt;c0&gt;-a&lt;/c0&gt;选项会导致 Gradle 使用缓存的jar 来解决任何项目库依赖，并且不会尝试重新生构建所依赖的项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Additional dependencies for compiling tests.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T084246Z" creationid="Administrator" creationdate="20150426T084246Z">
        <seg>用于编译测试的其他依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Additional dependencies for running tests only.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T084313Z" creationid="Administrator" creationdate="20150426T084313Z">
        <seg>只用于运行测试的其他依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Additional source sets can be added as needed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T092512Z" creationid="msdx" creationdate="20150512T092512Z">
        <seg>根据需要，可以添加额外的 source sets。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Additionally Gradle provides various convenience method to add pre-configured repositories.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T093616Z" creationid="haohang" creationdate="20150807T091546Z">
        <seg>另外，Gradle 提供了各种方便的方法来添加预配置的仓库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Additionally, a property named &lt;c2&gt;purpose&lt;/c2&gt; is added to each source set by setting &lt;c3&gt;ext.purpose&lt;/c3&gt; to &lt;c4&gt;null&lt;/c4&gt; (&lt;c5&gt;null&lt;/c5&gt; is a permissible value).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T054144Z" creationid="msdx" creationdate="20141108T054144Z">
        <seg>此外，通过将&lt;c3&gt;ext.purpose&lt;/c3&gt;设置为&lt;c4&gt;null&lt;/c4&gt;（&lt;c5&gt;null&lt;/c5&gt;是一个允许的值），一个名为&lt;c2&gt;purpose&lt;/c2&gt;的属性被添加到每个源码集（source set）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds C source compilation capabilities to a project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141209T074138Z" creationid="msdx" creationdate="20141209T074050Z">
        <seg>向项目添加 C语言源代码编译功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds C++ source compilation capabilities to a project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141209T074135Z" creationid="msdx" creationdate="20141209T074135Z">
        <seg>向项目添加 c++ 源代码编译功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds Groovy configuration to &lt;c0&gt;.project&lt;/c0&gt; file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T003813Z" creationid="haohang" creationdate="20150603T003813Z">
        <seg>将 Groovy 配置添加到&lt;c0&gt;.project&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds Java compilation, testing and bundling capabilities to a project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141126T120948Z" creationid="msdx" creationdate="20141126T120948Z">
        <seg>向一个项目添加 Java 编译、 测试和捆绑的能力。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds Java configuration to &lt;c0&gt;.project&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T003756Z" creationid="haohang" creationdate="20150603T003756Z">
        <seg>将 Java 配置添加到&lt;c0&gt;.project&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds Java configuration to the module and project files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T071551Z" creationid="haohang" creationdate="20150625T071551Z">
        <seg>将 Java 配置添加到模块和项目文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds Objective-C source compilation capabilities to a project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141209T074158Z" creationid="msdx" creationdate="20141209T074158Z">
        <seg>向项目中添加 Objective-C 源代码编译功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds Objective-C++ source compilation capabilities to a project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141209T074223Z" creationid="msdx" creationdate="20141209T074223Z">
        <seg>向项目中添加 Objective-C++ 源代码编译功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds Scala support to &lt;c0&gt;.project&lt;/c0&gt; and &lt;c1&gt;.classpath&lt;/c1&gt; files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T003830Z" creationid="haohang" creationdate="20150603T003830Z">
        <seg>添加 Scala 支持到&lt;c0&gt;.project&lt;/c0&gt;和&lt;c1&gt;.classpath&lt;/c1&gt;文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds a &lt;a0&gt;&lt;c1&gt;Wrapper&lt;/c1&gt;&lt;/a0&gt; task for generating Gradle wrapper files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T040533Z" creationid="Administrator" creationdate="20150425T040533Z">
        <seg>添加一个用于生成 Gradle wrapper 文件的&lt;a0&gt;&lt;c1&gt;Wrapper&lt;/c1&gt;&lt;/a0&gt;任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds all &lt;c0&gt;.java&lt;/c0&gt; files found in the Groovy source directories.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T094123Z" creationid="msdx" creationdate="20150429T094037Z">
        <seg>添加在 Groovy 源目录中找到的所有&lt;c0&gt;.java&lt;/c0&gt;文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds all &lt;c0&gt;.java&lt;/c0&gt; files found in the Scala source directories.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150430T154946Z" creationid="msdx" creationdate="20150430T154946Z">
        <seg>添加在 Scala 源目录中找到的所有&lt;c0&gt;.java&lt;/c0&gt;文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds all source files found in the Groovy source directories.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T094141Z" creationid="msdx" creationdate="20150429T094056Z">
        <seg>添加在 Groovy 的源目录中找到的所有源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds all source files found in the Scala source directories.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150430T154952Z" creationid="msdx" creationdate="20150430T154952Z">
        <seg>添加在 Scala 的源目录中找到的所有源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds ear application support to &lt;c0&gt;.project&lt;/c0&gt; file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T003916Z" creationid="haohang" creationdate="20150603T003905Z">
        <seg>将 ear 应用程序支持添加到&lt;c0&gt;.project&lt;/c0&gt;文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds integration with Visual Studio.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T040454Z" creationid="Administrator" creationdate="20150425T040454Z">
        <seg>添加对 Visual Studio 的集成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds native assembly language capabilities to a project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141209T074100Z" creationid="msdx" creationdate="20141209T073748Z">
        <seg>向项目添加本机汇编语言的功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds some shared convention properties to the project, relating to report generation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T072515Z" creationid="Administrator" creationdate="20150425T072515Z">
        <seg>将一些共享的公约属性添加到项目中，它们与报告的生成有关。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds support for assembling web application WAR files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T031701Z" creationid="Administrator" creationdate="20150425T031701Z">
        <seg>添加用于组装 web 应用程序的 WAR 文件的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds support for building Groovy projects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141209T073650Z" creationid="msdx" creationdate="20141126T121056Z">
        <seg>添加对 Groovy 项目构建的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds support for building J2EE applications.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T031446Z" creationid="Administrator" creationdate="20150425T031446Z">
        <seg>添加用于构建 J2EE 应用程序的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds support for building OSGi bundles.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T031641Z" creationid="Administrator" creationdate="20150425T031641Z">
        <seg>添加构建 OSGi 捆绑包的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds support for building Scala projects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141209T073656Z" creationid="msdx" creationdate="20141126T121125Z">
        <seg>添加对 Scala 项目构建的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds support for building ZIP and TAR distributions for a Java library.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T031930Z" creationid="Administrator" creationdate="20150425T031930Z">
        <seg>添加构建一个Java类库的 ZIP 和 TAR 分发包的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds support for building ZIP and TAR distributions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T031814Z" creationid="Administrator" creationdate="20150425T031814Z">
        <seg>添加构建 ZIP 和 TAR 分发包的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds support for generating parsers using &lt;a0&gt;Antlr&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141209T073627Z" creationid="msdx" creationdate="20141209T073544Z">
        <seg>添加对使用&lt;a0&gt;Antlr&lt;/a0&gt;作为生成解析器的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds support for including Windows resources in native binaries.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141209T074414Z" creationid="msdx" creationdate="20141209T074414Z">
        <seg>添加对在本地bin文件中包含 Windows 资源的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds support for initializing a new Gradle build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T040119Z" creationid="Administrator" creationdate="20150425T040119Z">
        <seg>添加用于初始化一个新 Gradle 构建的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds support for publishing artifacts to Maven repositories.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T031622Z" creationid="Administrator" creationdate="20150425T031622Z">
        <seg>添加用于将项目发布到 Maven 仓库的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds support for running &lt;a0&gt;CUnit&lt;/a0&gt; tests.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T040302Z" creationid="Administrator" creationdate="20150425T040302Z">
        <seg>添加用于运行&lt;a0&gt;CUnit&lt;/a0&gt;测试的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds tasks for running and bundling a Java project as a command-line application.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T031425Z" creationid="Administrator" creationdate="20150425T031425Z">
        <seg>添加了一些任务，用于运行和捆绑一个Java项目作为命令行应用程序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds the Groovy source sets concept to the project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T073921Z" creationid="Administrator" creationdate="20150425T072049Z">
        <seg>向项目中添加Groovy 的源集概念。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds the Scala source sets concept to the project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T073933Z" creationid="Administrator" creationdate="20150425T072323Z">
        <seg>向项目中添加Scala 的源集概念。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds the ability to digitally sign built files and artifacts.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T035601Z" creationid="Administrator" creationdate="20150425T035601Z">
        <seg>添加对生成的文件或构件进行数字签名的功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds the source sets concept to the project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T073912Z" creationid="Administrator" creationdate="20150425T071951Z">
        <seg>对项目添加源集的概念。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds the standard lifecycle tasks and configures reasonable defaults for the archive tasks:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T041156Z" creationid="Administrator" creationdate="20150425T041156Z">
        <seg>添加标准的生命周期任务，并为归档任务默认进行合理的配置：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adds web application support to &lt;c0&gt;.project&lt;/c0&gt; file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T003840Z" creationid="haohang" creationdate="20150603T003840Z">
        <seg>将 web 应用程序支持添加到&lt;c0&gt;.project&lt;/c0&gt;文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adjusts java compiler settings</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T093736Z" creationid="haohang" creationdate="20150707T093736Z">
        <seg>调整 java 编译器设置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>After all Gradle is a general purpose build tool at its core, so the projects don't have to be java projects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160522T024945Z" creationid="95" creationdate="20160522T024945Z">
        <seg>在全部 Gradle 的核心都是作为一个通用构建工具后，我们的项目并不一定得是个 java 项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>After importing to eclipse your war/ear projects should be configured to work with WTP.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T035147Z" creationid="Administrator" creationdate="20150425T035147Z">
        <seg>你的war/ear项目在导入eclipse 后，应配置为能在 WTP 中使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>After the sonarProperties block has been evaluated, values are converted to Strings as follows: Collection values are (recursively) converted to comma-separated Strings, and all other values are converted by calling their &lt;c3&gt;toString()&lt;/c3&gt; method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150525T233042Z" creationid="haohang" creationdate="20150525T233042Z">
        <seg>SonarProperties 块在经过评估后，这些值值被转换为字符串，如下所示： 集合的值（递归） 转换为以逗号分隔的字符串，其他所有的值通过调用其&lt;c3&gt;tostring ()&lt;/c3&gt;方法进行转换。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Again, this method accepts any of the types supported by the &lt;a0&gt;files()&lt;/a0&gt; method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T123615Z" creationid="msdx" creationdate="20141113T123615Z">
        <seg>再者，这个方法接受&lt;a0&gt;files()&lt;/a0&gt;方法所支持的任何类型的参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All &lt;c0&gt;.java&lt;/c0&gt; files of this source set.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T052931Z" creationid="Administrator" creationdate="20150427T052931Z">
        <seg>该源集的所有&lt;c0&gt;.java&lt;/c0&gt; 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All Checkstyle tasks, including &lt;c0&gt;checkstyleMain&lt;/c0&gt; and &lt;c1&gt;checkstyleTest&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T132536Z" creationid="msdx" creationdate="20150505T132536Z">
        <seg>所有 Checkstyle tasks，包括&lt;c0&gt;checkstyleMain&lt;/c0&gt;和&lt;c1&gt;checkstyleTest&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All CodeNarc tasks, including &lt;c0&gt;codenarcMain&lt;/c0&gt; and &lt;c1&gt;codenarcTest&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T133359Z" creationid="msdx" creationdate="20150505T133359Z">
        <seg>所有的 CodeNarc 任务，包括&lt;c0&gt;codenarcMain&lt;/c0&gt;和&lt;c1&gt;codenarcTest&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All FindBugs tasks, including &lt;c0&gt;findbugsMain&lt;/c0&gt; and &lt;c1&gt;findbugsTest&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T133809Z" creationid="msdx" creationdate="20150505T133809Z">
        <seg>所有 FindBugs 任务，包括&lt;c0&gt;findbugsMain&lt;/c0&gt;和&lt;c1&gt;findbugsTest&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All Groovy source files of this source set.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T093538Z" creationid="msdx" creationdate="20150429T093538Z">
        <seg>该source set 中的所有 Groovy 源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All JDepend tasks, including &lt;c0&gt;jdependMain&lt;/c0&gt; and &lt;c1&gt;jdependTest&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T134431Z" creationid="msdx" creationdate="20150505T134431Z">
        <seg>所有 JDepend 任务，包括&lt;c0&gt;jdependMain&lt;/c0&gt;和&lt;c1&gt;jdependTest&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All PMD tasks, including &lt;c0&gt;pmdMain&lt;/c0&gt; and &lt;c1&gt;pmdTest&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T135651Z" creationid="msdx" creationdate="20150505T135651Z">
        <seg>所有的 PMD 任务，包括&lt;c0&gt;pmdMain&lt;/c0&gt;和&lt;c1&gt;pmdTest&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All Scala source files of this source set.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150430T154854Z" creationid="msdx" creationdate="20150430T154854Z">
        <seg>该source set 中的所有 Scala 源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All archive tasks in the project, including &lt;c0&gt;jar&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T010127Z" creationid="Administrator" creationdate="20150426T010127Z">
        <seg>项目中的所有归档项目，包括&lt;c0&gt;jar&lt;/c0&gt;任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All attributes for a dependency are optional, except the name.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T103457Z" creationid="haohang" creationdate="20150801T103114Z">
        <seg>一个依赖的所有属性都是可选的，除了 name。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All build setup types include the setup of the Gradle Wrapper.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T074654Z" creationid="haohang" creationdate="20150707T074654Z">
        <seg>所有构建安装类型都包括 Gradle Wrapper 的安装。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All dependencies in the &lt;c2&gt;deploy&lt;/c2&gt; configuration are placed in the root of the EAR archive, and are &lt;s3&gt;&lt;e4&gt;not&lt;/e4&gt;&lt;/s3&gt; transitive.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T141234Z" creationid="msdx" creationdate="20150503T095652Z">
        <seg>所有在&lt;c2&gt;deploy&lt;/c2&gt;配置中的依赖项都放在 EAR 文件的根目录中，并且是&lt;s3&gt;&lt;e4&gt;不可&lt;/e4&gt;&lt;/s3&gt;传递的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All dependencies in the &lt;c5&gt;earlib&lt;/c5&gt; configuration are placed in the 'lib' directory in the EAR archive and &lt;s6&gt;&lt;e7&gt;are&lt;/e7&gt;&lt;/s6&gt; transitive.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T141319Z" creationid="msdx" creationdate="20150504T141319Z">
        <seg>所有在 &lt;c5&gt;earlib&lt;/c5&gt; 配置的依赖都放在 EAR 文件的“lib”目录中，并且是 &lt;s6&gt;&lt;e7&gt;可&lt;/e7&gt;&lt;/s6&gt; 传递的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All enhanced objects in Gradle's domain model can hold extra user-defined properties.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T050420Z" creationid="msdx" creationdate="20141108T045410Z">
        <seg>Gradle 的域模型中，所有增强的对象都可以容纳用户定义的额外的属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All files stored in &lt;c0&gt;src/dist&lt;/c0&gt; will be added to the root of the distribution.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150702T104440Z" creationid="haohang" creationdate="20150702T104348Z">
        <seg>所有存储在 &lt;c0&gt;src/dist&lt;/c0&gt; 的文件都将添加到 distribution 的根目录中</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All in all, your build is less maintainable and reliable than it could be when using client modules.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151201T070323Z" creationid="haohang" creationdate="20151201T070323Z">
        <seg>总之，比起使用客户端模块，你的构建不再那么容易维护和可靠。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All matching task names of the project hierarchy starting with the current dir are executed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160715T091607Z" creationid="haohang" creationdate="20160715T091607Z">
        <seg>从当前目录开始的该项目层级里，所有名称匹配的任务会被执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All of Gradle's scripting features can be leveraged to configure Sonar Runner as needed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T055919Z" creationid="msdx" creationdate="20150513T055919Z">
        <seg>根据需要，可以利用 Gradle 脚本的所有特性去配置 Sonar Runner。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All of Gradle's tasks share a common API and you can create dependencies between them.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T123916Z" creationid="msdx" creationdate="20141111T123916Z">
        <seg>Gradle 的所有任务共享一个公共 API，您可以创建它们之间的依赖性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All of the Gradle build language is available in the external script.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T152336Z" creationid="msdx" creationdate="20141109T152336Z">
        <seg>Gradle 构建语言的所有内容在外部脚本中也可以使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All of the artifacts for the module are then requested from the &lt;s0&gt;&lt;e1&gt;same repository&lt;/e1&gt;&lt;/s0&gt; that was chosen in the process above.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T053831Z" creationid="95" creationdate="20151115T053546Z">
        <seg>然后这个模块的所有artifact将从上面的过程所选择的 &lt;s0&gt;&lt;e1&gt;同一个仓库&lt;/e1&gt;&lt;/s0&gt; 中请求。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All of the files from the &lt;c0&gt;src/dist&lt;/c0&gt; directory are copied.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T070424Z" creationid="haohang" creationdate="20150707T070424Z">
        <seg>所有在&lt;c0&gt;src/dist&lt;/c0&gt;目录中的文件都会被复制。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All of the files in the "&lt;c0&gt;src/&lt;e1&gt;&lt;c2&gt;$distribution.name&lt;/c2&gt;&lt;/e1&gt;/dist&lt;/c0&gt;" directory will automatically be included in the distribution.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150701T031747Z" creationid="haohang" creationdate="20150701T031747Z">
        <seg>所有在”&lt;c0&gt;src/&lt;e1&gt;&lt;c2&gt;$distribution.name&lt;/c2&gt;&lt;/e1&gt;/dist&lt;/c0&gt;“目录中的文件都会被自动地包含在 distribution 中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All of the useful features, such as the ability to compile Java code for example, are added by &lt;s0&gt;&lt;e1&gt;plugins&lt;/e1&gt;&lt;/s0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141122T161403Z" creationid="msdx" creationdate="20141121T155803Z">
        <seg>所有有用的功能，例如以能够编译 Java 代码为例，都是通过&lt;s0&gt;&lt;e1&gt;插件&lt;/e1&gt;&lt;/s0&gt;进行添加的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All of this happened during the &lt;c0&gt;apply plugin: "java"&lt;/c0&gt; step.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141124T093017Z" creationid="msdx" creationdate="20141124T093017Z">
        <seg>所有这一切都发生在&lt;c0&gt;apply plugin: "java"&lt;/c0&gt;这一步过程中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All source files of this source set.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T053018Z" creationid="Administrator" creationdate="20150427T053018Z">
        <seg>该源集的所有源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All tasks that build the associated archives.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151228T152035Z" creationid="95" creationdate="20151228T152035Z">
        <seg>所有构建相关archives的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All tasks which produce the compile classpath.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T174230Z" creationid="Administrator" creationdate="20150425T174230Z">
        <seg>产生编译类路径中的所有任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All tasks which produce the source set's compile classpath.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T005749Z" creationid="Administrator" creationdate="20150426T005749Z">
        <seg>所有产生源集编译类路径的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All the &lt;c1&gt;hello&lt;/c1&gt; tasks of the different projects were executed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160530T151942Z" creationid="95" creationdate="20160530T151942Z">
        <seg>不同项目的所有&lt;c1&gt;hello&lt;/c1&gt;任务被都会被执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All the Groovy source directories can contain Groovy &lt;s1&gt;&lt;e2&gt;and&lt;/e2&gt;&lt;/s1&gt; Java code.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T074837Z" creationid="msdx" creationdate="20150429T074749Z">
        <seg>所有 Groovy 的源目录都可以包含 Groovy&lt;s1&gt;&lt;e2&gt;和&lt;/e2&gt;&lt;/s1&gt;Java 代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All the Scala source directories can contain Scala &lt;s0&gt;&lt;e1&gt;and&lt;/e1&gt;&lt;/s0&gt; Java code.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T152518Z" creationid="msdx" creationdate="20150429T152518Z">
        <seg>所有 Scala 的源目录都可以包含 Scala&lt;s1&gt;&lt;e2&gt;和&lt;/e2&gt;&lt;/s1&gt;Java 代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All the build logic is in the &lt;c0&gt;build.gradle&lt;/c0&gt; of the root project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T083927Z" creationid="haohang" creationdate="20160726T083927Z">
        <seg>所有的构建逻辑都在根项目的&lt;c0&gt;build.gradle&lt;/c0&gt;中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All the dependencies of the &lt;c5&gt;runtime&lt;/c5&gt; &lt;s6&gt;[&lt;a7&gt;13&lt;/a7&gt;]&lt;/s6&gt; configuration are copied to &lt;c8&gt;WEB-INF/lib&lt;/c8&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T093549Z" creationid="msdx" creationdate="20150503T093549Z">
        <seg>所有&lt;c5&gt;runtime&lt;/c5&gt; &lt;s6&gt;[&lt;a7&gt;13&lt;/a7&gt;]&lt;/s6&gt;配置的依赖被复制到&lt;c8&gt;WEB-INF/lib&lt;/c8&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All the elements of this tree are Java beans.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T135104Z" creationid="95" creationdate="20160105T135104Z">
        <seg>这个配置树的所有元素都是 Java beans。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All this is not really a big deal but in its sum it has an impact.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151201T060837Z" creationid="haohang" creationdate="20151201T060807Z">
        <seg>尽管这一切真的不是大问题，但累加起来就有影响了。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All verification tasks in the project, including &lt;c0&gt;test&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T010446Z" creationid="Administrator" creationdate="20150426T010303Z">
        <seg>项目中的所有核查项目，包括&lt;c0&gt;test&lt;/c0&gt;任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Allow tests to be declared with javadoc-style annotations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T151656Z" creationid="95" creationdate="20160504T151656Z">
        <seg>允许测试声明为 javadoc 风格的注解。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Allows configuring classpath information</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T022422Z" creationid="haohang" creationdate="20150624T022422Z">
        <seg>允许配置类路径信息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Allows configuring jdt information (source/target java compatibility)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T022452Z" creationid="haohang" creationdate="20150624T022452Z">
        <seg>允许配置 jdt 信息 (source/target java 兼容性)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Allows configuring module information</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T072712Z" creationid="haohang" creationdate="20150625T072712Z">
        <seg>允许配置模块信息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Allows configuring project information</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T022410Z" creationid="haohang" creationdate="20150624T022410Z">
        <seg>允许配置项目信息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Allows configuring the workspace XML</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T072727Z" creationid="haohang" creationdate="20150625T072727Z">
        <seg>允许配置工作区 XML</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Allows configuring wtp component information only if &lt;c0&gt;eclipse-wtp&lt;/c0&gt; plugin was applied.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T022521Z" creationid="haohang" creationdate="20150624T022521Z">
        <seg>仅当&lt;c0&gt;eclipse-wtp&lt;/c0&gt;插件被应用时，允许配置 wtp 组件信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Allows configuring wtp facet information only if &lt;c0&gt;eclipse-wtp&lt;/c0&gt; plugin was applied.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T022557Z" creationid="haohang" creationdate="20150624T022557Z">
        <seg>仅当&lt;c0&gt;eclipse-wtp&lt;/c0&gt;插件被应用时，允许配置 wtp 方面信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Also generates an IDEA project and workspace file if the project is the root project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T071516Z" creationid="haohang" creationdate="20150625T071516Z">
        <seg>如果该项目为根项目，同时生成一个 IDEA 项目和工作区文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Also have a look at &lt;a0&gt;&lt;c1&gt;Ear&lt;/c1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T142820Z" creationid="msdx" creationdate="20150504T142820Z">
        <seg>另请参阅 &lt;a0&gt;&lt;c1&gt;Ear&lt;/c1&gt;&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Alternatively you can specify the fully qualified task name to be executed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T040215Z" creationid="Administrator" creationdate="20150428T040215Z">
        <seg>或者你可以指定要执行的任务的完整限定名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Alternatively, Sonar properties can be set from the command line.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T064333Z" creationid="msdx" creationdate="20150513T064333Z">
        <seg>或者，可以从命令行设置 Sonar 属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Alternatively, a library dependency can be provided directly to the &lt;c0&gt;ExecutableBinary&lt;/c0&gt; for the &lt;c1&gt;executable&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160325T033113Z" creationid="haohang" creationdate="20160325T033028Z">
        <seg>另外，一个库依赖项可以直接提供给&lt;c0&gt;ExecutableBinary&lt;/c0&gt;的&lt;c1&gt;executable&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Alternatively, an &lt;c1&gt;ext&lt;/c1&gt; block can be used to add multiple properties at once.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T050644Z" creationid="msdx" creationdate="20141108T050644Z">
        <seg>或者，可以使用&lt;c1&gt;ext&lt;/c1&gt;块同时添加多个属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Alternatively, some or all connection settings can be set from the command line (see &lt;a0&gt;Section 35.6, “Configuring Sonar Settings from the Command Line”&lt;/a0&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150510T143749Z" creationid="msdx" creationdate="20150510T143657Z">
        <seg>或者，可以从命令行设置某些或全部的连接设置 （见&lt;a0&gt;第 35.6 节，“从命令行配置 Sonar 设置”&lt;/a0&gt;）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Alternatively, sometimes the module you request can change over time, even for the same version.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T011515Z" creationid="haohang" creationdate="20150722T011515Z">
        <seg>另外，你请求的模块随着时间推移，即使是同一版本，有时也可能改变了。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Alternatively, the &lt;c1&gt;beforeMerged&lt;/c1&gt; hook makes it possible to overwrite just certain parts of the existing content.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T064649Z" creationid="haohang" creationdate="20150625T064649Z">
        <seg>另外， &lt;c1&gt;beforeMerged&lt;/c1&gt; hook 可以实现只覆盖现有的某些部分的内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Alternatively, the properties can be specified in a gradle.properties file, either in the build's root directory or in the Gradle home directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141121T141512Z" creationid="msdx" creationdate="20141121T141512Z">
        <seg>或者，可以在构建的根目录或 Gradle 主目录中的 gradle.properties 文件中指定这些属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Alternatively, you can configure the tool chains directly, as described in the `Native Binary Variants` section, below.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160128T153337Z" creationid="95" creationdate="20160128T153247Z">
        <seg>或者，你可以直接配置工具链，就如下面的“原生二进制变种”中描述的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Although Gradle already offers parallel test execution via &lt;a0&gt;&lt;c1&gt;Test.setMaxParallelForks()&lt;/c1&gt;&lt;/a0&gt; the feature described in this section is parallel execution at a project level.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T090149Z" creationid="haohang" creationdate="20160726T090149Z">
        <seg>虽然 Gradle 已经通过&lt;a0&gt;&lt;c1&gt;Test.setMaxParallelForks()&lt;/c1&gt;&lt;/a0&gt;提供了并行执行，本节所描述的这个功能是在项目级别上的并行执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Although Groovy's XML support makes up for a lot, this approach is less convenient than manipulating the domain objects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T070338Z" creationid="haohang" creationdate="20150625T070042Z">
        <seg>尽管 Groovy 的 XML 支持对其有很大作用，但这种方法比起操纵域对象依然不大方便 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Although module meta-data and module artifacts must be located in the same repository, it is possible to compose a single repository of multiple URLs, giving multiple locations to search for meta-data files and jar files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T094044Z" creationid="haohang" creationdate="20150807T094044Z">
        <seg>虽然模块的元数据和模块 artifacts 必须位于同一仓库，但也有可能单个仓库有多个 Url，给多个位置去搜索元数据文件和 jar 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Amongst other things, Gradle supports the same builder syntax as polyglot Maven.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160104T153058Z" creationid="95" creationdate="20160104T153058Z">
        <seg>除其他事项外，Gradle支持和polyglot Maven同样的生成器语法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An &lt;c0&gt;AntBuilder&lt;/c0&gt; instance</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T044506Z" creationid="msdx" creationdate="20141108T044503Z">
        <seg>&lt;c0&gt;AntBuilder&lt;/c0&gt;实例</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An HTML test report.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083941Z" creationid="msdx" creationdate="20150428T083941Z">
        <seg>一个 HTML 测试报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An Ivy repository.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T095700Z" creationid="haohang" creationdate="20150807T095700Z">
        <seg>一个 Ivy 仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An artifact only notation creates a module dependency which downloads only the artifact file with the specified extension.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150731T035208Z" creationid="haohang" creationdate="20150731T034643Z">
        <seg>一个 artifact only notation 创建了一个模块依赖，它只下载指定扩展名的 artifact 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An example of component flavors might differentiate between 'demo', 'paid' and 'enterprise' editions of the component, where the same set of sources is used to produce binaries with different functions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T081101Z" creationid="haohang" creationdate="20160408T081101Z">
        <seg>一个关于组件flavor的例子是可以区分组件的“demo”，“paid”和“enterprise”版本，它们都用同样的源码来生成不同功能的二进制文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An example of such resource is a web container started before an integration test task and which should be always shut down, even if some of the tests fail.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T123038Z" creationid="msdx" creationdate="20141111T123031Z">
        <seg>这样的资源的一个例子是，一个 web 容器会在集成测试任务前开始，并且在之后关闭，即使有些测试失败。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An example of this type of &lt;s0&gt;&lt;e1&gt;changing module&lt;/e1&gt;&lt;/s0&gt; is a Maven &lt;c2&gt;SNAPSHOT&lt;/c2&gt; module, which always points at the latest artifact published.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T012021Z" creationid="haohang" creationdate="20150722T011518Z">
        <seg>这种&lt;s0&gt;&lt;e1&gt;变化模块&lt;/e1&gt;&lt;/s0&gt;的类型的一个例子是 Maven&lt;c2&gt;SNAPSHOT&lt;/c2&gt;模块，它总是指向最新发布的构件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An exception is thrown if no tests can be found for a particular subproject.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T035944Z" creationid="Administrator" creationdate="20150428T035944Z">
        <seg>如果在一个特定的子项目中，找不到测试用例，那么将会抛出异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An executable or library can be built to run on different operating systems and cpu architectures, with a variant being produced for each platform.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160401T092141Z" creationid="haohang" creationdate="20160401T092141Z">
        <seg>通过为每个平台生成一个变种，能够使一个可执行文件或库构建为可以运行在不同的操作系统及CPU架构上。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An overview of which Resolvers are offered by Ivy and thus also by Gradle can be found &lt;a0&gt;here&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151007T022500Z" creationid="95" creationdate="20151007T022029Z">
        <seg>其中由 Ivy （也因此由 Gradle ）提供解析器的，它的概述可以在&lt;a0&gt;这里&lt;/a0&gt;找到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Analyzes a project hierarchy and stores the results in the Sonar database.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T054246Z" creationid="msdx" creationdate="20150513T054217Z">
        <seg>分析项目层次结构，并将结果存储在 Sonar 数据库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Analyzing a project hierarchy also takes less time than analyzing each project separately.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150514T152303Z" creationid="msdx" creationdate="20150514T152303Z">
        <seg>分析一个项目的层次结果还可以比单独分析每个项目花费更省时间。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>And how does this work?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160527T161155Z" creationid="95" creationdate="20160527T161155Z">
        <seg>它是怎么实现的？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>And not just the jar but also the transitive dependencies of this jar?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T083402Z" creationid="haohang" creationdate="20160726T083402Z">
        <seg>并且，不止是这个jar包，还包括了它的传递依赖？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>And the &lt;a0&gt;&lt;c1&gt;Project&lt;/c1&gt;&lt;/a0&gt; interface is your starting point for accessing everything in the Gradle API.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T041035Z" creationid="msdx" creationdate="20141108T041035Z">
        <seg>并且&lt;a0&gt;&lt;c1&gt;Project&lt;/c1&gt;&lt;/a0&gt;接口是您在 Gradle API 中访问一切 的入点。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>And this is actually the case.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T123723Z" creationid="msdx" creationdate="20141111T123723Z">
        <seg>实际上确实是这样子。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>And we like to offer our users a choice.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160727T053544Z" creationid="haohang" creationdate="20160727T053544Z">
        <seg>我们想为我们的用户提供一种选择。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>And where is the build script for the &lt;c0&gt;bluewhale&lt;/c0&gt; project?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160522T125624Z" creationid="95" creationdate="20160522T125624Z">
        <seg>那么，&lt;c0&gt;bluewhale&lt;/c0&gt;项目的构建脚本在哪儿？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>And you don't gain anything.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151201T070341Z" creationid="haohang" creationdate="20151201T070341Z">
        <seg>而你不会有其他收获。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>And you have learned how to create dependencies between tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T160304Z" creationid="msdx" creationdate="20141109T160233Z">
        <seg>并且你已经学会了如何创建任务之间的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>And your custom repository is another infrastructure element which might have downtimes and needs to be updated.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151201T060658Z" creationid="haohang" creationdate="20151130T051930Z">
        <seg>你的自定义存仓库是另一个基础结构元素，它可能有停机时间并且需要更新。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Another difference is that always all projects are configured, even when you start the build from a subproject.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T090222Z" creationid="haohang" creationdate="20160718T090222Z">
        <seg>另一个区别是，所有的项目都总是被配置，即使你是从子项目开始构建的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Another source of information you have to lookup.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151201T060812Z" creationid="haohang" creationdate="20151201T060804Z">
        <seg>你还要查找另外一个信息源。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Another typical per-project configuration is the programming language to be analyzed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T092019Z" creationid="msdx" creationdate="20150512T091918Z">
        <seg>另一种典型的各个项目配置是配置要分析的编程语言。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Ant can be divided into two layers.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141114T135614Z" creationid="msdx" creationdate="20141114T071759Z">
        <seg>Ant 可以分为两层。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Ant properties and references</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150330T141252Z" creationid="Administrator" creationdate="20150330T141252Z">
        <seg>Ant 属性和引用</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>AntBuilder</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T044459Z" creationid="msdx" creationdate="20141108T044459Z">
        <seg>AntBuilder</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>AntlrTask</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T094931Z" creationid="haohang" creationdate="20150625T094931Z">
        <seg>AntlrTask</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Any</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T065608Z" creationid="haohang" creationdate="20150628T065608Z">
        <seg>任何</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Any Sonar properties set on the command line also apply to this project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150519T124351Z" creationid="msdx" creationdate="20150519T124351Z">
        <seg>在命令行上设置的任何 Sonar 属性也会应用到这个 project 中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Any log messages which your build classes write using these logging toolkits will be redirected to Gradle's logging system.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T034505Z" creationid="msdx" creationdate="20141116T152826Z">
        <seg>你所构建的类使用这些日志记录工具输出的任何日志消息，都将被重定向到 Gradle 的日志系统。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Any method you call in your build script, which &lt;s0&gt;&lt;e1&gt;is not defined&lt;/e1&gt;&lt;/s0&gt; in the build script, is delegated to the &lt;c2&gt;Project&lt;/c2&gt; object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T063459Z" creationid="msdx" creationdate="20141108T041227Z">
        <seg>在构建脚本中，你所调用的任何一个方法，如果在构建脚本中&lt;s0&gt;&lt;e1&gt;未定义&lt;/e1&gt;&lt;/s0&gt;，它将被委托给&lt;c2&gt;Project&lt;/c2&gt;对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Any other form of project interaction (i.e. by modifying another project object or by reading a value from another project object) causes the projects to be coupled.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T093524Z" creationid="haohang" creationdate="20160726T093148Z">
        <seg>任何其他形式的项目交互（即通过修改另一个project对象或从另一个项目对象中读取值）将会导致项目的耦合。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Any property you access in your build script, which &lt;s0&gt;&lt;e1&gt;is not defined&lt;/e1&gt;&lt;/s0&gt; in the build script, is delegated to the &lt;c2&gt;Project&lt;/c2&gt; object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T063505Z" creationid="msdx" creationdate="20141108T041242Z">
        <seg>在构建脚本中，你所访问的任何一个属性，如果在构建脚本里&lt;s0&gt;&lt;e1&gt;未定义&lt;/e1&gt;&lt;/s0&gt;，它也会被委托给&lt;c2&gt;Project&lt;/c2&gt;对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Any task you run in the root project folder will cause that same named task to be run on all the children.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160727T052827Z" creationid="haohang" creationdate="20160727T052732Z">
        <seg>你在根项目文件夹运行的任何项目，都会导致所有子项目的同名任务被运行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Apart from a status scheme, a module also has a (current) &lt;s5&gt;&lt;e6&gt;status&lt;/e6&gt;&lt;/s5&gt;, which must be one of the values in its status scheme.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T013218Z" creationid="95" creationdate="20151129T012639Z">
        <seg>除了状态模式以外，模块也有一个（当前） 的&lt;s5&gt;&lt;e6&gt;状态&lt;/e6&gt;&lt;/s5&gt;，这个状态必须是它的状态模式中的值之一。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Apart from source code, the task also analyzes class files and test result files (if available).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150510T143115Z" creationid="msdx" creationdate="20150510T143115Z">
        <seg>除了源代码之外，该 task 还分析了类文件和测试结果文件（如果有）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Appendix B. Potential Traps</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141124T100509Z" creationid="msdx" creationdate="20141124T100509Z">
        <seg>Appendix B. Potential Traps</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Appendix E. Existing IDE Support and how to cope without it</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141101T034203Z" creationid="msdx" creationdate="20141101T034203Z">
        <seg>Appendix E. Existing IDE Support and how to cope without it</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Applies maven, java and war plugins (as needed)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T093511Z" creationid="haohang" creationdate="20150707T093511Z">
        <seg>应用maven，java 和 war 插件（如果需要）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Applies the Java base plugin.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150526T004421Z" creationid="haohang" creationdate="20150526T004318Z">
        <seg>适用于 Java 基础插件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Applying a plugin to the project allows the plugin to extend the project's capabilities.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141123T150834Z" creationid="msdx" creationdate="20141123T150834Z">
        <seg>把插件应用到项目中可以让插件来扩展项目的功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Applying plugins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131419Z" creationid="msdx" creationdate="20150509T131419Z">
        <seg>应用插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Applying the plugin adds the &lt;c0&gt;buildDashboard&lt;/c0&gt; task to your project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150713T095241Z" creationid="haohang" creationdate="20150713T095241Z">
        <seg>应用该插件将会添加 &lt;c0&gt;buildDashboard&lt;/c0&gt; 任务到你的 project 中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Architectures</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T092148Z" creationid="haohang" creationdate="20160408T092132Z">
        <seg>架构</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Archives are created using the various archive tasks: &lt;a0&gt;&lt;c1&gt;Zip&lt;/c1&gt;&lt;/a0&gt;, &lt;a2&gt;&lt;c3&gt;Tar&lt;/c3&gt;&lt;/a2&gt;, &lt;a4&gt;&lt;c5&gt;Jar&lt;/c5&gt;&lt;/a4&gt;, &lt;a6&gt;&lt;c7&gt;War&lt;/c7&gt;&lt;/a6&gt;, and &lt;a8&gt;&lt;c9&gt;Ear&lt;/c9&gt;&lt;/a8&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T145707Z" creationid="msdx" creationdate="20141113T145707Z">
        <seg>使用各种归档任务可以创建以下的归档文件： &lt;a0&gt;&lt;c1&gt;Zip&lt;/c1&gt;&lt;/a0&gt;, &lt;a2&gt;&lt;c3&gt;Tar&lt;/c3&gt;&lt;/a2&gt;, &lt;a4&gt;&lt;c5&gt;Jar&lt;/c5&gt;&lt;/a4&gt;, &lt;a6&gt;&lt;c7&gt;War&lt;/c7&gt;&lt;/a6&gt;, and &lt;a8&gt;&lt;c9&gt;Ear&lt;/c9&gt;&lt;/a8&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Artifacts (e.g. jars) produced by this project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T084331Z" creationid="Administrator" creationdate="20150426T084331Z">
        <seg>由本项目生产的构件（如jar包）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As already mentioned in &lt;a0&gt;Section 50.4.3, “Project dependencies”&lt;/a0&gt;, Gradle offers project lib dependencies for this.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T083450Z" creationid="haohang" creationdate="20160726T083450Z">
        <seg>&lt;a0&gt;第50.4.3节，“项目依赖”&lt;/a0&gt;中已经提到，Gradle 为此提供了项目库依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As an example, let's look at the &lt;c0&gt;Copy&lt;/c0&gt; task provided by Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T090128Z" creationid="msdx" creationdate="20141110T090128Z">
        <seg>作为一个例子，让我们看看由 Gradle 提供的&lt;c0&gt;Copy&lt;/c0&gt;任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As can be seen in the first line above, classifiers can be used together with artifact only notation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T091110Z" creationid="haohang" creationdate="20150731T100710Z">
        <seg>如上面的第一行所示，classifiers 可以与artifact only notation 一起使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As described above, for each repository there is a separate metadata cache.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T045631Z" creationid="95" creationdate="20151129T045631Z">
        <seg>如上文所述，每个仓库是一个单独的元数据缓存。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As described in &lt;a0&gt;Section 50.6.8, “More about Ivy resolvers”&lt;/a0&gt;, you can use all the Ivy resolvers suitable for the purpose of uploading.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151226T092644Z" creationid="95" creationdate="20151226T092644Z">
        <seg>如&lt;a0&gt;50.6.8节，“更多关于Ivy解析器的信息”&lt;/a0&gt;中所述，你可以使用符合上传的所有Ivy解析器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As mentioned before 'should run after' ordering rule will be ignored if it introduces an ordering cycle:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T014850Z" creationid="msdx" creationdate="20141111T014850Z">
        <seg>如之前所述，如果“应该在之后运行”的排序规则引入了排序循环，那么它将会被忽略。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As mentioned earlier, a Maven module has only one artifact.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150724T035733Z" creationid="haohang" creationdate="20150724T035733Z">
        <seg>正如前面提到的，一个 Maven 模块都只有一个 artifact。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As of Sonar 3.4, only one language per project can be analyzed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T092659Z" creationid="msdx" creationdate="20150512T092659Z">
        <seg>截至 Sonar 3.4，每个项目只可以分析一种语言。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As said above, if no module descriptor file can be found, Gradle by default downloads a jar with the name of the module.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150730T040402Z" creationid="haohang" creationdate="20150730T040402Z">
        <seg>如上所述，如果找不到模块的描述符文件，默认情况下 Gradle 会下载一个与模块的名称相同的 jar 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As such, if you are using the &lt;c2&gt;copy()&lt;/c2&gt; method as part of a task action, you must explicitly declare all inputs and outputs in order to get the correct behavior.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T134119Z" creationid="msdx" creationdate="20141113T134119Z">
        <seg>因此，如果您在任务的action里面使用&lt;c2&gt;copy()&lt;/c2&gt;方法，必须显式声明所有的输入和输出以得到正确的行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As such, these plugins are not documented in the user guide.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T040945Z" creationid="Administrator" creationdate="20150425T040945Z">
        <seg>因此，这些插件都不在用户指南中记录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As the build script executes, it configures this &lt;c6&gt;Project&lt;/c6&gt; object:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T040651Z" creationid="msdx" creationdate="20141108T040415Z">
        <seg>当构建脚本执行时，它会配置此&lt;c6&gt;Project&lt;/c6&gt;对象：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As the property &lt;c4&gt;arctic&lt;/c4&gt; is set in those build scripts, we have to do it this way.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160530T151336Z" creationid="95" creationdate="20160530T151336Z">
        <seg>由于&lt;c4&gt;arctic&lt;/c4&gt;属性被设置在那些构建脚本中，我们不得不这样做。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As this plugin is currently &lt;a0&gt;incubating&lt;/a0&gt;, only 3 build init types are currently supported.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T074820Z" creationid="haohang" creationdate="20150707T074820Z">
        <seg>由于这个插件目前仍是&lt;a0&gt;孵化&lt;/a0&gt;状态，当前仅支持3个构建初始化类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As we continue to develop the native binary support in Gradle, the concept of Platform will be extended to include things like C-runtime version, Windows SDK, ABI, etc.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160405T033647Z" creationid="haohang" creationdate="20160405T033647Z">
        <seg>随着我们继续开发 Gradle 的本地二进制支持，将扩展Platform的概念，包括 C-runtime版本，Windows SDK，ABI，等等。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As we extend the concept of project decoupling and provide features that take advantage of decoupled projects, we will also introduce new features to help you to solve common use cases (like configuration injection) without causing your projects to be coupled.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T094504Z" creationid="haohang" creationdate="20160726T094504Z">
        <seg>当我们扩大项目解耦的概念，并提供利用了解耦项目的功能，我们也将引入新的功能来帮助你解决常见的情况（如配置注入）而不会导致你的项目耦合。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As we have already seen in the examples, the &lt;c1&gt;property()&lt;/c1&gt; method allows to set new properties or override existing ones.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150525T232510Z" creationid="haohang" creationdate="20150525T232510Z">
        <seg>正如我们在示例中已经看到的， &lt;c1&gt;property()&lt;/c1&gt;方法允许设置新属性或重写现有的属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As we have said, we usually prefer to put project specific behavior into the build script of this project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160527T163158Z" creationid="95" creationdate="20160527T162912Z">
        <seg>正如前面所说的，我们通常更愿意把项目的特定行为放到这个项目的构建脚本中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As we have seen, you can run a multi-project build by entering any subproject dir and execute the build from there.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160715T091321Z" creationid="haohang" creationdate="20160715T091321Z">
        <seg>正如我们所看到的，你可以通过进入任何子项目的目录，运行多项目构建并在那里执行构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As well as configuring how things are to be signed (i.e. the signatory configuration), you must also specify what is to be signed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160108T153255Z" creationid="95" creationdate="20160108T153255Z">
        <seg>除了配置内容要如何签名（即签名配置），你还必须指定哪些文件要签名。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As well as considering artifacts downloaded from a different repository, Gradle will also attempt to reuse artifacts found in the local Maven Repository.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T151548Z" creationid="95" creationdate="20151129T151548Z">
        <seg>同时考虑构件从不同的仓库下载，Gradle 还将试图重用本地 Maven 库中发现的构件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As with dependencies, you can declare as many custom configurations as you like and assign artifacts to them.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151226T085457Z" creationid="95" creationdate="20151226T085457Z">
        <seg>作为依赖，你可以如你喜欢尽可能多地定义自定义配置，并把构件指向它们。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As with other source types, you can configure the location of the windows resources that should in included in the binary.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160325T020936Z" creationid="haohang" creationdate="20160325T020631Z">
        <seg>与其他源文件类型一样，您可以配置把windows 资源的位置包含进二进制文件中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As with the &lt;c2&gt;Copy&lt;/c2&gt; task, you specify the input files using the &lt;c3&gt;from()&lt;/c3&gt; method, and can optionally specify where they end up in the archive using the &lt;c4&gt;into()&lt;/c4&gt; method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T154506Z" creationid="msdx" creationdate="20141113T150517Z">
        <seg>像使用&lt;c2&gt;Copy&lt;/c2&gt;任务一样，你需要使用&lt;c3&gt;from() &lt;/c3&gt;的方法指定输入的文件，并可以选择是否通过 &lt;c4&gt;into()&lt;/c4&gt; 方法指定最终在存档中的位置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As you can see in the example, transitive dependencies are included.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T040209Z" creationid="haohang" creationdate="20150807T040209Z">
        <seg>正如你在示例中所看到的，传递依赖都被包括在内。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As you can see, you can either use a reference to an existing repository or create a new repository.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151226T092542Z" creationid="95" creationdate="20151226T092101Z">
        <seg>正如你所见，你可以使用一个现有的仓库的引用，或者创建一个新的仓库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Assembler sources to be included in a native binary are provided via a &lt;a0&gt;&lt;c1&gt;AssemblerSourceSet&lt;/c1&gt;&lt;/a0&gt;, which defines a set of Assembler source files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160313T053926Z" creationid="95" creationdate="20160313T053926Z">
        <seg>把汇编源码包含到原生二进制文件中，是通过一个 &lt;a0&gt;&lt;c1&gt;AssemblerSourceSet&lt;/c1&gt;&lt;/a0&gt;来实现的，它定义了一个汇编源文件集。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Assembles all the archives in the project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T010236Z" creationid="Administrator" creationdate="20150426T010236Z">
        <seg>组装项目中所有的归类文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Assembles and uploads the artifacts in the specified configuration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T082847Z" creationid="Administrator" creationdate="20150426T082847Z">
        <seg>组装并上传指定配置的构件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Assembles the JAR file</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T004711Z" creationid="Administrator" creationdate="20150426T004711Z">
        <seg>组装 JAR 文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Assembles the application EAR file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T094745Z" creationid="msdx" creationdate="20150503T094745Z">
        <seg>组装应用程序 EAR 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Assembles the application WAR file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T085958Z" creationid="msdx" creationdate="20150503T085942Z">
        <seg>组装应用程序 WAR 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Assembles the artifacts in the specified configuration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T082706Z" creationid="Administrator" creationdate="20150426T082706Z">
        <seg>组装指定配置的构件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Assembles the distribution content and installs it on the current machine</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150701T030940Z" creationid="haohang" creationdate="20150701T030940Z">
        <seg>组装分发内容，并安装在当前计算机上</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Assembles the given source set's classes directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T005946Z" creationid="Administrator" creationdate="20150426T005946Z">
        <seg>组装给定源集的类目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Assembles the production classes directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T174951Z" creationid="Administrator" creationdate="20150425T174823Z">
        <seg>组装生产的类目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Assembles the test classes directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T004702Z" creationid="Administrator" creationdate="20150426T004702Z">
        <seg>组装测试的类目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Assembly language support is provided by means of the &lt;c0&gt;'assembler'&lt;/c0&gt; plugin.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160313T053829Z" creationid="95" creationdate="20160313T053829Z">
        <seg>&lt;c0&gt;“assembler”&lt;/c0&gt; 插件提供了汇编语言的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Assume you are working on a single project, the :api project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T095002Z" creationid="haohang" creationdate="20160726T095002Z">
        <seg>假设你在 :api 这一个项目上。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Assuming a local Sonar server with out-of-the-box settings is up and running, no further mandatory configuration is required.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T061600Z" creationid="msdx" creationdate="20150513T060746Z">
        <seg>假设一个本地的 Sonar 服务使用开箱即用的设置启动和运行，则不需要进一步的强制性的配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>At a minimum, the Sonar plugin has to be applied to the project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150510T143407Z" creationid="msdx" creationdate="20150510T143407Z">
        <seg>最低要求是必须配置 Sonar 插件应用于该project。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>At the heart of Gradle lies a rich extensible Domain Specific Language (DSL) based on Groovy.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141101T034940Z" creationid="msdx" creationdate="20141101T034940Z">
        <seg>Gradle 的核心在于基于Groovy的丰富而可扩展的域描述语言（DSL）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>At the moment daemon is coupled with particular version of Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141117T153412Z" creationid="msdx" creationdate="20141117T153412Z">
        <seg>在这一刻，守护进程会被加上 Gradle 的特定版本号。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>At the moment the default settings are pretty generous with regards to memory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141120T052427Z" creationid="msdx" creationdate="20141120T052427Z">
        <seg>目前的内存上的默认设置很大方。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>At this stage, it is completely up to the build script to configure the relevant compiler/linker flags for each build type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160401T090808Z" creationid="haohang" creationdate="20160401T090655Z">
        <seg>在这个阶段，它就完全符合构建脚本来为每个构建类型配置相关的编译器/链接器标志。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>At times a completely different module can serve as a replacement for a requested module dependency.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T090411Z" creationid="95" creationdate="20151115T090411Z">
        <seg>有时一个完全不同的模块可以作为请求的模块依赖的替代者。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>At times, the Gradle Dependency Cache can be out of sync with the actual state of the configured repositories.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T153855Z" creationid="95" creationdate="20151129T153855Z">
        <seg>有时，Gradle 依赖缓存可能与已配置的仓库的实际状态不同步。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Automatic configuration of groovyClasspath</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131906Z" creationid="msdx" creationdate="20150509T131906Z">
        <seg>groovyClasspath 的自动配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Automatic configuration of scalaClasspath</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T132003Z" creationid="msdx" creationdate="20150509T132003Z">
        <seg>scalaClasspath 的自动配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Automatic provisioning of Sonar Runner</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T055530Z" creationid="msdx" creationdate="20150513T055530Z">
        <seg>自动配置 Sonar Runner</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Automatically applies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141126T120846Z" creationid="msdx" creationdate="20141126T120846Z">
        <seg>自动应用</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Automatically chooses between snarl, growl, and notify-send depending on the current operating system.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T090940Z" creationid="haohang" creationdate="20150628T090940Z">
        <seg>根据当前的操作系统自动选择 snarl，growl，以及notify-send。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Available tool chains are searched in the order defined.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160405T034203Z" creationid="haohang" creationdate="20160405T034203Z">
        <seg>可用的工具链将按照定义的顺序进行查找。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T025438Z" creationid="haohang" creationdate="20160519T025438Z">
        <seg>BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base plugins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131601Z" creationid="msdx" creationdate="20150509T131601Z">
        <seg>基本插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Based on this the &lt;s0&gt;&lt;e1&gt;Import-Package&lt;/e1&gt;&lt;/s0&gt; and the &lt;s2&gt;&lt;e3&gt;Export-Package&lt;/e3&gt;&lt;/s2&gt; values of the OSGi Manifest are calculated.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150526T064137Z" creationid="haohang" creationdate="20150526T064137Z">
        <seg>并基于此计算 OSGi Manifest 中&lt;s0&gt;&lt;e1&gt;Import-Package&lt;/e1&gt;&lt;/s0&gt;和&lt;s2&gt;&lt;e3&gt;Export-Package&lt;/e3&gt;&lt;/s2&gt;的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Basically, in most of the cases excluding the transitive dependency should be done per configuration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T102115Z" creationid="haohang" creationdate="20150801T102115Z">
        <seg>基本上，在大多数情况下对每一个配置都是排除传递依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Bear in mind that for some of those use cases there are better solutions than exclusions!</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T101622Z" creationid="haohang" creationdate="20150801T101622Z">
        <seg>记住，对于其中一些用例，有着比排除更好的解决方案！</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Bear in mind that the alphabetical scheduling of decoupled tasks, known from the sequential execution, does not really work in parallel mode.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T092056Z" creationid="haohang" creationdate="20160726T091746Z">
        <seg>记住，解耦的任务按字母顺序调度，并且这个顺序执行，而不是真的在并行模式下执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Because Gradle's build language is based on Groovy, and parts of Gradle are implemented in Groovy, Gradle already ships with a Groovy library (1.8.6 as of Gradle 1.6).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T075636Z" creationid="msdx" creationdate="20150429T075405Z">
        <seg>由于 Gradle 的构建语言基于 Groovy 的，且部分的 Groovy 使用 Groovy 实现，因此 Gradle 已经带有了一个 Groovy 库 （截至 Gradle 1.6所带的 Groovy 库的版本是 1.8.6）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Because a Groovy project &lt;s0&gt;&lt;e1&gt;is&lt;/e1&gt;&lt;/s0&gt; a Java project, whatever you can do with a Java project, you can also do with a Groovy project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141210T061256Z" creationid="msdx" creationdate="20141030T065956Z">
        <seg>因为一个Groovy项目也 &lt;s0&gt;&lt;e1&gt;是&lt;/e1&gt;&lt;/s0&gt; 一个Java项目，你在 Java 项目里能做的事，在 Groovy 项目中也能做。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Because of Gradle's cross project configuration &lt;s7&gt;&lt;e8&gt;every&lt;/e8&gt;&lt;/s7&gt; project has to be evaluated before &lt;s9&gt;&lt;e10&gt;any&lt;/e10&gt;&lt;/s9&gt; task gets executed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160715T075807Z" creationid="haohang" creationdate="20160715T075723Z">
        <seg>由于 Gradle 的跨项目配置&lt;s7&gt;&lt;e8&gt;每一个&lt;/e8&gt;&lt;/s7&gt;项目不得不在它们的&lt;s9&gt;&lt;e10&gt;任何&lt;/e10&gt;&lt;/s9&gt;任务执行之前，先对项目进行评估。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Because the &lt;c0&gt;sonarProperties&lt;/c0&gt; block is evaluated lazily, properties of Gradle's object model can be safely referenced from within the block, without having to fear that they have not yet been set.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150525T233206Z" creationid="haohang" creationdate="20150525T233206Z">
        <seg>因为&lt;c0&gt;sonarProperties&lt;/c0&gt;块的评估是惰性的，Gradle 的对象模型的属性可以在块中被安全地引用，而无需担心它们还没有被赋值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Because we are inspecting the task graph to determine if we are going to be publishing, we must set the &lt;c0&gt;signing.required&lt;/c0&gt; property to a closure to defer the evaluation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160126T143638Z" creationid="95" creationdate="20160126T142639Z">
        <seg>由于我们正在检查任务图，以确定是否打算发布，我们必须将&lt;c0&gt;signing.required&lt;/c0&gt;属性设置为一个闭包以推迟evaluation。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Before a task is executed for the first time, Gradle takes a snapshot of the inputs.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T063108Z" creationid="msdx" creationdate="20141111T063103Z">
        <seg>在第一次执行任务之前，Gradle 对输入进行一次快照。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Before downloading an artifact, Gradle tries to determine the checksum of the required artifact by downloading the sha file associated with that artifact.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T151248Z" creationid="95" creationdate="20151129T151248Z">
        <seg>在下载构件前，Gradle 试图通过下载与该项目关联的sha文件以确定所需的构件的校验和。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Before executing the &lt;c0&gt;sonarRunner&lt;/c0&gt; task, all tasks producing output to be analysed by Sonar need to be executed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T061900Z" creationid="msdx" creationdate="20150513T061900Z">
        <seg>在执行&lt;c0&gt;sonarRunner&lt;/c0&gt;任务前，所有产生输出以用于 Sonar 分析的需要都需要被执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Below are some examples of how to do this.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T061950Z" creationid="msdx" creationdate="20141116T061950Z">
        <seg>下面是一些如何做到这一点的例子。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Below are some examples.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T062221Z" creationid="msdx" creationdate="20141116T062215Z">
        <seg>下面是一些例子。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Below is a brief outline of how this process works.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151007T024354Z" creationid="95" creationdate="20151007T023128Z">
        <seg>下面是这个过程的工作原理的简要概述。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Below is an example init script which changes how task execution and build completion is logged.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T154805Z" creationid="msdx" creationdate="20141116T154618Z">
        <seg>下面是一个示例，在 init 脚本中修改任务执行和构建完成的日志打印。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Below is an example of how this is used in the build script:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T125902Z" creationid="msdx" creationdate="20141116T125902Z">
        <seg>下面是关于如何在构建脚本中使用它的示例：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Below is an example which adds a &lt;c0&gt;test&lt;/c0&gt; task to each project with the &lt;c1&gt;hasTests&lt;/c1&gt; property set to true.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T125434Z" creationid="95" creationdate="20160521T125356Z">
        <seg>下面是一个示例，将一个&lt;c0&gt;test&lt;/c0&gt;任务添加到每个&lt;c1&gt;hasTests&lt;/c1&gt;属性为 true 的project中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Below is an example which adds a dependency from &lt;c1&gt;projectA:taskX&lt;/c1&gt; to &lt;c2&gt;projectB:taskY&lt;/c2&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T122235Z" creationid="msdx" creationdate="20141110T122235Z">
        <seg>下面是一个示例，添加了从&lt;c1&gt;projectA:taskX&lt;/c1&gt;到&lt;c2&gt;projectB:taskY&lt;/c2&gt;的依赖关系：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Below is an example which executes the &lt;c3&gt;echo&lt;/c3&gt; task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141115T153329Z" creationid="msdx" creationdate="20141115T153256Z">
        <seg>下面是执行 &lt;c3&gt;echo&lt;/c3&gt; 任务的例子。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Below, we have changed our example to declare that it takes the source XML file as an input and produces output to a destination directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T061242Z" creationid="msdx" creationdate="20141111T061242Z">
        <seg>下面，我们修改了我们的示例，声明它将 XML 源文件作为输入，并产生输出到一个目标目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Beside the build script files, Gradle defines a settings file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T024557Z" creationid="haohang" creationdate="20160519T024541Z">
        <seg>在构建脚本文件旁边，Gradle 定义了一个设置文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Beside the explicit properties of the &lt;c6&gt;OsgiManifest&lt;/c6&gt; object you can add instructions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150526T064534Z" creationid="haohang" creationdate="20150526T064345Z">
        <seg>在 &lt;c6&gt;OsgiManifest&lt;/c6&gt; 对象的显式属性旁边，你可以添加instructions。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Binaries produced by Gradle can be differentiated on &lt;a0&gt;build type&lt;/a0&gt;, &lt;a1&gt;platform&lt;/a1&gt; and &lt;a2&gt;flavor&lt;/a2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160401T085413Z" creationid="haohang" creationdate="20160401T085413Z">
        <seg>Gradle 产生的二进制文件可以区分 &lt;a0&gt;构建类型&lt;/a0&gt;， &lt;a1&gt;平台&lt;/a1&gt;以及 &lt;a2&gt;flavor&lt;/a2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Binary variants are discussed in detail below.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160219T065922Z" creationid="haohang" creationdate="20160219T065922Z">
        <seg>下面将详细讨论二进制 variant。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Bintray also supports sharing approved artifacts though the &lt;a3&gt;JCenter&lt;/a3&gt; public repository to provide a single resolution address for all popular OSS java artifacts (see &lt;a4&gt;Section 50.6.2, “Maven JCenter repository”&lt;/a4&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151201T062326Z" creationid="haohang" creationdate="20151201T062326Z">
        <seg>Bintray 还支持共享经过他们审核的构件，通过&lt;a3&gt;JCenter&lt;/a3&gt;公共仓库，为所有普通的OSS java 构件提供一个单一的解析地址（见&lt;a4&gt;第 50.6.2 节，“Maven JCenter 存储库”&lt;/a4&gt;）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Both &lt;c0&gt;println&lt;/c0&gt; statements print out the same property.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T043208Z" creationid="msdx" creationdate="20141108T043208Z">
        <seg>这两个&lt;c0&gt;println&lt;/c0&gt;语句打印出相同的属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Both also use repositories where the actual jars are placed together with their descriptor files, and both offer resolution for conflicting jar versions in one form or the other.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150716T074535Z" creationid="haohang" creationdate="20150716T074355Z">
        <seg>这两者都使用了存储库，在存储库中实际的 jar 文件和它们的描述文件都放在一起，而且这两者通过窗口或其他的方式都提供了 jar 版本冲突的解决方案。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Both external dependencies (including associated source and javadoc files) and project dependencies are considered.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T003011Z" creationid="haohang" creationdate="20150603T003011Z">
        <seg>它考虑到了外部依赖项 （包括相关联的源文件和 javadoc 文件） 和项目依赖项。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Both have emerged as standards for solving dependency conflicts, and while Gradle originally used Ivy under the hood for its dependency management.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150716T081151Z" creationid="haohang" creationdate="20150716T075456Z">
        <seg>这两者都已成为解决依赖冲突的标准，而 Gradle 最初使用的是 Ivy 引擎的依赖管理。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Both have their own logging system.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T130719Z" creationid="msdx" creationdate="20141116T130719Z">
        <seg>它们都有自己的日志系统。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Both the CUnit sources provided by your project and the generated launcher require the core CUnit headers and libraries.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T151157Z" creationid="95" creationdate="20160504T151040Z">
        <seg>由你的项目和生成的启动器提供的两种 CUnit 源码，都需要核心 CUnit 头文件和库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Both tools rely on descriptor XML files, which contain information about the dependencies of a particular jar.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150716T074248Z" creationid="haohang" creationdate="20150716T074248Z">
        <seg>这两种工具都依赖于描述符 XML 文件，包含有关具体某个 jar 的依赖的信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Build Script Basics</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162257Z" creationid="msdx" creationdate="20141109T162257Z">
        <seg>构建脚本基础知识</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Build layout</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T135828Z" creationid="msdx" creationdate="20150506T135828Z">
        <seg>构建布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Build script</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T143950Z" creationid="95" creationdate="20160814T143950Z">
        <seg>构建脚本</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Build scripts are code</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162442Z" creationid="msdx" creationdate="20141109T162429Z">
        <seg>构建脚本即代码</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>BuildListener</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T155217Z" creationid="msdx" creationdate="20141116T155217Z">
        <seg>BuildListener</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Building 'projectA:projectB:someTask' causes configuration of projectB.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160522T124942Z" creationid="95" creationdate="20160522T124942Z">
        <seg>构建 “projectA:projectB:someTask”使项目B被配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Building a WAR file</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163754Z" creationid="msdx" creationdate="20141109T163754Z">
        <seg>生成一个 WAR 文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But Gradle also allows you to execute the build from within any subproject taking part in the build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T070912Z" creationid="haohang" creationdate="20160519T070757Z">
        <seg>但 Gradle 也允许你在属于这个构建的任何子项目中去执行构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But Gradle also offers to execute tasks by their absolute path (see also &lt;a0&gt;Section 56.5, “Project and task paths”&lt;/a0&gt;):</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160715T091650Z" creationid="haohang" creationdate="20160715T091650Z">
        <seg>但 Gradle 也提供了按绝对路径执行任务（见&lt;a0&gt;第56.5节，“项目和任务路径”&lt;/a0&gt;）︰</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But Gradle does not look for an XML descriptor to figure them out but gets the information from the build file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T091626Z" creationid="haohang" creationdate="20150801T091626Z">
        <seg>但 Gradle 不会去查找一个 XML 描述符来找出它的依赖，而是从构建文件中获取信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But Gradle needs to create the build configuration for the whole multiproject build (see &lt;a0&gt;Chapter 56, &lt;i1&gt;Multi-project Builds&lt;/i1&gt;&lt;/a0&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T074602Z" creationid="haohang" creationdate="20160519T074602Z">
        <seg>但 Gradle 需要创建整个多项目构建的构建配置（见&lt;a0&gt;第56章，&lt;i1&gt;多项目生成&lt;/i1&gt;&lt;/a0&gt;）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But Gradle takes the concept of tasks further.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T160554Z" creationid="msdx" creationdate="20141109T160427Z">
        <seg>但 Gradle 让任务的概念更深远。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But Gradle uses configuration injection as the usual way of defining common behavior.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160527T162045Z" creationid="95" creationdate="20160527T162045Z">
        <seg>但 Gradle 使用配置注入来作为定义共同行为的常用方式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But as we have already seen, we don't have to do it this way.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160527T163144Z" creationid="95" creationdate="20160527T162707Z">
        <seg>但正如我们已经看到的，我们可以不这样做。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But before you can do an upload, you have to configure the upload task and define where to publish the artifacts to.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151226T091639Z" creationid="95" creationdate="20151226T091639Z">
        <seg>但是在你可以上传之前，你必须配置上传任务，并定义发布这些构件的位置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But even here the flexibility of Gradle can make your life easier.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151201T063110Z" creationid="haohang" creationdate="20151201T063110Z">
        <seg>但即使是这样， Gradle 的灵活性也可以使你的生活更轻松。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But for example open source projects don't usually have a host for those products.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151201T061014Z" creationid="haohang" creationdate="20151201T061014Z">
        <seg>但是比如开源项目通常没有主机用于这些产品。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But for such arbitrary layouts you need to execute the build from the directory where the settings file is located.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T075934Z" creationid="haohang" creationdate="20160519T075934Z">
        <seg>但对于这种任意的布局，你需要在设置文件所在的目录执行构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But it asks for this information at &lt;s17&gt;&lt;e18&gt;execution time&lt;/e18&gt;&lt;/s17&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T082638Z" creationid="haohang" creationdate="20160726T082638Z">
        <seg>但它在&lt;s17&gt;&lt;e18&gt;执行时&lt;/e18&gt;&lt;/s17&gt;才需要这些信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But it is easy for transitive dependency resolution to violate this contract.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T061013Z" creationid="95" creationdate="20151115T060813Z">
        <seg>但传递依赖解析会很容易破坏这种协议。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But sometimes, even if the repository contains module descriptors, you want to download only the artifact jar, without the dependencies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150731T033712Z" creationid="haohang" creationdate="20150731T033712Z">
        <seg>但有时候，即使存储库包含了模块描述符，而你只是想下载 artifact jar而不下载它的依赖项。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But the draw-back is, that for the Gradle dependency management all dependencies are considered first level dependencies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151201T064755Z" creationid="haohang" creationdate="20151201T064755Z">
        <seg>但缺点是，对于 Gradle 依赖管理而言，所有的依赖都被认为是第一级依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But this is kind of bloated.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T072948Z" creationid="msdx" creationdate="20141109T072925Z">
        <seg>但这是种臃肿的解决方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But we think that the model of inheritance does not reflect the problem space of multi-project builds very well.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160727T053146Z" creationid="haohang" creationdate="20160727T053031Z">
        <seg>但我们认为，继承模型并不能好地反映多项目构建的问题。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But we use this as an integration test, so we want defined behavior.&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T054912Z" creationid="msdx" creationdate="20141111T054912Z">
        <seg>But we use this as an integration test, so we want defined behavior.&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But when you enter steep territory Gradle does not become an obstacle and usually accompanies and carries you to the top of the mountain.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160727T054320Z" creationid="haohang" creationdate="20160727T054320Z">
        <seg>当你进入一个陡峭的领域的时候，Gradle 不会成为你的障碍，并且通常会伴随着你并且带你到达峰顶。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But you can of course still use Maven2 repo and your custom repository as a repository for &lt;s2&gt;&lt;e3&gt;jars only&lt;/e3&gt;&lt;/s2&gt; and still enjoy &lt;s4&gt;&lt;e5&gt;transitive&lt;/e5&gt;&lt;/s4&gt; dependency management.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151201T063725Z" creationid="haohang" creationdate="20151201T063725Z">
        <seg>但你当然也可以仍然使用 Maven2 仓库和你自定义的存储库，作为&lt;s2&gt;&lt;e3&gt;只放 jars&lt;/e3&gt;&lt;/s2&gt;和依然使用&lt;s4&gt;&lt;e5&gt;传递&lt;/e5&gt;&lt;/s4&gt;依赖管理的仓库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But you can redefine the location of the root project in the settings file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T041137Z" creationid="haohang" creationdate="20160519T041137Z">
        <seg>但你可以在设置文件中重新定义根项目的位置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By caching artifacts based on their SHA1 checksum, Gradle is able to maintain multiple versions of the same artifact.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T153007Z" creationid="95" creationdate="20151129T152920Z">
        <seg>通过基于其 SHA1 校验和缓存构件，Gradle 是能够保持同一构件的多个版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By compiling only classes whose source code has changed since the previous compilation, and classes affected by these changes, incremental compilation can significantly reduce Scala compilation time.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T153725Z" creationid="msdx" creationdate="20150430T160102Z">
        <seg>增量编译是只编译那些源代码在上一次编译之后有修改的类，及那些受这些修改影响到的类，它可以大大减少 Scala 的编译时间。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default it is assumed that the location of the settings file is also the location of the root project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T041109Z" creationid="haohang" creationdate="20160519T041109Z">
        <seg>默认情况下，它假设设置文件的位置也是根项目的位置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default it scans all &lt;c1&gt;.class&lt;/c1&gt; files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T040558Z" creationid="Administrator" creationdate="20150428T040558Z">
        <seg>默认情况下它会扫描所有的&lt;c1&gt;.class&lt;/c1&gt;文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default the install task is associated with the &lt;c0&gt;archives&lt;/c0&gt; configuration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151228T152301Z" creationid="95" creationdate="20151228T152301Z">
        <seg>默认情况下 install 任务是与&lt;c0&gt;archives&lt;/c0&gt;配置相关联的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default, Gradle caches changing modules for 24 hours.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T155047Z" creationid="95" creationdate="20151129T155047Z">
        <seg>默认情况下，Gradle 的变化模块将缓存 24 小时。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default, Gradle caches dynamic versions and changing modules for 24 hours.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T012344Z" creationid="haohang" creationdate="20150722T012344Z">
        <seg>默认情况下，Gradle 对动态版本和变化模块的缓存时间是24小时。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default, Gradle caches dynamic versions for 24 hours.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T154836Z" creationid="95" creationdate="20151129T154836Z">
        <seg>默认情况下，Gradle 缓存动态版本的时间为 24 小时。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default, Gradle redirects standard output to the &lt;c0&gt;QUIET&lt;/c0&gt; log level and standard error to the &lt;c1&gt;ERROR&lt;/c1&gt; level.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T131153Z" creationid="msdx" creationdate="20141116T131153Z">
        <seg>默认情况下，Gradle 将标准输出重定向到&lt;c0&gt;QUIET&lt;/c0&gt;日志级别，把标准错误输出重写向到 &lt;c1&gt;ERROR&lt;/c1&gt; 级别。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default, Gradle will upload to the pattern defined by the &lt;c0&gt;url&lt;/c0&gt; parameter, combined with the optional &lt;c1&gt;layout&lt;/c1&gt; parameter.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151226T092842Z" creationid="95" creationdate="20151226T092842Z">
        <seg>默认情况下，Gradle 将上传到由&lt;c0&gt;url&lt;/c0&gt;参数以及可选的&lt;c1&gt;layout&lt;/c1&gt;参数所联合定义的模式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default, a HTML report is generated.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T130428Z" creationid="msdx" creationdate="20150506T130428Z">
        <seg>默认情况下，会生成一个 HTML 报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default, a concise message will be logged for every failed test.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T015248Z" creationid="Administrator" creationdate="20150428T015248Z">
        <seg>默认情况下，对于每个失败的测试都只会打印一个简洁的消息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default, all Java and Scala code under &lt;c0&gt;src/main/scala&lt;/c0&gt; will participate in joint compilation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T155211Z" creationid="msdx" creationdate="20150501T155211Z">
        <seg>默认情况下，在&lt;c0&gt;src/main/scala&lt;/c0&gt; 下的所有 Java 和 Scala 代码都会进行联合编译。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default, for any named component the &lt;a2&gt;&lt;c3&gt;AssemblerSourceSet&lt;/c3&gt;&lt;/a2&gt; contains &lt;c4&gt;.s&lt;/c4&gt; source files under &lt;c5&gt;src/${name}/asm&lt;/c5&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160319T115045Z" creationid="95" creationdate="20160319T115045Z">
        <seg>默认情况下，对于任何命名的组件，&lt;a2&gt;&lt;c3&gt;AssemblerSourceSet&lt;/c3&gt;&lt;/a2&gt;包含了在&lt;c5&gt;src/${name}/asm&lt;/c5&gt;中的&lt;c4&gt;.s&lt;/c4&gt;源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default, for any named component the &lt;a2&gt;&lt;c3&gt;CSourceSet&lt;/c3&gt;&lt;/a2&gt; contains &lt;c4&gt;.c&lt;/c4&gt; source files in &lt;c5&gt;src/${name}/c&lt;/c5&gt;, and header files in &lt;c6&gt;src/${name}/headers&lt;/c6&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160225T090527Z" creationid="haohang" creationdate="20160225T090527Z">
        <seg>默认情况下，对于任何命名的组件，&lt;a2&gt;&lt;c3&gt;CSourceSet&lt;/c3&gt;&lt;/a2&gt;包含了在&lt;c5&gt;src/${name}/c&lt;/c5&gt;中的&lt;c4&gt;.c&lt;/c4&gt;源文件，和在&lt;c6&gt;src/${name}/headers&lt;/c6&gt;中的头文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default, for any named component the &lt;a2&gt;&lt;c3&gt;CppSourceSet&lt;/c3&gt;&lt;/a2&gt; contains &lt;c4&gt;.cpp&lt;/c4&gt; source files in &lt;c5&gt;src/${name}/cpp&lt;/c5&gt;, and header files in &lt;c6&gt;src/${name}/headers&lt;/c6&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160225T084810Z" creationid="haohang" creationdate="20160225T084810Z">
        <seg>默认情况下，对于任何命名的组件，&lt;a2&gt;&lt;c3&gt;CppSourceSet&lt;/c3&gt;&lt;/a2&gt;包含了在&lt;c5&gt;src/${name}/cpp&lt;/c5&gt;中的&lt;c4&gt;.cpp&lt;/c4&gt;源文件，和在&lt;c6&gt;src/${name}/headers&lt;/c6&gt;中的头文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default, for any named component the &lt;a2&gt;&lt;c3&gt;ObjectiveCSourceSet&lt;/c3&gt;&lt;/a2&gt; contains &lt;c4&gt;.m&lt;/c4&gt; source files under &lt;c5&gt;src/${name}/objectiveC&lt;/c5&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160319T115342Z" creationid="95" creationdate="20160319T115342Z">
        <seg>默认情况下，对于任何命名的组件，&lt;a2&gt;&lt;c3&gt;ObjectiveCSourceSet&lt;/c3&gt;&lt;/a2&gt;包含了在&lt;c5&gt;src/${name}/objectiveC&lt;/c5&gt;中的&lt;c4&gt;.m&lt;/c4&gt;源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default, for any named component the &lt;a2&gt;&lt;c3&gt;ObjectiveCppSourceSet&lt;/c3&gt;&lt;/a2&gt; contains &lt;c4&gt;.mm&lt;/c4&gt; source files under &lt;c5&gt;src/${name}/objectiveCpp&lt;/c5&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160319T115520Z" creationid="95" creationdate="20160319T115520Z">
        <seg>默认情况下，对于任何命名的组件，&lt;a2&gt;&lt;c3&gt;ObjectiveCppSourceSet&lt;/c3&gt;&lt;/a2&gt;包含了在&lt;c5&gt;src/${name}/objectiveCpp&lt;/c5&gt;中的&lt;c4&gt;.mm&lt;/c4&gt;源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default, for any named component the &lt;a2&gt;&lt;c3&gt;WindowsResourceSet&lt;/c3&gt;&lt;/a2&gt; contains &lt;c4&gt;.rc&lt;/c4&gt; source files under &lt;c5&gt;src/${name}/rc&lt;/c5&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160325T020802Z" creationid="95" creationdate="20160324T153251Z">
        <seg>默认情况下，&lt;a2&gt;&lt;c3&gt;WindowsResourceSet&lt;/c3&gt;&lt;/a2&gt;为所有的命名组件包含了在&lt;c5&gt;src/${name}/rc&lt;/c5&gt;下的&lt;c4&gt;.rc&lt;/c4&gt;源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default, the Java compiler runs in the Gradle process.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T135535Z" creationid="Administrator" creationdate="20150427T135535Z">
        <seg>默认情况下，Java 编译器在 Gradle 过程中运行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default, the Sonar Runner plugin passes on the project's &lt;c0&gt;main&lt;/c0&gt; source set as production sources, and the project's &lt;c1&gt;test&lt;/c1&gt; source set as test sources.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150520T143012Z" creationid="msdx" creationdate="20150520T143012Z">
        <seg>默认情况下， Sonar Runner 插件传给project 的&lt;c0&gt;main&lt;/c0&gt; source set 将作为生产源文件，传给project 的&lt;c1&gt;test&lt;/c1&gt; source sets 将作为测试源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default, the Sonar plugin will analyze the production sources in the &lt;c0&gt;main&lt;/c0&gt; source set and the test sources in the &lt;c1&gt;test&lt;/c1&gt; source set.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T092351Z" creationid="msdx" creationdate="20150512T092351Z">
        <seg>默认情况下，Sonar 插件将分析&lt;c0&gt;main&lt;/c0&gt; source set 里的生产源文件，以及&lt;c1&gt;test&lt;/c1&gt; source sets 里的测试源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By preconfiguring the Sonar Runner based on that information, the need for manual configuration is reduced significantly.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T060209Z" creationid="msdx" creationdate="20150513T060209Z">
        <seg>基于这些信息对 Sonar Runner 进行预配置，减少了许多手动配置的需要。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By requiring special syntax for adding a property, Gradle can fail fast when an attempt is made to set a (predefined or extra) property but the property is misspelled or does not exist.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T054756Z" creationid="msdx" creationdate="20141108T054756Z">
        <seg>通过添加属性所要求特殊的语法，Gradle 可以在你试图设置 （预定义的或额外的） 的属性，但该属性拼写错误或不存在时 fail fast。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By specifying that the distribution should include the task's output files (see &lt;a0&gt;Section 15.9.1, “Declaring a task's inputs and outputs”&lt;/a0&gt;), Gradle knows that the task that produces the files must be invoked before the distribution can be assembled and will take care of this for you.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150703T100647Z" creationid="haohang" creationdate="20150703T100440Z">
        <seg>通过指定分布包应包括的任务的输出文件 （见&lt;a0&gt;15.9.1章，“声明任务的输入和输出”&lt;/a0&gt;），Gradle 将知道在组装 distribution 前哪些生产文件的任务必须被调用，并且会为你处理好。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By using 'must run after" ordering rule you can specify that &lt;c0&gt;taskB&lt;/c0&gt; must always run after &lt;c1&gt;taskA&lt;/c1&gt;, whenever both &lt;c2&gt;taskA&lt;/c2&gt; and &lt;c3&gt;taskB&lt;/c3&gt; are scheduled for execution.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T152231Z" creationid="msdx" creationdate="20141110T152003Z">
        <seg>通过使用 “ 必须在之后运行”的排序规则，您可以指定 &lt;c0&gt;taskB&lt;/c0&gt; 必须总是运行在 &lt;c1&gt;taskA&lt;/c1&gt; 之后，无论&lt;c2&gt;taskA&lt;/c2&gt;和&lt;c3&gt;taskB&lt;/c3&gt;这两个任务在什么时候被调度执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C language support is provided by means of the &lt;c0&gt;'c'&lt;/c0&gt; plugin.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160225T090433Z" creationid="haohang" creationdate="20160225T090433Z">
        <seg>&lt;c0&gt;'c'&lt;/c0&gt; 插件提供了C 语言的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C sources to be included in a native binary are provided via a &lt;a0&gt;&lt;c1&gt;CSourceSet&lt;/c1&gt;&lt;/a0&gt;, which defines a set of C source files and optionally a set of exported header files (for a library).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160225T090503Z" creationid="haohang" creationdate="20160225T090503Z">
        <seg>把 C 源码包含到原生二进制文件中，是通过一个 &lt;a0&gt;&lt;c1&gt;CSourceSet&lt;/c1&gt;&lt;/a0&gt;来实现的，它定义了一个C源文件集以及（可选的）一个可导出的头文件（用于library）集</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C++ language support is provided by means of the &lt;c0&gt;'cpp'&lt;/c0&gt; plugin.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160219T082834Z" creationid="haohang" creationdate="20160219T082834Z">
        <seg>&lt;c0&gt;'cpp'&lt;/c0&gt; 插件提供了C++ 语言的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C++ sources to be included in a native binary are provided via a &lt;a0&gt;&lt;c1&gt;CppSourceSet&lt;/c1&gt;&lt;/a0&gt;, which defines a set of C++ source files and optionally a set of exported header files (for a library).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160225T084555Z" creationid="haohang" creationdate="20160219T094016Z">
        <seg>把 C++ 源码包含到原生二进制文件中，是通过一个 &lt;a0&gt;&lt;c1&gt;CppSourceSet&lt;/c1&gt;&lt;/a0&gt;来实现的，它定义了一个C++源文件集以及（可选的）一个可导出的头文件（用于library）集</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>CU_add_test(pSuiteMath, "test_minus", test_minus);
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T150246Z" creationid="95" creationdate="20160504T150246Z">
        <seg>CU_add_test(pSuiteMath, "test_minus", test_minus);
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>CU_add_test(pSuiteMath, "test_plus", test_plus);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T150244Z" creationid="95" creationdate="20160504T150244Z">
        <seg>CU_add_test(pSuiteMath, "test_plus", test_plus);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>CU_pSuite pSuiteMath = CU_add_suite("operator tests", suite_init, suite_clean);</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T150242Z" creationid="95" creationdate="20160504T150242Z">
        <seg>CU_pSuite pSuiteMath = CU_add_suite("operator tests", suite_init, suite_clean);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Caching</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T165002Z" creationid="msdx" creationdate="20141109T165002Z">
        <seg>缓存</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Calling the &lt;c0&gt;uploadArchives&lt;/c0&gt; task will generate the POM and deploys the artifact and the POM to the specified repository.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160104T154620Z" creationid="95" creationdate="20160104T154521Z">
        <seg>调用&lt;c0&gt;uploadArchives&lt;/c0&gt;任务将生成 POM，并将部署构件和 POM 到指定的仓库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Can also set using a String or Number, e.g. &lt;c2&gt;'1.5'&lt;/c2&gt; or &lt;c3&gt;1.5&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T045922Z" creationid="Administrator" creationdate="20150427T045922Z">
        <seg>可以使用字符串或数字来设置，例如&lt;c2&gt;"1.5"&lt;/c2&gt;或&lt;c3&gt;1.5&lt;/c3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Can also set using a String or a Number, e.g. &lt;c2&gt;'1.5'&lt;/c2&gt; or &lt;c3&gt;1.5&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T045758Z" creationid="Administrator" creationdate="20150427T045758Z">
        <seg>可以使用字符串或数字来设置，例如&lt;c2&gt;"1.5"&lt;/c2&gt;或&lt;c3&gt;1.5&lt;/c3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Can be located on the local filesystem or at some remote location.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T095649Z" creationid="haohang" creationdate="20150807T095649Z">
        <seg>可以位于本地文件系统上，或在某个远程的位置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Can set using anything described in &lt;a1&gt;Section 16.1, “Locating files”&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T134811Z" creationid="Administrator" creationdate="20150427T134811Z">
        <seg>可以使用&lt;a1&gt; 16.1 章节，“查找文件”&lt;/a1&gt;中所讲到的任何一种方式来设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Can set using anything described in &lt;a1&gt;Section 16.5, “Specifying a set of input files”&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T052515Z" creationid="Administrator" creationdate="20150427T052515Z">
        <seg>可以使用&lt;a1&gt; 16.5 章节，"指定一组输入文件"&lt;/a1&gt;中所讲到的任何一个来设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Can set using anything described in &lt;a2&gt;Section 16.5, “Specifying a set of input files”&lt;/a2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T134119Z" creationid="Administrator" creationdate="20150427T134119Z">
        <seg>可以使用&lt;a2&gt; 16.5 章节，"指定一组输入文件"&lt;/a2&gt;中所讲到的任何一种方式来设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Change</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T094053Z" creationid="msdx" creationdate="20150429T094028Z">
        <seg>修改的内容</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Changing its state or the state of one of its dependencies will cause an exception.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T091205Z" creationid="haohang" creationdate="20150807T091205Z">
        <seg>如果去修改它的状态，或者是它的某个依赖的状态，将会引发一个异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Changing what Gradle logs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T030423Z" creationid="Administrator" creationdate="20150330T141513Z">
        <seg>更改 Gradle 日志</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 1. Introduction</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141101T034309Z" creationid="msdx" creationdate="20141101T034309Z">
        <seg>第一章. 介绍</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 10. Web Application Quickstart</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T071137Z" creationid="msdx" creationdate="20141030T071137Z">
        <seg>Chapter 10. Web 应用程序快速入门</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 11. Using the Gradle Command-Line</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T100128Z" creationid="msdx" creationdate="20141030T071206Z">
        <seg>第十一章. 使用Gradle命令行</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 12. Using the Gradle Graphical User Interface</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T145555Z" creationid="msdx" creationdate="20141030T100240Z">
        <seg>第十二章. 使用Gradle 图形用户界面</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 13. Writing Build Scripts</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T145318Z" creationid="msdx" creationdate="20141105T145318Z">
        <seg>第十三章 编写构建脚本</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 14. Tutorial - 'This and That'</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T141736Z" creationid="msdx" creationdate="20141108T032329Z">
        <seg>第十四章. 教程 - 杂七杂八</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 15. More about Tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T165034Z" creationid="msdx" creationdate="20141109T093516Z">
        <seg>第十五章. 任务详述</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 16. Working With Files</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T084847Z" creationid="msdx" creationdate="20141108T070137Z">
        <seg>第十六章. 使用文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 17. Using Ant from Gradle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T161625Z" creationid="msdx" creationdate="20141030T034613Z">
        <seg>第十七章. 从 Gradle 中调用 Ant</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 18. Logging</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T063505Z" creationid="msdx" creationdate="20141113T161646Z">
        <seg>第十八章. 日志</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 19. The Gradle Daemon</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T063517Z" creationid="msdx" creationdate="20141116T063517Z">
        <seg>第十九章. Gradle 守护进程</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 2. Overview</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141101T034254Z" creationid="msdx" creationdate="20141101T034231Z">
        <seg>第二章. 概述</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 20. The Build Environment</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141117T123801Z" creationid="msdx" creationdate="20141117T123801Z">
        <seg>第二十章. 构建环境</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 21. Gradle Plugins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141119T031538Z" creationid="msdx" creationdate="20141119T031538Z">
        <seg>第二十一章. Gradle 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 22. Standard Gradle plugins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141121T142846Z" creationid="msdx" creationdate="20141121T142846Z">
        <seg>第二十二章. 标准的 Gradle 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 23. The Java Plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150430T020630Z" creationid="msdx" creationdate="20141124T100531Z">
        <seg>第 二十三章. Java 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 24. The Groovy Plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150430T020642Z" creationid="msdx" creationdate="20141209T073309Z">
        <seg>第二十四章. Groovy 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 25. The Scala Plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150430T020609Z" creationid="msdx" creationdate="20150428T151822Z">
        <seg>第二十五章. Scala 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 26. The War Plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T024601Z" creationid="msdx" creationdate="20150429T095035Z">
        <seg>第二十六章. War 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 27. The Ear Plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T082700Z" creationid="msdx" creationdate="20150503T082700Z">
        <seg>第二十七章. Ear 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 28. The Jetty Plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T094141Z" creationid="msdx" creationdate="20141030T035211Z">
        <seg>第二十八章. Jetty 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 29. The Checkstyle Plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T143922Z" creationid="msdx" creationdate="20141105T145234Z">
        <seg>第二十九章. Checkstyle 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 3. Tutorials</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141101T034408Z" creationid="msdx" creationdate="20141101T034408Z">
        <seg>第三章. 教程说明</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 30. The CodeNarc Plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T151535Z" creationid="msdx" creationdate="20141030T035043Z">
        <seg>第三十章. CodeNarc 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 31. The FindBugs Plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T132927Z" creationid="msdx" creationdate="20150505T132927Z">
        <seg>第三十一章. FindBugs 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 32. The JDepend Plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T134106Z" creationid="msdx" creationdate="20150504T151458Z">
        <seg>第三十二章. JDepend 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 33. The PMD Plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T134120Z" creationid="msdx" creationdate="20141124T100250Z">
        <seg>第三十三章. PMD 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 34. The JaCoCo Plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T134552Z" creationid="msdx" creationdate="20150505T134552Z">
        <seg>第三十四章. JaCoCo 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 35. The Sonar Plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T135937Z" creationid="msdx" creationdate="20150505T135937Z">
        <seg>第三十五章. Sonar 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 36. The Sonar Runner Plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T140341Z" creationid="msdx" creationdate="20150506T140341Z">
        <seg>第三十六章. Sonar Runner 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 37. The OSGi Plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T054331Z" creationid="msdx" creationdate="20150513T054331Z">
        <seg>第三十七章. OSGi 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 38. The Eclipse Plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150526T064902Z" creationid="msdx" creationdate="20141109T065325Z">
        <seg>第三十八章. Eclipse 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 39. The IDEA Plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T063334Z" creationid="msdx" creationdate="20141116T063334Z">
        <seg>第三十九章. IDEA 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 4. Installing Gradle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104933Z" creationid="msdx" creationdate="20150428T104933Z">
        <seg>Chapter 4. Installing Gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 40. The ANTLR Plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T094705Z" creationid="msdx" creationdate="20141116T063310Z">
        <seg>第四十章. ANTLR 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 41. The Project Report Plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150626T095137Z" creationid="msdx" creationdate="20141111T124430Z">
        <seg>第四十一章. 项目报告插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 42. The Announce Plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T063231Z" creationid="msdx" creationdate="20141030T034804Z">
        <seg>第四十二章. Announce插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 43. The Build Announcements Plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T091428Z" creationid="msdx" creationdate="20141030T032941Z">
        <seg>第四十三章. 构建公告插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 44. The Distribution Plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T092215Z" creationid="haohang" creationdate="20150628T091133Z">
        <seg>第四十四章. 分发插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 45. The Application Plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T092251Z" creationid="msdx" creationdate="20141030T034937Z">
        <seg>第四十五章. 应用程序插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 46. The Java Library Distribution Plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T151718Z" creationid="msdx" creationdate="20150428T151718Z">
        <seg>第46章. Java 库发布插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 47. Build Init Plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T073606Z" creationid="msdx" creationdate="20141105T145230Z">
        <seg>第四十七章. Build Init 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 48. Wrapper Plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T070648Z" creationid="msdx" creationdate="20141113T160930Z">
        <seg>第四十八章. Wrapper 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 49. The Build Dashboard Plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150713T095009Z" creationid="msdx" creationdate="20150503T094838Z">
        <seg>第四十九章. Build Dashboard 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 5. Troubleshooting</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T154102Z" creationid="msdx" creationdate="20141109T154102Z">
        <seg>第 5 章. 疑难解答</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 50. Dependency Management</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150710T013156Z" creationid="haohang" creationdate="20150710T013156Z">
        <seg>第五十章. 依赖管理</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 51. Publishing artifacts</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150714T015828Z" creationid="msdx" creationdate="20141101T034159Z">
        <seg>第五十一章. 发布构件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 52. The Maven Plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151228T151805Z" creationid="msdx" creationdate="20141116T155227Z">
        <seg>第五十二章. Maven 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 53. The Signing Plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T070531Z" creationid="haohang" creationdate="20150707T070531Z">
        <seg>第五十三章. 签名插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 54. Building native binaries</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151227T161036Z" creationid="95" creationdate="20151227T161036Z">
        <seg>第54章. 构建原生二进制文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 55. The Build Lifecycle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T140736Z" creationid="msdx" creationdate="20141108T031022Z">
        <seg>第55章. 构建的生命周期</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 56. Multi-project Builds</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160727T055601Z" creationid="msdx" creationdate="20141111T124336Z">
        <seg>第五十六章. 多项目构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 57. Writing Custom Task Classes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160727T055552Z" creationid="95" creationdate="20160521T140555Z">
        <seg>第五十七章. 编写自定义任务类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 58. Writing Custom Plugins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160727T055632Z" creationid="haohang" creationdate="20160727T055632Z">
        <seg>第五十八章. 编写自定义插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 59. Organizing Build Logic</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T151942Z" creationid="95" creationdate="20160504T151942Z">
        <seg>第五十九章. 组件构建逻辑</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 6. Build Script Basics</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T154050Z" creationid="msdx" creationdate="20141109T154050Z">
        <seg>Chapter 6. Build Script Basics</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 61. The Gradle Wrapper</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141119T031220Z" creationid="msdx" creationdate="20141119T031220Z">
        <seg>Chapter 61. The Gradle Wrapper</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 62. Embedding Gradle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T070519Z" creationid="haohang" creationdate="20150625T070519Z">
        <seg>第六十二章. 嵌入 Gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 63. Comparing Builds</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T140518Z" creationid="95" creationdate="20160521T140518Z">
        <seg>第六十三章. 比较构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 7. Java Quickstart</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T154117Z" creationid="msdx" creationdate="20141109T154108Z">
        <seg>第 7 章. Java 快速入门</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 8. Dependency Management Basics</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T161500Z" creationid="msdx" creationdate="20141105T161456Z">
        <seg>Chapter 8. 依赖管理基础</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 9. Groovy Quickstart</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T041136Z" creationid="msdx" creationdate="20141030T035211Z">
        <seg>第九章. Groovy快速入门</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Checkstyle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T024703Z" creationid="msdx" creationdate="20150505T024703Z">
        <seg>checkstyle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Checkstyle configuration file</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T132639Z" creationid="msdx" creationdate="20150505T132639Z">
        <seg>Checkstyle 配置文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Choosing a log level</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150330T141308Z" creationid="Administrator" creationdate="20150330T141308Z">
        <seg>选择一个日志级别</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Clang</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160128T153346Z" creationid="95" creationdate="20160128T153346Z">
        <seg>Clang</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Class or a super class contain a method annotated with &lt;c0&gt;@Test&lt;/c0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T041106Z" creationid="Administrator" creationdate="20150428T041106Z">
        <seg>类或超类含有一个带&lt;c0&gt;@Test&lt;/c0&gt;注解的方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Class or a super class extends &lt;c0&gt;TestCase&lt;/c0&gt; or &lt;c1&gt;GroovyTestCase&lt;/c1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T041022Z" creationid="Administrator" creationdate="20150428T041022Z">
        <seg>类或超类继承自&lt;c0&gt;TestCase&lt;/c0&gt;或&lt;c1&gt;GroovyTestCase&lt;/c1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Class or a super class is annotated with &lt;c0&gt;@RunWith&lt;/c0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T041044Z" creationid="Administrator" creationdate="20150428T041044Z">
        <seg>类或超类使用了&lt;c0&gt;@RunWith&lt;/c0&gt;进行注解</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Classpath</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T105330Z" creationid="haohang" creationdate="20150624T105302Z">
        <seg>Classpath</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Clean</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131753Z" creationid="msdx" creationdate="20150509T131753Z">
        <seg>Clean</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Client module dependencies allow to declare &lt;s0&gt;&lt;e1&gt;transitive&lt;/e1&gt;&lt;/s0&gt; dependencies directly in the build script.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T091314Z" creationid="haohang" creationdate="20150801T091314Z">
        <seg>客户端模块依赖允许直接在构建脚本中声明&lt;s0&gt;&lt;e1&gt;传递&lt;/e1&gt;&lt;/s0&gt;依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Client module dependency</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T080449Z" creationid="haohang" creationdate="20150722T080449Z">
        <seg>客户端模块依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Closure cl = { task -&gt; println &lt;s0&gt;"I'm $task.project.name"&lt;/s0&gt; }
task hello &lt;&lt; cl
project(&lt;s1&gt;':bluewhale'&lt;/s1&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160522T125908Z" creationid="95" creationdate="20160522T125908Z">
        <seg>Closure cl = { task -&gt; println &lt;s0&gt;"I'm $task.project.name"&lt;/s0&gt; }
task hello &lt;&lt; cl
project(&lt;s1&gt;':bluewhale'&lt;/s1&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>CodeNarc</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T133152Z" creationid="msdx" creationdate="20150505T133152Z">
        <seg>codenarc</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>CodeNarc configuration file</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T133430Z" creationid="msdx" creationdate="20150505T133423Z">
        <seg>CodeNarc 配置文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Command Line</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T031133Z" creationid="msdx" creationdate="20141108T031133Z">
        <seg>命令行</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Command line option "--tests" is provided to conveniently set the test filter.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T023048Z" creationid="Administrator" creationdate="20150428T023048Z">
        <seg>提供了“--tests”的命令行选项，以方便地设置测试过滤器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Common values can be set from a parent build script.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T091319Z" creationid="msdx" creationdate="20150512T091319Z">
        <seg>共同的值可以在父构建脚本中进行设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Compared to using the standalone Sonar Runner, the Sonar Runner plugin offers the following benefits:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T055423Z" creationid="msdx" creationdate="20150513T055423Z">
        <seg>相比单独使用 Sonar Runner，Sonar Runner 插件提供了以下便利：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Compile time dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T084154Z" creationid="Administrator" creationdate="20150426T084154Z">
        <seg>编译时依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Compile time dependencies for the given source set</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T084848Z" creationid="Administrator" creationdate="20150426T084848Z">
        <seg>给定源集的编译时依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>CompileJava</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131809Z" creationid="msdx" creationdate="20150509T131804Z">
        <seg>CompileJava</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Compiles production Groovy source files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T071418Z" creationid="msdx" creationdate="20150429T071418Z">
        <seg>编译production 的 Groovy 源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Compiles production Java source files using javac.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T174626Z" creationid="Administrator" creationdate="20150425T174626Z">
        <seg>使用 javac 编译产品中的 Java 源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Compiles production Scala source files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T145459Z" creationid="msdx" creationdate="20150429T145459Z">
        <seg>编译production 的 Scala 源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Compiles test Groovy source files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T071434Z" creationid="msdx" creationdate="20150429T071434Z">
        <seg>编译test 的 Groovy 的源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Compiles test Java source files using javac.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T004449Z" creationid="Administrator" creationdate="20150426T004449Z">
        <seg>使用 javac 编译 Java 的测试源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Compiles test Scala source files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T145505Z" creationid="msdx" creationdate="20150429T145505Z">
        <seg>编译test 的 Scala 的源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Compiles the given source set's Groovy source files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T071453Z" creationid="msdx" creationdate="20150429T071437Z">
        <seg>编译给定的source set 里的 Groovy 源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Compiles the given source set's Java source files using javac.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T005823Z" creationid="Administrator" creationdate="20150426T005823Z">
        <seg>使用 javac 编译给定的源集中的 Java 源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Compiles the given source set's Scala source files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T145511Z" creationid="msdx" creationdate="20150429T145511Z">
        <seg>编译给定的source set 里的 Scala 源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Compiling in external process</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T132103Z" creationid="msdx" creationdate="20150509T132103Z">
        <seg>在外部进程中编译</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Complete overwrite works equally well for individual files, for example by executing &lt;s0&gt;&lt;c1&gt; gradle cleanEclipseClasspath eclipseClasspath&lt;/c1&gt;&lt;/s0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T103416Z" creationid="haohang" creationdate="20150624T103416Z">
        <seg>完全覆盖同样可以用于个人文件，例如通过执行&lt;s0&gt;&lt;c1&gt;gradle cleanEclipseClasspath eclipseClasspath&lt;/c1&gt;&lt;/s0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Complete overwrite works equally well for individual files, for example by executing &lt;s0&gt;&lt;c1&gt; gradle cleanIdeaModule ideaModule&lt;/c1&gt;&lt;/s0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T073537Z" creationid="haohang" creationdate="20150625T073537Z">
        <seg>完整覆盖同样可以用于个人文件，例如通过执行&lt;s0&gt;&lt;c1&gt;gradle cleanIdeaModule ideaModule&lt;/c1&gt;&lt;/s0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Component Type</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160219T072201Z" creationid="haohang" creationdate="20160219T072201Z">
        <seg>组件类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Conf2ScopeMappingContainer</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151228T152800Z" creationid="95" creationdate="20151228T152800Z">
        <seg>Conf2ScopeMappingContainer</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Configuration</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150514T151915Z" creationid="msdx" creationdate="20150514T151915Z">
        <seg>配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Configuration Properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T065234Z" creationid="haohang" creationdate="20150628T065234Z">
        <seg>配置属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Configuration dependencies are between projects whereas execution dependencies are always resolved to task dependencies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T090147Z" creationid="haohang" creationdate="20160718T090044Z">
        <seg>配置依赖是项目之间的，而执行依赖总是被解析为任务依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Configuration dependencies are very different to execution dependencies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T090042Z" creationid="haohang" creationdate="20160718T090042Z">
        <seg>配置依赖与执行依赖有很大上的不同。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Configuration injection feature and access to the complete project model are possible because every project is configured before the execution phase.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160522T120610Z" creationid="95" creationdate="20160522T120610Z">
        <seg>由于每个项目都在执行阶段之前配置，所以也能做到配置注入功能以及访问整个项目模型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Configuration of projects in parallel.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T090740Z" creationid="haohang" creationdate="20160726T090621Z">
        <seg>并行的项目配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Configuration on demand mode attempts to configure only projects that are relevant for requested tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160522T121724Z" creationid="95" creationdate="20160522T121440Z">
        <seg>按需配置模式尝试只配置所请求的任务相关的项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Configuration shared between subprojects can be configured in a &lt;c0&gt;subprojects&lt;/c0&gt; block.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150519T124447Z" creationid="msdx" creationdate="20150519T124447Z">
        <seg>在&lt;c0&gt;subprojects&lt;/c0&gt;块中，可以配置共享子项目之间的配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Configuration time of huge multi-project builds may become noticeable.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160522T120748Z" creationid="95" creationdate="20160522T120748Z">
        <seg>对于巨大的项目，这个配置时间就会变得非常可观。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Configurations have a name, a number of other properties, and they can extend each other.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T075213Z" creationid="haohang" creationdate="20150722T075213Z">
        <seg>配置有一个名字和许多属性，并且它们能够互相继承。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Configure by DAG</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163403Z" creationid="msdx" creationdate="20141109T163403Z">
        <seg>使用 DAG 配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Configured a &lt;c0&gt;main&lt;/c0&gt; source set with default (i.e. conventional) values for properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141124T074641Z" creationid="msdx" creationdate="20141124T074134Z">
        <seg>通过属性的默认（即常规）配置了 &lt;c0&gt;main&lt;/c0&gt; 源码集</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Configured supporting tasks to use these properties to perform work</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141124T074637Z" creationid="msdx" creationdate="20141124T074637Z">
        <seg>配置支持使用这些属性来执行工作的任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Configuring a first level dependency as &lt;s0&gt;&lt;e1&gt;forced&lt;/e1&gt;&lt;/s0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150721T090218Z" creationid="haohang" creationdate="20150721T083846Z">
        <seg>&lt;s0&gt;&lt;e1&gt;强制&lt;/e1&gt;&lt;/s0&gt;配置第一级依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Configuring an HTTP proxy (for example for downloading dependencies) is done via standard JVM system properties.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141121T141253Z" creationid="msdx" creationdate="20141121T141253Z">
        <seg>配置 HTTP 代理服务器 （例如用于下载依赖） 是通过标准的 JVM 系统属性来做的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Configuring any dependency (transitive or not) as &lt;s0&gt;&lt;e1&gt;forced&lt;/e1&gt;&lt;/s0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150721T090653Z" creationid="haohang" creationdate="20150721T090653Z">
        <seg>&lt;s0&gt;&lt;e1&gt;强制&lt;/e1&gt;&lt;/s0&gt;配置任何依赖项（不管是否可传递）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Configuring arbitrary objects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T164949Z" creationid="msdx" creationdate="20141109T164949Z">
        <seg>配置任意对象</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Configuring arbitrary objects using an external script</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T164957Z" creationid="msdx" creationdate="20141109T164957Z">
        <seg>使用外部脚本配置任意对象</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Configuring tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150330T140954Z" creationid="Administrator" creationdate="20150330T140954Z">
        <seg>配置任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Configuring the build environment via gradle.properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150508T131819Z" creationid="msdx" creationdate="20150508T131819Z">
        <seg>通过 gradle.properties 配置构建环境</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Configuring the daemon</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150508T131808Z" creationid="msdx" creationdate="20150508T131808Z">
        <seg>配置守护进程</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Configuring the project using an external build script</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T164941Z" creationid="msdx" creationdate="20141109T164941Z">
        <seg>使用外部构建脚本配置项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Conflicting versions of the same jar should be detected and either resolved or cause an exception.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150721T054253Z" creationid="haohang" creationdate="20150721T054253Z">
        <seg>相同的 jar 包的冲突版本应该被检测到，并且要么解决，要么抛出异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Consider the Gradle project itself, while Gradle only has a few direct, first-level dependencies, when Gradle is compiled it needs more that one hundred dependencies on the classpath.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150720T061540Z" creationid="haohang" creationdate="20150720T061540Z">
        <seg>考虑 Gradle 项目本身，虽然 Gradle 仅有几个直接的第一级依赖，当 编译 Gradle 时在它的类路径上会需要超过一百个的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Consider the case where another task is to consume the classes files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141124T094429Z" creationid="msdx" creationdate="20141124T093931Z">
        <seg>考虑一下另一种消费类文件的任务的情况。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Console console = System.console()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160108T152906Z" creationid="95" creationdate="20160108T152906Z">
        <seg>Console console = System.console()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Contains a sample class and unit test, if there are no existing source or test files</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T094311Z" creationid="haohang" creationdate="20150707T094311Z">
        <seg>如果不存在源文件或测试文件，会包含一个示例类和单元测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Contains a sample groovy class and an according Spock specification, if there are no existing source or test files</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T094754Z" creationid="haohang" creationdate="20150707T094641Z">
        <seg>如果不存在源文件或测试文件，会包含一个示例 groovy 类和一个相应的 Spock 规范</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Contains a sample scala class and an according ScalaTest test suite, if there are no existing source or test files</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T094525Z" creationid="haohang" creationdate="20150707T094525Z">
        <seg>如果不存在源文件或测试文件，会包含一个示例 scala 类和一个相应的 ScalaTest 测试套件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Contains all &lt;c0&gt;.g&lt;/c0&gt; found in the ANTLR source directories, and excludes all other types of files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T102848Z" creationid="haohang" creationdate="20150625T102848Z">
        <seg>包含在 ANTLR 源目录中找到的所有的&lt;c0&gt;.g&lt;/c0&gt;，并排除所有其他类型的文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Contains all &lt;c0&gt;.groovy&lt;/c0&gt; and &lt;c1&gt;.java&lt;/c1&gt; files found in the Groovy source directories, and excludes all other types of files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T093135Z" creationid="msdx" creationdate="20150429T093135Z">
        <seg>包含在 Groovy 源目录中找到的所有的&lt;c0&gt;.groovy&lt;/c0&gt;和&lt;c1&gt;.java&lt;/c1&gt;文件，并排除所有其他类型的文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Contains all &lt;c0&gt;.scala&lt;/c0&gt; and &lt;c1&gt;.java&lt;/c1&gt; files found in the Scala source directories, and excludes all other types of files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150430T154829Z" creationid="msdx" creationdate="20150430T154829Z">
        <seg>包含在 Scala 源目录中找到的所有的&lt;c0&gt;.scala&lt;/c0&gt;和&lt;c1&gt;.java&lt;/c1&gt;文件，并排除所有其他类型的文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Contains only &lt;c0&gt;.java&lt;/c0&gt; files found in the Java source directories, and excludes all other files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T052424Z" creationid="Administrator" creationdate="20150427T052424Z">
        <seg>仅包含Java源文件目录里的&lt;c0&gt;.java&lt;/c0&gt;文件，并排除其他所有文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Contains only resources, and excludes any &lt;c0&gt;.java&lt;/c0&gt; files found in the resource source directories.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T052729Z" creationid="Administrator" creationdate="20150427T052708Z">
        <seg>仅包含资源文件，并且排除在资源源目录中找到的所有 &lt;c0&gt;.java&lt;/c0&gt; 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Contains only the &lt;c0&gt;.groovy&lt;/c0&gt; files found in the Groovy source directories.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T093601Z" creationid="msdx" creationdate="20150429T093601Z">
        <seg>包含在 Groovy 源目录中找到的所有的&lt;c0&gt;.groovy&lt;/c0&gt;文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Contains only the &lt;c0&gt;.scala&lt;/c0&gt; files found in the Scala source directories.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150430T154907Z" creationid="msdx" creationdate="20150430T154907Z">
        <seg>包含在 Scala 源目录中找到的所有的&lt;c0&gt;.scala&lt;/c0&gt;文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Contains the artifacts and dependencies required by this project at runtime.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T084630Z" creationid="Administrator" creationdate="20150426T084630Z">
        <seg>包含本项目运行时所需要的构件和依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Contains the project's source sets.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T045731Z" creationid="Administrator" creationdate="20150427T045731Z">
        <seg>包含项目的源集。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Content assistance in the IDE</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141117T141836Z" creationid="msdx" creationdate="20141117T140235Z">
        <seg>在 IDE 中的内容帮助</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Continuing the build when a failure occurs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163855Z" creationid="msdx" creationdate="20141109T163855Z">
        <seg>失败后继续执行</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Convention properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131651Z" creationid="msdx" creationdate="20150509T131651Z">
        <seg>约定属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Conventions</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131512Z" creationid="msdx" creationdate="20150509T131512Z">
        <seg>约定</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Conversely, Gradle's direct compiler integration (see above) will reuse the same compiler process as much as possible.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T135927Z" creationid="Administrator" creationdate="20150427T135927Z">
        <seg>相反，Gradle 的直接编译器集成 （见上文） 将尽可能多地重用相同的编译器进程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Copies of this document may be made for your own use and for distribution to others, provided that you do not charge any fee for such copies and further provided that each copy contains this Copyright Notice, whether distributed in print or electronically.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T164334Z" creationid="msdx" creationdate="20141109T161737Z">
        <seg>本文件的副本，无论其分发是以印刷版本还是电子版本，也无论是您自用，还是分发给他人，均为免费形式，并且每一份副本均需带有版权声明。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Copies production resources into the production classes directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T175142Z" creationid="Administrator" creationdate="20150425T174719Z">
        <seg>把生产资源文件拷贝到生产的类目录中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Copies test resources into the test classes directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T004522Z" creationid="Administrator" creationdate="20150426T004522Z">
        <seg>把测试的资源文件拷贝到测试的类目录中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Copies the given source set's resources into the classes directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T005839Z" creationid="Administrator" creationdate="20150426T005839Z">
        <seg>把给定的源集的资源文件拷贝到类目录中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Copy</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083212Z" creationid="msdx" creationdate="20150428T083212Z">
        <seg>Copy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Copy myCopy = task(myCopy, type: Copy)
myCopy.from &lt;s0&gt;'resources'&lt;/s0&gt;
myCopy.into &lt;s1&gt;'target'&lt;/s1&gt;
myCopy.include(&lt;s2&gt;'**/*.txt'&lt;/s2&gt;, &lt;s3&gt;'**/*.xml'&lt;/s3&gt;, &lt;s4&gt;'**/*.properties'&lt;/s4&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T092016Z" creationid="msdx" creationdate="20141110T092016Z">
        <seg>Copy myCopy = task(myCopy, type: Copy)
myCopy.from &lt;s0&gt;'resources'&lt;/s0&gt;
myCopy.into &lt;s1&gt;'target'&lt;/s1&gt;
myCopy.include(&lt;s2&gt;'**/*.txt'&lt;/s2&gt;, &lt;s3&gt;'**/*.xml'&lt;/s3&gt;, &lt;s4&gt;'**/*.properties'&lt;/s4&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Copy specs form a hierarchy.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T141557Z" creationid="msdx" creationdate="20141113T141050Z">
        <seg>复制规范用来组织一个层次结构。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Copying files</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150330T141156Z" creationid="Administrator" creationdate="20150330T141156Z">
        <seg>复制文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Copyright © 2007-2012 Hans Dockter, Adam Murdoch</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T161621Z" creationid="msdx" creationdate="20141109T161621Z">
        <seg>版权所有 © 2007-2012 Hans Dockter, Adam Murdoch</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>CreateStartScripts</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150702T105019Z" creationid="haohang" creationdate="20150702T105019Z">
        <seg>CreateStartScripts</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Creates OS specific scripts to run the project as a JVM application.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150702T105051Z" creationid="haohang" creationdate="20150702T105051Z">
        <seg>创建操作系统特定的脚本来把该项目作为一个 JVM 应用程序运行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Creates a TAR archive of the distribution contents</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150701T031238Z" creationid="haohang" creationdate="20150701T031238Z">
        <seg>创建分发内容的 TAR 文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Creates a ZIP archive of the distribution contents</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150701T030851Z" creationid="haohang" creationdate="20150701T030851Z">
        <seg>创建分发内容的 ZIP 文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Creates a full distribution TAR archive including runtime libraries and OS specific scripts.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150702T105155Z" creationid="haohang" creationdate="20150702T105155Z">
        <seg>创建包含了运行时库和操作系统特定的脚本的完整分发 TAR 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Creates a full distribution ZIP archive including runtime libraries and OS specific scripts.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150702T105148Z" creationid="haohang" creationdate="20150702T105148Z">
        <seg>创建包含了运行时库和操作系统特定的脚本的完整分发 ZIP 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Creates a full distribution ZIP archive including runtime libraries.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T070356Z" creationid="haohang" creationdate="20150707T070356Z">
        <seg>创建包含运行时库的完整分发 ZIP 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Creating archives</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150330T141212Z" creationid="Administrator" creationdate="20150330T141212Z">
        <seg>创建归档文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Creation of advanced dependency reports tailored to your use case.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T034039Z" creationid="haohang" creationdate="20150807T034039Z">
        <seg>创建高级的依赖报告，以适应你的用例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Cross-compiling is possible with the &lt;a0&gt;&lt;c1&gt;Gcc&lt;/c1&gt;&lt;/a0&gt; and &lt;a2&gt;&lt;c3&gt;Clang&lt;/c3&gt;&lt;/a2&gt; tool chains, by programmatically adding support for additional target platforms.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T094652Z" creationid="haohang" creationdate="20160408T094417Z">
        <seg>使用 &lt;a0&gt;&lt;c1&gt;Gcc&lt;/c1&gt;&lt;/a0&gt; 和 &lt;a2&gt;&lt;c3&gt;Clang&lt;/c3&gt;&lt;/a2&gt; 工具链，通过 以编程方式添加附加的目标平台的支持，是可以做到交叉编译的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Current Directory</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T160817Z" creationid="msdx" creationdate="20141105T160817Z">
        <seg>当前目录</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Customizing</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T132222Z" creationid="msdx" creationdate="20150509T132222Z">
        <seg>自定义</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>DEBUG</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T070739Z" creationid="msdx" creationdate="20141116T070739Z">
        <seg>DEBUG</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>DEBUG and higher (that is, all log messages)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T103036Z" creationid="msdx" creationdate="20141116T103036Z">
        <seg>DEBUG 及更高</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>DateServlet.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160722T091209Z" creationid="haohang" creationdate="20160722T091209Z">
        <seg>DateServlet.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Debug messages</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T070744Z" creationid="msdx" creationdate="20141116T070744Z">
        <seg>调试消息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Declarative builds and build-by-convention</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141101T034420Z" creationid="msdx" creationdate="20141101T034420Z">
        <seg>Declarative builds and build-by-convention</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Declaring variables</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T164857Z" creationid="msdx" creationdate="20141109T164857Z">
        <seg>声明变量</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Declaring your dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163600Z" creationid="msdx" creationdate="20141109T163542Z">
        <seg>依赖声明</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Decoupled projects may only interact in terms of declared dependencies: project dependencies (&lt;a2&gt;Section 50.4.3, “Project dependencies”&lt;/a2&gt;) and/or task dependencies (&lt;a3&gt;Section 6.5, “Task dependencies”&lt;/a3&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T093018Z" creationid="haohang" creationdate="20160726T093018Z">
        <seg>解耦的项目可能只在声明依赖方面会互相影响：项目依赖（&lt;a2&gt;第 50.4.3节, “项目依赖”&lt;/a2&gt;）， 或者是任务依赖（&lt;a3&gt;第 6.5节, “任务依赖”&lt;/a3&gt;）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Default Value</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T044211Z" creationid="msdx" creationdate="20141108T044211Z">
        <seg>默认值</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Default tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163347Z" creationid="msdx" creationdate="20141109T163347Z">
        <seg>默认任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Default value</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T155810Z" creationid="msdx" creationdate="20141113T155810Z">
        <seg>默认值</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Defines the root directory of your Gradle project (typically where build.gradle is located).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T160914Z" creationid="msdx" creationdate="20141105T160914Z">
        <seg>定义了你的 Gradle 项目（通常是 build.gradle 所在的位置）的根目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Defining tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150330T140947Z" creationid="Administrator" creationdate="20150330T140947Z">
        <seg>定义任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Delete</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083223Z" creationid="msdx" creationdate="20150428T083223Z">
        <seg>Delete</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Deletes the output files produced by the specified task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T005222Z" creationid="Administrator" creationdate="20150426T005222Z">
        <seg>删除由指定的任务所产生的输出文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Deletes the project build directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T005151Z" creationid="Administrator" creationdate="20150426T005151Z">
        <seg>删除项目的build目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Dependencies for C++ projects are binary libraries that export header files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160325T025531Z" creationid="haohang" creationdate="20160325T025531Z">
        <seg>C++ 项目的依赖是导出头文件的二进制库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Dependency Management Basics</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163516Z" creationid="msdx" creationdate="20141109T163515Z">
        <seg>依赖管理基础</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Dependency configurations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163609Z" creationid="msdx" creationdate="20141109T163609Z">
        <seg>依赖配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Dependency management</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131644Z" creationid="msdx" creationdate="20150509T131644Z">
        <seg>依赖管理</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Dependency management can be particularly challenging during a migration from one build system to another.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150716T035929Z" creationid="haohang" creationdate="20150716T035929Z">
        <seg>依赖管理在从一个构建系统迁移到另一个的过程中尤其具有挑战性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Dependency management is a critical feature of every build, and Gradle has placed an emphasis on offering first-class dependency management that is both easy-to-understand and compatible with a wide variety of approaches.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150714T080042Z" creationid="haohang" creationdate="20150714T080042Z">
        <seg>依赖管理是每个构建的关键特性，并且 Gradle 强调提供最好的依赖管理，容易理解以及使用各种各样的方法来兼容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Dependency resolution will fail if the required artifacts are not available in any repository specified by the build, regardless whether the local cache has retrieved this artifact from a different repository.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T150837Z" creationid="95" creationdate="20151129T150837Z">
        <seg>如果所需的构件，在构建所指定的任何仓库中都没有找到的话，依赖解析将会失败，无论本地缓存是否从一个其他的仓库中取回这个构件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Dependency resolve rules are an &lt;a0&gt;incubating&lt;/a0&gt; feature introduced in Gradle 1.4 which give you fine-grained control over the version selected for a particular dependency.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150721T092200Z" creationid="haohang" creationdate="20150721T092200Z">
        <seg>依赖解析规则是一个在 Gradle 1.4 引进的&lt;a0&gt;孵化中&lt;/a0&gt;的功能，让你可以对特定的依赖细粒度地控制所选定的版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Dependency resolve rules give you the power to enforce releasable units in your build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T061327Z" creationid="95" creationdate="20151115T061327Z">
        <seg>依赖解析规则使你能够在构建中强制指定可发布的单位。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Dependency resolve rules provide a mechanism for blacklisting a particular version of a dependency and providing a replacement version.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T055745Z" creationid="95" creationdate="20151115T055745Z">
        <seg>依赖解析规则提供了一个机制，用于把一个依赖的指定版本列入黑名单，并提供一个替代的版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Dependency resolve rules provide a neat implementation of this pattern:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T065317Z" creationid="95" creationdate="20151115T065317Z">
        <seg>依赖解析规则提供了这种模式的整洁的实现：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Dependency resolve rules provide a very powerful way to control the dependency resolution process, and can be used to implement all sorts of advanced patterns in dependency management.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T060210Z" creationid="95" creationdate="20151115T060059Z">
        <seg>依赖解析规则提供了一种非常强大的方式来控制依赖解析过程，并可以用于实现在依赖管理中各种高级模式的排序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>DependencyReportTask</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T061216Z" creationid="haohang" creationdate="20150628T061216Z">
        <seg>DependencyReportTask</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Depending on project size, the Sonar Runner may require a lot of memory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150525T234427Z" creationid="haohang" creationdate="20150525T234427Z">
        <seg>根据项目大小，Sonar Runner 可能需要大量的内存。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Depending on the test framework used (JUnit / TestNG) the test class detection uses different criteria.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T040856Z" creationid="Administrator" creationdate="20150428T040856Z">
        <seg>根据所使用的测试框架 （JUnit 或 TestNG），会使用不同的标准进行测试类的检测。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Depends on</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T174047Z" creationid="Administrator" creationdate="20150425T174047Z">
        <seg>依赖于</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Depends on the archive type, and for TAR files, the compression type as well: &lt;c0&gt;zip&lt;/c0&gt;, &lt;c1&gt;jar&lt;/c1&gt;, &lt;c2&gt;war&lt;/c2&gt;, &lt;c3&gt;tar&lt;/c3&gt;, &lt;c4&gt;tgz&lt;/c4&gt; or &lt;c5&gt;tbz2&lt;/c5&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T160615Z" creationid="msdx" creationdate="20141113T160615Z">
        <seg>依赖于归档的类型，用于TAR文件，可以是以下压缩类型： &lt;c0&gt;zip&lt;/c0&gt;, &lt;c1&gt;jar&lt;/c1&gt;, &lt;c2&gt;war&lt;/c2&gt;, &lt;c3&gt;tar&lt;/c3&gt;, &lt;c4&gt;tgz&lt;/c4&gt; or &lt;c5&gt;tbz2&lt;/c5&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Depends on the archive type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T160001Z" creationid="msdx" creationdate="20141113T160001Z">
        <seg>依赖于归档类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Deploying to a Maven repository is only half the fun if you don't have a POM. Fortunately Gradle can generate this POM for you using the dependency information it has.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160104T154047Z" creationid="95" creationdate="20160104T153501Z">
        <seg>如果你没有一个POM文件，部署到 Maven 仓库只有一半的乐趣。幸运的是 Gradle 可以使用它的依赖信息为你生成这个 POM。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Deploys your web application to a Jetty web container embedded in the build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T031550Z" creationid="Administrator" creationdate="20150425T031550Z">
        <seg>在构建中部署你的web程序到一个内嵌的Jetty web容器中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Description</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T155813Z" creationid="msdx" creationdate="20141113T155813Z">
        <seg>描述</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Despite this wide variation of requirements, the Gradle project recommends that all projects follow this set of core rules:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150716T091951Z" creationid="haohang" creationdate="20150716T091951Z">
        <seg>尽管这一要求变化很大，Gradle 项目建议所有项目都遵循这套核心规则：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Details about the Gradle Wrapper can be found in the according chapter &lt;a2&gt;Chapter 61, &lt;i3&gt;The Gradle Wrapper&lt;/i3&gt;&lt;/a2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150710T012617Z" creationid="haohang" creationdate="20150710T012617Z">
        <seg>可以根据&lt;a2&gt;第六十一章， &lt;i3&gt;Gradle Wrapper&lt;/i3&gt;&lt;/a2&gt;这一章的内容中获取有关 Gradle Wrapper 的详细信息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Did we mention faster builds?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141117T150610Z" creationid="msdx" creationdate="20141117T150610Z">
        <seg>我们提到了更快的构建吗？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Different configurations can be mapped to one or different scopes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T145057Z" creationid="95" creationdate="20160106T145057Z">
        <seg>不同的configurations可以映射到一个或不同的scopes。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Directory</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T083244Z" creationid="Administrator" creationdate="20150426T083244Z">
        <seg>目录</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Directory creation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T164922Z" creationid="msdx" creationdate="20141109T164922Z">
        <seg>创建目录</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Distribution archives typically contain then executable application and other supporting files, such as documentation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150701T025817Z" creationid="haohang" creationdate="20150701T025817Z">
        <seg>分发 archives 通常包含可执行程序，和其他支持文件，比如文档。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>DocBook XSL Stylesheets V1.75.2</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T071138Z" creationid="msdx" creationdate="20141030T071138Z">
        <seg>DocBook XSL Stylesheets V1.75.2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Does not add any particular source sets.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T073916Z" creationid="Administrator" creationdate="20150425T072006Z">
        <seg>不会添加任何特定的源集。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Does not support any meta-data formats.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T095729Z" creationid="haohang" creationdate="20150807T095729Z">
        <seg>不支持任何元数据格式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Does the same as the eclipse plugin plus generates eclipse WTP (Web Tools Platform) configuration files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T035010Z" creationid="Administrator" creationdate="20150425T035010Z">
        <seg>与 eclipse 插件一样，但它还生成 eclipse WTP （Web 工具平台） 的配置文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Don't forget that your build script is simply Groovy code that drives the Gradle API.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T040927Z" creationid="msdx" creationdate="20141108T040703Z">
        <seg>不要忘记您的构建脚本是简单的 Groovy 代码，并驱动着 Gradle API。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Double clicking a task executes it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T151043Z" creationid="msdx" creationdate="20141105T151043Z">
        <seg>双击一个任务可以执行它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Download</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162126Z" creationid="msdx" creationdate="20141109T162126Z">
        <seg>下载</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Dry Run</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T164813Z" creationid="msdx" creationdate="20141109T163958Z">
        <seg>模拟运行</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Due to the overhead of dependency analysis, a clean compilation or a compilation after a larger code change may take longer than with the Ant based compiler.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T081116Z" creationid="msdx" creationdate="20150503T080600Z">
        <seg>由于依赖分析的系统开销，一次干净的编译或在代码有了较大的更改之后的编译，可能花费的时间要长于使用基于 Ant 的编译器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Due to this mechanism, your CUnit sources may not contain a &lt;c0&gt;main&lt;/c0&gt; method since this will clash with the method provided by Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T150525Z" creationid="95" creationdate="20160504T150525Z">
        <seg>由于这一机制，你的 CUnit 源碼可能不包含一个&lt;c0&gt;main&lt;/c0&gt;方法，因为这会与 Gradle 所提供的方法产生冲突。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>During the initialization phase, Gradle determines which projects are going to take part in the build, and creates a &lt;a0&gt;&lt;c1&gt;Project&lt;/c1&gt;&lt;/a0&gt; instance for each of these projects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160518T055922Z" creationid="haohang" creationdate="20160518T055922Z">
        <seg>在初始化阶段，Gradle 确定哪些项目是需要构建的，并为每个需要构建的项目创建一个&lt;a0&gt;&lt;c1&gt;Project&lt;/c1&gt;&lt;/a0&gt;实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>During this phase the project objects are configured.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160518T075352Z" creationid="haohang" creationdate="20160518T055927Z">
        <seg>在这一阶段，对project对象进行配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Dynamic configuration from Gradle build scripts</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T055834Z" creationid="msdx" creationdate="20150513T055834Z">
        <seg>通过 Gradle 构建脚本动态配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Dynamic tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162458Z" creationid="msdx" creationdate="20141109T162458Z">
        <seg>动态任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ERROR</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T070713Z" creationid="msdx" creationdate="20141116T070713Z">
        <seg>ERROR</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each &lt;c0&gt;artifact&lt;/c0&gt; or &lt;c1&gt;ivy&lt;/c1&gt; specified for a repository adds an &lt;s2&gt;&lt;e3&gt;additional&lt;/e3&gt;&lt;/s2&gt; pattern to use.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T133103Z" creationid="95" creationdate="20151006T111402Z">
        <seg>每个&lt;c0&gt;artifact&lt;/c0&gt;或&lt;c1&gt;ivy&lt;/c1&gt;都指定了一个仓库，添加一个&lt;s2&gt;&lt;e3&gt;额外的&lt;/e3&gt;&lt;/s2&gt;的模式来使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each &lt;c3&gt;library&lt;/c3&gt; component can produce at least one &lt;a4&gt;&lt;c5&gt;SharedLibraryBinary&lt;/c5&gt;&lt;/a4&gt; and at least one &lt;a6&gt;&lt;c7&gt;StaticLibraryBinary&lt;/c7&gt;&lt;/a6&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160219T065306Z" creationid="haohang" creationdate="20160219T065306Z">
        <seg>每个&lt;c3&gt;library&lt;/c3&gt;组件可以产生至少一个&lt;a4&gt;&lt;c5&gt;SharedLibraryBinary&lt;/c5&gt;&lt;/a4&gt;和至少一个&lt;a6&gt;&lt;c7&gt;StaticLibraryBinary&lt;/c7&gt;&lt;/a6&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each added &lt;a6&gt;&lt;c7&gt;TargetPlatformConfiguration&lt;/c7&gt;&lt;/a6&gt; defines support for a particular target platform, and supplies additional tool arguments that are required to target this platform.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T094801Z" creationid="haohang" creationdate="20160408T094801Z">
        <seg>每个添加的 &lt;a6&gt;&lt;c7&gt;TargetPlatformConfiguration&lt;/c7&gt;&lt;/a6&gt; 定义了对一个特定的目标平台的支持，并且提供了针对该平台所需要的额外的工具参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each artifact can have a different set of dependencies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150724T035634Z" creationid="haohang" creationdate="20150724T035634Z">
        <seg>每个 artifact 可以有一组不同的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each binary is associated with a particular &lt;a0&gt;&lt;c1&gt;ToolChain&lt;/c1&gt;&lt;/a0&gt;, allowing settings to be targeted based on this value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160324T152216Z" creationid="95" creationdate="20160324T151850Z">
        <seg>每个二进制文件与特定的&lt;a0&gt;&lt;c1&gt;ToolChain&lt;/c1&gt;&lt;/a0&gt;关联，允许设置基于此值进行针对性的配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each binary to be produced is associated with a set of compiler and linker settings, which include command-line arguments as well as macro definitions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160324T151646Z" creationid="95" creationdate="20160324T151646Z">
        <seg>每一个产生的二进制文件都和一系列的编译器和链接器设置相关联，这些设置包含了命令行参数，以及宏定义。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each closure has a &lt;c0&gt;delegate&lt;/c0&gt; object, which Groovy uses to look up variable and method references which are not local variables or parameters of the closure.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T065123Z" creationid="msdx" creationdate="20141108T063535Z">
        <seg>每个闭包都有一个&lt;c0&gt;委托&lt;/c0&gt;对象，Groovy 使用它来查找变量和方法的引用，而不是作为闭包的局部变量或参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each component can have a set of named &lt;c0&gt;flavors&lt;/c0&gt;, and a separate binary variant can be produced for each flavor.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T080648Z" creationid="haohang" creationdate="20160405T034226Z">
        <seg>每个组件都可以有一组&lt;c0&gt;flavors&lt;/c0&gt;，并且能为每一个flavor生成一个单独的二进制变种。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each element in the tree represents a project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T030603Z" creationid="haohang" creationdate="20160519T030603Z">
        <seg>树中的每个元素表示一个项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each filter has a POM associated with it which you can configure.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T144438Z" creationid="95" creationdate="20160106T144438Z">
        <seg>每个过滤器都有一个你可以进行配置的POM与它关联。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each jar or war object has a &lt;c0&gt;manifest&lt;/c0&gt; property with a separate instance of &lt;a1&gt;&lt;c2&gt;Manifest&lt;/c2&gt;&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T145129Z" creationid="msdx" creationdate="20150428T145129Z">
        <seg>每个 jar 或war 对象都有一个单独的&lt;a1&gt;&lt;c2&gt;Manifest&lt;/c2&gt;&lt;/a1&gt;实例的&lt;c0&gt;manifest&lt;/c0&gt;属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each module (also called &lt;s0&gt;&lt;e1&gt;component&lt;/e1&gt;&lt;/s0&gt;) has metadata associated with it, such as its group, name, version, dependencies, and so on.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T091619Z" creationid="95" creationdate="20151115T091619Z">
        <seg>每个模块（也称为&lt;s0&gt;&lt;e1&gt;组件&lt;/e1&gt;&lt;/s0&gt;）都有相关的元数据上，像它的组，名称，版本，依赖，等等。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each native binary produced for a component is referred to as &lt;c0&gt;variant&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160219T065859Z" creationid="haohang" creationdate="20160219T065819Z">
        <seg>组件所产生的每个原生二进制称为&lt;c0&gt;variant&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each of these functional source sets will contain a language-specific source set for each of the languages supported by the project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160219T064958Z" creationid="haohang" creationdate="20160219T064958Z">
        <seg>这些功能源码集将为project所支持的每一种语言包含指定语言的源码集。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each project in the hierarchy has its own project configuration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T091256Z" creationid="msdx" creationdate="20150512T091256Z">
        <seg>层次结构中的每个项目都有其自身的项目配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each project object has by default a name equals to the name of its top level directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T080620Z" creationid="haohang" creationdate="20160519T080620Z">
        <seg>每个project 对象都有和其顶层目录名称一样的默认名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each repository can have its own layout.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T134257Z" creationid="95" creationdate="20151006T134257Z">
        <seg>每个仓库都可以有其自己的布局。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each repository is inspected in order, searching first for a &lt;s2&gt;&lt;e3&gt;module descriptor&lt;/e3&gt;&lt;/s2&gt; file (POM or Ivy file) that indicates the presence of that module.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151007T023251Z" creationid="95" creationdate="20151007T023251Z">
        <seg>每个仓库按顺序进行检查，首先查找指示该模块存在的&lt;s2&gt;&lt;e3&gt;模块描述符&lt;/e3&gt;&lt;/s2&gt;文件（POM 或 Ivy 文件）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each task has an &lt;c0&gt;inputs&lt;/c0&gt; and &lt;c1&gt;outputs&lt;/c1&gt; property, which you use to declare the inputs and outputs of the task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T061143Z" creationid="msdx" creationdate="20141111T061143Z">
        <seg>每个任务都有一个&lt;c0&gt;inputs&lt;/c0&gt;和&lt;c1&gt;outputs&lt;/c1&gt;的属性，用来声明任务的输入和输出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each test process executes only a single test at a time, so you generally don't need to do anything special to your tests to take advantage of this.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T013445Z" creationid="Administrator" creationdate="20150427T141116Z">
        <seg>每个测试进程会依次执行一个单一的测试，所以你一般不需要对你的测试做任何的配置来利用这一点。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each time after that, before the task is executed, Gradle takes a new snapshot of the inputs and outputs.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T063621Z" creationid="msdx" creationdate="20141111T063621Z">
        <seg>之后每一次，在执行任务之前，Gradle 会对输入和输出进行一次新的快照。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each tool chain implementation allows for a certain degree of configuration (see the API documentation for more details).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T091347Z" creationid="haohang" creationdate="20160408T091347Z">
        <seg>每个工具链的实现都允许一定程度的配置（更多细节请参阅API文档）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Eager to try out this new feature?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160522T124959Z" creationid="95" creationdate="20160522T124959Z">
        <seg>想尝试这一新功能？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Ear</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T094606Z" creationid="msdx" creationdate="20150503T094606Z">
        <seg>ear</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Ear resources, such as a META-INF directory</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T095238Z" creationid="msdx" creationdate="20150503T095238Z">
        <seg>Ear 资源，如 META-INF 目录</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Eclipse Integration</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T132119Z" creationid="msdx" creationdate="20150509T132119Z">
        <seg>Eclipse 集成</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>EclipseClasspath</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T022414Z" creationid="haohang" creationdate="20150624T022414Z">
        <seg>EclipseClasspath</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>EclipseJdt</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T022427Z" creationid="haohang" creationdate="20150624T022427Z">
        <seg>EclipseJdt</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>EclipseModel</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T004647Z" creationid="haohang" creationdate="20150603T004647Z">
        <seg>EclipseModel</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>EclipseProject</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T022401Z" creationid="haohang" creationdate="20150624T022401Z">
        <seg>EclipseProject</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>EclipseWtpComponent</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T022455Z" creationid="haohang" creationdate="20150624T022455Z">
        <seg>EclipseWtpComponent</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>EclipseWtpFacet</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T022525Z" creationid="haohang" creationdate="20150624T022525Z">
        <seg>EclipseWtpFacet</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Edit the build.gradle file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T154249Z" creationid="msdx" creationdate="20141105T154249Z">
        <seg>编辑 build.gradle 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Editing the filter allows you to configure which tasks and projects are shown.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T153643Z" creationid="msdx" creationdate="20141105T151459Z">
        <seg>通过编辑过滤器，你可以对哪些任务和项目要显示进行配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Element</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T141848Z" creationid="95" creationdate="20160105T141848Z">
        <seg>元素</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Enables new incubating mode that makes Gradle selective when configuring projects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141120T052554Z" creationid="msdx" creationdate="20141120T052554Z">
        <seg>启用新的孵化模式，可以在配置项目时使得 Gradle 具有选择性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Enabling the build logic to make decisions based on the content of the dependency graph.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T034153Z" creationid="haohang" creationdate="20150807T034153Z">
        <seg>启用使构建逻辑基于依赖树的内容来决定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Enabling this option hides any output when a task is executed unless the build fails.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T161218Z" creationid="msdx" creationdate="20141105T161218Z">
        <seg>启用此选项将在任务执行时隐藏任何输出，除非构建失败。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Enforce sequential ordering of tasks: eg.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T144025Z" creationid="msdx" creationdate="20141110T143645Z">
        <seg>强制任务顺序执行： 如，</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Enter the daemon</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150508T131745Z" creationid="msdx" creationdate="20150508T131745Z">
        <seg>走进守护进程</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Entries in the &lt;c0&gt;properties&lt;/c0&gt; map can be read and written with the usual Groovy syntax.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150525T232743Z" creationid="haohang" creationdate="20150525T232743Z">
        <seg>在&lt;c0&gt;properties&lt;/c0&gt; map的条目可以使用常见的 Groovy 语法来读取和写入。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Environment variables</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162141Z" creationid="msdx" creationdate="20141109T162141Z">
        <seg>环境变量</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Error messages</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T070715Z" creationid="msdx" creationdate="20141116T070715Z">
        <seg>错误消息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Especially useful for the classic 'single test method execution' use case.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T023259Z" creationid="Administrator" creationdate="20150428T023259Z">
        <seg>这对“单一测试方法的执行”的经典用例特别有用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Even faster builds: preemptively evaluate projects, so that the model is ready when the user next invokes Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141117T144240Z" creationid="msdx" creationdate="20141117T144023Z">
        <seg>更快的构建： 预评估项目，这样当用户接下来调用 Gradle 时，模型就准备好了。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Even if your project is using a custom dependency management system or something like an Eclipse .classpath file as master data for dependency management, it is very easy to write a Gradle plugin to use this data in Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150716T045145Z" creationid="haohang" creationdate="20150716T045130Z">
        <seg>即使你的项目使用一个自定义的依赖管理系统，或者是一些像 Eclipse 作为依赖管理的主数据的 .classpath 文件，那么可以很容易地写一个 Gradle 插件在 Gradle 中使用此数据。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Even more, this declarative language is extensible.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141101T035250Z" creationid="msdx" creationdate="20141101T035250Z">
        <seg>并且，这种声明性的语言是可以扩展的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Eventually, most configuration is passed to the Sonar code analyzer in the form of key-value pairs known as Sonar properties.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T100238Z" creationid="msdx" creationdate="20150512T092757Z">
        <seg>最终，大多数配置都会以被称为 Sonar 属性的键-值对的形式传递给 Sonar 的代码分析器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Every entry in the metadata cache includes a record of the repository that provided the information as well as a timestamp that can be used for cache expiry.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T045601Z" creationid="95" creationdate="20151129T045443Z">
        <seg>每个元数据缓存中的条目包括了一条存储库中提供的信息，以及可用于缓存到期的时间戳的记录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Every parallel worker exclusively owns a given project while executing a task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T091300Z" creationid="haohang" creationdate="20160726T091300Z">
        <seg>当执行一个任务时，每一个并行的worker都仅拥有一个给定的项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Every project except the root project has a parent project and might have child projects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T080654Z" creationid="haohang" creationdate="20160519T080621Z">
        <seg>除了根 project，每个project有一个父project，并且可能还有子projects。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Every task has also an &lt;c0&gt;enabled&lt;/c0&gt; flag which defaults to &lt;c1&gt;true&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T055546Z" creationid="msdx" creationdate="20141111T055546Z">
        <seg>每一项任务有一个默认值为&lt;c1&gt;true&lt;/c1&gt;的&lt;c0&gt;enabled&lt;/c0&gt;标记。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example: someTask.dependsOn(":someOtherProject:someOtherTask")</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160522T124727Z" creationid="95" creationdate="20160522T124727Z">
        <seg>示例：someTask.dependsOn(":someOtherProject:someOtherTask")</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Examples include using '&lt;c0&gt;groovy&lt;/c0&gt;' in place of '&lt;c1&gt;groovy-all&lt;/c1&gt;', or using '&lt;c2&gt;log4j-over-slf4j&lt;/c2&gt;' instead of '&lt;c3&gt;log4j&lt;/c3&gt;'.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T090504Z" creationid="95" creationdate="20151115T090504Z">
        <seg>示例包括，使用“&lt;c0&gt;groovy&lt;/c0&gt;”来代替“&lt;c1&gt;groovy-all&lt;/c1&gt;”，或者使用“&lt;c2&gt;log4j-over-slf4j&lt;/c2&gt;”来代替“&lt;c3&gt;log4j&lt;/c3&gt;”。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Examples of different variants include debug vs release binaries, 32-bit vs 64-bit binaries, and binaries produced with different custom preprocessor flags.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160401T064009Z" creationid="haohang" creationdate="20160401T064009Z">
        <seg>这样的例子包括debug及release的二进制文件，32位及64位的二进制文件，以及使用不同的自定义预处理标志生成的二进制文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Examples:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T040227Z" creationid="Administrator" creationdate="20150428T040227Z">
        <seg>示例：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 10.1. War plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T095559Z" creationid="msdx" creationdate="20150503T095559Z">
        <seg>示例 10.1. 使用War 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 10.2. Running web application with Jetty plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T094211Z" creationid="msdx" creationdate="20141030T094211Z">
        <seg>Example 10.2. Running web application with Jetty plugin</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 12.1. Launching the GUI</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T145759Z" creationid="msdx" creationdate="20141105T145759Z">
        <seg>Example 12.1. Launching the GUI</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 13.1. Accessing property of the Project object</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T043128Z" creationid="msdx" creationdate="20141108T043128Z">
        <seg>Example 13.1. 访问 Project 对象的属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 13.2. Using local variables</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T045039Z" creationid="msdx" creationdate="20141108T045039Z">
        <seg>示例 13.2. 使用局部变量</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 13.3. Using extra properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T050705Z" creationid="msdx" creationdate="20141108T050702Z">
        <seg>13.3 例子. 使用额外属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 13.4. Groovy JDK methods</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T061736Z" creationid="msdx" creationdate="20141108T061337Z">
        <seg>示例 13.4. Groovy JDK 的方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 13.5. Property accessors</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T061747Z" creationid="msdx" creationdate="20141108T061730Z">
        <seg>例子 13.5. 属性访问器</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 13.6. Method call without parentheses</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T062519Z" creationid="msdx" creationdate="20141108T062519Z">
        <seg>示例 13.6. 不带括号的方法调用</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 13.7. List and map literals</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T064428Z" creationid="msdx" creationdate="20141108T063118Z">
        <seg>Example 13.7. List and map</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 13.8. Closure as method parameter</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T064414Z" creationid="msdx" creationdate="20141108T064414Z">
        <seg>Example 13.8. 作为方法参数的闭包</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 13.9. Closure delegates</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T065046Z" creationid="msdx" creationdate="20141108T065046Z">
        <seg>Example 13.9. 闭包委托</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 14.1. Directory creation with mkdir</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T073242Z" creationid="msdx" creationdate="20141109T073242Z">
        <seg>示例 14.1.  使用 mkdir 创建目录</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 14.2. Setting properties with a gradle.properties file</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T151047Z" creationid="msdx" creationdate="20141109T151020Z">
        <seg>未例 14.2. 使用 gradle.properties 文件设置属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 14.3. Configuring the project using an external build script</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T152423Z" creationid="msdx" creationdate="20141109T152423Z">
        <seg>示例14.3. 使用外部构建脚本配置项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 14.4. Configuring arbitrary objects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T152802Z" creationid="msdx" creationdate="20141109T152802Z">
        <seg>示例 14.4. 配置任意对象</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 14.5. Configuring arbitrary objects using a script</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T152957Z" creationid="msdx" creationdate="20141109T152944Z">
        <seg>示例14.5. 使用脚本配置任意对象</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 15.1. Defining tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T021253Z" creationid="msdx" creationdate="20141110T021253Z">
        <seg>示例 15.1. 定义任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 15.10. Defining a task with closure</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T100010Z" creationid="msdx" creationdate="20141110T100010Z">
        <seg>示例 15.10. 使用闭包定义任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 15.11. Adding dependency on task from another project</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T122304Z" creationid="msdx" creationdate="20141110T122247Z">
        <seg>示例 15.11. 从另一个项目的任务上添加依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 15.12. Adding dependency using task object</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T122605Z" creationid="msdx" creationdate="20141110T122605Z">
        <seg>示例 15.12. 使用 task 对象添加依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 15.13. Adding dependency using closure</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T123859Z" creationid="msdx" creationdate="20141110T123859Z">
        <seg>示例 15.13. 使用闭包添加依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 15.14. Adding a 'must run after' task ordering</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T012831Z" creationid="msdx" creationdate="20141111T012831Z">
        <seg>示例 15.14. 添加 '必须在之后运行 ' 的任务排序</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 15.15. Adding a 'should run after' task ordering</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T012912Z" creationid="msdx" creationdate="20141111T012903Z">
        <seg>示例 15.15. 添加 '应该在之后运行 ' 的任务排序</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 15.16. Task ordering does not imply task execution</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T013508Z" creationid="msdx" creationdate="20141111T013508Z">
        <seg>示例 15.16. 任务排序并不意味着任务执行</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 15.17. A 'should run after' task ordering is ignored if it introduces an ordering cycle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T014951Z" creationid="msdx" creationdate="20141111T014951Z">
        <seg>示例 15.17. 当引入循环时，“应该在其之后运行”的任务排序会被忽略</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 15.18. Adding a description to a task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T015506Z" creationid="msdx" creationdate="20141111T015506Z">
        <seg>示例 15.18. 向任务添加描述</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 15.19. Overwriting a task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T015852Z" creationid="msdx" creationdate="20141111T015844Z">
        <seg>示例 15.19. 重写任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 15.2. Defining tasks - using strings for task names</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T022739Z" creationid="msdx" creationdate="20141110T022739Z">
        <seg>示例 15.2. 定义任务 — — 使用字符串作为任务名称</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 15.20. Skipping a task using a predicate</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T021013Z" creationid="msdx" creationdate="20141111T021013Z">
        <seg>示例 15.20. 使用断言跳过一个任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 15.21. Skipping tasks with StopExecutionException</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T054809Z" creationid="msdx" creationdate="20141111T054809Z">
        <seg>示例 15.21. 使用 StopExecutionException 跳过任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 15.22. Enabling and disabling tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T055741Z" creationid="msdx" creationdate="20141111T055741Z">
        <seg>示例 15.22. 启用和禁用任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 15.23. A generator task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T060310Z" creationid="msdx" creationdate="20141111T060310Z">
        <seg>示例 15.23. 一个生成任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 15.24. Declaring the inputs and outputs of a task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T061306Z" creationid="msdx" creationdate="20141111T061306Z">
        <seg>示例 15.24. 声明一个任务的输入和输出</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 15.25. Task rule</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T064956Z" creationid="msdx" creationdate="20141111T064956Z">
        <seg>示例 15.25. 任务规则</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 15.26. Dependency on rule based tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T065647Z" creationid="msdx" creationdate="20141111T065647Z">
        <seg>示例 15.26. 基于规则的任务依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 15.27. Adding a task finalizer</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T070152Z" creationid="msdx" creationdate="20141111T065933Z">
        <seg>示例 15.27. 添加一个析构器任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 15.28. Task finalizer for a failing task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T070326Z" creationid="msdx" creationdate="20141111T070326Z">
        <seg>示例 15.28. 执行失败的任务的任务析构器</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 15.3. Defining tasks with alternative syntax</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T023135Z" creationid="msdx" creationdate="20141110T023135Z">
        <seg>示例 15.3. 使用替代语法定义任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 15.4. Accessing tasks as properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T081018Z" creationid="msdx" creationdate="20141110T080949Z">
        <seg>示例 15.4. 以属性方式访问任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 15.5. Accessing tasks via tasks collection</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T081113Z" creationid="msdx" creationdate="20141110T081023Z">
        <seg>示例 15.5. 通过tasks集合访问任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 15.6. Accessing tasks by path</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T082143Z" creationid="msdx" creationdate="20141110T082143Z">
        <seg>示例 15.6. 通过路径访问任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 15.7. Creating a copy task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T090220Z" creationid="msdx" creationdate="20141110T090220Z">
        <seg>示例 15.7. 创建一个复制任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 15.8. Configuring a task - various ways</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T092005Z" creationid="msdx" creationdate="20141110T091953Z">
        <seg>示例 15.8. 配置任务的几种方式</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 15.9. Configuring a task - with closure</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T092503Z" creationid="msdx" creationdate="20141110T092503Z">
        <seg>示例 15.9. 配置任务-使用闭包</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 16.1. Locating files</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150330T151013Z" creationid="msdx" creationdate="20141111T160817Z">
        <seg>示例 16.1. 查找文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 16.10. Copying files using the copy task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T124405Z" creationid="msdx" creationdate="20141113T124405Z">
        <seg>示例 16.10. 使用copy任务复制文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 16.11. Specifying copy task source files and destination directory</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T130946Z" creationid="msdx" creationdate="20141113T130946Z">
        <seg>示例 16.11. 指定复制任务的源文件和目标目录</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 16.12. Selecting the files to copy</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T131120Z" creationid="msdx" creationdate="20141113T131120Z">
        <seg>示例 16.12. 选择要复制的文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 16.13. Copying files using the copy() method without up-to-date check</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T131755Z" creationid="msdx" creationdate="20141113T131755Z">
        <seg>示例 16.13. 使用没有最新状态检查的 copy() 方法复制文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 16.14. Copying files using the copy() method with up-to-date check</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T134158Z" creationid="msdx" creationdate="20141113T134158Z">
        <seg>示例 16.14. 使用有最新状态检查的 copy() 方法复制文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 16.15. Renaming files as they are copied</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T140745Z" creationid="msdx" creationdate="20141113T140710Z">
        <seg>示例 16.15. 重命名复制的文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 16.16. Filtering files as they are copied</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T140841Z" creationid="msdx" creationdate="20141113T140734Z">
        <seg>示例 16.16. 过滤要复制的文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 16.17. Nested copy specs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T141626Z" creationid="msdx" creationdate="20141113T141626Z">
        <seg>示例 16.17. 嵌套的复制规范</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 16.18. Using the Sync task to copy dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T145436Z" creationid="msdx" creationdate="20141113T145436Z">
        <seg>示例 16.18. 使用同步任务复制依赖项</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 16.19. Creating a ZIP archive</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T145755Z" creationid="msdx" creationdate="20141113T145755Z">
        <seg>示例 16.19. 创建一个 ZIP 文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 16.2. Creating a file collection</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T155005Z" creationid="msdx" creationdate="20141112T155005Z">
        <seg>示例 16.2. 创建一个文件集合</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 16.20. Creation of ZIP archive</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T154733Z" creationid="msdx" creationdate="20141113T154733Z">
        <seg>示例 16.20. 创建 ZIP 文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 16.21. Configuration of archive task - custom archive name</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T155544Z" creationid="msdx" creationdate="20141113T155544Z">
        <seg>示例 16.21. 配置归档任务-自定义归档名称</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 16.22. Configuration of archive task - appendix &amp; classifier</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T155754Z" creationid="msdx" creationdate="20141113T155600Z">
        <seg>示例 16.22. 配置归档任务 - appendix &amp; classifier</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 16.3. Using a file collection</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T155902Z" creationid="msdx" creationdate="20141111T160912Z">
        <seg>示例 16.3. 使用一个文件集合</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 16.4. Implementing a file collection</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T160730Z" creationid="msdx" creationdate="20141112T160730Z">
        <seg>示例 16.4. 实现一个文件集合</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 16.5. Creating a file tree</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T120219Z" creationid="msdx" creationdate="20141113T120219Z">
        <seg>示例 16.5. 创建一个文件树</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 16.6. Using a file tree</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T120355Z" creationid="msdx" creationdate="20141113T120355Z">
        <seg>示例 16.6. 使用文件树</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 16.7. Using an archive as a file tree</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T122843Z" creationid="msdx" creationdate="20141113T122843Z">
        <seg>示例 16.7. 使用归档文件作为文件树</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 16.8. Specifying a set of files</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T123307Z" creationid="msdx" creationdate="20141113T123307Z">
        <seg>示例 16.8. 指定一组文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 16.9. Specifying a set of files</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T123629Z" creationid="msdx" creationdate="20141113T123629Z">
        <seg>示例 16.9. 指定一组文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 17.1. Using an Ant task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141115T153407Z" creationid="msdx" creationdate="20141115T153407Z">
        <seg>示例 17.1. 使用 Ant 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 17.10. Adding behaviour to an Ant target</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T061044Z" creationid="msdx" creationdate="20141116T061044Z">
        <seg>示例 17.10. 将行为添加到 Ant 目标</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 17.11. Ant target that depends on Gradle task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T061142Z" creationid="msdx" creationdate="20141116T061142Z">
        <seg>示例 17.11. 依赖于 Gradle 任务的 Ant 目标</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 17.12. Setting an Ant property</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T062002Z" creationid="msdx" creationdate="20141116T062002Z">
        <seg>示例 17.12. Ant 属性设置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 17.13. Getting an Ant property</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T062231Z" creationid="msdx" creationdate="20141116T062218Z">
        <seg>示例 17.13. 获取 Ant 属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 17.14. Setting an Ant reference</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T062647Z" creationid="msdx" creationdate="20141116T062647Z">
        <seg>示例 17.14. Ant 引用设置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 17.15. Getting an Ant reference</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T062719Z" creationid="msdx" creationdate="20141116T062719Z">
        <seg>示例 17.15. 获取 Ant 引用</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 17.2. Passing nested text to an Ant task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141115T154955Z" creationid="msdx" creationdate="20141115T154711Z">
        <seg>示例 17.2. 向 Ant 任务传入嵌套文本</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 17.3. Passing nested elements to an Ant task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141115T162753Z" creationid="msdx" creationdate="20141115T162753Z">
        <seg>示例 17.3. 向 Ant 任务传入嵌套元素</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 17.4. Using an Ant type</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T011226Z" creationid="msdx" creationdate="20141116T011226Z">
        <seg>示例 17.4. 使用 Ant 类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 17.5. Using a custom Ant task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T060205Z" creationid="msdx" creationdate="20141116T060205Z">
        <seg>示例 17.5. 使用自定义 Ant 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 17.6. Declaring the classpath for a custom Ant task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T060528Z" creationid="msdx" creationdate="20141116T060528Z">
        <seg>示例 17.6. 声明用于自定义 Ant 任务的类路径</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 17.7. Using a custom Ant task and dependency management together</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T060631Z" creationid="msdx" creationdate="20141116T060621Z">
        <seg>示例 17.7. 同时使用自定义 Ant 任务和依赖管理</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 17.8. Importing an Ant build</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T060912Z" creationid="msdx" creationdate="20141116T060912Z">
        <seg>示例 17.8. 导入 Ant 构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 17.9. Task that depends on Ant target</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T061008Z" creationid="msdx" creationdate="20141116T061008Z">
        <seg>示例 17.9. 依赖于 Ant 目标的任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 18.1. Using stdout to write log messages</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T122537Z" creationid="msdx" creationdate="20141116T122537Z">
        <seg>示例18.1. 使用标准输出写日志</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 18.2. Writing your own log messages</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T125913Z" creationid="msdx" creationdate="20141116T125913Z">
        <seg>示例 18.2. 编写自己的日志消息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 18.3. Using SLF4J to write log messages</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T130533Z" creationid="msdx" creationdate="20141116T130533Z">
        <seg>示例 18.3. 使用 SLF4J 编写日志消息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 18.4. Configuring standard output capture</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T150300Z" creationid="msdx" creationdate="20141116T150300Z">
        <seg>示例 18.4. 配置标准输出捕获</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 18.5. Configuring standard output capture for a task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T150933Z" creationid="msdx" creationdate="20141116T150933Z">
        <seg>示例 18.5. 对任务配置标准输出捕获</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 18.6. Customizing what Gradle logs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T154814Z" creationid="msdx" creationdate="20141116T154814Z">
        <seg>示例 18.6 的例子. 自定义 Gradle 日志</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 20.1. Configuring an HTTP proxy</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141121T141740Z" creationid="msdx" creationdate="20141121T141740Z">
        <seg>示例 20.1. 配置 HTTP 代理服务器</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 20.2. Configuring an HTTPS proxy</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141121T141803Z" creationid="msdx" creationdate="20141121T141803Z">
        <seg>示例 20.2. 配置 HTTPS 代理服务器</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 21.1. Applying a plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141122T162030Z" creationid="msdx" creationdate="20141122T162030Z">
        <seg>示例 21.1. 应用插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 21.2. Applying a plugin by type</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141122T162339Z" creationid="msdx" creationdate="20141122T162339Z">
        <seg>示例 21.2. 通过类型应用插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 21.3. Applying a plugin by type</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141122T162533Z" creationid="msdx" creationdate="20141122T162533Z">
        <seg>示例 21.3. 通过类型应用插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 21.4. Tasks added by a plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141123T151128Z" creationid="msdx" creationdate="20141123T151128Z">
        <seg>示例 21.4. 通过插件添加任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 21.5. Changing plugin defaults</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141123T154207Z" creationid="msdx" creationdate="20141123T154207Z">
        <seg>示例 21.5. 更改插件的默认设置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 21.6. Plugin convention object</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141124T073952Z" creationid="msdx" creationdate="20141124T073952Z">
        <seg>示例 21.6. 插件中的约定对象</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 23.1. Using the Java plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T073724Z" creationid="Administrator" creationdate="20150425T073724Z">
        <seg>示例 23.1. 使用 Java 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 23.10. Running tests in a source set</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T133541Z" creationid="Administrator" creationdate="20150427T133541Z">
        <seg>示例 23.10. 运行源集里的测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 23.11. Filtering tests in the build script</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T023951Z" creationid="Administrator" creationdate="20150428T023951Z">
        <seg>示例 23.11. 在构建脚本中过滤测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 23.12. JUnit Categories</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T082901Z" creationid="msdx" creationdate="20150428T082901Z">
        <seg>示例 23.12. JUnit 类别</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 23.13. Grouping TestNG tests</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083148Z" creationid="msdx" creationdate="20150428T083148Z">
        <seg>示例 23.13. 对TestNG 测试分组</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 23.14. Creating a unit test report for subprojects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T142808Z" creationid="msdx" creationdate="20150428T142808Z">
        <seg>示例 23.14. 为多个子项目创建一个单元测试报告</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 23.15. Customization of MANIFEST.MF</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T145223Z" creationid="msdx" creationdate="20150428T145223Z">
        <seg>示例 23.15. 自定义的MANIFEST.MF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 23.16. Creating a manifest object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T145341Z" creationid="msdx" creationdate="20150428T145341Z">
        <seg>示例 23.16. 创建一个manifest 对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 23.17. Separate MANIFEST.MF for a particular archive</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T145615Z" creationid="msdx" creationdate="20150428T145615Z">
        <seg>示例 23.17. 指定archive的单独MANIFEST.MF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 23.18. Separate MANIFEST.MF for a particular archive</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T151507Z" creationid="msdx" creationdate="20150428T151507Z">
        <seg>示例 23.18. 指定archive的单独 MANIFEST.MF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 23.2. Custom Java source layout</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T083815Z" creationid="Administrator" creationdate="20150426T083815Z">
        <seg>示例 23.2. 自定义Java 源代码布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 23.3. Accessing a source set</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T050722Z" creationid="Administrator" creationdate="20150427T050722Z">
        <seg>示例 23.3. 访问源集</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 23.4. Configuring the source directories of a source set</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T051101Z" creationid="Administrator" creationdate="20150427T051101Z">
        <seg>示例 23.4. 配置源集的源代码目录</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 23.5. Defining a source set</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T053341Z" creationid="Administrator" creationdate="20150427T053341Z">
        <seg>示例 23.5. 定义一个源集</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 23.6. Defining source set dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T133011Z" creationid="Administrator" creationdate="20150427T133011Z">
        <seg>示例 23.6. 定义源集依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 23.7. Compiling a source set</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T133224Z" creationid="Administrator" creationdate="20150427T133224Z">
        <seg>示例 23.7. 编译源集</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 23.8. Assembling a JAR for a source set</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T133423Z" creationid="Administrator" creationdate="20150427T133423Z">
        <seg>示例 23.8. 为一个源集装配一个JAR文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 23.9. Generating the Javadoc for a source set</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T133446Z" creationid="Administrator" creationdate="20150427T133446Z">
        <seg>示例 23.9. 为一个源集生成 Javadoc：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 24.1. Using the Groovy plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T071317Z" creationid="msdx" creationdate="20150429T071317Z">
        <seg>示例 24.1. 使用 Groovy 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 24.2. Custom Groovy source layout</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T075353Z" creationid="msdx" creationdate="20150429T075353Z">
        <seg>示例 24.2. 自定义 Groovy 自定义源文件布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 24.3. Configuration of Groovy dependency</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T075939Z" creationid="msdx" creationdate="20150429T075939Z">
        <seg>示例 24.3. Groovy 的依赖配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 24.4. Configuration of Groovy test dependency</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T080015Z" creationid="msdx" creationdate="20150429T080015Z">
        <seg>示例 24.4. 配置Groovy 测试依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 24.5. Configuration of bundled Groovy dependency</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T080608Z" creationid="msdx" creationdate="20150429T080608Z">
        <seg>示例 24.5. 配置捆绑的 Groovy 依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 24.6. Configuration of Groovy file dependency</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T080909Z" creationid="msdx" creationdate="20150429T080909Z">
        <seg>示例 24.6. 配置Groovy 文件依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 25.1. Using the Scala plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T145324Z" creationid="msdx" creationdate="20150429T145324Z">
        <seg>示例 25.1. 使用 Scala 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 25.2. Custom Scala source layout</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T152728Z" creationid="msdx" creationdate="20150429T152728Z">
        <seg>示例 24.2. 自定义 Scala 源文件布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 25.3. Declaring a Scala dependency for production code</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T152944Z" creationid="msdx" creationdate="20150429T152944Z">
        <seg>示例 25.3. 为production 代码定义一个Scala 依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 25.4. Declaring a Scala dependency for test code</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T153035Z" creationid="msdx" creationdate="20150429T153035Z">
        <seg>示例 25.4. 为 test 代码定义一个Scala 依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 25.5. Enabling the Fast Scala Compiler</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150430T155213Z" creationid="msdx" creationdate="20150430T155213Z">
        <seg>示例 25.5. 启用 Fast Scala Compiler</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 25.6. Adjusting memory settings</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150430T160053Z" creationid="msdx" creationdate="20150430T160043Z">
        <seg>示例 25.6. 调整内存设置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 25.7. Activating the Zinc based compiler</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T154307Z" creationid="msdx" creationdate="20150501T154307Z">
        <seg>示例 25.7. 激活基于 Zinc 编译器</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 26.1. Using the War plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T085859Z" creationid="msdx" creationdate="20150503T085859Z">
        <seg>示例 26.1. 使用War 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 26.2. Customization of war plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T093816Z" creationid="msdx" creationdate="20150503T093816Z">
        <seg>示例 26.2. war 插件的自定义</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 27.1. Using the Ear plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T094445Z" creationid="msdx" creationdate="20150503T094445Z">
        <seg>示例 27.1. 使用 Ear 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 27.2. Customization of ear plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T142848Z" creationid="msdx" creationdate="20150504T142848Z">
        <seg>示例 26.2. ear 插件的自定义</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 28.1. Using the Jetty plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T150151Z" creationid="msdx" creationdate="20150504T150151Z">
        <seg>示例 28.1. 使用 Jetty 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 29.1. Using the Checkstyle plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T151750Z" creationid="msdx" creationdate="20150504T151750Z">
        <seg>示例 29.1. 使用 Checkstyle 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 30.1. Using the CodeNarc plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T133100Z" creationid="msdx" creationdate="20150505T133100Z">
        <seg>示例 30.1. 使用 CodeNarc 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 31.1. Using the FindBugs plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T133621Z" creationid="msdx" creationdate="20150505T133621Z">
        <seg>示例 31.1. 使用 FindBugs 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 32.1. Using the JDepend plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T134207Z" creationid="msdx" creationdate="20150505T134207Z">
        <seg>示例 32.1. 使用 JDepend 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 33.1. Using the PMD plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T135524Z" creationid="msdx" creationdate="20150505T135524Z">
        <seg>示例 33.1. 使用 PMD 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 34.1. Applying the JaCoCo plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T130227Z" creationid="msdx" creationdate="20150506T130227Z">
        <seg>示例 34.1. 应用 JaCoCo 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 34.2. Configuring JaCoCo plugin settings</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T131553Z" creationid="msdx" creationdate="20150506T131553Z">
        <seg>示例 34.2. 配置 JaCoCo 插件设置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 34.3. Configuring test task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T131959Z" creationid="msdx" creationdate="20150506T131959Z">
        <seg>示例 34.3. 配置测试任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 34.4. Configuring test task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T132253Z" creationid="msdx" creationdate="20150506T132253Z">
        <seg>示例 34.4. 配置测试任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 34.5. Using application plugin to generate code coverage data</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T135602Z" creationid="msdx" creationdate="20150506T135602Z">
        <seg>示例 34.5. 使用 application 插件来生成代码覆盖率数据</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 34.6. Coverage reports generated by applicationCodeCoverageReport</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T135807Z" creationid="msdx" creationdate="20150506T135807Z">
        <seg>示例 34.6. 由 applicationCodeCoverageReport 生成的覆盖率报告</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 35.1. Applying the Sonar plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150510T143421Z" creationid="msdx" creationdate="20150510T143421Z">
        <seg>示例 35.1. 配置使用 Sonar 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 35.10. Analyzing languages other than Java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T092636Z" creationid="msdx" creationdate="20150512T092636Z">
        <seg>示例 35.10. 分析非 Java 语言</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 35.11. Setting custom global properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T101337Z" creationid="msdx" creationdate="20150512T101337Z">
        <seg>示例 35.11. 设置自定义的全局属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 35.12. Setting custom project properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T101426Z" creationid="msdx" creationdate="20150512T101426Z">
        <seg>示例 35.12. 设置自定义的项目属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 35.13. Implementing custom command line properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T054035Z" creationid="msdx" creationdate="20150513T054035Z">
        <seg>示例 35.13. 实现自定义命令行属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 35.2. Configuring Sonar connection settings</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150510T143648Z" creationid="msdx" creationdate="20150510T143648Z">
        <seg>示例 35.2. 配置 Sonar 连接设置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 35.3. Configuring Sonar project settings</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150510T143855Z" creationid="msdx" creationdate="20150510T143855Z">
        <seg>示例 35.3. 配置 Sonar project 设置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 35.4. Global configuration in a multi-project build</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T091237Z" creationid="msdx" creationdate="20150512T091237Z">
        <seg>示例 35.4. 在多项目构建中的全局配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 35.5. Common project configuration in a multi-project build</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T091354Z" creationid="msdx" creationdate="20150512T091354Z">
        <seg>示例 35.5. 多项目构建中的共同项目配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 35.6. Individual project configuration in a multi-project build</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T091737Z" creationid="msdx" creationdate="20150512T091737Z">
        <seg>示例 35.6. 多项目构建中的单独项目配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 35.7. Configuring the language to be analyzed</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T092002Z" creationid="msdx" creationdate="20150512T092002Z">
        <seg>示例 35.7. 配置语言分析</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 35.8. Using property syntax</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T092112Z" creationid="msdx" creationdate="20150512T092112Z">
        <seg>示例 35.8. 使用属性语法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 35.9. Analyzing custom source sets</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T092527Z" creationid="msdx" creationdate="20150512T092527Z">
        <seg>示例 35.9. 分析自定义的Source Sets</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 36.1. Applying the Sonar Runner plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T060744Z" creationid="msdx" creationdate="20150513T060744Z">
        <seg>示例 36.1. 配置使用 Sonar Runner 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 36.2. Configuring Sonar connection settings</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T063355Z" creationid="msdx" creationdate="20150513T063355Z">
        <seg>示例 36.2. 配置 Sonar 连接设置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 36.3. Global configuration settings</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150519T124401Z" creationid="msdx" creationdate="20150519T124401Z">
        <seg>示例 36.3. 全局配置设置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 36.4. Shared configuration settings</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150519T124456Z" creationid="msdx" creationdate="20150519T124456Z">
        <seg>示例 36.4. 共享的配置设置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 36.5. Individual configuration settings</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150519T124644Z" creationid="msdx" creationdate="20150519T124644Z">
        <seg>示例 36.5. 个别配置设置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 36.6. Skipping analysis of a project</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150519T124736Z" creationid="msdx" creationdate="20150519T124736Z">
        <seg>示例 36.6. 跳过项目分析</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 36.7. Analyzing custom source sets</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150520T143103Z" creationid="msdx" creationdate="20150520T143103Z">
        <seg>示例 36.7. 分析自定义的Source Sets</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 36.8. Analyzing languages other than Java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150520T143131Z" creationid="msdx" creationdate="20150520T143131Z">
        <seg>示例 36.8. 分析非 Java 语言</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 37.1. Using the OSGi plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150526T004303Z" creationid="haohang" creationdate="20150526T004303Z">
        <seg>示例 37.1. 使用 OSGi 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 37.2. Configuration of OSGi MANIFEST.MF file</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150526T064436Z" creationid="haohang" creationdate="20150526T064436Z">
        <seg>示例 37.2. OSGi MANIFEST.MF 文件配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 38.1. Using the Eclipse plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T004131Z" creationid="haohang" creationdate="20150603T004131Z">
        <seg>示例 38.1. 使用 Eclipse 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 38.2. Partial Overwrite for Classpath</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T064924Z" creationid="haohang" creationdate="20150625T064842Z">
        <seg>示例 38.2. 部分覆盖 Classpath</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 38.3. Partial Overwrite for Project</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T065701Z" creationid="haohang" creationdate="20150625T065701Z">
        <seg>示例 38.3. 部分覆盖项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 38.4. Export Dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T065953Z" creationid="haohang" creationdate="20150625T065953Z">
        <seg>示例 38.4. 导出依赖项</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 38.5. Customizing the XML</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T070448Z" creationid="haohang" creationdate="20150625T070448Z">
        <seg>示例 38.5. 自定义 XML</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 39.1. Using the IDEA plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T071739Z" creationid="haohang" creationdate="20150625T071739Z">
        <seg>示例 39.1. 使用 IDEA 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 39.2. Partial Overwrite for Module</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T073919Z" creationid="haohang" creationdate="20150625T073919Z">
        <seg>示例 39.2. 部分覆盖模块</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 39.3. Partial Overwrite for Project</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T074116Z" creationid="haohang" creationdate="20150625T074116Z">
        <seg>示例 39.3. 部分覆盖项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 39.4. Export Dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T074611Z" creationid="haohang" creationdate="20150625T074611Z">
        <seg>示例 39.4. 导出依赖项</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 39.5. Customizing the XML</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T074623Z" creationid="haohang" creationdate="20150625T074623Z">
        <seg>示例 39.5. 自定义 XML</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 40.1. Using the ANTLR plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T094905Z" creationid="haohang" creationdate="20150625T094905Z">
        <seg>示例 40.1. 使用 ANTLR 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 40.2. Declare ANTLR version</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T095738Z" creationid="haohang" creationdate="20150625T095738Z">
        <seg>示例 40.2. 声明 ANTLR 版本</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 42.1. Using the announce plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T063407Z" creationid="haohang" creationdate="20150628T063022Z">
        <seg>示例 42.1. 使用 announce 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 42.2. Configure the announce plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T063403Z" creationid="haohang" creationdate="20150628T063115Z">
        <seg>示例 42.2. 配置 announce 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 42.3. Using the announce plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T063533Z" creationid="haohang" creationdate="20150628T063533Z">
        <seg>示例 42.3. 使用 announce 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 43.1. Using the build announcements plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T091628Z" creationid="haohang" creationdate="20150628T091628Z">
        <seg>示例 43.1. 使用构建公告插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 43.2. Using the build announcements plugin from an init script</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T091800Z" creationid="haohang" creationdate="20150628T091800Z">
        <seg>示例 43.2. 在 init 脚本中使用构建通知插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 44.1. Using the distribution plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150701T025858Z" creationid="haohang" creationdate="20150701T025858Z">
        <seg>示例 44.1. 使用分发插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 44.2. Adding extra distributions</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150701T031248Z" creationid="haohang" creationdate="20150701T031248Z">
        <seg>示例 44.2. 添加额外的分发</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 44.3. Configuring the main distribution</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150701T032437Z" creationid="haohang" creationdate="20150701T032437Z">
        <seg>示例 44.3. 配置 main distribution</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 45.1. Using the application plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150702T103847Z" creationid="haohang" creationdate="20150702T103847Z">
        <seg>示例 45.1. 使用应用程序插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 45.2. Configure the application main class</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150702T103934Z" creationid="haohang" creationdate="20150702T103934Z">
        <seg>示例 45.2. 配置应用程序的主类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 45.3. Configure default JVM settings</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150702T104913Z" creationid="haohang" creationdate="20150702T104913Z">
        <seg>示例 45.3. 配置默认 JVM 设置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 45.4. Include output from other tasks in the application distribution</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150703T100421Z" creationid="haohang" creationdate="20150703T100421Z">
        <seg>示例 45.4. 在应用程序的分发中包含其他任务的输出文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 45.5. Automatically creating files for distribution</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150703T100700Z" creationid="haohang" creationdate="20150703T100700Z">
        <seg>示例 45.5. 自动创建用于分发的文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 46.1. Using the java library distribution plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150705T084550Z" creationid="haohang" creationdate="20150705T084550Z">
        <seg>示例 46.1. 使用 Java 库分发插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 46.2. Configure the distribution name</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150705T084601Z" creationid="haohang" creationdate="20150705T084601Z">
        <seg>示例 46.2. 配置分发的名称</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 46.3. Include files in the distribution</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T070500Z" creationid="haohang" creationdate="20150707T070444Z">
        <seg>示例 46.3. 在分发包中包含文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 49.1. Using the Build Dashboard plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150713T095211Z" creationid="haohang" creationdate="20150713T095211Z">
        <seg>示例 49.1 使用 Build Dashboard 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 50.1. Definition of a configuration</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T075858Z" creationid="haohang" creationdate="20150722T075821Z">
        <seg>示例 50.1. 配置的定义</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 50.10. File dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T094145Z" creationid="haohang" creationdate="20150801T094145Z">
        <seg>示例 50.10. 文件依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 50.11. Generated file dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T094451Z" creationid="haohang" creationdate="20150801T094451Z">
        <seg>示例 50.11. 生成文件依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 50.12. Gradle API dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T094657Z" creationid="haohang" creationdate="20150801T094657Z">
        <seg>示例 50.12. Gradle API 依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 50.13. Gradle's Groovy dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T094842Z" creationid="haohang" creationdate="20150801T094842Z">
        <seg>示例 50.13. Gradle 的 Groovy 依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 50.14. Excluding transitive dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T094941Z" creationid="haohang" creationdate="20150801T094941Z">
        <seg>示例 50.14. 排除传递依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 50.15. Optional attributes of dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T103548Z" creationid="haohang" creationdate="20150801T103548Z">
        <seg>示例 50.15. 依赖的可选属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 50.16. Collections and arrays of dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T103700Z" creationid="haohang" creationdate="20150801T103700Z">
        <seg>示例 50.16. 依赖的集合和数组</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 50.17. Dependency configurations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T032717Z" creationid="haohang" creationdate="20150807T032717Z">
        <seg>示例 50.17. 依赖配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 50.18. Dependency configurations for project</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T032800Z" creationid="haohang" creationdate="20150807T032754Z">
        <seg>示例 50.18. 项目的依赖配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 50.19. Configuration.copy</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T034238Z" creationid="haohang" creationdate="20150807T034238Z">
        <seg>示例 50.19. Configuration.copy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 50.2. Accessing a configuration</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T075909Z" creationid="haohang" creationdate="20150722T075909Z">
        <seg>示例 50.2. 访问配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 50.20. Accessing declared dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T034353Z" creationid="haohang" creationdate="20150807T034353Z">
        <seg>示例 50.20. 访问声明依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 50.21. Configuration.files</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T034606Z" creationid="haohang" creationdate="20150807T034606Z">
        <seg>示例 50.21. Configuration.files</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 50.22. Configuration.files with spec</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T034741Z" creationid="haohang" creationdate="20150807T034741Z">
        <seg>示例 50.22. 指定的 Configuration.files</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 50.23. Configuration.copy</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T040600Z" creationid="haohang" creationdate="20150807T040600Z">
        <seg>示例 50.23. Configuration.copy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 50.24. Configuration.copy vs. Configuration.files</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T041226Z" creationid="haohang" creationdate="20150807T041226Z">
        <seg>示例 50.24. Configuration.copy 与 Configuration.files</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 50.25. Adding central Maven repository</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T095900Z" creationid="haohang" creationdate="20150807T095900Z">
        <seg>示例 50.25. 添加 Maven 中央仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 50.26. Adding Bintray's JCenter Maven repository</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T100535Z" creationid="haohang" creationdate="20150807T100535Z">
        <seg>示例 50.26. 添加 Bintray Jcenter Maven 仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 50.27. Adding the local Maven cache as a repository</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T101037Z" creationid="haohang" creationdate="20150807T101037Z">
        <seg>示例 50.27. 添加本地 Maven 缓存作为仓库：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 50.28. Adding custom Maven repository</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150909T052925Z" creationid="haohang" creationdate="20150909T052925Z">
        <seg>示例 50.28. 添加一个自定义的 Maven 仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 50.29. Adding additional Maven repositories for JAR files</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150909T053107Z" creationid="haohang" creationdate="20150909T053107Z">
        <seg>示例 50.29. 为 JAR 文件添加额外的 Maven 仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 50.3. Configuration of a configuration</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T075929Z" creationid="haohang" creationdate="20150722T075929Z">
        <seg>示例 50.3. 配置一个配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 50.30. Accessing password protected Maven repository</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150909T053438Z" creationid="haohang" creationdate="20150909T053438Z">
        <seg>示例 50.30. 访问密码保护的 Maven 仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 50.31. Flat repository resolver</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150910T012110Z" creationid="haohang" creationdate="20150910T012110Z">
        <seg>示例 50.31. 平面仓库的解决</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 50.32. Ivy repository</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T110439Z" creationid="95" creationdate="20151006T110439Z">
        <seg>示例 50.32. Ivy存储库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 50.33. Ivy repository with pattern layout</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T110627Z" creationid="95" creationdate="20151006T110627Z">
        <seg>示例 50.33. Ivy 仓库模式布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 50.34. Ivy repository with Maven compatible layout</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T111051Z" creationid="95" creationdate="20151006T111051Z">
        <seg>示例50.34. 使用 Maven 兼容布局的 Ivy 仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 50.35. Ivy repository with custom patterns</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T111343Z" creationid="95" creationdate="20151006T111343Z">
        <seg>示例 50.35. 自定义模式的 Ivy 仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 50.36. Ivy repository</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T133230Z" creationid="95" creationdate="20151006T133230Z">
        <seg>示例 50.36. Ivy存储库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 50.37. Accessing a repository</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T133418Z" creationid="95" creationdate="20151006T133418Z">
        <seg>示例 50.37. 访问一个仓库：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 50.38. Configuration of a repository</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T133448Z" creationid="95" creationdate="20151006T133448Z">
        <seg>示例 50.38. 仓库配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 50.39. Definition of a custom repository</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T134736Z" creationid="95" creationdate="20151006T134705Z">
        <seg>示例 50.39. 自定义仓库的定义</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 50.4. Module dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T102829Z" creationid="haohang" creationdate="20150722T102829Z">
        <seg>示例 50.4. 模块依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 50.40. Forcing consistent version for a group of libraries</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T061530Z" creationid="95" creationdate="20151115T061530Z">
        <seg>示例 50.40. 强制一个组的所有库使用一致的版本</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 50.41. Using a custom versioning scheme</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T070651Z" creationid="95" creationdate="20151115T070651Z">
        <seg>示例 50.41. 使用自定义的版本方案</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 50.42. Blacklisting a version with a replacement</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T085759Z" creationid="95" creationdate="20151115T085759Z">
        <seg>示例 50.42. 黑名单替换特定版本</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 50.43. Changing dependency group and/or name at the resolution</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T090639Z" creationid="95" creationdate="20151115T090639Z">
        <seg>示例 50.43. 在解析中更改依赖组及名称</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 50.44. Enabling dynamic resolve mode</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T091449Z" creationid="95" creationdate="20151115T091449Z">
        <seg>示例 50.44. 启用动态解析模式</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 50.45. 'Latest' version selector</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T041616Z" creationid="95" creationdate="20151129T041531Z">
        <seg>示例 50.45，“Latest”版本选择器</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 50.46. Custom status scheme</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T041817Z" creationid="95" creationdate="20151129T041817Z">
        <seg>示例 50.46. 自定义状态模式</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 50.47. Dynamic version cache control</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T154959Z" creationid="95" creationdate="20151129T154948Z">
        <seg>示例 50.47. 动态版本缓存控制</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 50.48. Changing module cache control</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151130T032620Z" creationid="haohang" creationdate="20151130T032620Z">
        <seg>示例 50.48. 变化模块的缓存控制</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 50.5. Artifact only notation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150731T034554Z" creationid="haohang" creationdate="20150731T034554Z">
        <seg>示例 505. Artifact only notation</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 50.6. Dependency with classifier</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150731T100858Z" creationid="haohang" creationdate="20150731T100858Z">
        <seg>示例 50.6. 使用 classifier 的依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 50.7. Iterating over a configuration</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T091157Z" creationid="haohang" creationdate="20150801T091157Z">
        <seg>示例 50.7. 遍历一个配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 50.8. Client module dependencies - transitive dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T091419Z" creationid="haohang" creationdate="20150801T091419Z">
        <seg>示例 50.8. 客户端模块依赖 - 传递依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 50.9. Project dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T092518Z" creationid="haohang" creationdate="20150801T092518Z">
        <seg>50.9. 项目依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 51.1. Defining an artifact using an archive task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151226T090853Z" creationid="95" creationdate="20151226T090853Z">
        <seg>示例 51.1. 使用archive 任务定义一个构件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 51.2. Defining an artifact using a file</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151226T091050Z" creationid="95" creationdate="20151226T091050Z">
        <seg>示例 51.2. 使用文件定义构件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 51.3. Customizing an artifact</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151226T091156Z" creationid="95" creationdate="20151226T091156Z">
        <seg>示例 51.3. 自定义构件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 51.4. Map syntax for defining an artifact using a file</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151226T091503Z" creationid="95" creationdate="20151226T091437Z">
        <seg>示例 51.4. 基于map的语法定义一个文件构件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 51.5. Configuration of the upload task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151226T092016Z" creationid="95" creationdate="20151226T092016Z">
        <seg>示例 51.5. 上传任务的配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 52.1. Using the Maven plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151228T151903Z" creationid="95" creationdate="20151228T151903Z">
        <seg>示例 52.1. 使用 Maven 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 52.10. Accessing a mapping configuration</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T145326Z" creationid="95" creationdate="20160106T145326Z">
        <seg>示例 52.10. 访问映射配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 52.2. Creating a stand alone pom.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160104T152809Z" creationid="95" creationdate="20160104T152809Z">
        <seg>示例 52.2. 创建一个单独的 pom。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 52.3. Upload of file to remote Maven repository</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160104T154205Z" creationid="95" creationdate="20160104T154205Z">
        <seg>示例 52.3. 上传文件到远程 Maven 仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 52.4. Upload of file via SSH</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T134847Z" creationid="95" creationdate="20160105T134847Z">
        <seg>示例 52.4. 通过 SSH 上传文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 52.5. Customization of pom</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T142711Z" creationid="95" creationdate="20160106T142711Z">
        <seg>示例 52.5. pom定制</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 52.6. Builder style customization of pom</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T143104Z" creationid="95" creationdate="20160106T143104Z">
        <seg>示例 52.6. pom 的生成器类型自定义</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 52.7. Modifying auto-generated content</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T143204Z" creationid="95" creationdate="20160106T143204Z">
        <seg>示例 52.7. 修改自动生成的内容</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 52.8. Customization of Maven installer</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T143448Z" creationid="95" creationdate="20160106T143448Z">
        <seg>示例 52.8. Maven installer 的自定义</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 52.9. Generation of multiple poms</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T144206Z" creationid="95" creationdate="20160106T144206Z">
        <seg>示例 52.9. 多个 poms 的生成</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 53.1. Using the Signing plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160108T151111Z" creationid="95" creationdate="20160108T151111Z">
        <seg>示例 53.1. 使用Signing插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 53.2. Signing a configuration</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160109T072230Z" creationid="95" creationdate="20160109T072230Z">
        <seg>53.3.2. 签名一个配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 53.3. Signing a configuration output</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160109T072533Z" creationid="95" creationdate="20160109T072533Z">
        <seg>示例 53.3. 签署一个配置的输出</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 53.4. Signing a task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160109T073058Z" creationid="95" creationdate="20160109T073058Z">
        <seg>53.4. 签名一个任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 53.5. Signing a task output</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160126T140528Z" creationid="95" creationdate="20160126T140528Z">
        <seg>示例 53.5. 签名一个任务的输出</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 53.6. Conditional signing</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160126T141408Z" creationid="95" creationdate="20160126T141408Z">
        <seg>53.6. 有条件的签名</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 53.7. Signing a POM for deployment</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160126T145256Z" creationid="95" creationdate="20160126T145256Z">
        <seg>示例 53.7. 为部署签名 POM</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 54.1. Defining a library component</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160219T065328Z" creationid="haohang" creationdate="20160219T065316Z">
        <seg>示例 54.1. 定义一个库组件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 54.10. Settings that apply to all binaries</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160324T151752Z" creationid="95" creationdate="20160324T151752Z">
        <seg>示例 54.10. 应用于所有二进制文件的设置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 54.11. Settings that apply to all shared libraries</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160324T152304Z" creationid="95" creationdate="20160324T152304Z">
        <seg>示例 54.11. 应用于所有共享库的设置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 54.12. Settings that apply to all binaries produced for the 'main' executable component</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160324T152620Z" creationid="95" creationdate="20160324T152620Z">
        <seg>示例 54.12. 应用于“main”可执行组件所产生的所有二进制文件的设置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 54.13. Settings that apply only to shared libraries produced for the 'main' library component</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160324T153105Z" creationid="95" creationdate="20160324T153105Z">
        <seg>示例 54.13. 仅应用于“main”library组件所产生的共享库的设置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 54.14. The 'windows-resources' plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160324T153249Z" creationid="95" creationdate="20160324T153249Z">
        <seg>示例 54.14. 'windows-resources' 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 54.15. Configuring the location of Windows resource sources</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160325T020926Z" creationid="haohang" creationdate="20160325T020926Z">
        <seg>示例 54.15. 配置 Windows 资源源文件的位置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 54.16. Building a resource-only dll</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160325T023106Z" creationid="haohang" creationdate="20160325T023106Z">
        <seg>示例 54.16. 构建一个纯资源 dll</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 54.17. Providing a library dependency to the source set</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160325T032908Z" creationid="haohang" creationdate="20160325T032908Z">
        <seg>示例 54.17. 向source set提供库依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 54.18. Providing a library dependency to the binary</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160325T033130Z" creationid="haohang" creationdate="20160325T033130Z">
        <seg>示例 54.18. 向二进制文件提供库依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 54.19. Declaring project dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160325T033426Z" creationid="haohang" creationdate="20160325T033426Z">
        <seg>示例 54.19. 定义项目依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 54.2. Defining executable components</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160219T065424Z" creationid="haohang" creationdate="20160219T065424Z">
        <seg>示例 54.2. 定义可执行组件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 54.20. Defining build types</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160401T090255Z" creationid="haohang" creationdate="20160401T090255Z">
        <seg>示例 54.20. 定义构建类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 54.21. Configuring debug binaries</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160401T090609Z" creationid="haohang" creationdate="20160401T090609Z">
        <seg>示例 54.21. 配置debug二进制文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 54.22. Defining platforms</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160405T034019Z" creationid="haohang" creationdate="20160405T034019Z">
        <seg>示例 54.22. 定义platform</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 54.23. Defining flavors</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T081109Z" creationid="haohang" creationdate="20160408T081109Z">
        <seg>示例 54.23. 定义flavors</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 54.24. Targeting a component at particular platforms</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T082929Z" creationid="haohang" creationdate="20160408T082929Z">
        <seg>示例 54.24. 针对一个组件的特定平台</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 54.25. Building all possible variants</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T084718Z" creationid="haohang" creationdate="20160408T084718Z">
        <seg>示例 54.25. 构建所有可能的变种</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 54.26. Defining tool chains</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T091220Z" creationid="haohang" creationdate="20160408T091220Z">
        <seg>示例 54.26. 定义工具链</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 54.27. Registering CUnit tests</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T150233Z" creationid="95" creationdate="20160504T150233Z">
        <seg>示例 54.27. 注册 CUnit 测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 54.28. Registering CUnit tests</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T151035Z" creationid="95" creationdate="20160504T151035Z">
        <seg>示例 54.28. 注册 CUnit 测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 54.29. Running CUnit tests</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T151331Z" creationid="95" creationdate="20160504T151331Z">
        <seg>示例 54.29. 运行 CUnit 测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 54.3. The 'cpp' plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160219T082843Z" creationid="haohang" creationdate="20160219T082843Z">
        <seg>示例 54.3. cpp 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 54.4. C++ source set</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160225T085514Z" creationid="haohang" creationdate="20160225T085514Z">
        <seg>示例 54.4. C++ 源代码集</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 54.5. The 'c' plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160225T090442Z" creationid="haohang" creationdate="20160225T090442Z">
        <seg>示例 54.5. “C” 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 54.6. C source set</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160225T090543Z" creationid="haohang" creationdate="20160225T090543Z">
        <seg>示例 54.4. C 源代码集</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 54.7. The 'assembler' plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160313T053811Z" creationid="95" creationdate="20160313T053811Z">
        <seg>示例 54.3. assembler 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 54.8. The 'objective-c' plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160319T115137Z" creationid="95" creationdate="20160319T115137Z">
        <seg>示例 54.8. “objective-c”插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 54.9. The 'objective-cpp' plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160319T115442Z" creationid="95" creationdate="20160319T115442Z">
        <seg>示例 54.9. “objective-cpp” 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 55.1. Single project build</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T025258Z" creationid="haohang" creationdate="20160519T025258Z">
        <seg>示例 55.1. 单项目构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 55.2. Hierarchical layout</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T041327Z" creationid="haohang" creationdate="20160519T041327Z">
        <seg>示例 55.2. 分层布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 55.3. Flat layout</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T041857Z" creationid="haohang" creationdate="20160519T041857Z">
        <seg>示例 55.3. 平面布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 55.4. Modification of elements of the project tree</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T070348Z" creationid="haohang" creationdate="20160519T070348Z">
        <seg>示例 55.4. 修改项目树中的元素</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 55.5. Modification of elements of the project tree</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T070458Z" creationid="haohang" creationdate="20160519T070458Z">
        <seg>示例 55.5. 修改项目树中的元素</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 55.6. Adding of test task to each project which has certain property set</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T125501Z" creationid="95" creationdate="20160521T125413Z">
        <seg>示例 55.6. 向每个包含某些属性设置的project 添加测试任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 55.7. Notifications</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T132215Z" creationid="95" creationdate="20160521T132215Z">
        <seg>示例 55.7. 通知</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 55.8. Setting of certain property to all tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T135053Z" creationid="95" creationdate="20160521T135053Z">
        <seg>示例 55.8. 对所有的任务设置一些属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 55.9. Logging of start and end of each task execution</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T140112Z" creationid="95" creationdate="20160521T140112Z">
        <seg>示例55.9. 在每个任务执行的开始及结束时打印日志</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 56.1. Multi-project tree - water &amp; bluewhale projects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160522T125255Z" creationid="95" creationdate="20160522T125255Z">
        <seg>示例 56.1. 多项目树- water &amp; bluewhale 项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 56.10. Running build from subproject</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160530T152024Z" creationid="95" creationdate="20160530T152024Z">
        <seg>示例 56.10. 从子项目的运行构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 56.11. Evaluation and execution of projects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160715T075944Z" creationid="haohang" creationdate="20160715T075944Z">
        <seg>示例 56.11. 项目的评估和执行</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 56.12. Evaluation and execution of projects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160715T080046Z" creationid="haohang" creationdate="20160715T080046Z">
        <seg>示例 56.12. 项目的评估和执行</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 56.13. Running tasks by their absolute path</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160715T091707Z" creationid="haohang" creationdate="20160715T091707Z">
        <seg>示例56.13. 按绝对路径运行任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 56.14. Dependencies and execution order</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T062253Z" creationid="haohang" creationdate="20160718T062253Z">
        <seg>示例 56.14. 依赖和执行顺序</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 56.15. Dependencies and execution order</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T070211Z" creationid="haohang" creationdate="20160718T070211Z">
        <seg>示例 56.15. 依赖和执行顺序</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 56.16. Dependencies and execution order</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T070719Z" creationid="haohang" creationdate="20160718T070719Z">
        <seg>示例 56.16. 依赖和执行顺序</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 56.17. Declaring dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T071015Z" creationid="haohang" creationdate="20160718T071015Z">
        <seg>示例 56.17. 声明依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 56.18. Declaring dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T071747Z" creationid="haohang" creationdate="20160718T071747Z">
        <seg>示例 56.18. 声明依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 56.19. Cross project task dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T072045Z" creationid="haohang" creationdate="20160718T072045Z">
        <seg>56.19. 跨项目任务依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 56.2. Build script of water (parent) project</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160522T125905Z" creationid="95" creationdate="20160522T125905Z">
        <seg>示例 56.2. water（父）项目的构建脚本</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 56.20. Configuration time dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T072755Z" creationid="haohang" creationdate="20160718T072755Z">
        <seg>示例 56.20. 配置时依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 56.21. Configuration time dependencies - evaluationDependsOn</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T074958Z" creationid="haohang" creationdate="20160718T074958Z">
        <seg>示例 56.21. 配置时依赖——evaluationDependsOn</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 56.22. Configuration time dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T085918Z" creationid="haohang" creationdate="20160718T085918Z">
        <seg>示例 56.22. 配置时依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 56.23. Dependencies - real life example - crossproject configuration</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160722T091201Z" creationid="haohang" creationdate="20160722T091201Z">
        <seg>示例 56.23. 依赖——真实生活中的例子——跨项目配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 56.24. Project lib dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T083500Z" creationid="haohang" creationdate="20160726T083500Z">
        <seg>56.24. 项目库依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 56.25. Project lib dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T083728Z" creationid="haohang" creationdate="20160726T083728Z">
        <seg>示例 56.25. 项目库依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 56.26. Fine grained control over dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T084511Z" creationid="haohang" creationdate="20160726T084511Z">
        <seg>示例 56.26. 对依赖的细粒度的控制</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 56.27. Build and Test Single Project</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T095304Z" creationid="haohang" creationdate="20160726T095304Z">
        <seg>示例 56.27. 构建和测试单个项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 56.28. Partial Build and Test Single Project</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160727T051916Z" creationid="haohang" creationdate="20160727T051916Z">
        <seg>示例 56.28. 部分构建和测试单个项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 56.29. Build and Test Depended On Projects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160727T052655Z" creationid="haohang" creationdate="20160727T052259Z">
        <seg>示例 56.29. 构建和测试被依赖的项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 56.3. Multi-project tree - water, bluewhale &amp; krill projects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160526T155319Z" creationid="95" creationdate="20160526T155319Z">
        <seg>示例 56.3. 多项目树- water &amp; bluewhale &amp; krill 项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 56.30. Build and Test Dependent Projects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160727T052705Z" creationid="haohang" creationdate="20160727T052625Z">
        <seg>示例 56.30. 构建和测试依赖它的项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 56.4. Water project build script</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160527T161028Z" creationid="95" creationdate="20160527T161028Z">
        <seg>示例 56.4. Water项目构建脚本</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 56.5. Defining common behaviour of all projects and subprojects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160527T162314Z" creationid="95" creationdate="20160527T162256Z">
        <seg>示例 56.5. 定义所有项目以及子项目的共同行为</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 56.6. Defining specific behaviour for particular project</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160527T163154Z" creationid="95" creationdate="20160527T162856Z">
        <seg>示例 56.6. 为特定项目定义特定行为</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 56.7. Defining specific behaviour for project krill</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160527T163233Z" creationid="95" creationdate="20160527T163233Z">
        <seg>示例 56.7. 为krill项目定义特定的行为</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 56.8. Adding custom behaviour to some projects (filtered by project name)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160527T163808Z" creationid="95" creationdate="20160527T163808Z">
        <seg>示例 56.8. 将自定义行为添加到某些项目中（按项目名称筛选）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 56.9. Adding custom behaviour to some projects (filtered by project properties)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160530T144356Z" creationid="95" creationdate="20160530T144356Z">
        <seg>示例 56.9. 将自定义行为添加到某些项目中（按项目属性筛选）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 57.1. Defining a custom task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T145359Z" creationid="95" creationdate="20160814T145359Z">
        <seg>示例 57.1. 定义一个自定义任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 57.2. A hello world task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T145738Z" creationid="95" creationdate="20160814T145738Z">
        <seg>示例 57.2. 一个hello world 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 57.3. A customizable hello world task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T151530Z" creationid="95" creationdate="20160814T151530Z">
        <seg>示例 57.3. 一个自定义的hello world任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 9.1. Groovy plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T161510Z" creationid="msdx" creationdate="20141105T161510Z">
        <seg>Example 9.1. Groovy plugin</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 9.2. Dependency on Groovy 2.2.0</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104651Z" creationid="msdx" creationdate="20150428T104651Z">
        <seg>示例 9.2. 依赖 Groovy 2.2.0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 9.3. Groovy example - complete build file</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T065502Z" creationid="msdx" creationdate="20141030T065502Z">
        <seg>Example 9.3. Groovy example - complete build file</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Except where noted in the&lt;a0&gt;API documentation&lt;/a0&gt;, the Zinc based compiler supports exactly the same configuration options as the Ant based compiler.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T154353Z" creationid="msdx" creationdate="20150501T154353Z">
        <seg>除非在&lt;a0&gt;API 文档&lt;/a0&gt;中另有说明，否则基于 Zinc 的据编译器支持与基于 Ant 的编译器完全相同的配置选项。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Excluding tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163845Z" creationid="msdx" creationdate="20141109T163845Z">
        <seg>排除任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Executable</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160219T072227Z" creationid="haohang" creationdate="20160219T072227Z">
        <seg>Executable</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ExecutableBinary</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160219T072231Z" creationid="haohang" creationdate="20160219T072231Z">
        <seg>ExecutableBinary</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Execute &lt;s0&gt;&lt;c1&gt;gradle sonarRunner&lt;/c1&gt;&lt;/s0&gt; and wait until the build has completed, then open the web page indicated at the bottom of the Sonar Runner output.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T061704Z" creationid="msdx" creationdate="20150513T061704Z">
        <seg>执行&lt;s0&gt;&lt;c1&gt;gradle sonarRunner&lt;/c1&gt;&lt;/s0&gt;并等待构建完成，然后打开 Sonar Runner 输出结果的底部所指示的网页。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Execute ignoring dependencies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T153834Z" creationid="msdx" creationdate="20141105T153834Z">
        <seg>执行忽略依赖关系。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Executing multiple tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163830Z" creationid="msdx" creationdate="20141109T163830Z">
        <seg>执行多个任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Execution</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T024236Z" creationid="haohang" creationdate="20160519T024236Z">
        <seg>执行</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Existing module descriptors are ignored.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150731T035205Z" creationid="haohang" creationdate="20150731T035205Z">
        <seg>现有的模块描述符将被忽略。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Extends</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T084120Z" creationid="Administrator" creationdate="20150426T084120Z">
        <seg>继承自</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Extensive configuration defaults</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T060000Z" creationid="msdx" creationdate="20150513T060000Z">
        <seg>提供了广泛范围的默认配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>External dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163619Z" creationid="msdx" creationdate="20141109T163619Z">
        <seg>外部依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>External module dependencies are the most common dependencies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T102805Z" creationid="haohang" creationdate="20150722T102805Z">
        <seg>外部模块依赖是最常见的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>External module dependency</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T080059Z" creationid="haohang" creationdate="20150722T080043Z">
        <seg>外部模块依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Extra properties can be added, read and set via the owning object's &lt;c0&gt;ext&lt;/c0&gt; property.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T050609Z" creationid="msdx" creationdate="20141108T050609Z">
        <seg>额外的属性可以通过所属对象的&lt;c0&gt;ext&lt;/c0&gt;属性进行添加，读取和设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Extra properties on a parent project are visible from subprojects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T055330Z" creationid="msdx" creationdate="20141108T055330Z">
        <seg>父项目上的额外属性，在子项目中也可以访问。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Extra task properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163249Z" creationid="msdx" creationdate="20141109T163249Z">
        <seg>额外任务属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>FAILED</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T140142Z" creationid="95" creationdate="20160521T140142Z">
        <seg>FAILED</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Fast Scala Compiler</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T132018Z" creationid="msdx" creationdate="20150509T132018Z">
        <seg>Fast Scala Compiler</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Fast and accurate bash tab completion.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141117T151236Z" creationid="msdx" creationdate="20141117T151236Z">
        <seg>快速、 准确的 bash 的 tab 键完成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Favorites</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T031122Z" creationid="msdx" creationdate="20141108T031122Z">
        <seg> 收藏夹</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Features</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T161957Z" creationid="msdx" creationdate="20141109T161957Z">
        <seg>特性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Figure 12.1. GUI Task Tree</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T150123Z" creationid="msdx" creationdate="20141105T150123Z">
        <seg>Figure 12.1. GUI Task Tree</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Figure 12.2. GUI Setup</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T160656Z" creationid="msdx" creationdate="20141105T160656Z">
        <seg>Figure 12.2. GUI Setup</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Figure 23.1. Java plugin - tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T082919Z" creationid="Administrator" creationdate="20150426T082919Z">
        <seg>图23.1. Java插件 ​​- 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Figure 23.2. Java plugin - dependency configurations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T084640Z" creationid="Administrator" creationdate="20150426T084640Z">
        <seg>图23.2. Java插件 ​​- 依赖配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Figure 24.1. Groovy plugin - tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T071732Z" creationid="msdx" creationdate="20150429T071714Z">
        <seg>图 24.1. Groovy 插件 - tasks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Figure 25.1. Scala plugin - tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T152441Z" creationid="msdx" creationdate="20150429T152441Z">
        <seg>图 25.1. Scala 插件-任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Figure 26.1. War plugin - tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T090049Z" creationid="msdx" creationdate="20150503T090049Z">
        <seg>图 26.1. War 插件 - tasks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Figure 28.1. Jetty plugin - tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T150529Z" creationid="msdx" creationdate="20150504T150512Z">
        <seg>图 28.1. Jetty 插件 - tasks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>File</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T044352Z" creationid="msdx" creationdate="20141108T044352Z">
        <seg>File</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>File (read-only)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151228T152722Z" creationid="95" creationdate="20151228T152722Z">
        <seg>File (read-only)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>File collections</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150330T141138Z" creationid="Administrator" creationdate="20150330T141138Z">
        <seg>文件集合</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>File dependencies allow you to directly add a set of files to a configuration, without first adding them to a repository.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T092827Z" creationid="haohang" creationdate="20150801T092827Z">
        <seg>文件依赖允许你直接将一组文件添加到配置中，而不用先将它们添加到存储库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>File dependencies are not included in the published dependency descriptor for your project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T094217Z" creationid="haohang" creationdate="20150801T094217Z">
        <seg>文件依赖项不会包含在你的项目的发布的依赖描述中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>File dependency</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T080431Z" creationid="haohang" creationdate="20150722T080431Z">
        <seg>文件依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>File explodedDist = mkdir(&lt;s5&gt;"$buildDir/explodedDist"&lt;/s5&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160722T091248Z" creationid="haohang" creationdate="20160722T091248Z">
        <seg>File explodedDist = mkdir(&lt;s5&gt;"$buildDir/explodedDist"&lt;/s5&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>File srcDir</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T160731Z" creationid="msdx" creationdate="20141112T160731Z">
        <seg>File srcDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>File trees</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150330T141141Z" creationid="Administrator" creationdate="20150330T141141Z">
        <seg>文件树</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>File-level test selection does not support many interesting scenarios that are possible with test-level filtering.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T022213Z" creationid="Administrator" creationdate="20150428T022213Z">
        <seg>file-level 的测试选择不支持的很多有趣的情况，都可以用 test-level 过滤来做到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>FileCollection</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T160944Z" creationid="msdx" creationdate="20141112T160944Z">
        <seg>FileCollection</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>FileCollection collection = files(&lt;s0&gt;'src/file1.txt'&lt;/s0&gt;, &lt;s1&gt;new&lt;/s1&gt; File(&lt;s2&gt;'src/file2.txt'&lt;/s2&gt;), [&lt;s3&gt;'src/file3.txt'&lt;/s3&gt;, &lt;s4&gt;'src/file4.txt'&lt;/s4&gt;])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T155529Z" creationid="msdx" creationdate="20141112T155529Z">
        <seg>FileCollection collection = files(&lt;s0&gt;'src/file1.txt'&lt;/s0&gt;, &lt;s1&gt;new&lt;/s1&gt; File(&lt;s2&gt;'src/file2.txt'&lt;/s2&gt;), [&lt;s3&gt;'src/file3.txt'&lt;/s3&gt;, &lt;s4&gt;'src/file4.txt'&lt;/s4&gt;])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Filtering at the level of specific test methods; executing a single test method</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T022430Z" creationid="Administrator" creationdate="20150428T022411Z">
        <seg>在指定的测试的方法级别上进行过滤；执行单个测试方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Filtering based on custom annotations (future)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T022542Z" creationid="Administrator" creationdate="20150428T022542Z">
        <seg>基于自定义注解（以后实现）进行过滤</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Filtering based on some custom runtime rule, e.g. particular value of a system property or some static state (future)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T022805Z" creationid="Administrator" creationdate="20150428T022805Z">
        <seg>基于一些自定义的运行时的规则进行过滤，例如某个系统属性或一些静态的特定值（以后实现）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Filtering based on test hierarchy; executing all tests that extend ceratain base class (future)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T022711Z" creationid="Administrator" creationdate="20150428T022639Z">
        <seg>基于测试层次结构进行过滤 ；执行所有继承了某一基类（以后实现） 的测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Filtering is a different mechanism than test class inclusion / exclusion that will be described in the next few paragraphs (&lt;c0&gt;-Dtest.single&lt;/c0&gt;, &lt;c1&gt;test.include&lt;/c1&gt; and friends).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T021943Z" creationid="Administrator" creationdate="20150428T021943Z">
        <seg>过滤，相对于测试类的包含或排除，是一个不同的机制。它将在接下来的段落中进行描述（&lt;c0&gt;-Dtest.single&lt;/c0&gt;， &lt;c1&gt;test.include&lt;/c1&gt;和friends）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Finalizer task will be executed even if the finalized task fails.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T070251Z" creationid="msdx" creationdate="20141111T070251Z">
        <seg>即使最终的任务执行失败，析构器任务也会被执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Finalizer tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150330T141106Z" creationid="Administrator" creationdate="20150330T141106Z">
        <seg>析构器任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Finalizer tasks are automatically added to the task graph when the finalized task is scheduled to run.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T070143Z" creationid="msdx" creationdate="20141111T065913Z">
        <seg>当最终的任务准备运行时，析构器任务会自动地添加到任务图中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Finalizer tasks are useful in situations where build creates a resource that has to be cleaned up regardless of the build failing or succeeding.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T122856Z" creationid="msdx" creationdate="20141111T122856Z">
        <seg>在不管构建成功或是失败，都必须清理创建的资源的情况下，析构认为是很有用的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Finalizers tasks are an &lt;e0&gt;incubating&lt;/e0&gt; feature (see &lt;a1&gt;Section C.1.2, “Incubating”&lt;/a1&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T070134Z" creationid="msdx" creationdate="20141111T065820Z">
        <seg>析构器任务是一个 &lt;e0&gt;孵化中&lt;/e0&gt; 的功能 (请参阅 &lt;a1&gt; C.1.2 章节， “Incubating”&lt;/a1&gt;)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Finally, send announcements with the &lt;c0&gt;announce&lt;/c0&gt; method:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T063526Z" creationid="haohang" creationdate="20150628T063526Z">
        <seg>最后，使用&lt;c0&gt;announce&lt;/c0&gt;方法发送公告：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Finally, since build scripts are Groovy scripts, you can always execute an Ant build as an external process.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141114T141947Z" creationid="msdx" creationdate="20141114T141947Z">
        <seg>最后，由于构建脚本是 Groovy 脚本，所以您始终可以作为一个外部进程来执行 Ant 构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Finally, you could move your tasks across to your build file, or replace them with some of Gradle's plugins.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141114T142802Z" creationid="msdx" creationdate="20141114T142802Z">
        <seg>最后，您可以将整个任务移动到您的构建文件，或者把它们替换为一些 Gradle 插件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Finally, you may want to build and test everything in all projects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160727T052730Z" creationid="haohang" creationdate="20160727T052730Z">
        <seg>最后，你可能想要构建和测试所有项目的所有内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>FindBugs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T133648Z" creationid="msdx" creationdate="20150505T133648Z">
        <seg>findbugs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>First &lt;c8&gt;shared&lt;/c8&gt; is built and then &lt;c9&gt;api&lt;/c9&gt; is built.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T084225Z" creationid="haohang" creationdate="20160726T084225Z">
        <seg>首先会先构建&lt;c8&gt;shared&lt;/c8&gt;，然后构建&lt;c9&gt;api&lt;/c9&gt; 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>First, the &lt;c2&gt;copy()&lt;/c2&gt; is not incremental (see &lt;a3&gt;Section 15.9, “Skipping tasks that are up-to-date”&lt;/a3&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T131721Z" creationid="msdx" creationdate="20141113T131721Z">
        <seg>首先， &lt;c2&gt;copy()&lt;/c2&gt;不能进行增量操作（见&lt;a3&gt;15.9章节，"跳过处于最新状态的任务"&lt;/a3&gt;）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>First, you need to tell Gradle to use the parallel mode.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T090858Z" creationid="haohang" creationdate="20160726T090858Z">
        <seg>首先，你需要告诉 Gradle 使用并行模式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Firstly if using that rule introduces an ordering cycle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T152512Z" creationid="msdx" creationdate="20141110T152457Z">
        <seg>首先是如果使用这一规则引入了一个排序循环。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Firstly, each task is available as a property of the project, using the task name as the property name:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T080938Z" creationid="msdx" creationdate="20141110T080938Z">
        <seg>首先，每个任务都可作为项目的一个属性，并且使用任务名称作为这个属性名称：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Flat directory repository</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T095712Z" creationid="haohang" creationdate="20150807T095712Z">
        <seg>Flat 目录仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For 3rd party plugins however, you need to make the plugins available to the build classpath.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141123T134835Z" creationid="msdx" creationdate="20141123T134835Z">
        <seg>然而，对于第三方插件，你需要进行配置以使插件在构建类路径中可用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For &lt;c2&gt;ScalaCompile&lt;/c2&gt; tasks added by the Scala plugin, no configuration is necessary to make this work.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T155738Z" creationid="msdx" creationdate="20150501T155725Z">
        <seg>对于由 Scala 插件添加的&lt;c2&gt;ScalaCompile&lt;/c2&gt;任务，无需对这一点进行配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For CI builds and release builds, we currently recommend to use the Ant based compiler.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T081143Z" creationid="msdx" creationdate="20150503T080820Z">
        <seg>对于 CI 构建和版本的构建中，我们目前推荐使用基于 Ant 的编译器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For GCC running on Windows via Cygwin, platforms 'windows/x86' and 'windows/x86_64' are supported.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T092402Z" creationid="haohang" creationdate="20160408T092402Z">
        <seg>对于通过Cygwin运行在Windows上的GCC，则支持“windows/x86”和“windows/x86_64”。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For Gradle the two &lt;c0&gt;action&lt;/c0&gt; tasks are just not related.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T070737Z" creationid="haohang" creationdate="20160718T070737Z">
        <seg>对于 Gradle 而言，这两个&lt;c0&gt;action&lt;/c0&gt;任务不相关。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For Maven repositories, this is done using the &lt;c2&gt;maven-metadata.xml&lt;/c2&gt; file, while for Ivy repositories this is done by directory listing.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151007T023708Z" creationid="95" creationdate="20151007T023708Z">
        <seg>对于 Maven 仓库，是通过&lt;c2&gt;maven metadata.xml&lt;/c2&gt;文件来实现，而对于 Ivy 存储库，则是通过目录列表。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For a build script, the property access and method calls are delegated to a project object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T025916Z" creationid="haohang" creationdate="20160519T025442Z">
        <seg>对于一个构建脚本，属性的访问和方法的调用会委派给一个project对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For a build type, a Gradle project will typically define a set of compiler/linker flags per tool chain.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160401T090549Z" creationid="haohang" creationdate="20160401T090549Z">
        <seg>对于一个构建类型，Gradle project 通常会定义一组每个工具链的编译器/链接器标志。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For a complete list of standard Sonar properties, consult the &lt;a0&gt;Sonar documentation&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T064254Z" creationid="msdx" creationdate="20150513T063400Z">
        <seg>对于标准的 Sonar 属性的完整列表，请参阅&lt;a0&gt; Sonar 文档&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For a complete list of supported Javadoc options consult the API documentation of the following classes: &lt;a4&gt;&lt;c5&gt;CoreJavadocOptions&lt;/c5&gt;&lt;/a4&gt; and &lt;a6&gt;&lt;c7&gt;StandardJavadocDocletOptions&lt;/c7&gt;&lt;/a6&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T133940Z" creationid="Administrator" creationdate="20150427T133940Z">
        <seg>对于支持的 Javadoc 参数选项的完整列表，请参考下面的类的 API 文档： &lt;a4&gt; &lt;c5&gt;CoreJavadocOptions&lt;/c5&gt;&lt;/a4&gt;和&lt;a6&gt;&lt;c7&gt;StandardJavadocDocletOptions&lt;/c7&gt;&lt;/a6&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For a component produced in a different Gradle project, the notation is similar.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160325T033412Z" creationid="haohang" creationdate="20160325T033241Z">
        <seg>对于在不同的 Gradle 项目产生的组件，notation是类似的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For a default component, Gradle will attempt to create a native binary variant for each and every combination of &lt;c0&gt;buildType&lt;/c0&gt;, &lt;c1&gt;platform&lt;/c1&gt; and &lt;c2&gt;flavor&lt;/c2&gt; defined for the project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T081752Z" creationid="haohang" creationdate="20160408T081752Z">
        <seg>对于一个默认的组件， Gradle会尝试为这个project所定义的每一个&lt;c0&gt;buildType&lt;/c0&gt;， &lt;c1&gt;platform&lt;/c1&gt; 和 &lt;c2&gt;flavor&lt;/c2&gt;，以及它们的每一种组合，创建一个本地二进制变种。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For a dynamic version, a 'higher' static version is preferred over a 'lower' version.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151007T024026Z" creationid="95" creationdate="20151007T024026Z">
        <seg>对于动态版本，“高”的静态版本优于“低”的版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For a flat layout you must additionally obey to the naming convention described above.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T075530Z" creationid="haohang" creationdate="20160519T075505Z">
        <seg>对于平面布局你必须另外服从上面描述的命名约定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For a given variant, Gradle will attempt to find a &lt;a0&gt;&lt;c1&gt;ToolChain&lt;/c1&gt;&lt;/a0&gt; that is able to build for the target platform.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160405T034137Z" creationid="haohang" creationdate="20160405T034137Z">
        <seg>对于给定的变种，Gradle 将尝试查找能够构建目标平台的&lt;a0&gt;&lt;c1&gt;ToolChain&lt;/c1&gt;&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For a given variant, Gradle will attempt to locate a &lt;a0&gt;&lt;c1&gt;ToolChain&lt;/c1&gt;&lt;/a0&gt; that is able to build for the target platform.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T091603Z" creationid="haohang" creationdate="20160408T091603Z">
        <seg>对于给定的变种，Gradle 将尝试查找能够构建目标平台的&lt;a0&gt;&lt;c1&gt;ToolChain&lt;/c1&gt;&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For a library named 'main', files in &lt;c0&gt;src/main/headers&lt;/c0&gt; are considered the “public” or “exported” headers.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160225T085745Z" creationid="haohang" creationdate="20160225T085640Z">
        <seg>对于名字为“main”的library， &lt;c0&gt;src/main/headers&lt;/c0&gt;中的文件都被视为"公共"或"导出"的头文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For a multi-project build these are the projects specified in Settings object (plus the root project).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T080519Z" creationid="haohang" creationdate="20160519T080519Z">
        <seg>对于多项目构建，则有在 Setting 对象中指定的project（加上根项目的project）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For a multi-project build, all projects with native components should have this plugin applied.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T095147Z" creationid="haohang" creationdate="20160408T095147Z">
        <seg>对于多项目构建，所有带有本地组件的project都应该应用这个插件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For a new version, you have always to create the new XML descriptor and the directories.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151130T051515Z" creationid="haohang" creationdate="20151130T051515Z">
        <seg>对一个新的版本，你总是要创建新的 XML 描述符和目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For a single project build this is only one project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T080425Z" creationid="haohang" creationdate="20160519T080425Z">
        <seg>对于单项目构建，只有一个project。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For a single project build, the workflow of the &lt;s0&gt;&lt;e1&gt;after initialization&lt;/e1&gt;&lt;/s0&gt; phases are pretty simple.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160520T123413Z" creationid="haohang" creationdate="20160519T080728Z">
        <seg>对于一个单项目构建，&lt;s0&gt;&lt;e1&gt;初始化后&lt;/e1&gt;&lt;/s0&gt;阶段的工作流都相当简单。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For a single-project build, a settings file is optional.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T025051Z" creationid="haohang" creationdate="20160519T025051Z">
        <seg>对于单项目的构建，有没有设置文件都可以。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For a task to be “signable”, it must produce an archive of some type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160126T140635Z" creationid="95" creationdate="20160126T140635Z">
        <seg>一个“可签名”的任务，必须输出某种类型的archive。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For above sorts of workflows, it is important that the startup cost of invoking Gradle is as small as possible.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141117T140045Z" creationid="msdx" creationdate="20141117T140045Z">
        <seg>对以上各种工作流来说，让调用 Gradle 的启动成本尽可能小会很重要。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For adding a custom Maven repository you can do:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150909T052909Z" creationid="haohang" creationdate="20150909T052909Z">
        <seg>要添加一个自定义的 Maven 仓库，你可以如下操作：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For an example, see &lt;a0&gt;&lt;c1&gt;ResolutionStrategy&lt;/c1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T054939Z" creationid="95" creationdate="20151115T054939Z">
        <seg>有关示例，请参见&lt;a0&gt;&lt;c1&gt;ResolutionStrategy&lt;/c1&gt;&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For an open source project it looks like overkill.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151201T070906Z" creationid="haohang" creationdate="20151201T070906Z">
        <seg>而对于一个开放源码项目而言，看起来则有点小题大做了。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For best results, it is therefore recommended to run a full build before the analysis.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150510T143146Z" creationid="msdx" creationdate="20150510T143146Z">
        <seg>为获得最佳结果，建议在分析前运行一次完整的构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For command line usage take a look dedicated section in &lt;a0&gt;Appendix D, &lt;i1&gt;Gradle Command Line&lt;/i1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141118T095745Z" creationid="msdx" creationdate="20141118T095745Z">
        <seg>关于命令行的用法，可以看一下专题&lt;a0&gt;附录 D&lt;/a0&gt;， &lt;i1&gt;Gradle 命令行&lt;/i1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For configuring a third-party Sonar plugin, consult the plugin's documentation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T102048Z" creationid="msdx" creationdate="20150512T102048Z">
        <seg>对于第三方 Sonar 插件的配置，请参阅插件的文档。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For dependencies from a Maven repository, the default configuration is the only available one anyway.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T032611Z" creationid="haohang" creationdate="20150807T032611Z">
        <seg>对于 Maven 存储库的依赖，至少默认配置是唯一可用的一个。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For details on how to use the listener interfaces, refer to the API documentation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T020945Z" creationid="95" creationdate="20160521T020945Z">
        <seg>有关如何使用监听器接口的详细信息，请参阅 API 文档。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For each &lt;a0&gt;&lt;c1&gt;NativeBinary&lt;/c1&gt;&lt;/a0&gt; that can be produced by a build, a single &lt;e2&gt;lifecycle task&lt;/e2&gt; is constructed that can be used to create that binary, together with a set of other tasks that do the actual work of compiling, linking or assembling the binary.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160219T072157Z" creationid="haohang" creationdate="20160219T070810Z">
        <seg>针对由构建所产生的每一个 &lt;a0&gt;&lt;c1&gt;NativeBinary&lt;/c1&gt;&lt;/a0&gt;，我们构造了一个&lt;e2&gt;生命周期任务&lt;/e2&gt;用于创建二进制，以及一系统的其他做实际工作，如编译，链接或者是装配二进制文件的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For each &lt;a0&gt;&lt;c1&gt;TestSuiteExecutableBinary&lt;/c1&gt;&lt;/a0&gt;, Gradle will create a task to execute this binary, which will run all of the registered CUnit tests.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T151309Z" creationid="95" creationdate="20160504T151309Z">
        <seg>对于每个&lt;a0&gt;&lt;c1&gt;TestSuiteExecutableBinary&lt;/c1&gt;&lt;/a0&gt;，Gradle 将创建一个任务来执行此二进制文件，这项任务将运行所有注册的 CUnit 测试。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For each &lt;a1&gt;&lt;c2&gt;Executable&lt;/c2&gt;&lt;/a1&gt; and &lt;a3&gt;&lt;c4&gt;Library&lt;/c4&gt;&lt;/a3&gt; defined in your project, Gradle will create a matching &lt;a5&gt;&lt;c6&gt;CUnitTestSuite&lt;/c6&gt;&lt;/a5&gt; component, named &lt;c7&gt;${component.name}Test&lt;/c7&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T144334Z" creationid="95" creationdate="20160504T144334Z">
        <seg>对于在你的项目中定义的每一个 &lt;a1&gt;&lt;c2&gt;Executable&lt;/c2&gt;&lt;/a1&gt; 和 &lt;a3&gt;&lt;c4&gt;Library&lt;/c4&gt;&lt;/a3&gt;，Gradle将创建一个匹配的 &lt;a5&gt;&lt;c6&gt;CUnitTestSuite&lt;/c6&gt;&lt;/a5&gt; 组件，名字为&lt;c7&gt;${component.name}Test&lt;/c7&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For each &lt;a6&gt;&lt;c7&gt;ProjectNativeBinary&lt;/c7&gt;&lt;/a6&gt; configured for the main component, a matching &lt;a8&gt;&lt;c9&gt;TestSuiteExecutableBinary&lt;/c9&gt;&lt;/a8&gt; will be configured on the test suite component.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T150909Z" creationid="95" creationdate="20160504T150637Z">
        <seg>对于为main 组件配置的每一个&lt;a6&gt;&lt;c7&gt;ProjectNativeBinary&lt;/c7&gt;&lt;/a6&gt;，在测试套件组件上都会配置一个匹配的 &lt;a8&gt;&lt;c9&gt;TestSuiteExecutableBinary&lt;/c9&gt;&lt;/a8&gt; 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For each &lt;c6&gt;executable&lt;/c6&gt; or &lt;c7&gt;library&lt;/c7&gt; defined, Gradle adds a &lt;a8&gt;&lt;c9&gt;FunctionalSourceSet&lt;/c9&gt;&lt;/a8&gt; with the same name.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160219T064713Z" creationid="haohang" creationdate="20160219T064713Z">
        <seg>对于每个定义的&lt;c6&gt;executable&lt;/c6&gt;或&lt;c7&gt;library&lt;/c7&gt;，Gradle 添加了具有相同名称的&lt;a8&gt;&lt;c9&gt;FunctionalSourceSet&lt;/c9&gt; &lt;/a8&gt; 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For each configuration in your project, Gradle provides the tasks &lt;c0&gt;upload&lt;e1&gt;&lt;c2&gt;ConfigurationName&lt;/c2&gt;&lt;/e1&gt;&lt;/c0&gt; and &lt;c3&gt;build&lt;e4&gt;&lt;c5&gt;ConfigurationName&lt;/c5&gt;&lt;/e4&gt;&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151220T123854Z" creationid="95" creationdate="20151220T123854Z">
        <seg>对于你的项目中的每一个配置，Gradle 提供了&lt;c0&gt;upload&lt;e1&gt;&lt;c2&gt;ConfigurationName&lt;/c2&gt;&lt;/e1&gt;&lt;/c0&gt;和&lt;c3&gt;build&lt;e4&gt;&lt;c5&gt;ConfigurationName&lt;/c5&gt;&lt;/e4&gt;&lt;/c3&gt;任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For each executable binary produced, the &lt;c0&gt;cpp&lt;/c0&gt; plugin provides an &lt;c1&gt;install${binary.name}&lt;/c1&gt; task, which creates a development install of the executable, along with the shared libraries it requires.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160219T081139Z" creationid="haohang" creationdate="20160219T072620Z">
        <seg>对于每个产生的可执行二进制文件， &lt;c0&gt;cpp&lt;/c0&gt;插件提供了&lt;c1&gt;install${binary.name}&lt;/c1&gt;任务，这个任务可以创建该可执行文件及它需要的共享库的开发安装。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For each executable or library defined, Gradle is able to build a number of different native binary variants.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160401T063809Z" creationid="haohang" creationdate="20160325T033520Z">
        <seg>对于每个定义的可执行文件或库，Gradle 能够构建多个不同的本机二进制变种。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For each extra distribution set you add to the project, the distribution plugin adds the following tasks:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150701T031122Z" creationid="haohang" creationdate="20150701T030943Z">
        <seg>对于你向项目中添加的每一个额外的分发集合，分发插件会添加下列任务：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For each of these 'variant dimensions', it is possible to specify a set of available values as well as target each component at one, some or all of these.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160401T085709Z" creationid="haohang" creationdate="20160401T085709Z">
        <seg>对于这里的每一个“变种维度”，它可以指定一组可用的值，并且针对每个组件使用这里的一个或多个或全部的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For each project in the build, Gradle creates an instance of type &lt;a3&gt;&lt;c4&gt;Project&lt;/c4&gt;&lt;/a3&gt; and associates this &lt;c5&gt;Project&lt;/c5&gt; object with the build script.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T044320Z" creationid="msdx" creationdate="20141108T040302Z">
        <seg>在构建的每一个项目中，Gradle 创建了一个&lt;a3&gt;&lt;c4&gt;Project&lt;/c4&gt;&lt;/a3&gt;类型的实例，并在构建脚本中关联此&lt;c5&gt;Project&lt;/c5&gt;对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For each source set you add to the project, the Java plugin adds the following compilation tasks:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T005705Z" creationid="Administrator" creationdate="20150426T005705Z">
        <seg>对于每个你添加到该项目中的源集，Java 插件将添加以下的编译任务：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For each source set you add to the project, the Java plugins adds the following dependency configurations:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T084749Z" creationid="Administrator" creationdate="20150426T084749Z">
        <seg>对于每个你添加到项目中的源集，Java插件都会添加以下的依赖配置：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For exact details on when exactly new daemon process is forked read the dedicated section below.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141117T152309Z" creationid="msdx" creationdate="20141117T152013Z">
        <seg>关于fork一个完全新的守护进程的具体细节，请阅读下面的专题。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example &lt;c0&gt; :bluewhale:hello&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T061511Z" creationid="haohang" creationdate="20160718T061511Z">
        <seg>例如&lt;c0&gt; :bluewhale:hello&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example &lt;c0&gt;cleanJar&lt;/c0&gt; will delete the JAR file created by the &lt;c1&gt;jar&lt;/c1&gt; task, and &lt;c2&gt;cleanTest&lt;/c2&gt; will delete the test results created by the &lt;c3&gt;test&lt;/c3&gt; task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T005641Z" creationid="Administrator" creationdate="20150426T005641Z">
        <seg>例如， &lt;c0&gt;cleanJar&lt;/c0&gt;将删除由&lt;c1&gt;jar&lt;/c1&gt;任务中所创建的 JAR 文件，&lt;c2&gt;cleanTest&lt;/c2&gt;将删除由&lt;c3&gt;test&lt;/c3&gt;任务所创建的测试结果。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example if you run a build on a continuous integration server where you have no admin rights for the &lt;s3&gt;&lt;e4&gt;machine&lt;/e4&gt;&lt;/s3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T141856Z" creationid="msdx" creationdate="20141109T141543Z">
        <seg>例如，如果你在一个持续集成服务器上运行构建，但你没有这台&lt;s3&gt;&lt;e4&gt;机器&lt;/e4&gt;&lt;/s3&gt;的管理员权限，</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example if you want to exchange a task added by the Java plugin with a custom task of a different type.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T015803Z" creationid="msdx" creationdate="20141111T015803Z">
        <seg>例如，您想要把通过 Java 插件添加的一个任务与不同类型的一个自定义任务进行交换。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example there might be a project which uses Hibernate 2.5.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150716T092634Z" creationid="haohang" creationdate="20150716T092634Z">
        <seg>例如可能有一个项目使用 Hibernate 2.5。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example we will not fork a new daemon if a some system property has changed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141117T153120Z" creationid="msdx" creationdate="20141117T153120Z">
        <seg>例如，如果某些系统属性已经更改，我们不会fork一个新的守护进程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example you can configure your build to generate code coverage using the &lt;c0&gt;application&lt;/c0&gt; plugin.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T135547Z" creationid="msdx" creationdate="20150506T135547Z">
        <seg>例如，你可以配置您的构建使用&lt;c0&gt;application&lt;/c0&gt;插件来生成代码覆盖率。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example you can use a shared flat directory without XML descriptors and yet you can have full transitive dependency management as described above.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151201T063459Z" creationid="haohang" creationdate="20151201T063459Z">
        <seg>例如你可以使用一个共享平面目录，而不包括如上所述可以有完全的传递依赖管理的XML 描述符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, &lt;a3&gt;dependency configurations&lt;/a3&gt; implement &lt;c4&gt;FileCollection&lt;/c4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T145249Z" creationid="msdx" creationdate="20141112T145249Z">
        <seg>比如，&lt;a3&gt;依赖配置&lt;/a3&gt; 就实现了 &lt;c4&gt;FileCollection&lt;/c4&gt; 这一接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, &lt;c0&gt;Iterable&lt;/c0&gt; gets an &lt;c1&gt;each&lt;/c1&gt; method, which iterates over the elements of the &lt;c2&gt;Iterable&lt;/c2&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T061318Z" creationid="msdx" creationdate="20141108T061213Z">
        <seg>例如， &lt;c0&gt;iterable &lt;/c0&gt;新增的&lt;c1&gt;each&lt;/c1&gt;方法，会对&lt;c2&gt;iterable &lt;/c2&gt;的元素进行遍历：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, &lt;s2&gt;&lt;c3&gt;gradle buildDashboard build&lt;/c3&gt;&lt;/s2&gt; will generate a dashboard for all of the reporting tasks that are dependents of the &lt;c4&gt;build&lt;/c4&gt; task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150713T100232Z" creationid="haohang" creationdate="20150713T100232Z">
        <seg>例如， &lt;s2&gt; &lt;c3&gt;gradle buildDashboard build&lt;/c3&gt;&lt;/s2&gt; 将为 &lt;c4&gt;build&lt;/c4&gt;任务 所依赖的所有报告任务生成一个 dashboard。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, a Groovy class can extend a Java class that in turn extends a Groovy class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T071147Z" creationid="msdx" creationdate="20150429T071147Z">
        <seg>例如，一个 Groovy 类可以继承自一个 Java 类，而这个 Java 类也可以继承自一个 Groovy 类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, a Scala class can extend a Java class that in turn extends a Scala class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T144835Z" creationid="msdx" creationdate="20150429T144809Z">
        <seg>例如，一个 Scala 类可以继承自一个 Java 类，而这个 Java 类也可以继承自一个 Scala 类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, a file tree might represent a directory tree or the contents of a ZIP file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T161640Z" creationid="msdx" creationdate="20141112T161640Z">
        <seg>例如，文件树可能表示一个目录树或 ZIP 文件的内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, a path 'services:api' is mapped by default to a folder 'services/api' (relative from the project root).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T041640Z" creationid="haohang" creationdate="20160519T041540Z">
        <seg>例如，一个路径 'services:api'，默认情况下映射到文件夹'services/api'（相对于项目根目录）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, a plugin may define a range of support platforms, but you may choose to only target Windows-x86 for a particular component.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160401T085955Z" creationid="haohang" creationdate="20160401T085955Z">
        <seg>例如，一个插件可以定义一系列的支持平台，但你可以选择某个特定组件只构建Windows-x86平台。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, both the Groovy and Scala compilers have a large startup cost.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141117T151040Z" creationid="msdx" creationdate="20141117T151040Z">
        <seg>例如，Groovy 和 Scala 的编译器启动开销都很大。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, for a source set called &lt;c1&gt;intTest&lt;/c1&gt;, you can run &lt;s2&gt;&lt;c3&gt;gradle intTestClasses&lt;/c3&gt;&lt;/s2&gt; to compile the int test classes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T133209Z" creationid="Administrator" creationdate="20150427T133209Z">
        <seg>例如，对于一个被叫做&lt;c1&gt;intTest&lt;/c1&gt;的源集，你可以运行&lt;s2&gt;&lt;c3&gt;gradle intTestClasses&lt;/c3&gt;&lt;/s2&gt;来编译 int 测试类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, it will infer a type value of "&lt;c1&gt;pom&lt;/c1&gt;" if it finds a &lt;c2&gt;pom.xml&lt;/c2&gt; to convert to a Gradle build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T074414Z" creationid="haohang" creationdate="20150707T074414Z">
        <seg>例如，如果它发现&lt;c2&gt;pom.xml&lt;/c2&gt;，它将推断一个“&lt;c1&gt;pom&lt;/c1&gt;”的类型值，以转换为 Gradle 构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, one common pattern is an Ant project with version-less jar files stored in the filesystem.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150716T040507Z" creationid="haohang" creationdate="20150716T040507Z">
        <seg>例如，一个常见的模式是，有一个 Ant 项目，而它保存在文件系统中的一些 jar 文件缺少版本号。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, setting the &lt;c0&gt;skip&lt;/c0&gt; property to &lt;c1&gt;true&lt;/c1&gt; prevents a project (and its subprojects) from being analyzed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T091705Z" creationid="msdx" creationdate="20150512T091705Z">
        <seg>例如，设置 &lt;c0&gt;skip&lt;/c0&gt; 属性为&lt;c1&gt;true&lt;/c1&gt; 以防止一个项目（和它的子项目）被分析。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, some other dependency, which does not have any exclude rules, might pull in that unwanted transitive dependency.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T102944Z" creationid="haohang" creationdate="20150801T102944Z">
        <seg>例如，某些其他的依赖，并没有任何排除规则，可能会带上那个多余的传递依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, the &lt;a0&gt;&lt;c1&gt;JavaCompile&lt;/c1&gt;&lt;/a0&gt; task has a &lt;c2&gt;source&lt;/c2&gt; property, which defines the source files to compile.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T122938Z" creationid="msdx" creationdate="20141113T122938Z">
        <seg>例如， &lt;a0&gt; &lt;c1&gt;JavaCompile&lt;/c1&gt;&lt;/a0&gt;任务有一个&lt;c2&gt;source&lt;/c2&gt;属性，定义了要编译的源代码文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, the &lt;a0&gt;Java plugin&lt;/a0&gt; configures a jar to built and this jar artifact is added to the &lt;c1&gt;archives&lt;/c1&gt; configuration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160109T072126Z" creationid="95" creationdate="20160109T072126Z">
        <seg>例如， &lt;a0&gt;Java 插件&lt;/a0&gt;配置了构建一个jar文件，并且把 jar 文件添加到&lt;c1&gt;archives&lt;/c1&gt;配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, the archive tasks are tasks of types: &lt;a2&gt;&lt;c3&gt;Jar&lt;/c3&gt;&lt;/a2&gt;, &lt;a4&gt;&lt;c5&gt;Tar&lt;/c5&gt;&lt;/a4&gt;, &lt;a6&gt;&lt;c7&gt;Zip&lt;/c7&gt;&lt;/a6&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T071002Z" creationid="Administrator" creationdate="20150425T071002Z">
        <seg>例如，以下类型的归档任务： &lt;a2&gt; &lt;c3&gt;Jar&lt;/c3&gt;&lt;/a2&gt;，&lt;a4&gt;&lt;c5&gt;Tar&lt;/c5&gt;&lt;/a4&gt;，&lt;a6&gt;&lt;c7&gt;Zip&lt;/c7&gt;&lt;/a6&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, the daemon might be useful for following scenarios:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141117T141720Z" creationid="msdx" creationdate="20141117T140228Z">
        <seg>例如，该守护进程可能用于以下情形：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, the keyword style does not work in expressions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T022949Z" creationid="msdx" creationdate="20141110T021240Z">
        <seg>例如，在表达式中不能用这种关键字风格。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, the organisation &lt;c0&gt;my.company&lt;/c0&gt; would then be represented as &lt;c1&gt;my/company&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T111037Z" creationid="95" creationdate="20151006T111037Z">
        <seg>例如，组织&lt;c0&gt;my.company&lt;/c0&gt;将表示为&lt;c1&gt;my/company&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, to create a Java library project simply execute: &lt;c3&gt;gradle init --type java-library&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T074237Z" creationid="haohang" creationdate="20150707T074237Z">
        <seg>例如，要创建一个 Java library 项目，只需执行: &lt;c3&gt;gradle init --type java-library&lt;/c3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, with the default status scheme in place, &lt;c3&gt;latest.integration&lt;/c3&gt; will select the highest module version regardless of its status (because &lt;c4&gt;integration&lt;/c4&gt; is the least mature status), whereas &lt;c5&gt;latest.release&lt;/c5&gt; will select the highest module version with status &lt;c6&gt;release&lt;/c6&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T041529Z" creationid="95" creationdate="20151129T020649Z">
        <seg>例如，在适当的位置使用默认的状态模式，&lt;c3&gt;latest.integration&lt;/c3&gt;将选择最高的模块版本，不论其状态（因为&lt;c4&gt;integration&lt;/c4&gt;是成熟度最低的状态），而&lt;c5&gt;latest.release&lt;/c5&gt;将选择&lt;c6&gt;release&lt;/c6&gt;状态的最高模块版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, you can use it to expand the archive by copying the contents, or to merge some archives into another.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T122816Z" creationid="msdx" creationdate="20141113T122732Z">
        <seg>例如，您可以用它来通过复制内容扩大归档，或把一些档案合并到另一个归档文件中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, you could start by importing your existing Ant build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141114T142630Z" creationid="msdx" creationdate="20141114T142630Z">
        <seg>例如，你可以通过导入您现有的 Ant 构建来开始。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, you execute the Ant &lt;c1&gt;echo&lt;/c1&gt; task by calling the &lt;c2&gt;ant.echo()&lt;/c2&gt; method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141115T153307Z" creationid="msdx" creationdate="20141115T153152Z">
        <seg>例如，你可以通过调用&lt;c2&gt;ant.echo()&lt;/c2&gt;方法执行 Ant 的 &lt;c1&gt;echo&lt;/c1&gt; 任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, you may not wish to sign artifacts for non release versions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160126T141326Z" creationid="95" creationdate="20160126T141326Z">
        <seg>例如，你可能不想对非发布版本签名artifacts。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, you might use a source set to define an integration test suite, or you might use separate source sets to define the API and implementation classes of your project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T173510Z" creationid="Administrator" creationdate="20150425T173510Z">
        <seg>例如，你可能会使用一个源集来定义一个集成测试套件，或者你可能会使用单独的源集来定义你的项目的 API 和实现类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, you might want the artifact deployed to the Maven repository to have a different version or name than the artifact generated by Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T142653Z" creationid="95" creationdate="20160106T142653Z">
        <seg>例如，你可能希望部署到 Maven 仓库中的artifact 有不同的版本，或者是不同于 Gradle 生成的artifact 的名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141117T132920Z" creationid="msdx" creationdate="20141117T132920Z">
        <seg>举个例子：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For further details on extra properties and their API, see &lt;a0&gt;&lt;c1&gt;ExtraPropertiesExtension&lt;/c1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T055457Z" creationid="msdx" creationdate="20141108T055401Z">
        <seg>有关额外属性和它们的 API 的详细信息，请参阅&lt;a0&gt;&lt;c1&gt;ExtraPropertiesExtension&lt;/c1&gt;&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For global Sonar properties, use the &lt;c0&gt;withGlobalProperties&lt;/c0&gt; hook on &lt;a1&gt;&lt;c2&gt;SonarRootModel&lt;/c2&gt;&lt;/a1&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T101317Z" creationid="msdx" creationdate="20150512T101303Z">
        <seg>对于全局的 Sonar 属性，可以使用&lt;a1&gt;&lt;c2&gt;SonarRootModel&lt;/c2&gt;&lt;/a1&gt;上的 &lt;c0&gt;withGlobalProperties&lt;/c0&gt; hook：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For grouping JUnit test classes and methods JUnit 4.8 introduces the concept of categories.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T082505Z" creationid="msdx" creationdate="20150428T082358Z">
        <seg>为对Junit 测试类和方法进行分组，JUnit 4.8引入了类别的概念。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For how to publish to a Maven repository, see the section &lt;a4&gt;Section 52.6, “Interacting with Maven repositories”&lt;/a4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151227T160745Z" creationid="95" creationdate="20151227T160745Z">
        <seg>有关如何发布到 Maven 仓库，请参阅&lt;a4&gt;第 52.6节，”与Maven 仓库的交互“&lt;/a4&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For how to run partial builds from the root see &lt;a0&gt;Section 56.4, “Running tasks by their absolute path”&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T080043Z" creationid="haohang" creationdate="20160519T080043Z">
        <seg>有关如何从根目录运行部分的构建，见&lt;a0&gt;第 56.4章，“使用其绝对路径运行任务”&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For include this is &lt;c2&gt;"**/*Tests.class", "**/*Test.class"&lt;/c2&gt; and the for exclude it is &lt;c3&gt;"**/Abstract*.class"&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T082053Z" creationid="Administrator" creationdate="20150428T082053Z">
        <seg>对于 include 的默认值是 &lt;c2&gt;"**/*Tests.class"， "**/*Test.class"&lt;/c2&gt;，而对于exclude它的默认值是 &lt;c3&gt;"**/Abstract*.class"&lt;/c3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For instance, this tight &lt;s0&gt;&lt;e1&gt;coupling&lt;/e1&gt;&lt;/s0&gt; of projects effectively prevents Gradle from building multiple projects in parallel, or from substituting a pre-built artifact in place of a project dependency.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T092709Z" creationid="haohang" creationdate="20160726T092709Z">
        <seg>例如，紧&lt;s0&gt;&lt;e1&gt;耦合&lt;/e1&gt;&lt;/s0&gt;的项目实际上会阻碍 Gradle 在多项目上的并行构建，或是使用预构建的构件来代替某个项目依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For local developer builds this is our favorite property.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141119T153652Z" creationid="msdx" creationdate="20141119T153652Z">
        <seg>对于本地开发者的构建而言，这是我们最喜欢的属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For many projects there is not one right set of dependencies (as more or less imposed by the POM format).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151130T050758Z" creationid="haohang" creationdate="20151130T050758Z">
        <seg>对于许多项目而言，可能不是只有正确的一组依赖（因POM格式的影响会多或少）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For migration purposes this is a common technique with Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150716T045207Z" creationid="haohang" creationdate="20150716T045137Z">
        <seg>出于迁移的目的，这是在 Gradle 中的一种常用技术。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more advanced uses, you can define a task dependency using a closure.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T122649Z" creationid="msdx" creationdate="20141110T122649Z">
        <seg>对于更高级的用法，您可以使用闭包来定义任务依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more details and examples please see the &lt;a0&gt;&lt;c1&gt;TestFilter&lt;/c1&gt;&lt;/a0&gt; reference.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T024115Z" creationid="Administrator" creationdate="20150428T024115Z">
        <seg>有关更多的详细信息和示例，请参阅&lt;a0&gt;&lt;c1&gt;TestFilter&lt;/c1&gt;&lt;/a0&gt;的文档。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more details, see the API documentation of the convention object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150526T004635Z" creationid="haohang" creationdate="20150526T004635Z">
        <seg>有关更多详细信息，请参见约定对象的 API 文档。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more details, take a look at the API documentation for&lt;a0&gt;&lt;c1&gt;ResolutionStrategy&lt;/c1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151130T032641Z" creationid="haohang" creationdate="20151130T032641Z">
        <seg>更多详细信息请参阅&lt;a0&gt;&lt;c1&gt;ResolutionStrategy&lt;/c1&gt;&lt;/a0&gt;的 API 文档。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more exotic use cases you can even pass properties &lt;s1&gt;&lt;e2&gt;directly&lt;/e2&gt;&lt;/s1&gt; to the project object via system and environment properties.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T141352Z" creationid="msdx" creationdate="20141109T141326Z">
        <seg>在更多的用法中，您甚至可以通过系统和环境属性把属性&lt;s1&gt;&lt;e2&gt;直接&lt;/e2&gt;&lt;/s1&gt;传给项目对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more information about task dependencies, see the &lt;a0&gt;&lt;c1&gt;Task&lt;/c1&gt;&lt;/a0&gt; API.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T123959Z" creationid="msdx" creationdate="20141110T123911Z">
        <seg>有关任务依赖的详细信息，请参阅&lt;a0&gt;&lt;c1&gt;Task&lt;/c1&gt;&lt;/a0&gt;的 API。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more information about the API please refer to the javadocs on &lt;a0&gt;&lt;c1&gt;ResolvableDependencies.getResolutionResult()&lt;/c1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T033855Z" creationid="haohang" creationdate="20150807T033855Z">
        <seg>关于这个 API 的更多信息，请参考 &lt;a0&gt;&lt;c1&gt;ResolvableDependencies.getResolutionResult()&lt;/c1&gt;&lt;/a0&gt;上的文档。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more information and code samples see &lt;a0&gt;&lt;c1&gt;ResolutionStrategy&lt;/c1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T060330Z" creationid="95" creationdate="20151115T060240Z">
        <seg>更多的信息和代码示例请参阅&lt;a0&gt;&lt;c1&gt;ResolutionStrategy&lt;/c1&gt;&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more information on how to do this, see &lt;a2&gt;Section 59.5, “External dependencies for the build script”&lt;/a2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141123T150630Z" creationid="msdx" creationdate="20141123T150630Z">
        <seg>有关如何进行此操作的详细信息，请参阅&lt;a2&gt; 59.5章节，“构建脚本的外部依赖”&lt;/a2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more information on the inner workings of plugins, see &lt;a0&gt;Chapter 58, &lt;i1&gt;Writing Custom Plugins&lt;/i1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141124T095501Z" creationid="msdx" creationdate="20141124T095501Z">
        <seg>关于插件的内部运作的详细信息，请参阅&lt;a0&gt;第 58 章，&lt;i1&gt;编写自定义插件&lt;/i1&gt;&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more information see the API documentation for &lt;a0&gt;&lt;c1&gt;ProjectDependency&lt;/c1&gt;&lt;/a0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T092533Z" creationid="haohang" creationdate="20150801T092533Z">
        <seg>详细信息请参阅&lt;a0&gt;&lt;c1&gt;ProjectDependency&lt;/c1&gt;&lt;/a0&gt;的 API 文档</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more information, see the Ivy reference for &lt;c1&gt;ivy.xml&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150730T032816Z" creationid="haohang" creationdate="20150730T032816Z">
        <seg>有关更多的信息，请参阅&lt;c1&gt;ivy.xml&lt;/c1&gt;引用的Ivy。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more on writing your own plugins, see &lt;a0&gt;Chapter 58, &lt;i1&gt;Writing Custom Plugins&lt;/i1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141123T150713Z" creationid="msdx" creationdate="20141123T150713Z">
        <seg>关于编写自己的插件的详细信息，请参阅&lt;a0&gt; 58章节，&lt;i1&gt;编写自定义插件&lt;/i1&gt;&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For most projects, this is the better choice than the Ant-based compiler.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T094454Z" creationid="msdx" creationdate="20150429T094411Z">
        <seg>对于大多数项目而言，这相比基于 Ant 编译器，是个更好的选择。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For multi-project builds you can place &lt;c4&gt;gradle.properties&lt;/c4&gt; files in any subproject directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T134149Z" creationid="msdx" creationdate="20141109T093732Z">
        <seg>对于多项目构建，您可以将&lt;c4&gt;gradle.properties&lt;/c4&gt;文件放在任何子项目的目录中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For multiproject builds the situation is different.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160522T125813Z" creationid="95" creationdate="20160522T125813Z">
        <seg>对于 multiproject 构建，这咱情况则不同。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For other &lt;c3&gt;ScalaCompile&lt;/c3&gt; tasks, &lt;c4&gt;scalaCompileOptions.incrementalOptions.publishedCode&lt;/c4&gt; needs to be configured to point to the classes folder or Jar archive by which the code is passed on to compile class paths of downstream &lt;c5&gt;ScalaCompile&lt;/c5&gt; tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T160304Z" creationid="msdx" creationdate="20150501T155734Z">
        <seg>对于其他的 &lt;c3&gt;ScalaCompile&lt;/c3&gt; 任务，需要根据类文件夹或 Jar archive 的代码中，是哪一个的代码被传递给&lt;c5&gt;ScalaCompile&lt;/c5&gt;任务的下游类路径，把&lt;c4&gt;ScalaCompileOptions.incrementalOptions.publishedCode&lt;/c4&gt;配置为指向它们。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For our sample, we will use Groovy 2.2.0 from the public Maven repository:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T065340Z" creationid="msdx" creationdate="20141030T065340Z">
        <seg>下面例子中，我们会使用Maven中央仓库中的Groovy 2.2.0版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For per-project Sonar properties, use the &lt;c0&gt;withProjectProperties&lt;/c0&gt; hook on &lt;a1&gt;&lt;c2&gt;SonarProject&lt;/c2&gt;&lt;/a1&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T101409Z" creationid="msdx" creationdate="20150512T101409Z">
        <seg>对于每个项目的 Sonar 属性，使用&lt;a1&gt;&lt;c2&gt;SonarProject&lt;/c2&gt;&lt;/a1&gt;上的&lt;c0&gt;withProjectProperties&lt;/c0&gt; hook：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For projects that also apply the Java Plugin, The JaCoCo plugin automatically adds the following tasks:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T135908Z" creationid="msdx" creationdate="20150506T135842Z">
        <seg>对于同时也配置使用了 Java 插件的项目，JaCoCo 插件会自动添加以下任务：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For scenarios where the outputs of a task are not files, or for more complex scenarios, the &lt;a2&gt;&lt;c3&gt;TaskOutputs.upToDateWhen()&lt;/c3&gt;&lt;/a2&gt; method allows you to calculate programmatically if the tasks outputs should be considered up to date.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T062850Z" creationid="msdx" creationdate="20141111T061606Z">
        <seg>对于任务的输出并不是文件的场景，或者是更复杂的场景， &lt;a2&gt; &lt;c3&gt;TaskOutputs.upToDateWhen()&lt;/c3&gt;&lt;/a2&gt;方法允许您以编程方式计算任务的输出是否应该被判断为最新状态。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For some properties (notably server and database connection settings), determining a suitable default is left to the Sonar Runner.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T065112Z" creationid="msdx" creationdate="20150513T065112Z">
        <seg>对于一些属性（尤其是服务器和数据库的连接配置），确定留给 Sonar Runner 一个合适的默认值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For some workflows, the user invokes Gradle many times to execute a small number of relatively quick tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141117T132909Z" creationid="msdx" creationdate="20141117T132909Z">
        <seg>对于一些工作流，用户会多次调用 Gradle，以执行少量的相对快速的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For that use case please refer to &lt;a0&gt;Section 50.2.3, “Resolve version conflicts”&lt;/a0&gt; and the documentation on &lt;a1&gt;&lt;c2&gt;ResolutionStrategy&lt;/c2&gt;&lt;/a1&gt; for a potentially better solution to the problem.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T102035Z" creationid="haohang" creationdate="20150801T102035Z">
        <seg>使用这个案例，请参考&lt;a0&gt;第 50.2.3 节，“解决版本冲突”&lt;/a0&gt;和关于&lt;a1&gt;&lt;c2&gt;ResolutionStrategy&lt;/c2&gt;&lt;/a1&gt;文档，以了解这个问题潜在的更好的解决方案。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For the examples below we have the following dependencies setup:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T034228Z" creationid="haohang" creationdate="20150807T034228Z">
        <seg>下面的示例我们使用以下依赖设置：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For the jars and the correct POMs you still use the remote repository.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151201T063836Z" creationid="haohang" creationdate="20151201T063836Z">
        <seg>对于这些jar 和不正确的 POMs，你依然要使用远程仓库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For the latter you can declare &lt;e0&gt;Project Dependencies&lt;/e0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T092511Z" creationid="haohang" creationdate="20150801T092511Z">
        <seg>对于后者，你可以声明&lt;e0&gt;项目依赖&lt;/e0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For the person service we declare that the project should be compiled only against the &lt;c5&gt;api&lt;/c5&gt; interfaces but tested with all classes from &lt;c6&gt;api&lt;/c6&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T085250Z" creationid="haohang" creationdate="20160726T085250Z">
        <seg>对于 person service，我们定义了这个项目应该仅针对&lt;c5&gt;api&lt;/c5&gt; 接口编译，但是对&lt;c6&gt;api&lt;/c6&gt;里的所有类进行测试。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For this and other (mainly isolation) reasons, it is desirable to execute the Sonar Runner in a separate process.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150525T234530Z" creationid="haohang" creationdate="20150525T234530Z">
        <seg>由于这个和其他（主要是隔离）的原因，最好在一个独立的进程中执行Sonar Runner。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For this layer Gradle provides integration simply by relying on Groovy, and the fantastic &lt;c3&gt;AntBuilder&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141114T141736Z" creationid="msdx" creationdate="20141114T141448Z">
        <seg>这一层 Gradle 单靠 Groovy 和不可思议的 &lt;c3&gt;AntBuilder&lt;/c3&gt;，对其提供了集成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For this type of task, the action closure determines the behaviour of the task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T143014Z" creationid="95" creationdate="20160814T143014Z">
        <seg>对于这种类型的任务，action闭包决定了这个任务的行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Force versions can also be used to deal with rogue metadata of transitive dependencies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T054442Z" creationid="95" creationdate="20151115T054442Z">
        <seg>强制版本也可以用于处理传递依赖所带来的流氓元数据。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Forcing a module version tells Gradle to always use a specific version for given dependency (transitive or not), overriding any version specified in a published module descriptor.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T054304Z" creationid="95" creationdate="20151115T054304Z">
        <seg>强制一个模块的版本，是告诉 Gradle 对于指定的依赖（不管是否传递依赖），始终使用一个特定的版本，而覆盖在发布的模块描述符中所指定的任何版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>From a complex enterprise application written in Java depending on hundreds of open source libraries to the simplest Clojure application depending on a handful of libraries, approaches to dependency management vary widely and can depend on the target technology, the method of application deployment, and the nature of the project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150716T091729Z" creationid="haohang" creationdate="20150716T084304Z">
        <seg>从一个由 Java 编写的依赖了数以百计开源库的复杂企业应用，再到依赖少量库的最简单的 Clojure 应用，依赖管理的办法大不相同，并且可以依赖于目标的技术、应用程序部署的方法和项目的性质。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Fully qualified class name or fully qualified method name is supported, e.g. "org.gradle.SomeTest", "org.gradle.SomeTest.someMethod"</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T022956Z" creationid="Administrator" creationdate="20150428T022956Z">
        <seg>支持完整的限定类名称或完整的限定的方法名称，例如“org.gradle.SomeTest”、“org.gradle.SomeTest.someMethod”</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Further Information</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T065601Z" creationid="haohang" creationdate="20150628T065601Z">
        <seg>补充信息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Further task dependencies can be added as needed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T062305Z" creationid="msdx" creationdate="20150513T062305Z">
        <seg>根据需要，可以添加更多的任务依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Furthermore, all properties that have been configured up to this point, including all properties preconfigured by Gradle, are available via the &lt;c2&gt;properties&lt;/c2&gt; accessor.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150525T232652Z" creationid="haohang" creationdate="20150525T232652Z">
        <seg>此外，所有已配置到这一点的属性，包括通过 Gradle 预配置的所有属性，还可通过&lt;c2&gt;properties&lt;/c2&gt;访问器进行使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Furthermore, it is possible to specify settings that apply to all binaries produces for a particular &lt;c0&gt;executable&lt;/c0&gt; or &lt;c1&gt;library&lt;/c1&gt; component:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160324T152504Z" creationid="95" creationdate="20160324T152310Z">
        <seg>此外，还可以指定设置应用于某个特定的&lt;c0&gt;executable&lt;/c0&gt; 或 &lt;c1&gt;library&lt;/c1&gt; 组件 产生的所有二进制文件：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Future versions of Gradle will automatically include the appropriate debug flags for any 'debug' build type, and may be aware of various levels of optimisation as well.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160401T091001Z" creationid="haohang" creationdate="20160401T091001Z">
        <seg>未来版本的 Gradle 将自动包括任何“debug”构建类型的适当调试标志，并且还可能知道各个优化级别。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>GCC</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160128T153344Z" creationid="95" creationdate="20160128T153344Z">
        <seg>GCC</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>GUI Setup</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T160751Z" creationid="msdx" creationdate="20141105T160751Z">
        <seg>GUI Setup</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>GUI Task Tree</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T150124Z" creationid="msdx" creationdate="20141105T150124Z">
        <seg>GUI Task Tree</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gcc</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T091209Z" creationid="haohang" creationdate="20160408T091209Z">
        <seg>Gcc</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generally, one can exclude transitive dependencies that are either not required by runtime or that are guaranteed to be available on the target environment/platform.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T101325Z" creationid="haohang" creationdate="20150801T101325Z">
        <seg>一般来说，可以被排除的传递依赖，在运行时并不需要，或者是保证在目标环境或平台上可用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generally, this JAR might include some custom plugins, or bundle several related task classes into a single library.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T145147Z" creationid="95" creationdate="20160814T145147Z">
        <seg>一般来说，这个JAR可能包含一些自定义的插件，或者是捆绑几个相关的任务类到一个单独的库当中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>GenerateBuildDashboard</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150713T100334Z" creationid="haohang" creationdate="20150713T100334Z">
        <seg>GenerateBuildDashboard</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>GenerateEclipseClasspath</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T004452Z" creationid="haohang" creationdate="20150603T004452Z">
        <seg>GenerateEclipseClasspath</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>GenerateEclipseJdt</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T004503Z" creationid="haohang" creationdate="20150603T004503Z">
        <seg>GenerateEclipseJdt</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>GenerateEclipseProject</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T004433Z" creationid="haohang" creationdate="20150603T004433Z">
        <seg>GenerateEclipseProject</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>GenerateEclipseWtpComponent</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T004511Z" creationid="haohang" creationdate="20150603T004511Z">
        <seg>GenerateEclipseWtpComponent</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>GenerateEclipseWtpFacet</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T004540Z" creationid="haohang" creationdate="20150603T004540Z">
        <seg>GenerateEclipseWtpFacet</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>GenerateIdeaModule</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T072555Z" creationid="haohang" creationdate="20150625T072555Z">
        <seg>GenerateIdeaModule</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>GenerateIdeaProject</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T072519Z" creationid="haohang" creationdate="20150625T072519Z">
        <seg>GenerateIdeaProject</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>GenerateIdeaWorkspace</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T072604Z" creationid="haohang" creationdate="20150625T072604Z">
        <seg>GenerateIdeaWorkspace</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generated POMs can be found in &lt;c0&gt;&lt;buildDir&gt;/poms&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T142503Z" creationid="95" creationdate="20160106T142503Z">
        <seg>生成的 POMs 可以在&lt;c0&gt;&lt;buildDir&gt;/poms&lt;/c0&gt;看到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generates &lt;c1&gt;.classpath&lt;/c1&gt; and JDT settings file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T003800Z" creationid="haohang" creationdate="20150603T003800Z">
        <seg>生成&lt;c1&gt;.classpath&lt;/c1&gt;和 JDT 设置文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generates API documentation for the production Groovy source files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T071516Z" creationid="msdx" creationdate="20150429T071516Z">
        <seg>为production 里的 Groovy 源文件生成 API 文档。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generates API documentation for the production Java source, using Javadoc</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T004742Z" creationid="Administrator" creationdate="20150426T004742Z">
        <seg>使用 Javadoc 生成生产的 Java 源代码的API文档</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generates API documentation for the production Scala source files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T145519Z" creationid="msdx" creationdate="20150429T145519Z">
        <seg>为production 里的 Scala 源文件生成 API 文档。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generates Gradle wrapper files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T071610Z" creationid="haohang" creationdate="20150707T071610Z">
        <seg>生成 Gradle wrapper 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generates WTP settings files only if &lt;c1&gt;eclipse-wtp&lt;/c1&gt; plugin was applied.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T003910Z" creationid="haohang" creationdate="20150603T003903Z">
        <seg>仅当&lt;c1&gt;eclipse-wtp&lt;/c1&gt;插件被应用时生成 WTP 设置文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generates a Gradle project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T071601Z" creationid="haohang" creationdate="20150707T071601Z">
        <seg>生成一个 Gradle 项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generates all Eclipse configuration files</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T004358Z" creationid="haohang" creationdate="20150603T004358Z">
        <seg>会生成所有的 Eclipse 配置文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generates all IDEA configuration files</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T072335Z" creationid="haohang" creationdate="20150625T072335Z">
        <seg>生成所有的 IDEA 配置文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generates all project reports.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T061540Z" creationid="haohang" creationdate="20150628T061540Z">
        <seg>生成所有项目报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generates an HTML dependency and dependency insight report for the project or a set of projects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T061513Z" creationid="haohang" creationdate="20150628T061513Z">
        <seg>对项目或项目集生成 HTML 依赖和依赖透视报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generates an IDEA module file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T071447Z" creationid="haohang" creationdate="20150625T071447Z">
        <seg>生成一个IDEA 模块文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generates build dashboard report.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150713T100408Z" creationid="Administrator" creationdate="20150425T040041Z">
        <seg>生成 build dashboard 报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generates code coverage report for the test task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T135934Z" creationid="msdx" creationdate="20150506T135934Z">
        <seg>为测试任务生成代码覆盖率报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generates dependencies (both external and inter-module)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T093644Z" creationid="haohang" creationdate="20150707T093644Z">
        <seg>生成依赖 (包括外部的和模块间的)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generates download repositories (inc.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T093724Z" creationid="haohang" creationdate="20150707T093724Z">
        <seg>生成下载仓库（包括</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generates files that are used by &lt;a0&gt;Eclipse IDE&lt;/a0&gt;, thus making it possible to import the project into Eclipse.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T035259Z" creationid="Administrator" creationdate="20150425T034858Z">
        <seg>生成&lt;a0&gt;Eclipse IDE&lt;/a0&gt;所用到的文件，从而使项目能够导入到 Eclipse。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generates files that are used by &lt;a0&gt;Intellij IDEA IDE&lt;/a0&gt;, thus making it possible to import the project into IDEA.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T035254Z" creationid="Administrator" creationdate="20150425T035254Z">
        <seg>生成&lt;a0&gt;Intellij IDEA IDE&lt;/a0&gt;所用到的文件，从而使项目能够导入到 IDEA。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generates general metadata - id, description and version</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T093443Z" creationid="haohang" creationdate="20150707T093443Z">
        <seg>生成通用元数据 - id，description 和 version</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generates global exclusions from Maven enforcer plugin settings</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T094034Z" creationid="haohang" creationdate="20150707T094034Z">
        <seg>从 Maven enforcer 插件设置生成全局的 exclusions</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generates minimal &lt;c0&gt;.project&lt;/c0&gt; file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T003747Z" creationid="haohang" creationdate="20150603T003747Z">
        <seg>生成最小的&lt;c0&gt;.project&lt;/c0&gt;文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generates reports containing useful information about your Gradle build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T035504Z" creationid="Administrator" creationdate="20150425T035504Z">
        <seg>生成关于Gradle构建中有用的信息的报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generates the &lt;c0&gt;.classpath&lt;/c0&gt; file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T004456Z" creationid="haohang" creationdate="20150603T004456Z">
        <seg>生成&lt;c0&gt;.classpath&lt;/c0&gt;文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generates the &lt;c0&gt;.iml&lt;/c0&gt; file</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T072601Z" creationid="haohang" creationdate="20150625T072601Z">
        <seg>生成 &lt;c0&gt;.iml&lt;/c0&gt; 文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generates the &lt;c0&gt;.ipr&lt;/c0&gt; file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T072527Z" creationid="haohang" creationdate="20150625T072527Z">
        <seg>生成 &lt;c0&gt;.ipr&lt;/c0&gt; 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generates the &lt;c0&gt;.iws&lt;/c0&gt; file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T072610Z" creationid="haohang" creationdate="20150625T072610Z">
        <seg>生成 &lt;c0&gt;.iws&lt;/c0&gt; 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generates the &lt;c0&gt;.project&lt;/c0&gt; file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T004446Z" creationid="haohang" creationdate="20150603T004446Z">
        <seg>生成的&lt;c0&gt;.project&lt;/c0&gt;文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generates the &lt;c0&gt;.settings/org.eclipse.jdt.core.prefs&lt;/c0&gt; file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T004507Z" creationid="haohang" creationdate="20150603T004507Z">
        <seg>生成&lt;c0&gt;.settings/org.eclipse.jdt.core.prefs&lt;/c0&gt;文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generates the &lt;c0&gt;.settings/org.eclipse.wst.common.component&lt;/c0&gt; file only if &lt;c1&gt;eclipse-wtp&lt;/c1&gt; plugin was applied.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T004801Z" creationid="haohang" creationdate="20150603T004537Z">
        <seg>只有当&lt;c1&gt;eclipse-wtp&lt;/c1&gt;插件应用的时候，生成 &lt;c0&gt;.settings/org.eclipse.wst.common.component&lt;/c0&gt; 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generates the &lt;c0&gt;.settings/org.eclipse.wst.common.project.facet.core.xml&lt;/c0&gt; file only if &lt;c1&gt;eclipse-wtp&lt;/c1&gt; plugin was applied.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T004815Z" creationid="haohang" creationdate="20150603T004610Z">
        <seg>只有当&lt;c1&gt;eclipse-wtp&lt;/c1&gt;插件应用的时候，生成 &lt;c0&gt;.settings/org.eclipse.wst.common.project.facet.core.xml&lt;/c0&gt; 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generates the project dependency report.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T061234Z" creationid="haohang" creationdate="20150628T061234Z">
        <seg>生成项目依赖项报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generates the project property report.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T061526Z" creationid="haohang" creationdate="20150628T061526Z">
        <seg>生成项目属性报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generates the project task report.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T061531Z" creationid="haohang" creationdate="20150628T061531Z">
        <seg>生成项目任务报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generates the source files for all ANTLR grammars for the given source set.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T095057Z" creationid="haohang" creationdate="20150625T095057Z">
        <seg>为给定的 source set 的所有 ANTLR 语法生成源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generates the source files for all production ANTLR grammars.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T095015Z" creationid="haohang" creationdate="20150625T095015Z">
        <seg>为所有生产 ANTLR 语法生成源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generates the source files for all test ANTLR grammars.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T095026Z" creationid="haohang" creationdate="20150625T095026Z">
        <seg>为所有测试 ANTLR 语法生成源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generating Javadoc for a source set:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T133436Z" creationid="Administrator" creationdate="20150427T133436Z">
        <seg>为一个源集生成 Javadoc：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Get feedback faster by running quick verification tasks before long verification tasks: eg.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T144751Z" creationid="msdx" creationdate="20141110T144707Z">
        <seg>通过在长久验证前运行快速验证以得到更快的反馈：如，</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Getting Started</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162024Z" creationid="msdx" creationdate="20141109T162024Z">
        <seg>入门教程</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Getting help</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162245Z" creationid="msdx" creationdate="20141109T162245Z">
        <seg>获取帮助</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Getting help writing build scripts</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T040712Z" creationid="msdx" creationdate="20141108T040700Z">
        <seg>获取有关编写构建脚本帮助</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Given a parameterized test method named &lt;c0&gt;aParameterizedTestMethod&lt;/c0&gt; that takes two parameters, it will be reported with the name: &lt;c1&gt;aParameterizedTestMethod(toStringValueOfParam1, toStringValueOfParam2)&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T144147Z" creationid="msdx" creationdate="20150428T144147Z">
        <seg>给定一个带有两个参数，名为&lt;c0&gt;aParameterizedTestMethod&lt;/c0&gt;参数化测试方法，它将使用名称这个名称进行报告 ：&lt;c1&gt;aParameterizedTestMethod(toStringValueOfParam1, toStringValueOfParam2)&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Given a required dependency, Gradle first attempts to resolve the &lt;s0&gt;&lt;e1&gt;module&lt;/e1&gt;&lt;/s0&gt; for that dependency.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151007T023203Z" creationid="95" creationdate="20151007T023203Z">
        <seg>给出所需的依赖项，Gradle 首先尝试为该依赖解析&lt;s0&gt;&lt;e1&gt;模块&lt;/e1&gt;&lt;/s0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Given that the project name is "&lt;c0&gt;myproject&lt;/c0&gt;" and version "&lt;c1&gt;1.2&lt;/c1&gt;", running "&lt;s2&gt;&lt;c3&gt;gradle customDistZip&lt;/c3&gt;&lt;/s2&gt;" will produce a ZIP file named "&lt;c4&gt;myproject-custom-1.2.zip&lt;/c4&gt;".</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150701T031441Z" creationid="haohang" creationdate="20150701T031417Z">
        <seg>给定项目的名称为“&lt;c0&gt;myproject&lt;/c0&gt;”，版本为“&lt;c1&gt;1.2&lt;/c1&gt;”，运行“&lt;s2&gt;&lt;c3&gt;gradle customDistZip&lt;/c3&gt;&lt;/s2&gt;”将会产生一个名字为”&lt;c4&gt;myproject-custom-1.2.zip&lt;/c4&gt;“的 ZIP 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Given the personal and private nature of these values, a good practice is to store them in the user &lt;c3&gt;gradle.properties&lt;/c3&gt; file (described in &lt;a4&gt;Section 14.2, “Gradle properties and system properties”&lt;/a4&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160108T152512Z" creationid="95" creationdate="20160108T152512Z">
        <seg>鉴于这些值的个人和私人性质，一个好的做法是将它们保存在用户的&lt;c3&gt;gradle.properties&lt;/c3&gt;文件（&lt;a4&gt;第14.2 节，“Gradle 属性和系统属性”&lt;/a4&gt;中所述）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle 1.4 introduces an &lt;a2&gt;incubating&lt;/a2&gt; opt-in feature called &lt;e3&gt;configuration on demand&lt;/e3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T024119Z" creationid="haohang" creationdate="20160519T024119Z">
        <seg>Gradle 1.4 引入了一个&lt;a2&gt;孵化中&lt;/a2&gt;的选择性加入的功能，叫&lt;e3&gt;configuration on demand&lt;/e3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle &lt;s3&gt;&lt;e4&gt;always&lt;/e4&gt;&lt;/s3&gt; evaluates &lt;s5&gt;&lt;e6&gt;every&lt;/e6&gt;&lt;/s5&gt; project of the multi-project build and creates all existing task objects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160715T075731Z" creationid="95" creationdate="20160530T152507Z">
        <seg>Gradle&lt;s3&gt;&lt;e4&gt;总是&lt;/e4&gt;&lt;/s3&gt;评估&lt;s5&gt;多项目构建的&lt;e6&gt;每一个&lt;/e6&gt;&lt;/s5&gt;项目，以及创建所有存在的任务对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle API dependency</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T080634Z" creationid="haohang" creationdate="20150722T080634Z">
        <seg>Gradle API 依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle Plugins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131414Z" creationid="msdx" creationdate="20150509T131414Z">
        <seg>Gradle 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle User Guide</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T031304Z" creationid="msdx" creationdate="20141030T071145Z">
        <seg>Gradle 用户指南</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle adds some concepts and APIs to help you achieve this.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T124535Z" creationid="msdx" creationdate="20141111T124448Z">
        <seg>Gradle 添加了一些概念和 API 来帮助您实现这一目标。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle allows any project to access any other project during both the configuration and execution phases.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T092221Z" creationid="haohang" creationdate="20160726T092221Z">
        <seg>Gradle 允许任何项目在配置和执行阶段访问其他项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle allows you to access any project of the multi-project build from any build script.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160526T154711Z" creationid="95" creationdate="20160522T125915Z">
        <seg>Gradle 允许你从任何构建脚本访问多项目构建的任意一个project。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle already has much of the information needed for Sonar Runner to successfully analyze a project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T060125Z" creationid="msdx" creationdate="20150513T060012Z">
        <seg>Gradle 已经有很多 Sonar Runner 成功分析一个项目所需的信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle also provides a &lt;c0&gt;logger&lt;/c0&gt; property to a build script, which is an instance of &lt;a1&gt;&lt;c2&gt;Logger&lt;/c2&gt;&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T125741Z" creationid="msdx" creationdate="20141116T123943Z">
        <seg>Gradle 还提供了一个 &lt;c0&gt;logger&lt;/c0&gt;属性给构建脚本，它是一个 &lt;a1&gt;&lt;c2&gt;Logger &lt;/c2&gt;&lt;/a1&gt;实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle also provides integration with the Java Util Logging, Jakarta Commons Logging and Log4j logging toolkits.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T151042Z" creationid="msdx" creationdate="20141116T151042Z">
        <seg>Gradle 还提供了对 Java Util Logging，Jakarta Commons Logging 和 Log4j 的日志工具的集成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle also scan up the inheritance tree into jar files on the test classpath.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T041421Z" creationid="Administrator" creationdate="20150428T041421Z">
        <seg>Gradle 还将扫描测试类路径中的 jar 文件里的继承树。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle and other build tools all have the ability to solve this dependency tree and resolve conflicts, but what differentiates Gradle is the control it gives you over transitive dependencies and conflict resolution.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150720T064957Z" creationid="haohang" creationdate="20150720T064957Z">
        <seg>Gradle 和其他的构建工具都能够处理这种关系树和解决冲突问题，但不同的是，Gradle 让你可以控制传递依赖和冲突的解决。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle at its core intentionally provides little useful functionality for real world automation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141121T155802Z" creationid="msdx" creationdate="20141121T142850Z">
        <seg>Gradle 在它的核心中有意地提供了一些小但有用的功能，用于在真实世界中的自动化。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle builds the complete dependency graph &lt;s1&gt;&lt;e2&gt;before&lt;/e2&gt;&lt;/s1&gt; any task is executed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160518T032256Z" creationid="haohang" creationdate="20160518T032220Z">
        <seg>Gradle 则在所有任务执行&lt;s1&gt;&lt;e2&gt;之前&lt;/e2&gt;&lt;/s1&gt;生成这这个完整的依赖关系图。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle contains a highly sophisticated dependency caching mechanism, which seeks to minimise the number of remote requests made in dependency resolution, while striving to guarantee that the results of dependency resolution are correct and reproducible.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T042117Z" creationid="95" creationdate="20151129T042117Z">
        <seg>Gradle 包含了一个高度复杂的依赖缓存机制，该机制力求减少依赖解析中的远程请求，同时努力保证依赖解析结果的正确及可再生性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle creates Project objects for every project taking part in the build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T080351Z" creationid="haohang" creationdate="20160519T080351Z">
        <seg>在构建中，Gradle 为每个参加构建的项目创建 Project 对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle default</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T131630Z" creationid="msdx" creationdate="20150506T131621Z">
        <seg>Gradle 默认值</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle defines 6 log levels, as shown in &lt;a0&gt;Table 18.1, “Log levels”&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T070449Z" creationid="msdx" creationdate="20141116T070449Z">
        <seg>Gradle 定义了6个日志级别，如&lt;a0&gt;表 18.1，“日志级别”&lt;/a0&gt;所示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle defines each OS/architecture combination as a &lt;a0&gt;&lt;c1&gt;Platform&lt;/c1&gt;&lt;/a0&gt;, and a project may define any number of platforms.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160401T092244Z" creationid="haohang" creationdate="20160401T092244Z">
        <seg>Gradle 把每一个系统架构组合定义为一个 &lt;a0&gt;&lt;c1&gt;Platform&lt;/c1&gt;&lt;/a0&gt;，一个project可以定义多个platforms。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle determines the subset of the tasks, created and configured during the configuration phase, to be executed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T024408Z" creationid="haohang" creationdate="20160519T024408Z">
        <seg>Gradle 确定在配置阶段中，创建和配置的要被执行的任务的子集。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle distinguishes between external dependencies and dependencies on projects which are part of the same multi-project build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T092449Z" creationid="haohang" creationdate="20150801T092449Z">
        <seg>对于多项目构建，Gradle 能区分外部依赖与作为多项目构建的一部分的某个项目上的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle does not care.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160715T090912Z" creationid="haohang" creationdate="20160715T090912Z">
        <seg>Gradle 不关心这个问题。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle exclude rules are converted to Maven excludes if possible.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T145402Z" creationid="95" creationdate="20160106T145402Z">
        <seg>如果有可能，Gradle排除的规则会被转换为Maven excludes。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle guarantees that these tasks are executed in the order of their dependencies, and that each task is executed only once.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160518T031836Z" creationid="haohang" creationdate="20160518T031836Z">
        <seg>Gradle 保证这些任务按照它们的依赖关系的顺序进行执行，并且每个任务都只执行一次。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle has no idea what the closure does and cannot automatically figure out whether the task is up-to-date or not.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T060845Z" creationid="msdx" creationdate="20141111T060845Z">
        <seg>Gradle 不知道这个闭包做了什么，也无法自动判断这个任务是否为最新状态。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle has replaced this direct dependency on Ivy with a native Gradle dependency resolution engine which supports a range of approaches to dependency resolution including both POM and Ivy descriptor files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150716T083317Z" creationid="haohang" creationdate="20150716T083129Z">
        <seg>Gradle 已经取代了 Ivy 上的直接依赖，而采用了原生的 Gradle 依赖解决引擎，它支持许多的依赖解决方案的方法，包括 POM 文件和 Ivy 描述文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle has the ability to generate Visual Studio project and solution files for the native components defined in your build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T094959Z" creationid="haohang" creationdate="20160408T094959Z">
        <seg>Gradle 可以为在你的构建中定义的本地组件生成生成 Visual Studio 项目及解决方案文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle implements this via &lt;e2&gt;configuration injection&lt;/e2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160526T155020Z" creationid="95" creationdate="20160526T155020Z">
        <seg>Gradle 通过&lt;e2&gt;configuration injection&lt;/e2&gt;来实现它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle includes the parameter values in its reporting of the test method execution.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T144016Z" creationid="msdx" creationdate="20150428T144016Z">
        <seg>Gradle 会在这个方法的执行报告中包含进它的参数值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle keeps a record of various aspects of dependency resolution in binary format in the metadata cache.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T044809Z" creationid="95" creationdate="20151129T043908Z">
        <seg>Gradle 以二进制格式在元数据缓存中保留了依赖解析的各方面的记录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle looks down the hierarchy, starting with the &lt;s0&gt;&lt;e1&gt;current dir&lt;/e1&gt;&lt;/s0&gt;, for tasks with the name &lt;c2&gt;hello&lt;/c2&gt; an executes them.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160530T152356Z" creationid="95" creationdate="20160530T152356Z">
        <seg>Gradle 从&lt;s0&gt;&lt;e1&gt;当前目录&lt;/e1&gt;&lt;/s0&gt;开始，按层次结构往下查找名称为&lt;c2&gt;hello&lt;/c2&gt;任务，开始执行它们。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle offers a solution for this.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T074904Z" creationid="haohang" creationdate="20160718T074904Z">
        <seg>Gradle 为此提供了一个解决方案。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle offers a variety of ways to add properties to your build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T073821Z" creationid="msdx" creationdate="20141109T073821Z">
        <seg>Gradle 提供了许多方式将属性添加到您的构建中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle offers multiple ways to skip the execution of a task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T020259Z" creationid="msdx" creationdate="20141111T020259Z">
        <seg>Gradle 提供多种方式来跳过任务的执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle offers the ability to execute the same build using different tool chains.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160128T153029Z" creationid="95" creationdate="20160128T153029Z">
        <seg>Gradle 提供了使用不同的工具链执行相同的构建的能力。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle offers the following conflict resolution strategies:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150721T061342Z" creationid="haohang" creationdate="20150721T061307Z">
        <seg>Gradle 提供了以下的冲突解决策略：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle offers this to you:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T084454Z" creationid="haohang" creationdate="20160726T084454Z">
        <seg>Gradle 也向你提供了这种更细粒度的控制：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle offers you different ways to express first-level and transitive dependencies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150721T053943Z" creationid="haohang" creationdate="20150721T053943Z">
        <seg>Gradle 向你提供了不同的方式来表达第一级的和传递的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle persists both snapshots for next time the task is executed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T063511Z" creationid="msdx" creationdate="20141111T063359Z">
        <seg>Gradle 会保存这两个快照，直到任务的下一次执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle plugins typically need to be &lt;e0&gt;applied&lt;/e0&gt; to a project before they can be used (see &lt;a1&gt;Section 21.1, “Applying plugins”&lt;/a1&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T071049Z" creationid="haohang" creationdate="20150707T071040Z">
        <seg>Gradle 插件通常需要被&lt;e0&gt;应用&lt;/e0&gt;于 project 中才可以使用（见&lt;a1&gt;第 21.1节，"应用插件"&lt;/a1&gt;）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle properties and system properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T164931Z" creationid="msdx" creationdate="20141109T164931Z">
        <seg>Gradle 属性和系统属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle provides a &lt;e0&gt;domain specific language&lt;/e0&gt;, or DSL, for describing builds.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T042723Z" creationid="msdx" creationdate="20141108T035745Z">
        <seg>Gradle 提供一种&lt;e0&gt;领域特定语言&lt;/e0&gt;或者说是 DSL，来描述构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle provides an &lt;s2&gt;&lt;e3&gt;artifact only&lt;/e3&gt;&lt;/s2&gt; notation for those use cases - simply prefix the extension that you want to be downloaded with &lt;c4&gt;'@'&lt;/c4&gt; sign:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150731T034535Z" creationid="haohang" creationdate="20150731T033856Z">
        <seg>Gradle 提供了一个 &lt;s2&gt;&lt;e3&gt;artifact only&lt;/e3&gt;&lt;/s2&gt; notation 用于这些案例情况——只是对你想要下载的扩展前加个 &lt;c4&gt;'@'&lt;/c4&gt; 标志：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle provides different notations for module dependencies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150724T034608Z" creationid="haohang" creationdate="20150722T102912Z">
        <seg>Gradle 为模块依赖提供了不同的标记法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle provides excellent integration with Ant.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141114T071430Z" creationid="msdx" creationdate="20141113T161655Z">
        <seg>Gradle 提供了对 Ant 的优秀集成</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle provides mechanisms and sophisticated support and it's a key ingredient in powerful-yet-concise build scripts.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141123T153443Z" creationid="msdx" creationdate="20141123T151445Z">
        <seg>Gradle 对此提供了机制和完善的支持，而它是强大-然而-简洁的构建脚本中的一个关键因素。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle provides parallel test execution by running multiple test processes concurrently.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T140938Z" creationid="Administrator" creationdate="20150427T140938Z">
        <seg>Gradle 通过同时运行多个测试进程来提供并行测试的执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle provides several options that make it easy to configure the Java process that will be used to execute your build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141119T031642Z" creationid="msdx" creationdate="20141119T031642Z">
        <seg>Gradle 提供了几个选项，可以很容易地配置将用于执行您的构建的 Java 进程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle provides the core plugins as part of its distribution so simply applying the plugin as above is all you need to do.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141123T134630Z" creationid="msdx" creationdate="20141123T134630Z">
        <seg>Gradle 提供了核心插件作为其发行包的一部分，所以简单地应用如上插件是你所需要做的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle provides two plugins for web application development: the War plugin and the Jetty plugin.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T084650Z" creationid="msdx" creationdate="20141030T084650Z">
        <seg>Gradle 为web应用程序开发提供了两个插件：War插件和Jetty插件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle pushes declarative builds to the next level by providing declarative language elements that you can assemble as you like.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141101T035135Z" creationid="msdx" creationdate="20141101T035123Z">
        <seg>Gradle 通过提供可以如你所愿去组合的声明性的语言元素，将声明性构建推向下级。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle redirects anything written to standard output to it's logging system at the &lt;c0&gt;QUIET&lt;/c0&gt; log level.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T122505Z" creationid="msdx" creationdate="20141116T122505Z">
        <seg>Gradle 会把写到标准输出的所有内容重定向到它的日志系统的 &lt;c0&gt;QUIET&lt;/c0&gt; 级别中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle redirects their logging output into the Gradle logging system.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T130809Z" creationid="msdx" creationdate="20141116T130809Z">
        <seg>Gradle 将其日志输出重定向到 Gradle 的日志系统。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle repository management, based on Apache Ivy, gives you a lot of freedom regarding repository layout and retrieval policies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T091542Z" creationid="haohang" creationdate="20150807T091542Z">
        <seg>Gradle 仓库管理，基于 Apache Ivy，为你提供了有关仓库布局和获取策略的许多自由。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle supports &lt;e2&gt;enhanced tasks&lt;/e2&gt;, that is, tasks which have their own properties and methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T160613Z" creationid="msdx" creationdate="20141109T160613Z">
        <seg>Gradle 支持&lt;e2&gt;增强的任务&lt;/e2&gt;，也就是，有自己的属性和方法的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle supports arbitrary physical layouts for a multiproject build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T075712Z" creationid="haohang" creationdate="20160519T075535Z">
        <seg>Gradle 支持任意的物理布局的多项目构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle supports single and multi-project builds.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160518T055837Z" creationid="haohang" creationdate="20160518T032557Z">
        <seg>Gradle 支持单项目及多项目的构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle supports two types of task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160727T055642Z" creationid="haohang" creationdate="20160727T055642Z">
        <seg>Gradle 支持两种类型的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle takes your dependency declarations and repository definitions and attempts to download all of your dependencies by a process called &lt;s0&gt;&lt;e1&gt;dependency resolution&lt;/e1&gt;&lt;/s0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151007T024349Z" creationid="95" creationdate="20151007T022620Z">
        <seg>Gradle 将获取你的依赖声明和仓库定义，并通过一个称为&lt;s0&gt;&lt;e1&gt;依赖项解析&lt;/e1&gt;&lt;/s0&gt;的过程尝试下载所有依赖项。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle then executes each of the selected tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T024509Z" creationid="haohang" creationdate="20160519T024509Z">
        <seg>然后 Gradle 执行每个选定的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle then executes the task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T063156Z" creationid="msdx" creationdate="20141111T063156Z">
        <seg>然后 Gradle 执行该任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle tries best to filter the tests given limitations of particular test framework API.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T023534Z" creationid="Administrator" creationdate="20150428T023534Z">
        <seg>Gradle 尽最大努力对有着特定的测试框架 API 的局限的测试进行过滤。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle understands this language, and allows you to import your Ant &lt;c1&gt;build.xml&lt;/c1&gt; directly into a Gradle project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141114T140955Z" creationid="msdx" creationdate="20141114T135607Z">
        <seg>Gradle 理解这种语言，并允许您直接导入你的Ant &lt;c1&gt;build.xml&lt;/c1&gt; 到 Gradle 项目中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle uploads the jars of your project to the company repository together with the XML descriptor file of the dependencies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T091859Z" creationid="haohang" creationdate="20150801T091859Z">
        <seg>Gradle 会将你的项目的 jar 包以及这仆依赖的 XML 描述文件上传到公司仓库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle uses the same logic as Maven to identify the location of your local Maven cache.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150909T052559Z" creationid="haohang" creationdate="20150909T052559Z">
        <seg>Gradle 使用与 Maven 相同的逻辑来标识你本地的 Maven 缓存的位置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle uses this for &lt;e1&gt;configuration closures&lt;/e1&gt;, where the &lt;c2&gt;delegate&lt;/c2&gt; object is set to the object to be configured.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T065107Z" creationid="msdx" creationdate="20141108T063831Z">
        <seg>Gradle 在&lt;e1&gt;配置闭包&lt;/e1&gt;中使用到它，把&lt;c2&gt;委托&lt;/c2&gt;对象设置为被配置的对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle will call the method when the task executes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T145602Z" creationid="95" creationdate="20160814T145602Z">
        <seg>当任务执行的时候，Gradle 就会调用这个方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle will create a &lt;a0&gt;&lt;c1&gt;CSourceSet&lt;/c1&gt;&lt;/a0&gt; named 'cunit' for each &lt;a2&gt;&lt;c3&gt;CUnitTestSuite&lt;/c3&gt;&lt;/a2&gt; component in the project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T144438Z" creationid="95" creationdate="20160504T144438Z">
        <seg>Gradle将为项目中的每一个 &lt;a2&gt;&lt;c3&gt;CUnitTestSuite&lt;/c3&gt;&lt;/a2&gt; 组件创建一个名字为“cunit”的&lt;a0&gt;&lt;c1&gt;CSourceSet&lt;/c1&gt;&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle will expect and call a function with the signature &lt;c0&gt;void gradle_cunit_register()&lt;/c0&gt; that you can use to configure the actual CUnit suites and tests to execute.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T150219Z" creationid="95" creationdate="20160504T150219Z">
        <seg>Gradle 将认定和调用一个&lt;c0&gt;void gradle_cunit_register()&lt;/c0&gt; 函数，这个函数你可以用于配置实际的CUnit套件以及要执行的测试。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle will figure out the properties of the artifact based on the name of the file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151226T091141Z" creationid="95" creationdate="20151226T091141Z">
        <seg>Gradle将基于文件的名字找出构件的属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle will look at the first URL for the POM and the JAR.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150909T053159Z" creationid="haohang" creationdate="20150909T053159Z">
        <seg>Gradle 将会在第一个URL中查找 POM 和 JAR 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle will look for the source files to include in the WAR file in &lt;c2&gt;src/main/webapp&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T085806Z" creationid="msdx" creationdate="20141030T085806Z">
        <seg>Gradle会在 &lt;c2&gt;src/main/webapp&lt;/c2&gt;中查找源文件，并将它们包含进WAR文件中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle will take care of building the application classes, along with their runtime dependencies, and starting the application with the correct classpath.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150702T104207Z" creationid="haohang" creationdate="20150702T104207Z">
        <seg>Gradle 将会处理好构建的应用程序的类，以及它们的运行时依赖，还有使用正确的类路径启动应用程序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle will take care of compiling and testing the task class and making it available on the classpath of the build script.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T144331Z" creationid="95" creationdate="20160814T144331Z">
        <seg>Gradle将会编译和测试这个任务类，并且使它在构建脚本的类路径中可用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle's Ivy repository implementations support the equivalent to Ivy's dynamic resolve mode.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T091015Z" creationid="95" creationdate="20151115T055648Z">
        <seg>Gradle 的Ivy 仓库实现支持相当于 Ivy 的动态解析的模式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle's multi-project features are driven by real life use cases.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160722T090430Z" creationid="haohang" creationdate="20160722T090430Z">
        <seg>Gradle 的多项目特性是由现实生活中的用例所驱动的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle, thanks to Ivy under its hood, is extremely flexible regarding repositories:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T134157Z" creationid="95" creationdate="20151006T134157Z">
        <seg>Gradle由于 Ivy 在它的 hood 之下，对仓库非常灵活。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Groovy</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T003803Z" creationid="haohang" creationdate="20150603T003803Z">
        <seg>Groovy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Groovy Quickstart</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163656Z" creationid="msdx" creationdate="20141109T163656Z">
        <seg>Groovy 快速入门</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Groovy adds lots of useful methods to JVM classes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T061025Z" creationid="msdx" creationdate="20141108T061025Z">
        <seg>Groovy 对 JVM 的类增加了很多有用的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Groovy automatically converts a property reference into a call to the appropriate getter or setter method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T061712Z" creationid="msdx" creationdate="20141108T061712Z">
        <seg>Groovy 会自动地把一个属性的引用转换为对适当的 getter 或 setter 方法的调用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Groovy full stacktraces are extremely verbose (Due to the underlying dynamic invocation mechanisms.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T113101Z" creationid="msdx" creationdate="20141116T105723Z">
        <seg>Groovy 的全栈跟踪非常冗长 （由于其潜在的动态调用机制，</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Groovy itself has dependencies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T091532Z" creationid="haohang" creationdate="20150801T091532Z">
        <seg>Groovy 本身具有依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Groovy plugin - tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T071744Z" creationid="msdx" creationdate="20150429T071744Z">
        <seg>Groovy 插件 - tasks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Groovy provides plenty of features for creating DSLs, and the Gradle build language takes advantage of these.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T060812Z" creationid="msdx" creationdate="20141108T055555Z">
        <seg>Groovy 提供了用于创建 DSL 的大量特点，并且 Gradle 构建语言利用了这些特点。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Groovy provides some shortcuts for defining &lt;c0&gt;List&lt;/c0&gt; and &lt;c1&gt;Map&lt;/c1&gt; instances.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T062828Z" creationid="msdx" creationdate="20141108T062816Z">
        <seg>Groovy 提供了一些定义&lt;c0&gt;List&lt;/c0&gt;和&lt;c1&gt;Map&lt;/c1&gt;实例的快捷写法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Groovy sources for the given source set.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T075156Z" creationid="msdx" creationdate="20150429T075156Z">
        <seg>给定的source set 的 Groovy 源代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Groovy web applications</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T085904Z" creationid="msdx" creationdate="20141030T085904Z">
        <seg>Groovy web程序</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>GroovyCompile</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T071357Z" creationid="msdx" creationdate="20150429T071357Z">
        <seg>GroovyCompile</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Groovydoc</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T071456Z" creationid="msdx" creationdate="20150429T071456Z">
        <seg>Groovydoc</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Handles converting a Maven build to a Gradle build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T040221Z" creationid="Administrator" creationdate="20150425T040221Z">
        <seg>处理转换 Maven 构建为 Gradle 构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Has directories in the conventional locations for source code</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T094234Z" creationid="haohang" creationdate="20150707T094234Z">
        <seg>在源代码中的约定位置有目录</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Have a look at &lt;a0&gt;&lt;c1&gt;Conf2ScopeMappingContainer&lt;/c1&gt;&lt;/a0&gt; to learn more.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T145305Z" creationid="95" creationdate="20160106T145305Z">
        <seg>你可以参考&lt;a0&gt;&lt;c1&gt;Conf2ScopeMappingContainer&lt;/c1&gt;&lt;/a0&gt;来了解更多的信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Have a look at &lt;a0&gt;&lt;c1&gt;ExternalModuleDependency&lt;/c1&gt;&lt;/a0&gt; to learn all about the API.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150724T034748Z" creationid="haohang" creationdate="20150724T034748Z">
        <seg>要了解所有该 API 的内容，可以参阅&lt;a0&gt;&lt;c1&gt;ExternalModuleDependency&lt;/c1&gt;&lt;/a0&gt; 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Have a look at &lt;a0&gt;&lt;c1&gt;ProjectDescriptor&lt;/c1&gt;&lt;/a0&gt; for more details.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T070541Z" creationid="haohang" creationdate="20160519T070502Z">
        <seg>更多信息请参阅&lt;a0&gt;&lt;c1&gt;ProjectDescriptor&lt;/c1&gt;&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Have a look at &lt;a0&gt;&lt;c1&gt;Settings&lt;/c1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T025959Z" creationid="haohang" creationdate="20160519T025959Z">
        <seg>可以看一下 &lt;a0&gt;&lt;c1&gt;Settings&lt;/c1&gt;&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Have a look at &lt;a0&gt;&lt;c1&gt;TaskContainer&lt;/c1&gt;&lt;/a0&gt; for more options for locating tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T082612Z" creationid="msdx" creationdate="20141110T082202Z">
        <seg>有关查找任务的更多选项，可以看一下&lt;a0&gt;&lt;c1&gt;TaskContainer&lt;/c1&gt;&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Have a look at &lt;a0&gt;http://groovy.codehaus.org/groovy-jdk/&lt;/a0&gt; for more details.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T061421Z" creationid="msdx" creationdate="20141108T061421Z">
        <seg>可以看看&lt;a0&gt;http://groovy.codehaus.org/groovy-jdk/&lt;/a0&gt;，了解更多详细信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Have a look at &lt;a1&gt;&lt;c2&gt;TaskContainer&lt;/c2&gt;&lt;/a1&gt; for more variations of the &lt;c3&gt;create()&lt;/c3&gt; method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T023422Z" creationid="msdx" creationdate="20141110T023405Z">
        <seg>关于&lt;c3&gt;create ()&lt;/c3&gt;方法的更多变化可以看看&lt;a1&gt;&lt;c2&gt;TaskContainer&lt;/c2&gt;&lt;/a1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Have a look at &lt;a4&gt;&lt;c5&gt;Test&lt;/c5&gt;&lt;/a4&gt; for the complete API.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T140340Z" creationid="Administrator" creationdate="20150427T140340Z">
        <seg>可以看一看&lt;a4&gt;&lt;c5&gt;Test&lt;/c5&gt;&lt;/a4&gt;的完整的 API。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Have also a look at &lt;a0&gt;&lt;c1&gt;War&lt;/c1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T093636Z" creationid="msdx" creationdate="20150503T093550Z">
        <seg>另请参阅 &lt;a0&gt;&lt;c1&gt;War&lt;/c1&gt;&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Have also a look at the API documentation of &lt;a0&gt;&lt;c1&gt;Dependency&lt;/c1&gt;&lt;/a0&gt; and &lt;a2&gt;&lt;c3&gt;Configuration&lt;/c3&gt;&lt;/a2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T100712Z" creationid="haohang" creationdate="20150801T100712Z">
        <seg>可以看看 &lt;a0&gt;&lt;c1&gt;Dependency&lt;/c1&gt;&lt;/a0&gt; 和 &lt;a2&gt;&lt;c3&gt;Configuration&lt;/c3&gt;&lt;/a2&gt; 的 API 文档。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Have also a look at the API documentation: &lt;a0&gt;&lt;c1&gt;ClientModule&lt;/c1&gt;&lt;/a0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T091719Z" creationid="haohang" creationdate="20150801T091700Z">
        <seg>可以看一看 API 文档：&lt;a0&gt; &lt;c1&gt;ClientModule&lt;/c1&gt; &lt;/a0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Header files that should not be exported (but are used internally) should be placed inside the &lt;c1&gt;src/main/c&lt;/c1&gt; directory (though be aware that such header files should always be referenced in a manner relative to the file including them).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160225T090625Z" creationid="haohang" creationdate="20160225T090625Z">
        <seg>不应该被导出（而是内部使用）的头文件，应该放在 &lt;c1&gt;src/main/c&lt;/c1&gt; 目录（不过要注意，这样的文件应该总是以相对于包含它们的文件这样一种方式被引用）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Header files that should not be exported (but are used internally) should be placed inside the &lt;c1&gt;src/main/cpp&lt;/c1&gt; directory (though be aware that such header files should always be referenced in a manner relative to the file including them).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160225T090412Z" creationid="haohang" creationdate="20160225T085731Z">
        <seg>不应该被导出（而是内部使用）的头文件，应该放在 &lt;c1&gt;src/main/cpp&lt;/c1&gt; 目录（不过要注意，这样的文件应该总是以相对于包含它们的文件这样的一种方式被引用）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Hello world</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162328Z" creationid="msdx" creationdate="20141109T162328Z">
        <seg>Hello world</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>HelloServlet.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160722T091213Z" creationid="haohang" creationdate="20160722T091213Z">
        <seg>HelloServlet.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Helper.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T083516Z" creationid="haohang" creationdate="20160726T083516Z">
        <seg>Helper.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Hence, starting from version 1.4 new incubating 'configuration on demand' mode is introduced.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160522T121411Z" creationid="95" creationdate="20160522T121143Z">
        <seg>因此，从 1.4 版本起，新引入了一个孵化功能“按需配置”。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Hence, when your project depends on a Maven module, it's obvious what its artifact is.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150724T042843Z" creationid="haohang" creationdate="20150724T042843Z">
        <seg>因此，当你的项目依赖于一个 Maven 模块时，这个模块的 artifact 是哪一个会很明显。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here a &lt;a0&gt; link &lt;/a0&gt; to the Subversion view.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141121T142055Z" creationid="msdx" creationdate="20141121T142055Z">
        <seg>这里是SVN的视图的&lt;a0&gt;链接&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here are some examples of what you can do with a file collection.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T155843Z" creationid="msdx" creationdate="20141112T155843Z">
        <seg>这里是一些使用文件集合的例子。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here are some examples:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T123300Z" creationid="msdx" creationdate="20141113T123300Z">
        <seg>这里有一些例子：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here are some examples: &lt;s1&gt;[&lt;a2&gt;16&lt;/a2&gt;]&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T134713Z" creationid="95" creationdate="20151006T134549Z">
        <seg>这里有一些例子：&lt;s1&gt;[&lt;a2&gt;16&lt;/a2&gt;]&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here are some situations where this matters:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150730T034803Z" creationid="haohang" creationdate="20150730T034515Z">
        <seg>以下是一些比较重要的情况：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here are the major highlights of Gradle's support for dependency management:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150714T080356Z" creationid="haohang" creationdate="20150714T080356Z">
        <seg>这里是 Gradle 支持的依赖管理的主要亮点:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here are the some exemplary reasons why one might want to exclude a transitive dependency.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T101531Z" creationid="haohang" creationdate="20150801T101531Z">
        <seg>下面是为什么可能想要排除传递依赖的一些原因。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is a brief example which changes the main Java and resource source directories.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T083749Z" creationid="Administrator" creationdate="20150426T083749Z">
        <seg>这里是如何更改main Java 和资源源目录的一个简短的例子。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is a complete example:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T053943Z" creationid="msdx" creationdate="20150513T053943Z">
        <seg>下面是一个完整的例子：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is a list of some of Gradle's features.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141101T034449Z" creationid="msdx" creationdate="20141101T034417Z">
        <seg>以下是Gradle的一些特性列表。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is a sample which generates a combined report for the unit tests from subprojects:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T142733Z" creationid="msdx" creationdate="20150428T142733Z">
        <seg>这里是一个范例，从子项目的单元测试中生成一个联合报告：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is a simple build script for the project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160815T144838Z" creationid="95" creationdate="20160815T144838Z">
        <seg>下面是该项目的一个简单的构建脚本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is an example how you can configure the upload task of a configuration:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151226T092003Z" creationid="95" creationdate="20151226T092003Z">
        <seg>以下是一个有关配置上传任务的例子：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is an example where this is different:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T062224Z" creationid="haohang" creationdate="20160718T062224Z">
        <seg>下面是一个展示不同之处的例子：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is an example which configures the main Java and resources directories:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T051105Z" creationid="Administrator" creationdate="20150427T051046Z">
        <seg>下面是一个配置main 的 Java 和资源目录的例子：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is an example which maintains a copy of the project's runtime dependencies in the &lt;c0&gt;build/libs&lt;/c0&gt; directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T145414Z" creationid="msdx" creationdate="20141113T145414Z">
        <seg>这里是一个例子，维护在&lt;c0&gt;build/libs&lt;/c0&gt;目录中的项目运行时依赖的副本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is an example with the most important customization options:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T093801Z" creationid="msdx" creationdate="20150503T093642Z">
        <seg>下面是一个示例，展示了最重要的自定义选项：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is another example:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T130921Z" creationid="msdx" creationdate="20141113T130921Z">
        <seg>这里是另一个示例：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is how you would export all the dependencies of an Eclipse project:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T065946Z" creationid="haohang" creationdate="20150625T065946Z">
        <seg>下面的例子展示了如何导出一个 Eclipse 项目的所有依赖项：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is how you would export all the dependencies of an IDEA module:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T074605Z" creationid="haohang" creationdate="20150625T074605Z">
        <seg>下面的例子展示了如何导出一个 IDEA 模块的所有依赖项：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is our complete build file:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T065447Z" creationid="msdx" creationdate="20141030T065447Z">
        <seg>这里是我们完成的构建文件：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is what this looks like in code:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T041554Z" creationid="95" creationdate="20151129T041156Z">
        <seg>这里是在代码中的表现：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here our task generates several output files from a source XML file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T060250Z" creationid="msdx" creationdate="20141111T060250Z">
        <seg>在这里我们的任务从一个 XML 源文件生成多个输出文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here the output without the &lt;c0&gt;-q&lt;/c0&gt; option:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160715T080041Z" creationid="haohang" creationdate="20160715T080041Z">
        <seg>这里是不使用&lt;c0&gt;-q&lt;/c0&gt;选项的输出结果︰</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here we add a &lt;c0&gt;greeting&lt;/c0&gt; property, and set the value when we declare the &lt;c1&gt;greeting&lt;/c1&gt; task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T151516Z" creationid="95" creationdate="20160814T151516Z">
        <seg>这里我们添加了一个 &lt;c0&gt;greeting&lt;/c0&gt; 属性，并且在我们定义 &lt;c1&gt;greeting&lt;/c1&gt; 任务的时候设置它的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here we add tasks to the &lt;c0&gt;tasks&lt;/c0&gt; collection.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T023153Z" creationid="msdx" creationdate="20141110T023153Z">
        <seg>在这里我们将任务添加到&lt;c0&gt;tasks&lt;/c0&gt;集合。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here we replace a task of type &lt;c0&gt;Copy&lt;/c0&gt; with a simple task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T015937Z" creationid="msdx" creationdate="20141111T015937Z">
        <seg>在这里我们用一个简单的任务替换&lt;c0&gt;Copy&lt;/c0&gt;类型的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here you can see that the &lt;a0&gt;&lt;c1&gt;TargetedNativeComponent.targetPlatforms()&lt;/c1&gt;&lt;/a0&gt; method is used to select the set of platforms to target for &lt;c2&gt;executables.main&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T083047Z" creationid="haohang" creationdate="20160408T083047Z">
        <seg>在这里你可以看到 &lt;a0&gt;&lt;c1&gt;TargetedNativeComponent.targetPlatforms()&lt;/c1&gt;&lt;/a0&gt; 方法被用于为 &lt;c2&gt;executables.main&lt;/c2&gt;选择一组平台。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here're all situations in which we fork a new daemon process:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141117T152707Z" creationid="msdx" creationdate="20141117T152707Z">
        <seg>以下是我们fork一个新的守护进程的所有情况：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here's an example:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T053332Z" creationid="Administrator" creationdate="20150427T053332Z">
        <seg>下面是一个示例：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here, &lt;c0&gt;uploadTask&lt;/c0&gt; and &lt;c1&gt;archiveTask&lt;/c1&gt; refer to the tasks used for uploading and generating the archive, respectively (for example &lt;c2&gt;uploadArchives&lt;/c2&gt; and &lt;c3&gt;jar&lt;/c3&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T141902Z" creationid="95" creationdate="20160105T144144Z">
        <seg>在这里， &lt;c0&gt;uploadTask&lt;/c0&gt;和&lt;c1&gt;archiveTask&lt;/c1&gt;分别指向上传和分别生成archive的任务（例如&lt;c2&gt;uploadArchives&lt;/c2&gt;和&lt;c3&gt;jar&lt;/c3&gt;）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Hidden tasks show up in red.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T153711Z" creationid="msdx" creationdate="20141105T153630Z">
        <seg>隐藏的任务显示为红色。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Hide the selected tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T154111Z" creationid="msdx" creationdate="20141105T154111Z">
        <seg>隐藏选择的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Hierarchical and flat physical layouts get special support.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T041307Z" creationid="haohang" creationdate="20160519T041307Z">
        <seg>分层和产面的物理布局，得到了特别的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>How does Gradle know whether to do a single or multiproject build?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T070616Z" creationid="haohang" creationdate="20160519T070616Z">
        <seg>Gradle 是怎么知道这是单项目还是多项目构建的？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>How does the parallel execution work?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T090907Z" creationid="haohang" creationdate="20160726T090847Z">
        <seg>并行执行是怎么做的？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>How to upload your archives is described in &lt;a0&gt;Chapter 51, &lt;i1&gt;Publishing artifacts&lt;/i1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T151601Z" creationid="msdx" creationdate="20150428T151601Z">
        <seg>关于如何上传archives，将在&lt;a0&gt;第51章，&lt;i1&gt;发布artifacts&lt;/i1&gt;&lt;/a0&gt;中进行描述。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However if -Xmx memory setting change or some fundamental immutable system property changes (e.g. file.encoding) then new daemon will be forked.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141117T153242Z" creationid="msdx" creationdate="20141117T153242Z">
        <seg>然而，如果-Xmx 内存设置更改了，或一些基本的不变的系统属性更改了 （例如 file.encoding），那么将fork新的守护进程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, be aware that they are not yet considered part of Gradle's public API.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T040908Z" creationid="Administrator" creationdate="20150425T040908Z">
        <seg>然而，请注意它们都不被认为是 Gradle 公共 API 的一部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, file dependencies are included in transitive project dependencies within the same build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T094253Z" creationid="haohang" creationdate="20150801T094253Z">
        <seg>然而，文件依赖会被包含在同一个构建的传递项目依赖里。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, in many cases it is not possible to build a particular variant, perhaps because no tool chain is available to build for a particular platform.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T084330Z" creationid="haohang" creationdate="20160408T084330Z">
        <seg>然而，在许多情况下是不可能构建一个特定的变种的，可能的原因是某个特定的平台没有可用的工具链。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, it is not visible outside the build, and so you cannot reuse the task class outside the build it is defined in.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T144509Z" creationid="95" creationdate="20160814T144424Z">
        <seg>然而，它在这个构建之外并不可见，因为你不能在定义它的这个构建之外的其他地方来重用这个任务类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, it will print a warning.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T065349Z" creationid="msdx" creationdate="20141108T065349Z">
        <seg>然而，它将打印一个警告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, keep in mind that it is usually best to keep configuration in the build script and under source control.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T054147Z" creationid="msdx" creationdate="20150513T054147Z">
        <seg>然而，请记住，通常最好是配置在构建脚本中，并在代码控制下。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, the &lt;c0&gt;compileJava&lt;/c0&gt; task is likely to not be the only task that needs to know where the class files are.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141123T154308Z" creationid="msdx" creationdate="20141123T154308Z">
        <seg>然而， &lt;c0&gt;compileJava&lt;/c0&gt;任务很可能不是唯 一需要知道类文件在哪里的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, the set of tool chains for a project may also be explicitly defined, allowing additional cross-compilers to be configured as well as allowing the install directories to be specified.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T091144Z" creationid="haohang" creationdate="20160408T091144Z">
        <seg>不过，一个项目里的一组工具链也可以被显示地定义，允许配置额外的交叉编译器以及指定安装目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, the task class is not visible outside the build script, and so you cannot reuse the task class outside the build script it is defined in.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T144148Z" creationid="95" creationdate="20160814T144148Z">
        <seg>然而，在这个构建脚本脚本之外，这个任务类是不可见的，因此你不能够在你定义这个任务类的脚本之外的地方来利用它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, this behavior is configurable.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T041014Z" creationid="haohang" creationdate="20160519T041014Z">
        <seg>不过，这种行为是可配置的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, vast majority of tests and use cases should be handled neatly.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T023635Z" creationid="Administrator" creationdate="20150428T023635Z">
        <seg>然而，绝大多数的测试和用例都会被很好地处理。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, where possible Gradle will check if the previously downloaded artifacts are valid before downloading again.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T154552Z" creationid="95" creationdate="20151129T154552Z">
        <seg>然而，在再次下载之前Gradle 可能将会检查前一个下载的构件是否有效。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, you can run it then change the working directory via the Setup tab in the UI.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T150420Z" creationid="msdx" creationdate="20141105T150420Z">
        <seg>当然，你也可以先运行它，然后通过在UI中的设置（Setup）选项卡，改变工作目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>HtmlDependencyReportTask</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T061238Z" creationid="haohang" creationdate="20150628T061238Z">
        <seg>HtmlDependencyReportTask</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>I can operate</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T073700Z" creationid="msdx" creationdate="20141109T073700Z">
        <seg>I can operate</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>I can operate'&lt;/s5&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T093720Z" creationid="msdx" creationdate="20141109T093720Z">
        <seg>I can operate'&lt;/s5&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>I'm krill
- I depend on water</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160527T162906Z" creationid="95" creationdate="20160527T162906Z">
        <seg>I'm krill
- I depend on water</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>I'm krill
- I depend on water
- I love to spend time in the arctic waters.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160527T163834Z" creationid="95" creationdate="20160527T163834Z">
        <seg>I'm krill
- I depend on water
- I love to spend time in the arctic waters.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>I'm krill
- I depend on water
- The weight of my species in summer is twice as heavy as all human beings.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160527T163313Z" creationid="95" creationdate="20160527T163313Z">
        <seg>I'm krill
- I depend on water
- The weight of my species in summer is twice as heavy as all human beings.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>I'm tropicalFish
- I depend on water</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160527T163844Z" creationid="95" creationdate="20160527T163844Z">
        <seg>I'm tropicalFish
- I depend on water</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>IDEA plugin provides hooks and behavior for customizing the generated content.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T073119Z" creationid="haohang" creationdate="20150625T072736Z">
        <seg>IDEA 插件提供了一些 hook 和行，用于自定义生成的内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>INFO</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T070733Z" creationid="msdx" creationdate="20141116T070733Z">
        <seg>INFO</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>INFO and higher</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T103029Z" creationid="msdx" creationdate="20141116T103029Z">
        <seg>INFO 及更高</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>IdeaModel</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T072644Z" creationid="haohang" creationdate="20150625T072644Z">
        <seg>IdeaModel</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>IdeaModule</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T072708Z" creationid="haohang" creationdate="20150625T072708Z">
        <seg>IdeaModule</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>IdeaProject</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T072703Z" creationid="haohang" creationdate="20150625T072659Z">
        <seg>IdeaProject</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>IdeaWorkspace</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T072716Z" creationid="haohang" creationdate="20150625T072716Z">
        <seg>IdeaWorkspace</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If &lt;c1&gt;scanForTestClasses&lt;/c1&gt; is disabled and no include or exclude patterns are specified, the respective defaults are used.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T081955Z" creationid="Administrator" creationdate="20150428T081955Z">
        <seg>如果&lt;c1&gt;scanForTestClasses&lt;/c1&gt;为disabled，并且没有指定 include或exclude模式，则使用各自的默认值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If Gradle finds a module descriptor in a particular repository, it will attempt to download all of the artifacts for that module from &lt;s0&gt;&lt;e1&gt;the same repository&lt;/e1&gt;&lt;/s0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T093754Z" creationid="haohang" creationdate="20150807T093754Z">
        <seg>如果 Gradle 在特定仓库中查找模块描述符，它将尝试从&lt;s0&gt;&lt;e1&gt;同一仓库中&lt;/e1&gt;&lt;/s0&gt;下载该模块的所有 artifacts。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If Groovy is only used for test code, the Groovy dependency should be added to the &lt;c0&gt;testCompile&lt;/c0&gt; configuration:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T075957Z" creationid="msdx" creationdate="20150429T075957Z">
        <seg>如果 Groovy 仅用于测试代码，Groovy 的依赖应该被添加到&lt;c0&gt;testCompile&lt;/c0&gt;配置中：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If Groovy is used for production code, the Groovy dependency should be added to the &lt;c0&gt;compile&lt;/c0&gt; configuration:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T075928Z" creationid="msdx" creationdate="20150429T075928Z">
        <seg>如果 Groovy 用于production 代码，Groovy 依赖应该添加到&lt;c0&gt;compile&lt;/c0&gt;配置中：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If Scala is only used for test code, the &lt;c0&gt;scala-library&lt;/c0&gt; dependency should be added to the &lt;c1&gt;testCompile&lt;/c1&gt; configuration:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T153016Z" creationid="msdx" creationdate="20150429T153016Z">
        <seg>如果 Scala 仅用于测试代码， &lt;c0&gt;scala-library&lt;/c0&gt;依赖应被添加到&lt;c1&gt;testCompile&lt;/c1&gt;配置中：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If Scala is used for production code, the &lt;c0&gt;scala-library&lt;/c0&gt; dependency should be added to the &lt;c1&gt;compile&lt;/c1&gt; configuration:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T152924Z" creationid="msdx" creationdate="20150429T152924Z">
        <seg>如果 Scala 用于production 代码， &lt;c0&gt;scala-library&lt;/c0&gt; 依赖应该添加到&lt;c1&gt;compile&lt;/c1&gt;的配置中：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If a &lt;c0&gt;--type&lt;/c0&gt; parameter is not supplied, Gradle will attempt to infer the type from the environment.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T074323Z" creationid="haohang" creationdate="20150707T074323Z">
        <seg>如果没有提供 &lt;c0&gt;--type&lt;/c0&gt; 参数，Gradle 将尝试从当前环境来推断类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If a &lt;c0&gt;groovy(-indy)&lt;/c0&gt; Jar is found on &lt;c1&gt;classpath&lt;/c1&gt;, and the project has at least one repository declared, a corresponding &lt;c2&gt;groovy(-indy)&lt;/c2&gt; repository dependency will be added to &lt;c3&gt;groovyClasspath&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T092108Z" creationid="msdx" creationdate="20150429T092108Z">
        <seg>如果在&lt;c1&gt;classpath&lt;/c1&gt;中找到&lt;c0&gt;groovy(-indy)&lt;/c0&gt; Jar ，并且该项目已经在至少一个仓库中声明了它，那么相应的&lt;c2&gt;groovy(-indy)&lt;/c2&gt;的仓库依赖将添加到&lt;c3&gt;groovyClasspath&lt;/c3&gt;中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If a &lt;c0&gt;groovy-all(-indy)&lt;/c0&gt; Jar is found on &lt;c1&gt;classpath&lt;/c1&gt;, the same Jar will be added to &lt;c2&gt;groovyClasspath&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T091905Z" creationid="msdx" creationdate="20150429T091822Z">
        <seg>如果在在&lt;c1&gt;classpath&lt;/c1&gt;中找到&lt;c0&gt;groovy-all(-indy)&lt;/c0&gt; Jar，相同的 Jar 将添加到&lt;c2&gt;groovyClasspath&lt;/c2&gt;中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If a &lt;c0&gt;scala-library&lt;/c0&gt; Jar is found on &lt;c1&gt;classpath&lt;/c1&gt;, and the project has at least one repository declared, a corresponding &lt;c2&gt;scala-compiler&lt;/c2&gt; repository dependency will be added to &lt;c3&gt;scalaClasspath&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150430T154635Z" creationid="msdx" creationdate="20150430T154635Z">
        <seg>如果在&lt;c1&gt;classpath&lt;/c1&gt;中找到&lt;c0&gt;scala-library&lt;/c0&gt; Jar ，并且该项目已经在至少一个仓库中声明了它，那么相应的&lt;c2&gt;scala-compiler&lt;/c2&gt;的仓库依赖将添加到&lt;c3&gt;scalaClasspath&lt;/c3&gt;中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If a &lt;c0&gt;settings.gradle&lt;/c0&gt; file is found, Gradle checks if the current project is part of the multiproject hierarchy defined in the found &lt;c1&gt;settings.gradle&lt;/c1&gt; file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T074037Z" creationid="haohang" creationdate="20160519T074037Z">
        <seg>如果找到了&lt;c0&gt;settings.gradle&lt;/c0&gt;文件，Gradle 会检查当前项目是否为找到的&lt;c1&gt;settings.gradle&lt;/c1&gt;文件中定义的多项目层次结构的一部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If a binary variant cannot be built for any reason, then the &lt;a0&gt;&lt;c1&gt;NativeBinary&lt;/c1&gt;&lt;/a0&gt; associated with that variant will not be &lt;c2&gt;buildable&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T084701Z" creationid="haohang" creationdate="20160408T084443Z">
        <seg>如果一个二进制变种因为某些原因不能构建，那么与之关联的&lt;a0&gt;&lt;c1&gt;NativeBinary&lt;/c1&gt;&lt;/a0&gt;将不会是&lt;c2&gt;buildable&lt;/c2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If a build system does not support such patterns, you either can't solve your problem or you need to do ugly hacks which are hard to maintain and massively afflict your productivity as a build master.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T083204Z" creationid="haohang" creationdate="20160726T083204Z">
        <seg>如果一个构建系统不支持这种模式，你就不能解决你的问题，或者你需要用一些恶心的 hack方法，这样就会很难维护，并且非常影响你的生产力。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If a candidate artifact has been downloaded by Maven, Gradle will use this artifact if it can be verified to match the checksum declared by the remote server.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T152302Z" creationid="95" creationdate="20151129T152302Z">
        <seg>如果一个候选的构件已经通过 Maven 下载，并且如果它可以和远程服务器定义的校验和匹配，Gradle 将使用这个构件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If a local repository location is defined in a &lt;c0&gt;settings.xml&lt;/c0&gt;, this location will be used.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150909T052631Z" creationid="haohang" creationdate="20150909T052631Z">
        <seg>如果在&lt;c0&gt;settings.xml&lt;/c0&gt;中定义一个本地仓库的位置，那么这个位置将会被使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If a module or artifact has not been previously resolved from &lt;s0&gt;&lt;e1&gt;this repository&lt;/e1&gt;&lt;/s0&gt;, Gradle will attempt to resolve the module against the repository.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T150555Z" creationid="95" creationdate="20151129T045705Z">
        <seg>如果一个模块或构件以之前没有从&lt;s0&gt;&lt;e1&gt;这个存储库中&lt;/e1&gt;&lt;/s0&gt;解析过，Gradle 将尝试在这个存储库中解析这个模块。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If a property in such a file has the prefix &lt;c1&gt;systemProp.&lt;/c1&gt; the property and its value are added to the system properties, without the prefix.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T150302Z" creationid="msdx" creationdate="20141109T150254Z">
        <seg>如果此类文件中的属性有一个&lt;c1&gt;systemProp.&lt;/c1&gt;的前缀，该属性和它的值会被添加到系统属性，且不带此前缀。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If a transitive dependency has poor quality metadata that leads to problems at dependency resolution time, you can force Gradle to use a newer, fixed version of this dependency.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T054925Z" creationid="95" creationdate="20151115T054925Z">
        <seg>如果传递依赖有质量较差的元数据，导致了依赖解析时的问题时，你可以强制 Gradle 对于这一依赖使用一个较新的，固定的版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If an upload repository is defined with multiple patterns, Gradle must choose a pattern to use for uploading each file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151226T092743Z" creationid="95" creationdate="20151226T092656Z">
        <seg>如果一个上传仓库中定义了多个模式，Gradle 必须为每个文件选择上传模式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If any of the following criteria match, the class is considered to be a JUnit test class:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T041001Z" creationid="Administrator" creationdate="20150428T041001Z">
        <seg>如果满足以下的任何一个条件，这个类就被认为是一个 JUnit 测试类：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If any of these properties is empty the trailing &lt;c0&gt;-&lt;/c0&gt; is not added to the name.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T155912Z" creationid="msdx" creationdate="20141113T155912Z">
        <seg>如果这些属性中的任何一个为空，那后面的&lt;c0&gt;-&lt;/c0&gt;不会被添加到该名称中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If anyone knows a better overview, please let us know via the mailing list.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141121T142330Z" creationid="msdx" creationdate="20141121T142236Z">
        <seg>如果有人知道更好的概述，请发邮件让我们知道。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If dependencies have file names with version numbers it is much easier to quickly identify the versions of your dependencies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150716T092540Z" creationid="haohang" creationdate="20150716T092540Z">
        <seg>如果依赖的文件名称带有版本号，那么将更容易快速确定依赖的版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If it is too verbose, real warnings and problems are easily hidden by this.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T070035Z" creationid="msdx" creationdate="20141116T070035Z">
        <seg>如果日志太多，真正的警告和问题容易被隐藏。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If no &lt;c0&gt;settings.gradle&lt;/c0&gt; file is found, the build is executed as a single project build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T074005Z" creationid="haohang" creationdate="20160519T074005Z">
        <seg>如果仍没有找到&lt;c0&gt;settings.gradle&lt;/c0&gt;文件，将作为一个单项目构建来执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If no &lt;c0&gt;settings.gradle&lt;/c0&gt; is found, it searches the parent directories for the existence of a &lt;c1&gt;settings.gradle&lt;/c1&gt; file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T073919Z" creationid="haohang" creationdate="20160519T073919Z">
        <seg>如果没有找到&lt;c0&gt;settings.gradle&lt;/c0&gt;，它将在父目录里搜索&lt;c1&gt;settings.gradle&lt;/c1&gt;文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If no &lt;c2&gt;url&lt;/c2&gt; parameter is supplied, then Gradle will use the first defined &lt;c3&gt;artifactPattern&lt;/c3&gt; for uploading, or the first defined &lt;c4&gt;ivyPattern&lt;/c4&gt; for uploading Ivy files, if this is set.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151226T093005Z" creationid="95" creationdate="20151226T093005Z">
        <seg>如果没有提供&lt;c2&gt;url&lt;/c2&gt;参数，Gradle 将使用第一个定义的&lt;c3&gt;artifactPattern&lt;/c3&gt;来上传，或者对于上传Ivy文件而言，将使用第一个定义的&lt;c4&gt;ivyPattern&lt;/c4&gt;，如果这个参数有设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If no &lt;c9&gt;settings.xml&lt;/c9&gt; is available, Gradle uses the default location &lt;c10&gt;&lt;e11&gt;&lt;c12&gt;USER_HOME&lt;/c12&gt;&lt;/e11&gt;/.m2/repository&lt;/c10&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150909T052837Z" creationid="haohang" creationdate="20150909T052837Z">
        <seg>如果没有&lt;c9&gt;settings.xml&lt;/c9&gt;可用，Gradle 将使用默认的位置&lt;c10&gt;&lt;e11&gt;&lt;c12&gt;USER_HOME&lt;/c12&gt;&lt;/e11&gt;/.m2/repository&lt;/c10&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If no build types are defined in a project, then a single, default build type called 'debug' is added.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160401T090421Z" creationid="haohang" creationdate="20160401T090315Z">
        <seg>如果在project中没有定义任何构建类型，那么会有一个默认的“debug”构建类型被加进去。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If no flavor is defined for a component, then a single default flavor named 'default' is used.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T081540Z" creationid="haohang" creationdate="20160408T081540Z">
        <seg>如果一个组件没有定义任何的flavor，那么会使用一个默认的“default”的flavor。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If no module descriptor is found, Gradle will search for the presence of the primary &lt;s4&gt;&lt;e5&gt;module artifact&lt;/e5&gt;&lt;/s4&gt; file indicating that the module exists in the repository.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151007T023518Z" creationid="95" creationdate="20151007T023518Z">
        <seg>如果没有找到模块描述符，Gradle 将搜索表示模块存在于存储库中的主要&lt;s4&gt;&lt;e5&gt;模块 artifact&lt;/e5&gt;&lt;/s4&gt;文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If no platforms are defined in a project, then a single, default platform 'current' is added.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160401T094355Z" creationid="haohang" creationdate="20160401T094355Z">
        <seg>如果在project里没有定义任何平台，那么会添加一个默认的“current”平台。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If no snapshot repository is defined, releases and snapshots are both deployed to the &lt;c0&gt;repository&lt;/c0&gt; element.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T141752Z" creationid="95" creationdate="20160105T141752Z">
        <seg>如果没有定义任何snapshot 仓库，release和snapshot都将部署到&lt;c0&gt;repository&lt;/c0&gt;元素中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If no such module descriptor file exists, Gradle looks for a file called &lt;c3&gt;hibernate-3.0.5.jar&lt;/c3&gt; to retrieve.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150724T035537Z" creationid="haohang" creationdate="20150724T035405Z">
        <seg>如果不存在这样的模块描述符文件，Gradle 会查找一个&lt;c3&gt;hibernate-3.0.5.jar&lt;/c3&gt; 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If no target platforms are defined for a project, then all binaries are built to target a default platform named 'current'.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T092634Z" creationid="haohang" creationdate="20160408T092634Z">
        <seg>如果在project里没有定义任何平台，那么所有的二进制文件会针对一个默认平台“current”进行构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If no tests with this pattern can be found an exception is thrown.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T035632Z" creationid="Administrator" creationdate="20150428T035632Z">
        <seg>如果这个模式无法找到任何测试，那么将会抛出一个异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If not specified in the (Ivy) descriptor, the status defaults to &lt;c7&gt;integration&lt;/c7&gt; for Ivy modules and Maven snapshot modules, and &lt;c8&gt;release&lt;/c8&gt; for Maven modules that aren't snapshots.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T013408Z" creationid="95" creationdate="20151129T013408Z">
        <seg>如果没有在（Ivy）描述符中指定，Ivy 模块和 Maven snapshot模块的状态默认为&lt;c7&gt;integration&lt;/c7&gt; ，不是snapshot 的 Maven 模块则默认为&lt;c8&gt;release&lt;/c8&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If not, the build is executed as a single project build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T074117Z" creationid="haohang" creationdate="20160519T074117Z">
        <seg>如果不是，构建将作为一个单项目构建来执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If nothing else is defined, Gradle executes the task in alphanumeric order.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T063415Z" creationid="haohang" creationdate="20160718T063415Z">
        <seg>如果没有别的定义，Gradle 会按字母数字顺序执行该任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If project A has a compile dependency on project B then building A causes configuration of both projects: A and B.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160522T124634Z" creationid="95" creationdate="20160522T124634Z">
        <seg>如果项目 A 对项目 B 有编译依赖，那么构建A的时候也会导致 A和B两个项目的配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If required modules are not present in the dependency cache, build execution will fail.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T153835Z" creationid="95" creationdate="20151129T153835Z">
        <seg>如果所需的模块在依赖缓存中不存在，构建执行将会失败。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If someone asks you to look at a collection of 20 jar files, which would you prefer?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150716T092342Z" creationid="haohang" creationdate="20150716T092342Z">
        <seg>如果有人让你看 20 个 jar 文件，你更喜欢哪一种？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If someone wants to use your project as a library, she simply needs to declare on which configuration of the dependency to depend on.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151227T155618Z" creationid="95" creationdate="20151227T155429Z">
        <seg>如果其他人想要把你的项目作为一个库使用，她只需要在依赖配置上声明，使她的项目依赖你的库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If specifying this information in the user &lt;c0&gt;gradle.properties&lt;/c0&gt; file is not feasible for your environment, you can source the information however you need to and set the project properties manually.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160108T152848Z" creationid="95" creationdate="20160108T152538Z">
        <seg>如果在用户的&lt;c0&gt;gradle.properties&lt;/c0&gt;文件中指定的信息不适合你的环境，你可以提供这些信息，但你需要手动设置项目的属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If such a module descriptor file exists, it is parsed and the artifacts of this module (e.g. &lt;c2&gt;hibernate-3.0.5.jar&lt;/c2&gt;) as well as its dependencies (e.g. cglib) are downloaded.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150724T035301Z" creationid="haohang" creationdate="20150724T035301Z">
        <seg>如果存在此类模块描述符文件，它会进行分析，并下载此模块的 artifacts （例如&lt;c2&gt;hibernate-3.0.5.jar&lt;/c2&gt;）以及其依赖项（例如 cglib）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If tests of more than one subproject are executed, the pattern is applied to each subproject.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T035831Z" creationid="Administrator" creationdate="20150428T035831Z">
        <seg>如果执行了一个以上的子项目的测试，该模式会被应用于每一个子项目中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the &lt;c0&gt;DEBUG&lt;/c0&gt; log level is chosen, truncated stacktraces are always printed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T033346Z" creationid="msdx" creationdate="20141116T104044Z">
        <seg>如果选择 &lt;c0&gt;DEBUG&lt;/c0&gt; 日志级别，则总是输出截断后的栈跟踪信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the &lt;c4&gt;revConstraint&lt;/c4&gt; attribute is not present, the &lt;c5&gt;rev&lt;/c5&gt; attribute is used instead.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T091225Z" creationid="95" creationdate="20151115T091225Z">
        <seg>如果不存在&lt;c4&gt;revConstraint&lt;/c4&gt;属性，则使用&lt;c5&gt;rev&lt;/c5&gt;属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the JAR can't be found there, the artifact URLs are used to look for JARs.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150909T053237Z" creationid="haohang" creationdate="20150909T053237Z">
        <seg>如果那里找不到 JAR，就会用 artifact URLs 来查找 JAR 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the Java plugin is also applied to your project, a new task named &lt;c0&gt;jacocoTestReport&lt;/c0&gt; is created that depends on the &lt;c1&gt;test&lt;/c1&gt; task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T130350Z" creationid="msdx" creationdate="20150506T130244Z">
        <seg>如果 Java 插件也被应用于你的项目，那么会创建一个名为&lt;c0&gt;jacocoTestReport&lt;/c0&gt;的新任务，该新任务依赖于&lt;c1&gt;test&lt;/c1&gt;任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the Java plugins is applied, the OSGi plugin replaces the manifest object of the default jar with an &lt;c6&gt;OsgiManifest&lt;/c6&gt; object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150526T004113Z" creationid="haohang" creationdate="20150526T004113Z">
        <seg>如果应用了 Java 插件，OSGi 插件将把默认 jar 的 manifest 对象替换为一个&lt;c6&gt;OsgiManifest&lt;/c6&gt;对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the argument is a task, the output files (i.e. the files the task creates) of the task are copied and the task is automatically added as a dependency of the &lt;c2&gt;Copy&lt;/c2&gt; task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T130824Z" creationid="msdx" creationdate="20141113T130824Z">
        <seg>如果参数是一个任务，那么任务的输出文件 （即该任务创建的文件）会被复制，并且该任务会自动添加为&lt;c2&gt;Copy&lt;/c2&gt;任务的依赖项。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the based manifest and the merged manifest both define values for the same key, the merged manifest wins by default.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T150938Z" creationid="msdx" creationdate="20150428T150938Z">
        <seg>如果基本的manifest和要合并的manifest都定义了同一个key的值，那么默认情况下会采用要合并的manifest的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the checksum can be retrieved, an artifact is not downloaded if an artifact already exists with the same id and checksum.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T151348Z" creationid="95" creationdate="20151129T151348Z">
        <seg>如果校验和可以获取到，并且如果已经存在具有相同 id 和校验和的构件，则不会再去下载这个构件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the checksum cannot be retrieved from the remote server, the artifact will be downloaded (and ignored if it matches an existing artifact).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T151434Z" creationid="95" creationdate="20151129T151434Z">
        <seg>如果校验和不能从远程服务器检索，构件将被下载（并且忽略它所匹配的现有的构件）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the classpath contains jars with an OSGi bundle, the bundle information is used to specify version information for the &lt;s4&gt;&lt;e5&gt;Import-Package&lt;/e5&gt;&lt;/s4&gt; value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150526T064259Z" creationid="haohang" creationdate="20150526T064259Z">
        <seg>如果 classpath 中包含了 jar 包和 OSGi bundle，bundle 信息会被用来指定 &lt;s4&gt;&lt;e5&gt;Import-Package&lt;/e5&gt;&lt;/s4&gt;的值的版本信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the current project contains a &lt;c4&gt;settings.gradle&lt;/c4&gt; file, the &lt;c5&gt;-u&lt;/c5&gt; option has no meaning.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T075223Z" creationid="haohang" creationdate="20160519T075223Z">
        <seg>如果当前项目中包含一个&lt;c4&gt;settings.gradle&lt;/c4&gt;文件， &lt;c5&gt;-u&lt;/c5&gt;选项将没有任何意义。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the daemon process is currently busy running some job, a brand new daemon process will be started.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141117T152753Z" creationid="msdx" creationdate="20141117T152634Z">
        <seg>如果该守护进程当前正忙于运行一些作业，将启动一个全新的守护进程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the default location for the local repository is redefined in a Maven &lt;c2&gt;settings.xml&lt;/c2&gt;, this is considered by this task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T143537Z" creationid="95" creationdate="20160105T143327Z">
        <seg>本地仓库的默认位置是否在 Maven &lt;c2&gt;settings.xml&lt;/c2&gt;中被重新定义，这项任务也会考虑到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the dependency is declared as a dynamic version (like &lt;c0&gt;1.+&lt;/c0&gt;), Gradle will resolve this to the newest available static version (like &lt;c1&gt;1.2&lt;/c1&gt;) in the repository.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151007T023623Z" creationid="95" creationdate="20151007T023623Z">
        <seg>如果依赖被声明为一个动态版本（像&lt;c0&gt;1.+&lt;/c0&gt;），Gradle 将会把它解析到在仓库中的最新的可用的静态版本（如&lt;c1&gt;1.2&lt;/c1&gt;）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the module descriptor is a POM file that has a parent POM declared, Gradle will recursively attempt to resolve each of the parent modules for the POM.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151007T023842Z" creationid="95" creationdate="20151007T023842Z">
        <seg>如果模块描述符是一个具有的父 POM 文件声明的 POM 文件，Gradle 将以递归方式尝试为该 POM 文件解析每个父模块。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the new snapshots are the same as the previous snapshots, Gradle assumes that the outputs are up to date and skips the task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T063720Z" creationid="msdx" creationdate="20141111T063720Z">
        <seg>如果新的快照和前一次的快照一样，Gradle 会假定这些输出是最新状态的并跳过该任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the plugin has previously been applied, any further applications will have no effect.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141122T162841Z" creationid="msdx" creationdate="20141122T162758Z">
        <seg>如果以前已应用了该插件，任何进一步的应用都不会再有任何效果。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the rules for skipping a task can't be expressed with predicate, you can use the &lt;a0&gt;&lt;c1&gt;StopExecutionException&lt;/c1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T054420Z" creationid="msdx" creationdate="20141111T031532Z">
        <seg>如果跳过任务的规则不能与断言同时表达，您可以使用&lt;a0&gt;&lt;c1&gt;StopExecutionException&lt;/c1&gt;&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the task completes successfully, Gradle takes a snapshot of the outputs.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T063306Z" creationid="msdx" creationdate="20141111T063227Z">
        <seg>如果任务成功完成，Gradle 将对输出进行一次快照。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the type could not be inferred, the type "&lt;c0&gt;basic&lt;/c0&gt;" will be used.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T074559Z" creationid="haohang" creationdate="20150707T074502Z">
        <seg>如果无法推断类型，将使用“&lt;c0&gt;basic&lt;/c0&gt;”类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If these task names exist, they are executed as a separate build in the order you have passed them.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160520T123916Z" creationid="95" creationdate="20160520T123916Z">
        <seg>如果这些任务名称存在，它们以参数的顺序作为一个单独的构建来执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If they are not the same, Gradle executes the task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T063736Z" creationid="msdx" creationdate="20141111T063736Z">
        <seg>如果它们不一则， Gradle 则会执行该任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If this exception is thrown by an action, the further execution of this action as well as the execution of any following action of this task is skipped.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T054700Z" creationid="msdx" creationdate="20141111T054700Z">
        <seg>如果一个操作（action）抛出了此异常，那么这个操作（action）接下来的行为和这个任务的其他 操作（action）都会被跳过。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If this file already exists in the &lt;c1&gt;appDirName/META-INF&lt;/c1&gt; then the existing file contents will be used and the explicit configuration in the &lt;c2&gt;ear.deploymentDescriptor&lt;/c2&gt; will be ignored.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T142435Z" creationid="msdx" creationdate="20150504T142435Z">
        <seg>如果此文件已存在于&lt;c1&gt;appDirName/META-INF&lt;/c1&gt;，那么会使用这个已存在的文件的内容，而 &lt;c2&gt;ear.deploymentDescriptor&lt;/c2&gt;中的显式配置将被忽略。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If this is not specified, the &lt;c1&gt;default&lt;/c1&gt; configuration is used (see &lt;a2&gt;Section 50.4.9, “Dependency configurations”&lt;/a2&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151227T155734Z" creationid="95" creationdate="20151227T155734Z">
        <seg>如果它没有指定，则会使用&lt;c1&gt;default&lt;/c1&gt; 配置（参阅&lt;a2&gt;第 50.4.9节，“依赖配置”&lt;/a2&gt;）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If this is not the behaviour you want for some reason, consider using &lt;a0&gt;&lt;c1&gt;TaskOutputs.upToDateWhen()&lt;/c1&gt;&lt;/a0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T064150Z" creationid="msdx" creationdate="20141111T064141Z">
        <seg>如果你因为一些理由而不想这样，请考虑使用&lt;a0&gt;&lt;c1&gt;TaskOutputs.upToDateWhen()&lt;/c1&gt; &lt;/a0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If this path is an absolute path, it is used to construct a &lt;c5&gt;File&lt;/c5&gt; instance.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T143029Z" creationid="msdx" creationdate="20141112T143029Z">
        <seg>如果这个路径是一个绝对路径，它会用于构构一个&lt;c5&gt;File&lt;/c5&gt;实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If this task is configured to use the value from &lt;c0&gt;sourceSets.main.output.classesDir&lt;/c0&gt;, then changing it in this location will update both the &lt;c1&gt;compileJava&lt;/c1&gt; task and this other consumer task whenever it is changed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141124T094435Z" creationid="msdx" creationdate="20141124T094217Z">
        <seg>如果这个任务使用&lt;c0&gt;sourceSets.main.output.classesDir&lt;/c0&gt;的值来配置，那么修改了这个位置的值，无论它是什么时候被修改，将同时更新&lt;c1&gt;compileJava&lt;/c1&gt;任务和这一个消费者任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If versions are unclear you can introduce subtle bugs which are very hard to find.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150716T092614Z" creationid="haohang" creationdate="20150716T092614Z">
        <seg>如果版本不清楚，你可能引入一些很难找到的微妙的错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you are coming from Ant, such an enhanced Gradle task as &lt;s0&gt;&lt;e1&gt;Copy&lt;/e1&gt;&lt;/s0&gt; looks like a mixture between an Ant target and an Ant task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T123611Z" creationid="msdx" creationdate="20141111T123611Z">
        <seg>如果你是从 Ant 转过来的，像&lt;s0&gt;&lt;e1&gt;Copy&lt;/e1&gt;&lt;/s0&gt;这种增强的 Gradle 任务，看起来就像是一个 Ant 目标（target）和一个 Ant 任务（task）之间的混合物。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you are familiar with the approach used by either Maven or Ivy you will be delighted to learn that Gradle is fully compatible with both approaches in addition to being flexible enough to support fully-customized approaches.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150714T080333Z" creationid="haohang" creationdate="20150714T080333Z">
        <seg>如果您熟悉使用 Maven 或 Ivy 的方法，那么你会很高兴地知道，Gradle 完全兼容这两种方法，除此之外，它还有足够的灵活性，以支持完全自定义的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you are migrating from a tool like Ant or Maven to Gradle, you may be faced with some difficult situations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150716T040006Z" creationid="haohang" creationdate="20150716T040006Z">
        <seg>如果你从一个像 Ant 或 Maven 这样的工具迁移到 Gradle，你可能会面临一些困难的情况。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you are tired of using the same command line options again and again, take a look at &lt;a2&gt;Section 20.1, “Configuring the build environment via gradle.properties”&lt;/a2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141118T095844Z" creationid="msdx" creationdate="20141118T095844Z">
        <seg>如果你已经厌倦反复使用相同的命令行选项，可以看看&lt;a2&gt;第 20.1 章节，“通过 gradle.properties 配置构建环境”&lt;/a2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you are using one of the tasks that come with Gradle, such as a task added by the Java plugin, you might have noticed that Gradle will skip tasks that are up-to-date.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T060126Z" creationid="msdx" creationdate="20141111T055925Z">
        <seg>如果您使用 Gradle 自带的任务，如 Java 插件所添加的任务的话，你可能已经注意到 Gradle 将跳过处于最新状态的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you are working with a distributed version control system like Git you probably don't want to use the version control system to store libraries as people check out the whole history.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151201T063043Z" creationid="haohang" creationdate="20151201T063043Z">
        <seg>如果您是使用像 Git 一样的分布式版本控制系统，由于人们会检出整个历史，你可能不想使用版本控制系统来保存这些库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you call &lt;c1&gt;allprojects&lt;/c1&gt; with a closure, the statements of the closure are delegated to the projects associated with &lt;c2&gt; allprojects&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160527T161639Z" creationid="95" creationdate="20160527T161639Z">
        <seg>如果你使用一个闭包调用&lt;c1&gt;allprojects&lt;/c1&gt;，这个闭包的声明会被委托给与&lt;c2&gt;allprojects&lt;/c2&gt;关联的项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you come from Ivy land, you might expect some more fine grained control.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T084341Z" creationid="haohang" creationdate="20160726T084341Z">
        <seg>如果你是从Ivy转过来的，你可能想要一些更细粒度的控制。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you come from Maven land you might be perfectly happy with this.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T084315Z" creationid="haohang" creationdate="20160726T084315Z">
        <seg>如果你是从Maven中转过来的，那么你会对这一点很满意。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you declare a module dependency, Gradle looks for a corresponding module descriptor file (&lt;c0&gt;pom.xml&lt;/c0&gt; or &lt;c1&gt;ivy.xml&lt;/c1&gt;) in the repositories.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150724T035152Z" creationid="haohang" creationdate="20150724T035152Z">
        <seg>如果你定义了一个模块依赖，Gradle 会在仓库中查找相应的模块描述符文件（&lt;c0&gt;pom.xml&lt;/c0&gt;或&lt;c1&gt;ivy.xml&lt;/c1&gt;）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you declare with &lt;c0&gt;dependsOn&lt;/c0&gt; a &lt;s1&gt;&lt;e2&gt;execution dependency&lt;/e2&gt;&lt;/s1&gt; between different projects, the default behavior of this method is to create also a &lt;s3&gt;&lt;e4&gt;configuration&lt;/e4&gt;&lt;/s3&gt; dependency between the two projects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160722T090341Z" creationid="haohang" creationdate="20160722T090341Z">
        <seg>如果你通过&lt;c0&gt;dependsOn&lt;/c0&gt;声明了不同的项目之间的&lt;s1&gt;&lt;e2&gt;执行依赖&lt;/e2&gt;&lt;/s1&gt;，该方法的默认行为也会创建这两个项目之间的&lt;s3&gt;&lt;e4&gt;配置&lt;/e4&gt;&lt;/s3&gt;依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you define an exclude for a particular configuration, the excluded transitive dependency will be filtered for all dependencies when resolving this configuration or any inheriting configuration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T100123Z" creationid="haohang" creationdate="20150801T094951Z">
        <seg>如果你为一个特定的配置定义一个 exclude，则解析此配置或任何继承的配置时，对于所有的依赖，所排除的传递依赖将会被过滤掉。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you don't model your dependencies as a hierarchical tree of first-level and second-level dependencies it is very easy to quickly lose control over an assembled mess of unstructured dependencies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150720T061334Z" creationid="haohang" creationdate="20150720T061334Z">
        <seg>如果你不把你的依赖作为层次结构树的第一级和第二级依赖的模型，那么在对未组织的依赖进行混乱的组装之后，就会很容易地失去控制。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you don't specify anything explicitly, Gradle uses the default configuration of the dependency.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T032438Z" creationid="haohang" creationdate="20150807T032438Z">
        <seg>如果你不显式指定任何东西，Gradle 会使用依赖的默认配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you don't use transitive dependency management, version conflicts are undetected and the often accidental order of the classpath will determine what version of a dependency will win.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150721T054515Z" creationid="haohang" creationdate="20150721T054515Z">
        <seg>如果你不使用传递依赖管理，版本冲突没被发现，那么在类路径中无法预测的顺序，将导致不知道会使用哪一个版本的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you don't want this transitive behavior, simply declare your &lt;c11&gt;provided&lt;/c11&gt; dependencies like &lt;c12&gt;commons-httpclient:commons-httpclient:3.0@jar&lt;/c12&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T092101Z" creationid="msdx" creationdate="20150503T091943Z">
        <seg>如果你不想要这种传递行为，只是把&lt;c11&gt;provided&lt;/c11&gt;依赖声明成和&lt;c12&gt;commons-httpclient:commons-httpclient:3.0@jar&lt;/c12&gt;一样。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you edit them, you are given options to "Always Show Live Output." This only applies if you have 'Only Show Output When Errors Occur'.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T155832Z" creationid="msdx" creationdate="20141105T155832Z">
        <seg>如果你在编辑它们的时候，选上“始终显示实时输出”，它只有在你选上“当发生错误时才显示输出”时有效。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you execute the build from the &lt;c1&gt;messages&lt;/c1&gt; project Gradle executes them both because they have the same name and they are down the hierarchy.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T070841Z" creationid="haohang" creationdate="20160718T070841Z">
        <seg>如果你从 &lt;c1&gt;messages&lt;/c1&gt; 项目执行构建，Gradle 会执行它们两个，因为他们具有相同的名称，并且它们在该层次结构下。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you happen to use additional Sonar plugins, consult their documentation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T064322Z" creationid="msdx" creationdate="20150513T064322Z">
        <seg>如果你碰巧使用另外的 Sonar 插件，请参考它们的文档。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you have a problem with your build, try temporarily disabling the daemon (you can pass the command line switch &lt;c0&gt;--no-daemon&lt;/c0&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141118T100446Z" creationid="msdx" creationdate="20141118T100309Z">
        <seg>如果你的构建有问题，请尝试暂时禁用守护进程 （您可以通过使用命令行开关&lt;c0&gt;--no-daemon&lt;/c0&gt;)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you have just gotten the latest version of source from your version control system which included changes in other projects that :api depends on, you might want to not only build all the projects you depend on, but test them as well.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160727T052114Z" creationid="haohang" creationdate="20160727T051923Z">
        <seg>如果你只是刚刚从你的版本控制系统中获取到最新的代码，它包含了:api依赖的其他项目的修改，你可能不只想构建所有你依赖的项目，还想对它们进行测试。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you have more than one artifact to publish, things work a little bit differently.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T143257Z" creationid="95" creationdate="20160106T143218Z">
        <seg>如果你有超过一个的artifact 要发布，那么要做的事情就会有些不同。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you haven't had to deal with the curse of conflicting versions of jars on a classpath, here is a small anecdote of the fun that awaits you.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150721T055320Z" creationid="haohang" creationdate="20150721T055320Z">
        <seg>如果你还没有处理过在类路径中 jar 包版本冲突的麻烦，这里有一个小趣闻等着你。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you make these types of changes, it is not sufficient to test just the :api project, you also need to test all projects that depend on the :api project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160727T052459Z" creationid="haohang" creationdate="20160727T052459Z">
        <seg>如果你做这一类的修改，只测试:api 项目并不足够，你还需要测试依赖于:api项目的所有项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you manually define a path variable pointing to the Gradle dependency cache, IDEA will automatically replace the absolute dependency paths with this path variable.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T092229Z" creationid="haohang" creationdate="20150625T092229Z">
        <seg>如果您手动定义路径变量来指向 Gradle 依赖缓存，IDEA 会自动把绝对依赖路径替换为此路径变量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you need to set other properties from the command line, you can use system properties to do so:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T054023Z" creationid="msdx" creationdate="20150513T054023Z">
        <seg>如果你需要从命令行设置其他属性，你可以使用系统属性来做：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you only work with flat directory resolvers you don't need to set all attributes of a dependency.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T110314Z" creationid="95" creationdate="20151006T110314Z">
        <seg>如果你只使用平面目录解析器，那么你不需要去设置一个依赖的所有属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you run Gradle with the &lt;c1&gt;--recompile-scripts&lt;/c1&gt; option, the cached script is discarded and the script is compiled and stored in the cache.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T153746Z" creationid="msdx" creationdate="20141109T153623Z">
        <seg>如果您通过&lt;c1&gt;--recompile-scripts&lt;/c1&gt;选项运行 Gradle ，会丢弃缓存的脚本，然后重新编译此脚本并将其存在缓存中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you run this from your Gradle project working directory, you should see a tree of tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T150113Z" creationid="msdx" creationdate="20141105T150113Z">
        <seg>如果你在你的Gradle项目目录下运行Gradle GUI，你应该会看到一个任务树。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you trigger a multiproject build from the directory where the settings file is, things are easy.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T070832Z" creationid="haohang" creationdate="20160519T070753Z">
        <seg>如果你在一个有设置文件的目录中触发一个多项目构建，那很简单。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you try to manage transitive dependencies yourself, the end of the story is that your build becomes brittle: no one dares to change your dependencies because the risk of breaking the build is too high.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150721T011734Z" creationid="haohang" creationdate="20150721T011734Z">
        <seg>如果你尝试自己管理传递依赖，最终的结果是你的构建会变得很脆弱：没有人敢去改变你的依赖，因为破坏构建的风险太高。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you try using the daemon for your local builds it's going to be hard for you to go back to regular use of Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141117T142229Z" creationid="msdx" creationdate="20141117T142229Z">
        <seg>如果你尝试在你的本地构建中使用守护进程的话，它会变得让你很难回到正常的 Gradle 使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you upload your project into a repository, this JAR is declared as part of the dependency descriptor.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T144753Z" creationid="msdx" creationdate="20150428T144753Z">
        <seg>如果你把你的项目上传到仓库，这个JAR 文件会被声明为依赖描述符的一部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you use Archiva, Nexus, or Artifactory, Gradle is 100% compatible with all repository formats.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150716T021758Z" creationid="haohang" creationdate="20150716T021758Z">
        <seg>如果你使用 Archiva， Nexus，或者是 Artifactory, Gradle 100% 兼容所有仓库的格式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you use client modules the dependency declaration in the XML descriptor file is not correct.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T091944Z" creationid="haohang" creationdate="20150801T091944Z">
        <seg>如果你使用了客户端模块，在 XML 描述符文件中的依赖声明就会不正确。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you use such a path variable, you need to configure this path variable via &lt;c0&gt;idea.pathVariables&lt;/c0&gt;, so that it can do a proper merge without creating duplicates.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T092334Z" creationid="haohang" creationdate="20150625T092334Z">
        <seg>如果你使用这种路径变量，您需要通过 &lt;c0&gt;idea.pathVariables&lt;/c0&gt; 配置此路径变量，以便它可以做适当的合并而不会重复创建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you want to exclude a transitive dependency from all your configurations you can use the Groovy spread-dot operator to express this in a concise way, as shown in the example.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T100438Z" creationid="haohang" creationdate="20150801T100422Z">
        <seg>如果你想要从你的所有配置中排除传递依赖，你可以用简明的方式，使用 Groovy 的 spread-dot 运算符来表示，如这个例子所示例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you want to get rid of a first level dependency you really can't be sure which other jars you should remove.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150720T065154Z" creationid="haohang" creationdate="20150720T065154Z">
        <seg>如果你想要摆脱第一级的依赖，你不能真正确定还有哪些 jar 文件你是需要删除的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you want to make this the default behavior, add &lt;c2&gt;tasks.eclipse.dependsOn(cleanEclipse)&lt;/c2&gt; to your build script.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T103321Z" creationid="haohang" creationdate="20150624T103321Z">
        <seg>如果你想要让它成为默认行为，请将&lt;c2&gt;tasks.eclipse.dependsOn(cleanEclipse)&lt;/c2&gt;添加到构建脚本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you want to make this the default behavior, add &lt;c2&gt;tasks.idea.dependsOn(cleanIdea)&lt;/c2&gt; to your build script.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T073520Z" creationid="haohang" creationdate="20150625T073520Z">
        <seg>如果你想要让它成为默认行为，请将&lt;c2&gt;tasks.idea.dependsOn(cleanIdea)&lt;/c2&gt;添加到构建脚本中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you want to tweak where the announcements go, you can configure the &lt;a0&gt;announce&lt;/a0&gt; plugin to change the local announcer.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T091724Z" creationid="haohang" creationdate="20150628T091724Z">
        <seg>如果您想要调整公告的位置，你可以配置 &lt;a0&gt;announce&lt;/a0&gt; 插件来更改本地的announcer。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you want to use a (flat) filesystem directory as a repository, simply type:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150910T012032Z" creationid="haohang" creationdate="20150910T011835Z">
        <seg>如果你想要把一个（平面）文件系统目录作为仓库使用，只需输入：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you work for example with Maven repositories, you need to define the group, name and version.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T103502Z" creationid="haohang" creationdate="20150801T103413Z">
        <seg>例如，如果你使用 Maven 仓库，你需要定义group，name 和 version。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you work with Ivy repositories and want to declare a non-default configuration for your dependency you have to use the map notation and declare:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T032706Z" creationid="haohang" creationdate="20150807T032706Z">
        <seg>如果你使用 Ivy 存储库，并且想要为你的依赖定义一个非默认配置，就要使用 map 标记法并且声明：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you work with Maven repositories you don't have the flexibility as described above.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151227T160712Z" creationid="95" creationdate="20151227T160712Z">
        <seg>如果你使用 Maven 仓库，由没有如上文所述的灵活性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you work with filesystem repositories you might only need the name or the name and the version.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T103534Z" creationid="haohang" creationdate="20150801T103534Z">
        <seg>如果你使用文件系统仓库，你可能只需要 name 或 name 和 version。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If your &lt;c1&gt;application&lt;/c1&gt; directory doesn't contain a &lt;c2&gt;META-INF/application.xml&lt;/c2&gt; deployment descriptor then one will be generated for you.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T142806Z" creationid="msdx" creationdate="20150504T142806Z">
        <seg>如果你的&lt;c1&gt;application&lt;/c1&gt;目录没有包含&lt;c2&gt;META-INF/application.xml&lt;/c2&gt;部署描述符，那么将会为你生成一个。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If your Java application requires a specific set of JVM settings or system properties, you can configure the &lt;c0&gt;applicationDefaultJvmArgs&lt;/c0&gt; property.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150702T104727Z" creationid="haohang" creationdate="20150702T104727Z">
        <seg>如果你的 Java 应用程序需要一组特定的 JVM 设置或系统属性，你可以配置&lt;c0&gt;applicationDefaultJvmArgs&lt;/c0&gt;属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If your build only produces one distribution you only need to configure this distribution (or use the defaults).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150701T030442Z" creationid="haohang" creationdate="20150701T030442Z">
        <seg>如果你的构建只产生一个 distribution，你只需要配置这一个 distribution（或使用默认值）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If your build script relies on optional properties the user might set for example in a gradle.properties file, you need to check for existence before you can access them.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T151857Z" creationid="msdx" creationdate="20141109T151840Z">
        <seg>如果您的构建脚本依赖于一些可选属性，而这些属性用户可能在比如 gradle.properties 文件中设置，您就需要在访问它们之前先检查它们是否存在。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If your main concern is bad metadata in the POM file and maintaining custom XML descriptors, &lt;s0&gt;&lt;e1&gt;Client Modules&lt;/e1&gt;&lt;/s0&gt; offer an alternative.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151201T063605Z" creationid="haohang" creationdate="20151201T063605Z">
        <seg>如果你主要关心的是 POM 文件和维护的自定义 XML 描述符中的元数据不正确，&lt;s0&gt;&lt;e1&gt;客户端模块&lt;/e1&gt;&lt;/s0&gt;提供了一种替代方案。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If your project generates files to be included in the distribution, e.g. documentation, you can add these files to the distribution by adding to the &lt;c0&gt;applicationDistribution&lt;/c0&gt; copy spec.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150703T100401Z" creationid="haohang" creationdate="20150703T100401Z">
        <seg>如果你的项目生成的文件中要在 distrubution 中，例如文档，你可以通过把它们添加到&lt;c0&gt;applicationDistribution&lt;/c0&gt;复制规范，来将这些文件添加到 distribution 中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If your project is supposed to be used as a library, you need to define what are the artifacts of this library and what are the dependencies of these artifacts.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151227T152412Z" creationid="95" creationdate="20151226T093139Z">
        <seg>如果你的项目是作为一个库使用，你需要定义这个库的构件是什么，以及这些构件的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If your project relies on the Maven Central repository you are likely to need an additional custom repository, because:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151130T050826Z" creationid="haohang" creationdate="20151130T050826Z">
        <seg>如果您的项目依赖于 Maven 中央仓，你很可能需要额外的自定义仓库，因为：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If your proxy requires NTLM authentication, you may need to provide the authentication domain as well as the username and password.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141121T142430Z" creationid="msdx" creationdate="20141121T142415Z">
        <seg>如果您的代理服务器需要 NTLM 身份验证，您可能需要提供验证域，以及用户名和密码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Imagine a releasable unit defined by all libraries that have 'org.gradle' group.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T061441Z" creationid="95" creationdate="20151115T061441Z">
        <seg>想象一下，一个可发布的单位，由有“org.gradle” 组的所有库定义。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Implementing your own custom task class in Gradle is easy.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T143537Z" creationid="95" creationdate="20160814T143537Z">
        <seg>在Gradle中实现你的自定义任务类并不难。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Important information messages</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T070723Z" creationid="msdx" creationdate="20141116T070723Z">
        <seg>重要的信息消息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Importing an Ant build</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150330T141248Z" creationid="Administrator" creationdate="20150330T141248Z">
        <seg>导入 Ant 构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Improved HTML reporting, similar to that available for JUnit.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T151738Z" creationid="95" creationdate="20160504T151738Z">
        <seg>改进 HTML 报告，类似于 JUnit 提供的那样。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In &lt;a0&gt;Section 6.5, “Task dependencies”&lt;/a0&gt; you were introduced to defining dependencies using task names.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T100215Z" creationid="msdx" creationdate="20141110T100145Z">
        <seg>在&lt;a0&gt;第 6.5 章节，"任务依赖"&lt;/a0&gt;中，已经向你介绍了使用任务名称来定义依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In &lt;a1&gt;Table 18.3, “Stacktrace command-line options”&lt;/a1&gt; you find the command line switches which affect stacktrace logging.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T102827Z" creationid="msdx" creationdate="20141116T102827Z">
        <seg>在&lt;a1&gt;表 18.3，“栈跟踪的命令行选项”&lt;/a1&gt;中，你可以看到影响栈跟踪日志的命令行开关。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In &lt;s5&gt;&lt;e6&gt;this&lt;/e6&gt;&lt;/s5&gt; case there would be an easier solution by reading the key property at execution time.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T085912Z" creationid="haohang" creationdate="20160718T085912Z">
        <seg>在&lt;s5&gt;&lt;e6&gt;这种&lt;/e6&gt;&lt;/s5&gt;情况下，通过在执行时读key属性是一种更简单的解决方案。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In Gradle a dependency can have different configurations (as your project can have different configurations).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T032420Z" creationid="haohang" creationdate="20150801T103727Z">
        <seg>在 Gradle ，一个依赖可以有不同的配置 (就像你的项目可以有不同的配置)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In Gradle and Ivy, a module can have multiple artifacts.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150724T035620Z" creationid="haohang" creationdate="20150724T035620Z">
        <seg>在 Gradle 和 Ivy 中，一个模块可以具有多个 artifacts。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In Gradle build scripts are optional.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160522T125635Z" creationid="95" creationdate="20160522T125635Z">
        <seg>在 Gradle 中，构建脚本是可选的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In Gradle dependencies are grouped into configurations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T075138Z" creationid="haohang" creationdate="20150722T075058Z">
        <seg>在 Gradle 中，依赖被分组到配置中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In Gradle terms this means that you can define tasks and dependencies between tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160518T031753Z" creationid="haohang" creationdate="20160518T031753Z">
        <seg>用 Gradle 的话说，这意味着您可以定义任务和任务之间的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In Gradle, when you declare a dependency on an Ivy module, you actually declare a dependency on the &lt;c2&gt;default&lt;/c2&gt; configuration of that module.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150730T033021Z" creationid="haohang" creationdate="20150730T032839Z">
        <seg>在 Gradle 中，当你声明一个对 Ivy 模块的依赖时，实际上你是在那个模块的 &lt;c2&gt;default&lt;/c2&gt; 配置上声明了一个依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In Java, there is no standard way to tell the JVM that you are using version 3.0.5 of Hibernate, and there is no standard way to say that &lt;c0&gt;foo-1.0.jar&lt;/c0&gt; depends on &lt;c1&gt;bar-2.0.jar&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150716T073915Z" creationid="haohang" creationdate="20150716T073915Z">
        <seg>在 Java 中，没有标准的方法来告诉 JVM 你使用的是 3.0.5 版本的 Hibernate，也没有标准的方法来表明 &lt;c0&gt;foo-1.0.jar&lt;/c0&gt; 依赖于 &lt;c1&gt;bar-2.0.jar&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In Maven you can define repositories and optionally snapshot repositories.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T141656Z" creationid="95" creationdate="20160105T141644Z">
        <seg>在 Maven 中你可以定义仓库和snapshot仓库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In Maven, a module can have one and only one artifact.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150724T035603Z" creationid="haohang" creationdate="20150724T035603Z">
        <seg>在 Maven 中，一个模块仅能有一个 artifact。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In TestNG you can specify different test groups.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T082928Z" creationid="msdx" creationdate="20150428T082928Z">
        <seg>在 TestNG 中你可以指定不同的测试组。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In a future Gradle release, this will become the default.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T135519Z" creationid="Administrator" creationdate="20150427T135519Z">
        <seg>在未来的 Gradle 版本中，将把它作为默认设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In a future edition of this user guide we might write more about this.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160727T053229Z" creationid="haohang" creationdate="20160727T053229Z">
        <seg>在本用户指南的未来版本中，我们可能会写一下与之有关的更多内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In a large project with 30 submodules, adding a dependency to a subproject changed the order of a classpath, swapping Spring 2.5 for an older 2.4 version.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150721T055545Z" creationid="haohang" creationdate="20150721T055545Z">
        <seg>在一个有30个子模块的大型项目中，向子项目添加的一个依赖改变了类路径的顺序， Spring 2.5 与老的 2.4 版本的顺序被交换。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In a multi project build, &lt;c2&gt;systemProp.&lt;/c2&gt; properties set in any project except the root will be ignored.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T150501Z" creationid="msdx" creationdate="20141109T150451Z">
        <seg>在多项目构建中，除了在根项目之外的任何项目里的 &lt;c2&gt;systemProp.&lt;/c2&gt;属性集都将被忽略。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In a multi-project build, analysis files are passed on to downstream &lt;c1&gt;ScalaCompile&lt;/c1&gt; tasks to enable incremental compilation across project boundaries.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T155648Z" creationid="msdx" creationdate="20150501T155605Z">
        <seg>在多项目构建中，分析文件被传递给下游的&lt;c1&gt;ScalaCompile&lt;/c1&gt;任务，以启用跨项目的增量编译。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In a typical setup, analysis would be performed once per day on a build server.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150510T143228Z" creationid="msdx" creationdate="20150510T143228Z">
        <seg>在典型的设置中，会每天在构建服务器上运行一次分析。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In addition to supporting a traditional command line interface, Gradle offers a graphical user interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T145924Z" creationid="msdx" creationdate="20141105T145546Z">
        <seg>除了支持传统的命令行界面，Gradle也提供了一个图形用户界面（GUI）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In addition, user interfaces can provide some interesting features if the Gradle model can be built relatively quickly.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141117T141712Z" creationid="msdx" creationdate="20141117T140108Z">
        <seg>此外，如果可以相对较快地建立 Gradle 模型，用户界面可以提供一些有趣的功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In an enterprise environment this is rather common.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151201T070830Z" creationid="haohang" creationdate="20151201T070830Z">
        <seg>在企业环境中，这是相当普遍的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In both cases, all fork options specified with &lt;c2&gt;options.forkOptions&lt;/c2&gt; will be honored.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T140211Z" creationid="Administrator" creationdate="20150427T140211Z">
        <seg>在这两种情况下，使用&lt;c2&gt;options.forkOptions&lt;/c2&gt;指定的所有fork选项都将得到重视。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In case of version conflicts between dependencies of the subset and dependencies not belonging to the subset the resolve result might be different.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T041214Z" creationid="haohang" creationdate="20150807T041214Z">
        <seg>在子集的依赖和不属于子集的依赖之间，存在版本冲突的情况下，解析的结果可能会有所不同。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In case this property does not exists, an exception is thrown and the build fails.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T151423Z" creationid="msdx" creationdate="20141109T151423Z">
        <seg>如果此属性不存在，则会引发异常，并且构建失败。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In case you don't want to use the test class detection, you can disable it by setting &lt;c0&gt;scanForTestClasses&lt;/c0&gt; to false.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T081814Z" creationid="Administrator" creationdate="20150428T081814Z">
        <seg>如果你不想要使用测试类检测，可以通过设置&lt;c0&gt;scanForTestClasses&lt;/c0&gt;为 false 来禁用它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In configuration on demand mode projects are configured as follows:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160522T122044Z" creationid="95" creationdate="20160522T121957Z">
        <seg>在按需配置的模式下项目会如下配置︰</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In contrast to Maven, where this path is fixed, with Gradle you can define a pattern that defines what the path will look like.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T134540Z" creationid="95" creationdate="20151006T134540Z">
        <seg>相比于固定路径的 Maven，使用 Gradle 你可以定义一个模式，该模式定义了路径的样子。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In contrast to the command line reports, the report plugin generates the reports into a file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150626T095722Z" creationid="haohang" creationdate="20150626T095722Z">
        <seg>与命令行报告相比，报告插件将报告生成到一个文件中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In doing so, Gradle enables reliable and reproducible enterprise builds.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T043856Z" creationid="95" creationdate="20151129T043856Z">
        <seg>在此过程中，Gradle 实现了可靠和可重复的的企业构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In dynamic resolve mode, Gradle will instead prefer the &lt;c2&gt;revConstraint&lt;/c2&gt; attribute over the &lt;c3&gt;rev&lt;/c3&gt; attribute for a given dependency definition.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T091218Z" creationid="95" creationdate="20151115T091218Z">
        <seg>在动态解析模式中，Gradle 将优先使用&lt;c2&gt;revConstraint&lt;/c2&gt;属性来代替&lt;c3&gt;rev&lt;/c3&gt;属性，用于一个给定的依赖定义。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In each case, the tool chain will target the current operating system.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T092057Z" creationid="haohang" creationdate="20160408T092036Z">
        <seg>在每种情况中，工具链将针对当前的操作系统。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In every other respect, a Groovy project is identical to a Java project, which we have already seen in &lt;a1&gt;Chapter 7, &lt;i2&gt;Java Quickstart&lt;/i2&gt;&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T070345Z" creationid="msdx" creationdate="20141030T061216Z">
        <seg>在其他各方面，Groovy项目与我们在&lt;a1&gt;第七章&lt;i2&gt;Java快速入门&lt;/i2&gt;&lt;/a1&gt;中所看到的Java项目几乎相同 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In example below, imagine that version &lt;c0&gt;1.2.1&lt;/c0&gt; contains important fixes and should always be used in preference to &lt;c1&gt;1.2&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T071446Z" creationid="95" creationdate="20151115T070923Z">
        <seg>在下面的示例中，想象版本&lt;c0&gt;1.2.1&lt;/c0&gt;包含了重要的修复程序，并应始终优先于&lt;c1&gt;1.2&lt;/c1&gt;使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In fact, Gradle's deployment is 100 percent Maven compatible as we use the native Maven Ant tasks under the hood.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160104T153457Z" creationid="95" creationdate="20160104T153457Z">
        <seg>事实上，Gradle 的部署是 100%兼容 Maven的，因为我们在hood下使用的是本地的 Maven Ant 任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In fact, a configuration can contain both artifacts and dependencies at the same time.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151220T123616Z" creationid="95" creationdate="20151220T123616Z">
        <seg>事实上，配置可以同时包含构件和依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In fact, some of those repositories allow only for artifact downloading.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151226T091803Z" creationid="95" creationdate="20151226T091803Z">
        <seg>实际上，有些仓库只允许下载构件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In fact, you will find that it's far easier and more powerful using Ant tasks in a Gradle build script, than it is to use Ant's XML format.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141114T071639Z" creationid="msdx" creationdate="20141114T071520Z">
        <seg>事实上，你会发现在 Gradle 中使用 Ant 任务比使用 Ant 的XML 格式更容易也更强大。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In future the daemon will offer more features:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141117T143034Z" creationid="msdx" creationdate="20141117T143034Z">
        <seg>未来，该守护进程还会提供更多的功能：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In general, snappy behavior of the build tool is always handy.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141117T142044Z" creationid="msdx" creationdate="20141117T142044Z">
        <seg>一般情况下，构建工具的敏捷行为总是可以派上用场。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In general, using Groovy is the easiest option, because the Gradle API is designed to work well with Groovy.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T143839Z" creationid="95" creationdate="20160814T143839Z">
        <seg>一般情况下，使用Groovy是最简单的选择，因为Gradle API就是被设计为能使用Groovy良好地执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In majority of cases the project path is consistent with the physical location of the project in the file system.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T041003Z" creationid="haohang" creationdate="20160519T041003Z">
        <seg>在大多数情况下，项目路径是符合在文件系统中项目的物理位置的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In many cases, more than one native binary can be produced for a component.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160219T065539Z" creationid="haohang" creationdate="20160219T065451Z">
        <seg>在许多情况下，一个组件可以产生超过一个的原生二进制文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In most cases, Gradle's default dependency management will resolve the dependencies that you want in your build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T053904Z" creationid="95" creationdate="20151115T053904Z">
        <seg>在大多数情况下，Gradle 的默认依赖管理将会在你的构建中按你所想的解析依赖关系。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In multi-project builds you may often want to do all of these tasks across a range of projects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T094806Z" creationid="haohang" creationdate="20160726T094714Z">
        <seg>在多项目构建中，你可能经常想跨多项目范围执行这些任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In order to create PGP signatures, you will need a key pair (instructions on creating a key pair using the &lt;a0&gt;GnuPG tools&lt;/a0&gt; can be found in the &lt;a1&gt;GnuPG HOWTOs&lt;/a1&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160108T151330Z" creationid="95" creationdate="20160108T151330Z">
        <seg>为了创建 PGP 签名，你将需要一个密钥对（有关使用&lt;a0&gt;GnuPG 工具&lt;/a0&gt;创建密钥对的介绍可以在&lt;a1&gt;GnuPG Howto&lt;/a1&gt;中找到）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In other words, a standard Maven snapshot is a module that never stands still so to speak, it is a "changing module".</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T011916Z" creationid="haohang" creationdate="20150722T011916Z">
        <seg>换句话说，一个标准的 Maven snapshot 是一个这样的模块，它永远不会不变，可以说，它是“不断变化的模块”。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In other words, everything except the Ant tasks and types.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141114T072401Z" creationid="msdx" creationdate="20141114T072401Z">
        <seg>换句话说，除了 Ant 任务和类型之外全部都有。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In our examples, we are going to use Groovy as the implementation language, but you could use, for example, Java or Scala.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T143719Z" creationid="95" creationdate="20160814T143719Z">
        <seg>在我们的例子中，我们将使用Groovy来作为实现的语言，但你也可以使用Java或者是Scala。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In our examples, we will start with the task class in the build script, to keep things simple.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T145256Z" creationid="95" creationdate="20160814T145256Z">
        <seg>在我们的例子中，为了简单，我们将从在构建脚本中定义任务类开始。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In our next release we want to enable partial builds from subprojects by specifying the location of the settings file as a command line parameter.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T080249Z" creationid="haohang" creationdate="20160519T080249Z">
        <seg>在我们下一版本中，我们想通过在命令行参数中，指定一个设置文件的路径，来从子项目中启用部分的构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In particular, only the Sonar Runner plugin supports Sonar 3.4 and higher.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150507T065257Z" creationid="msdx" creationdate="20150507T065257Z">
        <seg>尤其是因为只有 Sonar Runner 插件支持
Sonar 3.4 及更高的版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In return, you get total control over the generated file, including sections not modeled by the domain objects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T070437Z" creationid="haohang" creationdate="20150625T070437Z">
        <seg>作为回报，你可以对生成的文件进行全面的控制，包括未由域对象建模的那些部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In short, version conflicts are bad, and you should manage your transitive dependencies to avoid them.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150721T055842Z" creationid="haohang" creationdate="20150721T055800Z">
        <seg>总之，版本冲突是很不好的，你应该管理你的传递依赖，以避免它们。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In some cases it is useful to control the &lt;s0&gt;&lt;e1&gt;order&lt;/e1&gt;&lt;/s0&gt; in which 2 tasks will execute, without introducing an explicit dependency between those tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T143155Z" creationid="msdx" creationdate="20141110T142923Z">
        <seg>在某些情况下，控制两个任务的执行的&lt;s0&gt;&lt;e1&gt;顺序&lt;/e1&gt;&lt;/s0&gt;，而不引入这些任务之间的显式依赖，是很有用的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In some cases the artifact that you need to sign may not be part of a configuration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160109T072925Z" creationid="95" creationdate="20160109T072615Z">
        <seg>在某些情况下，你需要签名的artifact 可能不是配置的一部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In some cases, however, it can be necessary to tweak dependency resolution to ensure that your build receives exactly the right dependencies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T053942Z" creationid="95" creationdate="20151115T053942Z">
        <seg>然而，在某些情况下，会有必要调整依赖解析，以确保你的构建能得到正确的依赖关系。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In some corporate environments, the list of module versions that can be declared in gradle builds is maintained and audited externally.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T065215Z" creationid="95" creationdate="20151115T065215Z">
        <seg>在一些企业的环境中，可以声明在 gradle 构建中的模块版本列表，是在外部维护和审核的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In such a case you can use the path notation of the pattern, so that the pattern is applied only to the test task of a specific subproject.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T040133Z" creationid="Administrator" creationdate="20150428T040133Z">
        <seg>在这种情况下你可以使用路径标记法的模式，这样该模式就会只应用于特定的子项目的测试任务中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In such a case you need to generate multiple POMs. In such a case you have to explicitly declare each artifact you want to publish to a Maven repository.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T144127Z" creationid="95" creationdate="20160106T144127Z">
        <seg>在这种情况下，你需要生成多个 POMs。在这种情况下，你必须显式声明你想要发布到一个 Maven 仓库的每一个构件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In such a scenario, the custom task should sufficiently declare the inputs/outputs relevant to the copy action.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T140639Z" creationid="msdx" creationdate="20141113T140639Z">
        <seg>在这种情况下，自定义任务应充分声明与复制操作有关的输入/输出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the above case, we are using the short name ‘&lt;c0&gt;java&lt;/c0&gt;’ to apply the &lt;a1&gt;&lt;c2&gt;JavaPlugin&lt;/c2&gt;&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141122T162208Z" creationid="msdx" creationdate="20141122T162208Z">
        <seg>在上述例子中，我们使用短名称&lt;c0&gt;java&lt;/c0&gt;去应用&lt;a1&gt;&lt;c2&gt;JavaPlugin&lt;/c2&gt;&lt;/a1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the build file of the &lt;c0&gt;water&lt;/c0&gt; project we use an &lt;c1&gt;afterEvaluate&lt;/c1&gt; notification.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160530T144519Z" creationid="95" creationdate="20160530T144519Z">
        <seg>在这个&lt;c0&gt;water&lt;/c0&gt;项目的构建文件中，我们使用了一个&lt;c1&gt;afterEvaluate&lt;/c1&gt;通知。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the build script, the developer declares dependencies with the module group and name, but uses a placeholder version, for example: '&lt;c0&gt;default&lt;/c0&gt;'.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T070316Z" creationid="95" creationdate="20151115T070316Z">
        <seg>在构建脚本中，开发人员使用模块组与名称声明依赖，但使用占位符版本，例如：“&lt;c0&gt;default&lt;/c0&gt;”。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the case of the Ant javac task, this means that a new process will be forked for each compile task, which can slow down compilation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T135858Z" creationid="Administrator" creationdate="20150427T135858Z">
        <seg>在 Ant javac 任务中，这意味着将会为每一个compile任务fork一个新的进程，而这将会使编译变慢。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the current release client modules have one limitation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T091741Z" creationid="haohang" creationdate="20150801T091741Z">
        <seg>在当前版本客户端模块有一个缺陷。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the example above &lt;s0&gt;&lt;e1&gt;repository&lt;/e1&gt;&lt;/s0&gt; and &lt;s2&gt;&lt;e3&gt;authentication&lt;/e3&gt;&lt;/s2&gt; are such bean elements.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T135438Z" creationid="95" creationdate="20160105T135403Z">
        <seg>在上例中&lt;s0&gt;&lt;e1&gt;repository&lt;/e1&gt;&lt;/s0&gt;和&lt;s2&gt;&lt;e3&gt;authentication&lt;/e3&gt;&lt;/s2&gt;都是这样的 bean 元素。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the example above, &lt;c0&gt;orca&lt;/c0&gt; has a dependency on &lt;c1&gt;seal-1.0&lt;/c1&gt; whereas &lt;c2&gt;shark&lt;/c2&gt; has a dependency on&lt;c3&gt;seal-2.0&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T041717Z" creationid="haohang" creationdate="20150807T041717Z">
        <seg>在上面的例子中 &lt;c0&gt;orca&lt;/c0&gt; 依赖 &lt;c1&gt;seal-1.0&lt;/c1&gt; 而 &lt;c2&gt;shark&lt;/c2&gt; 依赖于 &lt;c3&gt;seal-2.0&lt;/c3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the example above, a library is defined with a 'english' and 'french' flavor.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T081321Z" creationid="haohang" creationdate="20160408T081202Z">
        <seg>在上面的示例中，library 定义了“english”和“french”两个flavor。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the example above, the content of the "&lt;c0&gt;src/readme&lt;/c0&gt;" directory will be included in the distribution (along with the files in the "&lt;c1&gt;src/dist/main&lt;/c1&gt;" directory which are added by default).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150701T034347Z" creationid="haohang" creationdate="20150701T034233Z">
        <seg>在上面的示例中，”&lt;c0&gt;src/readme&lt;/c0&gt;“目录的内容将被包含进 distribution（与默认添加的”&lt;c1&gt;src/dist/main&lt;/c1&gt;“目录中的文件一起）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the example above, we &lt;s1&gt;&lt;e2&gt;changed&lt;/e2&gt;&lt;/s1&gt; the desired location of the class files after this conventional configuration had been performed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141124T093240Z" creationid="msdx" creationdate="20141124T093240Z">
        <seg>在上面例子中，我们在约定配置被执行之后，&lt;s1&gt;&lt;e2&gt;修改了&lt;/e2&gt;&lt;/s1&gt;类文件所需的位置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the example above, we applied the Java plugin which, among other things, did the following:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141124T074010Z" creationid="msdx" creationdate="20141124T074010Z">
        <seg>在上面的示例中，我们应用 Java 插件，除其他外，还做了下列操作：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the examples above, it is still possible to execute &lt;c0&gt;taskY&lt;/c0&gt; without causing &lt;c1&gt;taskX&lt;/c1&gt; to run:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T013145Z" creationid="msdx" creationdate="20141111T013145Z">
        <seg>在上面的例子中，它仍有可能执行&lt;c0&gt;taskY&lt;/c0&gt;而不会导致&lt;c1&gt;taskX&lt;/c1&gt;也运行：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the following example, we create an Ant &lt;c0&gt;path&lt;/c0&gt; object, then iterate over the contents of it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T011213Z" creationid="msdx" creationdate="20141116T011213Z">
        <seg>在以下示例中，我们创建一个 Ant 的 &lt;c0&gt;path&lt;/c0&gt;对象，然后循环访问它的内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the introductory tutorial (&lt;a0&gt;Chapter 6, &lt;i1&gt;Build Script Basics&lt;/i1&gt;&lt;/a0&gt;) you have learned how to create simple tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T160034Z" creationid="msdx" creationdate="20141109T160034Z">
        <seg>在入门教程 （&lt;a0&gt;第 6 章，&lt;i1&gt;构建脚本基础&lt;/i1&gt;&lt;/a0&gt;） 中，你已经学习了如何创建简单的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the javadoc you can see the possible attributes you can set for a particular element.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T141540Z" creationid="95" creationdate="20160105T141540Z">
        <seg>在javadoc 中你可以看到可能的属性，这些属性你可以设置为特定的元素。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the last example only one &lt;c2&gt;action&lt;/c2&gt; was down the hierarchy and therefore it was the only task that got executed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T070927Z" creationid="haohang" creationdate="20160718T070927Z">
        <seg>在上一个例子中只有一个&lt;c2&gt;action&lt;/c2&gt;是在这个层次结构下，因此它是唯一一个被执行的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the latter case, an &lt;c3&gt;ivy.xml&lt;/c3&gt; descriptor in the repository is supposed to contain all the necessary information.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151227T160646Z" creationid="95" creationdate="20151227T160110Z">
        <seg>在后者的情况下，这个仓库的 &lt;c3&gt;ivy.xml&lt;/c3&gt;描述符应该包含所有必要的信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the long term, this mode will become the default mode, possibly the only mode for Gradle build execution.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160522T121821Z" creationid="95" creationdate="20160522T121821Z">
        <seg>长远来看，这种模式将成为默认模式，可能会是 Gradle 构建执行的唯一模式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the settings file you can use a set of methods to build the project tree.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T041203Z" creationid="haohang" creationdate="20160519T041203Z">
        <seg>在设置文件中你可以使用一套方法来生成项目树。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the tutorial in &lt;a0&gt;Chapter 7, &lt;i1&gt;Java Quickstart&lt;/i1&gt;&lt;/a0&gt; we used, for example, the &lt;c2&gt;apply()&lt;/c2&gt; method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T040102Z" creationid="msdx" creationdate="20141108T040102Z">
        <seg>在&lt;a0&gt;第 7 章， &lt;i1&gt;Java 快速入门&lt;/i1&gt;&lt;/a0&gt;的教程中，我们使用了 &lt;c2&gt;apply ()&lt;/c2&gt;方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this case the native Maven code we delegate to needs additional libraries.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T134615Z" creationid="95" creationdate="20160105T134435Z">
        <seg>在这种情况下，我们必须将委派本地的Maven代码给第三方库实现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this case you can add an environment property in the project administration section (invisible to normal users).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T141948Z" creationid="msdx" creationdate="20141109T141948Z">
        <seg>在这种情况下，您可以在项目管理部分 （对普通用户不可见） 添加一个环境属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this case you can directly sign the task that produces the artifact to sign.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160109T073050Z" creationid="95" creationdate="20160109T073050Z">
        <seg>在这种情况下，你可以直接签名生成了要签名的artifact 的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this chapter we will discuss how to use plugins and the terminology and concepts surrounding plugins.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141122T161831Z" creationid="msdx" creationdate="20141122T161831Z">
        <seg>在这一章中，我们将讨论如何使用插件以及术语和插件相关的概念。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this example :services:personservice depends on both :api and :shared.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T094923Z" creationid="haohang" creationdate="20160726T094923Z">
        <seg>在这个例子中 :services:personservice 同时依赖于 :api 和 :shared。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this example we create an &lt;s0&gt;&lt;e1&gt;additional&lt;/e1&gt;&lt;/s0&gt; library containing only the interfaces of the &lt;c2&gt;api&lt;/c2&gt; project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T084959Z" creationid="haohang" creationdate="20160726T084959Z">
        <seg>在这个示例中，我们创建了一个&lt;s0&gt;&lt;e1&gt;额外的&lt;/e1&gt;&lt;/s0&gt;的库，它只包含&lt;c2&gt;api&lt;/c2&gt;项目的接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this example, an &lt;c0&gt;ext&lt;/c0&gt; block adds two extra properties to the &lt;c1&gt;project&lt;/c1&gt; object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T053941Z" creationid="msdx" creationdate="20141108T051409Z">
        <seg>在此示例中， 一个&lt;c0&gt;ext&lt;/c0&gt;代码块将两个额外属性添加到&lt;c1&gt;project&lt;/c1&gt;对象中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this example, we only want to require signing if we are building a release version and we are going to publish it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160126T142545Z" creationid="95" creationdate="20160126T141430Z">
        <seg>在此示例中，我们只想要在我们构建一个我们即将去发布的发布版本的时候，才进行签名。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this example, we pass the message for the &lt;c0&gt;echo&lt;/c0&gt; task as nested text:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141115T154923Z" creationid="msdx" creationdate="20141115T154637Z">
        <seg>在此示例中，我们将把作为嵌套文本的消息传给 &lt;c0&gt;echo &lt;/c0&gt;任务：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this mode, Gradle configures only relevant projects (see &lt;a4&gt;Section 56.1.1.1, “Configuration on demand”&lt;/a4&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T024234Z" creationid="haohang" creationdate="20160519T024234Z">
        <seg>在此模式下，Gradle 只配置相关的项目（见&lt;a4&gt;第 56.1.1.1 节，“Configuration on demand"&lt;/a4&gt;）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this way, enhanced tasks let you reuse a piece of behaviour in many different places, possibly across different builds.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T143432Z" creationid="95" creationdate="20160814T143432Z">
        <seg>通过这种方式，增强型的任务能够让你在许多不同的地方，甚至是跨越不同的构建，利用同样的行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In your build script, a property called &lt;c0&gt;ant&lt;/c0&gt; is provided by Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141114T143323Z" creationid="msdx" creationdate="20141114T143323Z">
        <seg>在构建脚本中，Gradle 提供了一个名为 &lt;c0&gt;ant&lt;/c0&gt; 的属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Incremental compilation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T132109Z" creationid="msdx" creationdate="20150509T132109Z">
        <seg>增量编译</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Incremental compilation requires dependency analysis of the source code.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T155428Z" creationid="msdx" creationdate="20150501T155306Z">
        <seg>增量编译需要源代码的相关性分析。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Incubating integration plugins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131550Z" creationid="msdx" creationdate="20150509T131550Z">
        <seg>孵化中的集成插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Incubating language plugins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131539Z" creationid="msdx" creationdate="20150509T131539Z">
        <seg>正在孵化的语言插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Incubating software development plugins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131557Z" creationid="msdx" creationdate="20150509T131557Z">
        <seg>孵化中的软件开发插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Information messages</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T070738Z" creationid="msdx" creationdate="20141116T070738Z">
        <seg>信息性消息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Information pertaining to the analysis as a whole, like server and database connections settings, have to be configured in the &lt;c0&gt;sonarRunner&lt;/c0&gt; block of this project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150519T123943Z" creationid="msdx" creationdate="20150514T152429Z">
        <seg>与分析有关的信息作为一个整体，比如服务器和数据库的连接设置，必须在这一个 project 的&lt;c0&gt;sonarRunner&lt;/c0&gt;块中进行配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>InitBuild</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T071556Z" creationid="haohang" creationdate="20150707T071556Z">
        <seg>InitBuild</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Initialization</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160518T032555Z" creationid="haohang" creationdate="20160518T032555Z">
        <seg>初始化</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Installing Gradle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162029Z" creationid="msdx" creationdate="20141109T162029Z">
        <seg>安装 Gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Installs the application into a specified directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150702T105100Z" creationid="haohang" creationdate="20150702T105100Z">
        <seg>将应用程序安装到指定的目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Installs the associated artifacts to the local Maven cache, including Maven metadata generation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151228T152113Z" creationid="95" creationdate="20151228T152041Z">
        <seg>将相关的构件安装到本地的 Maven 缓存，包括 Maven 元数据的生成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Instead of using a task name, you can define a dependency using a &lt;c0&gt;Task&lt;/c0&gt; object, as shown in this example:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T122524Z" creationid="msdx" creationdate="20141110T122444Z">
        <seg>您可以使用一个&lt;c0&gt;Task&lt;/c0&gt;对象而不是任务名称来定义依赖，如下：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Instead, we plan to enhance Gradle's own compiler daemon to stay alive across Gradle invocations, reusing the same Scala compiler.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T081647Z" creationid="msdx" creationdate="20150503T081629Z">
        <seg>相反，我们打算加强 Gradle 自己的编译器守护进程，使得在跨 Gradle 调用时继续存活，利用同一个 Scala 编译器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Instructions for mapping Gradle configurations to Maven scopes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151228T153128Z" creationid="95" creationdate="20151228T152812Z">
        <seg>将Gradle配置映射到Maven scopes的说明。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Integer</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T151122Z" creationid="msdx" creationdate="20150504T151122Z">
        <seg>Integer</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Integration plugins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131545Z" creationid="msdx" creationdate="20150509T131545Z">
        <seg>集成插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>IntelliJ IDEA Integration</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T132135Z" creationid="msdx" creationdate="20150509T132135Z">
        <seg>IntelliJ IDEA 集成</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Internally, &lt;c5&gt;eclipse-wtp&lt;/c5&gt; also applies the &lt;c6&gt;eclipse&lt;/c6&gt; plugin so you don't need to apply both of those plugins.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T003400Z" creationid="haohang" creationdate="20150603T003400Z">
        <seg>在内部， &lt;c5&gt;eclipse wtp&lt;/c5&gt;也应用了&lt;c6&gt;eclipse&lt;/c6&gt;插件，所以你不需要同时应用这两个插件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Internally, Gradle uses Ant and Ivy.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T130707Z" creationid="msdx" creationdate="20141116T130707Z">
        <seg>Gradle 内部使用 Ant 和 Ivy。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Introduction</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T161840Z" creationid="msdx" creationdate="20141109T161840Z">
        <seg>介绍</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Is this cool or is this cool?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160527T161145Z" creationid="95" creationdate="20160527T161145Z">
        <seg>是刚才的那个酷还是现在的这个酷？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It adds a default EAR archive task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T094310Z" creationid="msdx" creationdate="20150503T094310Z">
        <seg>它添加了一个默认的EAR archive task。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It adds an instance for each source set in the project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T134618Z" creationid="Administrator" creationdate="20150427T134618Z">
        <seg>它为该project里的每个源集添加一个实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It allows Gradle to provide conciseness through convention-over-configuration and sensible defaults yet not require complete reconfiguration if a conventional default needs to be changed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141124T110947Z" creationid="msdx" creationdate="20141124T095238Z">
        <seg>它可以令 Gradle 通过约定优于配置及合理的默认值来实现简洁的配置方式。而且，如果默认约定需要进行修改时，也不需要进行完全的重新配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It allows running and bundling applications for the jvm.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150701T035512Z" creationid="haohang" creationdate="20150701T035512Z">
        <seg>它允许为 jvm 运行和捆绑应用程序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It allows you to add &lt;s0&gt;&lt;e1&gt;conditional&lt;/e1&gt;&lt;/s0&gt; execution of the built-in actions of such a task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T055446Z" creationid="msdx" creationdate="20141111T055446Z">
        <seg>它允许您向一个任务的内置操作中添加执行&lt;s0&gt;&lt;e1&gt;条件&lt;/e1&gt;&lt;/s0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It also adds the dependencies of the other project to the classpath.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T084132Z" creationid="haohang" creationdate="20160726T084132Z">
        <seg>它也把其他项目的依赖添加到类路径中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It also can be used to force versions of first level dependencies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150721T091115Z" creationid="haohang" creationdate="20150721T091115Z">
        <seg>它也可以用于强制第一级依赖的版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It also creates a single distribution in the distributions container extension named "&lt;c3&gt;main&lt;/c3&gt;".</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150701T030303Z" creationid="haohang" creationdate="20150701T030109Z">
        <seg>它还在分发容器扩展中创建了一个名为“&lt;c3&gt;main&lt;/c3&gt;”的 distribution。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It also generates a report once test execution is complete.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T140309Z" creationid="Administrator" creationdate="20150427T140309Z">
        <seg>测试执行完成后，它还会生成一份报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It also leverages the &lt;c0&gt;wrapper&lt;/c0&gt; task from the Wrapper plugin (see &lt;a1&gt;Chapter 48, &lt;i2&gt;Wrapper Plugin&lt;/i2&gt;&lt;/a1&gt;), which means that the Gradle Wrapper will also be installed into the project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T071513Z" creationid="haohang" creationdate="20150707T071513Z">
        <seg>它还利用了 Wrapper 插件的 &lt;c0&gt;wrapper&lt;/c0&gt; 任务（见&lt;a1&gt;第 48章，&lt;i2&gt;Wrapper 插件&lt;/i2&gt;&lt;/a1&gt;），这意味着 Gradle Wrapper 也将被安装到该项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It also preserves the context and it is arguably the most readable.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T092423Z" creationid="msdx" creationdate="20141110T092423Z">
        <seg>它也保留了上下文，且可以说是可读性最强的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It assigns those configurations to tasks such as &lt;c0&gt;compileJava&lt;/c0&gt; and &lt;c1&gt;test&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T084045Z" creationid="Administrator" creationdate="20150426T084045Z">
        <seg>它对一些任务指定了这些配置，如&lt;c0&gt;compileJava&lt;/c0&gt;和&lt;c1&gt;test&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It automatically detects and executes all unit tests in the &lt;c3&gt;test&lt;/c3&gt; source set.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T140257Z" creationid="Administrator" creationdate="20150427T140257Z">
        <seg>它会自动检测和执行&lt;c3&gt;test&lt;/c3&gt;源集中的所有单元测试。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It can deal with Groovy code, mixed Groovy and Java code, and even pure Java code (although we don't necessarily recommend to use it for the latter).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T031816Z" creationid="msdx" creationdate="20150429T031816Z">
        <seg>它可以处理 Groovy 代码，以及混合的 Groovy 和 Java 代码，甚至是纯 Java 代码（尽管我们不一定推荐使用）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It can deal with Scala code, mixed Scala and Java code, and even pure Java code (although we don't necessarily recommend to use it for the latter).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T144825Z" creationid="msdx" creationdate="20150429T144446Z">
        <seg>它可以处理 Scala 代码，以及混合的 Scala 和 Java 代码，甚至是纯 Java 代码（尽管我们不一定推荐使用）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It can do things such as:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141123T150842Z" creationid="msdx" creationdate="20141123T150842Z">
        <seg>它可以做的事情如：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It causes the other project to be built first and adds the jar with the classes of the other project to the classpath.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T084115Z" creationid="haohang" creationdate="20160726T084006Z">
        <seg>它使其他项目先构建，并把其他项目的生成的 jar 文件添加到类路径中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It could also come from a local &lt;c0&gt;lib&lt;/c0&gt; directory, perhaps checked in to source control:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T080845Z" creationid="msdx" creationdate="20150429T080845Z">
        <seg>它也可以获取自本地中可能检入版本控制的&lt;c0&gt;lib&lt;/c0&gt;目录：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It creates a sample &lt;c1&gt;build.gradle&lt;/c1&gt; file, with comments and links to help get started.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T095025Z" creationid="haohang" creationdate="20150707T095025Z">
        <seg>它将创建一个示例&lt;c1&gt;build.gradle&lt;/c1&gt;文件，并包含注释和链接以帮助你开始。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It depends on the repository type, which information is need for actually finding the dependencies in the repository.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T103434Z" creationid="haohang" creationdate="20150801T103242Z">
        <seg>这取决于仓库类型，这些信息实际上需要用于在仓库中找到这个依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It disables the default JAR archive generation of the Java plugin and adds a default WAR archive task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T085836Z" creationid="msdx" creationdate="20150503T085836Z">
        <seg>它禁用了 Java 插件生成默认的 JAR archive，并添加了一个默认的 WAR archive 任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It does not make sense to use libraries from different releasable units together.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T060918Z" creationid="95" creationdate="20151115T060742Z">
        <seg>而一起使用来自不同的可发布单位的库，也不会有意义。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It doesn't require the Java plugin, but for projects that also use the Java plugin it disables the default JAR archive generation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T094402Z" creationid="msdx" creationdate="20150503T094402Z">
        <seg>它不需要 Java 插件，但是对于使用了 Java 插件的项目，它将禁用默认的 JAR archive 的生成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It has no build script and gets nothing injected by another build script.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160727T055142Z" creationid="haohang" creationdate="20160727T055142Z">
        <seg>它没有构建脚本，并且其他项目也没有向它注入内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It has the following features:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T094124Z" creationid="haohang" creationdate="20150707T094124Z">
        <seg>它具有以下特点：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It holds all global configuration, most importantly server and database connection settings.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T091221Z" creationid="msdx" creationdate="20150512T091221Z">
        <seg>它拥有所有全局配置，最重要的服务器和数据库的连接设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It implements the standard Gradle type &lt;a2&gt;&lt;c3&gt;Reporting&lt;/c3&gt;&lt;/a2&gt; and exposes a report container of type &lt;a4&gt;&lt;c5&gt;JacocoReportsContainer&lt;/c5&gt;&lt;/a4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T131951Z" creationid="msdx" creationdate="20150506T131951Z">
        <seg>它实现了标准的 Gradle 类型&lt;a2&gt;&lt;c3&gt;Reporting&lt;/c3&gt;&lt;/a2&gt;，并呈现了一个&lt;a4&gt;&lt;c5&gt;JacocoReportsContainer&lt;/c5&gt;&lt;/a4&gt;类型的报告容器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It installs those archives to your local Maven repository.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T143055Z" creationid="95" creationdate="20160105T143055Z">
        <seg>它将这些archives安装到你的本地 Maven 仓库中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is advisable to keep your username and password in &lt;c0&gt;gradle.properties&lt;/c0&gt; rather than directly in the build file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150910T011707Z" creationid="haohang" creationdate="20150910T011707Z">
        <seg>最好是把你的用户名和密码写在&lt;c0&gt;gradle.properties&lt;/c0&gt;中，而不是直接写在构建文件中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is also faster than analyzing each project separately.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T085312Z" creationid="msdx" creationdate="20150512T085312Z">
        <seg>同时，它比单独分析每个项目更快。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is also more accurate because a per-dependency exclude rule does not guarantee the given transitive dependency does not show up in the configuration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T102918Z" creationid="haohang" creationdate="20150801T102450Z">
        <seg>它也更准确，因为每个依赖排除规则并不能保证给定的传递依赖不会显示在配置中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is also possible for an Ant target to depend on a Gradle task:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T061125Z" creationid="msdx" creationdate="20141116T061125Z">
        <seg>它也可以用于一个依赖于 Gradle 任务的 Ant 目标：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is also possible to receive notifications when any project is evaluated.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T132000Z" creationid="95" creationdate="20160521T132000Z">
        <seg>你也可以在每一个project 评估之后收到收到通知。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is another layer of indirection.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151201T060731Z" creationid="haohang" creationdate="20151201T060731Z">
        <seg>它是一个间接层。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is based on the &lt;a1&gt;Sonar Runner&lt;/a1&gt;, a Sonar client component that analyzes source code and build outputs, and stores all collected information in the Sonar database.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T055335Z" creationid="msdx" creationdate="20150513T055326Z">
        <seg>它基于&lt;a1&gt;Sonar Runner&lt;/a1&gt;，一个分析源代码及构建输出，并将所有收集的信息储存在 Sonar 数据库的 Sonar 客户端组件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is common to want to sign the artifacts of a configuration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160109T072036Z" creationid="95" creationdate="20160108T153609Z">
        <seg>签名一个配置的artifacts是很常见的情况。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is currently &lt;a1&gt;incubating&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T060308Z" creationid="msdx" creationdate="20150513T060308Z">
        <seg>目前它还在&lt;a1&gt;孵化中&lt;/a1&gt;的状态。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is done lazily, either when generating the jar, or by calling &lt;c4&gt;writeTo&lt;/c4&gt; or &lt;c5&gt;effectiveManifest&lt;/c5&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T151403Z" creationid="msdx" creationdate="20150428T151403Z">
        <seg>它是懒执行的，不管是对于生成一个jar包，还是调用了 &lt;c4&gt;writeTo&lt;/c4&gt; 或者 &lt;c5&gt;effectiveManifest&lt;/c5&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is easy to apply settings to all binaries of a particular type:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160324T152252Z" creationid="95" creationdate="20160324T152252Z">
        <seg>让设置应用于指定类型的所有二进制文件很简单：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is easy to iterate over the dependency artifacts of a configuration:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T091143Z" creationid="haohang" creationdate="20150731T100716Z">
        <seg>它可以轻松地遍历一个配置的依赖 artifacts：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is important to distinguish between the name of the archive task and the name of the archive generated by the archive task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T155120Z" creationid="msdx" creationdate="20141113T155120Z">
        <seg>区分归档任务的名称和归档任务生成的归档文件的名称是很重要的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is important to note that if you pass a closure to the &lt;c3&gt;getByName()&lt;/c3&gt; method, this closure is applied to &lt;s4&gt;&lt;e5&gt;configure&lt;/e5&gt;&lt;/s4&gt; the task, not when the task executes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T101349Z" creationid="msdx" creationdate="20141110T092806Z">
        <seg>特别要注意的是，如果您向&lt;c3&gt;getByName()&lt;/c3&gt;方法传入一个闭包，这个闭包的应用是在&lt;s4&gt;&lt;e5&gt;配置&lt;/e5&gt;&lt;/s4&gt;这个任务的时候，而不是任务执行的时候。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is important to note that the content of a file collection is evaluated lazily, when it is needed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T161234Z" creationid="msdx" creationdate="20141112T161234Z">
        <seg>要注意的一个地方是，一个文件集合的内容是缓计算的，它只在需要的时候才计算。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is important to note that the custom archives you are creating as part of your build are not automatically assigned to any configuration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151226T091003Z" creationid="95" creationdate="20151226T091003Z">
        <seg>重点注意：你所创建的作为构建中的一部分的自定义archives，不会自动地指向任何的配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is important to note that the returned files of the copied configuration are often but not always the same than the returned files of the dependency subset of the original configuration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T040901Z" creationid="haohang" creationdate="20150807T040901Z">
        <seg>要重点注意，复制的配置所返回的文件，往往并不总是与原始配置的依赖子集所返回的文件一样。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is important to note that those &lt;c4&gt;provided&lt;/c4&gt; configurations work transitively.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T091604Z" creationid="msdx" creationdate="20150503T091211Z">
        <seg>要特别注意，这些&lt;c4&gt;provided&lt;/c4&gt;配置的传递使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is inconvenient to add the task explicitly for every project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160526T155207Z" creationid="95" creationdate="20160526T155207Z">
        <seg>因为要为每一个project 添加任务显示很不方便。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is ironic that in a language known for its rich library of open source components that Java has no concept of libraries or versions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150716T073811Z" creationid="haohang" creationdate="20150716T073811Z">
        <seg>令人啼笑皆非的是，以其丰富的开源组件库著称的语言，Java 竟然没有库或者版本的概念。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is not a big deal to set-up a custom repository.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151130T051222Z" creationid="haohang" creationdate="20151130T051222Z">
        <seg>想在设置一个自定义的仓库并不算什么。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is not available for Maven repositories, or custom Ivy &lt;c0&gt;DependencyResolver&lt;/c0&gt; implementations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T091434Z" creationid="95" creationdate="20151115T091402Z">
        <seg>它不能用于 Maven 仓库，或自定义的 Ivy &lt;c0&gt;DependencyResolver&lt;/c0&gt;实现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is not necessary or possible to specify the tool chain that should be used to build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T091542Z" creationid="haohang" creationdate="20160408T091402Z">
        <seg>指定构建所使用的工具链是不必要和可能的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is only able to be used if there is a valid "&lt;c1&gt;pom.xml&lt;/c1&gt;" file in the directory that the &lt;c2&gt;init&lt;/c2&gt; task is invoked in.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T092512Z" creationid="haohang" creationdate="20150707T083616Z">
        <seg>它仅用于当有一个有效的“&lt;c1&gt;pom.xml&lt;/c1&gt;”文件在 &lt;c2&gt;init&lt;/c2&gt; 任务被调用的目录的时候。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is particularly effective when frequently compiling small code increments, as is often done at development time.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T154011Z" creationid="msdx" creationdate="20150501T153543Z">
        <seg>频繁编译代码的增量部分是非常有用的，因为在开发时我们经常要这样做。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is possible for different repositories to provide a different binary artifact in response to the same artifact identifier.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T152725Z" creationid="95" creationdate="20151129T152725Z">
        <seg>不同的仓库提供不同的二进制构件以响应相同的构件标识符是可能的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is possible to execute tasks &lt;c0&gt;A&lt;/c0&gt; and &lt;c1&gt;B&lt;/c1&gt; independently.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T013941Z" creationid="msdx" creationdate="20141111T013939Z">
        <seg>它是可以独立地执行任务&lt;c0&gt;A&lt;/c0&gt;和&lt;c1&gt;B&lt;/c1&gt; 的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is possible to override this on a per-component basis, by specifying the set of &lt;c3&gt;targetBuildTypes&lt;/c3&gt;, &lt;c4&gt;targetPlatforms&lt;/c4&gt; and/or &lt;c5&gt;targetFlavors&lt;/c5&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T082910Z" creationid="haohang" creationdate="20160408T082910Z">
        <seg>通过指定的 &lt;c3&gt;targetBuildTypes&lt;/c3&gt;， &lt;c4&gt;targetPlatforms&lt;/c4&gt; 或 &lt;c5&gt;targetFlavors&lt;/c5&gt;，是可以在每一个组件的基础上进行重写的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is possible to use this property to create a task to generate all possible variants on a particular machine.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T084645Z" creationid="haohang" creationdate="20160408T084645Z">
        <seg>可以用这个属性来创建一个任务，生成在某一特定计算机上所有可能的变种。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is preferable to run this command from your Gradle project directory so that the settings of the UI will be stored in your project directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T150324Z" creationid="msdx" creationdate="20141105T150313Z">
        <seg>最好是从Gradle项目目录运行此命令，这样对UI的设置就可以存储在你的项目目录中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is preferable to use the &lt;c0&gt;Copy&lt;/c0&gt; task wherever possible, as it support incremental building and task dependency inference without any extra effort on your part.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T135103Z" creationid="msdx" creationdate="20141113T134207Z">
        <seg>在可能的情况下，最好是使用&lt;c0&gt;Copy&lt;/c0&gt;任务，因为它支持增量构建和任务依赖关系推理，而不需要你额外付出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is preferable to using &lt;c1&gt;new File(somePath)&lt;/c1&gt;, as &lt;c2&gt;file()&lt;/c2&gt; always evaluates the supplied path relative to the project directory, which is fixed, rather than the current working directory, which can change depending on how the user runs Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T144749Z" creationid="msdx" creationdate="20141112T144326Z">
        <seg>由于&lt;c2&gt;file()&lt;/c2&gt;方法总是去计算所提供的路径相对于项目目录的路径，最好是使用&lt;c1&gt;new File(somePath)&lt;/c1&gt;，因为它是一个固定的路径，而不会因为用户运行Gradle的具体工作目录而改变。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is represented by the &lt;a1&gt;&lt;c2&gt;FileCollection&lt;/c2&gt;&lt;/a1&gt; interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T145123Z" creationid="msdx" creationdate="20141112T144942Z">
        <seg>它通过&lt;a1&gt;&lt;c2&gt;FileCollection&lt;/c2&gt;&lt;/a1&gt;接口来表示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is represented by the &lt;a1&gt;&lt;c2&gt;FileTree&lt;/c2&gt;&lt;/a1&gt; interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T161854Z" creationid="msdx" creationdate="20141112T161854Z">
        <seg>它通过&lt;a1&gt;&lt;c2&gt;FileTree&lt;/c2&gt;&lt;/a1&gt;接口表示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is required because in the settings file it is defined, which projects are taking part in the multi-project build (see &lt;a1&gt;Chapter 56, &lt;i2&gt;Multi-project Builds&lt;/i2&gt;&lt;/a1&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T025019Z" creationid="haohang" creationdate="20160519T025019Z">
        <seg>因为在这个设置文件中，会定义哪些项目会加入这个多项目构建（见&lt;a1&gt;第56章，&lt;i2&gt;多项目构建&lt;/i2&gt;&lt;/a1&gt;）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is typically only applied to the root project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150713T095523Z" creationid="haohang" creationdate="20150713T095523Z">
        <seg>它通常只应用于根项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is usually our favorite.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T092449Z" creationid="msdx" creationdate="20141110T092449Z">
        <seg>它是我们通常最喜欢的方式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is, however, possible to analyze a different language for each project in a multi-project build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150520T143223Z" creationid="msdx" creationdate="20150520T143223Z">
        <seg>不过，在多项目构建中你可以为每一个项目分析一种不同的语言。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It makes full use of the type system, is more expressive and easier to maintain.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T124038Z" creationid="msdx" creationdate="20141111T124017Z">
        <seg>它充分利用了类型系统，更具有表现力而且易于维护。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It may not be immediately apparent, but using key Gradle features like the &lt;c1&gt;allprojects&lt;/c1&gt; and &lt;c2&gt;subprojects&lt;/c2&gt; keywords automatically cause your projects to be coupled.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T093616Z" creationid="haohang" creationdate="20160726T093437Z">
        <seg>它可能不明显，但使用关键的 Gradle 特性，像&lt;c1&gt;allprojects&lt;/c1&gt;和&lt;c2&gt;subprojets&lt;/c2&gt;关键字会自动导致你的项目耦合。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It must be explicitly specified.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T094117Z" creationid="haohang" creationdate="20150707T094117Z">
        <seg>它必须显式指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It provides the syntax for the &lt;c0&gt;build.xml&lt;/c0&gt;, the handling of the targets, special constructs like macrodefs, and so on.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141114T072321Z" creationid="msdx" creationdate="20141114T072321Z">
        <seg>它提供了用于&lt;c0&gt;build.xml&lt;/c0&gt;，处理的目标，特殊的构造方法比如宏，还有其他等等的语法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It provides utmost flexibility to adapt Gradle to your unique needs.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141101T124555Z" creationid="msdx" creationdate="20141101T124546Z">
        <seg>它提供了最大限度的灵活性，以满足你对Gradle的特殊需求。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It searches for a &lt;c0&gt;settings.gradle&lt;/c0&gt; in a directory called &lt;c1&gt;master&lt;/c1&gt; which has the same nesting level as the current dir.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T073827Z" creationid="haohang" creationdate="20160519T073827Z">
        <seg>它将在一个与当前目录有相同嵌套层的叫做&lt;c1&gt;master&lt;/c1&gt;的目录里面搜索&lt;c0&gt;settings.gradle&lt;/c0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It serves as the basis for many of the other Gradle plugins.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141126T121027Z" creationid="msdx" creationdate="20141126T121027Z">
        <seg>它是很多其他 Gradle 插件的基础服务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It simply removes the directory denoted by its &lt;c3&gt;dir&lt;/c3&gt; property.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T134348Z" creationid="Administrator" creationdate="20150427T134348Z">
        <seg>它只是删除由其&lt;c3&gt;dir&lt;/c3&gt;属性表示的目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It stops the build afterwards if &lt;c1&gt;ignoreFailures&lt;/c1&gt; is false and there are failing tests.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T015104Z" creationid="Administrator" creationdate="20150428T015104Z">
        <seg>如果&lt;c1&gt;ignoreFailures&lt;/c1&gt;为 false，并且有测试不通过，那它会停止继续构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It supports creating brand new projects of different types as well as converting existing builds (e.g. An Apache Maven build) to be Gradle builds.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T071001Z" creationid="haohang" creationdate="20150707T071001Z">
        <seg>它支持创建不同类型的全新项目，以及将现有的构建 (如 Apache Maven 构建) 转换成 Gradle 构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It supports the core javadoc options and the options of the standard doclet described in the &lt;a3&gt;reference documentation&lt;/a3&gt; of the Javadoc executable.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T133821Z" creationid="Administrator" creationdate="20150427T133821Z">
        <seg>它支持核心的 javadoc 参数选项，以及在Javadoc可执行文件的&lt;a3&gt;参考文档&lt;/a3&gt;中描述的标准 doclet 参数选项。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It then filters the retrieved files by specified dependencies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T040150Z" creationid="haohang" creationdate="20150807T040150Z">
        <seg>然后，由指定的依赖筛选获取的文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It turns out that in majority of cases you want to use the per-configuration exclusion.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T101440Z" creationid="haohang" creationdate="20150801T101440Z">
        <seg>事实证明，在大多数情况下你想要排除每一个配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It will also be used to get hold of the Groovy compiler and Groovydoc tool, respectively.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T075855Z" creationid="msdx" creationdate="20150429T075855Z">
        <seg>它还将用于分别获取Groovy 编译器及 Groovydoc 工具。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It will also be used to get hold of the Scala compiler and Scaladoc tool, respectively.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T152829Z" creationid="msdx" creationdate="20150429T152829Z">
        <seg>它还将用于分别获取Scala 编译器及 Scaladoc 工具。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It will only aggregate the reporting tasks that are independently being executed as part of the build run.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150713T095746Z" creationid="haohang" creationdate="20150713T095746Z">
        <seg>它只聚合作为构建的一部分正在独立运行的报告任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It works the same way as the task with some major limitations though.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T131524Z" creationid="msdx" creationdate="20141113T131524Z">
        <seg>它是与任务一样的工作方式，尽管它有一些主要的限制。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It's because workspace contains a lot of user specific temporary data and typically it is not desirable to manipulate it outside IDEA.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T072222Z" creationid="haohang" creationdate="20150625T072222Z">
        <seg>这是因为工作区包含大量的用户特定的临时数据，在 IDEA 之外操纵它的做法通常是不可取的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Ivy repository</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T095655Z" creationid="haohang" creationdate="20150807T095655Z">
        <seg>Ivy 仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Ivy's dependency descriptor (&lt;c0&gt;ivy.xml&lt;/c0&gt;) can declare multiple artifacts.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150724T042927Z" creationid="haohang" creationdate="20150724T042927Z">
        <seg>Ivy 的依赖描述符（&lt;c0&gt;ivy.xml&lt;/c0&gt;）可以定义多个 artifact。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>JARs and WARs are generated into &lt;c0&gt;&lt;e1&gt;&lt;c2&gt;project.buildDir&lt;/c2&gt;&lt;/e1&gt;/libraries&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T160046Z" creationid="msdx" creationdate="20141113T160032Z">
        <seg>JAR包和 WAR包会生成到 &lt;c0&gt;&lt;e1&gt;&lt;c2&gt;project.buildDir&lt;/c2&gt;&lt;/e1&gt;/libraries&lt;/c0&gt;中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>JDepend</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T134231Z" creationid="msdx" creationdate="20150505T134231Z">
        <seg>jdepend</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>JUnit and TestNG allows sophisticated groupings of test methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T082136Z" creationid="Administrator" creationdate="20150428T082136Z">
        <seg>JUnit 和 TestNG 可以对测试方法进行复杂的分组。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>JUnit and TestNG are both supported.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T140315Z" creationid="Administrator" creationdate="20150427T140315Z">
        <seg>同时支持 JUnit 和 TestNG。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>JVM options</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162152Z" creationid="msdx" creationdate="20141109T162152Z">
        <seg>JVM 选项</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>JacocoReport</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T135919Z" creationid="msdx" creationdate="20150506T135919Z">
        <seg>JacocoReport</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Jar</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083215Z" creationid="msdx" creationdate="20150428T083215Z">
        <seg>Jar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T003751Z" creationid="haohang" creationdate="20150603T003751Z">
        <seg>Java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Java Quickstart</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163425Z" creationid="msdx" creationdate="20141109T163425Z">
        <seg>Java 快速入门</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Java plugin - dependency configurations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T084650Z" creationid="Administrator" creationdate="20150426T084650Z">
        <seg>Java插件 ​​- 依赖配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Java plugin - tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T082923Z" creationid="Administrator" creationdate="20150426T082923Z">
        <seg>Java插件 ​​- 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Java source for the given source set</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T083501Z" creationid="Administrator" creationdate="20150426T083501Z">
        <seg>给定的源集的Java源代码</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Java version compatibility to use when compiling Java source.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T045851Z" creationid="Administrator" creationdate="20150427T045851Z">
        <seg>当编译Java源代码时所使用的Java版本兼容性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Java version to generate classes for.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T045931Z" creationid="Administrator" creationdate="20150427T045931Z">
        <seg>要生成的类的 Java 版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>JavaCompile</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083211Z" creationid="msdx" creationdate="20150428T083211Z">
        <seg>JavaCompile</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>JavaExec</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150702T105012Z" creationid="haohang" creationdate="20150702T105012Z">
        <seg>JavaExec</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Javadoc</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083216Z" creationid="msdx" creationdate="20150428T083216Z">
        <seg>Javadoc</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Jdt</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T105342Z" creationid="haohang" creationdate="20150624T105342Z">
        <seg>Jdt</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Jetty plugin - tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T150533Z" creationid="msdx" creationdate="20150504T150524Z">
        <seg>Jetty插件 - tasks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>JettyRun</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T150216Z" creationid="msdx" creationdate="20150504T150216Z">
        <seg>jettyRun</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>JettyRunWar</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T150422Z" creationid="msdx" creationdate="20150504T150422Z">
        <seg>jettyRunWar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>JettyStop</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T150447Z" creationid="msdx" creationdate="20150504T150447Z">
        <seg>jettyStop</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Just enter whatever you would normally enter after 'gradle' on the command line.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141211T030824Z" creationid="msdx" creationdate="20141105T160336Z">
        <seg>你只需要输入命令行中你经常在“Gradle”后面输入的命令即可。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Just like Gradle's Ant based compiler, the Zinc based compiler supports joint compilation of Java and Scala code.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T155133Z" creationid="msdx" creationdate="20150501T155133Z">
        <seg>就像Gradle 上基于Ant 的编译器一样，基于 Zinc 的编译器支持 Java 和 Scala 代码的联合编译。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Just like the Java plugin, the Groovy plugin allows to configure custom locations for Groovy production and test sources.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T075333Z" creationid="msdx" creationdate="20150429T075333Z">
        <seg>和 Java 插件一样，Groovy 插件允许把 Groovy 的production 和test 的源文件配置为自定义的位置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Just like the Java plugin, the Scala plugin allows to configure custom locations for Scala production and test sources.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T152709Z" creationid="msdx" creationdate="20150429T152709Z">
        <seg>和 Java 插件一样，Scala 插件允许把 Scala 的production 和test 的源文件配置为自定义的位置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>LIFECYCLE</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T070729Z" creationid="msdx" creationdate="20141116T070729Z">
        <seg>LIFECYCLE</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>LIFECYCLE and higher</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T102925Z" creationid="msdx" creationdate="20141116T102925Z">
        <seg>LIFECYCLE 及更高</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Language for dependency based programming</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141101T124327Z" creationid="msdx" creationdate="20141101T035531Z">
        <seg>基于编程的依赖语言</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Language plugins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131533Z" creationid="msdx" creationdate="20150509T131533Z">
        <seg>语言插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Later in this chapter we explain how Gradle looks for a settings file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T024719Z" creationid="haohang" creationdate="20160519T024719Z">
        <seg>在本章后面，我们会解释 Gradle 是怎么查找一个设置文件的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Legal Notice</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T161826Z" creationid="msdx" creationdate="20141109T161626Z">
        <seg>法律公告</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's add a property to the task, so we can customize it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T151303Z" creationid="95" creationdate="20160814T151303Z">
        <seg>让我们添加一个属性到这个任务中，这样我们就可以自定义它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's add a task to &lt;c11&gt;bluewhale&lt;/c11&gt; and &lt;c12&gt;krill&lt;/c12&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160715T075915Z" creationid="haohang" creationdate="20160715T075915Z">
        <seg>我们先将任务添加到&lt;c11&gt;bluewhale&lt;/c11&gt;和&lt;c12&gt;krill&lt;/c12&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's assume your project produces just the default jar file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160104T154139Z" creationid="95" creationdate="20160104T154139Z">
        <seg>让我们假设你的项目只是产生默认的 jar 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's change the naming of our tasks and execute the build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T072024Z" creationid="haohang" creationdate="20160718T072024Z">
        <seg>让我们改变我们的任务的命名，执行构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's check this out:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141123T151120Z" creationid="msdx" creationdate="20141123T151120Z">
        <seg>让我们来看看：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's first add another project called &lt;c1&gt;krill&lt;/c1&gt; to our multi-project build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160526T155250Z" creationid="95" creationdate="20160526T155250Z">
        <seg>让我们先添加另一个叫做&lt;c1&gt;krill&lt;/c1&gt;的项目到我们的多项目构建中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's first do some introspection with a single project build:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T025250Z" creationid="haohang" creationdate="20160519T025250Z">
        <seg>我们先来看一个一个单项目构建：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's have a look at an example.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T060230Z" creationid="msdx" creationdate="20141111T060230Z">
        <seg>让我们来看一个例子。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's have one more example with our producer-consumer build before we enter &lt;s0&gt;&lt;e1&gt;Java&lt;/e1&gt;&lt;/s0&gt; land.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T072558Z" creationid="haohang" creationdate="20160718T072112Z">
        <seg>让我们在进入&lt;s0&gt;&lt;e1&gt;Java&lt;/e1&gt;&lt;/s0&gt;领域之前，有更多的生产者-消费者构建的例子。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's look at an example.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T061605Z" creationid="msdx" creationdate="20141030T061605Z">
        <seg>让我们来看一个例子。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's look at the build script for the &lt;c1&gt;water&lt;/c1&gt; project and execute it:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160522T125844Z" creationid="95" creationdate="20160522T125823Z">
        <seg>让我们看看&lt;c1&gt;water&lt;/c1&gt;项目的构建脚本并执行它︰</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's now have our last marine example.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160715T075921Z" creationid="haohang" creationdate="20160715T075857Z">
        <seg>现在让我们讲最后一个marine的例子。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's refactor and also add some project specific behavior to the &lt;c0&gt;krill&lt;/c0&gt; project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160527T163204Z" creationid="95" creationdate="20160527T163059Z">
        <seg>让我们重构并且向&lt;c0&gt;krill&lt;/c0&gt;项目添加一些项目特定的行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's run it a couple of times.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T060410Z" creationid="msdx" creationdate="20141111T060257Z">
        <seg>让我们运行它几次。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's say you add &lt;c5&gt;commons-httpclient:commons-httpclient:3.0&lt;/c5&gt; to any of the provided configurations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T091306Z" creationid="msdx" creationdate="20150503T091254Z">
        <seg>假设你添加&lt;c5&gt;commons-httpclient:commons-httpclient:3.0&lt;/c5&gt;依赖到任何一个provided配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's say you already have the &lt;c0&gt;application.xml&lt;/c0&gt; and want to use it instead of configuring the &lt;c1&gt;ear.deploymentDescriptor&lt;/c1&gt; section.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T143431Z" creationid="msdx" creationdate="20150504T143328Z">
        <seg>假设你已经有了&lt;c0&gt;application.xml&lt;/c0&gt; ，并且想要使用它而不是去配置&lt;c1&gt;ear.deploymentDescriptor&lt;/c1&gt;代码段。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's say your project is a library and you want this library to be uploaded to your company's Maven or Ivy repository.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T091818Z" creationid="haohang" creationdate="20150801T091818Z">
        <seg>假设你的项目是一个库，你想要这个库上传到你公司的 Maven 或Ivy 仓库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's say, you declare a dependency on the &lt;c0&gt;junit:junit:3.8.2&lt;/c0&gt; library.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T134314Z" creationid="95" creationdate="20151006T134314Z">
        <seg>比方说，你可以声明一个&lt;c0&gt;junit:junit:3.8.2&lt;/c0&gt;库的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's start with a very simple multi-project build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160522T024638Z" creationid="95" creationdate="20160522T024638Z">
        <seg>让我们从一个非常简单的多项目构建开始。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's switch to the &lt;c2&gt;bluewhale&lt;/c2&gt; dir and see what happens if we execute Gradle from there.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160530T152010Z" creationid="95" creationdate="20160530T151955Z">
        <seg>让我们切换到&lt;c2&gt;bluewhale&lt;/c2&gt;目录，看看如果我们从那里执行 Gradle 会发生什么。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's take a closer look at the &lt;c0&gt;sonarRunner.sonarProperties {}&lt;/c0&gt; block.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150525T232441Z" creationid="haohang" creationdate="20150525T232441Z">
        <seg>让我们再详细看看&lt;c0&gt;sonarRunner.sonarProperties {}&lt;/c0&gt;块。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's try this out and try to access the &lt;c0&gt;name&lt;/c0&gt; property of the &lt;c1&gt;Project&lt;/c1&gt; object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T043016Z" creationid="msdx" creationdate="20141108T043016Z">
        <seg>下面我们来试试这个，试试访问&lt;c1&gt;Project&lt;/c1&gt;对象的&lt;c0&gt;name&lt;/c0&gt;属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's try to solve this with a hack and rename the producer project to &lt;c2&gt;aProducer&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T070401Z" creationid="haohang" creationdate="20160718T070203Z">
        <seg>让我们试着用一个技巧解决这个问题，并将生产者项目命名为&lt;c2&gt;aProducer&lt;/c2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's use the project structure shown in &lt;a0&gt;Example 56.25, “Project lib dependencies”&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T094857Z" creationid="haohang" creationdate="20160726T094857Z">
        <seg>让我们使用&lt;a0&gt;示例 56.25，“项目库依赖”&lt;/a0&gt;中显示的项目结构。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's zoom into configuration and execution phases of a multi-project build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160522T120144Z" creationid="95" creationdate="20160522T025448Z">
        <seg>让我们放大一个多项目构建的配置和执行阶段。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Level</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T070703Z" creationid="msdx" creationdate="20141116T070703Z">
        <seg>Level</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Library</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160219T070819Z" creationid="95" creationdate="20160105T141826Z">
        <seg>Library</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Lifecycle task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160219T072208Z" creationid="haohang" creationdate="20160219T072208Z">
        <seg>生命周期任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Like dependencies, artifacts are grouped by configurations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151220T123559Z" creationid="95" creationdate="20151220T123559Z">
        <seg>像依赖一样，构件也按配置进行分组。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Line 3 of the example is just a shortcut for the &lt;c2&gt;tasks.getByName()&lt;/c2&gt; method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T092703Z" creationid="msdx" creationdate="20141110T092629Z">
        <seg>该例子的第 3 行只是&lt;c2&gt;tasks.getByName()&lt;/c2&gt;方法的简洁写法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Linux</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160128T153342Z" creationid="95" creationdate="20160128T153342Z">
        <seg>Linux</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>List groovy = [&lt;s0&gt;"org.codehaus.groovy:groovy-all:2.2.0@jar"&lt;/s0&gt;,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T103702Z" creationid="haohang" creationdate="20150801T103702Z">
        <seg>List groovy = [&lt;s0&gt;"org.codehaus.groovy:groovy-all:2.2.0@jar"&lt;/s0&gt;,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>List&lt;File&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T144359Z" creationid="msdx" creationdate="20150428T144359Z">
        <seg>List&lt;File&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Live visualisation of the build in a GUI</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141117T141817Z" creationid="msdx" creationdate="20141117T141715Z">
        <seg>在 GUI 中的实时可视化构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Local Groovy dependency</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T080729Z" creationid="haohang" creationdate="20150722T080729Z">
        <seg>本地的 Groovy 依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Local variables are a feature of the underlying Groovy language.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T045143Z" creationid="msdx" creationdate="20141108T045024Z">
        <seg>局部变量是Groovy 语言底层的一个特征。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Local variables are declared with the &lt;c0&gt;def&lt;/c0&gt; keyword.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T045140Z" creationid="msdx" creationdate="20141108T044851Z">
        <seg>局部变量是用&lt;c0&gt;def&lt;/c0&gt;关键字声明的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Locating files</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150330T141135Z" creationid="Administrator" creationdate="20150330T141135Z">
        <seg>查找文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Locating tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150330T151123Z" creationid="Administrator" creationdate="20150330T140950Z">
        <seg>查找任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Location of created binary</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160219T072220Z" creationid="haohang" creationdate="20160219T072220Z">
        <seg>创建二进制文件的位置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Logging</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150330T141304Z" creationid="Administrator" creationdate="20150330T141304Z">
        <seg>日志</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Logging for the other interfaces is left untouched.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T155109Z" creationid="msdx" creationdate="20141116T155109Z">
        <seg>其他接口的日志记录是不变的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Logging from external tools and libraries</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T034932Z" creationid="Administrator" creationdate="20150330T141335Z">
        <seg>使用外部的工具和类库来记录日志</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Mac OS X</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T065614Z" creationid="haohang" creationdate="20150628T065614Z">
        <seg>Mac OS X</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Manifest</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083246Z" creationid="msdx" creationdate="20150428T083246Z">
        <seg>Manifest</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Manifest are merged in the order they are declared by the &lt;c0&gt;from&lt;/c0&gt; statement.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T150743Z" creationid="msdx" creationdate="20150428T145620Z">
        <seg>Manifest会根据在&lt;c0&gt;from&lt;/c0&gt;语句中所声明的顺序进行合并。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Manipulating existing tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162512Z" creationid="msdx" creationdate="20141109T162512Z">
        <seg>操纵现有任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Many Ant tasks set properties when they execute.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T062129Z" creationid="msdx" creationdate="20141116T062129Z">
        <seg>许多 Ant 任务在执行时会设置一些属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Many Gradle plugin add pre-defined configurations to your project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T075236Z" creationid="haohang" creationdate="20150722T075236Z">
        <seg>许多 Gradle 插件会向你的 project 添加预定义的配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Many objects in Gradle have properties which accept a set of input files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T122920Z" creationid="msdx" creationdate="20141113T122920Z">
        <seg>Gradle 中的许多对象都有一个接受一组输入文件的属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Many objects in the Gradle API implement this interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T145142Z" creationid="msdx" creationdate="20141112T145142Z">
        <seg>Gradle API 中的许多对象都实现了此接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Many projects rely on the &lt;a0&gt;Maven Central repository&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151130T032826Z" creationid="haohang" creationdate="20151130T032826Z">
        <seg>许多项目依赖于&lt;a0&gt;Maven 中央仓库&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Many settings (like the java version and maximum heap size) can only be specified when launching a new JVM for the build process.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141120T081745Z" creationid="msdx" creationdate="20141120T053837Z">
        <seg>许多设置（如 java 版本和最大堆大小）可以在启动一个新的 JVM 构建进程时指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Maven Element</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T144033Z" creationid="95" creationdate="20160105T144033Z">
        <seg>Maven 元素</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Maven JCenter repository</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T094204Z" creationid="haohang" creationdate="20150807T094204Z">
        <seg>Maven JCenter 仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Maven can only deal with one artifact per project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T143604Z" creationid="95" creationdate="20160106T143604Z">
        <seg>Maven 只可以处理一个项目一个构件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Maven central repository</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T094122Z" creationid="haohang" creationdate="20150807T094122Z">
        <seg>Maven 中央仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Maven local repository</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T095601Z" creationid="haohang" creationdate="20150807T095601Z">
        <seg>Maven 本地仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Maven repository</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T095622Z" creationid="haohang" creationdate="20150807T095622Z">
        <seg>Maven 仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>MavenDeployer</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T141859Z" creationid="95" creationdate="20160105T141859Z">
        <seg>MavenDeployer</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>May also contain Java source files for joint compilation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T093413Z" creationid="msdx" creationdate="20150429T093413Z">
        <seg>此外可能还包含用于联合编译的 Java 源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>May also contain Java sources for joint compilation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T075126Z" creationid="msdx" creationdate="20150429T075126Z">
        <seg>此外可能包含联合编译的 Java 源代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Meaning</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T103048Z" creationid="msdx" creationdate="20141116T103048Z">
        <seg>意义</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Memory settings for the external process default to the JVM's defaults.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150430T160021Z" creationid="msdx" creationdate="20150430T160021Z">
        <seg>外部过程默认使用JVM 的的默认内存设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Metadata rules allow certain parts of a module's metadata to be manipulated from within the build script.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T091714Z" creationid="95" creationdate="20151115T091714Z">
        <seg>元数据规则允许模块的元数据在构建脚本中被操纵。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Metadata to generate a deployment descriptor file, e.g. &lt;c0&gt;application.xml&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T142211Z" creationid="msdx" creationdate="20150504T142211Z">
        <seg>用于生成部署描述符文件的元数据，例如&lt;c0&gt;application.xml&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Method</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150526T004647Z" creationid="haohang" creationdate="20150526T004647Z">
        <seg>方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Method inheritance might be interesting to use as Gradle's &lt;s0&gt;&lt;e1&gt;Configuration Injection&lt;/e1&gt;&lt;/s0&gt; does not support methods yet (but will in a future release).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160727T053349Z" creationid="haohang" creationdate="20160727T053349Z">
        <seg>方法继承可能值得使用，尽管 Gradle 的&lt;s0&gt;&lt;e1&gt;配置注射&lt;/e1&gt;&lt;/s0&gt;还未支持方法（但会在以后的版本中支持的）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>MinGW</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160128T153548Z" creationid="95" creationdate="20160128T153548Z">
        <seg>MinGW</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Model</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T004641Z" creationid="haohang" creationdate="20150603T004641Z">
        <seg>模型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Module</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T073751Z" creationid="haohang" creationdate="20150625T073751Z">
        <seg>Module</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Modules declared by a module descriptor file (Ivy or POM file) are preferred over modules that have an artifact file only.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151007T024137Z" creationid="95" creationdate="20151007T024137Z">
        <seg>由模块描述符文件（Ivy或 POM 文件）声明的文件优于只有一个artifact 文件的模块。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Modules from earlier repositories are preferred over modules in later repositories.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151007T024317Z" creationid="95" creationdate="20151007T024208Z">
        <seg>前面的仓库的模块优于后面的仓库的模块。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>More about Tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T165013Z" creationid="msdx" creationdate="20141109T165013Z">
        <seg>任务详述</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>More information about &lt;c0&gt;AntBuilder&lt;/c0&gt; can be found in 'Groovy in Action' 8.4 or at the &lt;a1&gt;Groovy Wiki&lt;/a1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T011521Z" creationid="msdx" creationdate="20141116T011521Z">
        <seg>有关&lt;c0&gt;AntBuilder&lt;/c0&gt;的详细信息可以参阅 《Groovy in Action》的8.4章节， 或&lt;a1&gt;Groovy 维基&lt;/a1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>More on plugins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131520Z" creationid="msdx" creationdate="20150509T131520Z">
        <seg>更多关于插件的内容</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>More specifically, the parallel execution attempts to:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T085615Z" creationid="haohang" creationdate="20160726T085615Z">
        <seg>更具体地说，并行执行尝试︰</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>More types will be added in future Gradle releases.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T074848Z" creationid="haohang" creationdate="20150707T074848Z">
        <seg>在未来的 Gradle 发布中，将会添加更多类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Most Gradle plugins use enhanced tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T143218Z" creationid="95" creationdate="20160814T143218Z">
        <seg>大部分的Gradle插件都使用增强型的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Most builds work with files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T040420Z" creationid="msdx" creationdate="20141111T124442Z">
        <seg>大多数构建工作都要使用到文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Most of the time you don't need to touch this and you can safely skip this section.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T144913Z" creationid="95" creationdate="20160106T144913Z">
        <seg>大多数情况下你不需要去接触它，并且你可以安全地跳过本节。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Multi-project Java build</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163459Z" creationid="msdx" creationdate="20141109T163459Z">
        <seg>Java 的多项目构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Multi-project builds are always represented by a tree with a single root.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T030547Z" creationid="haohang" creationdate="20160519T030547Z">
        <seg>多项目构建总是由一个具有单个根节点的树表示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Multi-project builds are discussed in&lt;a0&gt;Chapter 56, &lt;i1&gt;Multi-project Builds&lt;/i1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T092613Z" creationid="haohang" creationdate="20150801T092613Z">
        <seg>多项目构建将在&lt;a0&gt;第 56 章，&lt;i1&gt;多项目生成&lt;/i1&gt;&lt;/a0&gt;中进行详述。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Multiple developers then spend days on this issue only finally realising that the error would have easy to uncover if they knew that Hibernate had been upgraded from 2.5 to 3.0.5.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150716T093829Z" creationid="haohang" creationdate="20150716T093829Z">
        <seg>然后多个开发人员花了数天的时间在这个问题上，终于意识到如果他们知道 Hibernate 已经从 2.5 升级到 3.0.5，这个错误会很容易发现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Name</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T044206Z" creationid="msdx" creationdate="20141108T044152Z">
        <seg>名称</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Native Binary Type</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160219T072225Z" creationid="haohang" creationdate="20160219T072206Z">
        <seg>原生二进制文件类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Neither &lt;c1&gt;water&lt;/c1&gt; nor &lt;c2&gt;tropicalFish&lt;/c2&gt; have a task with the name &lt;c3&gt;distanceToIceberg&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160715T090906Z" creationid="haohang" creationdate="20160715T090906Z">
        <seg>&lt;c1&gt;water&lt;/c1&gt;和&lt;c2&gt;tropicalFish&lt;/c2&gt;项目都没有一个叫&lt;c3&gt;distanceToIceberg&lt;/c3&gt;的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Nested elements are defined in the same way as tasks, by calling a method with the same name as the element we want to define.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T011000Z" creationid="msdx" creationdate="20141115T154824Z">
        <seg>嵌套元素的定义方式与任务相同，通过调用与我们要定义的元素一样的名字的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Nevertheless, Groovy projects need to explicitly declare a Groovy dependency.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T075747Z" creationid="msdx" creationdate="20150429T075719Z">
        <seg>然而，Groovy 项目需要显式地声明一个 Groovy 依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Next, configure your notification service(s) of choice (see table below for which configuration properties are available):</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T063107Z" creationid="haohang" creationdate="20150628T063107Z">
        <seg>接下来，配置你所选择的通知服务（要使用哪一个配置属性可以参见下表）：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>No code referenced this jar and there was no connection to the project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150721T053519Z" creationid="haohang" creationdate="20150721T012732Z">
        <seg>没有代码引用这个 jar 包，这个 jar 包也与该项目没有任何连接。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>No matter what the language, proper dependency management is important for every project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150716T083740Z" creationid="haohang" creationdate="20150716T083713Z">
        <seg>不管用什么语言，对每个项目而言，适当的依赖管理是很重要的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>No one could figure out what the jar was for, until it was removed from the build and the application suffered massive performance problem whenever it attempted to authenticate to LDAP.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150721T053815Z" creationid="haohang" creationdate="20150721T053815Z">
        <seg>没人能弄清楚这个 jar 包是干什么用的，直到它被从构建中移除，然后应用在试图向 LDAP 进行身份验证的时候，遇到了很大的性能问题。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>No stacktrace options</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T103051Z" creationid="msdx" creationdate="20141116T103051Z">
        <seg>没有栈跟踪选项</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>No stacktraces are printed to the console in case of a build error (e.g. a compile error).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T103752Z" creationid="msdx" creationdate="20141116T103552Z">
        <seg>构建错误（如编译错误）时没有栈跟踪打印到控制台。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>None</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T003619Z" creationid="haohang" creationdate="20150603T003619Z">
        <seg>None</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>None of these directories need exist or have anything in them.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T083139Z" creationid="Administrator" creationdate="20150426T083139Z">
        <seg>这些目录都不需要一定存在，或者是里面有什么内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>None of these directories need to exist or have anything in them; the Scala plugin will simply compile whatever it finds.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T152610Z" creationid="msdx" creationdate="20150429T152553Z">
        <seg>这些目录不一定是存在的，或是里面包含有什么内容；Scala 插件只会进行编译，而不管它发现什么。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Normally, Gradle will use the &lt;c0&gt;rev&lt;/c0&gt; attribute for each dependency definition included in an &lt;c1&gt;ivy.xml&lt;/c1&gt; file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T091053Z" creationid="95" creationdate="20151115T090646Z">
        <seg>通常情况下，Gradle 将&lt;c0&gt;rev&lt;/c0&gt;属性用于在&lt;c1&gt;ivy.xml&lt;/c1&gt;文件中包含的每个依赖定义。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Not every transitive dependency can be excluded - some transitive dependencies might be essential for correct runtime behavior of the application.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T101157Z" creationid="haohang" creationdate="20150801T100738Z">
        <seg>不是每个传递依赖都可以被排除 — — 一些传递依赖可能是应用程序能正确运行的必要条件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Not null</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T045721Z" creationid="Administrator" creationdate="20150427T045721Z">
        <seg>非空</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that "&lt;c0&gt;B.mustRunAfter(A)&lt;/c0&gt;" or "&lt;c1&gt;B.shouldRunAfter(A)&lt;/c1&gt;" does not imply any execution dependency between the tasks:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T013921Z" creationid="msdx" creationdate="20141111T013914Z">
        <seg>请注意"&lt;c0&gt;B.mustRunAfter(A)&lt;/c0&gt;"或"&lt;c1&gt;B.shouldRunAfter(A)&lt;/c1&gt;"并不意味着这些任务之间的任何执行上的依赖关系：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that 'dependency resolve rules' (outlined below) provide a more powerful mechanism for replacing a broken module dependency.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T055102Z" creationid="95" creationdate="20151115T055102Z">
        <seg>请注意，“依赖解析规则”（见下文），提供了一种更强大的机制，来取代一个损坏的模块依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that &lt;c0&gt;fsc&lt;/c0&gt; expects to be restarted whenever the &lt;s1&gt;&lt;e2&gt;contents&lt;/e2&gt;&lt;/s1&gt; of its compile class path change.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150430T155443Z" creationid="msdx" creationdate="20150430T155218Z">
        <seg>注意，每当 &lt;c0&gt;fsc&lt;/c0&gt;的编译类路径的&lt;s1&gt;&lt;e2&gt;内容&lt;/e2&gt;&lt;/s1&gt;发生变化时，它都需要重新启动。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that Sonar can only analyze one language per project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T091943Z" creationid="msdx" creationdate="20150512T091943Z">
        <seg>注意，Sonar 只能分析每个项目的一种语言。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that Zinc's Nailgun based daemon mode is not supported.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T081255Z" creationid="msdx" creationdate="20150503T081255Z">
        <seg>注意现在 Zinc 基于守护进程模式的Nailgun 还不支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that abstract classes are not executed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T041207Z" creationid="Administrator" creationdate="20150428T041207Z">
        <seg>请注意，抽象类不会被执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that different Gradle versions ship with different Groovy versions; as such, using &lt;c1&gt;localGroovy()&lt;/c1&gt; is less safe then declaring a regular Groovy dependency.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T080533Z" creationid="msdx" creationdate="20150429T080533Z">
        <seg>注意，不同 Gradle 版本附带的 Groovy 版本不同；因此，声明一个固定的 Groovy 依赖要比使用&lt;c1&gt;localGroovy()&lt;/c1&gt;更安全一些。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that dynamic resolve mode is only available for Gradle's Ivy repositories.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T091410Z" creationid="95" creationdate="20151115T091400Z">
        <seg>注意，动态解析模式只对 Gradle 的 Ivy 仓库有效。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that for most of these properties, the Sonar plugin's object model has an equivalent property, and it isn't necessary to use a &lt;c1&gt;withGlobalProperties&lt;/c1&gt; or &lt;c2&gt;withProjectProperties&lt;/c2&gt; hook.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T102026Z" creationid="msdx" creationdate="20150512T102026Z">
        <seg>注意，对于大多数的这些属性，Sonar 插件的对象模型具有等效的属性，且没有必要使用&lt;c1&gt;withGlobalProperties&lt;/c1&gt;或&lt;c2&gt;withProjectProperties&lt;/c2&gt;的hook。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that if &lt;c6&gt;publishedCode&lt;/c6&gt; is not set correctly, downstream tasks may not recompile code affected by upstream changes, leading to incorrect compilation results.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T080817Z" creationid="msdx" creationdate="20150503T080456Z">
        <seg>注意，如果&lt;c6&gt;publishedCode&lt;/c6&gt;设置不正确，上游代码发生变化时下游任务可能不会重新编译代码，导致编译结果不正确。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that if a task has an output directory specified, any files added to that directory since the last time it was executed are ignored and will NOT cause the task to be out of date.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T064006Z" creationid="msdx" creationdate="20141111T063742Z">
        <seg>请注意，如果一个任务有一个指定的输出目录，在它上一次执行之后添加到该目录的所有文件都将被忽略，并且不会使这个任务成为过时状态。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that this command blocks until the Gradle GUI is closed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T145907Z" creationid="msdx" creationdate="20141105T145907Z">
        <seg>注意：此命令行窗口被将锁定，直到Gradle GUI被关闭。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that this completely disables Gradle's default output.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T154232Z" creationid="msdx" creationdate="20141116T154232Z">
        <seg>请注意它完全禁用 Gradle 的默认输出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that this is different from a forced version as described above, in that any other versions of this module would not be affected.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T085605Z" creationid="95" creationdate="20151115T085605Z">
        <seg>注意，这与上面描述的强制使用一个版本不同，这个模块的其他版本将不受影响。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note, however, that the Zinc compiler requires Java 6 or higher to run.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T154444Z" creationid="msdx" creationdate="20150501T154422Z">
        <seg>但是，要注意的是，Zinc 编译器需要 Java 6 或其以上版本来运行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note: &lt;c0&gt;groupId&lt;/c0&gt;, &lt;c1&gt;artifactId&lt;/c1&gt;, &lt;c2&gt;version&lt;/c2&gt;, and &lt;c3&gt;packaging&lt;/c3&gt; should always be set directly on the &lt;c4&gt;pom&lt;/c4&gt; object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T143154Z" creationid="95" creationdate="20160106T143154Z">
        <seg>注：&lt;c0&gt;groupId&lt;/c0&gt;，&lt;c1&gt;artifactId&lt;/c1&gt;，&lt;c2&gt;version&lt;/c2&gt;和&lt;c3&gt;packaging&lt;/c3&gt;应该始终直接在&lt;c4&gt;pom&lt;/c4&gt;对象上设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note: if you specify a stack trace level on either the Command Line or Favorites tab, it will override this stack trace level.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T161104Z" creationid="msdx" creationdate="20141105T161104Z">
        <seg>注意：如果你在命令行或收藏夹选项卡上指定了堆栈跟踪级别，将会覆盖这里的设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note: newly created tasks will show up by default (versus being hidden by default).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T153752Z" creationid="msdx" creationdate="20141105T153646Z">
        <seg>注意：新创建的任务默认情况下是显示状态（而不是隐藏状态）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note: this requires Java 1.6 or higher and requires that you have .gradle files associated in your OS.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T154351Z" creationid="msdx" creationdate="20141105T154351Z">
        <seg>注意：该操作需要 Java 1.6 或更高的版本，并且要求在你的操作系统中关联 gradle 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Notes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160128T153341Z" creationid="95" creationdate="20160128T153341Z">
        <seg>备注</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Notice by the output with the example that the value for &lt;c3&gt;compileJava.destinationDir&lt;/c3&gt; also changed to reflect the configuration change.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141124T093419Z" creationid="msdx" creationdate="20141124T093249Z">
        <seg>在上面的示例中可以注意到，&lt;c3&gt;compileJava.destinationDir&lt;/c3&gt;的值也被修改了，以反映出配置的修改。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Notice that &lt;c0&gt;clean&lt;/c0&gt; does not depend on &lt;c1&gt;cleanIdeaWorkspace&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T072136Z" creationid="haohang" creationdate="20150625T071850Z">
        <seg>请注意，&lt;c0&gt;clean&lt;/c0&gt;并不依赖于&lt;c1&gt;cleanIdeaWorkspace&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Notice that Gradle executes this task a second time, and does not skip the task even though nothing has changed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T060618Z" creationid="msdx" creationdate="20141111T060350Z">
        <seg>请注意 Gradle 第二次执行执行这项任务时，即使什么都未作改变，也没有跳过该任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Notice that additional defaults are provided for projects that have the &lt;c0&gt;java-base&lt;/c0&gt; or &lt;c1&gt;java&lt;/c1&gt; plugin applied.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T064911Z" creationid="msdx" creationdate="20150513T064629Z">
        <seg>注意，对于配置使用了 &lt;c0&gt;java-base&lt;/c0&gt; 或 &lt;c1&gt;java&lt;/c1&gt; 插件的project，有提供另外的默认值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Notice that the &lt;c0&gt;afterProject&lt;/c0&gt; notification is received regardless of whether the project evaluates successfully or fails with an exception.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T132206Z" creationid="95" creationdate="20160521T132206Z">
        <seg>注意，无论项目评估是成功还是由于异常而失败，都会收到&lt;c0&gt;afterProject&lt;/c0&gt;通知。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Notice that the &lt;c0&gt;afterTask&lt;/c0&gt; notification is received regardless of whether the task completes successfully or fails with an exception.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T140101Z" creationid="95" creationdate="20160521T140101Z">
        <seg>注意，无论任务成功完成还是异常失败，都会收到&lt;c0&gt;afterTask&lt;/c0&gt;的通知。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Notice that we can also mix Groovy code and the Ant task markup.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141115T153344Z" creationid="msdx" creationdate="20141115T153344Z">
        <seg>请注意我们还可以混合使用 Groovy 代码和 Ant 任务标记。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Notification Service</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T065230Z" creationid="haohang" creationdate="20150628T065230Z">
        <seg>通知服务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now Gradle will look for your dependencies in the JCenter repository.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T100855Z" creationid="haohang" creationdate="20150807T100855Z">
        <seg>现在 Gradle 将会在 JCenter 仓库中查找你的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now Gradle will look for your dependencies in this repository.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T095928Z" creationid="haohang" creationdate="20150807T095928Z">
        <seg>现在 Gradle 将会在此仓库中查找你的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now how does Gradle find it in the repositories?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T134333Z" creationid="95" creationdate="20151006T134333Z">
        <seg>现在 Gradle 是如何发现它在存储库中的?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now we rewrite the &lt;c0&gt;water&lt;/c0&gt; build script and boil it down to a single line.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160526T155442Z" creationid="95" creationdate="20160526T155442Z">
        <seg>现在我们改写&lt;c0&gt;water&lt;/c0&gt;的构建脚本，并把它归结成为一行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now we take the air out of this hack.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T070545Z" creationid="haohang" creationdate="20160718T070241Z">
        <seg>现在我们来看这个技巧。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now we will move our task to a standalone project, so we can publish it and share it with others.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160815T144714Z" creationid="95" creationdate="20160814T153142Z">
        <seg>现在我们将移动我们的任务到一个单独的阿朵很好看，这样我们就可以发布它，并与他人分享。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now you want to deploy this jar file to a remote Maven repository.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160104T154150Z" creationid="95" creationdate="20160104T154150Z">
        <seg>现在你想要将这个 jar 文件部署到远程 Maven 仓库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now, Gradle knows which files to check to determine whether the task is up-to-date or not.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T061357Z" creationid="msdx" creationdate="20141111T061318Z">
        <seg>现在，Gradle 知道哪些文件要检查以确定任务是否为最新状态。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Object</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T044436Z" creationid="msdx" creationdate="20141108T044436Z">
        <seg>Object</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Objective-C language support is provided by means of the &lt;c0&gt;'objective-c'&lt;/c0&gt; plugin.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160319T115110Z" creationid="95" creationdate="20160319T115110Z">
        <seg>&lt;c0&gt;'objective-c'&lt;/c0&gt; 插件提供了Objective-C 语言的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Objective-C sources to be included in a native binary are provided via a &lt;a0&gt;&lt;c1&gt;ObjectiveCSourceSet&lt;/c1&gt;&lt;/a0&gt;, which defines a set of Objective-C source files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160319T115327Z" creationid="95" creationdate="20160319T115327Z">
        <seg>把Objective-C源码包含到原生二进制文件中，是通过一个 &lt;a0&gt;&lt;c1&gt;ObjectiveCSourceSet&lt;/c1&gt;&lt;/a0&gt;来实现的，它定义了一个Objective-C源文件集。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Objective-C++ language support is provided by means of the &lt;c0&gt;'objective-cpp'&lt;/c0&gt; plugin.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160319T115417Z" creationid="95" creationdate="20160319T115417Z">
        <seg>&lt;c0&gt;'objective-cpp'&lt;/c0&gt; 插件提供了Objective-C++ 语言的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Objective-C++ sources to be included in a native binary are provided via a &lt;a0&gt;&lt;c1&gt;ObjectiveCppSourceSet&lt;/c1&gt;&lt;/a0&gt;, which defines a set of Objective-C++ source files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160319T115508Z" creationid="95" creationdate="20160319T115508Z">
        <seg>把Objective-C++源码包含到原生二进制文件中，是通过一个 &lt;a0&gt;&lt;c1&gt;ObjectiveCppSourceSet&lt;/c1&gt;&lt;/a0&gt;来实现的，它定义了一个Objective-C++源文件集。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Obtaining information about your build</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163935Z" creationid="msdx" creationdate="20141109T163935Z">
        <seg>获取构建的相关信息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Obviously for a single project build, a project without a build script doesn't make much sense.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160522T125759Z" creationid="95" creationdate="20160522T125759Z">
        <seg>显然对于一个单项目构建，如果一个项目没有构建脚本是没道理的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Obviously the &lt;c0&gt;date&lt;/c0&gt; and &lt;c1&gt;hello&lt;/c1&gt; projects have a &lt;s2&gt;&lt;e3&gt;configuration&lt;/e3&gt;&lt;/s2&gt; dependency on &lt;c4&gt;webDist&lt;/c4&gt;, as all the build logic for the webapp projects is injected by &lt;c5&gt;webDist&lt;/c5&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T073014Z" creationid="haohang" creationdate="20160722T091317Z">
        <seg>很明显，&lt;c0&gt;date&lt;/c0&gt; 和 &lt;c1&gt;hello&lt;/c1&gt; 都有一个 &lt;s2&gt;&lt;e3&gt;配置&lt;/e3&gt;&lt;/s2&gt; 依赖于 &lt;c4&gt;webDist&lt;/c4&gt;，作为webapp项目的所有构建逻辑都被&lt;c5&gt;webDist&lt;/c5&gt;注入了。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Obviously this is a very common use case for Java multi-project builds.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T083422Z" creationid="haohang" creationdate="20160726T083422Z">
        <seg>显示，对于Java 多项目构建当中，这是很常见的情况。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Occasionally, you may want to stop the daemons either via the &lt;c0&gt;--stop&lt;/c0&gt; command line option or in a more forceful way.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141119T030639Z" creationid="msdx" creationdate="20141119T030639Z">
        <seg>有时候，您可能想要通过&lt;c0&gt;--stop&lt;/c0&gt;命令行选项或更有力的方式停止守护程序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Of course one can configure the different file-sets with a closure to define excludes and includes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T094010Z" creationid="msdx" creationdate="20150503T093821Z">
        <seg>当然，你可以用一个定义了excludes 和 includes 的闭包来配置不同的文件集。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Of course this is fully customizable.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151227T152531Z" creationid="95" creationdate="20151227T152531Z">
        <seg>当然，这是可完全自定义的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Of course you can add custom configurations on top of that.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T075412Z" creationid="haohang" creationdate="20150722T075412Z">
        <seg>当然，你可以添加自定义配置到这上面。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Of course you can deal with this by adding a &lt;c0&gt;mkdir&lt;/c0&gt; to the beginning of those tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T072903Z" creationid="msdx" creationdate="20141109T072903Z">
        <seg>当然，你可以在这些任务的开始加入&lt;c0&gt;mkdir&lt;/c0&gt;来解决这个问题。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Of course, if it is a subproject, only the subproject and its dependent projects are build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T074521Z" creationid="haohang" creationdate="20160519T074521Z">
        <seg>当然，如果它是一个子项目，那么就只构建子项目和它依赖的项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Of course, task dependencies across different projects are not limited to tasks with the same name.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T072003Z" creationid="haohang" creationdate="20160718T072003Z">
        <seg>当然，在不同项目之间的任务依赖并不限于具有相同名称的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Often an organisation publishes a set of libraries with a single version; where the libraries are built, tested and published together.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T060518Z" creationid="95" creationdate="20151115T060518Z">
        <seg>通常一个组织会使用一个版本发布一组库；这些库将在一起构建，测试以及发布。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Often this is a "root project" that does nothing more than define common configuration, but as far as Gradle is concerned this root project is still a fully-fledged project, and by using &lt;c4&gt;allprojects&lt;/c4&gt; that project is effectively coupled to all other projects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T094243Z" creationid="haohang" creationdate="20160726T094003Z">
        <seg>通常这是一个“根项目”，除了定义常见的配置不执行任何操作，但对 Gradle 而言这个根项目仍然是一个成熟的项目，并且通过使用&lt;c4&gt;allprojects&lt;/c4&gt;，该项目有效地与所有其他项目耦合。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Often this is the preferred way to customize Eclipse files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T065906Z" creationid="haohang" creationdate="20150625T065906Z">
        <seg>通常，这是自定义 Eclipse 文件的首选的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Often this is the preferred way to customize IDEA files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T074553Z" creationid="haohang" creationdate="20150625T074553Z">
        <seg>通常，这是自定义 IDEA 文件的首选方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Often you will want to publish an archive, so that it is usable from another project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T160831Z" creationid="msdx" creationdate="20141113T160831Z">
        <seg>你经常会想要发布一个归档文件，这样就可从另一个项目中使用它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>On a far larger scale, Enterprise projects using Spring, Hibernate, and other libraries, alongside hundreds or thousands of internal projects can have very large dependency trees.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150720T064248Z" creationid="haohang" creationdate="20150720T061641Z">
        <seg>在更大的规模上，使用 Spring，Hibernate和其他的库，旁边数百或数千个内部项目的企业应用，也有非常大的依赖树。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>On a large project with many developers changing dependencies, successful builds will be few and far between as the order of dependencies may directly affect whether a build succeeds or fails (or whether a bug appears or disappears in production).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150721T055135Z" creationid="haohang" creationdate="20150721T055135Z">
        <seg>对于许多开发人员都会更改依赖的大型项目，成功的构建将会少之又少，因为依赖的顺序可能会直接影响到构建是否成功（或者在产品中是否会出现一个 bug）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>On most large projects, build migrations and any change to development process is incremental because most organizations can't afford to stop everything and migrate to a build tool's idea of dependency management.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150716T041455Z" creationid="haohang" creationdate="20150716T041455Z">
        <seg>在大多数的大项目中，构建迁移和对发展过程的任何更改都是增量的，因为大多数组织不能负担得起停止一切事情并迁移到依赖管理的构建工具的想法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>On the other hand you need the relevant information for figuring out if things have gone wrong.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T070149Z" creationid="msdx" creationdate="20141116T070149Z">
        <seg>另一方面，如果出了错，你需要找出相关的信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>On the other hand, finalizer tasks are not executed if the finalized task didn't do any work, for example due to failed task dependency or if it's considered up to date.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T122734Z" creationid="msdx" creationdate="20141111T070356Z">
        <seg>另一方面，如果最终的任务什么都不做的话，比如由于失败的任务依赖项或如果它被认为是最新的状态，析构任务不会执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>On the same nesting level the configuration order depends on the alphanumeric position.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T090533Z" creationid="haohang" creationdate="20160718T090533Z">
        <seg>如果是相同的嵌套级别，则配置顺序取决于字母数字的位置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Once a configuration is resolved it is immutable.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T091056Z" creationid="haohang" creationdate="20150807T091056Z">
        <seg>一旦一个配置被解析，那它就是不可变的了。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Once each repository has been inspected for the module, Gradle will choose the 'best' one to use.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151007T023928Z" creationid="95" creationdate="20151007T023928Z">
        <seg>一旦已为该模块检查了每个仓库，Gradle 将会选择使用“最好”的一个。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Once the properties have been added, they can be read and set like predefined properties.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T054351Z" creationid="msdx" creationdate="20141108T054318Z">
        <seg>一旦属性被添加，他们就可以像预定的属性一样被读取和设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One can assign also a priority to a particular configuration-to-scope mapping.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T145242Z" creationid="95" creationdate="20160106T145136Z">
        <seg>一个configuration可以指定到一个特定的 configuration-to-scope 映射的优先级。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One example of a broken module is one that declares a dependency on a library that cannot be found in any of the public repositories, but there are many other reasons why a particular module version is unwanted and a different version is preferred.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T071300Z" creationid="95" creationdate="20151115T070735Z">
        <seg>一个坏的模块的例子是，在一个库上声明的一个依赖无法在任何公共仓库中找到，但为什么不能使用一个特定的模块版本，而更希望要另一个版本，还有很多其他原因。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One focus of the IDEA plugin is to be open to customization.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T071636Z" creationid="haohang" creationdate="20150625T071636Z">
        <seg>IDEA 插件的重点之一是对自定义项较为开放。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One of the convention properties added by the plugin is &lt;c0&gt;applicationDistribution&lt;/c0&gt; which is a &lt;a1&gt;&lt;c2&gt;CopySpec&lt;/c2&gt;&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150702T105419Z" creationid="haohang" creationdate="20150702T105419Z">
        <seg>&lt;c0&gt;applicationDistribution&lt;/c0&gt;是由插件添加的公约属性之一，它是一个&lt;a1&gt;&lt;c2&gt;CopySpec&lt;/c2&gt;&lt;/a1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One piece of module metadata that Gradle understands is a module's &lt;s0&gt;&lt;e1&gt;status scheme&lt;/e1&gt;&lt;/s0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T012729Z" creationid="95" creationdate="20151115T092256Z">
        <seg>其中一个 Gradle 能理解的模块元数据是模块的&lt;s0&gt;&lt;e1&gt;状态模式&lt;/e1&gt;&lt;/s0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One place to look are the constants in a file from the Ant project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141121T142351Z" creationid="msdx" creationdate="20141121T142024Z">
        <seg>其中可以去看的一个地方是 Ant 项目的一个文件中的常量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One reason is that it is offered by other tools and we want to have the check mark in a feature comparison :).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160727T053529Z" creationid="haohang" creationdate="20160727T053529Z">
        <seg>原因之一是其他工具也有这个功能，而我们想要在功能比较中有这一点。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One such type is the simple task, where you define the task with an action closure.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T141010Z" creationid="95" creationdate="20160814T141010Z">
        <seg>一种是简单的任务，你可以使用一个action闭包来定义它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One thing is very important to note.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160530T152423Z" creationid="95" creationdate="20160530T152423Z">
        <seg>注意，有一件事情很重要。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One use for source sets is to group source files into logical groups which describe their purpose.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T074543Z" creationid="Administrator" creationdate="20150425T074543Z">
        <seg>源集的一个用途是，把源文件进行逻辑上的分组，以描述它们的目的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One way to obtain a &lt;c0&gt;FileCollection&lt;/c0&gt; instance is to use the &lt;a1&gt;&lt;c2&gt;Project.files()&lt;/c2&gt;&lt;/a1&gt; method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T145357Z" creationid="msdx" creationdate="20141112T145349Z">
        <seg>使用&lt;a1&gt;&lt;c2&gt;Project.files()&lt;/c2&gt;&lt;/a1&gt;方法是获取一个&lt;c0&gt;FileCollection&lt;/c0&gt;实例的其中一个方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One way to obtain a &lt;c0&gt;FileTree&lt;/c0&gt; instance is to use the &lt;a1&gt;&lt;c2&gt;Project.fileTree()&lt;/c2&gt;&lt;/a1&gt; method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T101746Z" creationid="msdx" creationdate="20141113T101624Z">
        <seg>使用&lt;a1&gt;&lt;c2&gt;Project.fileTree()&lt;/c2&gt;&lt;/a1&gt;方法是获取一个&lt;c0&gt;FileTree&lt;/c0&gt;实例的其中一种方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Only Show Output When Errors Occur</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T161122Z" creationid="msdx" creationdate="20141105T161122Z">
        <seg>只在出现错误时显示输出</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Only complain if there is &lt;s4&gt;&lt;e5&gt;no&lt;/e5&gt;&lt;/s4&gt; such task!</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160715T091047Z" creationid="haohang" creationdate="20160715T091047Z">
        <seg>如果&lt;s4&gt;&lt;e5&gt;没有&lt;/e5&gt;&lt;/s4&gt;这样的任务，那只能complain。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Only if you define a property or a method which has the same name as a member of the &lt;c4&gt;Project&lt;/c4&gt; object, you need to use the &lt;c5&gt;project&lt;/c5&gt; property.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T043819Z" creationid="msdx" creationdate="20141108T043819Z">
        <seg>只有当您定义的属性或方法&lt;c4&gt;Project&lt;/c4&gt;对象的一个成员相同名字时，你才需要使用&lt;c5&gt;project&lt;/c5&gt;属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Only in case of internal exceptions will stacktraces be printed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T103821Z" creationid="msdx" creationdate="20141116T103812Z">
        <seg>只有在内部异常的情况下才打印栈跟踪。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Only relevant projects are configured which results in faster builds for large multi-projects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141120T053745Z" creationid="msdx" creationdate="20141120T053036Z">
        <seg>只适用于相关的项目被配置为在大型多项目中更快地构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Operating System</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T065232Z" creationid="haohang" creationdate="20150628T065232Z">
        <seg>操作系统</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Option</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T102829Z" creationid="msdx" creationdate="20141116T102829Z">
        <seg>选项</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Optionally, a repository with pattern layout can have its 'organisation' part laid out in Maven style, with forward slashes replacing dots as separators.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T111017Z" creationid="95" creationdate="20151006T111017Z">
        <seg>作为可选的功能，一个使用模式布局的仓库可以有它自己的以Maven 风格奠定的“组织”部分，该部分使用斜杠替换点作为分隔符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Or if you do not want to use any repositories at all for storing your dependencies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T092949Z" creationid="haohang" creationdate="20150801T092907Z">
        <seg>或者是你如果不想使用任何仓库来存储你的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Or some combination of the two.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T145205Z" creationid="95" creationdate="20160814T145205Z">
        <seg>或者是上面两者都有。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Or you can only provide client modules for POMs with bad metadata.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151201T063808Z" creationid="haohang" creationdate="20151201T063808Z">
        <seg>或者，你可以只为元数字不正确的 POMs 提供客户端模块。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Or, you can add behaviour to an Ant target:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T061032Z" creationid="msdx" creationdate="20141116T061032Z">
        <seg>或者，您可以将行为添加到 Ant 目标中：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Ordering tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150330T141021Z" creationid="Administrator" creationdate="20150330T141021Z">
        <seg>任务排序</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Originally Gradle has used the &lt;c0&gt;'/'&lt;/c0&gt; character as a natural path separator.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T061806Z" creationid="haohang" creationdate="20160718T061806Z">
        <seg>原来 Gradle 使用&lt;c0&gt;/&lt;/c0&gt;字符作为自然路径分隔符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>OsgiManifest</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150526T004712Z" creationid="haohang" creationdate="20150526T004712Z">
        <seg>OsgiManifest</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Other build systems require a wholesale replacement of this approach before migrating.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150716T040558Z" creationid="haohang" creationdate="20150716T040558Z">
        <seg>其他的构建系统在迁移之前需要对这种方法进行大量的替换。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Other build systems use inheritance as the primary means for defining common behavior.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160527T162327Z" creationid="95" creationdate="20160527T161953Z">
        <seg>其他构建系统使用继承作为主要手段，用于定义共同的行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Other examples of the dependency exclusions can be found in the reference for &lt;a0&gt;&lt;c1&gt;ModuleDependency&lt;/c1&gt;&lt;/a0&gt; or &lt;a2&gt;&lt;c3&gt;DependencyHandler&lt;/c3&gt;&lt;/a2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T103044Z" creationid="haohang" creationdate="20150801T103044Z">
        <seg>其他相关依赖关系排除的示例，可以参考 &lt;a0&gt; &lt;c1&gt;ModuleDependency&lt;/c1&gt;&lt;/a0&gt;或&lt;a2&gt;&lt;c3&gt;DependencyHandler&lt;/c3&gt;&lt;/a2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Other plugins add the ability to include Groovy and Scala source files in a source set.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T074316Z" creationid="Administrator" creationdate="20150425T074316Z">
        <seg>其他有一些插件添加了在源集里包含 Groovy 和 Scala 的源代码文件的能力。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Other plugins, such as the Groovy plugin, exclude additional types of files from this collection.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T052948Z" creationid="Administrator" creationdate="20150427T052809Z">
        <seg>其他插件，如Groovy 插件，会从该集合中排除其他类型的文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Otherwise Gradle throws an exception, saying that a task with such a name already exists.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T020246Z" creationid="msdx" creationdate="20141111T020240Z">
        <seg>否则 Gradle 将抛出异常，说这种名称的任务已经存在。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Otherwise a multiproject build is executed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T074126Z" creationid="haohang" creationdate="20160519T074126Z">
        <seg>否则执行多项目构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Otherwise applying &lt;c2&gt;eclipse&lt;/c2&gt; plugin is enough.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T003142Z" creationid="haohang" creationdate="20150603T003142Z">
        <seg>否则应用&lt;c2&gt;eclipse&lt;/c2&gt;插件就足够了。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Otherwise snapshots are deployed to the &lt;c1&gt;snapshotRepository&lt;/c1&gt; element.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T141816Z" creationid="95" creationdate="20160105T141816Z">
        <seg>否则，snapshots将部署到&lt;c1&gt;snapshotRepository&lt;/c1&gt;元素中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Otherwise the script gets compiled and the new version is stored in the cache.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T153544Z" creationid="msdx" creationdate="20141109T153544Z">
        <seg>否则该脚本会重新编译，并把最新版本存在缓存中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Otherwise, a &lt;c6&gt;File&lt;/c6&gt; instance is constructed by prepending the project directory path to the supplied path.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T143239Z" creationid="msdx" creationdate="20141112T143148Z">
        <seg>否则，会通过先计算所提供的路径相对于项目目录的相对路径来构造&lt;c6&gt;File&lt;/c6&gt;实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Otherwise, execution of the task will fail with a message saying that &lt;c0&gt;groovyClasspath&lt;/c0&gt; could not be inferred.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T092248Z" creationid="msdx" creationdate="20150429T092248Z">
        <seg>其他情况，该task 将执行失败，并提示无法推断 &lt;c0&gt;groovyClasspath&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Otherwise, execution of the task will fail with a message saying that &lt;c0&gt;scalaClasspath&lt;/c0&gt; could not be inferred.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150430T154646Z" creationid="msdx" creationdate="20150430T154646Z">
        <seg>其他情况，该task 将执行失败，并提示无法推断 &lt;c0&gt;scalaClasspath&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Otherwise, the project at hand may be referenced with the wrong artifact ID from generated POMs for other projects in the same build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T142449Z" creationid="95" creationdate="20160106T142449Z">
        <seg>否则，在相同的构建中，这个项目可能会被其他项目所生成的POMs 中错误的 artifact ID所引用到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Our example task was defined using an action closure.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T060729Z" creationid="msdx" creationdate="20141111T060729Z">
        <seg>我们的示例任务被用一个操作（action）闭包来定义。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Our final message for this chapter is that multi-project builds with Gradle are usually &lt;s0&gt;&lt;e1&gt;not&lt;/e1&gt;&lt;/s0&gt; difficult.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160727T053804Z" creationid="haohang" creationdate="20160727T053804Z">
        <seg>我们对这一章最后要说的是，使用 Gradle 的多项目构建通常&lt;s0&gt;&lt;e1&gt;不会&lt;/e1&gt;&lt;/s0&gt;很难。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Our first examples are about marine life.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160522T024956Z" creationid="95" creationdate="20160522T024946Z">
        <seg>我们的第一个例子是关于海洋生活的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -I init.gradle build&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T154830Z" creationid="msdx" creationdate="20141116T154830Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -I init.gradle build&lt;/c1&gt;&lt;/s0&gt; 的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -a :api:build&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160727T051920Z" creationid="haohang" creationdate="20160727T051920Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle :api:build&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q -PcommandLineProjectProp=commandLineProjectPropValue -Dorg.gradle.project.systemProjectProp=systemPropertyValue printProps&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T151129Z" creationid="msdx" creationdate="20141109T151129Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q -PcommandLineProjectProp=commandLineProjectPropValue -Dorg.gradle.project.systemProjectProp=systemPropertyValue printProps&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q :hello :krill:hello hello&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160715T091716Z" creationid="haohang" creationdate="20160715T091716Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q :hello :krill:hello hello&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q a&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T135108Z" creationid="95" creationdate="20160521T135108Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q a&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q action&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T062415Z" creationid="haohang" creationdate="20160718T062415Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q action&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q allFiles&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T034618Z" creationid="haohang" creationdate="20150807T034618Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q allFiles&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q broken&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T140130Z" creationid="95" creationdate="20160521T140130Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q broken&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q check&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T043154Z" creationid="msdx" creationdate="20141108T043154Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q check&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q compile&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T073311Z" creationid="msdx" creationdate="20141109T073311Z">
        <seg> &lt;s0&gt;&lt;c1&gt;gradle -q compile&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q configure&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T152818Z" creationid="msdx" creationdate="20141109T152818Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q configure&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q consume&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T072055Z" creationid="haohang" creationdate="20160718T072055Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q consume&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q copy&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T015905Z" creationid="msdx" creationdate="20141111T015905Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q copy&lt;/c1&gt;&lt;/s0&gt; 的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q copyVsFiles&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T041255Z" creationid="haohang" creationdate="20150807T041255Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q copyVsFiles&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q dependencies&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T034417Z" creationid="haohang" creationdate="20150807T034417Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q dependencies&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q distanceToIceberg&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160715T080006Z" creationid="haohang" creationdate="20160715T080006Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q distanceToIceberg&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q files&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T034750Z" creationid="haohang" creationdate="20150807T034750Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q files&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q groupPing&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T065656Z" creationid="msdx" creationdate="20141111T065656Z">
        <seg>&lt;s0&gt; &lt;c1&gt;Gradle q groupPing&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q hello greeting&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T151557Z" creationid="95" creationdate="20160814T151557Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q hello greeting&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q hello&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T152454Z" creationid="msdx" creationdate="20141109T152454Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q hello&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q list&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T160754Z" creationid="msdx" creationdate="20141112T160754Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q list&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q listBirds&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T041838Z" creationid="95" creationdate="20151129T041838Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q listBirds&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q listFish&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T041652Z" creationid="95" creationdate="20151129T041652Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q listFish&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q listJars&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T091217Z" creationid="haohang" creationdate="20150801T091217Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q listJars&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q myTask&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T055302Z" creationid="msdx" creationdate="20141111T055302Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q myTask&lt;/c1&gt;&lt;/s0&gt; 的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q myZip&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T154746Z" creationid="msdx" creationdate="20141113T154746Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q myZip&lt;/c1&gt;&lt;/s0&gt; 的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q pingServer1&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T065011Z" creationid="msdx" creationdate="20141111T065011Z">
        <seg>&lt;s0&gt; &lt;c1&gt;Gradle q pingServer1&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q printProperties&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T050744Z" creationid="msdx" creationdate="20141108T050740Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q printProperties&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q show&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141123T151139Z" creationid="msdx" creationdate="20141123T151139Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q show&lt;/c1&gt;&lt;/s0&gt; 的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q taskX&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T122328Z" creationid="msdx" creationdate="20141110T122328Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q taskX&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q taskY taskX&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T012846Z" creationid="msdx" creationdate="20141111T012846Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q taskY taskX&lt;/c1&gt;&lt;/s0&gt; 的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q taskY&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T013520Z" creationid="msdx" creationdate="20141111T013520Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q taskY&lt;/c1&gt;&lt;/s0&gt; 的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q test&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T125713Z" creationid="95" creationdate="20160521T125713Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q test&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle :api:build&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T095310Z" creationid="haohang" creationdate="20160726T095310Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle :api:build&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle :api:buildDependents&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160727T052710Z" creationid="haohang" creationdate="20160727T052701Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle :api:buildDependents&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle :api:buildNeeded&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160727T052319Z" creationid="haohang" creationdate="20160727T052319Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle: api:buildNeeded&lt;/c1&gt; &lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle disableMe&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T055757Z" creationid="msdx" creationdate="20141111T055749Z">
        <seg>&lt;s0&gt; &lt;c1&gt;Gradle disableMe&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle distZip&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150703T100710Z" creationid="haohang" creationdate="20150703T100710Z">
        <seg>&lt;s0&gt; &lt;c1&gt;gradle distZip&lt;/c1&gt;&lt;/s0&gt;的输出</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle distanceToIceberg&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160715T080053Z" creationid="haohang" creationdate="20160715T080053Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle distanceToIceberg&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle hello -PskipHello&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T021027Z" creationid="msdx" creationdate="20141111T021027Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle hello -PskipHello&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle hello&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141115T153417Z" creationid="msdx" creationdate="20141115T153417Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle hello&lt;/c1&gt;&lt;/s0&gt; 的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle intTestClasses&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T133232Z" creationid="Administrator" creationdate="20150427T133232Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle intTestClasses&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle intro&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T061020Z" creationid="msdx" creationdate="20141116T061020Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle intro&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle signArchives&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160109T072547Z" creationid="95" creationdate="20160109T072547Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle signArchives&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle signStuffZip&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160126T140542Z" creationid="95" creationdate="20160126T140542Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle signStuffZip&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle test&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T025455Z" creationid="haohang" creationdate="20160519T025350Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle test&lt;/c1&gt;&lt;/s0&gt; 的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle transform&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T060343Z" creationid="msdx" creationdate="20141111T060343Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle transform&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output.FILE</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T132321Z" creationid="msdx" creationdate="20150506T132321Z">
        <seg>Output.FILE</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Outputs Log Levels</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T102837Z" creationid="msdx" creationdate="20141116T102837Z">
        <seg>输出日志级别</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Overview</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T161852Z" creationid="msdx" creationdate="20141109T161852Z">
        <seg>概述</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Parallel execution is an incubating feature.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T090201Z" creationid="haohang" creationdate="20160726T090201Z">
        <seg>并行执行仍是一个孵化中的功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Parallel project execution allows the separate projects in a decoupled multi-project build to be executed in parallel (see also: &lt;a0&gt;Section 56.9, “Decoupled Projects”&lt;/a0&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T090349Z" creationid="haohang" creationdate="20160726T090226Z">
        <seg>并行项目执行允许在一个解耦的多项目构建中的一些单独的项目被并行执行（参见︰&lt;a0&gt;第 56.9节，“解耦项目”&lt;/a0&gt;）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Parentheses are optional for method calls.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T062548Z" creationid="msdx" creationdate="20141108T062440Z">
        <seg>调用方法时括号是可选的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>People can check out such a project from svn and have everything necessary to build it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151201T062926Z" creationid="haohang" creationdate="20151201T062926Z">
        <seg>人们可以从 svn 检出这样一个项目，并且具体必要的一切，来构建它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Per-configuration excludes are also included in the Maven POM, if they are convertible.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T145716Z" creationid="95" creationdate="20160106T145716Z">
        <seg>每一个configuration的排除规则如果可以被转换的话，也会包含在Maven POM中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Performs a full build of the project and all projects it depends on.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T011435Z" creationid="Administrator" creationdate="20150426T011435Z">
        <seg>执行项目本身及它所依赖的其他所有项目的完整构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Performs a full build of the project and all projects which depend on it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T011703Z" creationid="Administrator" creationdate="20150426T011703Z">
        <seg>执行项目本身及依赖它的其他所有项目的完整构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Performs a full build of the project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T010517Z" creationid="Administrator" creationdate="20150426T010517Z">
        <seg>执行项目的完事构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Performs all verification tasks in the project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T010450Z" creationid="Administrator" creationdate="20150426T010423Z">
        <seg>执行项目中所有的核查任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Performs quality checks on your project's Groovy source files using &lt;a0&gt;CodeNarc&lt;/a0&gt; and generates reports from these checks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T034742Z" creationid="Administrator" creationdate="20150425T034742Z">
        <seg>使用&lt;a0&gt;CodeNarc&lt;/a0&gt;对您的项目的 Groovy 源文件执行质量检查并生成报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Performs quality checks on your project's Java source files using &lt;a0&gt;Checkstyle&lt;/a0&gt; and generates reports from these checks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T034720Z" creationid="Administrator" creationdate="20150425T034720Z">
        <seg>使用&lt;a0&gt;Checkstyle&lt;/a0&gt;对您的项目的 Java 源文件执行质量检查并生成报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Performs quality checks on your project's Java source files using &lt;a0&gt;FindBugs&lt;/a0&gt; and generates reports from these checks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T035201Z" creationid="Administrator" creationdate="20150425T035201Z">
        <seg>使用&lt;a0&gt;FindBugs&lt;/a0&gt;对您的项目的 Java 源文件执行质量检查并生成报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Performs quality checks on your project's Java source files using &lt;a0&gt;PMD&lt;/a0&gt; and generates reports from these checks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T035345Z" creationid="Administrator" creationdate="20150425T035345Z">
        <seg>使用&lt;a0&gt;PMD&lt;/a0&gt;对您的项目的 Java 源文件执行质量检查并生成报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Performs quality checks on your project's source files using &lt;a0&gt;JDepend&lt;/a0&gt; and generates reports from these checks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T035322Z" creationid="Administrator" creationdate="20150425T035322Z">
        <seg>使用&lt;a0&gt;JDepend&lt;/a0&gt;对您的项目的源文件执行质量检查并生成报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perhaps a repository was initially misconfigured, or perhaps a "non-changing" module was published incorrectly.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T153950Z" creationid="95" creationdate="20151129T153950Z">
        <seg>也许一个存储库的最初配置不正确，或许是一个“无改变”的模块被不正确地发布。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Periodically garbage collect the Gradle caches.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141117T151301Z" creationid="msdx" creationdate="20141117T151301Z">
        <seg>Gradle 缓存的定期垃圾收集。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Person.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T083506Z" creationid="haohang" creationdate="20160726T083506Z">
        <seg>Person.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PersonImpl.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T083507Z" creationid="haohang" creationdate="20160726T083507Z">
        <seg>PersonImpl.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PersonService.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T083511Z" creationid="haohang" creationdate="20160726T083511Z">
        <seg>PersonService.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PersonServiceTest.java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T083513Z" creationid="haohang" creationdate="20160726T083513Z">
        <seg>PersonServiceTest.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Plans for future integration include:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T151634Z" creationid="95" creationdate="20160504T151538Z">
        <seg>未来的集成计划包括：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Please be aware that the DSL and other configuration may change in later Gradle versions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T092322Z" creationid="msdx" creationdate="20150503T094910Z">
        <seg>请务必注意，在以后的 Gradle 版本中，相关的 DSL 和其他配置可能会有所改变。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Please be aware that this feature may change in later Gradle versions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T142913Z" creationid="msdx" creationdate="20141110T142913Z">
        <seg>请注意此功能在以后的 Gradle 版本中可能会改变。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Please find more information in &lt;a0&gt;Section 20.1, “Configuring the build environment via gradle.properties”&lt;/a0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141119T031218Z" creationid="msdx" creationdate="20141119T031218Z">
        <seg>有关更多信息请参阅&lt;a0&gt;20.1章节， “通过 gradle.properties 配置构建环境”&lt;/a0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Please see &lt;a0&gt;&lt;c1&gt;DependencyHandler&lt;/c1&gt;&lt;/a0&gt; for examples and a complete reference for declaring dependencies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150730T035603Z" creationid="haohang" creationdate="20150730T035445Z">
        <seg>请参阅 &lt;a0&gt;&lt;c1&gt;DependencyHandler&lt;/c1&gt;&lt;/a0&gt; 的例子和声明依赖的完整参考。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Please try them out and give us feedback.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151220T120803Z" creationid="95" creationdate="20151220T120803Z">
        <seg>请尝试它们，并向我们反馈。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Please use it and let us know how it works for you.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T090221Z" creationid="haohang" creationdate="20160726T090221Z">
        <seg>请使用它，并且让我们知道它是帮助你的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T003552Z" creationid="haohang" creationdate="20150603T003552Z">
        <seg>插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Plugin Id</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141126T120830Z" creationid="msdx" creationdate="20141126T120759Z">
        <seg>插件 Id</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Plugins add new tasks (e.g. &lt;a2&gt;&lt;c3&gt;JavaCompile&lt;/c3&gt;&lt;/a2&gt;), domain objects (e.g. &lt;a4&gt;&lt;c5&gt;SourceSet&lt;/c5&gt;&lt;/a4&gt;), conventions (e.g. main Java source is located at &lt;c6&gt;src/main/java&lt;/c6&gt;) as well as extending core objects and objects from other plugins.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141122T161737Z" creationid="msdx" creationdate="20141122T161411Z">
        <seg>插件添加了新任务 （例如&lt;a2&gt;&lt;c3&gt;JavaCompile&lt;/c3&gt;&lt;/a2&gt;），域对象 （例如&lt;a4&gt;&lt;c5&gt;SourceSet&lt;/c5&gt;&lt;/a4&gt;），约定（例如主要的 Java 源代码是位于&lt;c6&gt;src/main/java&lt;/c6&gt;），以及扩展的核心对象和其他插件的对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Plugins advertise a short name for themselves.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141122T162147Z" creationid="msdx" creationdate="20141122T162147Z">
        <seg>插件都有表示它们自己的一个短名称。.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Plugins are said to be &lt;s0&gt;&lt;e1&gt;applied&lt;/e1&gt;&lt;/s0&gt;, which is done via the &lt;a2&gt;&lt;c3&gt;Project.apply()&lt;/c3&gt;&lt;/a2&gt; method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141122T162024Z" creationid="msdx" creationdate="20141122T161842Z">
        <seg>插件都认为是被&lt;s0&gt;&lt;e1&gt;应用&lt;/e1&gt;&lt;/s0&gt;，通过&lt;a2&gt;&lt;c3&gt;Project.apply()&lt;/c3&gt;&lt;/a2&gt;方法来完成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Plugins can pre-configure the project in smart ways to support convention-over-configuration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141123T151441Z" creationid="msdx" creationdate="20141123T151441Z">
        <seg>插件可以通过智能的方法对项目进行预配置以支持约定优于配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Pmd</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T135544Z" creationid="msdx" creationdate="20150505T135544Z">
        <seg>pmd</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Potential usages of the &lt;a2&gt;&lt;c3&gt;ResolutionResult&lt;/c3&gt;&lt;/a2&gt; API:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T034004Z" creationid="haohang" creationdate="20150807T034004Z">
        <seg>&lt;a2&gt;&lt;c3&gt;ResolutionResult&lt;/c3&gt;&lt;/a2&gt; API的可能用法：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Pre-configure added tasks with useful defaults.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141123T150949Z" creationid="msdx" creationdate="20141123T150949Z">
        <seg>使用有用的默认设置对已添加的任务进行预配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Preemptive execution of certain tasks, for example compilation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141117T151201Z" creationid="msdx" creationdate="20141117T151201Z">
        <seg>预先执行某些任务，比如编译。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Prerequisites</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162121Z" creationid="msdx" creationdate="20141109T162121Z">
        <seg>系统要求</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Presently, Gradle supports building native binaries from any combination of C++, C, Assembler, Objective-C and Objective-C++ sources.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160219T082433Z" creationid="haohang" creationdate="20160219T082433Z">
        <seg>目前，Gradle 支持从C++，C，Assembler，Objective-C 和 Objective-C++源码的任意组合中构建原生二进制文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Presently, a &lt;c0&gt;Platform&lt;/c0&gt; consists of a defined operating system and architecture.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160405T033554Z" creationid="haohang" creationdate="20160401T094407Z">
        <seg>目前，一个&lt;c0&gt;Platform&lt;/c0&gt;由一个定义的操作系统和架构构成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Presently, this library dependency must be provided by your project for each &lt;a0&gt;&lt;c1&gt;TestSuiteExecutableBinary&lt;/c1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T151225Z" creationid="95" creationdate="20160504T151225Z">
        <seg>目前，这个库依赖项必须由你的项目为每个&lt;a0&gt;&lt;c1&gt;TestSuiteExecutableBinary&lt;/c1&gt;&lt;/a0&gt;提供。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Production ANTLR grammar files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T095142Z" creationid="haohang" creationdate="20150625T095142Z">
        <seg>生产 ANTLR 语法文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Production Groovy sources.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T075116Z" creationid="msdx" creationdate="20150429T075116Z">
        <seg>Production Groovy 源代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Production Java source</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T083403Z" creationid="Administrator" creationdate="20150426T083403Z">
        <seg>产品的Java源代码</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Production Scala sources.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T152619Z" creationid="msdx" creationdate="20150429T152619Z">
        <seg>Production Scala 源代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Production resources</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T083418Z" creationid="Administrator" creationdate="20150426T083418Z">
        <seg>产品的资源</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Progress information messages</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T070733Z" creationid="msdx" creationdate="20141116T070733Z">
        <seg>进度信息消息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Project</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T044200Z" creationid="msdx" creationdate="20141108T044200Z">
        <seg>Project</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Project dependencies enable partial multi-project builds.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T084250Z" creationid="haohang" creationdate="20160726T084250Z">
        <seg>项目依赖项启用了部分的多项目构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Project dependency</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T080355Z" creationid="haohang" creationdate="20150722T080355Z">
        <seg>项目依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Project in the directory where the build is executed is also configured, but only when Gradle is executed without any tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160522T124418Z" creationid="95" creationdate="20160522T123940Z">
        <seg>执行构建的所在目录的项目也会被配置，但是仅在Gradle 被执行但没有任务时。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Project layout</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131640Z" creationid="msdx" creationdate="20150509T131640Z">
        <seg>项目布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Project settings determine how the project is going to be analyzed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150510T143815Z" creationid="msdx" creationdate="20150510T143815Z">
        <seg>Project 设置会决定这个项目将如何进行分析。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Project-level up-to-date checks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T090809Z" creationid="haohang" creationdate="20160726T090809Z">
        <seg>项目级别的 up-to-date 检查。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Project-specific information is configured in the &lt;c0&gt;sonarRunner&lt;/c0&gt; block of the corresponding project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150519T124637Z" creationid="msdx" creationdate="20150519T124534Z">
        <seg>特定项目的信息在对应的 project 的&lt;c0&gt;sonarRunner&lt;/c0&gt;块中配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ProjectEvaluationListener</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T155219Z" creationid="msdx" creationdate="20141116T155219Z">
        <seg>ProjectEvaluationListener</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Projects and tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162322Z" creationid="msdx" creationdate="20141109T162322Z">
        <seg>Projects 和 tasks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Projects bundled as reusable libraries may have different requirements than enterprise applications integrated into much larger systems of software and infrastructure.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150716T091925Z" creationid="haohang" creationdate="20150716T091925Z">
        <seg>项目捆绑作为可重用的库，比起企业应用集成到更大的软件和基础设施的系统中，可能有不同的要求。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Projects can also be configured individually.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T091601Z" creationid="msdx" creationdate="20150512T091601Z">
        <seg>这些 Projects 也可以单独配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Properties and methods declared in a project are inherited to all its subprojects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160727T053005Z" creationid="haohang" creationdate="20160727T053005Z">
        <seg>定义在一个项目里的属性和方法都会被继承到它所有的子项目中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Property</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T131614Z" creationid="msdx" creationdate="20150506T131614Z">
        <seg>Property</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Property name</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T155807Z" creationid="msdx" creationdate="20141113T155807Z">
        <seg>属性名称</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>PropertyReportTask</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T061522Z" creationid="haohang" creationdate="20150628T061522Z">
        <seg>PropertyReportTask</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Protocol</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T141818Z" creationid="95" creationdate="20160105T141818Z">
        <seg>协议</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Provide faster feedback for execution of small projects without awaiting completion of other projects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T085948Z" creationid="haohang" creationdate="20160726T085948Z">
        <seg>对于一些小项目的执行，提供更快的反馈，而不必等待其他项目的完成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Provide the authentication domain via the &lt;c0&gt;http.auth.ntlm.domain&lt;/c0&gt; system property.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141121T142750Z" creationid="msdx" creationdate="20141121T142750Z">
        <seg>通过&lt;c0&gt;http.auth.ntlm.domain&lt;/c0&gt;系统属性提供验证域。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Provides integration with the &lt;a0&gt;JaCoCo&lt;/a0&gt; code coverage library for Java.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T040415Z" creationid="Administrator" creationdate="20150425T040415Z">
        <seg>提供对 Java 的&lt;a0&gt;JaCoCo&lt;/a0&gt;代码覆盖率库的集成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Provides integration with the &lt;a0&gt;Sonar&lt;/a0&gt; code quality platform.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T035635Z" creationid="Administrator" creationdate="20150425T035635Z">
        <seg>提供对&lt;a0&gt;Sonar&lt;/a0&gt;代码质量平台的集成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Publish messages to your favourite platforms, such as Twitter or Growl.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T034433Z" creationid="Administrator" creationdate="20150425T034433Z">
        <seg>将消息发布到你所喜爱的平台，如 Twitter 或 Growl。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Publishing artifacts</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163647Z" creationid="msdx" creationdate="20141109T163647Z">
        <seg>发布项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>QUIET</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T070716Z" creationid="msdx" creationdate="20141116T070716Z">
        <seg>QUIET</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>QUIET and higher</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T103019Z" creationid="msdx" creationdate="20141116T103019Z">
        <seg>QUIET 及更高</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Quicker feedback.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141117T151207Z" creationid="msdx" creationdate="20141117T151207Z">
        <seg>更快的反馈。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Rather than depending on the whole configuration, a dependency on just the desired artifacts is declared.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150730T035047Z" creationid="haohang" creationdate="20150730T035047Z">
        <seg>一个依赖只是声明了所需的 artifacts ，而不是依赖整个配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Re-use of configuration for unchanged projects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T090754Z" creationid="haohang" creationdate="20160726T090754Z">
        <seg>对于不变的项目复用配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Real-time feedback for test execution.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T151744Z" creationid="95" creationdate="20160504T151744Z">
        <seg>测试执行的的实时反馈。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reasonable default is used if the setting is unspecified.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141120T051939Z" creationid="msdx" creationdate="20141120T051939Z">
        <seg>如果该设置未指定，将使用合理的默认值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reduce total build time for a multi-project build where execution is IO bound or otherwise does not consume all available CPU resources.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T085916Z" creationid="haohang" creationdate="20160726T085916Z">
        <seg>通过让执行进行IO绑定，或者是其他不消耗所有可用资源的方式，减少多项目构建 的总构建时间</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reference name</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T004644Z" creationid="haohang" creationdate="20150603T004644Z">
        <seg>引用名称</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Regardless of which Zinc version is used, Zinc will always use the Scala compiler found on the &lt;c2&gt;scalaTools&lt;/c2&gt; configuration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T155052Z" creationid="msdx" creationdate="20150501T155052Z">
        <seg>无论使用哪一个 Zinc 版本，Zinc 都是使用在&lt;c2&gt;scalaTools&lt;/c2&gt;配置上找到的 Scala 编译器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Removes all Eclipse configuration files</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T004407Z" creationid="haohang" creationdate="20150603T004407Z">
        <seg>删除所有的 Eclipse 配置文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Removes all IDEA configuration files</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T072349Z" creationid="haohang" creationdate="20150625T072349Z">
        <seg>删除所有的 IDEA 配置文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Removes the &lt;c0&gt;.classpath&lt;/c0&gt; file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T004414Z" creationid="haohang" creationdate="20150603T004414Z">
        <seg>删除&lt;c0&gt;.classpath&lt;/c0&gt;文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Removes the &lt;c0&gt;.project&lt;/c0&gt; file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T004411Z" creationid="haohang" creationdate="20150603T004411Z">
        <seg>删除&lt;c0&gt;.project&lt;/c0&gt;文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Removes the &lt;c0&gt;.settings/org.eclipse.jdt.core.prefs&lt;/c0&gt; file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T004419Z" creationid="haohang" creationdate="20150603T004419Z">
        <seg>删除&lt;c0&gt;.settings/org.eclipse.jdt.core.prefs&lt;/c0&gt;文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Removes the &lt;c0&gt;.settings/org.eclipse.wst.common.component&lt;/c0&gt; file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T004428Z" creationid="haohang" creationdate="20150603T004428Z">
        <seg>删除&lt;c0&gt;.settings/org.eclipse.wst.common.component&lt;/c0&gt;文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Removes the IDEA module file</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T072457Z" creationid="haohang" creationdate="20150625T072457Z">
        <seg>删除 IDEA 模块文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Removes the IDEA project file</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T072513Z" creationid="haohang" creationdate="20150625T072400Z">
        <seg>删除 IDEA 项目文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Removes the IDEA workspace file</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T072507Z" creationid="haohang" creationdate="20150625T072507Z">
        <seg>删除 IDEA 工作区文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Replacing tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150330T141034Z" creationid="Administrator" creationdate="20150330T141034Z">
        <seg>替换任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Repositories</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163629Z" creationid="msdx" creationdate="20141109T163629Z">
        <seg>仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Repository Manager like Artifactory or Nexus make this easier.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151201T060912Z" creationid="haohang" creationdate="20151201T060838Z">
        <seg>仓库管理器，比如像 Artifactory 或 Nexus 则会使这些工作变得轻松。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Repository independence allows builds to be isolated from each other in an advanced way that no build tool has done before.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T151004Z" creationid="95" creationdate="20151129T151004Z">
        <seg>仓库独立允许构建之间用一种先进方法的方法彼此隔离，以前没有构建工具能做到这样。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Requires the notify-send package to be installed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T065651Z" creationid="haohang" creationdate="20150628T065651Z">
        <seg>需要已安装通知发送包。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Resources</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131803Z" creationid="msdx" creationdate="20150509T131803Z">
        <seg>资源</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Resources for the given source set</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T083519Z" creationid="Administrator" creationdate="20150426T083519Z">
        <seg>给定的源集的资源</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Results in an efficient binary format.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104608Z" creationid="msdx" creationdate="20150428T104608Z">
        <seg>有效二进制格式的结果。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Return Type</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150526T004650Z" creationid="haohang" creationdate="20150526T004650Z">
        <seg>返回类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Returns an OsgiManifest object configured by the closure.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150526T004815Z" creationid="haohang" creationdate="20150526T004725Z">
        <seg>返回一个通过闭包配置的 OsgiManifest 对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Returns an OsgiManifest object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150526T004717Z" creationid="haohang" creationdate="20150526T004717Z">
        <seg>返回一个 OsgiManifest 对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reusing and expiration of daemons</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150508T131754Z" creationid="msdx" creationdate="20150508T131754Z">
        <seg> 重用和失效的守护程序</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Root project is always configured.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160522T122057Z" creationid="95" creationdate="20160522T122057Z">
        <seg>根项目始终会被配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Rules not just work when calling tasks from the command line.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T065528Z" creationid="msdx" creationdate="20141111T065528Z">
        <seg>规则不只是从命令行调用任务才起作用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Run build validations early in the build: eg.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T144711Z" creationid="msdx" creationdate="20141110T144219Z">
        <seg>在构建中尽早进行构建验证：如，</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Running "&lt;s0&gt;&lt;c1&gt;gradle installCustomDist&lt;/c1&gt;&lt;/s0&gt;" will install the distribution contents into "&lt;c2&gt;&lt;e3&gt;&lt;c4&gt;$buildDir&lt;/c4&gt;&lt;/e3&gt;/install/custom&lt;/c2&gt;".</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150701T031642Z" creationid="haohang" creationdate="20150701T031419Z">
        <seg>运行”&lt;s0&gt;&lt;c1&gt;gradle installCustomDist&lt;/c1&gt;&lt;/s0&gt;“将会把分发内容安装到”&lt;c2&gt;&lt;e3&gt;&lt;c4&gt;$buildDir&lt;/c4&gt;&lt;/e3&gt;/install/custom&lt;/c2&gt;“。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Running &lt;s0&gt;&lt;c1&gt;gradle build&lt;/c1&gt;&lt;/s0&gt; will compile, test and JAR your project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T065615Z" creationid="msdx" creationdate="20141030T065509Z">
        <seg>运行 &lt;s0&gt;&lt;c1&gt;gradle build&lt;/c1&gt;&lt;/s0&gt;将会对你的项目进行编译，测试和打包成jar。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Running &lt;s0&gt;&lt;c1&gt;gradle build&lt;/c1&gt;&lt;/s0&gt; will compile, test and WAR your project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T085726Z" creationid="msdx" creationdate="20141030T085726Z">
        <seg>运行 &lt;s0&gt;&lt;c1&gt;gradle build&lt;/c1&gt;&lt;/s0&gt;将会执行编译，测试和把你的项目打包为WAR包。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Running &lt;s0&gt;&lt;c1&gt;gradle jettyRun&lt;/c1&gt;&lt;/s0&gt; will run your web application in an embedded Jetty web container.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T094344Z" creationid="msdx" creationdate="20141030T094344Z">
        <seg>运行 &lt;s0&gt;&lt;c1&gt;gradle jettyRun&lt;/c1&gt;&lt;/s0&gt; 将会在一个嵌入式Jetty web容器中运行您的web应用程序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Running &lt;s2&gt;&lt;c3&gt;gradle jettyRunWar&lt;/c3&gt;&lt;/s2&gt; will build the WAR file, and then run it in an embedded web container.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T094528Z" creationid="msdx" creationdate="20141030T094528Z">
        <seg>运行 &lt;s2&gt;&lt;c3&gt;gradle jettyRunWar&lt;/c3&gt;&lt;/s2&gt;会构建WAR文件，然后在一个嵌入式的web容器中运行它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Running and testing your installation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162147Z" creationid="msdx" creationdate="20141109T162147Z">
        <seg>运行和测试您的安装</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Running this from the &lt;c0&gt;consumer&lt;/c0&gt; directory gives:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T071741Z" creationid="haohang" creationdate="20160718T071041Z">
        <seg>从&lt;c0&gt;consumer&lt;/c0&gt;目录运行如下：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Running your web application</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163802Z" creationid="msdx" creationdate="20141109T163802Z">
        <seg>运行您的 web 应用程序</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Runs Checkstyle against the given source set's Java source files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T025718Z" creationid="msdx" creationdate="20150505T025718Z">
        <seg>针对source set 的 Java 源文件运行 Checkstyle。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Runs Checkstyle against the production Java source files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T025650Z" creationid="msdx" creationdate="20150505T024705Z">
        <seg>针对生产Java 源文件运行 Checkstyle。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Runs Checkstyle against the test Java source files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T025707Z" creationid="msdx" creationdate="20150505T025707Z">
        <seg>针对测试 Java 源文件运行 Checkstyle。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Runs CodeNarc against the given source set's Groovy source files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T133242Z" creationid="msdx" creationdate="20150505T133242Z">
        <seg>针对给定的source set 的 Groovy 源文件运行 CodeNarc。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Runs CodeNarc against the production Groovy source files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T133207Z" creationid="msdx" creationdate="20150505T133207Z">
        <seg>针对生产 Groovy 源文件运行 CodeNarc。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Runs CodeNarc against the test Groovy source files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T133228Z" creationid="msdx" creationdate="20150505T133228Z">
        <seg>针对测试 Groovy 源文件运行 CodeNarc。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Runs FindBugs against the given source set's Java source files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T133722Z" creationid="msdx" creationdate="20150505T133722Z">
        <seg>针对source set 的 Java 源文件运行 FindBugs。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Runs FindBugs against the production Java source files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T133700Z" creationid="msdx" creationdate="20150505T133700Z">
        <seg>针对生产Java 源文件运行 FindBugs。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Runs FindBugs against the test Java source files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T133712Z" creationid="msdx" creationdate="20150505T133712Z">
        <seg>针对测试 Java 源文件运行 FindBugs。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Runs JDepend against the given source set's Java source files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T134307Z" creationid="msdx" creationdate="20150505T134307Z">
        <seg>针对source set 的 Java 源文件运行 JDepend。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Runs JDepend against the production Java source files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T134239Z" creationid="msdx" creationdate="20150505T134239Z">
        <seg>针对生产Java 源文件运行 JDepend。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Runs JDepend against the test Java source files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T134258Z" creationid="msdx" creationdate="20150505T134258Z">
        <seg>针对测试Java 源文件运行 JDepend。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Runs PMD against the given source set's Java source files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T135603Z" creationid="msdx" creationdate="20150505T135603Z">
        <seg>针对source set 的 Java 源文件运行 PMD。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Runs PMD against the production Java source files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T135551Z" creationid="msdx" creationdate="20150505T135551Z">
        <seg>针对生产Java 源文件运行 PMD。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Runs PMD against the test Java source files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T135558Z" creationid="msdx" creationdate="20150505T135558Z">
        <seg>针对测试 Java 源文件运行 PMD。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Runs the unit tests using JUnit or TestNG.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T004846Z" creationid="Administrator" creationdate="20150426T004846Z">
        <seg>使用 JUnit 或 TestNG运行单元测试。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Runtime dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T084207Z" creationid="Administrator" creationdate="20150426T084207Z">
        <seg>运行时依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Runtime time dependencies for the given source set</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T084857Z" creationid="Administrator" creationdate="20150426T084857Z">
        <seg>给定源集的运行时依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Say one open source library needs one version of a logging library and a another uses an alternative version.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150720T064338Z" creationid="haohang" creationdate="20150720T064232Z">
        <seg>比如说一个开源库需要一个日志库的一个版本，而另一个库需要日志库的另一个版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Scala</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T003815Z" creationid="haohang" creationdate="20150603T003815Z">
        <seg>Scala</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Scala plugin - tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T152445Z" creationid="msdx" creationdate="20150429T152445Z">
        <seg>Scala 插件-任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Scala projects need to declare a &lt;c0&gt;scala-library&lt;/c0&gt; dependency.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T152803Z" creationid="msdx" creationdate="20150429T152803Z">
        <seg>Scala 项目需要声明一个&lt;c0&gt;scala-library&lt;/c0&gt;依赖项。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Scala sources for the given source set.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T152644Z" creationid="msdx" creationdate="20150429T152644Z">
        <seg>给定的source set 的 Scala 源代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ScalaCompile</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T145449Z" creationid="msdx" creationdate="20150429T145449Z">
        <seg>ScalaCompile</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ScalaDoc</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T145514Z" creationid="msdx" creationdate="20150429T145514Z">
        <seg>scaladoc</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Scalability is an important requirement for Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160522T120830Z" creationid="95" creationdate="20160522T120830Z">
        <seg>可伸缩性是 Gradle 的一项重要要求。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Secondly when using parallel execution and all dependencies of a task have been satisfied apart from should run after then this task will be run regardless of weather its 'should run after' dependencies have been run or not.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T012001Z" creationid="msdx" creationdate="20141110T152504Z">
        <seg>其次，当使用并行执行，并且一个任务的所有依赖项除了任务应该在之后运行之外所有条件已满足，那么这个任务将会运行，不管它的“应该在之后运行”的依赖项是否已经运行了。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Secondly, the &lt;c0&gt;copy()&lt;/c0&gt; method can not honor task dependencies when a task is used as a copy source (i.e. as an argument to &lt;c1&gt;from()&lt;/c1&gt;) because it's a method and not a task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T143753Z" creationid="msdx" creationdate="20141113T131801Z">
        <seg>第二，当一个任务用作复制源（即作为 &lt;c1&gt;from()&lt;/c1&gt; 的参数）的时候，&lt;c0&gt;copy()&lt;/c0&gt;方法不能建立任务依赖性，因为它是一个方法，而不是一个任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sections of existing Eclipse files that are also the target of generated content will be amended or overwritten, depending on the particular section.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T103131Z" creationid="haohang" creationdate="20150624T102854Z">
        <seg>已存在的Eclipse 文件的部分，也是生成的目标内容，将会被修改或覆盖，具体取决于特定的部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sections of existing IDEA files that are also the target of generated content will be amended or overwritten, depending on the particular section.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T073342Z" creationid="haohang" creationdate="20150625T073342Z">
        <seg>已存在的 IDEA 文件的部分，也是生成的目标内容，将会被修改或覆盖，具体取决于特定的部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See &lt;a0&gt;&lt;c1&gt;AnnouncePluginExtension&lt;/c1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T091042Z" creationid="haohang" creationdate="20150628T091009Z">
        <seg>请参阅 &lt;a0&gt;&lt;c1&gt;AnnouncePluginExtension&lt;/c1&gt;&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See &lt;a0&gt;&lt;c1&gt;CheckstyleExtension&lt;/c1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T132843Z" creationid="msdx" creationdate="20150505T132843Z">
        <seg>请参阅&lt;a0&gt;&lt;c1&gt;CheckstyleExtension&lt;/c1&gt;&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See &lt;a0&gt;&lt;c1&gt;CodeNarcExtension&lt;/c1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T133518Z" creationid="msdx" creationdate="20150505T133518Z">
        <seg>请参阅&lt;a0&gt;&lt;c1&gt;CodeNarcExtension&lt;/c1&gt;&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See &lt;a0&gt;&lt;c1&gt;DependencyHandler&lt;/c1&gt;&lt;/a0&gt; for more examples and a complete reference.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T102907Z" creationid="haohang" creationdate="20150722T102859Z">
        <seg>有关更多的例子和完整的参考，请参阅&lt;a0&gt;&lt;c1&gt;DependencyHandler&lt;/c1&gt; &lt;/a0&gt; 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See &lt;a0&gt;&lt;c1&gt;FindBugsExtension&lt;/c1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T133906Z" creationid="msdx" creationdate="20150505T133906Z">
        <seg>请参阅&lt;a0&gt;&lt;c1&gt;FindBugsExtension&lt;/c1&gt;&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See &lt;a0&gt;&lt;c1&gt;IvyArtifactRepository&lt;/c1&gt;&lt;/a0&gt; for details.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T110451Z" creationid="95" creationdate="20151006T110451Z">
        <seg>详细信息请参阅&lt;a0&gt;&lt;c1&gt;IvyArtifactRepository&lt;/c1&gt; &lt;/a0&gt; 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See &lt;a0&gt;&lt;c1&gt;JDependExtension&lt;/c1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T134507Z" creationid="msdx" creationdate="20150505T134507Z">
        <seg>请参阅&lt;a0&gt;&lt;c1&gt;JDependExtension&lt;/c1&gt;&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See &lt;a0&gt;&lt;c1&gt;PmdExtension&lt;/c1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T135820Z" creationid="msdx" creationdate="20150505T135820Z">
        <seg>请参阅&lt;a0&gt;&lt;c1&gt;PmdExtension&lt;/c1&gt;&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See &lt;a0&gt;&lt;c1&gt;Project&lt;/c1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150702T105301Z" creationid="haohang" creationdate="20150702T105301Z">
        <seg>请参见 &lt;a0&gt;&lt;c1&gt;Project&lt;/c1&gt;&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See &lt;a0&gt;Chapter 59, &lt;i1&gt;Organizing Build Logic&lt;/i1&gt;&lt;/a0&gt; for more details about the &lt;c2&gt;buildSrc&lt;/c2&gt; project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T144922Z" creationid="95" creationdate="20160814T144922Z">
        <seg>有关&lt;c2&gt;buildSrc&lt;/c2&gt; 项目的更详细信息，请参阅 &lt;a0&gt;第五十九章， &lt;i1&gt;组织构建逻辑&lt;/i1&gt;&lt;/a0&gt; 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See &lt;a0&gt;Section 20.1, “Configuring the build environment via gradle.properties”&lt;/a0&gt; for how to manage memory settings for that process.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150525T234908Z" creationid="haohang" creationdate="20150525T234749Z">
        <seg>有关如何管理这一进程的内存设置，请参阅&lt;a0&gt;第 20.1 节，“通过 gradle.properties 配置构建环境"的第 20.1 条”&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See &lt;a0&gt;Section 35.6, “Configuring Sonar Settings from the Command Line”&lt;/a0&gt; for more information.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T064406Z" creationid="msdx" creationdate="20150513T064406Z">
        <seg>有关更多信息，请参见&lt;a0&gt;第35.6节，“从命令行配置 Sonar 设置”&lt;/a0&gt; 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See &lt;a0&gt;Section 50.4.8, “Optional attributes”&lt;/a0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T110331Z" creationid="95" creationdate="20151006T110331Z">
        <seg>请参阅&lt;a0&gt; 第50.4.8 节，“可选属性”&lt;/a0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See &lt;a0&gt;Section 50.6, “Repositories”&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T103354Z" creationid="haohang" creationdate="20150801T103354Z">
        <seg>请参阅&lt;a0&gt; 50.6 节，“仓库”&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See &lt;a0&gt;Section 52.6.4.2, “Dependency mapping”&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151228T153150Z" creationid="95" creationdate="20151228T153150Z">
        <seg>见&lt;a0&gt; 52.6.4.2 节，“依赖映射”&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See &lt;a0&gt;Section 56.1.1.1, “Configuration on demand”&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T090615Z" creationid="msdx" creationdate="20141120T053647Z">
        <seg>请参阅&lt;a0&gt;第 56.1.1.1 节，“按需配置”&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See &lt;a1&gt;&lt;c2&gt;SigningExtension.setRequired()&lt;/c2&gt;&lt;/a1&gt; for more information.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160126T143716Z" creationid="95" creationdate="20160126T143716Z">
        <seg>更多的信息，请参阅&lt;a1&gt;&lt;c2&gt;SigningExtension.setRequired()&lt;/c2&gt; &lt;/a1&gt; 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See &lt;a1&gt;&lt;c2&gt;TestLoggingContainer&lt;/c2&gt;&lt;/a1&gt; for how to tune test logging to your preferences.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T015414Z" creationid="Administrator" creationdate="20150428T015414Z">
        <seg>请参阅&lt;a1&gt;&lt;c2&gt;TestLoggingContainer&lt;/c2&gt;&lt;/a1&gt;，查看如何把你的测试日志打印调整为你的偏好设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See &lt;a2&gt;&lt;c3&gt;ResolutionStrategy&lt;/c3&gt;&lt;/a2&gt; for details on how to explicitly choose a particular version.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150721T083450Z" creationid="haohang" creationdate="20150721T083450Z">
        <seg>有关如何显式选择一个特定版本的详细信息，请参阅&lt;a2&gt;&lt;c3&gt;ResolutionStrategy&lt;/c3&gt; &lt;/a2&gt; 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See &lt;a2&gt;Chapter 19, &lt;i3&gt;The Gradle Daemon&lt;/i3&gt;&lt;/a2&gt; for more details.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141121T141159Z" creationid="msdx" creationdate="20141121T141159Z">
        <seg>更多详细信息，请参阅&lt;a2&gt;第十九章， &lt;i3&gt;Gradle 守护进程&lt;/i3&gt;&lt;/a2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See &lt;a2&gt;Section 50.8.2.3, “Blacklisting a particular version with a replacement”&lt;/a2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T070734Z" creationid="95" creationdate="20151115T055302Z">
        <seg>请参阅&lt;a2&gt;50.8.2.3 节，“黑名单替换指定版本”&lt;/a2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See also &lt;a0&gt;Chapter 10, &lt;i1&gt;Web Application Quickstart&lt;/i1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T031559Z" creationid="Administrator" creationdate="20150425T031559Z">
        <seg>另请参阅&lt;a0&gt;第 10 章， &lt;i1&gt;Web 应用程序快速入门&lt;/i1&gt;&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See also &lt;a0&gt;Chapter 7, &lt;i1&gt;Java Quickstart&lt;/i1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141126T121041Z" creationid="msdx" creationdate="20141126T121041Z">
        <seg>另请参阅&lt;a0&gt;第 7 章， &lt;i1&gt;Java 快速入门&lt;/i1&gt;&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See also &lt;a0&gt;Chapter 9, &lt;i1&gt;Groovy Quickstart&lt;/i1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141126T121118Z" creationid="msdx" creationdate="20141126T121118Z">
        <seg>另请参阅&lt;a0&gt;第9章，&lt;i1&gt;Groovy 快速入门&lt;/i1&gt;&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See also &lt;a1&gt;Chapter 7, &lt;i2&gt;Java Quickstart&lt;/i2&gt;&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T034907Z" creationid="Administrator" creationdate="20150425T034907Z">
        <seg>另请参阅&lt;a1&gt;第 7 章，&lt;i2&gt;Java 快速入门&lt;/i2&gt;&lt;/a1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See also: &lt;a2&gt;&lt;c3&gt;MavenPluginConvention&lt;/c3&gt;&lt;/a2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160104T153124Z" creationid="95" creationdate="20160104T153124Z">
        <seg>请参见： &lt;a2&gt; &lt;c3&gt;MavenPluginConvention&lt;/c3&gt; &lt;/a2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See examples in &lt;a2&gt;&lt;c3&gt;DependencyHandler&lt;/c3&gt;&lt;/a2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150721T090259Z" creationid="haohang" creationdate="20150721T090259Z">
        <seg>请参阅&lt;a2&gt;&lt;c3&gt;DependencyHandler&lt;/c3&gt;&lt;/a2&gt;中的示例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See examples in &lt;a2&gt;&lt;c3&gt;ResolutionStrategy&lt;/c3&gt;&lt;/a2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150721T091140Z" creationid="haohang" creationdate="20150721T091140Z">
        <seg>请参阅&lt;a2&gt;&lt;c3&gt;ResolutionStrategy&lt;/c3&gt;&lt;/a2&gt;中的示例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See the &lt;a2&gt;tool chain&lt;/a2&gt; section below for more details.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160405T034218Z" creationid="haohang" creationdate="20160405T034218Z">
        <seg>更多的细节请参阅下面的&lt;a2&gt;工具链&lt;/a2&gt;部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See the next section for information on cross-compiling for other operating systems.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T092126Z" creationid="haohang" creationdate="20160408T092126Z">
        <seg>关于其他操作系统的交叉编译的信息，可以参考下一节。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See their API documentation for further information.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150510T144120Z" creationid="msdx" creationdate="20150510T144120Z">
        <seg>可以查阅它们的API 文档以了解更多信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See&lt;a0&gt;Section 52.6.4.1, “Multiple artifacts per project”&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T143542Z" creationid="95" creationdate="20160106T143309Z">
        <seg>请参阅&lt;a0&gt;第 52.6.4.1 节，“一个项目多个构件”&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Selecting which build to execute</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163920Z" creationid="msdx" creationdate="20141109T163920Z">
        <seg>选择执行哪个构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sends local announcements to your desktop about interesting events in the build lifecycle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T034616Z" creationid="Administrator" creationdate="20150425T034616Z">
        <seg>在构建的生命周期中，把本地公告中有关你感兴趣的事件发送到你的桌面。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Separating the storage of downloaded artifacts from the cache metadata permits us to do some very powerful things with our cache that would be difficult with a transparent, file-only cache layout.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T043225Z" creationid="95" creationdate="20151129T043225Z">
        <seg>从下载的构件的存储中分享出缓存的元数据，将允许我们使用缓存做一些非常有用的东西，而如果使用一个透明的只有文件的缓存布局则会很困难。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Set the &lt;c0&gt;http.proxyUser&lt;/c0&gt; system property to a value like &lt;c1&gt;&lt;e2&gt;&lt;c3&gt;domain&lt;/c3&gt;&lt;/e2&gt;/&lt;e4&gt;&lt;c5&gt;username&lt;/c5&gt;&lt;/e4&gt;&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141121T142735Z" creationid="msdx" creationdate="20141121T142735Z">
        <seg>将&lt;c0&gt;http.proxyUser&lt;/c0&gt;系统属性设置为一个这样的值：&lt;c1&gt;&lt;e2&gt;&lt;c3&gt;域&lt;/c3&gt;&lt;/e2&gt;/&lt;e4&gt;&lt;c5&gt;用户名&lt;/c5&gt;&lt;/e4&gt;&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Set&lt;Project&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T061734Z" creationid="haohang" creationdate="20150628T061734Z">
        <seg>Set&lt;Project&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Setting &lt;c0&gt;options.fork&lt;/c0&gt; to &lt;c1&gt;true&lt;/c1&gt; causes compilation to occur in a separate process.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T135610Z" creationid="Administrator" creationdate="20150427T135610Z">
        <seg>将&lt;c0&gt;options.fork&lt;/c0&gt;设置为&lt;c1&gt;true&lt;/c1&gt;将会使编译出现在一个单独的进程中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Setting &lt;c0&gt;options.useAnt&lt;/c0&gt; to &lt;c1&gt;false&lt;/c1&gt; activates Gradle's direct compiler integration, bypassing the Ant task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T135452Z" creationid="Administrator" creationdate="20150427T135452Z">
        <seg>将&lt;c0&gt;options.useAnt&lt;/c0&gt;设置为&lt;c1&gt;false&lt;/c1&gt;将绕过 Ant 任务，而激活 Gradle 的直接编译器集成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Setting a system property of &lt;e0&gt;&lt;c1&gt;taskName.single&lt;/c1&gt;&lt;/e0&gt; = &lt;e2&gt;&lt;c3&gt;testNamePattern&lt;/c3&gt;&lt;/e2&gt; will only execute tests that match the specified &lt;e4&gt;&lt;c5&gt;testNamePattern&lt;/c5&gt;&lt;/e4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T035328Z" creationid="Administrator" creationdate="20150428T035328Z">
        <seg>设置一个 &lt;e0&gt;&lt;c1&gt;taskName.single&lt;/c1&gt;&lt;/e0&gt; = &lt;e2&gt;&lt;c3&gt;testNamePattern&lt;/c3&gt;&lt;/e2&gt; 的系统属性将会只执行匹配 &lt;e4&gt;&lt;c5&gt;testNamePattern&lt;/c5&gt;&lt;/e4&gt;的那些测试。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Setting it to &lt;c2&gt;false&lt;/c2&gt; prevents the execution of any of the task's actions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T055733Z" creationid="msdx" creationdate="20141111T055659Z">
        <seg>将它设置为&lt;c2&gt;false&lt;/c2&gt;，可以不让这个任务的任何操作执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Setting up a consistent environment for your build is as simple as placing those settings into a &lt;c0&gt;gradle.properties&lt;/c0&gt; file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141119T153046Z" creationid="msdx" creationdate="20141119T153046Z">
        <seg>在你的构建当中，建立一致的环境，就和把这些配置放进 &lt;c0&gt;gradle.properties&lt;/c0&gt; 文件一样简单。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Setup</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T031148Z" creationid="msdx" creationdate="20141108T031148Z">
        <seg>设置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Several objects in Gradle implement the &lt;c5&gt;FileTree&lt;/c5&gt; interface, such as &lt;a6&gt;source sets&lt;/a6&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T101621Z" creationid="msdx" creationdate="20141113T101621Z">
        <seg>Gradle 中的几个对象都实现了&lt;c5&gt;FileTree&lt;/c5&gt;接口，例如&lt;a6&gt;source sets&lt;/a6&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>SharedLibraryBinary</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160219T072251Z" creationid="haohang" creationdate="20160219T072251Z">
        <seg>SharedLibraryBinary</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>She may address the security bug successfully, but she also may have introduced subtle bugs into a codebase that was using a now-deprecated feature from Hibernate.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150716T092929Z" creationid="haohang" creationdate="20150716T092929Z">
        <seg>她可能成功地解决了这个安全 bug，但她也可能有引入一些 bug 到代码库中，因为项目用到了 Hibernate 现在弃用的功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Shortcut notations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163007Z" creationid="msdx" creationdate="20141109T163007Z">
        <seg>简洁写法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Should you exclude per-dependency or per-configuration?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T101342Z" creationid="haohang" creationdate="20150801T101342Z">
        <seg>你应排除每个依赖或每个配置吗？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Similarly property access and method calls within the settings file is delegated to a settings object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T025947Z" creationid="haohang" creationdate="20160519T025947Z">
        <seg>同样，在设置文件中的属性访问和方法调用也会委托给一个settings 对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Similarly, settings can be specified to target binaries for a component that are of a particular type: eg all &lt;c0&gt;shared libraries&lt;/c0&gt; for the &lt;c1&gt;main library&lt;/c1&gt; component.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160324T153021Z" creationid="95" creationdate="20160324T153021Z">
        <seg>同样，也可以为某种特定类型的组件，把设置指向目标二进制文件：例如所有&lt;c1&gt;main library&lt;/c1&gt;组件的&lt;c0&gt;shared libraries&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Simply use an SLF4J logger.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T130333Z" creationid="msdx" creationdate="20141116T130333Z">
        <seg>只需使用一个 SLF4J 的logger对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Since 1.0-milestone-4 WTP-generating code was refactored into a separate plugin called &lt;c0&gt;eclipse-wtp&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T003105Z" creationid="haohang" creationdate="20150603T003105Z">
        <seg>从 1.0-里程碑-4 开始，WTP-generating 代码被重构为一个单独的插件，叫做&lt;c0&gt;eclipse-wtp&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Since Gradle 1.2 there is also a new programmatic API to access the resolved dependency information.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T033138Z" creationid="haohang" creationdate="20150807T033138Z">
        <seg>从 Gradle 1.2 起，有一个新的编程 API 用于访问解析的依赖信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Skipped projects will not be displayed in the Sonar web interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T091723Z" creationid="msdx" creationdate="20150512T091723Z">
        <seg>跳过的项目将不会显示在 Sonar 的 web 界面中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Skipping tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150330T141042Z" creationid="Administrator" creationdate="20150330T141042Z">
        <seg>跳过任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Skipping tasks that are up-to-date</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150330T141053Z" creationid="Administrator" creationdate="20150330T141053Z">
        <seg>跳过处于最新状态的任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Snappy up-to-date checks: use native file system change notifications (e.g. via jdk7 nio.2) to preemptively perform up-to-date analysis.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141117T144021Z" creationid="msdx" creationdate="20141117T144021Z">
        <seg>敏捷的 up-to-date 检查：使用本地文件系统修改通知（例如，通过 jdk7 nio.2）预先执行 up-to-date 分析。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So even if there is some idle daemon waiting for build requests but you happen to run build with a different java home then a brand new daemon will be forked.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141117T153005Z" creationid="msdx" creationdate="20141117T152846Z">
        <seg>所以即使有一些闲置的守护进程等待构建请求，但你碰巧通过不同的 java HOME 运行构建，那么一个全新的守护进程将会被fork。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So for GCC running on linux, the supported target platforms are 'linux/x86' and 'linux/x86_64'.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T092320Z" creationid="haohang" creationdate="20160408T092159Z">
        <seg>所以对于linux上运行的GCC，支持的目标平台是“linux/x86”和“linux/x86_64”。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So if a platform does not define a value for &lt;c0&gt;operatingSystem&lt;/c0&gt;, Gradle will find the first available tool chain that can build for the specified &lt;c1&gt;architecture&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T091931Z" creationid="haohang" creationdate="20160408T091931Z">
        <seg>所以如果一个平台没有为&lt;c0&gt;operatingSystem&lt;/c0&gt;定义一个值的话，Gradle 将会找到第一个可以用来构建这个指定&lt;c1&gt;architecture&lt;/c1&gt;的工具链。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So if you are interested in WTP integration then only apply the &lt;c1&gt;eclipse-wtp&lt;/c1&gt; plugin.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T003133Z" creationid="haohang" creationdate="20150603T003133Z">
        <seg>所以如果你对 WTP 集成有兴趣，可以只应用&lt;c1&gt;eclipse-wtp&lt;/c1&gt;插件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So the actual set of artifacts (typically jars) you depend on is the set of artifacts that are associated with the &lt;c3&gt;default&lt;/c3&gt; configuration of that module.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150730T034437Z" creationid="haohang" creationdate="20150730T034437Z">
        <seg>所以实际上，你依赖的 artifacts 集（通常是一些 jar 包） 是与该模块的 &lt;c3&gt;default&lt;/c3&gt; 配置相关联的 artifacts 集。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So you can enter the &lt;c5&gt;api&lt;/c5&gt; directory and trigger a &lt;s6&gt;&lt;c7&gt;gradle compile&lt;/c7&gt;&lt;/s6&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T084202Z" creationid="haohang" creationdate="20160726T084202Z">
        <seg>所以你可以进入&lt;c5&gt;api&lt;/c5&gt;目录并触发&lt;s6&gt;&lt;c7&gt;gradle compile&lt;/c7&gt;&lt;/s6&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So you can just run &lt;c0&gt;gradle build&lt;/c0&gt; to build and test all projects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160727T052848Z" creationid="haohang" creationdate="20160727T052848Z">
        <seg>因此，你可以只执行&lt;c0&gt;gradle build&lt;/c0&gt; 来构建和测试所有的项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So, if you're wondering what 'tags' are available in your build script, you can start with the documentation for the &lt;c2&gt;Project&lt;/c2&gt; interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T041135Z" creationid="msdx" creationdate="20141108T041117Z">
        <seg>所以，如果你想知道什么 '标签（tag）' 在构建脚本中可用，您可以去看&lt;c2&gt;项目&lt;/c2&gt;接口的文档。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Software development plugins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131554Z" creationid="msdx" creationdate="20150509T131554Z">
        <seg>软件开发插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Some Groovy basics</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T055446Z" creationid="msdx" creationdate="20141109T164906Z">
        <seg>一些 Groovy 基础</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Some advanced, synthetic tests may not be fully compatible with filtering.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T023611Z" creationid="Administrator" creationdate="20150428T023611Z">
        <seg>一些高级的、 综合的测试可能不完全符合过滤条件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Some daemon settings, such as JVM arguments, memory settings or the Java home, can be configured.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141119T030931Z" creationid="msdx" creationdate="20141119T030931Z">
        <seg>可以配置一些守护进程的设置，例如 JVM 参数、 内存设置或Java home目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Some examples of using the command line option:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T024133Z" creationid="Administrator" creationdate="20150428T024133Z">
        <seg>使用命令行选项的一些示例：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Some of the most common configuration options are shown below.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T134955Z" creationid="Administrator" creationdate="20150427T134950Z">
        <seg>一些最常见的配置选项如下所示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Some of them Gradle handles now and some will be satisfied in the future releases:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T022647Z" creationid="Administrator" creationdate="20150428T022319Z">
        <seg>以下这些场景中，有一些Gradle现在就可以处理，而有一些则将在未来得到实现：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Some of these patterns are outlined below.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T060324Z" creationid="95" creationdate="20151115T060100Z">
        <seg>下面将概述其中的某些模式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Some other types of things you can pass to &lt;c0&gt;files()&lt;/c0&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T160933Z" creationid="msdx" creationdate="20141112T160904Z">
        <seg>你可以向&lt;c0&gt;files()&lt;/c0&gt;传入一些其他类型的对象：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Some plugins add additional archive tasks to the project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T010158Z" creationid="Administrator" creationdate="20150426T010158Z">
        <seg>某些插件还向项目添加额外的归档任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Some plugins add additional compilation tasks for the source set.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T005936Z" creationid="Administrator" creationdate="20150426T005923Z">
        <seg>某些插件还为源集添加了额外的编译任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Some plugins add additional compilation tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T174800Z" creationid="Administrator" creationdate="20150425T174800Z">
        <seg>一些插件添加了额外的编译任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Some plugins add additional test compilation tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T004545Z" creationid="Administrator" creationdate="20150426T004545Z">
        <seg>一些插件添加了额外的测试编译任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Some plugins add additional verification tasks to the project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T010439Z" creationid="Administrator" creationdate="20150426T010314Z">
        <seg>某些插件还向项目添加额外的核查任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Some plugins, such as the Groovy plugin, add additional Java source files to this collection.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T053234Z" creationid="Administrator" creationdate="20150427T052945Z">
        <seg>有些插件，如Groovy 插件，会从该集合中增加其他的Java源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Some plugins, such as the Groovy plugin, add additional source files to this collection.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T053216Z" creationid="Administrator" creationdate="20150427T053041Z">
        <seg>有些插件，如Groovy 插件，会从该集合中增加其他的源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Some ways of troubleshooting the Gradle daemon:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141118T100318Z" creationid="msdx" creationdate="20141118T100234Z">
        <seg>以下是有关 Gradle 守护进程的故障排除的一些方面：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Somehow Gradle has to find out, whether the project you are into, is a subproject of a multiproject build or not.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T074459Z" creationid="haohang" creationdate="20160519T074459Z">
        <seg>由于一些不明的原因， Gradle 不得不找出，你所进入的项目，它是否为一个多项目构建中的一个子项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Somehow the dependency information has to be mapped to a path.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T134359Z" creationid="95" creationdate="20151006T134359Z">
        <seg>某种程度上依赖信息必须映射到一个路径上。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sometimes a repository will have the POMs published to one location, and the JARs and other artifacts published at another location.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150909T053028Z" creationid="haohang" creationdate="20150909T053028Z">
        <seg>有时候，一个仓库会出现 POM 文件发布在一个地方，而 JAR 文件和其他构件发布在另一个地方。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sometimes we cannot use an existing daemon because it is busy or its java version or jvm arguments are different.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141117T151833Z" creationid="msdx" creationdate="20141117T151833Z">
        <seg>有时我们不能使用现有的守护进程，是因为它正忙或其 java 版本或 jvm 参数不同。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sometimes you don't want depended on projects to be built when doing a partial build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T085345Z" creationid="haohang" creationdate="20160726T085345Z">
        <seg>有时候，在做局部构建时，你不想依赖的项目也进行构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sometimes you want the library files of a subset of the configuration dependencies (e.g. of a single dependency).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T034719Z" creationid="haohang" creationdate="20150807T034719Z">
        <seg>有时你想要配置依赖的某个子集（例如单个依赖）的 library 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sometimes you want to have a task whose behavior depends on a large or infinite number value range of parameters.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T065033Z" creationid="msdx" creationdate="20141111T064239Z">
        <seg>有时你想要有这样一项任务，它的行为依赖于参数数值范围的一个大数或是无限的数字。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sometimes you want to replace a task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T015826Z" creationid="msdx" creationdate="20141111T015534Z">
        <seg>有时您想要替换一个任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sonar Properties can also be set from the command line, by setting a system property named exactly like the Sonar property in question.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150525T233644Z" creationid="haohang" creationdate="20150525T233644Z">
        <seg>Sonar 属性也可以从命令行中设置，通过设置一个系统属性，名称就像正在考虑中的 Sonar 属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>SonarAnalyze</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T054216Z" creationid="msdx" creationdate="20150513T054216Z">
        <seg>sonarAnalyze</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>SonarRunner</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T024624Z" creationid="haohang" creationdate="20150525T235020Z">
        <seg>sonarRunner</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sophisticated builds may use the extensibility of Gradle to apply additional attributes to each platform, which can then be queried to specify particular includes, preprocessor macros or compiler arguments for a native binary.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160405T034011Z" creationid="haohang" creationdate="20160405T034011Z">
        <seg>复杂的构建，可能使用 Gradle 的扩展性来把附加属性应用到每个platform中，然后可以查询为一个本地二进制包含了哪些特别指定的预处理器或者是编译器参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Source files can be located in the conventional location (&lt;c4&gt;src/${component.name}Test/cunit&lt;/c4&gt;) or can be configured like any other source set.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T145831Z" creationid="95" creationdate="20160504T145831Z">
        <seg>源文件可以位于约定的位置（&lt;c4&gt;src/${component.name}Test/cunit&lt;/c4&gt;），或者是像其他源集一样配置到别的地方。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Source set properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131933Z" creationid="msdx" creationdate="20150509T131933Z">
        <seg>Source set 属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Source sets</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131631Z" creationid="msdx" creationdate="20150509T131625Z">
        <seg>Source sets</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Specifically, &lt;c1&gt;latest.someStatus&lt;/c1&gt; will resolve to the highest module version that has status &lt;c2&gt;someStatus&lt;/c2&gt; or a more mature status.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T013646Z" creationid="95" creationdate="20151129T013646Z">
        <seg>具体而言，&lt;c1&gt;latest.someStatus&lt;/c1&gt; 将会解析成有着&lt;c2&gt;someStatus&lt;/c2&gt; 或更成熟状态的最高的模块版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Specifically, &lt;c8&gt;destinationDir&lt;/c8&gt;, &lt;c9&gt;baseName&lt;/c9&gt; and &lt;c10&gt;version&lt;/c10&gt; properties of the archive tasks are preconfigured with defaults.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T071125Z" creationid="Administrator" creationdate="20150425T071125Z">
        <seg>特别是，归档任务的&lt;c8&gt;destinationDir&lt;/c8&gt;、 &lt;c9&gt;baseName&lt;/c9&gt;和&lt;c10&gt;version&lt;/c10&gt;属性被预先配置了默认值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Specifically, the plugin adds a Scala facet and a Scala compiler library that matches the Scala version on the project's class path.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T082242Z" creationid="msdx" creationdate="20150503T082123Z">
        <seg>具体而言，该插件添加了一个 Scala facet 和一个匹配项目的类路径上的 Scala 版本的 Scala 编译器类库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Specifically, the plugin adds a Scala nature and dependency container.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T082041Z" creationid="msdx" creationdate="20150503T082041Z">
        <seg>具体而言，该插件添加一个 Scala 性质和依赖的容器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Specifies the java home for the Gradle build process.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141120T051232Z" creationid="msdx" creationdate="20141120T051201Z">
        <seg>为 Gradle 构建进程指定 java home目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Specifies the jvmargs used for the daemon process.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141120T051948Z" creationid="msdx" creationdate="20141120T051948Z">
        <seg>指定用于该守护进程的 jvmargs。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Specifying a set of input files</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150330T141153Z" creationid="Administrator" creationdate="20150330T141153Z">
        <seg>指定一组输入文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Stack Trace Output</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T160930Z" creationid="msdx" creationdate="20141105T160930Z">
        <seg>堆栈跟踪输出</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Standalone project</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T144928Z" creationid="95" creationdate="20160814T144928Z">
        <seg>独立项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Standard Gradle plugins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131527Z" creationid="msdx" creationdate="20150509T131527Z">
        <seg>标准的 Gradle 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Starting with Gradle 1.10, it is possible to include only specific tests, based on the test name pattern.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T015849Z" creationid="Administrator" creationdate="20150428T015849Z">
        <seg>从Gradle 1.10 开始，可以根据测试的名称模式，只包含指定的测试。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Starting with Gradle 1.5 you can make these substitutions using dependency resolve rules:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T090551Z" creationid="95" creationdate="20151115T090551Z">
        <seg>从 Gradle 1.5 开始，你可以使用依赖解析规则来进行这些替换：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Starts a Jetty instance and deploys the WAR to it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T150444Z" creationid="msdx" creationdate="20150504T150444Z">
        <seg>启动 Jetty 实例并将部署上 WAR 包。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Starts a Jetty instance and deploys the exploded web application to it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T150420Z" creationid="msdx" creationdate="20150504T150218Z">
        <seg>启动 Jetty 实例并将部署上 exploded web 应用程序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Starts the application.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150702T105014Z" creationid="haohang" creationdate="20150702T105014Z">
        <seg>启动应用程序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>StaticLibraryBinary</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160219T072300Z" creationid="haohang" creationdate="20160219T072300Z">
        <seg>StaticLibraryBinary</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Stops the Jetty instance.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T150450Z" creationid="msdx" creationdate="20150504T150450Z">
        <seg>停止 Jetty 实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T044234Z" creationid="msdx" creationdate="20141108T044234Z">
        <seg>String</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String greeting = &lt;s0&gt;'hello from Ant'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141115T153407Z" creationid="msdx" creationdate="20141115T153407Z">
        <seg>String greeting = &lt;s0&gt;'hello from Ant'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String greeting = &lt;s5&gt;'hello from GreetingTask'&lt;/s5&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T151533Z" creationid="95" creationdate="20160814T151533Z">
        <seg>String greeting = &lt;s5&gt;'hello from GreetingTask'&lt;/s5&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Structure your build</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141101T124603Z" creationid="msdx" creationdate="20141101T124603Z">
        <seg>构建结构化</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Subsequent invocations of the gradle command will reuse the daemon, avoiding the startup costs.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141117T151722Z" creationid="msdx" creationdate="20141117T151722Z">
        <seg>Gradle 命令的后续调用将重用该守护进程，以避免启动开销。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Such a build is always executed as:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T075311Z" creationid="haohang" creationdate="20160519T075311Z">
        <seg>这样的构建总是这样执行:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Such a conversion is possible if in the Gradle exclude rule the group as well as the module name is specified (as Maven needs both in contrast to Ivy).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T145637Z" creationid="95" creationdate="20160106T145637Z">
        <seg>如果 Gradle 排除规则中group和module名字被指定的话（相比于Ivy，Maven对这两个都需要），这种转换是可能的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Such a library dependency can be easily provided to source set associated with the &lt;c0&gt;executable&lt;/c0&gt; component:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160325T032843Z" creationid="haohang" creationdate="20160325T032843Z">
        <seg>这样的库依赖可以很方便地提供给source set关联上&lt;c0&gt;executable&lt;/c0&gt;组件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Such a task might be nicer to configure than an Ant task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T123934Z" creationid="msdx" creationdate="20141111T123934Z">
        <seg>这样的一个任务可能会比一个 Ant 任务更好配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Such and other dependency patterns are daily bread in the problem space of multi-project builds.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T082817Z" creationid="haohang" creationdate="20160726T082817Z">
        <seg>在多项目构建中，这样或其他的依赖模式是很常见的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Such enhanced tasks are either provided by you or are provided by Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T160753Z" creationid="msdx" creationdate="20141109T160753Z">
        <seg>这种增强的任务可以由你提供，或由 Gradle 提供。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Such features include:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T090515Z" creationid="haohang" creationdate="20160726T090515Z">
        <seg>这些功能包括︰</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Such reports are another feature of dependency management.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150721T092503Z" creationid="haohang" creationdate="20150721T092503Z">
        <seg>这些报告是依赖管理的另一个功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Summary</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163734Z" creationid="msdx" creationdate="20141109T163734Z">
        <seg>总结</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Superceeded by the &lt;a1&gt;&lt;c2&gt;sonar-runner&lt;/c2&gt;&lt;/a1&gt; plugin.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T035824Z" creationid="Administrator" creationdate="20150425T035824Z">
        <seg>由 &lt;a1&gt;&lt;c2&gt;sonar-runner&lt;/c2&gt;&lt;/a1&gt;插件取代。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Supersedes the &lt;a1&gt;&lt;c2&gt;sonar&lt;/c2&gt;&lt;/a1&gt; plugin.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T040439Z" creationid="Administrator" creationdate="20150425T040439Z">
        <seg>由 &lt;a1&gt;&lt;c2&gt;sonar&lt;/c2&gt;&lt;/a1&gt;插件取代。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Support for additional test frameworks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T151839Z" creationid="95" creationdate="20160504T151839Z">
        <seg>支持另外的测试框架。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Supports TestNG runner</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T093804Z" creationid="haohang" creationdate="20150707T093804Z">
        <seg>支持 TestNG runner</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Supports both single module and multimodule projects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T093350Z" creationid="haohang" creationdate="20150707T093350Z">
        <seg>支持单个模块和多模块项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Supports custom module names (that differ from directory names)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T093414Z" creationid="haohang" creationdate="20150707T093414Z">
        <seg>支持自定义模块名称 （即目录名称有所不同）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Supports packaging of sources and tests</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T093757Z" creationid="haohang" creationdate="20150707T093757Z">
        <seg>支持打包源代码和测试代码</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Supports packaging war projects as jars if needed</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T093553Z" creationid="haohang" creationdate="20150707T093543Z">
        <seg>如果需要，支持把 war 项目打包为 jar 包</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sync</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150701T030916Z" creationid="haohang" creationdate="20150701T030916Z">
        <seg>Sync</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>TBD</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150526T063855Z" creationid="haohang" creationdate="20150526T004453Z">
        <seg>待决定</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>TODO: which url, configure port, uses source files in place and can edit your files and reload.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T095645Z" creationid="msdx" creationdate="20141030T095036Z">
        <seg>待添加：哪个URL，配置端口，使用源文件的 地方，可编辑你的文件，以及重新加载。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tab completion in a CLI</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141117T141831Z" creationid="msdx" creationdate="20141117T141831Z">
        <seg>在 CLI 中的 tab 键完成</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table &lt;a0&gt;Table 23.5, “Java plugin - dependency configurations”&lt;/a0&gt; shows the configurations added by the Java plugin.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151221T141752Z" creationid="95" creationdate="20151221T141655Z">
        <seg>表&lt;a0&gt;表 23.5，“Java 插件 - 依赖配置”&lt;/a0&gt;显示了 Java 插件添加的配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table of Contents</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T161834Z" creationid="msdx" creationdate="20141109T161824Z">
        <seg>目录</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 13.1. Project Properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T044137Z" creationid="msdx" creationdate="20141108T044137Z">
        <seg>表 13.1. Project属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 16.1. Archive tasks - naming properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T155258Z" creationid="msdx" creationdate="20141113T155258Z">
        <seg>表 16.1. 归档任务-命名属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 18.1. Log levels</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T064130Z" creationid="msdx" creationdate="20141116T064130Z">
        <seg>表 18.1. 日志级别</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 18.2. Log level command-line options</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T071012Z" creationid="msdx" creationdate="20141116T071012Z">
        <seg>表 18.2. 日志级别的命令行选项</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 18.3. Stacktrace command-line options</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T071031Z" creationid="msdx" creationdate="20141116T071031Z">
        <seg>表 18.3. 栈跟踪的命令行选项</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 22.1. Language plugins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141126T120756Z" creationid="msdx" creationdate="20141126T120756Z">
        <seg>表 22.1. 语言插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 22.2. Language plugins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141209T073740Z" creationid="msdx" creationdate="20141209T073740Z">
        <seg>表 22.2. 语言插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 22.3. Integration plugins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T030753Z" creationid="Administrator" creationdate="20150425T030753Z">
        <seg>表 22.3. 集成插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 22.4. Incubating integration plugins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T031737Z" creationid="Administrator" creationdate="20150425T031737Z">
        <seg>表 22.4. 孵化中的集成插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 22.5. Software development plugins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T032423Z" creationid="Administrator" creationdate="20150425T032423Z">
        <seg>表 22.5. 软件开发插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 22.6. Software development plugins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T035844Z" creationid="Administrator" creationdate="20150425T035844Z">
        <seg>表 22.6. 软件开发插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 22.7. Base plugins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T041005Z" creationid="Administrator" creationdate="20150425T041005Z">
        <seg>表 22.7. 基本插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 23.1. Java plugin - tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T174036Z" creationid="Administrator" creationdate="20150425T174036Z">
        <seg>表 23.1. Java 插件-任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 23.10. Java plugin - Javadoc properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T133951Z" creationid="Administrator" creationdate="20150427T133951Z">
        <seg>表 23.10. Java 插件 - Javadoc 属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 23.11. Java plugin - Clean properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T134436Z" creationid="Administrator" creationdate="20150427T134436Z">
        <seg>表 23.11. Java 插件 - Clean 性能</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 23.12. Java plugin - ProcessResources properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T134714Z" creationid="Administrator" creationdate="20150427T134714Z">
        <seg>表 23.12. Java 插件-ProcessResources 属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 23.13. Java plugin - Compile properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T135008Z" creationid="Administrator" creationdate="20150427T135008Z">
        <seg>表 23.13. Java 插件- Compile属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 23.14. Java plugin - test properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T144354Z" creationid="msdx" creationdate="20150428T144354Z">
        <seg>表 23.14. Java 插件 - test属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 23.2. Java plugin - source set tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T005713Z" creationid="Administrator" creationdate="20150426T005713Z">
        <seg>表 23.2. Java 插件-源集任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 23.3. Java plugin - lifecycle tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T010037Z" creationid="Administrator" creationdate="20150426T010037Z">
        <seg>表 23.3. Java 插件-生命周期任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 23.4. Java plugin - default project layout</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T083237Z" creationid="Administrator" creationdate="20150426T083237Z">
        <seg>表 23.4. Java 插件-默认项目布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 23.5. Java plugin - dependency configurations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T084055Z" creationid="Administrator" creationdate="20150426T084055Z">
        <seg>表23.5. Java插件 ​​- 依赖配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 23.6. Java plugin - source set dependency configurations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T084805Z" creationid="Administrator" creationdate="20150426T084805Z">
        <seg>表23.6. Java插件 ​​- 源集依赖配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 23.7. Java plugin - directory properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T085725Z" creationid="Administrator" creationdate="20150426T085725Z">
        <seg>表23.7. Java插件 ​​- 目录属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 23.8. Java plugin - other properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T045707Z" creationid="Administrator" creationdate="20150427T045707Z">
        <seg>表 23.8. Java 插件 - 其他属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 23.9. Java plugin - source set properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T051240Z" creationid="Administrator" creationdate="20150427T051240Z">
        <seg>表 23.9. Java 插件 - 源集属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 24.1. Groovy plugin - tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T071350Z" creationid="msdx" creationdate="20150429T071350Z">
        <seg>表 24.1. Groovy 插件 - 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 24.2. Groovy plugin - additional task dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T071628Z" creationid="msdx" creationdate="20150429T071628Z">
        <seg>表 24.2. Groovy 插件 - 额外的task 依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 24.3. Groovy plugin - project layout</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T071822Z" creationid="msdx" creationdate="20150429T071822Z">
        <seg>表 24.3. Groovy 插件 - 项目布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 24.4. Groovy plugin - source set properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T093045Z" creationid="msdx" creationdate="20150429T093045Z">
        <seg>表 24.4. Groovy 插件 - source set 属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 24.5. Groovy plugin - source set properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T094027Z" creationid="msdx" creationdate="20150429T094027Z">
        <seg>表 24.5. Groovy 的插件 - source set 属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 24.6. Groovy plugin - GroovyCompile properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T094540Z" creationid="msdx" creationdate="20150429T094507Z">
        <seg>表 24.6. Groovy 插件 - GroovyCompile 属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 25.1. Scala plugin - tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T145445Z" creationid="msdx" creationdate="20150429T145445Z">
        <seg>表 25.1. Scala 插件 - 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 25.2. Scala plugin - additional task dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T152428Z" creationid="msdx" creationdate="20150429T152428Z">
        <seg>表 24.2. Scala感觉 插件 - 额外的task 依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 25.3. Scala plugin - project layout</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T152604Z" creationid="msdx" creationdate="20150429T152604Z">
        <seg>表 25.3. Scala 插件 - 项目布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 25.4. Scala plugin - source set properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150430T154754Z" creationid="msdx" creationdate="20150430T154754Z">
        <seg>表 25.4. Scala 插件 - source set 属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 25.5. Scala plugin - source set properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150430T154937Z" creationid="msdx" creationdate="20150430T154937Z">
        <seg>表 25.5. Scala 插件 - source set 属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 26.1. War plugin - tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T085928Z" creationid="msdx" creationdate="20150503T085928Z">
        <seg>表 26.1. War 插件 - 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 26.2. War plugin - additional task dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T090028Z" creationid="msdx" creationdate="20150503T090028Z">
        <seg>表 26.2. War 插件 - 额外的task 依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 26.3. War plugin - project layout</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T090126Z" creationid="msdx" creationdate="20150503T090126Z">
        <seg>表 26.3. War 插件 - 项目布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 26.4. War plugin - directory properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T092124Z" creationid="msdx" creationdate="20150503T092124Z">
        <seg>表26.4. War插件 ​​- 目录属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 27.1. Ear plugin - tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T094520Z" creationid="msdx" creationdate="20150503T094520Z">
        <seg>表 27.1. Ear 插件 - tasks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 27.2. Ear plugin - additional task dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T095209Z" creationid="msdx" creationdate="20150503T095209Z">
        <seg>表 27.2. Ear 插件 - 额外的task 依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 27.3. Ear plugin - project layout</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T095224Z" creationid="msdx" creationdate="20150503T095224Z">
        <seg>表 27.3. Ear 插件 - 项目布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 27.4. Ear plugin - directory properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T141340Z" creationid="msdx" creationdate="20150504T141340Z">
        <seg>表27.4. Ear插件 ​​- 目录属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 28.1. Jetty plugin - tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T150213Z" creationid="msdx" creationdate="20150504T150213Z">
        <seg>表 28.1. Jetty 插件 - 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 28.2. Jetty plugin - properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T151015Z" creationid="msdx" creationdate="20150504T151015Z">
        <seg>表 28.2. Jetty插件 - 属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 29.1. Checkstyle plugin - tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T024659Z" creationid="msdx" creationdate="20150505T024659Z">
        <seg>表 29.1. Checkstyle 插件 - tasks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 29.2. Checkstyle plugin - additional task dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T132521Z" creationid="msdx" creationdate="20150505T132521Z">
        <seg>表 29.2. Checkstyle 插件 - 额外的task 依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 29.3. Checkstyle plugin - project layout</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T132634Z" creationid="msdx" creationdate="20150505T132634Z">
        <seg>表 29.3. Checkstyle 插件 - 项目布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 29.4. Checkstyle plugin - dependency configurations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T132739Z" creationid="msdx" creationdate="20150505T132739Z">
        <seg>表29.4. Checkstyle 插件 ​​- 依赖配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 30.1. CodeNarc plugin - tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T133149Z" creationid="msdx" creationdate="20150505T133149Z">
        <seg>表 30.1. CodeNarc 插件 - 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 30.2. CodeNarc plugin - additional task dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T133350Z" creationid="msdx" creationdate="20150505T133350Z">
        <seg>表 30.2. CodeNarc 插件 - 附加的任务依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 30.3. CodeNarc plugin - project layout</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T133419Z" creationid="msdx" creationdate="20150505T133419Z">
        <seg>表 30.3. CodeNarc 插件 - 项目布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 30.4. CodeNarc plugin - dependency configurations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T135832Z" creationid="msdx" creationdate="20150505T133501Z">
        <seg>表30.4. CodeNarc 插件 ​​- 依赖配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 31.1. FindBugs plugin - tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T133645Z" creationid="msdx" creationdate="20150505T133645Z">
        <seg>表 31.1. FindBugs 插件 - 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 31.2. FindBugs plugin - additional task dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T133753Z" creationid="msdx" creationdate="20150505T133753Z">
        <seg>表 31.2. FindBugs 插件 - 附加的任务依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 31.3. FindBugs plugin - dependency configurations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T133843Z" creationid="msdx" creationdate="20150505T133843Z">
        <seg>表31.3. FindBugs 插件 ​​- 依赖配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 32.1. JDepend plugin - tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T134228Z" creationid="msdx" creationdate="20150505T134228Z">
        <seg>表 32.1. JDepend 插件 - 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 32.2. JDepend plugin - additional task dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T134423Z" creationid="msdx" creationdate="20150505T134423Z">
        <seg>表 32.2. JDepend 插件 - 附加的任务依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 32.3. JDepend plugin - dependency configurations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T134451Z" creationid="msdx" creationdate="20150505T134451Z">
        <seg>表32.3. JDepend 插件 ​​- 依赖配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 33.1. PMD plugin - tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T135542Z" creationid="msdx" creationdate="20150505T135542Z">
        <seg>表 33.1. PMD 插件 - 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 33.2. PMD plugin - additional task dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T135629Z" creationid="msdx" creationdate="20150505T135629Z">
        <seg>表 33.2. PMD 插件 - 附加的任务依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 33.3. PMD plugin - dependency configurations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T135712Z" creationid="msdx" creationdate="20150505T135712Z">
        <seg>表33.3. PMD 插件 ​​- 依赖配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 34.1. Gradle defaults for JaCoCo properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T131612Z" creationid="msdx" creationdate="20150506T131612Z">
        <seg>表 34.1. JaCoCo 属性的 Gradle 默认值</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 34.2. Default values of the JaCoCo Task extension</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T132305Z" creationid="msdx" creationdate="20150506T132305Z">
        <seg>表 34.2. JaCoCo 任务扩展的默认值</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 34.3. JaCoCo plugin - tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T135917Z" creationid="msdx" creationdate="20150506T135917Z">
        <seg>表 34.3. JaCoCo 插件 - 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 34.4. JaCoCo plugin - dependency configurations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T135959Z" creationid="msdx" creationdate="20150506T135959Z">
        <seg>表34.4. JaCoCo 插件 ​​- 依赖配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 35.1. Sonar plugin - tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T054212Z" creationid="msdx" creationdate="20150513T054212Z">
        <seg>表 35.1. 声纳插件 - 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 36.1. Gradle defaults for standard Sonar properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T065245Z" creationid="msdx" creationdate="20150513T065245Z">
        <seg>表 36.1. 标准 Sonar 属性的 Gradle 默认值</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 36.2. Additional defaults when &lt;c0&gt;java-base&lt;/c0&gt; plugin is applied</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T065355Z" creationid="msdx" creationdate="20150513T065252Z">
        <seg>表 36.2. 配置使用 &lt;c0&gt;java-base&lt;/c0&gt; 插件时另外添加的默认值</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 36.3. Additional defaults when &lt;c0&gt;java&lt;/c0&gt; plugin is applied</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T065415Z" creationid="msdx" creationdate="20150513T065415Z">
        <seg>表 36.2. 配置使用 &lt;c0&gt;java&lt;/c0&gt; 插件时另外添加的默认值</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 36.4. Sonar Runner plugin - tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150525T235013Z" creationid="haohang" creationdate="20150525T234954Z">
        <seg>表 36.4. Sonnar Runner 插件 - 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 37.1. OSGi methods</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150526T004643Z" creationid="haohang" creationdate="20150526T004643Z">
        <seg>表 37.1. OSGi 方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 38.1. Eclipse plugin behavior</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T003545Z" creationid="haohang" creationdate="20150603T003545Z">
        <seg>表 38.1. Eclipse 插件行为</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 38.2. Eclipse plugin - tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T004335Z" creationid="haohang" creationdate="20150603T004335Z">
        <seg>表 38.2. Eclipse 插件 - 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 38.3. Configuration of the Eclipse plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T004626Z" creationid="haohang" creationdate="20150603T004626Z">
        <seg>表 38.3. Eclipse 插件的配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 38.4. Advanced configuration hooks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T105207Z" creationid="haohang" creationdate="20150624T105207Z">
        <seg>表 38.4. 高级的配置hook</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 39.1. IDEA plugin behavior</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T071426Z" creationid="haohang" creationdate="20150625T071426Z">
        <seg>表 39.1. IDEA插件行为</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 39.2. IDEA plugin - Tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T072236Z" creationid="haohang" creationdate="20150625T072236Z">
        <seg>表 39.2. IDEA插件 - 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 39.3. Configuration of the idea plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T072630Z" creationid="haohang" creationdate="20150625T072630Z">
        <seg>表 39.3. idea 插件的配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 39.4. Idea plugin hooks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T073719Z" creationid="haohang" creationdate="20150625T073719Z">
        <seg>表 39.4. Idea 插件 hook</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 40.1. ANTLR plugin - tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T094927Z" creationid="haohang" creationdate="20150625T094927Z">
        <seg>表 40.1. ANTLR 插件 - 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 40.2. ANTLR plugin - additional task dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T095113Z" creationid="haohang" creationdate="20150625T095113Z">
        <seg>表 40.2. ANTLR 插件 - 附加的任务依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 40.3. ANTLR plugin - project layout</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T095131Z" creationid="haohang" creationdate="20150625T095131Z">
        <seg>表 40.3. ANTLR 插件 - 项目布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 40.4. ANTLR plugin - source set properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T102736Z" creationid="haohang" creationdate="20150625T102736Z">
        <seg>表 40.4. ANTLR 插件 - source set 属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 41.1. Project report plugin - tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T061122Z" creationid="haohang" creationdate="20150628T061122Z">
        <seg>表 41.1. 项目报告插件 - 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 41.2. Project report plugin - convention properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T061714Z" creationid="haohang" creationdate="20150628T061714Z">
        <seg>表 41.2. 项目报告插件 - 约定属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 42.1. Announce Plugin Notification Services</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T065222Z" creationid="haohang" creationdate="20150628T065222Z">
        <seg>表 42.1. Announce 插件通知服务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 44.1. Distribution plugin - tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150701T030817Z" creationid="haohang" creationdate="20150701T030817Z">
        <seg>表 44.1. 分发插件 - 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 44.2. Multiple distributions - tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150701T031216Z" creationid="haohang" creationdate="20150701T031216Z">
        <seg>表 44.2. 多分发 - 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 45.1. Application plugin - tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150702T104951Z" creationid="haohang" creationdate="20150702T104951Z">
        <seg>表 45.1. 应用程序插件 - 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 46.1. Java library distribution plugin - tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T070332Z" creationid="haohang" creationdate="20150707T070332Z">
        <seg>表 46.1. Java 库分发插件 - 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 47.1. Build Init plugin - tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T073646Z" creationid="haohang" creationdate="20150707T071543Z">
        <seg>表 47.1.  Build Init 插件 - 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 48.1. Wrapper plugin - tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150710T012927Z" creationid="haohang" creationdate="20150710T012927Z">
        <seg>表 48.1. Wrapper 插件 - 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 49.1. Build Dashboard plugin - tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150713T100309Z" creationid="haohang" creationdate="20150713T100309Z">
        <seg>表 49.1. Build Dashboard 插件 - 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 50.1. Dependency types</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T080038Z" creationid="haohang" creationdate="20150722T080038Z">
        <seg>表 50.1. 依赖类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 50.2. Repository types</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T094108Z" creationid="haohang" creationdate="20150807T094108Z">
        <seg>表 50.2. 仓库类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 52.1. Maven plugin - tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151228T151924Z" creationid="95" creationdate="20151228T151924Z">
        <seg>表 52.1. Maven 插件 - 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 52.2. Maven plugin - properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151228T152515Z" creationid="95" creationdate="20151228T152515Z">
        <seg>表 52.2. Maven 插件 - 属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 52.3. Protocol jars for Maven deployment</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160104T154653Z" creationid="95" creationdate="20160104T154653Z">
        <seg>表 52.3. Maven 部署的协议 jars</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 52.4. Configuration elements of the MavenDeployer</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T134937Z" creationid="95" creationdate="20160105T134937Z">
        <seg>表 52.4. 配置 MavenDeployer 的元素</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 52.5. Default Values for Maven POM generation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T144028Z" creationid="95" creationdate="20160105T144028Z">
        <seg>表 52.5. Maven POM 生成的默认值</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Take a look at the 'visual-studio' sample, or see &lt;a1&gt;&lt;c2&gt;VisualStudioExtension.getProjects()&lt;/c2&gt;&lt;/a1&gt; and &lt;a3&gt;&lt;c4&gt;VisualStudioExtension.getSolutions()&lt;/c4&gt;&lt;/a3&gt; for more details.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T095630Z" creationid="haohang" creationdate="20160408T095630Z">
        <seg>更详细的信息，可以参考“visual-studio”例子，或者参阅 &lt;a1&gt;&lt;c2&gt;VisualStudioExtension.getProjects()&lt;/c2&gt;&lt;/a1&gt; 及 &lt;a3&gt;&lt;c4&gt;VisualStudioExtension.getSolutions()&lt;/c4&gt;&lt;/a3&gt; 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tar</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150701T030853Z" creationid="haohang" creationdate="20150701T030853Z">
        <seg>Tar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T161048Z" creationid="msdx" creationdate="20141112T161048Z">
        <seg>Task</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Task Property</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T133959Z" creationid="Administrator" creationdate="20150427T133959Z">
        <seg>任务属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Task Tree</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T031112Z" creationid="msdx" creationdate="20141108T031112Z">
        <seg>任务树</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Task dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162450Z" creationid="msdx" creationdate="20141109T162450Z">
        <seg>任务依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Task dependencies are fully supported and parallel workers will start executing upstream tasks first.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T091831Z" creationid="haohang" creationdate="20160726T091424Z">
        <seg>完全支持任务依赖，并且平行的workers将会首先开始执行上游的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Task name</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T174040Z" creationid="Administrator" creationdate="20150425T174040Z">
        <seg>任务名称</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Task name abbreviation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163903Z" creationid="msdx" creationdate="20141109T163903Z">
        <seg>任务名称缩写</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Task names can refer to tasks in the same project as the task, or to tasks in other projects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T121717Z" creationid="msdx" creationdate="20141110T101233Z">
        <seg>任务的名称可以指向同一个项目中的任务，或者其他项目中的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Task ordering can be useful in a number of scenarios:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T143507Z" creationid="msdx" creationdate="20141110T143451Z">
        <seg>任务排序在许多情况下可能很有用：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Task ordering is an &lt;a0&gt;incubating&lt;/a0&gt; feature.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T131116Z" creationid="msdx" creationdate="20141110T131116Z">
        <seg>任务排序还是一个&lt;a0&gt;孵化中&lt;/a0&gt;的功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Task requested via task path from the command line (or Tooling API) causes the relevant project configured.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160522T124854Z" creationid="95" creationdate="20160522T124854Z">
        <seg>通过从命令行 （或Tooling API）任务路径所请求的任务会导致相关的项目被配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Task rules</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150330T141057Z" creationid="Administrator" creationdate="20150330T141057Z">
        <seg>任务规则</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>TaskActionListener</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T155225Z" creationid="msdx" creationdate="20141116T155225Z">
        <seg>TaskActionListener</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>TaskExecutionGraphListener</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T155221Z" creationid="msdx" creationdate="20141116T155221Z">
        <seg>TaskExecutionGraphListener</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>TaskExecutionListener</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T155222Z" creationid="msdx" creationdate="20141116T155222Z">
        <seg>TaskExecutionListener</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>TaskOutputs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T161108Z" creationid="msdx" creationdate="20141112T161108Z">
        <seg>TaskOutputs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>TaskReportTask</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T061528Z" creationid="haohang" creationdate="20150628T061528Z">
        <seg>TaskReportTask</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131635Z" creationid="msdx" creationdate="20150509T131635Z">
        <seg>Tasks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tasks are also available through the &lt;c0&gt;tasks&lt;/c0&gt; collection.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T081052Z" creationid="msdx" creationdate="20141110T081020Z">
        <seg>任务也可以通过&lt;c0&gt;tasks&lt;/c0&gt;集合来访问。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tasks are simply POGOs, and when you declare a task, you can set the properties or call methods on the task object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T151449Z" creationid="95" creationdate="20160814T151449Z">
        <seg>任务是简单的POGOs，当你声明一个任务时，你可以在这个任务对象上设置属性或者是调用方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tasks that do this are the &lt;a0&gt;&lt;c1&gt;Tar&lt;/c1&gt;&lt;/a0&gt;, &lt;a2&gt;&lt;c3&gt;Zip&lt;/c3&gt;&lt;/a2&gt;, &lt;a4&gt;&lt;c5&gt;Jar&lt;/c5&gt;&lt;/a4&gt;, &lt;a6&gt;&lt;c7&gt;War&lt;/c7&gt;&lt;/a6&gt; and &lt;a8&gt;&lt;c9&gt;Ear&lt;/c9&gt;&lt;/a8&gt; tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160126T141024Z" creationid="95" creationdate="20160126T140910Z">
        <seg>这样的任务有 &lt;a0&gt;&lt;c1&gt;Tar&lt;/c1&gt;&lt;/a0&gt;， &lt;a2&gt;&lt;c3&gt;Zip&lt;/c3&gt;&lt;/a2&gt;， &lt;a4&gt;&lt;c5&gt;Jar&lt;/c5&gt;&lt;/a4&gt;， &lt;a6&gt;&lt;c7&gt;War&lt;/c7&gt;&lt;/a6&gt; 及 &lt;a8&gt;&lt;c9&gt;Ear&lt;/c9&gt;&lt;/a8&gt;任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Test</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083218Z" creationid="msdx" creationdate="20150428T083218Z">
        <seg>Test</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Test ANTLR grammar files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T095149Z" creationid="haohang" creationdate="20150625T095149Z">
        <seg>测试 ANTLR 语法文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Test Groovy sources.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T075137Z" creationid="msdx" creationdate="20150429T075137Z">
        <seg>Test Groovy 源代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Test Java source</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T083439Z" creationid="Administrator" creationdate="20150426T083439Z">
        <seg>Java 测试源代码</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Test Scala sources.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T152632Z" creationid="msdx" creationdate="20150429T152632Z">
        <seg>Test Scala 源代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Test always executes every test that it detects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T015031Z" creationid="Administrator" creationdate="20150428T015031Z">
        <seg>test 会始终执行它检测到的每一个测试。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Test filtering feature has following characteristic:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T022846Z" creationid="Administrator" creationdate="20150428T022846Z">
        <seg>测试过滤功能具有以下的特征：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Test filtering supersedes the file-based test selection.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T023827Z" creationid="Administrator" creationdate="20150428T023827Z">
        <seg>测试过滤将会取代基于文件的测试选择。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Test resources</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T083443Z" creationid="Administrator" creationdate="20150426T083443Z">
        <seg>测试资源</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>TestNG supports &lt;a0&gt;parameterizing test methods&lt;/a0&gt;, allowing a particular test method to be executed multiple times with different inputs.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T143932Z" creationid="msdx" creationdate="20150428T143845Z">
        <seg>TestNG 支持&lt;a0&gt;参数化测试方法&lt;/a0&gt;，允许一个特定的测试方法使用不同的输入执行多次。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tests are executed in a separate JVM, isolated from the main build process.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T140546Z" creationid="Administrator" creationdate="20150427T140546Z">
        <seg>测试在单独的 JVM中执行，与main构建进程隔离。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thanks to Gradle's default imports (see &lt;a0&gt;Appendix E, &lt;i1&gt;Existing IDE Support and how to cope without it&lt;/i1&gt;&lt;/a0&gt;) you could also write:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141122T162523Z" creationid="msdx" creationdate="20141122T162523Z">
        <seg>由于 Gradle 的默认导入 （见&lt;a0&gt;附录 E，&lt;i1&gt;现有的 IDE 支持和如何应对不支持的情况&lt;/i1&gt;&lt;/a0&gt;），您还可以这样写：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That configuration is explicitly named as part of the dependency declaration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150730T035226Z" creationid="haohang" creationdate="20150730T035226Z">
        <seg>这个配置被显式地命名为这个依赖声明的一部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That is all.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160104T154517Z" creationid="95" creationdate="20160104T154517Z">
        <seg>就这些了。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That is, a plugin can be applied multiple times.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141122T162732Z" creationid="msdx" creationdate="20141122T162732Z">
        <seg>也就是说，一个插件可以被应用多次。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That is, any task that forks Java processes can be used to generate coverage information.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T135500Z" creationid="msdx" creationdate="20150506T135500Z">
        <seg>也就意味着，任何fork Java 进程的任务都可以用于生成覆盖率信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That is, only &lt;c3&gt;systemProp.&lt;/c3&gt; in the root project's &lt;c4&gt;gradle.properties&lt;/c4&gt; file will be set as system properties.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T150946Z" creationid="msdx" creationdate="20141109T150946Z">
        <seg>也就是，只有根项目&lt;c4&gt;gradle.properties&lt;/c4&gt;文件里的&lt;c3&gt;systemProp.&lt;/c3&gt;属性会被作为系统属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That is, the copy method is intended to be used by custom tasks (see &lt;a4&gt;Chapter 57, &lt;i5&gt;Writing Custom Task Classes&lt;/i5&gt;&lt;/a4&gt;) that need to copy files as part of their function.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T140440Z" creationid="msdx" creationdate="20141113T135328Z">
        <seg>即，这个copy()方法旨在用于自定义任务 （见&lt;a4&gt;第 57 章，&lt;i5&gt;编写自定义任务类&lt;/i5&gt;&lt;/a4&gt;）中，需要文件复制作为其一部分功能的时候。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That was one reason why we have created a distribution of webapps.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160727T054704Z" creationid="haohang" creationdate="20160727T054704Z">
        <seg>这是为什么我们创建一个 webapps 分发包的原因之一。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That way you have somehow expressed, what are your first level dependencies and what are transitive dependencies (see &lt;a0&gt;Section 50.4.8, “Optional attributes”&lt;/a0&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151201T064642Z" creationid="haohang" creationdate="20151201T064642Z">
        <seg>对于这种方法，你将用某种方式表达，你第一级的依赖项和传递依赖是什么（见&lt;a0&gt;第 50.4.8 条，“可选属性”&lt;/a0&gt;）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That's it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T091635Z" creationid="haohang" creationdate="20150628T091635Z">
        <seg>就是这样。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The "&lt;c0&gt;baseName&lt;/c0&gt;" property has also been changed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150701T034415Z" creationid="haohang" creationdate="20150701T034415Z">
        <seg>”&lt;c0&gt;baseName&lt;/c0&gt;“属性也被修改了。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The "&lt;c0&gt;basic&lt;/c0&gt;" build init type is useful for creating a fresh new Gradle project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T094935Z" creationid="haohang" creationdate="20150707T094935Z">
        <seg>“&lt;c0&gt;basic&lt;/c0&gt;”构建初始化类型用于创建一个新的 Gradle 项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The "&lt;c0&gt;groovy-library&lt;/c0&gt;" build init type is not inferable.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T094540Z" creationid="haohang" creationdate="20150707T094540Z">
        <seg>“&lt;c0&gt;groovy-library&lt;/c0&gt;”构建初始化类型不是可推断的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The "&lt;c0&gt;java-library&lt;/c0&gt;" build init type is not inferable.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T094114Z" creationid="haohang" creationdate="20150707T094114Z">
        <seg>“&lt;c0&gt;Java-library&lt;/c0&gt;”构建初始化类型不是可推断的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The "&lt;c0&gt;pom&lt;/c0&gt;" type can be used to convert an Apache Maven build to a Gradle build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T081827Z" creationid="haohang" creationdate="20150707T081827Z">
        <seg>“&lt;c0&gt;pom&lt;/c0&gt;”类型可以被用于把 Apache Maven 构建转换为 Gradle 构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The "&lt;c0&gt;scala-library&lt;/c0&gt;" build init type is not inferable.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T094333Z" creationid="haohang" creationdate="20150707T094333Z">
        <seg>“&lt;c0&gt;scala-library&lt;/c0&gt;”构建初始化类型不是可推断的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The 'default' version is resolved to a specific version via a dependency resolve rule, which looks up the version in a corporate catalog of approved modules.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T070543Z" creationid="95" creationdate="20151115T070543Z">
        <seg>这个“default”版本通过一个依赖解析规则被解析为一个特定的版本，这个规则将在一个核准模块的公司中查找该版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The 'should run after' ordering rule is similar but less strict as it will be ignored in two situations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T152303Z" creationid="msdx" creationdate="20141110T152221Z">
        <seg>“应该在之后运行”的排序规则与其类似，但没有那么严格，因为它在两种情况下会被忽略。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The :api project also depends on :shared.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T094935Z" creationid="haohang" creationdate="20160726T094935Z">
        <seg>:api 项目还依赖于 :shared.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;a0&gt;&lt;c1&gt;JacocoReport&lt;/c1&gt;&lt;/a0&gt; task can be used to generate code coverage reports in different formats.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T131717Z" creationid="msdx" creationdate="20150506T131644Z">
        <seg>&lt;a0&gt; &lt;c1&gt;JacocoReport&lt;/c1&gt;&lt;/a0&gt;任务可以用于生成不同格式的代码覆盖率报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;a0&gt;&lt;c1&gt;MavenDeployer&lt;/c1&gt;&lt;/a0&gt; and the MavenInstaller both provide an API for this:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T144151Z" creationid="95" creationdate="20160106T144151Z">
        <seg>&lt;a0&gt;&lt;c1&gt;MavenDeployer&lt;/c1&gt;&lt;/a0&gt;和 MavenInstaller 都为此提供了一个 API：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;a0&gt;&lt;c1&gt;SonarProperty&lt;/c1&gt;&lt;/a0&gt; annotations in the API documentation show how properties of the plugin's object model get mapped to the corresponding Sonar properties.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T100338Z" creationid="msdx" creationdate="20150512T100338Z">
        <seg>在 API 文档中的 &lt;a0&gt;&lt;c1&gt;SonarProperty&lt;/c1&gt;&lt;/a0&gt; 注解显示了插件的对象模型的属性是如何映射到相应的 Sonar 属性中的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;a0&gt;&lt;c1&gt;Sync&lt;/c1&gt;&lt;/a0&gt; task extends the &lt;c2&gt;Copy&lt;/c2&gt; task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T144416Z" creationid="msdx" creationdate="20141113T144416Z">
        <seg>&lt;a0&gt;&lt;c1&gt;Sync&lt;/c1&gt;&lt;/a0&gt;任务继承了&lt;c2&gt;Copy&lt;/c2&gt;任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;a0&gt;&lt;c1&gt;Test&lt;/c1&gt;&lt;/a0&gt; task's API allows you some control over how this happens.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T140629Z" creationid="Administrator" creationdate="20150427T140629Z">
        <seg>&lt;a0&gt;&lt;c1&gt;Test&lt;/c1&gt;&lt;/a0&gt;任务的 API 可以让你控制什么时候开始。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;--offline&lt;/c0&gt; command line switch tells Gradle to always use dependency modules from the cache, regardless if they are due to be checked again.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T153719Z" creationid="95" creationdate="20151129T153719Z">
        <seg>&lt;c0&gt;--offline&lt;/c0&gt; 命令行开机告诉 Gradle 总是从缓存中使用依赖模块，无论它们是否被再次检查。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;--refresh-dependencies&lt;/c0&gt; option tells Gradle to ignore all cached entries for resolved modules and artifacts.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T154130Z" creationid="95" creationdate="20151129T154014Z">
        <seg>&lt;c0&gt;--refresh-dependencies&lt;/c0&gt; 选项告诉 Gradle 在解析模块和构件时忽略所有缓存条目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;Configuration.files&lt;/c0&gt; method always retrieves all artifacts of the &lt;s1&gt;&lt;e2&gt;whole&lt;/e2&gt;&lt;/s1&gt; configuration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T040122Z" creationid="haohang" creationdate="20150807T040122Z">
        <seg>&lt;c0&gt;Configuration.files&lt;/c0&gt;方法总是获取&lt;s1&gt;&lt;e2&gt;整个&lt;/e2&gt;&lt;/s1&gt;配置的所有 artifacts。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;Project&lt;/c0&gt; instance</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T044226Z" creationid="msdx" creationdate="20141108T044226Z">
        <seg>&lt;c0&gt;Project&lt;/c0&gt;实例</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;Project&lt;/c0&gt; object provides some standard properties, which are available in your build script.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T043922Z" creationid="msdx" creationdate="20141108T043922Z">
        <seg>&lt;c0&gt;Project&lt;/c0&gt;对象提供了一些在构建脚本中可用的标准的属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;Test&lt;/c0&gt; task detects which classes are test classes by inspecting the compiled test classes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T040550Z" creationid="Administrator" creationdate="20150428T040550Z">
        <seg>&lt;c0&gt;Test&lt;/c0&gt;任务通过检查编译过的测试类来检测哪些类是测试类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;Test&lt;/c0&gt; task generates the following results by default.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083931Z" creationid="msdx" creationdate="20150428T083505Z">
        <seg>&lt;c0&gt;test&lt;/c0&gt;任务默认情况下会生成以下结果。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;announce&lt;/c0&gt; method takes two String arguments: The message to be sent, and the notification service to be used.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T063617Z" creationid="haohang" creationdate="20150628T063617Z">
        <seg>&lt;c0&gt;announce&lt;/c0&gt; 方法有两个 String 参数: 要被发送的消息，以及要使用的通知服务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;beforeMerged&lt;/c0&gt; hook is executed with a domain object representing the existing file</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T105028Z" creationid="haohang" creationdate="20150624T104603Z">
        <seg>&lt;c0&gt;beforeMerged&lt;/c0&gt;的 hook 会随着一个表示现有文件的域对象执行</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;build&lt;/c0&gt; task does this.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T095253Z" creationid="haohang" creationdate="20160726T095253Z">
        <seg>&lt;c0&gt;build&lt;/c0&gt; 任务能做到这一点。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;build&lt;/c0&gt; task of the Java plugin is typically used to compile, test, and perform code style checks (if the CodeQuality plugin is used) of a single project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T094619Z" creationid="haohang" creationdate="20160726T094619Z">
        <seg>Java 插件的&lt;c0&gt;build&lt;/c0&gt; 通常用于一个项目的编译，测试和执行代码风格检查（如果使用了CodeQuality插件的话）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;buildDashboard&lt;/c0&gt; task does not depend on any other tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150713T095540Z" creationid="haohang" creationdate="20150713T095540Z">
        <seg>&lt;c0&gt;buildDashboard&lt;/c0&gt; 任务不依赖于任何其他任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;buildDependents&lt;/c0&gt; task also tests all the projects that have a project lib dependency (in the testRuntime configuration) on the specified project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160727T052556Z" creationid="haohang" creationdate="20160727T052556Z">
        <seg>&lt;c0&gt;buildDependents&lt;/c0&gt;任务也用于测试依赖于（在testRuntime配置）指定项目的所有项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;buildNeeded&lt;/c0&gt; task also tests all the projects from the project lib dependencies of the testRuntime configuration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160727T052240Z" creationid="haohang" creationdate="20160727T052240Z">
        <seg>&lt;c0&gt;buildNeeded&lt;/c0&gt; 任务也用于测试这个项目在testRuntime配置中依赖的所有库项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;clean&lt;/c0&gt; task is an instance of &lt;a1&gt;&lt;c2&gt;Delete&lt;/c2&gt;&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T134305Z" creationid="Administrator" creationdate="20150427T134305Z">
        <seg>&lt;c0&gt;clean&lt;/c0&gt; 任务是&lt;a1&gt;&lt;c2&gt;Delete&lt;/c2&gt;&lt;/a1&gt;的一个实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;configure()&lt;/c0&gt; method takes a list as an argument and applies the configuration to the projects in this list.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160530T144104Z" creationid="95" creationdate="20160527T163848Z">
        <seg>&lt;c0&gt;configure()&lt;/c0&gt;方法接受一个list作为参数，并将配置应用到这个list里的项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;copy&lt;/c0&gt; method copies only the dependencies belonging explicitly to the configuration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T040525Z" creationid="haohang" creationdate="20150807T040501Z">
        <seg>&lt;c0&gt;copy&lt;/c0&gt;方法只复制明确属于配置的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;default&lt;/c0&gt; configuration of a module contains undesired artifacts.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150730T034853Z" creationid="haohang" creationdate="20150730T034618Z">
        <seg>一个模块的 &lt;c0&gt;default&lt;/c0&gt; 配置包含了不希望有的 artifacts。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;forkEvery&lt;/c0&gt; property specifies the maximum number of test classes to execute in a test process.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T013816Z" creationid="Administrator" creationdate="20150428T013816Z">
        <seg>&lt;c0&gt;forkEvery&lt;/c0&gt;属性指定了要在测试进程中执行的测试类的最大数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;from()&lt;/c0&gt; method accepts any of the arguments that the &lt;a1&gt;files()&lt;/a1&gt; method does.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T130838Z" creationid="msdx" creationdate="20141113T124455Z">
        <seg>&lt;c0&gt;from()&lt;/c0&gt;方法接受和&lt;a1&gt;files()&lt;/a1&gt;方法一样的任何参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;groupId&lt;/c0&gt;, &lt;c1&gt;artifactId&lt;/c1&gt;, &lt;c2&gt;version&lt;/c2&gt; and &lt;c3&gt;packaging&lt;/c3&gt; elements used for the POM default to the values shown in the table below.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T143814Z" creationid="95" creationdate="20160105T143814Z">
        <seg>下表展示了用于POM的&lt;c0&gt;groupId&lt;/c0&gt;，&lt;c1&gt;artifactId&lt;/c1&gt;，&lt;c2&gt;version&lt;/c2&gt;和&lt;c3&gt;packaging&lt;/c3&gt;元素的默认值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;include&lt;/c0&gt; method takes project paths as arguments.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T041353Z" creationid="haohang" creationdate="20160519T041353Z">
        <seg>&lt;c0&gt;include&lt;/c0&gt;方法采用项目路径作为参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;includeFlat&lt;/c0&gt; method takes directory names as an argument.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T041921Z" creationid="haohang" creationdate="20160519T041901Z">
        <seg>&lt;c0&gt;includeFlat&lt;/c0&gt;方法将目录名称作为参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;init&lt;/c0&gt; supports different build setup &lt;e1&gt;types&lt;/e1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T073554Z" creationid="haohang" creationdate="20150707T073554Z">
        <seg>&lt;c0&gt;init&lt;/c0&gt;支持不同的构建安装程序&lt;e1&gt;类型&lt;/e1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;jar&lt;/c0&gt; task creates a JAR file containing the class files and resources of the project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T144442Z" creationid="msdx" creationdate="20150428T144404Z">
        <seg>&lt;c0&gt;Jar&lt;/c0&gt;任务创建一个包含类文件和项目资源的 JAR 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;javadoc&lt;/c0&gt; task is an instance of &lt;a1&gt;&lt;c2&gt;Javadoc&lt;/c2&gt;&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T133640Z" creationid="Administrator" creationdate="20150427T133640Z">
        <seg>&lt;c0&gt;Javadoc&lt;/c0&gt;任务是&lt;a1&gt;&lt;c2&gt;Javadoc&lt;/c2&gt;&lt;/a1&gt;的一个实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;maxParallelForks&lt;/c0&gt; property specifies the maximum number of test processes to run at any given time.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T141204Z" creationid="Administrator" creationdate="20150427T141204Z">
        <seg>&lt;c0&gt;MaxParallelForks&lt;/c0&gt;属性指定在给定的时间可以运行的测试进程的最大数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;rcCompiler&lt;/c0&gt; extension is of type &lt;a1&gt;&lt;c2&gt;PreprocessingTool&lt;/c2&gt;&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160325T025453Z" creationid="haohang" creationdate="20160325T025453Z">
        <seg>&lt;c0&gt;rcCompiler&lt;/c0&gt;扩展是&lt;a1&gt;&lt;c2&gt;PreprocessingTool&lt;/c2&gt;&lt;/a1&gt;类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;sonar&lt;/c0&gt; block in a subproject configures an object of type &lt;a1&gt;&lt;c2&gt;SonarProjectModel&lt;/c2&gt;&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T091456Z" creationid="msdx" creationdate="20150512T091359Z">
        <seg>在子项目中的&lt;c0&gt;sonar&lt;/c0&gt;块配置的是一个&lt;a1&gt;&lt;c2&gt;SonarProjectModel&lt;/c2&gt;&lt;/a1&gt;类型的对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;sonar&lt;/c0&gt; block in that project configures an object of type &lt;a1&gt;&lt;c2&gt;SonarRootModel&lt;/c2&gt;&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T091139Z" creationid="msdx" creationdate="20150512T091139Z">
        <seg>在该project 中的&lt;c0&gt;sonar&lt;/c0&gt; 块配置的是一个&lt;a1&gt;&lt;c2&gt;SonarRootModel&lt;/c2&gt;&lt;/a1&gt;类型的对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;sonar&lt;/c0&gt;, &lt;c1&gt;server&lt;/c1&gt;, &lt;c2&gt;database&lt;/c2&gt;, and &lt;c3&gt;project&lt;/c3&gt; blocks in the examples above configure objects of type &lt;a4&gt;&lt;c5&gt;SonarRootModel&lt;/c5&gt;&lt;/a4&gt;, &lt;a6&gt;&lt;c7&gt;SonarServer&lt;/c7&gt;&lt;/a6&gt;, &lt;a8&gt;&lt;c9&gt;SonarDatabase&lt;/c9&gt;&lt;/a8&gt;, and &lt;a10&gt;&lt;c11&gt;SonarProject&lt;/c11&gt;&lt;/a10&gt;, respectively.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150510T144101Z" creationid="msdx" creationdate="20150510T143901Z">
        <seg>在上面的例子中，&lt;c0&gt;sonar&lt;/c0&gt;，&lt;c1&gt;server&lt;/c1&gt;，&lt;c2&gt;database&lt;/c2&gt;和&lt;c3&gt;project&lt;/c3&gt; 块分别配置的是&lt;a4&gt;&lt;c5&gt;SonarRootModel&lt;/c5&gt;&lt;/a4&gt;， &lt;a6&gt;&lt;c7&gt;SonarServer&lt;/c7&gt;&lt;/a6&gt;， &lt;a8&gt;&lt;c9&gt;SonarDatabase&lt;/c9&gt;&lt;/a8&gt;及 &lt;a10&gt;&lt;c11&gt;SonarProject&lt;/c11&gt;&lt;/a10&gt;类型的对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;sonarAnalyze&lt;/c0&gt; task is a standalone task that needs to be executed explicitly and doesn't depend on any other tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150510T143046Z" creationid="msdx" creationdate="20150510T143046Z">
        <seg>&lt;c0&gt;SonarAnalyze&lt;/c0&gt; task 是一项需要显式执行的独立任务，不依赖于任何其他 task。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;test&lt;/c0&gt; task is an instance of &lt;a1&gt;&lt;c2&gt;Test&lt;/c2&gt;&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T140237Z" creationid="Administrator" creationdate="20150427T140237Z">
        <seg>&lt;c0&gt;test&lt;/c0&gt;任务是&lt;a1&gt;&lt;c2&gt;Test&lt;/c2&gt;&lt;/a1&gt;的一个实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;testLogging&lt;/c0&gt; property allows to configure which test events are going to be logged and at which detail level.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T015219Z" creationid="Administrator" creationdate="20150428T015219Z">
        <seg>&lt;c0&gt;testLogging&lt;/c0&gt;属性可以配置哪些测试事件需要记录，并且使用什么样的日志级别。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;whenMerged&lt;/c0&gt; hook allows to manipulate the fully populated domain objects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T065857Z" creationid="haohang" creationdate="20150625T065857Z">
        <seg>&lt;c0&gt;WhenMerged&lt;/c0&gt; hook 允许操作完全填充的域对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;whenMerged&lt;/c0&gt; hook is executed with a domain object representing contents of the file to be persisted</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T105018Z" creationid="haohang" creationdate="20150624T104757Z">
        <seg>&lt;c0&gt;whenMerged&lt;/c0&gt;的 hook 会随着一个表示持久化的域对象执行</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;withXml&lt;/c0&gt; hook is executed with a raw representation of the XML that will be persisted</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T105114Z" creationid="haohang" creationdate="20150624T104806Z">
        <seg>&lt;c0&gt;withXml&lt;/c0&gt;的 hook 会随着一个表示将被持久化的XML的 raw 执行</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;withXml&lt;/c0&gt;hook allows to manipulate the in-memory XML representation just before the file gets written to disk.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T070144Z" creationid="haohang" creationdate="20150625T070144Z">
        <seg>&lt;c0&gt;WithXml&lt;/c0&gt; hook 允许在文件写入到磁盘之前，操纵内存中的 XML 的表示形式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c1&gt;-D&lt;/c1&gt; option of the &lt;s2&gt;&lt;s3&gt;gradle&lt;/s3&gt;&lt;/s2&gt; command has the same effect as the &lt;c4&gt;-D&lt;/c4&gt; option of the &lt;s5&gt;&lt;s6&gt;java&lt;/s6&gt;&lt;/s5&gt; command.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T075935Z" creationid="msdx" creationdate="20141109T075935Z">
        <seg>&lt;s2&gt; &lt;s3&gt;Gradle&lt;/s3&gt;&lt;/s2&gt;命令的&lt;c1&gt;-D&lt;/c1&gt;选项和&lt;s5&gt;&lt;s6&gt;java&lt;/s6&gt;&lt;/s5&gt;命令的&lt;c4&gt;-D&lt;/c4&gt;选项有着同样的效果。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c1&gt;archives&lt;/c1&gt; configuration is the standard configuration to assign your artifacts to.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151226T085120Z" creationid="95" creationdate="20151226T085120Z">
        <seg>&lt;c1&gt;archives&lt;/c1&gt; 配置是一个指定你的构件的标准配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c1&gt;beforeMerged&lt;/c1&gt; hook makes it possible to overwrite just certain parts of the existing content.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T073901Z" creationid="haohang" creationdate="20150625T073901Z">
        <seg>&lt;c1&gt;beforeMerged&lt;/c1&gt; hook 可以实现只覆盖现有的某些部分的内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c1&gt;buildNeeded&lt;/c1&gt; and &lt;c2&gt;buildDependents&lt;/c2&gt; tasks can help with this.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T094740Z" creationid="haohang" creationdate="20160726T094740Z">
        <seg>&lt;c1&gt;buildNeeded&lt;/c1&gt; 和 &lt;c2&gt;buildDependents&lt;/c2&gt; 任务能帮你做到这一点。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c1&gt;compile&lt;/c1&gt; configuration inherits this dependency, so the groovy libraries will be included in classpath when compiling Groovy and Java source.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T065243Z" creationid="msdx" creationdate="20141030T065240Z">
        <seg> &lt;c1&gt;编译&lt;/c1&gt; 配置继承了这个依赖,从而在编译Groovy和Java源代码时，groovy库也会被包含在类路径中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c1&gt;copy()&lt;/c1&gt; method can be used to copy files as &lt;s2&gt;&lt;e3&gt;part&lt;/e3&gt;&lt;/s2&gt; of a task's implementation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T140306Z" creationid="msdx" creationdate="20141113T135151Z">
        <seg>&lt;c1&gt;copy()&lt;/c1&gt;方法可以作为一个任务执行的&lt;s2&gt;&lt;e3&gt;部分&lt;/e3&gt;&lt;/s2&gt;来复制文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c1&gt;copyRecursive&lt;/c1&gt; method copies all the dependencies, including the dependencies from extended configurations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T040548Z" creationid="haohang" creationdate="20150807T040548Z">
        <seg>&lt;c1&gt;copyRecursive&lt;/c1&gt;方法将复制所有依赖，包括扩展配置的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c1&gt;settings.xml&lt;/c1&gt; in &lt;c2&gt;&lt;e3&gt;&lt;c4&gt;USER_HOME&lt;/c4&gt;&lt;/e3&gt;/.m2&lt;/c2&gt; takes precedence over the &lt;c5&gt;settings.xml&lt;/c5&gt; in &lt;c6&gt;&lt;e7&gt;&lt;c8&gt;M2_HOME&lt;/c8&gt;&lt;/e7&gt;/conf&lt;/c6&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150909T052823Z" creationid="haohang" creationdate="20150909T052823Z">
        <seg>在&lt;c2&gt;&lt;e3&gt;&lt;c4&gt;USER_HOME&lt;/c4&gt;&lt;/e3&gt;/.m2&lt;/c2&gt; 的&lt;c1&gt;settings.xml&lt;/c1&gt; 比在 &lt;c6&gt; &lt;e7&gt; &lt;c8&gt;M2_HOME&lt;/c8&gt;&lt;/e7&gt;/conf&lt;/c6&gt;的&lt;c5&gt;settings.xml&lt;/c5&gt;优先。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c2&gt;main&lt;/c2&gt; source set contains your production source code, which is compiled and assembled into a JAR file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T173833Z" creationid="Administrator" creationdate="20150425T173833Z">
        <seg>&lt;c2&gt;main&lt;/c2&gt;源集包含你产品的源代码，它们将被编译并组装成一个 JAR 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c3&gt;FileTree&lt;/c3&gt; interface extends &lt;c4&gt;FileCollection&lt;/c4&gt;, so you can treat a file tree exactly the same way as you would a file collection.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T162055Z" creationid="msdx" creationdate="20141112T162055Z">
        <seg>&lt;c3&gt;FileTree&lt;/c3&gt;接口继承自&lt;c4&gt;FileCollection&lt;/c4&gt;，所以你可以用对待文件集合一样的方式来对待文件树。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c3&gt;into()&lt;/c3&gt; accepts any of the arguments that the &lt;a4&gt;file()&lt;/a4&gt; method does.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T130917Z" creationid="msdx" creationdate="20141113T130834Z">
        <seg>&lt;c0&gt;into()&lt;/c0&gt;方法接受和&lt;a1&gt;files()&lt;/a1&gt;方法一样的任何参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c3&gt;test&lt;/c3&gt; source set contains your unit test source code, which is compiled and executed using JUnit or TestNG.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T173923Z" creationid="Administrator" creationdate="20150425T173923Z">
        <seg>&lt;c3&gt;test&lt;/c3&gt;源集包含你的单元测试的源代码，它们将被编译并使用 JUnit 或 TestNG来执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c4&gt;Copy&lt;/c4&gt; task implements this interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T124244Z" creationid="msdx" creationdate="20141113T124244Z">
        <seg>&lt;c4&gt;Copy&lt;/c4&gt;任务实现了此接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c4&gt;dependency&lt;/c4&gt; elements are created from the project's dependency declarations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T144002Z" creationid="95" creationdate="20160105T144002Z">
        <seg>这些&lt;c4&gt;dependency&lt;/c4&gt;元素由project 的依赖声明所创建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c4&gt;files()&lt;/c4&gt; method accepts any type of object as its parameters.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T145542Z" creationid="msdx" creationdate="20141112T145542Z">
        <seg>这个&lt;c4&gt;Files()&lt;/c4&gt;方法接受任何类型的对象作为其参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c5&gt;files&lt;/c5&gt; method therefore returns &lt;c6&gt;seal-2.0&lt;/c6&gt; as a transitive dependency of&lt;c7&gt;orca&lt;/c7&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T090919Z" creationid="haohang" creationdate="20150807T090756Z">
        <seg>&lt;c5&gt;files&lt;/c5&gt; 方法因此返回 &lt;c6&gt;seal-2.0&lt;/c6&gt; 作为 &lt;c7&gt;orca&lt;/c7&gt;的传递依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c6&gt;GroovyCompile&lt;/c6&gt; task supports most configuration options of the official Groovy compiler.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T094525Z" creationid="msdx" creationdate="20150429T094505Z">
        <seg>&lt;c6&gt;GroovyCompile&lt;/c6&gt; task 支持官方的 Groovy 编译器的大多数配置选项。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c7&gt;file()&lt;/c7&gt; method also understands URLs, such as &lt;c8&gt;file:/some/path.xml&lt;/c8&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T143325Z" creationid="msdx" creationdate="20141112T143325Z">
        <seg>这个&lt;c7&gt;file ()&lt;/c7&gt;方法也可以识别URL，例如是&lt;c8&gt;file:/some/path.xml&lt;/c8&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;e6&gt;&lt;c7&gt;taskName&lt;/c7&gt;&lt;/e6&gt; can be a full multi-project path like ":sub1:sub2:test" or just the task name.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T035419Z" creationid="Administrator" creationdate="20150428T035419Z">
        <seg>这个&lt;e6&gt;&lt;c7&gt;taskName&lt;/c7&gt;&lt;/e6&gt; 可以是一个完整的多项目路径，比如“sub1:sub2:test”，或者仅是一个任务名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;e8&gt;&lt;c9&gt;testNamePattern&lt;/c9&gt;&lt;/e8&gt; will be used to form an include pattern of "**/testNamePattern*.class".</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T035612Z" creationid="Administrator" creationdate="20150428T035612Z">
        <seg>&lt;e8&gt;&lt;c9&gt;testNamePattern&lt;/c9&gt;&lt;/e8&gt;将用于形成一个“**/testNamePattern*.class”的包含模式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;s0&gt;&lt;e1&gt;absence&lt;/e1&gt;&lt;/s0&gt; of a particular module or artifact in a particular repository, eliminating repeated attempts to access a resource that does not exist.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T045439Z" creationid="95" creationdate="20151129T045305Z">
        <seg>在特定的仓库中&lt;s0&gt;&lt;e1&gt;缺少的&lt;/e1&gt;&lt;/s0&gt;特定模块或工件，避免反复地尝试访问不存在的资源。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;s6&gt;&lt;e7&gt;execution&lt;/e7&gt;&lt;/s6&gt; dependency is in the other direction, as &lt;c8&gt;webDist&lt;/c8&gt; depends on the build artifacts of &lt;c9&gt;date&lt;/c9&gt; and &lt;c10&gt;hello&lt;/c10&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T082523Z" creationid="haohang" creationdate="20160726T080317Z">
        <seg>&lt;s6&gt;&lt;e7&gt;执行&lt;/e7&gt;&lt;/s6&gt;依赖则是另一个方面，因为&lt;c8&gt;webDist&lt;/c8&gt;依赖于&lt;c9&gt;date&lt;/c9&gt; 和 &lt;c10&gt;hello&lt;/c10&gt;所构建的构件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The ANTLR grammar files of this source set.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T102808Z" creationid="haohang" creationdate="20150625T102755Z">
        <seg>给定的source set 的 ANTLR 语法文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The ANTLR plugin adds a number of tasks to your project, as shown below.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T094916Z" creationid="haohang" creationdate="20150625T094916Z">
        <seg>ANTLR 插件向你的项目添加了大量的任务，如下所示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The ANTLR plugin adds an &lt;c0&gt;antlr&lt;/c0&gt; dependency configuration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T095514Z" creationid="haohang" creationdate="20150625T095514Z">
        <seg>ANTLR 插件添加了一个 &lt;c0&gt;antlr&lt;/c0&gt; 的依赖配置：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The ANTLR plugin adds the following dependencies to tasks added by the Java plugin.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T095104Z" creationid="haohang" creationdate="20150625T095104Z">
        <seg>ANTLR 插件向 Java 插件所加入的 tasks 添加了以下的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The ANTLR plugin adds the following properties to each source set in the project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T102725Z" creationid="haohang" creationdate="20150625T102725Z">
        <seg>ANTLR 插件向 project 的每一个source set 添加了下列属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The ANTLR plugin does not add any convention properties.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T102649Z" creationid="haohang" creationdate="20150625T102649Z">
        <seg>ANTLR 插件不会添加任何约定属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The ANTLR plugin extends the Java plugin to add support for generating parsers using &lt;a0&gt;ANTLR&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T094835Z" creationid="msdx" creationdate="20141116T063356Z">
        <seg>ANTLR 插件扩展自 Java 插件并添加了使用 &lt;a0&gt;ANTLR&lt;/a0&gt; 生成语法分析器的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The ANTLR plugin only supports ANTLR version 2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T094844Z" creationid="haohang" creationdate="20150625T094708Z">
        <seg>ANTLR 插件只支持 ANTLR 版本 2。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The API lets you to walk the resolved dependency graph and provides information about the dependencies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T033712Z" creationid="haohang" creationdate="20150807T033712Z">
        <seg>这个 API 可以让你查看解析的依赖图，并提供有关依赖的信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Ant based compiler (&lt;c2&gt;scalaCompileOptions.useAnt = true&lt;/c2&gt;) will fork a new process for every &lt;c3&gt;ScalaCompile&lt;/c3&gt; task, and does not fork by default.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150430T155854Z" creationid="msdx" creationdate="20150430T155854Z">
        <seg>基于 Ant 的编译器 (&lt;c2&gt;scalaCompileOptions.useAnt = true&lt;/c2&gt;) 将为每个&lt;c3&gt;ScalaCompile&lt;/c3&gt;任务fork 一个新进程，而默认情况下它不进行fork。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Ant integration is provided by &lt;a0&gt;&lt;c1&gt;AntBuilder&lt;/c1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T063027Z" creationid="msdx" creationdate="20141116T062726Z">
        <seg>Ant 集成由&lt;a0&gt;&lt;c1&gt;AntBuilder&lt;/c1&gt;&lt;/a0&gt;提供。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Ant properties are also available as a Map which you can change.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T061823Z" creationid="msdx" creationdate="20141116T061406Z">
        <seg>Ant 属性也可以从一个你可以修改的Map中获得。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Ant properties are also available as a Map.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T062213Z" creationid="msdx" creationdate="20141116T062213Z">
        <seg>Ant 属性也可作为一个 Map。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Application plugin adds the following tasks to the project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150702T104928Z" creationid="haohang" creationdate="20150702T104928Z">
        <seg>应用程序插件向 project 中添加了以下任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Build Dashboard plugin adds the following task to the project:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150713T100248Z" creationid="haohang" creationdate="20150713T100248Z">
        <seg>Build Dashboard 插件向项目中添加以下任务：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Build Dashboard plugin can be used to generate a single HTML dashboard that provides a single point of access to all of the reports generated by a build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150713T095141Z" creationid="haohang" creationdate="20150710T013225Z">
        <seg>Build Dashboard 插件可以用于生成单个 HTML dashboard，提供对由构建生成的所有报告的单点访问。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Build Dashboard plugin does not define any dependency configurations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150713T100441Z" creationid="haohang" creationdate="20150713T100441Z">
        <seg>Build Dashboard 插件没有定义任何的依赖配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Build Dashboard plugin does not require any particular project layout.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150713T100426Z" creationid="haohang" creationdate="20150713T100339Z">
        <seg>Build Dashboard 插件不需要任何特定的项目布局。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Build Environment</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150508T131813Z" creationid="msdx" creationdate="20150508T131813Z">
        <seg>构建环境</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Build Init plugin is an automatically applied plugin, which means you do not need to apply it explicitly.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T073636Z" creationid="haohang" creationdate="20150707T071042Z">
        <seg> Build Init 插件是一个自动应用的插件，这意味着您不需要显式地应用它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Build Init plugin is currently &lt;a0&gt;incubating&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T073612Z" creationid="haohang" creationdate="20150707T070705Z">
        <seg> Build Init 插件目前仍然是&lt;a0&gt;孵化&lt;/a0&gt;状态。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Checkstyle Plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150514T151850Z" creationid="msdx" creationdate="20150514T151850Z">
        <seg>Checkstyle 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Checkstyle libraries to use</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T132828Z" creationid="msdx" creationdate="20150505T132828Z">
        <seg>用到的 Checkstyle 库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Checkstyle plugin adds the following dependencies to tasks defined by the Java plugin.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T132510Z" creationid="msdx" creationdate="20150505T132510Z">
        <seg>Checkstyle 插件向 Java 插件所加入的 tasks 添加了以下的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Checkstyle plugin adds the following dependency configurations:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T132724Z" creationid="msdx" creationdate="20150505T132724Z">
        <seg>Checkstyle 插件添加了下列的依赖配置：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Checkstyle plugin adds the following tasks to the project:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T024648Z" creationid="msdx" creationdate="20150505T024648Z">
        <seg>Checkstyle 插件向project 中添加了以下tasks：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Checkstyle plugin expects the following project layout:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T132624Z" creationid="msdx" creationdate="20150505T132624Z">
        <seg>Checkstyle 插件预计是以下的项目布局：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Checkstyle plugin performs quality checks on your project's Java source files using &lt;a0&gt;Checkstyle&lt;/a0&gt; and generates reports from these checks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T151731Z" creationid="msdx" creationdate="20150504T151538Z">
        <seg>Checkstyle 插件使用&lt;a0&gt;Checkstyle&lt;/a0&gt;对你的项目的 Java 源文件执行质量检查，并从检查结果中生成报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The CodeNarc Plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150514T151920Z" creationid="msdx" creationdate="20150514T151920Z">
        <seg>CodeNarc 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The CodeNarc libraries to use</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T133509Z" creationid="msdx" creationdate="20150505T133509Z">
        <seg>使用的 CodeNarc 库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The CodeNarc plugin adds the following dependencies to tasks defined by the Groovy plugin.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T133333Z" creationid="msdx" creationdate="20150505T133245Z">
        <seg>CodeNarc 插件向 Groovy 插件所加入的任务添加了以下的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The CodeNarc plugin adds the following dependency configurations:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T133444Z" creationid="msdx" creationdate="20150505T133444Z">
        <seg>CodeNarc 插件添加了下列的依赖配置：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The CodeNarc plugin adds the following tasks to the project:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T133140Z" creationid="msdx" creationdate="20150505T133120Z">
        <seg>CodeNarc 插件向project 中添加了以下任务：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The CodeNarc plugin expects the following project layout:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T133413Z" creationid="msdx" creationdate="20150505T133413Z">
        <seg>CodeNarc 插件预计是以下的项目布局：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The CodeNarc plugin performs quality checks on your project's Groovy source files using &lt;a0&gt;CodeNarc&lt;/a0&gt; and generates reports from these checks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T133040Z" creationid="msdx" creationdate="20150505T132950Z">
        <seg>CodeNarc 插件使用&lt;a0&gt;CodeNarc&lt;/a0&gt;对项目的 Groovy 源文件执行质量检查并生成报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Command Line tab is place to execute a single Gradle command directly.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T160049Z" creationid="msdx" creationdate="20141105T160049Z">
        <seg>命令行选项卡是直接执行单个的 Gradle 命令的地方。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Distribution plugin adds the following tasks to the project:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150701T030807Z" creationid="haohang" creationdate="20150701T030807Z">
        <seg>分发插件向 project 中添加了以下任务：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Ear Plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T132232Z" creationid="msdx" creationdate="20150509T132232Z">
        <seg>Ear 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Ear plugin adds support for assembling web application EAR files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T094222Z" creationid="msdx" creationdate="20150503T094121Z">
        <seg>Ear 插件添加了用于组装 web 应用程序的 EAR 文件的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Ear plugin adds the following dependencies to tasks added by the base plugin.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T095156Z" creationid="msdx" creationdate="20150503T094918Z">
        <seg>Ear 插件向基础插件所加入的 tasks 添加了以下的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Ear plugin adds the following tasks to the project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T094507Z" creationid="msdx" creationdate="20150503T094507Z">
        <seg>Ear 插件向project 中添加了以下任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Ear plugin adds two dependency configurations: &lt;c0&gt;deploy&lt;/c0&gt; and &lt;c1&gt;earlib&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T095312Z" creationid="msdx" creationdate="20150503T095312Z">
        <seg>Ear 插件添加了两个依赖配置：&lt;c0&gt;deploy&lt;/c0&gt;和&lt;c1&gt;earlib&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Eclipse plugin adds a number of tasks to your projects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T004215Z" creationid="haohang" creationdate="20150603T004136Z">
        <seg>Eclipse 插件向你的projects 添加了大量的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Eclipse plugin adds the tasks shown below to a project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T004325Z" creationid="haohang" creationdate="20150603T004325Z">
        <seg>Eclipse 插件向一个 project 添加了如下所示的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Eclipse plugin allows you to customize the generated metadata files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T100351Z" creationid="haohang" creationdate="20150624T100351Z">
        <seg>Eclipse 插件允许您自定义生成的元数据文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Eclipse plugin generates files that are used by the &lt;a0&gt;Eclipse IDE&lt;/a0&gt;, thus making it possible to import the project into Eclipse (&lt;s1&gt;File&lt;/s1&gt; - &lt;s2&gt;Import...&lt;/s2&gt; - &lt;s3&gt;Existing Projects into Workspace&lt;/s3&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T002903Z" creationid="haohang" creationdate="20150603T002903Z">
        <seg>Eclipse 插件生成&lt;a0&gt;Eclipse IDE&lt;/a0&gt;所使用的文件，从而让项目能够导入 Eclipse （&lt;s1&gt;File&lt;/s1&gt; - &lt;s2&gt;Import...&lt;/s2&gt; - &lt;s3&gt;Existing Projects into Workspace&lt;/s3&gt;）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Eclipse plugin is open to customization and provides a standardized set of hooks for adding and removing content from the generated files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T004051Z" creationid="haohang" creationdate="20150603T004051Z">
        <seg>Eclipse 插件是开放的，以定制和提供一套标准化的钩，用于添加和删除生成的文件的内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Eclipse plugin provides objects modeling the sections of the Eclipse files that are generated by Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T104301Z" creationid="haohang" creationdate="20150624T104240Z">
        <seg>Eclipse 插件提供了一些对象，对由 Gradle 生成的 Eclipse 文件的段落进行建模。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Favorites tab is place to store commonly-executed commands.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T154455Z" creationid="msdx" creationdate="20141105T154445Z">
        <seg>收藏夹选项卡用来储存经常执行的命令。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The FindBugs libraries to use</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T133851Z" creationid="msdx" creationdate="20150505T133851Z">
        <seg>使用的 FindBugs 库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The FindBugs plugin adds the following dependencies to tasks defined by the Java plugin.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T133738Z" creationid="msdx" creationdate="20150505T133738Z">
        <seg>FindBugs 插件向 Java 插件所加入的任务添加了以下的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The FindBugs plugin adds the following dependency configurations:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T133824Z" creationid="msdx" creationdate="20150505T133824Z">
        <seg>FindBugs 插件增加了下列的依赖配置：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The FindBugs plugin adds the following tasks to the project:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T133633Z" creationid="msdx" creationdate="20150505T133633Z">
        <seg>FindBugs 插件向project 中添加了以下任务：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The FindBugs plugin performs quality checks on your project's Java source files using &lt;a0&gt;FindBugs&lt;/a0&gt; and generates reports from these checks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T133604Z" creationid="msdx" creationdate="20150505T133604Z">
        <seg>FindBugs 插件使用&lt;a0&gt;FindBugs&lt;/a0&gt;对项目的 Java 源文件执行质量检查，并从检查结果中生成报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Gradle &lt;c0&gt;cunit&lt;/c0&gt; plugin provides support for compiling and executing CUnit tests in your native-binary project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T144211Z" creationid="95" creationdate="20160504T144211Z">
        <seg>Gradle &lt;c0&gt;cunit&lt;/c0&gt; 插件向你的native-binary项目提供了编译及执行CUnit 测试的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Gradle Build Init plugin can be used to bootstrap the process of creating a new Gradle build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T073621Z" creationid="haohang" creationdate="20150707T070837Z">
        <seg>Gradle  Build Init 插件可以用于引导创建一个新的 Gradle 构建的过程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Gradle DSL uses closures in many places.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T063220Z" creationid="msdx" creationdate="20141108T063220Z">
        <seg>Gradle DSL 在很多地方使用闭包。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Gradle Daemon</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150508T131737Z" creationid="msdx" creationdate="20150508T131737Z">
        <seg>Gradle 守护进程</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Gradle announce allows to send custom announcements during a build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T062750Z" creationid="haohang" creationdate="20150628T062445Z">
        <seg>Gradle 宣布允许在构建期间发送自定义公告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Gradle application plugin extends the language plugins with common application related tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150701T035440Z" creationid="haohang" creationdate="20150701T035440Z">
        <seg>Gradle 应用程序插件扩展了语言插件的一些常见应用程序相关的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Gradle build language</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T164838Z" creationid="msdx" creationdate="20141109T164838Z">
        <seg>Gradle 构建语言</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Gradle cache does not allow the local cache to hide problems and creating mysterious and difficult to debug behavior that has been a challenge with many build tools.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T043546Z" creationid="95" creationdate="20151129T043546Z">
        <seg>Gradle 缓存中不允许本地缓存隐藏问题和，以及一直是许多构建工具的挑战的创造神秘及难以调试的行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Gradle dependency cache consists of 2 key types of storage:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T042151Z" creationid="95" creationdate="20151129T042119Z">
        <seg>Gradle 依赖缓存包含 2 个主要类型的存储：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Gradle dependency cache uses file-based locking to ensure that it can safely be used by multiple Gradle processes concurrently.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T153337Z" creationid="95" creationdate="20151129T153315Z">
        <seg>Gradle 依赖缓存使用基于文件的锁来确保，它可以安全地通过多个 Gradle 进程并行使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Gradle support for building native binaries is currently &lt;a0&gt;incubating&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160128T151723Z" creationid="95" creationdate="20160128T151723Z">
        <seg>Gradle 对构建原生二进制文件的支持目前还是&lt;a0&gt;孵化&lt;/a0&gt;阶段。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Gradle wrapper plugin allows the generation of Gradle wrapper files by adding a &lt;a0&gt;&lt;c1&gt;Wrapper&lt;/c1&gt;&lt;/a0&gt; task, that generates all files needed to run the build using the Gradle Wrapper.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150710T012520Z" creationid="haohang" creationdate="20150707T095200Z">
        <seg>Gradle wrapper 插件允许通过添加 &lt;a0&gt;&lt;c1&gt;Wrapper&lt;/c1&gt;&lt;/a0&gt;任务生成的 Gradle wrapper 文件，来生成使用 Gradle Wrapper 运行构建时所需的所有文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Groovy Plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131841Z" creationid="msdx" creationdate="20150509T131841Z">
        <seg>Groovy 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Groovy library doesn't necessarily have to come from a remote repository.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T080657Z" creationid="msdx" creationdate="20150429T080657Z">
        <seg>Groovy 库不一定得从远程仓库中获取。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Groovy plugin adds a &lt;a0&gt;&lt;c1&gt;GroovyCompile&lt;/c1&gt;&lt;/a0&gt; task for each source set in the project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T094234Z" creationid="msdx" creationdate="20150429T094146Z">
        <seg>Java 插件向 project 里的每个source set 添加了一个&lt;a0&gt;&lt;c1&gt;JavaCompile&lt;/c1&gt;&lt;/a0&gt; task。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Groovy plugin adds the following convention properties to each source set in the project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T092449Z" creationid="msdx" creationdate="20150429T092449Z">
        <seg>Groovy 的插件向 project 的每一个source set 添加了下列的常规属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Groovy plugin adds the following dependencies to tasks added by the Java plugin.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T071712Z" creationid="msdx" creationdate="20150429T071609Z">
        <seg>Groovy 的插件向 Java 插件所加入的 tasks 添加了以下的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Groovy plugin adds the following tasks to the project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T071341Z" creationid="msdx" creationdate="20150429T071341Z">
        <seg>Groovy 的插件向project 中添加了以下任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Groovy plugin also modifies some source set properties:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T094014Z" creationid="msdx" creationdate="20150429T094014Z">
        <seg>Groovy 的插件还修改了一些 source set 的属性：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Groovy plugin assumes the project layout shown in &lt;a0&gt;Table 24.3, “Groovy plugin - project layout”&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T071901Z" creationid="msdx" creationdate="20150429T071901Z">
        <seg>Groovy 的插件会假定项目的布局如&lt;a0&gt;表 24.3，“Groovy 插件 -  项目布局”&lt;/a0&gt;中所示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Groovy plugin does not add any convention properties to the project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T092336Z" creationid="msdx" creationdate="20150429T092336Z">
        <seg>Groovy 的插件没有向 project 添加任何的常规属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Groovy plugin extends the &lt;c0&gt;compile&lt;/c0&gt; task to look for source files in directory &lt;c1&gt;src/main/groovy&lt;/c1&gt;, and the &lt;c2&gt;compileTest&lt;/c2&gt; task to look for test source files in directory &lt;c3&gt;src/test/groovy&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T064057Z" creationid="msdx" creationdate="20141030T064057Z">
        <seg>Groovy插件继承了 &lt;c0&gt;compile&lt;/c0&gt; task ， &lt;c1&gt;src/main/groovy&lt;/c1&gt;目录中查找源文件；还有 &lt;c2&gt;compileTest&lt;/c2&gt; task，在&lt;c3&gt;src/test/groovy&lt;/c3&gt;目录中查找测试的源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Groovy plugin extends the Java plugin to add support for Groovy projects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T151954Z" creationid="msdx" creationdate="20150428T151827Z">
        <seg>Groovy 的插件继承自 Java 插件并添加了对 Groovy 项目的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Groovy source files of this source set.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T093104Z" creationid="msdx" creationdate="20150429T093104Z">
        <seg>该source set 中的 Groovy 源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The IDEA plugin adds a number of tasks to your project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T071753Z" creationid="haohang" creationdate="20150625T071753Z">
        <seg>IDEA 插件向你的project 添加了大量的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The IDEA plugin adds the tasks shown below to a project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T071842Z" creationid="haohang" creationdate="20150625T071842Z">
        <seg>IDEA 插件向一个 project 添加了如下所示的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The IDEA plugin generates files that are used by &lt;a0&gt;IntelliJ IDEA&lt;/a0&gt;, thus making it possible to open the project from IDEA (&lt;s1&gt;File&lt;/s1&gt; - &lt;s2&gt;Open Project&lt;/s2&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T071359Z" creationid="haohang" creationdate="20150625T070621Z">
        <seg>IDEA 插件生成&lt;a0&gt;IntelliJ IDEA&lt;/a0&gt;所使用的文件，从而让项目能够在 IDEA 中打开 （&lt;s1&gt;File&lt;/s1&gt; - &lt;s2&gt;Open Project&lt;/s2&gt;）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The JAR file is declared as an artifact in the &lt;c1&gt;archives&lt;/c1&gt; dependency configuration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T144519Z" creationid="msdx" creationdate="20150428T144406Z">
        <seg>JAR 文件在&lt;c1&gt;archives&lt;/c1&gt;依赖配置中被声明为一个构件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The JDepend libraries to use</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T134457Z" creationid="msdx" creationdate="20150505T134457Z">
        <seg>使用的 JDepend 库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The JDepend plugin adds the following dependencies to tasks defined by the Java plugin.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T134323Z" creationid="msdx" creationdate="20150505T134323Z">
        <seg>JDepend 插件向 Java 插件所加入的任务添加了以下的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The JDepend plugin adds the following dependency configurations:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T134441Z" creationid="msdx" creationdate="20150505T134441Z">
        <seg>JDepend 插件添加了下列的依赖配置：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The JDepend plugin adds the following tasks to the project:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T134218Z" creationid="msdx" creationdate="20150505T134218Z">
        <seg>JDepend 插件向project 中添加了以下任务：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The JDepend plugin performs quality checks on your project's source files using &lt;a0&gt;JDepend&lt;/a0&gt; and generates reports from these checks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T134152Z" creationid="msdx" creationdate="20150505T134107Z">
        <seg>JDepend 插件使用&lt;a0&gt;JDepend&lt;/a0&gt;对项目的源文件执行质量检查，并从检查结果中生成报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The JaCoCo Ant library used for running the &lt;c0&gt;JacocoReport&lt;/c0&gt; and &lt;c1&gt;JacocoMerge&lt;/c1&gt; tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T140031Z" creationid="msdx" creationdate="20150506T140031Z">
        <seg>用于运行&lt;c0&gt;JacocoReport&lt;/c0&gt;和&lt;c1&gt;JacocoMerge&lt;/c1&gt;任务的 JaCoCo Ant 库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The JaCoCo agent library used for instrumenting the code under test.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T140121Z" creationid="msdx" creationdate="20150506T140121Z">
        <seg>用于测试位于test下的代码的 JaCoCo 客户端库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The JaCoCo plugin adds a &lt;a0&gt;&lt;c1&gt;JacocoTaskExtension&lt;/c1&gt;&lt;/a0&gt; extension to all tasks of type &lt;a2&gt;&lt;c3&gt;Test&lt;/c3&gt;&lt;/a2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T132121Z" creationid="msdx" creationdate="20150506T132020Z">
        <seg>JaCoCo 插件添加了一个&lt;a0&gt;&lt;c1&gt;JacocoTaskExtension&lt;/c1&gt;&lt;/a0&gt;扩展到&lt;a2&gt;&lt;c3&gt;Test&lt;/c3&gt;&lt;/a2&gt;类型的所有任务中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The JaCoCo plugin adds a project extension named &lt;c0&gt;jacoco&lt;/c0&gt; of type &lt;a1&gt;&lt;c2&gt;JacocoPluginExtension&lt;/c2&gt;&lt;/a1&gt;, which allows configuring defaults for JaCoCo usage in your build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T131544Z" creationid="msdx" creationdate="20150506T130438Z">
        <seg>JaCoCo 插件添加一个名为&lt;c0&gt;jacoco&lt;/c0&gt;类型为&lt;a1&gt;&lt;c2&gt;JacocoPluginExtension&lt;/c2&gt;&lt;/a1&gt;的project 扩展，这个扩展允许在你的构建中配置 JaCoCo 所使用的默认值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The JaCoCo plugin adds the following dependency configurations:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T135948Z" creationid="msdx" creationdate="20150506T135948Z">
        <seg>JaCoCo 插件添加了下列的依赖配置：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The JaCoCo plugin is currently &lt;a0&gt;incubating&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T125910Z" creationid="msdx" creationdate="20150505T135939Z">
        <seg>JaCoCo 插件目前还是&lt;a0&gt;孵化中&lt;/a0&gt;状态。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The JaCoCo plugin provides code coverage metrics for Java code via integration with &lt;a0&gt;JaCoCo&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T125959Z" creationid="msdx" creationdate="20150506T125959Z">
        <seg>JaCoCo 插件通过集成&lt;a0&gt;JaCoCo&lt;/a0&gt;为 Java 代码提供了代码覆盖率指标。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java Plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131608Z" creationid="msdx" creationdate="20150509T131608Z">
        <seg>Java 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java library distribution plugin adds support for building a distribution ZIP for a Java library.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150705T084424Z" creationid="haohang" creationdate="20150705T084424Z">
        <seg>Java 库分布插件为一个 Java library 添加了构建一个分发 ZIP 的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java library distribution plugin adds the following tasks to the project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T070321Z" creationid="haohang" creationdate="20150707T070321Z">
        <seg>Java 库分发插件向 project 对象添加以下任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java library distribution plugin is currently &lt;a0&gt;incubating&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T140159Z" creationid="msdx" creationdate="20150506T140159Z">
        <seg>Java 库发布插件目前还处于&lt;a0&gt;孵化中&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163430Z" creationid="msdx" creationdate="20141109T163430Z">
        <seg>Java 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java plugin adds Java compilation, testing and bundling capabilities to a project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T080556Z" creationid="Administrator" creationdate="20150425T073525Z">
        <seg>Java 插件向project 添加了 Java 编译、 测试和捆绑的能力。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java plugin adds a &lt;a0&gt;&lt;c1&gt;JavaCompile&lt;/c1&gt;&lt;/a0&gt; instance for each source set in the project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T134934Z" creationid="Administrator" creationdate="20150427T134934Z">
        <seg>Java 插件为该project里的每个源集添加一个&lt;a0&gt;&lt;c1&gt;JavaCompile&lt;/c1&gt;&lt;/a0&gt;实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java plugin adds a &lt;c0&gt;runtime&lt;/c0&gt; configuration for this purpose, with the implicit assumption that the &lt;c1&gt;runtime&lt;/c1&gt; dependencies are the dependencies of the artifact you want to publish.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151227T152522Z" creationid="95" creationdate="20151227T152522Z">
        <seg>Java 插件已经为此添加了一个&lt;c0&gt;runtime&lt;/c0&gt;配置，它隐式的假设&lt;c1&gt;runtime&lt;/c1&gt;依赖项是你想要发布的构件的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java plugin adds a number of convention properties to the project, shown below.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T085550Z" creationid="Administrator" creationdate="20150426T085550Z">
        <seg>Java插件向项目添加了许多常规属性，如下图所示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java plugin adds a number of default values for the archive tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T145838Z" creationid="msdx" creationdate="20141113T145838Z">
        <seg>Java 插件对归档任务添加了一些默认值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java plugin adds a number of dependency configurations to your project, as shown below.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T083929Z" creationid="Administrator" creationdate="20150426T083929Z">
        <seg>Java插件向项目添加了许多依赖配置，如下图所示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java plugin adds a number of tasks to your project, as shown below.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T174017Z" creationid="Administrator" creationdate="20150425T174017Z">
        <seg>Java 插件向你的项目添加了大量的任务，如下所示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java plugin adds per default a jar to your project libraries which contains all the classes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T085009Z" creationid="haohang" creationdate="20160726T084545Z">
        <seg>Java 插件向你的项目的每个库添加了一个默认的jar，它包含了所有类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java plugin adds the concept of &lt;s0&gt;&lt;e1&gt;source sets&lt;/e1&gt;&lt;/s0&gt; (see &lt;a2&gt;&lt;c3&gt;SourceSet&lt;/c3&gt;&lt;/a2&gt;) to describe the aspects of a set of source, one aspect being where the class files should be written to when it is compiled.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141124T073624Z" creationid="msdx" creationdate="20141123T154319Z">
        <seg>Java 插件添加了&lt;s0&gt;&lt;e1&gt; source sets&lt;/e1&gt;&lt;/s0&gt; 的概念 （见&lt;a2&gt;&lt;c3&gt;SourceSet&lt;/c3&gt;&lt;/a2&gt;） 来描述的源文件集的各个方面，其中一个方面是在编译的时候这些类文件应该被写到哪个地方。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java plugin also adds a number of tasks which assemble the classes for the source set, as shown in &lt;a0&gt;Table 23.2, “Java plugin - source set tasks”&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T133125Z" creationid="Administrator" creationdate="20150427T133125Z">
        <seg>Java 插件还添加了大量的任务，用于组装源集的类，如&lt;a0&gt;表 23.2，“Java 插件 - 源设置任务”&lt;/a0&gt;所示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java plugin also adds a number of tasks which form a lifecycle for the project:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T010018Z" creationid="Administrator" creationdate="20150426T010018Z">
        <seg>Java 插件还增加了大量的任务构成该项目的生命周期：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java plugin assumes the project layout shown below.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T083009Z" creationid="Administrator" creationdate="20150426T083009Z">
        <seg>Java 插件会假定如下所示的项目布局。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java plugin automatically assigns the default jar to this configuration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151226T085156Z" creationid="95" creationdate="20151226T085156Z">
        <seg>Java 插件会自动地把默认的 jar 文件指定到这个配置中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java plugin defaults this property to point to &lt;c2&gt;build/classes/main&lt;/c2&gt; in the project directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141123T153850Z" creationid="msdx" creationdate="20141123T153850Z">
        <seg>Java 插件默认此属性指向项目目录中的&lt;c2&gt;build/classes/main&lt;/c2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java plugin defines two standard source sets, called &lt;c0&gt;main&lt;/c0&gt; and &lt;c1&gt;test&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T173805Z" creationid="Administrator" creationdate="20150425T173805Z">
        <seg>Java 插件定义了两个标准的源集，分别是&lt;c0&gt;main&lt;/c0&gt;和&lt;c1&gt;test&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java plugin has added a &lt;c0&gt;compileJava&lt;/c0&gt; task and a &lt;c1&gt;processResources&lt;/c1&gt; task to the project and configured the &lt;c2&gt;destinationDir&lt;/c2&gt; property of both of these tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141123T151300Z" creationid="msdx" creationdate="20141123T151143Z">
        <seg>Java 插件已经向项目添加了 &lt;c0&gt;compileJava&lt;/c0&gt;任务和&lt;c1&gt;processResources&lt;/c1&gt;任务，并且配置了这两个任务的&lt;c2&gt;destinationDir&lt;/c2&gt;属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java plugin introduces the concept of a &lt;e0&gt;source set&lt;/e0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T074013Z" creationid="Administrator" creationdate="20150425T074013Z">
        <seg>Java 插件引入了一个&lt;e0&gt;源集&lt;/e0&gt;的概念。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java plugin maps the &lt;c4&gt;destinationDir&lt;/c4&gt; property of the &lt;c5&gt;compileJava&lt;/c5&gt; task to this aspect of the source set.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141124T073834Z" creationid="msdx" creationdate="20141124T073712Z">
        <seg>Java 插件将&lt;c5&gt;compileJava&lt;/c5&gt;任务的&lt;c4&gt;destinationDir&lt;/c4&gt;属性映射到源文件集的这一个方面。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java plugin uses the &lt;a0&gt;&lt;c1&gt;Copy&lt;/c1&gt;&lt;/a0&gt; task for resource handling.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T134546Z" creationid="Administrator" creationdate="20150427T134546Z">
        <seg>Java 插件使用&lt;a0&gt;&lt;c1&gt;Copy&lt;/c1&gt;&lt;/a0&gt;任务进行资源的处理。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java plugin will compile whatever it finds, and handles anything which is missing.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T083221Z" creationid="Administrator" creationdate="20150426T083221Z">
        <seg>Java插件将会进行编译，不管它发现什么，并处理缺少的任何东西。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java plugin, for example, adds some configurations to represent the various classpaths it needs.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T075320Z" creationid="haohang" creationdate="20150722T075320Z">
        <seg>例如，Java 插件会添加一些配置来表示它所需要的不同的类路径。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java source directories may only contain Java source code.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T074839Z" creationid="msdx" creationdate="20150429T074805Z">
        <seg>Java 源目录只能包含 Java 源代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java source files of this source set.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T051700Z" creationid="Administrator" creationdate="20150427T051700Z">
        <seg>该源集的Java源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Jetty Plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150514T151821Z" creationid="msdx" creationdate="20150514T151821Z">
        <seg>Jetty 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Jetty plugin defines the following convention properties:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T151004Z" creationid="msdx" creationdate="20150504T151004Z">
        <seg>Jetty 插件定义了下列公约属性：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Jetty plugin defines the following tasks:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T150201Z" creationid="msdx" creationdate="20150504T150201Z">
        <seg>Jetty 插件定义了以下任务：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Jetty plugin does not define any dependency configurations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T150946Z" creationid="msdx" creationdate="20150504T150946Z">
        <seg>Jetty 插件并不定义任何依赖配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Jetty plugin extends the War plugin to add tasks which allow you to deploy your web application to a Jetty web container embedded in the build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T150123Z" creationid="msdx" creationdate="20150504T143907Z">
        <seg>Jetty 插件继承自 War 插件，并添加一些任务，这些任务可以让你在构建时部署你的 web 应用程序到一个 Jetty 的 web 嵌入式容器中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Jetty plugin extends the War plugin to allow you to deploy your web application to an embedded Jetty web container.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T084854Z" creationid="msdx" creationdate="20141030T084822Z">
        <seg>Jetty插件扩展了War插件以允许你部署你的web应用程序到嵌入式Jetty web窗口中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Jetty plugin uses the same layout as the War plugin.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T150918Z" creationid="msdx" creationdate="20150504T150918Z">
        <seg>Jetty 插件使用 和 War 插件相同的布局。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Maven Central repository can be down or has a very long response time.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151130T033010Z" creationid="haohang" creationdate="20151130T033010Z">
        <seg>Maven 中央存储库可能会下线，或者响应时间很长。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Maven conversion implementation was inspired by the &lt;a0&gt;maven2gradle tool&lt;/a0&gt; that was originally developed by Gradle community members.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T092633Z" creationid="haohang" creationdate="20150707T092633Z">
        <seg>Maven 转换实现最初由 Gradle 社区成员开发的&lt;a0&gt;maven2gradle tool&lt;/a0&gt;启发。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Maven dependency management has the notion of classifiers.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150731T100741Z" creationid="haohang" creationdate="20150731T100741Z">
        <seg>Maven 依赖管理有 classifier 的概念。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Maven plugin adds an &lt;c0&gt;install&lt;/c0&gt; task to your project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T142735Z" creationid="95" creationdate="20160105T142735Z">
        <seg>Maven 插件将&lt;c0&gt;install&lt;/c0&gt;任务添加到你的项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Maven plugin adds support for deploying artifacts to Maven repositories.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151228T151842Z" creationid="95" creationdate="20151228T151842Z">
        <seg>Maven 插件添加了将项目部署到 Maven 仓库的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Maven plugin configures the default mapping between the Gradle configurations added by the Java and War plugin and the Maven scopes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T145031Z" creationid="95" creationdate="20160106T144848Z">
        <seg>Maven 插件配置了由Java插件和War插件添加的Gradle configurations 与Maven scopes之间的默认映射。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Maven plugin defines the following convention properties:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151228T152506Z" creationid="95" creationdate="20151228T152506Z">
        <seg>Maven 插件定义了下列约定属性：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Maven plugin defines the following tasks:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151228T151912Z" creationid="95" creationdate="20151228T151912Z">
        <seg>Maven 插件定义了以下任务：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Maven plugin does not define any dependency configurations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151228T152446Z" creationid="95" creationdate="20151228T152446Z">
        <seg>Maven 插件不定义任何依赖配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The OSGi plugin adds the following convention object: &lt;a0&gt;&lt;c1&gt;OsgiPluginConvention&lt;/c1&gt;&lt;/a0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150526T004537Z" creationid="haohang" creationdate="20150526T004537Z">
        <seg>OSGi 插件添加了下列约定对象： &lt;a0&gt; &lt;c1&gt;OsgiPluginConvention&lt;/c1&gt; &lt;/a0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The OSGi plugin adds the following methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150526T004614Z" creationid="haohang" creationdate="20150526T004614Z">
        <seg>OSGi 插件添加了以下方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The OSGi plugin does not add any convention properties to the project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150526T004558Z" creationid="haohang" creationdate="20150526T004558Z">
        <seg>OSGi 插件没有向 project 添加任何的公约属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The OSGi plugin makes heavy use of Peter Kriens &lt;a0&gt;BND tool&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150526T004232Z" creationid="haohang" creationdate="20150526T004232Z">
        <seg>OSGi 插件使 Peter Kriens &lt;a0&gt;BND tool&lt;/a0&gt; 大量使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The OSGi plugin provides a factory method to create an &lt;a0&gt;&lt;c1&gt;OsgiManifest&lt;/c1&gt;&lt;/a0&gt; object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150526T003850Z" creationid="haohang" creationdate="20150526T003850Z">
        <seg>OSGi 插件提供了工厂方法来创建一个&lt;a0&gt;&lt;c1&gt;OsgiManifest&lt;/c1&gt;&lt;/a0&gt;对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The PMD libraries to use</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T135718Z" creationid="msdx" creationdate="20150505T135718Z">
        <seg>使用的 PMD 库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The PMD plugin adds the following dependencies to tasks defined by the Java plugin.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T135615Z" creationid="msdx" creationdate="20150505T135615Z">
        <seg>PMD 插件向 Java 插件所加入的任务添加了以下的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The PMD plugin adds the following dependency configurations:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T135659Z" creationid="msdx" creationdate="20150505T135659Z">
        <seg>PMD 插件添加了下列的依赖配置：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The PMD plugin adds the following tasks to the project:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T135533Z" creationid="msdx" creationdate="20150505T135533Z">
        <seg>PMD 插件向project 中添加了以下任务：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The PMD plugin performs quality checks on your project's Java source files using &lt;a0&gt;PMD&lt;/a0&gt; and generates reports from these checks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T135447Z" creationid="msdx" creationdate="20150505T135447Z">
        <seg>PMD 插件使用&lt;a0&gt;PMD&lt;/a0&gt;对项目的 Java 源文件执行质量检查，并从检查结果中生成报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The POM files of many projects have wrong information (as one example, the POM of &lt;c0&gt;commons-httpclient-3.0&lt;/c0&gt; declares JUnit as a runtime dependency).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151130T033117Z" creationid="haohang" creationdate="20151130T033117Z">
        <seg>许多项目的 POM 文件会有错误的信息（比如，&lt;c0&gt;commons-httpclient-3.0&lt;/c0&gt;的POM文件声明了 JUnit 是运行时依赖）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Project API</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T164847Z" creationid="msdx" creationdate="20141109T164847Z">
        <seg>Project API</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Project API also provides a property for accessing the subprojects only.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160527T162221Z" creationid="95" creationdate="20160527T162221Z">
        <seg>Project API 还提供了一个属性只用于访问子项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Project API provides a method called &lt;c0&gt;project()&lt;/c0&gt;, which takes a path as an argument and returns the Project object for this path.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160526T154755Z" creationid="95" creationdate="20160526T154755Z">
        <seg>Project API 提供了一个叫做&lt;c0&gt;project()&lt;/c0&gt;的方法，它将路径作为参数，返回此路径的Project 对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Project API provides a property &lt;c0&gt;allprojects&lt;/c0&gt; which returns a list with the current project and all its subprojects underneath it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160527T161425Z" creationid="95" creationdate="20160527T161425Z">
        <seg>Project API 提供了一个&lt;c0&gt;allprojects&lt;/c0&gt; 属性，它返回一个当前项目的list，该项目的所有子项目都在这个list中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Project report plugin adds some tasks to your project which generate reports containing useful information about your build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150626T095308Z" creationid="haohang" creationdate="20150626T095308Z">
        <seg>项目报告插件将一些任务添加到项目中，用于生成包含有关构建的有用信息的报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Resin servlet container allows us, to let such a distribution point to a base installation of the servlet container.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160727T055012Z" creationid="haohang" creationdate="20160727T054715Z">
        <seg>Resin servlet 容器能允许我们让这样的一个分发指向一个基本安装的servlet容器中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Scala Plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131946Z" creationid="msdx" creationdate="20150509T131946Z">
        <seg>Scala 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Scala plugin adds a configuration named &lt;c0&gt;zinc&lt;/c0&gt; to resolve the Zinc library and its dependencies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T154715Z" creationid="msdx" creationdate="20150501T154715Z">
        <seg>Scala 插件添加了一个名为&lt;c0&gt;zinc&lt;/c0&gt;的配置，以解析 Zinc 库及其依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Scala plugin adds the following convention properties to each source set in the project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150430T154737Z" creationid="msdx" creationdate="20150430T154737Z">
        <seg>Scala 的插件向 project 的每一个source set 添加了下列的公约属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Scala plugin adds the following dependencies to tasks added by the Java plugin.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T145533Z" creationid="msdx" creationdate="20150429T145533Z">
        <seg>Scala 插件向 Java 插件所加入的 tasks 添加了以下的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Scala plugin adds the following tasks to the project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T145404Z" creationid="msdx" creationdate="20150429T145404Z">
        <seg>Scala 的插件向project 中添加了以下任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Scala plugin also modifies some source set properties:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150430T154921Z" creationid="msdx" creationdate="20150430T154921Z">
        <seg>Scala 的插件还修改了一些 source set 的属性：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Scala plugin assumes the project layout shown below.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T152500Z" creationid="msdx" creationdate="20150429T152500Z">
        <seg>Scala 插件会假定如下所示的项目布局。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Scala plugin does not add any convention properties to the project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150430T154713Z" creationid="msdx" creationdate="20150430T154701Z">
        <seg>Scala 插件没有向 project 添加任何的公约属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Scala plugin extends the Java plugin to add support for Scala projects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T144817Z" creationid="msdx" creationdate="20150429T144422Z">
        <seg>Scala 的插件继承自 Java 插件并添加了对 Scala 项目的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Scala plugin includes support for &lt;a0&gt;fsc&lt;/a0&gt;, the Fast Scala Compiler.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150430T155132Z" creationid="msdx" creationdate="20150430T155117Z">
        <seg>Scala 插件包含了对&lt;a0&gt;fsc&lt;/a0&gt;，即 Fast Scala Compiler 的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Scala plugin now supports incremental compilation by integrating with &lt;a0&gt;Zinc&lt;/a0&gt;, a standalone version of &lt;a1&gt;sbt&lt;/a1&gt;'s incremental Scala compiler.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T154142Z" creationid="msdx" creationdate="20150501T154142Z">
        <seg>Scala 插件现在通过集成 &lt;a0&gt;Zinc&lt;/a0&gt; 来支持增量编译， 它是&lt;a1&gt;sbt&lt;/a1&gt;增量 Scala 编译器的一个单机版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Scala source files of this source set.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150430T154808Z" creationid="msdx" creationdate="20150430T154808Z">
        <seg>该source set 中的 Scala 源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Script API</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T055344Z" creationid="msdx" creationdate="20141109T164853Z">
        <seg>Script API</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Setup tab allows configuration of some general settings.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T065346Z" creationid="msdx" creationdate="20141105T160648Z">
        <seg>设置（Setup）选项卡允许你配置一些常规的设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Signing plugin provides a DSL that allows you to specify the tasks and/or configurations that should be signed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160108T153441Z" creationid="95" creationdate="20160108T153441Z">
        <seg>Signing 插件提供了一个DSL，它允许你指定应签名的任务及配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Sonar Runner is capable of analyzing whole project hierarchies at once.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150514T152120Z" creationid="msdx" creationdate="20150514T152120Z">
        <seg>Sonar Runner 插件能够一次分析整个项目的层次结构。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Sonar Runner plugin adds a &lt;a0&gt;&lt;c1&gt;SonarRunner&lt;/c1&gt;&lt;/a0&gt; extension to the project, which allows to configure the Sonar Runner via key/value pairs known as &lt;e2&gt;Sonar properties&lt;/e2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T062827Z" creationid="msdx" creationdate="20150513T062621Z">
        <seg>Sonar Runner 插件向 project 添加了一个&lt;a0&gt; &lt;c1&gt;SonarRunner&lt;/c1&gt;&lt;/a0&gt;扩展，它允许通过被称为 &lt;e2&gt;Sonar 属性&lt;/e2&gt; 的键/值对配置 Sonar Runner。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Sonar Runner plugin adds the following tasks to the project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150525T234952Z" creationid="haohang" creationdate="20150525T234952Z">
        <seg>Sonar Runner插件向 project 中添加了以下任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Sonar Runner plugin is the successor to the &lt;a0&gt;Sonar Plugin&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T060255Z" creationid="msdx" creationdate="20150513T060255Z">
        <seg>Sonar Runner 插件是&lt;a0&gt;Sonar 插件&lt;/a0&gt;的继任者。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Sonar Runner plugin leverages information contained in Gradle's object model to provide smart defaults for many of the standard Sonar properties.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T064519Z" creationid="msdx" creationdate="20150513T064519Z">
        <seg>Sonar Runner 插件利用 Gradle 的对象模型所包含的信息，提供了许多标准的 Sonar 属性的智能默认值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Sonar Runner plugin provides integration with &lt;a0&gt;Sonar&lt;/a0&gt;, a web-based platform for monitoring code quality.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T054701Z" creationid="msdx" creationdate="20150513T054701Z">
        <seg>Sonar Runner 插件提供了对 &lt;a0&gt;Sonar&lt;/a0&gt;，一个基于 web 的代码质量监测平台的集成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Sonar plugin adds the following tasks to the project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T054202Z" creationid="msdx" creationdate="20150513T054202Z">
        <seg>Sonar 插件向project 中添加了以下任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Sonar plugin is capable of analyzing a whole project hierarchy at once.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T084941Z" creationid="msdx" creationdate="20150510T144133Z">
        <seg>Sonar 插件能够一次分析整个项目的层次结构。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Sonar plugin offers hooks to post-process Sonar properties before they get passed to the code analyzer.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T100604Z" creationid="msdx" creationdate="20150512T100604Z">
        <seg>Sonar 插件提供了hooks，用于 Sonar 属性传给代码分析器前的后置处理。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Sonar plugin provides integration with &lt;a0&gt;Sonar&lt;/a0&gt;, a web-based platform for monitoring code quality.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150510T142730Z" creationid="msdx" creationdate="20150508T131726Z">
        <seg>Sonar 插件提供了对 &lt;a0&gt;Sonar&lt;/a0&gt;，一个基于 web 的代码质量监测平台的集成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Sonar runner plugin is currently &lt;a0&gt;incubating&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T054640Z" creationid="msdx" creationdate="20150513T054337Z">
        <seg>Sonar runner 插件是目前仍是&lt;a0&gt;孵化&lt;/a0&gt;状态。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The String parameter is used as a description for the rule.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T065059Z" creationid="msdx" creationdate="20141111T065059Z">
        <seg>这个字符串参数被用作这条规则的描述。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The TCP port which Jetty should listen for HTTP requests on.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T151206Z" creationid="msdx" creationdate="20150504T151128Z">
        <seg>Jetty 监听 HTTP 请求的 TCP 端口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The TCP port which Jetty should listen for admin requests on.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T151228Z" creationid="msdx" creationdate="20150504T151228Z">
        <seg>Jetty 监听 admin 请求的 TCP 端口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Task Tree context menu provides the following options:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T153818Z" creationid="msdx" creationdate="20141105T153652Z">
        <seg>任务树的上下文菜单会提供以下选项：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Task Tree shows a hierarchical display of all projects and their tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T151029Z" creationid="msdx" creationdate="20141105T151029Z">
        <seg>任务树显示了所有项目和它们的任务的层次结构。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The TestNG framework has a quite similar concept.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T082923Z" creationid="msdx" creationdate="20150428T082907Z">
        <seg>TestNG 框架有一个非常相似的概念。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Tooling API (see &lt;a0&gt;Chapter 62, &lt;i1&gt;Embedding Gradle&lt;/i1&gt;&lt;/a0&gt;) uses the daemon all the time, e.g. you cannot officially use the Tooling API without the daemon.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141117T142652Z" creationid="msdx" creationdate="20141117T142441Z">
        <seg>Tooling API (参见 &lt;a0&gt;第六十二章， &lt;i1&gt;嵌入 Gradle &lt;/i1&gt;&lt;/a0&gt;) 在整个过程当中都使用守护进程。如，你无法在没有守护进程时正式地使用 Tooling API。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The UI displays 4 tabs along the top and an output window along the bottom.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T150940Z" creationid="msdx" creationdate="20141105T150825Z">
        <seg>在Gradle的用户界面（UI）中，上面是4个选项卡，下面则是输出窗口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The War Plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T132156Z" creationid="msdx" creationdate="20150509T132156Z">
        <seg>War 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The War plugin adds the following dependencies to tasks added by the Java plugin.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T090014Z" creationid="msdx" creationdate="20150503T090014Z">
        <seg>War 插件向 Java 插件所加入的 tasks 添加了以下的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The War plugin adds the following tasks to the project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T085918Z" creationid="msdx" creationdate="20150503T085918Z">
        <seg>War 插件向project 中添加了以下任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The War plugin adds two dependency configurations: &lt;c0&gt;providedCompile&lt;/c0&gt; and &lt;c1&gt;providedRuntime&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T090223Z" creationid="msdx" creationdate="20150503T090151Z">
        <seg>War 插件添加了两个依赖配置： &lt;c0&gt;providedCompile&lt;/c0&gt;和&lt;c1&gt;providedRuntime&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The War plugin extends the Java plugin to add support for assembling web application WAR files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T085739Z" creationid="msdx" creationdate="20150503T082705Z">
        <seg>War 的插件继承自 Java 插件并添加了对组装 web 应用程序的 WAR 文件的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The War plugin extends the Java plugin to build a WAR file for your project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T084722Z" creationid="msdx" creationdate="20141030T084722Z">
        <seg>War插件扩展了Java插件来为你的项目构建WAR文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Zinc based compiler (&lt;c4&gt;scalaCompileOptions.useAnt = false&lt;/c4&gt;) will leverage the Gradle compiler daemon, and does so by default.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150430T155946Z" creationid="msdx" creationdate="20150430T155946Z">
        <seg>基于 Zinc 的编译器 (&lt;c4&gt;scalaCompileOptions.useAnt = false&lt;/c4&gt;) 将利用 Gradle 编译器守护进程，且默认情况下也是这样。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The ability to execute the Sonar Runner via a regular Gradle task makes it available anywhere Gradle is available (developer build, CI server, etc.), without the need to download, setup, and maintain a Sonar Runner installation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T055822Z" creationid="msdx" creationdate="20150513T055822Z">
        <seg>可以通过一个正规的 Gradle 任务来执行 Sonar Runner，这使得在任何 Gradle 可用的地方，它都可以用（开发人员构建，CI 服务器等），而无需下载，安装，和维护 Sonar Runner 的安装。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The absolute path of the generated archive.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T155940Z" creationid="msdx" creationdate="20141113T155940Z">
        <seg>生成的归档文件的绝对路径。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The absolute path of the project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T044253Z" creationid="msdx" creationdate="20141108T044253Z">
        <seg>项目的绝对路径。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The absolute path to the secret key ring file containing your private key.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160108T151635Z" creationid="95" creationdate="20160108T151635Z">
        <seg>指向包含了你的私钥的密钥环文件的绝对路径。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The appendix portion of the archive file name.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T160346Z" creationid="msdx" creationdate="20141113T160311Z">
        <seg>归档文件的名称中的附录部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The application deployment location within the Jetty container.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T151121Z" creationid="msdx" creationdate="20150504T151121Z">
        <seg>在 Jetty 容器里面的应用程序部署位置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The application of plugins is &lt;s0&gt;&lt;e1&gt;idempotent&lt;/e1&gt;&lt;/s0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141122T162818Z" creationid="msdx" creationdate="20141122T162706Z">
        <seg>插件的应用是&lt;s0&gt;&lt;e1&gt;幂等的&lt;/e1&gt;&lt;/s0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The application plugin adds some properties to the project, which you can use to configure its behaviour.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150702T105251Z" creationid="haohang" creationdate="20150702T105251Z">
        <seg>该应用程序插件将一些属性添加到 project 中，以用于配置其行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The appropriate groovy libraries will be added to the WAR file for you.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T090909Z" creationid="msdx" creationdate="20141030T090852Z">
        <seg>它将为你把适当的groovy库添加到WAR文件中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The archive tasks all work exactly the same way as the &lt;c0&gt;Copy&lt;/c0&gt; task, and implement the same &lt;c1&gt;CopySpec&lt;/c1&gt; interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T150542Z" creationid="msdx" creationdate="20141113T150008Z">
        <seg>归档任务与&lt;c0&gt;Copy&lt;/c0&gt;任务的工作方式一样，并且实现了相同的&lt;c1&gt;CopySpec&lt;/c1&gt;接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The attributes of the Ant task are passed as Map parameters to the method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141115T153223Z" creationid="msdx" creationdate="20141115T153223Z">
        <seg>Ant 任务的属性会作为 Map 参数传给该方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The auto search for a settings file does only work for multi-project builds with a physical hierarchical or flat layout.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T075457Z" creationid="haohang" creationdate="20160519T075401Z">
        <seg>自动搜索设置文件只适合具有物理上的层次结构或平面的布局的多项目构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The available protocols and the corresponding libraries are listed in &lt;a1&gt;Table 52.3, “Protocol jars for Maven deployment”&lt;/a1&gt; (those libraries have again transitive dependencies which have transitive dependencies).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T134817Z" creationid="95" creationdate="20160105T134524Z">
        <seg>&lt;a1&gt;表 52.3. “Maven 部署的协议jar”&lt;/a1&gt;列出了可用的协议以及相应的库（这些库又有具有传递依赖，而这些依赖也有其自己的传递依赖）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The base file name of the generated archive</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T155926Z" creationid="msdx" creationdate="20141113T155926Z">
        <seg>生成的归档文件的基本文件名</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The base name portion of the archive file name.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T160356Z" creationid="msdx" creationdate="20141113T160252Z">
        <seg>归档文件的名称中的基本名称部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The basename to use for archives, such as JAR or ZIP files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T050020Z" creationid="Administrator" creationdate="20150427T050020Z">
        <seg>像JAR或ZIP文件这样的构件的basename</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The basic idea is that the gradle command forks a daemon process, which performs the actual build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141117T151625Z" creationid="msdx" creationdate="20141117T151625Z">
        <seg>基本的思想是， gradle 命令会fork一个守护进程，用于执行实际的构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The basic rule behind Gradle's behavior is simple.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160530T152222Z" creationid="95" creationdate="20160530T152100Z">
        <seg>Gradle 的行为背后的基本规则是很简单的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The behaviour and properties of an enhanced task is defined by the task's class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T143458Z" creationid="95" creationdate="20160814T143458Z">
        <seg>一个增强型的任务的行为和属性是通过这个任务的类定义的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The build announcements plugin is currently &lt;a0&gt;incubating&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T091419Z" creationid="haohang" creationdate="20150628T091419Z">
        <seg>构建公告插件目前仍然是&lt;a0&gt;孵化&lt;/a0&gt;状态。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The build announcements plugin uses the &lt;a0&gt;announce&lt;/a0&gt; plugin to send local announcements on important events in the build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T091555Z" creationid="haohang" creationdate="20150628T091555Z">
        <seg>构建公告插件使用 &lt;a0&gt;announce&lt;/a0&gt; 插件发送构建过程中一些重要事件上的本地公告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The build continues with executing the next task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T054745Z" creationid="msdx" creationdate="20141111T054745Z">
        <seg>构建会继续执行下一个任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The build daemon could maintain a process with Groovy and/or Scala already loaded.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141117T151116Z" creationid="msdx" creationdate="20141117T151116Z">
        <seg>构建守护进程可以维持一个已下载的 Groovy 和 （或） Scala 进程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The build dashboard plugin is currently &lt;a0&gt;incubating&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150713T095022Z" creationid="haohang" creationdate="20150710T013224Z">
        <seg>Build Dashboard 插件是目前是&lt;a0&gt;孵化中&lt;/a0&gt;状态。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The build is executed from the &lt;c0&gt;tropicalFish&lt;/c0&gt; project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160715T091820Z" creationid="haohang" creationdate="20160715T091811Z">
        <seg>这个构建是从&lt;c0&gt;tropicalFish&lt;/c0&gt;项目执行的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The build is executed from the &lt;c0&gt;water&lt;/c0&gt; project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160715T090813Z" creationid="haohang" creationdate="20160715T080101Z">
        <seg>这个构建从&lt;c0&gt;water&lt;/c0&gt;项目执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The build script is executed against the project object that was created during the initialization phase.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160520T123459Z" creationid="95" creationdate="20160520T123459Z">
        <seg>构建脚本会针对在初始化阶段期间创建的 project 对象执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The build scripts of &lt;s0&gt;&lt;e1&gt;all&lt;/e1&gt;&lt;/s0&gt; projects which are part of the build are executed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160518T150726Z" creationid="95" creationdate="20160518T150726Z">
        <seg>属于构建的&lt;s0&gt;&lt;e1&gt;所有&lt;/e1&gt;&lt;/s0&gt; projects 的构建脚本都会被执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The capability to configure a project build from any build script we call &lt;e1&gt;cross project configuration&lt;/e1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160526T154952Z" creationid="95" creationdate="20160526T154952Z">
        <seg>而这种从其他构建脚本配置一个项目构建的能力，我们叫做 &lt;e1&gt;交叉项目配置&lt;/e1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The classes in the classes dir are analyzed regarding there package dependencies and the packages they expose.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150526T064017Z" creationid="haohang" creationdate="20150526T004845Z">
        <seg>在classes 目录下的类文件会被分析出关于它们的包的依赖，以及它们所公布的包名。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The classifier portion of the archive file name,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T160417Z" creationid="msdx" creationdate="20141113T160417Z">
        <seg>归档文件的名称中的分类部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The classpath to use when compiling the source files of this source set.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T051645Z" creationid="Administrator" creationdate="20150427T051601Z">
        <seg>该类路径在编译该源集的源文件时使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The classpath to use when executing the classes of this source set.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T051635Z" creationid="Administrator" creationdate="20150427T051635Z">
        <seg>该类路径在执行该源集的类时使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The closure is passed the task as a parameter, and should return true if the task should execute and false if the task should be skipped.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T020824Z" creationid="msdx" creationdate="20141111T020824Z">
        <seg>闭包会作为一个参数传给任务，并且任务应该执行时返回true，或任务应该跳过时返回false。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The closure should return a single &lt;c0&gt;Task&lt;/c0&gt; or collection of &lt;c1&gt;Task&lt;/c1&gt; objects, which are then treated as dependencies of the task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T123500Z" creationid="msdx" creationdate="20141110T123437Z">
        <seg>这个闭包应该返回一个 &lt;c0&gt;Task&lt;/c0&gt; 对象或是&lt;c1&gt;Task&lt;/c1&gt; 对象的集合，返回值会被作为这个任务的依赖项。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The closure you pass to the configurations object is applied against its API.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T075735Z" creationid="haohang" creationdate="20150722T075735Z">
        <seg>你传给这个 configurations 对象的闭包会通过它对应的 API 被应用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The command &lt;c0&gt;evaluationDependsOn&lt;/c0&gt; triggers the evaluation of &lt;c1&gt;producer&lt;/c1&gt; &lt;s2&gt;&lt;e3&gt;before&lt;/e3&gt;&lt;/s2&gt; &lt;c4&gt;consumer&lt;/c4&gt; is evaluated.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T085643Z" creationid="haohang" creationdate="20160718T083052Z">
        <seg>命令&lt;c0&gt;evaluationDependsOn&lt;/c0&gt;触发了&lt;c1&gt;producer&lt;/c1&gt;&lt;s2&gt;&lt;e3&gt;在&lt;/e3&gt;&lt;/s2&gt;&lt;c4&gt;consumer&lt;/c4&gt;之前评估。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The compile task delegates to Ant's javac task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T135401Z" creationid="Administrator" creationdate="20150427T135401Z">
        <seg>compile任务委派了Ant 的 javac 任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The compile tasks use joint compilation for these directories, which means they can contain a mixture of java and groovy source files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T064548Z" creationid="msdx" creationdate="20141030T064131Z">
        <seg>这些编译任务对这些目录使用了联合编译，这意味着它们可以同时包含java和groovy源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The configuration and execution for multi-project builds is discussed in &lt;a2&gt;Chapter 56, &lt;i3&gt;Multi-project Builds&lt;/i3&gt;&lt;/a2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160520T124041Z" creationid="95" creationdate="20160520T124041Z">
        <seg>关于多项目构建的配置与执行，在&lt;a0&gt;第 56 章，&lt;i1&gt;多项目构建&lt;/i1&gt;&lt;/a0&gt;中有论述。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The configuration is applied in following order (in case an option is configured in multiple locations the last one wins):</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141119T153245Z" creationid="msdx" creationdate="20141119T153245Z">
        <seg>这些配置将会按以下顺序被应用（以防在多个地方都有配置时只有最后一个 生效）：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The configuration is done via a Groovy builder.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T135045Z" creationid="95" creationdate="20160105T135045Z">
        <seg>这个配置通过一个 Groovy builder 来完成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The configuration of all projects happens before any task is executed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160522T120218Z" creationid="95" creationdate="20160522T120147Z">
        <seg>所有项目的配置都发生在任何任务执行之前。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The configuration on demand feature is incubating so not every build is guaranteed to work correctly.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160522T121902Z" creationid="95" creationdate="20160522T121851Z">
        <seg>配置需求功能正在孵化中，所以还无法保证每次的构建都能正确。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The content of the generated visual studio files can be modified via programmatic hooks, provided by the &lt;c0&gt;visualStudio&lt;/c0&gt; extension.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T095540Z" creationid="haohang" creationdate="20160408T095540Z">
        <seg>通过由&lt;c0&gt;visualStudio&lt;/c0&gt; 提供的编程hook，可以修改所生成的visual studio文件的内容， </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The conversion process has the following features:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T092643Z" creationid="haohang" creationdate="20150707T092643Z">
        <seg>该转换过程具有以下特点：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The copied configuration is in the unresolved state and can be freshly resolved.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T091255Z" creationid="haohang" creationdate="20150807T091255Z">
        <seg>这个复制的配置处于未解析的状态，并且可以被刷新解析。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The copied configuration only has &lt;c8&gt;orca&lt;/c8&gt; as a dependency and therefore there is no version conflict and &lt;c9&gt;seal-1.0&lt;/c9&gt; is returned as a transitive dependency.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T091027Z" creationid="haohang" creationdate="20150807T091027Z">
        <seg>复制的配置只有 &lt;c8&gt;orca&lt;/c8&gt; 一个依赖，因此没有版本冲突，&lt;c9&gt;seal-1.0&lt;/c9&gt; 作为传递依赖被返回。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The copy task is very flexible, and allows you to, for example, filter the contents of the files as they are copied, and map to the file names.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T123853Z" creationid="msdx" creationdate="20141113T123645Z">
        <seg>复制任务非常灵活，并允许您进行，比如筛选要复制的文件的内容，或映射文件的名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The copying methods come in two flavors.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T040505Z" creationid="haohang" creationdate="20150807T040453Z">
        <seg>复制的方法有两种。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The core Gradle tool chains are able to target the following architectures out of the box.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T092045Z" creationid="haohang" creationdate="20160408T092035Z">
        <seg>核心 Gradle 工具链针对以下的架构能够开箱即用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The current project is then always build as a single project build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T075203Z" creationid="haohang" creationdate="20160519T074643Z">
        <seg>那么，当前项目将只会作为单项目构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The current support for CUnit is quite rudimentary.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T151559Z" creationid="95" creationdate="20160504T151537Z">
        <seg>当前对 CUnit 的支持还是相当简陋。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The daemon can potentially preemptively download dependencies or check for new versions of snapshot dependencies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141117T150819Z" creationid="msdx" creationdate="20141117T150819Z">
        <seg>守护进程可以预先下载依赖项或进行快照依赖的新版本检查。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The daemon process automatically expire after 3 hours of idle time.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141117T152630Z" creationid="msdx" creationdate="20141117T152407Z">
        <seg>守护进程将在空闲3小时后自动失效。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The declarative language lies on top of a general purpose task graph, which you can fully leverage in your builds.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141101T124440Z" creationid="msdx" creationdate="20141101T124440Z">
        <seg>声明性语言位于通用任务图的顶层，你可以在构建中充分发挥。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The default &lt;s0&gt;&lt;e1&gt;evaluation&lt;/e1&gt;&lt;/s0&gt; order of the projects is alphanumeric (for the same nesting level).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T074754Z" creationid="haohang" creationdate="20160718T074754Z">
        <seg>默认的项目&lt;s0&gt;&lt;e1&gt;评估&lt;/e1&gt;&lt;/s0&gt;顺序是按字母数字（同一嵌套级别）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The default behavior of the Ear task is to copy the content of &lt;c0&gt;src/main/application&lt;/c0&gt; to the root of the archive.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T142628Z" creationid="msdx" creationdate="20150504T142628Z">
        <seg>Ear task 的默认行为是将&lt;c0&gt;src/main/application&lt;/c0&gt;的内容复制到archive 的根目录下。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The default behavior of the War task is to copy the content of &lt;c0&gt;src/main/webapp&lt;/c0&gt; to the root of the archive.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T093338Z" creationid="msdx" creationdate="20150503T092356Z">
        <seg>War task 的默认行为是将&lt;c0&gt;src/main/webapp&lt;/c0&gt;的内容复制到archive 的根目录下。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The default configuration order is top down, which is usually what is needed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T090301Z" creationid="haohang" creationdate="20160718T090301Z">
        <seg>默认的配置顺序是通常所需要的从顶至下的顺序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The default configuration used by a project dependency on this project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T084553Z" creationid="Administrator" creationdate="20150426T084456Z">
        <seg>本项目上的默认项目依赖配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The default configuration works well for analyzing standard Java projects and can be customized in many ways.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150510T143833Z" creationid="msdx" creationdate="20150510T143833Z">
        <seg>默认配置非常适合于分析标准 Java 项目，并可以在许多方面进行自定义。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The default is 1, that is, do not execute the tests in parallel.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T141233Z" creationid="Administrator" creationdate="20150427T141233Z">
        <seg>它的默认值是 1，也就是说，不并行执行测试。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The default is to execute an unlimited number of tests in each test process.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T014931Z" creationid="Administrator" creationdate="20150428T013900Z">
        <seg>默认是每个测试进程中执行的测试数量不限。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The default name for a generated archive is &lt;c0&gt;&lt;e1&gt;&lt;c2&gt;projectName&lt;/c2&gt;&lt;/e1&gt;-&lt;e3&gt;&lt;c4&gt;version&lt;/c4&gt;&lt;/e3&gt;.&lt;e5&gt;&lt;c6&gt;type&lt;/c6&gt;&lt;/e5&gt;&lt;/c0&gt; For example:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T154718Z" creationid="msdx" creationdate="20141113T154718Z">
        <seg>生成的归档的默认名称是&lt;c0&gt;&lt;e1&gt;&lt;c2&gt;projectName&lt;/c2&gt;&lt;/e1&gt;-&lt;e3&gt;&lt;c4&gt;version&lt;/c4&gt;&lt;/e3&gt;.&lt;e5&gt;&lt;c6&gt;type&lt;/c6&gt;&lt;/e5&gt;&lt;/c0&gt;。举个例子：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The default name for archives can be changed with the &lt;c3&gt;archivesBaseName&lt;/c3&gt; project property.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T155209Z" creationid="msdx" creationdate="20141113T155209Z">
        <seg>归档的默认名称可以通过项目属性 &lt;c3&gt;archivesBaseName&lt;/c3&gt; 来更改。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The default name for this file is &lt;c0&gt;settings.gradle&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T024640Z" creationid="haohang" creationdate="20160519T024640Z">
        <seg>它的默认名称是&lt;c0&gt;settings.gradle&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The default status scheme, ordered from least to most mature status, is &lt;c2&gt;integration&lt;/c2&gt;, &lt;c3&gt;milestone&lt;/c3&gt;, &lt;c4&gt;release&lt;/c4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T013705Z" creationid="95" creationdate="20151129T012326Z">
        <seg>默认状态模式，按状态的成熟程度排序，分别是&lt;c2&gt;integration&lt;/c2&gt;、&lt;c3&gt;milestone&lt;/c3&gt;、&lt;c4&gt;release&lt;/c4&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The default value of &lt;c2&gt;ignoreFailures&lt;/c2&gt; is false.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T015115Z" creationid="Administrator" creationdate="20150428T015115Z">
        <seg>&lt;c2&gt;IgnoreFailures&lt;/c2&gt;的默认值为 false。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The defaults are summarized in the tables below.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T064531Z" creationid="msdx" creationdate="20150513T064531Z">
        <seg>下表总结了这些默认值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The dependencies have the following transitive dependencies:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T034312Z" creationid="haohang" creationdate="20150807T034312Z">
        <seg>这些依赖有以下的传递依赖：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The dependencies of a client module can be normal module dependencies or artifact dependencies or another client module.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T091659Z" creationid="haohang" creationdate="20150801T091659Z">
        <seg>一个客户端模块的依赖可以是正常的模块依赖，或者是 artifact 依赖项或是另一个客户端模块。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The dependency has a version that conflicts with a desired version.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T101805Z" creationid="haohang" creationdate="20150801T101805Z">
        <seg>这个依赖有一个版本与所需要的版本冲突。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The dependency is not available in any of remote repositories.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T101730Z" creationid="haohang" creationdate="20150801T101651Z">
        <seg>在任何的远程仓库中这个依赖都不可用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The dependency is not needed for runtime.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T101740Z" creationid="haohang" creationdate="20150801T101740Z">
        <seg>在运行时不需要这个依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The dependency is undesired due to licensing reasons.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T101715Z" creationid="haohang" creationdate="20150801T101642Z">
        <seg>由于许可证的原因而让依赖不受欢迎。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The dependency reports (see the previous paragraph) are using this API under the covers.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T033340Z" creationid="haohang" creationdate="20150807T033340Z">
        <seg>依赖报告（见前面一段）正是使用此 API。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The dependency reports don't show your real dependency graph and the &lt;c1&gt;compile&lt;/c1&gt; task uses all dependencies, not just the first level dependencies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151201T064834Z" creationid="haohang" creationdate="20151201T064834Z">
        <seg>依赖报告不会显示你真正的依赖关系图，并且&lt;c1&gt;compile&lt;/c1&gt;任务会使用所有的依赖，而不只是第一级依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The desired artifact belongs to a configuration other than &lt;c0&gt;default&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150730T035145Z" creationid="haohang" creationdate="20150730T035145Z">
        <seg>所需的 artifact 属于一个非 &lt;c0&gt;default&lt;/c0&gt;的配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The details of forking depend on which compiler is used.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150430T155725Z" creationid="msdx" creationdate="20150430T155725Z">
        <seg>fork 的详细情况依赖于所使用的编译器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The developer environment is optimized for speed and feedback so we nearly always run Gradle jobs with the daemon.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141119T153853Z" creationid="msdx" creationdate="20141119T153753Z">
        <seg>开发人员的环境在速度和反馈上会优化，所以我们几乎总是使用守护进程运行 Gradle 作业。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The directory containing the build script.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T044359Z" creationid="msdx" creationdate="20141108T044359Z">
        <seg>包含生成脚本的目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The directory to generate distributions into.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T045519Z" creationid="Administrator" creationdate="20150427T045519Z">
        <seg>要发布的文件将生成到此目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The directory to generate documentation into.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T045603Z" creationid="Administrator" creationdate="20150427T045603Z">
        <seg>要生成文档的目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The directory to generate libraries into.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T045318Z" creationid="Administrator" creationdate="20150427T045215Z">
        <seg>类库将生成到此目录中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The directory to generate reports into.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T045406Z" creationid="Administrator" creationdate="20150426T090024Z">
        <seg>报告将生成到此目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The directory to generate test result .xml files into.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T045439Z" creationid="Administrator" creationdate="20150427T045103Z">
        <seg>测试报告的.xml文件将生成到此目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The directory to generate the archive into</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T160141Z" creationid="msdx" creationdate="20141113T160141Z">
        <seg>存放生成的归档文件的目录</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The directory to generate the classes of this source set into.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T051535Z" creationid="Administrator" creationdate="20150427T051513Z">
        <seg>要生成的该源集的类的目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The directory to generate the project report into.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T062202Z" creationid="haohang" creationdate="20150628T062202Z">
        <seg>生成的项目报告的目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The directory to generate the resources of this source set into.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T051528Z" creationid="Administrator" creationdate="20150427T051528Z">
        <seg>要生成的该源集的资源的目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The directory to generate the test report into.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T045502Z" creationid="Administrator" creationdate="20150427T045134Z">
        <seg>测试报告生成到此目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The directory to use to cache source dependency information.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T045651Z" creationid="Administrator" creationdate="20150427T045651Z">
        <seg>该目录用于缓存源代码的依赖信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The directory where the generated POMs are written to.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151228T152743Z" creationid="95" creationdate="20151228T152743Z">
        <seg>生成的POM所写入的目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The distribution contains the JAR file for the library and its dependencies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150705T084508Z" creationid="haohang" creationdate="20150705T084508Z">
        <seg>该分发包含了 library 和它的依赖的 JAR 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The distribution plugin facilitates building archives that serve as distributions of the project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150701T025842Z" creationid="haohang" creationdate="20150628T092328Z">
        <seg>分发插件便于建立archives，作为该项目要分布的文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The distribution plugin is currently &lt;a0&gt;incubating&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T092306Z" creationid="haohang" creationdate="20150628T092221Z">
        <seg>分发插件目前还是&lt;a0&gt;孵化中&lt;/a0&gt;状态。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The distribution will package up the runtime dependencies of the application along with some OS specific start scripts.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150702T104346Z" creationid="haohang" creationdate="20150702T104346Z">
        <seg>分发的内容将会把这个程序的运行时依赖和一些操作系统特定的启动脚本打包在一起。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The distribution will package up the runtime dependencies of the library All files stored in &lt;c0&gt;src/main/dist&lt;/c0&gt; will be added to the root of the archive distribution.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T070225Z" creationid="haohang" creationdate="20150707T065845Z">
        <seg>distribution 将打包所有的运行时依赖。所有在&lt;c0&gt;src/main/dist&lt;/c0&gt;中存储的文件都将被添加到 archive distribution 根目录中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The example above also demonstrates the mechanism of passing extra command-line arguments to the resource compiler.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160325T025434Z" creationid="haohang" creationdate="20160325T023120Z">
        <seg>上面的示例还演示了将额外的命令行参数传递给资源编译器的机制。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The example above will apply the supplied configuration to all &lt;c0&gt;executable&lt;/c0&gt; binaries built.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160324T152800Z" creationid="95" creationdate="20160324T152658Z">
        <seg>上面的例子将会把提供的配置应用到所有构建的 &lt;c0&gt;executable&lt;/c0&gt;二进制文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The example is a bit contrived for the sake of showing the mechanism.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T085758Z" creationid="haohang" creationdate="20160718T085758Z">
        <seg>该示例也有点有意展示这个机制。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The examples below use closures.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T020916Z" creationid="95" creationdate="20160521T020916Z">
        <seg>下面是使用闭包的例子。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The examples from the last section were special, as the projects had no &lt;s0&gt;&lt;e1&gt;Execution Dependencies&lt;/e1&gt;&lt;/s0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T062156Z" creationid="haohang" creationdate="20160718T062156Z">
        <seg>上一节的例子很特别，因为项目里没有&lt;s0&gt;&lt;e1&gt;执行依赖&lt;/e1&gt;&lt;/s0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The existing content is merged with the configuration inferred from the Gradle build or defined explicitly in the eclipse DSL</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T104725Z" creationid="haohang" creationdate="20150624T104604Z">
        <seg>从 Gradle 构建推断出来或在 eclipse DSL 中显示定义的配置会与现有的内容合并在一起</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The existing file contents will be used and the explicit configuration in the &lt;c4&gt;ear.deploymentDescriptor&lt;/c4&gt; will be ignored.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T143840Z" creationid="msdx" creationdate="20150504T143840Z">
        <seg>这个已存在的文件的内容将会被使用，而 &lt;c4&gt;ear.deploymentDescriptor&lt;/c4&gt; 里的显示配置则会被忽略。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The extension of the archive file name.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T160705Z" creationid="msdx" creationdate="20141113T160705Z">
        <seg>归档文件的名称中的扩展名称部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The feature should work very well for multi-project builds that have decoupled projects (&lt;a0&gt;Section 56.9, “Decoupled Projects”&lt;/a0&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160522T121955Z" creationid="95" creationdate="20160522T121852Z">
        <seg>对于解耦的多项目构建，这个功能应该会运行得很好（&lt;a0&gt;第 56.9 节，“解耦项目”&lt;/a0&gt;）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The file is read; or a default version provided by Gradle is used if it does not exist</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T104419Z" creationid="haohang" creationdate="20150624T104419Z">
        <seg>读取文件;如果它不存在，则使用由 Gradle 提供的默认版本</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The files will be created at "&lt;c4&gt;&lt;e5&gt;&lt;c6&gt;$buildDir&lt;/c6&gt;&lt;/e5&gt;/distributions/&lt;e7&gt;&lt;c8&gt;$project.name&lt;/c8&gt;&lt;/e7&gt;-&lt;e9&gt;&lt;c10&gt;$project.version&lt;/c10&gt;&lt;/e9&gt;.&lt;e11&gt;&lt;c12&gt;«ext»&lt;/c12&gt;&lt;/e11&gt;&lt;/c4&gt;".</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150701T030623Z" creationid="haohang" creationdate="20150701T030623Z">
        <seg>这些文件将会创建在“&lt;c4&gt;&lt;e5&gt;&lt;c6&gt;$buildDir&lt;/c6&gt;&lt;/e5&gt;/distributions/&lt;e7&gt;&lt;c8&gt;$project.name&lt;/c8&gt;&lt;/e7&gt;-&lt;e9&gt;&lt;c10&gt;$project.version&lt;/c10&gt;&lt;/e9&gt;.&lt;e11&gt;&lt;c12&gt;«ext»&lt;/c12&gt;&lt;/e11&gt;&lt;/c4&gt;”。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The final XML is persisted</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T105139Z" creationid="haohang" creationdate="20150624T105139Z">
        <seg>最终的 XML 被持久化</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The first argument of the instruction call is the key of the property.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150526T064621Z" creationid="haohang" creationdate="20150526T064448Z">
        <seg>instruction 调用的第一个参数是属性的键。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The first example for describing such a use case, consists of two webapplication projects and a parent project that creates a distribution out of them.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160722T091059Z" creationid="haohang" creationdate="20160722T090728Z">
        <seg>第一个例子用于描述这种使用情况，包括两个 webapplication 项目，以及创建了它们的分布情况的父项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The first layer is the Ant language.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141114T071818Z" creationid="msdx" creationdate="20141114T071818Z">
        <seg>第一层是 Ant 的语言。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The first time you run a build for a project, Gradle creates a &lt;c0&gt;.gradle&lt;/c0&gt; directory in which it puts the compiled script.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T153317Z" creationid="msdx" creationdate="20141109T153317Z">
        <seg>你第一次运行一个项目构建时， Gradle 会创建&lt;c0&gt;.gradle&lt;/c0&gt;目录，用于存放已编译的脚本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The first two tasks are specified by there absolute path, the last task is executed on the name matching mechanism described above.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160715T092050Z" creationid="haohang" creationdate="20160715T092050Z">
        <seg>前两个任务由它们的绝对路径指定，最后一项任务通过上面所述的匹配机制执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The first uses auto-delegation to the &lt;c1&gt;Project&lt;/c1&gt; object, for properties not defined in the build script.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T063513Z" creationid="msdx" creationdate="20141108T043318Z">
        <seg>在生成脚本中未定义的属性，第一次使用时自动委托到&lt;c1&gt;Project&lt;/c1&gt;对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following diagram shows the relationships between these tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T082910Z" creationid="Administrator" creationdate="20150426T082910Z">
        <seg>下图显示了这些任务之间的关系。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following example adds a dependency from &lt;c2&gt;taskX&lt;/c2&gt; to all the tasks in the project whose name starts with &lt;c3&gt;lib&lt;/c3&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T123841Z" creationid="msdx" creationdate="20141110T123841Z">
        <seg>下面的示例是从&lt;c2&gt;taskX&lt;/c2&gt;加入了项目中所有名称以&lt;c3&gt;lib&lt;/c3&gt;开头的任务的依赖：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following example logs the start and end of each task execution.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T140018Z" creationid="95" creationdate="20160521T135925Z">
        <seg>下面的示例展示了在每个任务执行的开始及结束时打印日志。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following example removes all existing dependencies from the &lt;c2&gt;Classpath&lt;/c2&gt; domain object:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T064814Z" creationid="haohang" creationdate="20150625T064814Z">
        <seg>下面的示例从&lt;c2&gt;Classpath&lt;/c2&gt;域对象中删除现有的所有依赖关系:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following example removes all existing dependencies from the &lt;c2&gt;Module&lt;/c2&gt; domain object:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T073908Z" creationid="haohang" creationdate="20150625T073908Z">
        <seg>下面的示例从&lt;c2&gt;Module&lt;/c2&gt;域对象中删除现有的所有依赖关系:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following example sets the &lt;c0&gt;srcDir&lt;/c0&gt; property of each task as it is created.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T135010Z" creationid="95" creationdate="20160521T135010Z">
        <seg>下面的示例是在每个任务创建之前设置&lt;c0&gt;srcDir&lt;/c0&gt;属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following examples show several different ways to achieve the same configuration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T091936Z" creationid="msdx" creationdate="20141110T091936Z">
        <seg>下面的示例演示了几种不同的方式来实现相同的配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following notification systems are supported:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T062757Z" creationid="haohang" creationdate="20150628T062757Z">
        <seg>支持以下通知系统：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following properties can alternatively be set from the command line, as task parameters of the &lt;c0&gt;sonarAnalyze&lt;/c0&gt; task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T053813Z" creationid="msdx" creationdate="20150513T053813Z">
        <seg>下面的属性或者可以从命令行中或者是作为&lt;c0&gt;sonarAnalyze&lt;/c0&gt;任务的任务参数这两种方式之一来设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following properties can be used to configure the Gradle build environment:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141119T153523Z" creationid="msdx" creationdate="20141119T153523Z">
        <seg>下面的属性可以用于配置 Gradle 构建环境：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following table lists a few of the commonly used ones.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T044124Z" creationid="msdx" creationdate="20141108T044124Z">
        <seg>下表列出了常用的几个属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following table lists some of the important properties of a source set.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T051157Z" creationid="Administrator" creationdate="20150427T051157Z">
        <seg>下表列出了一些重要的源集属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following table lists supported notification services and their configuration properties.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T065209Z" creationid="haohang" creationdate="20150628T065209Z">
        <seg>下表列出了支持的通知服务以及它们的配置属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following table lists the domain object used for each of the Eclipse model types:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T105152Z" creationid="haohang" creationdate="20150624T105152Z">
        <seg>下表列出了用于每个 Eclipse 模型类型的域对象：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following table lists the domain object used for each of the model types:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T073702Z" creationid="haohang" creationdate="20150625T073702Z">
        <seg>下表列出了用于每个模型类型的域对象：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following tool chains are supported:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160128T153326Z" creationid="95" creationdate="20160128T153326Z">
        <seg>支持以下的工具链：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The former is used to locate classes referenced by the source code, and will typically contain &lt;c4&gt;scala-library&lt;/c4&gt; along with other libraries.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150430T154452Z" creationid="msdx" creationdate="20150430T154452Z">
        <seg>前者用于在源代码中查找类的引用，通常会包含  &lt;c4&gt;scala-library&lt;/c4&gt;和其他库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The former is used to locate classes referenced by the source code, and will typically contain the Groovy library along with other libraries.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T091226Z" creationid="msdx" creationdate="20150429T091226Z">
        <seg>前者用于在源代码中查找类的引用，通常会包含 Groovy 库和其他库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The full stacktraces are printed out.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T033633Z" creationid="msdx" creationdate="20141116T113121Z">
        <seg>打印全部的栈跟踪信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The generated test results will be located in the &lt;c2&gt;&lt;e3&gt;&lt;c4&gt;${build.dir}&lt;/c4&gt;&lt;/e3&gt;/test-results&lt;/c2&gt; directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T151322Z" creationid="95" creationdate="20160504T151322Z">
        <seg>生成的测试结果将位于&lt;c2&gt;&lt;e3&gt;&lt;c4&gt;${build.dir}&lt;/c4&gt;&lt;/e3&gt;/test-results&lt;/c2&gt;目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The generation lifecycle is as follows:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T104314Z" creationid="haohang" creationdate="20150624T104243Z">
        <seg>生成的生命周期如下:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The header files are used during compilation, with the compiled binary dependency being used during the linking.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160325T025629Z" creationid="haohang" creationdate="20160325T025629Z">
        <seg>这些头文件在编译期间使用，而编译的二进制依赖则在链接过程中使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The information stored in the metadata cache includes:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T044820Z" creationid="95" creationdate="20151129T044820Z">
        <seg>存储在元数据缓存中的信息包括：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The job of initialising the CUnit test registry and executing the tests is performed by Gradle, via some generated CUnit launcher sources.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T150007Z" creationid="95" creationdate="20160504T150007Z">
        <seg>初始化 CUnit 测试注册以及执行这些测试的工作，都由 Gradle 通过一些生成的 CUnit 启动器源码来执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The key to pass to Jetty when requesting it to stop.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T151348Z" creationid="msdx" creationdate="20150504T151348Z">
        <seg>当需要请求停止时，传递给 Jetty 的key。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The latter is based on files, e.g. the physical location of the test implementation class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T022014Z" creationid="Administrator" creationdate="20150428T022008Z">
        <seg>后者基于文件，比如测试实现类的物理位置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The latter is the default, and is used to report build progress.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T070701Z" creationid="msdx" creationdate="20141116T070701Z">
        <seg>默认使用后面的这个日志级别，用于报告构建进度。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The latter is used to load and execute the Groovy compiler and Groovydoc tool, respectively, and should only contain the Groovy library and its dependencies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T091327Z" creationid="msdx" creationdate="20150429T091327Z">
        <seg>后者用来分别加载和执行 Groovy 编译器和 Groovydoc 工具，并且应该只包含 Groovy 库及其依赖项。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The latter is used to load and execute the Scala compiler and Scaladoc tool, respectively, and should only contain the &lt;c5&gt;scala-compiler&lt;/c5&gt; library and its dependencies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150430T154515Z" creationid="msdx" creationdate="20150430T154515Z">
        <seg>后者用来分别加载和执行 Scala 编译器和 Scala 工具，并且应该只包含 &lt;c4&gt;scala-library&lt;/c4&gt;及其依赖项。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The latter may be completely replaced in future.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T023846Z" creationid="Administrator" creationdate="20150428T023846Z">
        <seg>后者可能在将来会被完全地取代掉。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The libraries can be stored in a flat directory without any XML module descriptor files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151201T062458Z" creationid="haohang" creationdate="20151201T062458Z">
        <seg>库可以存在一个平面目录中，而没有任何 XML 模块描述符文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The location of those directories are considered as child projects of the root project in the multi-project tree.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T063914Z" creationid="haohang" creationdate="20160519T063814Z">
        <seg>这些目录的位置被认为是多项目树中根项目的子项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The lock is held whenever the binary meta-data store is being read or written, but is released for slow operations such as downloading remote artifacts.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T153546Z" creationid="95" creationdate="20151129T153339Z">
        <seg>每当二进制元数据存储区正在读取或写入时，锁都会被持有，但会在慢的操作比如下载远程工作时释放。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The log is the main 'UI' of a build tool.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T065958Z" creationid="msdx" creationdate="20141116T065958Z">
        <seg>日志是构建工具的主要界面。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The main difference between a &lt;s0&gt;&lt;e1&gt;dynamic version&lt;/e1&gt;&lt;/s0&gt; and a &lt;s2&gt;&lt;e3&gt;changing module&lt;/e3&gt;&lt;/s2&gt; is that when you resolve a &lt;s4&gt;&lt;e5&gt;dynamic version&lt;/e5&gt;&lt;/s4&gt;, you'll get the real, static version as the module name.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T012147Z" creationid="haohang" creationdate="20150722T012147Z">
        <seg>&lt;s0&gt;&lt;e1&gt;动态版本&lt;/e1&gt;&lt;/s0&gt;和&lt;s2&gt;&lt;e3&gt;变化模块&lt;/e3&gt;&lt;/s2&gt;的主要区别是，当你解析一个&lt;s4&gt;&lt;e5&gt;动态版本&lt;/e5&gt;&lt;/s4&gt;时，你会得到真正的、 静态的版本作为模块名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The main tasks that you will use are the &lt;c0&gt;eclipse&lt;/c0&gt; and &lt;c1&gt;cleanEclipse&lt;/c1&gt; tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T004246Z" creationid="haohang" creationdate="20150603T004141Z">
        <seg>您将使用的主要任务是&lt;c0&gt;eclipse&lt;/c0&gt;和&lt;c1&gt;cleanEclipse&lt;/c1&gt;任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The main tasks that you will use are the &lt;c0&gt;idea&lt;/c0&gt; and &lt;c1&gt;cleanIdea&lt;/c1&gt; tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T071832Z" creationid="haohang" creationdate="20150625T071832Z">
        <seg>您将使用的主要任务是 &lt;c0&gt;idea&lt;/c0&gt; 和 &lt;c1&gt;cleanIdea&lt;/c1&gt; 任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The manifest to include in all JAR files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T050058Z" creationid="Administrator" creationdate="20150427T050058Z">
        <seg>要包括的所有 JAR 文件的清单。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The map may include other artifact properties:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151226T091410Z" creationid="95" creationdate="20151226T091410Z">
        <seg>这个map可能包含其他的构件属性：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The map must include a &lt;c0&gt;file&lt;/c0&gt; entry that defines the file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151226T091337Z" creationid="95" creationdate="20151226T091307Z">
        <seg>这个 map 必须包含一个定义文件的 &lt;c0&gt;file&lt;/c0&gt; 条目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The mapping works like the following.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T144954Z" creationid="95" creationdate="20160106T144954Z">
        <seg>映射过程像下面所示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The maven plugin provides a factory method for creating a POM. This is useful if you need a POM without the context of uploading to a Maven repo.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160104T152749Z" creationid="95" creationdate="20151228T153233Z">
        <seg>Maven 插件提供了用于创建 POM 的工厂方法，如果你需要一个 POM 文件但是没有上传到 Maven 仓库的场景，这个工厂方法将非常有用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The merge is not immediately triggered by the from statement.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T151321Z" creationid="msdx" creationdate="20150428T151321Z">
        <seg>这个合并操作不会在from语句中就马上被触发。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The method call returns the Ant data type, which you can then use directly in your build script.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T011039Z" creationid="msdx" creationdate="20141116T011039Z">
        <seg>方法调用返回 Ant 数据类型，然后可以在构建脚本中直接使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The model objects provide lower level hooks for working with domain objects representing the file content before and after merging with the model configuration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T100740Z" creationid="haohang" creationdate="20150624T100740Z">
        <seg>模型对象提供了低级别的hook，用于处理在合并模型配置前后表示文件内容的域对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The most common use case is to have multi-project builds that share a common lifecycle (e.g. all projects use the Java plugin).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T090609Z" creationid="haohang" creationdate="20160718T090609Z">
        <seg>最常见的用例是，要分享共同的生命周期（例如所有项目都使用 Java 插件） 的多项目构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The most popular ones at the moment are Maven and Ivy.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150716T073949Z" creationid="haohang" creationdate="20150716T073949Z">
        <seg>目前最受欢迎的解决方案是 Maven 和 Ivy。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The multi-project tree created in the settings file is made up of so called &lt;e0&gt;project descriptors&lt;/e0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T070328Z" creationid="haohang" creationdate="20160519T070304Z">
        <seg>在设置文件中创建的多项目树组成了所谓的&lt;e0&gt;项目描述符&lt;/e0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The name and version of the project</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T134135Z" creationid="Administrator" creationdate="20150427T134135Z">
        <seg>project的名称和版本</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The name of the application source directory, relative to the project directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T141506Z" creationid="msdx" creationdate="20150504T141506Z">
        <seg>相对于项目目录的应用程序源目录名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The name of the archive can also be changed at any time later on.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T155244Z" creationid="msdx" creationdate="20141113T155232Z">
        <seg>还可以在以后的任何时候更改归档文件的名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The name of the directory to generate distributions into, relative to the build directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T045340Z" creationid="Administrator" creationdate="20150427T045340Z">
        <seg>相对于build目录的目录名称，发布的文件将生成到此目录中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The name of the directory to generate documentation into, relative to the build directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T045531Z" creationid="Administrator" creationdate="20150427T045531Z">
        <seg>相对于build目录的目录名称，文档将生成到此目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The name of the directory to generate libraries into, relative to the build directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T045305Z" creationid="Administrator" creationdate="20150427T045158Z">
        <seg>相对于build目录的目录名称，类库将生成到此目录中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The name of the directory to generate reports into, relative to the build directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T045352Z" creationid="Administrator" creationdate="20150426T085942Z">
        <seg>相对于build目录的目录名称，报告将生成到此目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The name of the directory to generate test result .xml files into, relative to the build directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T045424Z" creationid="Administrator" creationdate="20150427T045024Z">
        <seg>相对于build目录的目录名称，测试报告的.xml文件将生成到此目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The name of the directory to generate the project report into, relative to the reports directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T062249Z" creationid="haohang" creationdate="20150628T062020Z">
        <seg>生成项目报告的目录名称，它是相对于reports目录的相对路径。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The name of the directory to generate the test report into, relative to the reports directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T062049Z" creationid="Administrator" creationdate="20150427T045122Z">
        <seg>相对于reports目录的目录名称，测试报告将生成到此目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The name of the directory to use to cache source dependency information, relative to the build directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T045638Z" creationid="Administrator" creationdate="20150427T045638Z">
        <seg>相对于build目录的目录名称，该目录用于缓存源代码的依赖信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The name of the lib directory inside the generated EAR.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T141539Z" creationid="msdx" creationdate="20150504T141539Z">
        <seg>生成的 EAR 文件里的 lib 目录名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The name of the project directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T044241Z" creationid="msdx" creationdate="20141108T044241Z">
        <seg>项目目录的名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The name of the source set, used to identify it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T051402Z" creationid="Administrator" creationdate="20150427T051402Z">
        <seg>用来确定一个源集的源集名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The name of the web application source directory, relative to the project directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T092314Z" creationid="msdx" creationdate="20150503T092132Z">
        <seg>web 应用程序源目录的名称，是一个相对于项目目录的目录名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The next example demonstrates &lt;c0&gt;latest&lt;/c0&gt; selectors based on a custom status scheme declared in a module metadata rule:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T041803Z" creationid="95" creationdate="20151129T041803Z">
        <seg>下一个示例演示了基于在一个模块的元数据规则中声明的自定义状态模式的&lt;c0&gt;latest&lt;/c0&gt;选择器：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The next time you run this build, Gradle uses the compiled script, if the script has not changed since it was compiled.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T153457Z" creationid="msdx" creationdate="20141109T153441Z">
        <seg>下次你运行此构建时， 如果该脚本自它编译后没有被修改，Gradle 会使用这个已编译的脚本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The only difference is the pattern, which is &lt;c12&gt;org.gradle.project.&lt;e13&gt;&lt;c14&gt;propertyName&lt;/c14&gt;&lt;/e13&gt;&lt;/c12&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T150021Z" creationid="msdx" creationdate="20141109T150021Z">
        <seg>唯一的区别是，它是&lt;c12&gt;org.gradle.project&lt;e13&gt;&lt;c14&gt;propertyName&lt;/c14&gt;&lt;/e13&gt;&lt;/c12&gt;的模式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The ordering rule only has an effect when both tasks are scheduled for execution.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T014532Z" creationid="msdx" creationdate="20141111T014359Z">
        <seg>排序规则仅在这两项任务计划执行时起作用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The original configuration has therefore a version conflict which is resolved to the newer &lt;c4&gt;seal-2.0&lt;/c4&gt; version.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T042042Z" creationid="haohang" creationdate="20150807T042042Z">
        <seg>原始配置因此有版本冲突，所以被解析为更新的 &lt;c4&gt;seal-2.0&lt;/c4&gt; 版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The other arguments form the value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150526T064647Z" creationid="haohang" creationdate="20150526T064647Z">
        <seg>其他参数构成了它的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The other is a &lt;a1&gt; Networking Properties page &lt;/a1&gt; from the JDK docs.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141121T142145Z" creationid="msdx" creationdate="20141121T142108Z">
        <seg>另一个地方是 JDK 文档的&lt;a1&gt;网络属性页&lt;/a1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The other manifests might be either described by a file path or, like in the example above, by a reference to another &lt;c1&gt;Manifest&lt;/c1&gt; object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T145536Z" creationid="msdx" creationdate="20150428T145536Z">
        <seg>其他的manifest可能使用文件路径来描述，像上面的例子，使用对另一个&lt;c1&gt;Manifest&lt;/c1&gt;对象的引用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The other results currently cannot be disabled.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T142151Z" creationid="msdx" creationdate="20150428T142151Z">
        <seg>目前不能禁用其他的结果。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The other statement uses the &lt;c2&gt;project&lt;/c2&gt; property available to any build script, which returns the associated &lt;c3&gt;Project&lt;/c3&gt; object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T043642Z" creationid="msdx" creationdate="20141108T043357Z">
        <seg>其他语句使用了在任何构建脚本中可以访问的&lt;c2&gt;project&lt;/c2&gt;属性，则返回关联的&lt;c3&gt;Project&lt;/c3&gt;对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The other type of task is the enhanced task, where the behaviour is built into the task, and the task provides some properties which you can use to configure the behaviour.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T143130Z" creationid="95" creationdate="20160814T143051Z">
        <seg>另一种类型的任务是增强型的任务，它的任务内置在任务中，并且这个任务提供了一些属性能够让你用于配置其行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The output files of the TaskOutputs are included in the file collection.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T161128Z" creationid="msdx" creationdate="20141112T161128Z">
        <seg>TaskOutputs 的输出文件会被包含在文件集合内。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The output files of the source set, containing its compiled classes and resources.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T051430Z" creationid="Administrator" creationdate="20150427T051430Z">
        <seg>源集的输出文件，包含它编译过的类和资源。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The output files of the task are included in the file collection.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T161108Z" creationid="msdx" creationdate="20141112T161108Z">
        <seg>任务的输出文件会被包含在文件集合内。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The passphrase used to protect your private key.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160108T151707Z" creationid="95" creationdate="20160108T151707Z">
        <seg>用来保护你的私钥的密码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The path &lt;c0&gt;:bluewhale&lt;/c0&gt; corresponds to the file system path &lt;c1&gt;water/bluewhale&lt;/c1&gt; in the case of the example above.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T061355Z" creationid="haohang" creationdate="20160715T092402Z">
        <seg>在上面的示例中，该路径&lt;c0&gt;:bluewhale&lt;/c0&gt;对应于文件系统路径&lt;c1&gt;water/bluewhale&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The path of a task is simply its project path plus the task name.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T061502Z" creationid="haohang" creationdate="20160718T061502Z">
        <seg>一项任务的路径只是它的项目路径加上其任务名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The path of the directory to write the generated POMs, relative to the build directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151228T152713Z" creationid="95" creationdate="20151228T152526Z">
        <seg>相对于构建目录，用于写入生成的POM的文件夹路径。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The paths of the dependencies in the generated IDEA files are absolute.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T092127Z" creationid="haohang" creationdate="20150625T074643Z">
        <seg>在生成的 IDEA 文件的依赖项路径是绝对路径。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The patterns are used in the order that they are defined.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T133151Z" creationid="95" creationdate="20151006T133151Z">
        <seg>这些模式以定义它们的顺序来使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The plugin adds a &lt;c1&gt;sonarAnalyze&lt;/c1&gt; task that analyzes the project to which the plugin is applied, as well as its subprojects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150510T142846Z" creationid="msdx" creationdate="20150509T132916Z">
        <seg>该插件添加了&lt;c1&gt;sonarAnalyze&lt;/c1&gt; task ，用来分析一个project 及子project 都应用了哪个插件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The plugin adds a number of tasks to the project that perform the quality checks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T151827Z" creationid="msdx" creationdate="20150504T151827Z">
        <seg>该插件向你的项目添加了大量的执行质量检查的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The plugin adds an extension named "&lt;c0&gt;distributions&lt;/c0&gt;" of type &lt;a1&gt;&lt;c2&gt;DistributionContainer&lt;/c2&gt;&lt;/a1&gt; to the project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150701T030058Z" creationid="haohang" creationdate="20150701T025913Z">
        <seg>本插件向 project 添加了一个名为“&lt;c0&gt;distributions&lt;/c0&gt;” 的 &lt;a1&gt;&lt;c2&gt;DistributionContainer&lt;/c2&gt;&lt;/a1&gt; 类型的扩展。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The plugin adds the following tasks to the project:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T071527Z" creationid="haohang" creationdate="20150707T071527Z">
        <seg>该插件向project 中添加了以下任务：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The plugin build a distribution for your library.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150705T084627Z" creationid="haohang" creationdate="20150705T084627Z">
        <seg>该插件还可以生成你的 library 的分发文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The plugin can also build a distribution for your application.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150702T104304Z" creationid="haohang" creationdate="20150702T104304Z">
        <seg>该插件还可以生成你的应用程序的分发文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The plugin is based on Sonar Runner 2.0, which makes it compatible with Sonar 2.11 and higher.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T060356Z" creationid="msdx" creationdate="20150513T060356Z">
        <seg>该插件基于Sonar Runner 2.0，这使它与Sonar 2.11 或更高的版本相兼容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The plugin is based on the &lt;a2&gt;Sonar Runner&lt;/a2&gt; and requires Sonar 2.11 or higher.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150510T142949Z" creationid="msdx" creationdate="20150510T142949Z">
        <seg>该插件基于&lt;a2&gt;Sonar Runner&lt;/a2&gt;，并要求是 Sonar 2.11 或更高的版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The plugin provides a DSL for configuring model objects that model the Eclipse view of the project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T100530Z" creationid="haohang" creationdate="20150624T100530Z">
        <seg>该插件提供一个 DSL，用于配置把该 project 的Eclipse 视图做成模型的模型对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The plugin provides a standardized set of hooks for adding and removing content from the generated files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T071706Z" creationid="haohang" creationdate="20150625T071706Z">
        <seg>该插件提供了一套标准化的 hooks 用于添加和删除生成的文件的内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The plugin provides objects modeling the sections of the metadata files that are generated by Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T073643Z" creationid="haohang" creationdate="20150625T073643Z">
        <seg>本插件提供了一些对象，对由 Gradle 生成的元数据文件的这一部分内容进行建模。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The plugin supports &lt;s0&gt;&lt;e1&gt;joint compilation&lt;/e1&gt;&lt;/s0&gt;, which allows to freely mix and match Groovy and Java code, with dependencies in both directions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T071106Z" creationid="msdx" creationdate="20150429T035439Z">
        <seg>该插件支持&lt;s0&gt;&lt;e1&gt;联合编译&lt;/e1&gt;&lt;/s0&gt;，可以任意地混合及匹配Groovy 和 Java 代码各自的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The plugin supports &lt;s0&gt;&lt;e1&gt;joint compilation&lt;/e1&gt;&lt;/s0&gt;, which allows to freely mix and match Scala and Java code, with dependencies in both directions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T144831Z" creationid="msdx" creationdate="20150429T144757Z">
        <seg>该插件支持&lt;s0&gt;&lt;e1&gt;联合编译&lt;/e1&gt;&lt;/s0&gt;，联合编译可以通过 Scala 及 Java 的各自的依赖任意地混合及匹配它们的代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The powerful support for multi-project builds is one of Gradle's unique selling points.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160522T024605Z" creationid="95" creationdate="20160521T140827Z">
        <seg>对多项目构建的强大支持是 Gradle 的独特优点之一。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The predicate is evaluated just before the task is due to be executed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T020952Z" creationid="msdx" creationdate="20141111T020913Z">
        <seg>断言只在任务要执行前才计算。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The primary difference between a task &lt;s2&gt;&lt;e3&gt;ordering&lt;/e3&gt;&lt;/s2&gt; and a task &lt;s4&gt;&lt;e5&gt;dependency&lt;/e5&gt;&lt;/s4&gt; is that an ordering rule does not influence which tasks will be executed, only the order in which they will be executed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T143431Z" creationid="msdx" creationdate="20141110T143431Z">
        <seg>任务&lt;s2&gt;&lt;e3&gt;排序&lt;/e3&gt;&lt;/s2&gt;和任务&lt;s4&gt;&lt;e5&gt;依赖&lt;/e5&gt;&lt;/s4&gt;之间的主要区别是，排序规则不会影响那些任务的执行，而仅将执行的顺序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The project classpath becomes a complete mess, and, if a classpath problem arises, hell on earth invites you for a ride.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150721T012537Z" creationid="haohang" creationdate="20150721T012537Z">
        <seg>项目的类路径会变得一片狼藉，并且，如果类路径出现问题时，那简直就是人间地狱。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The project object provides a &lt;a2&gt;&lt;c3&gt;LoggingManager&lt;/c3&gt;&lt;/a2&gt;, which allows you to change the log levels that standard out or error are redirected to when your build script is evaluated.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T034354Z" creationid="msdx" creationdate="20141116T131251Z">
        <seg>Project对象提供了一个&lt;a2&gt;&lt;c3&gt;LoggingManager&lt;/c3&gt;&lt;/a2&gt;，它可以在评估构建脚本时，修改标准输出和错误重定向的日志级别。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The project path is assumed to be equal to the relative physical file system path.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T041538Z" creationid="haohang" creationdate="20160519T041355Z">
        <seg>项目路径被假定为等于物理文件系统的相对路径。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The project report defines the following convention properties:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T061705Z" creationid="haohang" creationdate="20150628T061705Z">
        <seg>项目报告定义以下约定属性：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The project report plugin defines the following tasks:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T061113Z" creationid="haohang" creationdate="20150628T061113Z">
        <seg>项目报告插件定义了以下任务：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The project report plugin does not define any dependency configurations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T061648Z" creationid="haohang" creationdate="20150628T061648Z">
        <seg>项目报告插件没有定义任何的依赖配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The project report plugin does not require any particular project layout.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T061553Z" creationid="haohang" creationdate="20150628T061553Z">
        <seg>项目报告插件不需要任何特定的项目布局。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The project tree is created in the &lt;c0&gt;settings.gradle&lt;/c0&gt; file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T041031Z" creationid="haohang" creationdate="20160519T041031Z">
        <seg>项目树在&lt;c0&gt;settings.gradle&lt;/c0&gt;文件中创建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The projects to generate the reports for.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T061914Z" creationid="haohang" creationdate="20150628T061914Z">
        <seg>要生成报告的projects。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The properties are described below.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T050913Z" creationid="Administrator" creationdate="20150427T050913Z">
        <seg>这些属性将在下文中进行介绍。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The properties file in the user's home directory has precedence over property files in the project directories.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T142433Z" creationid="msdx" creationdate="20141109T140928Z">
        <seg>用户的主目录中的属性文件比项目目录中的属性文件更先被访问到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The properties of the &lt;c5&gt;gradle.properties&lt;/c5&gt; can be accessed via the project object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T134221Z" creationid="msdx" creationdate="20141109T134221Z">
        <seg>通过project对象，可以访问到&lt;c5&gt;gradle.properties&lt;/c5&gt;里的属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The public key ID (an 8 character hexadecimal string).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160108T151502Z" creationid="95" creationdate="20160108T151502Z">
        <seg>公钥 ID （一个8位字符的十六进制字符串）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The reason every project needs to be configured is to support the flexibility of accessing and changing any part of Gradle project model.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160522T120407Z" creationid="95" creationdate="20160522T120407Z">
        <seg>每个项目需要配置的原因是为了支持灵活地访问及更改 Gradle 项目模型的任何部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The reason is, that Gradle adds a set of default imports to your script.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T124241Z" creationid="msdx" creationdate="20141111T124241Z">
        <seg>原因是，Gradle 会向您的脚本添加默认的一些导入。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The remaining sections will be left as-is.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T103155Z" creationid="haohang" creationdate="20150624T103155Z">
        <seg>剩余的部分则不变。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The replaced manifest is merged into the new one.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150526T004139Z" creationid="haohang" creationdate="20150526T004139Z">
        <seg>被替换的manifest 会被合并到新的对象单中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The report is available at &lt;c2&gt;&lt;e3&gt;&lt;c4&gt;$buildDir&lt;/c4&gt;&lt;/e3&gt;/reports/jacoco/test&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T130420Z" creationid="msdx" creationdate="20150506T130420Z">
        <seg>该报告可以在 &lt;c2&gt;&lt;e3&gt;&lt;c4&gt;$buildDir&lt;/c4&gt;&lt;/e3&gt;/reports/jacoco/test&lt;/c2&gt; 中看到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The repositories you have defined (as described in &lt;a0&gt;Section 50.6, “Repositories”&lt;/a0&gt;) are not automatically used for uploading.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151226T091735Z" creationid="95" creationdate="20151226T091735Z">
        <seg>你所定义的仓库（&lt;a0&gt;第 50.6 节，“仓库”&lt;/a0&gt;所描述的）并不会自动地用于上传。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The resolved artifact metadata for a particular artifact, including a pointer to the downloaded artifact file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T045218Z" creationid="95" creationdate="20151129T045041Z">
        <seg>对于特定构件的解析后的构件元数据，包括指向下载的构件工件的信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The resolved module metadata for a particular module, including module artifacts and module dependencies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T045032Z" creationid="95" creationdate="20151129T045032Z">
        <seg>对于特定模块的解析后的模块元数据，包括模块构件和模块依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The resources of this source set.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T052616Z" creationid="Administrator" creationdate="20150427T052616Z">
        <seg>此源集的资源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The result of resolving a dynamic version (e.g. &lt;c0&gt;1.+&lt;/c0&gt;) to a concrete version (e.g. &lt;c1&gt;1.2&lt;/c1&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T044929Z" creationid="95" creationdate="20151129T044929Z">
        <seg>解析一个动态版本（例如&lt;c0&gt;1.+&lt;/c0&gt;）到一个具体的版本（例如&lt;c1&gt;1.2&lt;/c1&gt;）的结果。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The resulting &lt;c0&gt;.classpath&lt;/c0&gt; file will only contain Gradle-generated dependency entries, but not any other dependency entries that may have been present in the original file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T065508Z" creationid="haohang" creationdate="20150625T064932Z">
        <seg>生成的&lt;c0&gt;.classpath&lt;/c0&gt;文件将只包含 Gradle 生成的依赖项，而没有其他可能存在于原始文件的依赖项。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The resulting module file will only contain Gradle-generated dependency entries, but not any other dependency entries that may have been present in the original file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T073940Z" creationid="haohang" creationdate="20150625T073940Z">
        <seg>生成的模块文件将只包含 Gradle 生成的依赖项，而没有其他可能存在于原始文件的依赖项。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The results are stored in the Sonar database.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150510T142905Z" creationid="msdx" creationdate="20150510T142905Z">
        <seg>分析结果存储于 Sonar 数据库中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The results in an XML format that is compatible with the Ant JUnit report task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T084031Z" creationid="msdx" creationdate="20150428T084031Z">
        <seg>与Ant Junit report 任务兼容的 XML 格式的结果。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The results of this analysis are stored in the file designated by &lt;c0&gt;scalaCompileOptions.incrementalOptions.analysisFile&lt;/c0&gt; (which has a sensible default).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T155609Z" creationid="msdx" creationdate="20150501T155513Z">
        <seg>解析结果进入由 &lt;c0&gt;scalaCompileOptions.incrementalOptions.analysisFile&lt;/c0&gt; 所指定的文件（它有一个合理的默认值）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The return value can be an object of any of the types supported by the &lt;c3&gt;files()&lt;/c3&gt; method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T160650Z" creationid="msdx" creationdate="20141112T160650Z">
        <seg>这个闭包或Callable实例的返回值可以是&lt;c3&gt;files()&lt;/c3&gt;方法所支持的任何类型的对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The root project is the only project in a path that is not specified by its name.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160715T092203Z" creationid="haohang" creationdate="20160715T092203Z">
        <seg>根项目是唯一的在一个不由其名称指定的路径中的项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The rule provided will enforce just this: any time version &lt;c2&gt;1.2&lt;/c2&gt; is encountered it will be replaced with &lt;c3&gt;1.2.1&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T083805Z" creationid="95" creationdate="20151115T083805Z">
        <seg>提供的规则将强制执行：在任何时间遇到了&lt;c2&gt;1.2&lt;/c2&gt;版本，都将会替换为&lt;c3&gt;1.2.1&lt;/c3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The same could be done for the module paths in the project file:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T074107Z" creationid="haohang" creationdate="20150625T074107Z">
        <seg>对项目文件中的模块路径的处理也是一样：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The same could be done for the natures in the &lt;c2&gt;.project&lt;/c2&gt; file:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T065746Z" creationid="haohang" creationdate="20150625T065641Z">
        <seg>对&lt;c2&gt;.project&lt;/c2&gt;文件中的natures的处理也是一样：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The same hooks can be used to add additional properties which aren't covered by the plugin's object model.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T100837Z" creationid="msdx" creationdate="20150512T100837Z">
        <seg>相同的hook 可以用来添加额外的属性，并且不会被插件的对象模型所覆盖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The second layer of Ant is its wealth of Ant tasks and types, like &lt;c0&gt;javac&lt;/c0&gt;, &lt;c1&gt;copy&lt;/c1&gt; or &lt;c2&gt;jar&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141114T141307Z" creationid="msdx" creationdate="20141114T141307Z">
        <seg>Ant 的第二层是其丰富的 Ant 任务和类型，如&lt;c0&gt;javac&lt;/c0&gt;、&lt;c1&gt;copy&lt;/c1&gt;或&lt;c2&gt;jar&lt;/c2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The section contains information on how to configure certain behavior of the daemon (including turning on the daemon by default) in a more 'persistent' way.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141118T100149Z" creationid="msdx" creationdate="20141118T100149Z">
        <seg>这一章节包含了有关如何以一种“持久化”的方式配置某些行为（包括在默认情况下打开守护进程）的信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The separation that Ant does between tasks and targets is not done by Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T123750Z" creationid="msdx" creationdate="20141111T123747Z">
        <seg>Gradle 没有像 Ant 那样对任务和目标进行分离。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The setting is particularly useful for tweaking memory settings.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141120T052003Z" creationid="msdx" creationdate="20141120T052003Z">
        <seg>该设置对调整内存设置特别有用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The settings file gets executed during the initialization phase.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T024827Z" creationid="haohang" creationdate="20160519T024722Z">
        <seg>这个配置文件会在初始化阶段执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The settings file is determined by Gradle via a naming convention.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T024624Z" creationid="haohang" creationdate="20160519T024624Z">
        <seg>这个设置文件是由 Gradle 通过一种命名约定来决定的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The signature file will be placed alongside the artifact being signed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160126T140514Z" creationid="95" creationdate="20160126T140514Z">
        <seg>签名文件将和被签名的 artifact 放在一起。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The signature files will be placed alongside the artifacts being signed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160109T072522Z" creationid="95" creationdate="20160109T072522Z">
        <seg>签名文件将和被签名的artifacts放在一起。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The signing plugin adds a &lt;c0&gt;signing.signPom()&lt;/c0&gt; (see: &lt;a1&gt;&lt;c2&gt;SigningExtension.signPom()&lt;/c2&gt;&lt;/a1&gt;) method that can be used in the &lt;c3&gt;beforeDeployment()&lt;/c3&gt; block in your upload task configuration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160126T145230Z" creationid="95" creationdate="20160126T145230Z">
        <seg>签名插件添加了一个&lt;c0&gt;signing.signPom()&lt;/c0&gt; （请参见： &lt;a1&gt; &lt;c2&gt;SigningExtension.signPom()&lt;/c2&gt;&lt;/a1&gt;）方法，这个方法可以在你的上传任务配置的&lt;c3&gt;beforeDeployment()&lt;/c3&gt;块中使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The signing plugin adds the ability to digitally sign built files and artifacts.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160108T150522Z" creationid="95" creationdate="20160106T145927Z">
        <seg>签名插件添加了对构件的文件和artifacts进行数字签名的功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The signing plugin currently only provides support for generating &lt;a0&gt;PGP signatures&lt;/a0&gt; (which is the signature format &lt;a1&gt;required for publication to the Maven Central Repository&lt;/a1&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160108T151040Z" creationid="95" creationdate="20160108T151040Z">
        <seg>签名插件目前只提供了生成&lt;a0&gt;PGP 签名&lt;/a0&gt;的支持（这是&lt;a1&gt;发布到Maven 中央库所需的&lt;/a1&gt;签名格式）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The simple Gradle tasks are like Ant's targets and the enhanced Gradle tasks also include the Ant task aspects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T123839Z" creationid="msdx" creationdate="20141111T123839Z">
        <seg>简单的 Gradle 任务就像 Ant 的目标，而增强的 Gradle 任务还包括 Ant 任务方面的内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The simple rule mentioned already above is: Execute all tasks down the hierarchy which have this name.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160715T090953Z" creationid="haohang" creationdate="20160715T090953Z">
        <seg>上面已经提到的简单的规则是︰ 执行在该层次结构下具体该名字的所有任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The skip Sonar analysis for a particular subproject, set &lt;c0&gt;sonarRunner.skipProject&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150519T124728Z" creationid="msdx" creationdate="20150519T124728Z">
        <seg>对于一个特定的子项目，要跳过 Sonar 分析，可以设置&lt;c0&gt;sonarRunner.skipProject&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The source directories containing the ANTLR grammar files of this source set.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T102927Z" creationid="haohang" creationdate="20150625T102927Z">
        <seg>该源目录包含该 source set 中的 ANTLR 语法文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The source directories containing the Groovy source files of this source set.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T093355Z" creationid="msdx" creationdate="20150429T093155Z">
        <seg>源目录包含该 source set 中的 Groovy 源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The source directories containing the Java source files of this source set.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T052604Z" creationid="Administrator" creationdate="20150427T052604Z">
        <seg>该源目录包含了此源集的所有Java源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The source directories containing the Scala source files of this source set.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150430T154839Z" creationid="msdx" creationdate="20150430T154839Z">
        <seg>源目录包含该 source set 中的 Scala 源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The source directories containing the resources of this source set.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T052901Z" creationid="Administrator" creationdate="20150427T052901Z">
        <seg>该源目录包含了此源集的资源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The source set container works pretty much the same way as other containers, such as &lt;c4&gt;tasks&lt;/c4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T050716Z" creationid="Administrator" creationdate="20150427T050716Z">
        <seg>源集容器的使用方式几乎与其他容器一样，例如&lt;c4&gt;tasks&lt;/c4&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The standard project dependencies are supported and makes relevant projects configured.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160522T124553Z" creationid="95" creationdate="20160522T124420Z">
        <seg>标准项目的依赖也被支持，并且使相关的项目也被配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The storage path for a downloaded artifact includes the SHA1 checksum, meaning that 2 artifacts with the same name but different content can easily be cached.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T042727Z" creationid="95" creationdate="20151129T042324Z">
        <seg>下载的构件的存储路径包括了 SHA1 校验和，意味着 2 个具有相同名称但内容不同的构件可以很容易地被缓存。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The subset is determined by the task name arguments passed to the &lt;s0&gt;&lt;s1&gt;gradle&lt;/s1&gt;&lt;/s0&gt; command and the current directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T024458Z" creationid="haohang" creationdate="20160519T024458Z">
        <seg>这个子集是由传递给&lt;s0&gt;&lt;s1&gt;gradle&lt;/s1&gt;&lt;/s0&gt;命令的任务名称参数和当前目录所决定的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The suppleness and richness of Gradle finally allows you to apply common design principles to your build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141101T124838Z" creationid="msdx" creationdate="20141101T124838Z">
        <seg>Gradle的灵活和丰富性最终能够让你将觉的设计原则应用到你的构建当中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The supplied object's &lt;c4&gt;toString()&lt;/c4&gt; value is used as the file path.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T143001Z" creationid="msdx" creationdate="20141112T143001Z">
        <seg>而所提供的这个对象的&lt;c4&gt;tostring()&lt;/c4&gt;方法的值会作为文件路径。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The supported tool chain types are:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T091206Z" creationid="haohang" creationdate="20160408T091206Z">
        <seg>支持的工具链类型有︰</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The task aggregates the reports for all tasks that implement the &lt;a1&gt;&lt;c2&gt;Reporting&lt;/c2&gt;&lt;/a1&gt; interface from &lt;s3&gt;&lt;e4&gt;all projects&lt;/e4&gt;&lt;/s3&gt; in the build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150713T095514Z" creationid="haohang" creationdate="20150713T095514Z">
        <seg>该任务为在 &lt;s3&gt;&lt;e4&gt;all projects&lt;/e4&gt;&lt;/s3&gt; 中实现了 &lt;a1&gt;&lt;c2&gt;Reporting&lt;/c2&gt;&lt;/a1&gt; 接口的所有任务聚合了报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The task can be configured using its API (see &lt;a0&gt;&lt;c1&gt;Copy&lt;/c1&gt;&lt;/a0&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T091910Z" creationid="msdx" creationdate="20141110T091902Z">
        <seg>可以使用它的 API 来配置这个任务 （见&lt;a0&gt;&lt;c1&gt;Copy&lt;/c1&gt;&lt;/a0&gt;）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The task class is visible to every build script used by the build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T144429Z" creationid="95" creationdate="20160814T144415Z">
        <seg>这个任务类在该构建所使用的每一个构建脚本当中都是可见的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The task dependencies declared via task path are supported and cause relevant projects configured.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160522T124703Z" creationid="95" creationdate="20160522T124703Z">
        <seg>通过任务路径定义的任务依赖也被支持，并且会导致相关的项目被配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The task generates the other results from these binary results.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T142024Z" creationid="msdx" creationdate="20150428T142024Z">
        <seg>这个任务会从这些二进制结果生成其他的结果。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The task has an &lt;c0&gt;ignoreFailures&lt;/c0&gt; property to control the behavior when tests fail.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T014950Z" creationid="Administrator" creationdate="20150428T014950Z">
        <seg>该任务有一个&lt;c0&gt;ignoreFailures&lt;/c0&gt;属性，用以控制测试失败时的行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The task is added by the Base plugin which is implicitly applied by the Java plugin.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T082745Z" creationid="Administrator" creationdate="20150426T082745Z">
        <seg>该任务由Base插件添加，并由Java插件隐式实现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The task type extends the &lt;c2&gt;JavaCompile&lt;/c2&gt; task (see &lt;a3&gt;Section 23.11, “CompileJava”&lt;/a3&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T094315Z" creationid="msdx" creationdate="20150429T094315Z">
        <seg>这个task 的类型继承自&lt;c2&gt;JavaCompile&lt;/c2&gt; task（见&lt;a3&gt;第 23.11 节，“CompileJava”&lt;/a3&gt;）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The task's &lt;c0&gt;inputs&lt;/c0&gt; property is of type &lt;a1&gt;&lt;c2&gt;TaskInputs&lt;/c2&gt;&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T061500Z" creationid="msdx" creationdate="20141111T061500Z">
        <seg>任务的 &lt;c0&gt;inputs&lt;/c0&gt; 属性是 &lt;a1&gt;&lt;c2&gt;TaskInputs&lt;/c2&gt;&lt;/a1&gt;类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The task's &lt;c3&gt;outputs&lt;/c3&gt; property is of type &lt;a4&gt;&lt;c5&gt;TaskOutputs&lt;/c5&gt;&lt;/a4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T061516Z" creationid="msdx" creationdate="20141111T061516Z">
        <seg>任务的 &lt;c3&gt;outputs&lt;/c3&gt; 属性是 &lt;a4&gt;&lt;c5&gt;TaskOutputs&lt;/c5&gt;&lt;/a4&gt;类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The task's actions are only executed if the predicate evaluates to true.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T020421Z" creationid="msdx" creationdate="20141111T020421Z">
        <seg>如果断言结果为 true，才会执行任务的操作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The tasks recognize existing IDEA files, and merge them with the generated content.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T073325Z" creationid="haohang" creationdate="20150625T073325Z">
        <seg>该任务会识别现有的 IDEA 文件，并将它们与生成的内容进行合并。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The tasks which produce the artifacts in configuration &lt;e0&gt;&lt;c1&gt;ConfigurationName&lt;/c1&gt;&lt;/e0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T082623Z" creationid="Administrator" creationdate="20150426T082623Z">
        <seg>使用配置&lt;e0&gt;&lt;c1&gt;ConfigurationName&lt;/c1&gt;&lt;/e0&gt;生成构件的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The tasks which produce the artifacts in the &lt;c0&gt;archives&lt;/c0&gt; configuration, including &lt;c1&gt;jar&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T082242Z" creationid="Administrator" creationdate="20150426T005010Z">
        <seg>使用&lt;c0&gt;archives&lt;/c0&gt;的配置生成构件的任务，包括&lt;c1&gt;jar&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The tasks which uploads the artifacts in configuration &lt;e0&gt;&lt;c1&gt;ConfigurationName&lt;/c1&gt;&lt;/e0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T082827Z" creationid="Administrator" creationdate="20150426T082827Z">
        <seg>使用配置&lt;e0&gt;&lt;c1&gt;ConfigurationName&lt;/c1&gt;&lt;/e0&gt;上传构件的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The test process sets the &lt;c0&gt;org.gradle.test.worker&lt;/c0&gt; system property to a unique identifier for that test process, which you can use, for example, in files names or other resource identifiers.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T014914Z" creationid="Administrator" creationdate="20150428T013313Z">
        <seg>测试进程程会为其将&lt;c0&gt;org.gradle.test.worker&lt;/c0&gt;系统属性设置为一个唯一标识符，这个标识符可以用于文件名称或其他资源标识符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The test task provides a &lt;a0&gt;&lt;c1&gt;Test.getDebug()&lt;/c1&gt;&lt;/a0&gt; property that can be set to launch to make the JVM wait for a debugger to attach to port 5005 before proceeding with test execution.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T015719Z" creationid="Administrator" creationdate="20150428T015719Z">
        <seg>test任务提供了一个&lt;a0&gt;&lt;c1&gt;Test.getDebug()&lt;/c1&gt;&lt;/a0&gt;属性，可以设置为启动，使JVM在执行测试之前，等待一个debugger连接到它的5005端口上。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The trick is to use only artifact dependencies and group them in lists.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151201T064258Z" creationid="haohang" creationdate="20151201T064126Z">
        <seg>诀窍是只使用构件依赖，并在列表中对它们进行分组。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The type is specified by supplying a &lt;c2&gt;--type&lt;/c2&gt; argument value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T074101Z" creationid="haohang" creationdate="20150707T074101Z">
        <seg>类型通过提供一个 &lt;c2&gt;--type&lt;/c2&gt; 参数值指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The value can be set to either &lt;c0&gt;jdk&lt;/c0&gt; or &lt;c1&gt;jre&lt;/c1&gt; location, however, depending on what does your build do, &lt;c2&gt;jdk&lt;/c2&gt; is safer.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141120T051921Z" creationid="msdx" creationdate="20141120T051921Z">
        <seg>这个值可以设置为&lt;c0&gt;jdk&lt;/c0&gt;或&lt;c1&gt;jre&lt;/c1&gt;的位置，不过，根据你的构建所做的，选择 &lt;c2&gt;jdk&lt;/c2&gt;会更安全。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The various native binary plugins add support for building native software components from C++, C, Objective-C, Objective-C++ and Assembler sources.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160128T151845Z" creationid="95" creationdate="20160128T151845Z">
        <seg>不同的原生二进制插件添加了对从C++，C，Objective-C，Objective-C++以及汇编源文件构建原生软件组件的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The version of a library must be easy to recognize in the filename.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150716T092156Z" creationid="haohang" creationdate="20150716T092156Z">
        <seg>在文件名中库的版本必须是容易辨认的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The version portion of the archive file name.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T160404Z" creationid="msdx" creationdate="20141113T160404Z">
        <seg>归档文件的名称中的版本部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The web application source directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T092326Z" creationid="msdx" creationdate="20150503T092326Z">
        <seg>Web 应用程序的源目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The workspace file can effectively only be manipulated via the &lt;c0&gt;withXml&lt;/c0&gt; hook because its corresponding domain object is essentially empty.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T073249Z" creationid="haohang" creationdate="20150625T073249Z">
        <seg>工作区文件可以有效地只通过&lt;c0&gt;withXml&lt;/c0&gt; hook 来操作，因为其相应的域对象实际上是空的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The wrapper plugin adds the following tasks to the project:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150710T012913Z" creationid="haohang" creationdate="20150710T012913Z">
        <seg>Wrapper 插件向project 中添加了以下任务：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The wrapper plugin is currently &lt;a0&gt;incubating&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T095218Z" creationid="msdx" creationdate="20150503T094854Z">
        <seg>Wrapper 插件目前还是&lt;a0&gt;孵化中&lt;/a0&gt;状态。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Then Gradle looks for tasks with names equal to those passed as command line arguments.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160520T123810Z" creationid="95" creationdate="20160520T123658Z">
        <seg>然后 Gradle 会查找与命令行传进来的参数相同的任务名。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Then we will look at creating a standalone project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T145315Z" creationid="95" creationdate="20160814T145315Z">
        <seg>然后我们会看看创建一个单独的项目的方式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Then you could move your dependency declarations from the Ant script to your build file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141114T142726Z" creationid="msdx" creationdate="20141114T142726Z">
        <seg>然后，可以将您的依赖声明从 Ant 脚本移到您的构建文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Then, according to the task name arguments and the current dir, Gradle filters the tasks which should be executed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160715T075655Z" creationid="haohang" creationdate="20160715T075655Z">
        <seg>然后，根据任务名称参数和当前目录，Gradle 过滤出应该执行的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Then, you can run the application by running &lt;s0&gt;&lt;c1&gt;gradle run&lt;/c1&gt;&lt;/s0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150702T104012Z" creationid="haohang" creationdate="20150702T104012Z">
        <seg>然后，你可以通过执行 &lt;s0&gt;&lt;c1&gt;gradle run&lt;/c1&gt;&lt;/s0&gt; 来运行这个应用程序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are 2 ways that you can provide the domain for authenticating to a NTLM proxy:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141121T142537Z" creationid="msdx" creationdate="20141121T142537Z">
        <seg>有两种方法可以向 NTLM 代理提供验证域：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are Gradle builds with a hierarchy of hundreds of subprojects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160522T120720Z" creationid="95" creationdate="20160522T120720Z">
        <seg>存在着一些项目，它们在层次结构上有上百个的子项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are a few variations on this style, which you may need to use in certain situations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T022941Z" creationid="msdx" creationdate="20141110T021152Z">
        <seg>在某些情况中，你可能需要使用这种关键字风格的几种不同的变式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are a number of plugins included in the Gradle distribution.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141126T120628Z" creationid="msdx" creationdate="20141126T120628Z">
        <seg>Gradle 的发行包中有大量的插件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are a number of properties which control how the test process is launched.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T140656Z" creationid="Administrator" creationdate="20150427T140656Z">
        <seg>有大量的属性用于控制测试进程的启动。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are a number of properties which you can set on an archive task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T155349Z" creationid="msdx" creationdate="20141113T155349Z">
        <seg>这里有很多你可以在归档任务中设置的属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are a number of ways of doing this.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T080654Z" creationid="msdx" creationdate="20141110T080654Z">
        <seg>对这样的情况，有很多种方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are a number of ways that you can influence how Gradle resolves dependencies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T054022Z" creationid="95" creationdate="20151115T054022Z">
        <seg>有许多种方式都可以影响到Gradle解析依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are build tools that build up such a dependency graph as they execute their tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160518T032229Z" creationid="haohang" creationdate="20160518T032204Z">
        <seg>有许多构建工具在它们执行任务时生成了依赖关系图。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are five elements you need to remember: &lt;c2&gt;allprojects&lt;/c2&gt;, &lt;c3&gt; subprojects&lt;/c3&gt;, &lt;c4&gt;evaluationDependsOn&lt;/c4&gt;, &lt;c5&gt;evaluationDependsOnChildren&lt;/c5&gt; and project lib dependencies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160727T053941Z" creationid="haohang" creationdate="20160727T053835Z">
        <seg>你需要记住的是五个元素：&lt;c2&gt;allprojects&lt;/c2&gt;，&lt;c3&gt; subprojects&lt;/c3&gt;，&lt;c4&gt;evaluationDependsOn&lt;/c4&gt;， &lt;c5&gt;evaluationDependsOnChildren&lt;/c5&gt; 和项目库依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are many configuration options for the Maven deployer.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T135016Z" creationid="95" creationdate="20160105T135016Z">
        <seg>Maven deployer有很多配置选项。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are many options for the protocol to communicate with the repository (e.g. filesystem, http, ssh, ...)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T134247Z" creationid="95" creationdate="20151006T134247Z">
        <seg>对于与仓库通信的协议，有很多的选项（比如文件系统，http， ssh……）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are many situation when you want to use the latest version of a particular dependency, or the latest in a range of versions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T010436Z" creationid="haohang" creationdate="20150722T010436Z">
        <seg>有许多情况，是你想要使用一个特定依赖的最新版本，或者是某个版本范围内的最新版。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are many tools out there which still use standard output for logging.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T034239Z" creationid="msdx" creationdate="20141116T131106Z">
        <seg>有很多的工具仍然在使用标准输出进行日志记录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are many use cases for custom configurations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T075434Z" creationid="haohang" creationdate="20150722T075434Z">
        <seg>关于自定义配置，有许多的用例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are other situations where it is necessary to fine-tune dependency declarations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150730T035450Z" creationid="haohang" creationdate="20150730T035443Z">
        <seg>还有一些其他的情况，需要调整依赖声明。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are separate settings for HTTPS.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141121T141755Z" creationid="msdx" creationdate="20141121T141755Z">
        <seg>对于 HTTPS 有单独的设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are several different types of dependencies that you can declare:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T080029Z" creationid="haohang" creationdate="20150722T080029Z">
        <seg>你可以声明几种不同类型的依赖：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are several different types of repositories you can declare:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T094100Z" creationid="haohang" creationdate="20150807T094100Z">
        <seg>有几种不同类型的存储库可以声明：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are several places where you can put the source for the task class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T143944Z" creationid="95" creationdate="20160814T143944Z">
        <seg>有几个地方可以让你放任务类的源码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are several ways to get an Ant reference:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T062703Z" creationid="msdx" creationdate="20141116T062703Z">
        <seg>有几种方法可以获取 Ant 引用：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are several ways to get the value of these properties.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T062137Z" creationid="msdx" creationdate="20141116T062137Z">
        <seg>有几种方法来获取这些属性值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are several ways to set an Ant property, so that the property can be used by Ant tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T061236Z" creationid="msdx" creationdate="20141116T061236Z">
        <seg>有几种方法来设置 Ant 属性，以便使该属性被 Ant 任务使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are several ways to set an Ant reference:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T062633Z" creationid="msdx" creationdate="20141116T062633Z">
        <seg>有几种方法可以设置 Ant 引用：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are several ways you can define the dependencies of a task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T100107Z" creationid="msdx" creationdate="20141110T100020Z">
        <seg>定义任务的依赖关系有几种方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are two Gradle-specific log levels, in addition to the ones you might normally see.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T032439Z" creationid="msdx" creationdate="20141116T070533Z">
        <seg>除了那些您可能通常都会看到的日志级别之外，还有两个 Gradle 特定日志级别。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are two kinds of variables that can be declared in a build script: local variables and extra properties.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T045426Z" creationid="msdx" creationdate="20141108T044824Z">
        <seg>有两类可以在生成脚本中声明的变量： 局部变量和额外属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are two ordering rules available: "&lt;s0&gt;&lt;e1&gt;must run after&lt;/e1&gt;&lt;/s0&gt;" and "&lt;s2&gt;&lt;e3&gt;should run after&lt;/e3&gt;&lt;/s2&gt;".</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T145609Z" creationid="msdx" creationdate="20141110T145609Z">
        <seg>有两种排序规则是可用的："&lt;s0&gt;&lt;e1&gt;必须在之后运行&lt;/e1&gt;&lt;/s0&gt;"和"&lt;s2&gt;&lt;e3&gt;应该在之后运行&lt;/e3&gt;&lt;/s2&gt;"。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is a 1:1 mapping from the Ant/Ivy log levels to the Gradle log levels, except the Ant/Ivy &lt;c0&gt;TRACE&lt;/c0&gt; log level, which is mapped to Gradle &lt;c1&gt;DEBUG&lt;/c1&gt; log level.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T130959Z" creationid="msdx" creationdate="20141116T130816Z">
        <seg>从 Ant/Ivy 的日志级别到 Gradle 的日志级别是一对一的映射，除了 Ant/Ivy 的 &lt;c0&gt;TRACE&lt;/c0&gt;级别之外，它是映射到Gradle 的 &lt;c1&gt;DEBUG&lt;/c1&gt; 级别的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is a better solution (works only if the tasks that need the directory have a &lt;s1&gt;&lt;e2&gt;dependsOn&lt;/e2&gt;&lt;/s1&gt; relationship):</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T073209Z" creationid="msdx" creationdate="20141109T073209Z">
        <seg>这里有一个更好的解决方案 (仅适用于这些需要这个目录的任务有着&lt;s1&gt;&lt;e2&gt;dependsOn&lt;/e2&gt;&lt;/s1&gt;的关系的情况)：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is a common situation, that multiple tasks depend on the existence of a directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T072804Z" creationid="msdx" creationdate="20141109T072804Z">
        <seg>有一个常见的情况是，多个任务都依赖于某个目录的存在。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is a daemon log file, which by default is located in the Gradle user home directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141119T030738Z" creationid="msdx" creationdate="20141119T030738Z">
        <seg>默认情况下位于 Gradle 用户主目录有一个守护进程的日志文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is a map-based syntax for defining an artifact using a file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151226T091443Z" creationid="95" creationdate="20151226T091301Z">
        <seg>有一个基于map的语法来定义一个构件使用文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is a string notation and a map notation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150724T034650Z" creationid="haohang" creationdate="20150724T034650Z">
        <seg>有 string 标记法和 map 标记法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is a very simple mapping from Ant's &lt;c4&gt;build.xml&lt;/c4&gt; format to Groovy, which is explained below.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141114T143526Z" creationid="msdx" creationdate="20141114T143526Z">
        <seg>从 Ant 的 &lt;c4&gt;build.xml&lt;/c4&gt;格式到 Groovy 之间有一个非常简单的映射，下面解释。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is also a &lt;c3&gt;sourceSets { }&lt;/c3&gt; script block, which you can pass a closure to configure the source set container.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T050628Z" creationid="Administrator" creationdate="20150427T050628Z">
        <seg>除此之后，还有一个&lt;c3&gt;sourceSets {}&lt;/c3&gt;的脚本块，可以传入一个闭包来配置源集容器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is also a filter so that uncommon tasks can be hidden.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T151134Z" creationid="msdx" creationdate="20141105T151134Z">
        <seg>这里还提供了一个过滤器，可以把比较少用的任务隐藏。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is also a stand-alone &lt;a0&gt;&lt;c1&gt;TestReport&lt;/c1&gt;&lt;/a0&gt; task type which can generate the HTML test report from the binary results generated by one or more &lt;c2&gt;Test&lt;/c2&gt; task instances.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T142619Z" creationid="msdx" creationdate="20150428T142619Z">
        <seg>这里还有一个独立的&lt;a0&gt;&lt;c1&gt;TestReport&lt;/c1&gt;&lt;/a0&gt;任务类型，它可以从一个或多个&lt;c2&gt;Test&lt;/c2&gt;任务实例生成的二进制结果中生成 HTML 测试报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is also an aggregating task that depends on all report tasks added by the plugin.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150626T095859Z" creationid="haohang" creationdate="20150626T095859Z">
        <seg>这里也有一个聚合的任务，它依赖于由该插件添加的所有的报告任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is an alternative syntax for defining tasks, which you may prefer to use:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T023119Z" creationid="msdx" creationdate="20141110T022749Z">
        <seg>对于定义任务，有一种替代的语法你可能更愿意使用：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is another way of configuring a task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T092255Z" creationid="msdx" creationdate="20141110T092255Z">
        <seg>还有另一种配置任务的方式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is another way to deal with transitive dependencies &lt;s0&gt;&lt;e1&gt;without&lt;/e1&gt;&lt;/s0&gt; XML descriptor files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151201T063920Z" creationid="haohang" creationdate="20151201T063920Z">
        <seg>还有另外一种方法，用于处理&lt;s0&gt;&lt;e1&gt;没有&lt;/e1&gt;&lt;/s0&gt;XML 描述符文件的传递依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is even a third dependency.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T082547Z" creationid="haohang" creationdate="20160726T082547Z">
        <seg>这里甚至有第三个依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is much more to say about multi-project builds in the chapter dedicated to this topic (see &lt;a0&gt;Chapter 56, &lt;i1&gt;Multi-project Builds&lt;/i1&gt;&lt;/a0&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T030443Z" creationid="haohang" creationdate="20160519T030443Z">
        <seg>关于多项目构建，在这一主题的章节中有更多的介绍（参见 &lt;a0&gt;第 56 章, &lt;i1&gt;多项目构建&lt;/i1&gt;&lt;/a0&gt;)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is no need to create a “stub” &lt;c3&gt;build.gradle&lt;/c3&gt; file in order to apply the plugin.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T071413Z" creationid="haohang" creationdate="20150707T071243Z">
        <seg>那里不需要创建一个“存根” &lt;c3&gt;build.gradle&lt;/c3&gt;文件以应用该插件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is some more work to do if you need support for other protocols than &lt;c0&gt;file&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T134040Z" creationid="95" creationdate="20160104T154657Z">
        <seg>如果你需要支持&lt;c0&gt;文件&lt;/c0&gt;之外的其他协议，那么你还需要再做一些事情。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Therefore &lt;c0&gt;:consumer:action&lt;/c0&gt; is executed before &lt;c1&gt;:producer:action&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T063451Z" creationid="haohang" creationdate="20160718T063451Z">
        <seg>因此&lt;c0&gt;:consumer:action&lt;/c0&gt;会在&lt;c1&gt;:producer:action&lt;/c1&gt;之前执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Therefore it is likely that you don't have to define configuration dependencies explicitly.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160722T090403Z" creationid="haohang" creationdate="20160722T090403Z">
        <seg>因此，很可能你不需要显式地定义配置依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Therefore only multi-project builds can take advantage of parallel execution.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T091406Z" creationid="haohang" creationdate="20160726T091406Z">
        <seg>因此并行执行只对多项目构建有用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Therefore the &lt;c2&gt;consumer&lt;/c2&gt; project is evaluated before the &lt;c3&gt;producer&lt;/c3&gt; project and the &lt;c4&gt;key&lt;/c4&gt; value of the &lt;c5&gt;producer&lt;/c5&gt; is set &lt;s6&gt;&lt;e7&gt;after&lt;/e7&gt;&lt;/s6&gt; it is read by the &lt;c8&gt;consumer&lt;/c8&gt; project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T074901Z" creationid="haohang" creationdate="20160718T074901Z">
        <seg>因此&lt;c2&gt;consumer&lt;/c2&gt;项目评估会在&lt;c3&gt;producer&lt;/c3&gt;项目之前，并且&lt;c5&gt;producer&lt;/c5&gt;的&lt;c4&gt;key&lt;/c4&gt;值在它被&lt;c8&gt;consumer&lt;/c8&gt;项目读取&lt;s6&gt;&lt;e7&gt;后&lt;/e7&gt;&lt;/s6&gt;设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Therefore they are strictly speaking &lt;s0&gt;&lt;e1&gt;build configuration scripts&lt;/e1&gt;&lt;/s0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160518T032506Z" creationid="haohang" creationdate="20160518T032506Z">
        <seg>因此严格来说，它们都是&lt;s0&gt;&lt;e1&gt;构建配置脚本&lt;/e1&gt;&lt;/s0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Therefore we have no circular dependency.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T082647Z" creationid="haohang" creationdate="20160726T082647Z">
        <seg>因此，我们没有循环依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Therefore you can't use the &lt;c5&gt;-P&lt;/c5&gt; option.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T141907Z" creationid="msdx" creationdate="20141109T141839Z">
        <seg>那么，您就不能使用&lt;c5&gt;-P&lt;/c5&gt;选项。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Therefore, Gradle will not fail when an unknown property is set.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T065342Z" creationid="msdx" creationdate="20141108T065342Z">
        <seg>因此，当未知的属性被设置时，Gradle不会构建失败。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These JVM arguments are applied to the &lt;c1&gt;run&lt;/c1&gt; task and also considered in the generated start scripts of your distribution.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150702T104903Z" creationid="haohang" creationdate="20150702T104903Z">
        <seg>这些 JVM 参数会被应用于&lt;c1&gt;run&lt;/c1&gt; 任务，以及生成的 distrubution 的启动脚本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These are evaluated relative to the project directory, as per the &lt;c5&gt;file()&lt;/c5&gt; method, described in &lt;a6&gt;Section 16.1, “Locating files”&lt;/a6&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T150716Z" creationid="msdx" creationdate="20141112T145544Z">
        <seg>根据&lt;a6&gt; 16.1 章节 “定位文件”&lt;/a6&gt;里对&lt;c5&gt;file()&lt;/c5&gt;方法的描述，它的结果会被计算为相对于项目目录的相对路径。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These are flattened and the contents converted to &lt;c8&gt;File&lt;/c8&gt; instances.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T161013Z" creationid="msdx" creationdate="20141112T151716Z">
        <seg>它们会被展开，并且内容会转换为 &lt;c8&gt;File&lt;/c8&gt; 实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These are flattened and the contents included in the file collection.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T161047Z" creationid="msdx" creationdate="20141112T160955Z">
        <seg>它们会被展开，并且内容会被包含在文件集合内。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These are listed below in &lt;a0&gt;Table 16.1, “Archive tasks - naming properties”&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T155425Z" creationid="msdx" creationdate="20141113T155425Z">
        <seg>它们在以下的&lt;a0&gt;表 16.1，"存档任务-命名属性"&lt;/a0&gt;中列出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These are listed below.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141126T120649Z" creationid="msdx" creationdate="20141126T120649Z">
        <seg>如下列所示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These binaries may vary based on the tool chain used to build, the compiler/linker flags supplied, the dependencies provided, or additional source files provided.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160219T065753Z" creationid="haohang" creationdate="20160219T065753Z">
        <seg>基于构建所使用的工具链，提供的编译器/链接器标志，提供的依赖或其他源文件，这些二进制文件可能会发生变化。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These can be complex commands (anything that's legal to Gradle) and you can provide them with a display name.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T154608Z" creationid="msdx" creationdate="20141105T154449Z">
        <seg>这些命令可以是复杂的命令（只要它们符合 Gradle 的语法），你可以给它们设置一个显示名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These convention properties are provided by a convention object of type &lt;a0&gt;&lt;c1&gt;ProjectReportsPluginConvention&lt;/c1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T062311Z" creationid="haohang" creationdate="20150628T062311Z">
        <seg>这些属性由一个&lt;a0&gt;&lt;c1&gt;ProjectReportsPluginConvention&lt;/c1&gt;&lt;/a0&gt; 的约定对象提供。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These convention properties are provided by a convention object of type &lt;a0&gt;&lt;c1&gt;ScalaSourceSet&lt;/c1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150430T154917Z" creationid="msdx" creationdate="20150430T154917Z">
        <seg>这些属性由一个&lt;a0&gt;&lt;c1&gt;ScalaSourceSet&lt;/c1&gt;&lt;/a0&gt; 的约定对象提供。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These digital signatures can then be used to prove who built the artifact the signature is attached to as well as other information such as when the signature was generated.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160108T150721Z" creationid="95" creationdate="20160108T150721Z">
        <seg>这些数字签名可以用于证明使用这个签名的artifact是谁构建的，以及其他的信息，比如签名是什么时候生成的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These imports are customizable (see &lt;a3&gt;Appendix E, &lt;i4&gt;Existing IDE Support and how to cope without it&lt;/i4&gt;&lt;/a3&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T124331Z" creationid="msdx" creationdate="20141111T124331Z">
        <seg>这些导入是可自定义的 （见&lt;a3&gt;附录 E，&lt;i4&gt;现有的 IDE 支持和没有支持时如何应对&lt;/i4&gt;&lt;/a3&gt;）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These items must be supplied as the property projects &lt;c0&gt;signing.keyId&lt;/c0&gt;, &lt;c1&gt;signing.password&lt;/c1&gt; and &lt;c2&gt;signing.secretKeyRingFile&lt;/c2&gt; respectively.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160108T152309Z" creationid="95" creationdate="20160108T152309Z">
        <seg>这些条目必须分别作为属性项目&lt;c0&gt;signing.keyId&lt;/c0&gt;、 &lt;c1&gt;signing.password&lt;/c1&gt;和&lt;c2&gt;signing.secretKeyRingFile&lt;/c2&gt; 进行提供。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These libraries form a 'releasable unit', designed and intended to be used as a whole.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T060629Z" creationid="95" creationdate="20151115T060629Z">
        <seg>这些库形成一个“可发布的单位”，被设计并打算作为一个整体使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These method accept a task instance, a task name or any other input accepted by &lt;a4&gt;&lt;c5&gt;Task.dependsOn()&lt;/c5&gt;&lt;/a4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T013829Z" creationid="msdx" creationdate="20141111T013805Z">
        <seg>这些方法接受一个任务实例、 任务名称或&lt;a4&gt;&lt;c5&gt;Task.dependsOn()&lt;/c5&gt;&lt;/a4&gt;所接受的任何其他输入作为参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These methods return a &lt;c4&gt;FileTree&lt;/c4&gt; instance which you can use like any other file tree or file collection.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T122555Z" creationid="msdx" creationdate="20141113T122517Z">
        <seg>这些方法返回一个&lt;c4&gt;FileTree&lt;/c4&gt;实例，您可以像使用任何其他文件树或文件集合一样使用它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These model objects are then merged with the existing Eclipse XML metadata to ultimately generate new metadata.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T100558Z" creationid="haohang" creationdate="20150624T100558Z">
        <seg>然后把这些模型对象与现有的 Eclipse XML 元数据进行合并，最终生成新的元数据。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These notifications generally take 2 forms: You can either implement a particular listener interface, or you can provide a closure to execute when the notification is fired.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T020904Z" creationid="95" creationdate="20160520T124530Z">
        <seg>这些通知一般采取两种形式︰你也可以实现一个特定的监听接口，或提供一个用于在收到通知时执行的闭包。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These plugins add support for various languages which can be compiled for and executed in the JVM.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141126T120750Z" creationid="msdx" creationdate="20141126T120750Z">
        <seg>这些插件添加了让各种语言可以被编译和在JVM执行的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These plugins add support for various languages:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141209T073731Z" creationid="msdx" creationdate="20141209T073731Z">
        <seg>这些插件添加了对多种语言的支持：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These plugins form the basic building blocks which the other plugins are assembled from.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T040713Z" creationid="Administrator" creationdate="20150425T040713Z">
        <seg>这些插件组成了基本的构建块，其他插件都由此组装而来。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These plugins provide help with your software development process.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T032417Z" creationid="Administrator" creationdate="20150425T032417Z">
        <seg>这些插件提供一些软件开发过程上的帮助。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These plugins provide some integration with various runtime technologies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T030746Z" creationid="Administrator" creationdate="20150425T030746Z">
        <seg>以下这些插件提供了一些与各种运行时技术的集成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These properties are provided by a &lt;a0&gt;&lt;c1&gt;EarPluginConvention&lt;/c1&gt;&lt;/a0&gt; convention object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T142450Z" creationid="msdx" creationdate="20150504T142450Z">
        <seg>这些属性由一个&lt;a0&gt;&lt;c1&gt;EarPluginConvention&lt;/c1&gt;&lt;/a0&gt; 公约对象提供。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These properties are provided by a &lt;a0&gt;&lt;c1&gt;JettyPluginConvention&lt;/c1&gt;&lt;/a0&gt; convention object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T151414Z" creationid="msdx" creationdate="20150504T151414Z">
        <seg>这些属性都由一个&lt;a0&gt;&lt;c1&gt;JettyPluginConvention&lt;/c1&gt;&lt;/a0&gt;公约对象提供。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These properties are provided by a &lt;a0&gt;&lt;c1&gt;MavenPluginConvention&lt;/c1&gt;&lt;/a0&gt; convention object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151228T153211Z" creationid="95" creationdate="20151228T153211Z">
        <seg>这些属性由一个&lt;a0&gt;&lt;c1&gt;MavenPluginConvention&lt;/c1&gt;&lt;/a0&gt; 的约定对象提供。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These properties are provided by a &lt;a0&gt;&lt;c1&gt;WarPluginConvention&lt;/c1&gt;&lt;/a0&gt; convention object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T092346Z" creationid="msdx" creationdate="20150503T092329Z">
        <seg>这些属性由一个&lt;a0&gt;&lt;c1&gt;WarPluginConvention&lt;/c1&gt;&lt;/a0&gt;公约对象提供。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These properties are provided by a convention object of type &lt;a0&gt;&lt;c1&gt;GroovySourceSet&lt;/c1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T093953Z" creationid="msdx" creationdate="20150429T093953Z">
        <seg>这些属性由一个&lt;a0&gt;&lt;c1&gt;GroovySourceSet&lt;/c1&gt;&lt;/a0&gt; 的约定对象提供。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These properties are provided by convention objects of type &lt;a0&gt;&lt;c1&gt;JavaPluginConvention&lt;/c1&gt;&lt;/a0&gt;, &lt;a2&gt;&lt;c3&gt;BasePluginConvention&lt;/c3&gt;&lt;/a2&gt; and &lt;a4&gt;&lt;c5&gt;ReportingBasePluginConvention&lt;/c5&gt;&lt;/a4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T050405Z" creationid="Administrator" creationdate="20150427T050405Z">
        <seg>这些属性由&lt;a0&gt;&lt;c1&gt;JavaPluginConvention&lt;/c1&gt;&lt;/a0&gt;， &lt;a2&gt; &lt;c3&gt;BasePluginConvention&lt;/c3&gt;&lt;/a2&gt;和&lt;a4&gt;&lt;c5&gt;ReportingBasePluginConvention&lt;/c5&gt;&lt;/a4&gt;这些类型的常规对象提供。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These properties can be set directly in the build script; for example &lt;c0&gt; System.setProperty('http.proxyHost', 'www.somehost.org')&lt;/c0&gt; for the proxy host.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141121T141354Z" creationid="msdx" creationdate="20141121T141354Z">
        <seg>这些属性可以直接在构建脚本中设置；例如设置代理主机为 &lt;c0&gt;System.setProperty （'http.proxyHost', 'www.somehost.org'）&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These settings can be applied to all binaries, an individual binary, or selectively to a group of binaries based on some criteria.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160324T151733Z" creationid="95" creationdate="20160324T151733Z">
        <seg>这些设置可以应用于所有的二进制文件，单个二进制文件，或选择性地应用于基于某些条件的一组二进制文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These source files may include Java source files and resource files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T074210Z" creationid="Administrator" creationdate="20150425T074210Z">
        <seg>这些源文件可能包括 Java 源代码文件和资源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These test suite binaries can be configured in a similar way to any other binary instance:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T151023Z" creationid="95" creationdate="20160504T151023Z">
        <seg>这些测试套件二进制文件可以以一种类似的方式配置到任何其他二进制的实例︰</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>They all work the same way, so let's look at how you create a ZIP file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T150045Z" creationid="msdx" creationdate="20141113T145740Z">
        <seg>他们的工作方式都一样，所以让我们看看如何创建一个 ZIP 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>They also provide a very low level hook for working directly with the raw XML for adjustment before it is persisted, for fine tuning and configuration that the Eclipse plugin does not model.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T101116Z" creationid="haohang" creationdate="20150624T100839Z">
        <seg>他们还提供了一个非常低级别的hook，用于直接处理原始 XML 持久化之前的调整，微调和配置使 Eclipse 插件不进行建模。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>They are a replacement for a module descriptor in an external repository.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T091407Z" creationid="haohang" creationdate="20150801T091407Z">
        <seg>它们是外部库的模块描述符的替代者。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>They are available for you to use in your build files, and are listed here for completeness.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T040837Z" creationid="Administrator" creationdate="20150425T040837Z">
        <seg>它们可供你在你的构建文件中使用，并在此处完整列出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>They are joined by Gradle with the &lt;c0&gt;,&lt;/c0&gt; separator.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150526T064723Z" creationid="haohang" creationdate="20150526T064723Z">
        <seg>他们由 Gradle 使用&lt;c0&gt;,&lt;/c0&gt;分隔符连接。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>They are only visible in the scope where they have been declared.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T044944Z" creationid="msdx" creationdate="20141108T044944Z">
        <seg>它们只在定义它们的范围内可以被访问。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>They can be further customized via the &lt;a1&gt;&lt;c2&gt;MavenPom&lt;/c2&gt;&lt;/a1&gt; API.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T142526Z" creationid="95" creationdate="20160106T142526Z">
        <seg>它们可以通过&lt;a1&gt;&lt;c2&gt;MavenPom&lt;/c2&gt;&lt;/a1&gt; API 进一步定制化。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>They had only &lt;s2&gt;&lt;e3&gt;Configuration Dependencies&lt;/e3&gt;&lt;/s2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T062210Z" creationid="haohang" creationdate="20160718T062210Z">
        <seg>它们只有&lt;s2&gt;&lt;e3&gt;配置依赖&lt;/e3&gt;&lt;/s2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>They refer to a module in an external repository.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T102820Z" creationid="haohang" creationdate="20150722T102820Z">
        <seg>它们引用外部仓库中的模块。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>They take effect after a module's descriptor has been downloaded, but before it has been selected among all candidate versions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T092044Z" creationid="95" creationdate="20151115T092044Z">
        <seg>它们在模块描述符下载之后，被所有候选版本之间选择之前生效。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Think about a developer who decides to install version 3.0.5 of Hibernate on her machine to fix a critical security bug but forgets to notify others in the team of this change.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150716T092754Z" creationid="haohang" creationdate="20150716T092754Z">
        <seg>想一下一个开发人员决定在她的机器安装 3.0.5 的版本，以修复一个关键的安全 bug，但她忘记通知其他团队这个变化。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Third party plugins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131605Z" creationid="msdx" creationdate="20150509T131605Z">
        <seg>第三方插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This &lt;c3&gt;AntBuilder&lt;/c3&gt; is used to access Ant tasks, types and properties from your build script.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141114T143431Z" creationid="msdx" creationdate="20141114T143431Z">
        <seg>&lt;c3&gt;AntBuilder&lt;/c3&gt; 用于从你的构建脚本中访问 Ant 任务、 类型和属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This API provides properties and configuration methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150724T034842Z" creationid="haohang" creationdate="20150724T034842Z">
        <seg>该 API 提供了一些属性和配置方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This ability is added by the &lt;c0&gt;visual-studio&lt;/c0&gt; plugin.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T095022Z" creationid="haohang" creationdate="20160408T095022Z">
        <seg>这个功能是通过 &lt;c0&gt;visual-studio&lt;/c0&gt; 插件添加的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This ability to configure properties of objects to reflect the value of another object's task at all times (i.e. even when it changes) is known as “&lt;s0&gt;&lt;e1&gt;convention mapping&lt;/e1&gt;&lt;/s0&gt;”.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141124T094817Z" creationid="msdx" creationdate="20141124T094817Z">
        <seg>这种配置对象的属性以在所有时间内（甚至当它更改的时候）反映另一个对象的任务的值的能力被称为“&lt;s0&gt;&lt;e1&gt;映射约定&lt;/e1&gt;&lt;/s0&gt;”。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This adds a &lt;c0&gt;Zip&lt;/c0&gt; archive task with the name &lt;c1&gt;myZip&lt;/c1&gt; which produces ZIP file &lt;c2&gt;zipProject-1.0.zip&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T155032Z" creationid="msdx" creationdate="20141113T154751Z">
        <seg>它添加了一个名称为&lt;c1&gt;myZip&lt;/c1&gt;的&lt;c0&gt;ZIP&lt;/c0&gt;归档任务，产生 ZIP 文件 &lt;c2&gt;zipProject 1.0.zip&lt;/c2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This adds repositories which look into one or more directories for finding dependencies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T110238Z" creationid="95" creationdate="20151006T110238Z">
        <seg>这将会添加一些用于查找依赖的仓库，它会在一个或多个目录中寻找。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This adds them to the filter.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T154207Z" creationid="msdx" creationdate="20141105T154207Z">
        <seg>这将会把它们添加到过滤器中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This allows you to run the executable without needing to install the shared libraries in their final locations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160219T081210Z" creationid="haohang" creationdate="20160219T081210Z">
        <seg>它允许你运行可执行文件，而无需在其最终的位置安装共享库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This also applies the Java plugin to your project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T085628Z" creationid="msdx" creationdate="20141030T085628Z">
        <seg>它同样会将Java插件应用到你项目中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This also applies the War plugin to your project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T094303Z" creationid="msdx" creationdate="20141030T094303Z">
        <seg>它会把War插件也应用到你的项目中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This also has a consequence for the &lt;c0&gt;--stop&lt;/c0&gt; command line instruction: You can only stop daemons that were started with the Gradle version you use when running &lt;c1&gt;--stop&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141117T153811Z" creationid="msdx" creationdate="20141117T153811Z">
        <seg>这也有一种&lt;c0&gt;--stop&lt;/c0&gt;命令行指令的结果： 当运行&lt;c1&gt;--stop&lt;/c1&gt;时，您仅可以停止以你的Gradle版本启动的守护进程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This also provides a place to try out commands before adding them to favorites.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T160455Z" creationid="msdx" creationdate="20141105T160445Z">
        <seg>它也对要添加到收藏夹的命令提供了先去尝试的地方。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This applies the plugin if no task named &lt;c2&gt;wrapper&lt;/c2&gt; is already defined in the build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150710T012903Z" creationid="haohang" creationdate="20150710T012903Z">
        <seg>如果在构建中已没有定义名为 &lt;c2&gt;wrapper&lt;/c2&gt; 的任务，将会应用该插件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This approach is fully supported by Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151201T062414Z" creationid="haohang" creationdate="20151201T062414Z">
        <seg>这种做法 Gradle 也完全支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This approach is useful if the dependency in conflict is a transitive dependency.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150721T091100Z" creationid="haohang" creationdate="20150721T091100Z">
        <seg>如果冲突中的依赖是传递依赖，那么这种方法会很有用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This approach is useful if the dependency in conflict is already a first level dependency.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150721T090238Z" creationid="haohang" creationdate="20150721T090238Z">
        <seg>如果冲突中的依赖已经是第一级的依赖，那么这种方法会很有用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This behavior is configurable.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T131207Z" creationid="msdx" creationdate="20141116T131207Z">
        <seg>这种行为是可配置的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This behaviour is also available for your tasks, not just for built-in tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T060218Z" creationid="msdx" creationdate="20141111T060154Z">
        <seg>这种行在您自己定义的任务上也有效，而不仅仅是内置任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This build language is based on Groovy, with some additions to make it easier to describe a build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T035847Z" creationid="msdx" creationdate="20141108T035847Z">
        <seg>这种构建语言基于 Groovy 中，并进行了一些补充，使其易于描述构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This can also be enabled at invocation time via the &lt;s0&gt;&lt;c1&gt;--debug-jvm&lt;/c1&gt;&lt;/s0&gt; task option.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T015757Z" creationid="Administrator" creationdate="20150428T015757Z">
        <seg>这也可以在调用时通过&lt;s0&gt;&lt;c1&gt;--debug-vm&lt;/c1&gt;&lt;/s0&gt; task 选项进行启用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This can be a requirement during development, or you may be developing a library that is designed to work with a range of dependency versions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T010821Z" creationid="haohang" creationdate="20150722T010821Z">
        <seg>这可以是在开发中需要，或者你可能正在开发一个库，它被设计为使用一个范围内的依赖版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This can be a useful alternative to giving your test process a very large heap.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T013746Z" creationid="Administrator" creationdate="20150428T013746Z">
        <seg>这是一个很有用的替代方案，让你的测试进程可以有很大的堆内存。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This can be extremely powerful.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141115T153358Z" creationid="msdx" creationdate="20141115T153358Z">
        <seg>这将会非常强大。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This can be used to do things like performing additional configuration once all the definitions in a build script have been applied, or for some custom logging or profiling.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T125307Z" creationid="95" creationdate="20160521T125307Z">
        <seg>这可以用来做一些事情，比如一旦构建脚本里的定义都被应用时执行额外的配置，或者做一些自定义的日志记录或分析。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This can be used to set some default values or add behaviour before the task is made available in the build file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T134938Z" creationid="95" creationdate="20160521T134938Z">
        <seg>这可以用来在构建脚本中的任务可用之前，设置一些默认值或添加行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This can be useful for doing things such as installing your application, creating an exploded copy of your archives, or maintaining a copy of the project's dependencies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T145312Z" creationid="msdx" creationdate="20141113T145312Z">
        <seg>这可以用来做一些事情，比如安装你的应用程序、 创建你的归档文件的exploded副本，或维护项目的依赖项的副本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This can be useful if a certain dependency version is broken and should not be used, where a dependency resolve rule causes this version to be replaced with a known good version.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T070922Z" creationid="95" creationdate="20151115T070700Z">
        <seg>如果某个依赖的版本坏了，并且不应该被使用，这个机制将非常有用。一个依赖解析规则将会使这个版本被替换为一个已知的好的版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This can be useful if you cannot, or do not want to, place certain files in a repository.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T092919Z" creationid="haohang" creationdate="20150801T092900Z">
        <seg>这将会非常有用，比如你无法，或者是不想要把某些文件放到仓库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This can be useful when dealing with sensitive information (e.g. credentials), environment information, or for ad-hoc configuration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150525T233805Z" creationid="haohang" creationdate="20150525T233805Z">
        <seg>当处理敏感信息 （例如证件），环境信息，或点对点配置时，这会非常有用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This can be very useful when tackling version conflicts - for more information see &lt;a0&gt;Section 50.2.3, “Resolve version conflicts”&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T054349Z" creationid="95" creationdate="20151115T054349Z">
        <seg>当解决版本冲突时，这可能非常有用——有关详细信息请参阅&lt;a0&gt;第 50.2.3 节，“解决版本冲突”&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This change was requested by Eclipse users who take advantage of &lt;c3&gt;war&lt;/c3&gt; or &lt;c4&gt;ear&lt;/c4&gt; plugin but they don't use Eclipse WTP.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T003326Z" creationid="haohang" creationdate="20150603T003326Z">
        <seg>这种变化是Eclipse用户要求的，他们想利用&lt;c3&gt;war&lt;/c3&gt;或&lt;c4&gt;ear&lt;/c4&gt;插件，但又不想用 Eclipse WTP。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This chapter aims to serve as an introduction to plugins and Gradle and the role they play.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141124T095419Z" creationid="msdx" creationdate="20141124T095419Z">
        <seg>这一章旨在作为对插件和 Gradle 及他们扮演的角色的导言。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This chapter describes a very simple Groovy project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T065750Z" creationid="msdx" creationdate="20141030T065750Z">
        <seg>这一章描述了一个很简单的Groovy项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This chapter describes the &lt;s0&gt;&lt;e1&gt;original&lt;/e1&gt;&lt;/s0&gt; publishing mechanism available in Gradle 1.0: in Gradle 1.3 a new mechanism for publishing was introduced.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151220T120500Z" creationid="95" creationdate="20151220T120500Z">
        <seg>本章介绍的是在Gradle 1.0版本中的&lt;s0&gt;&lt;e1&gt;原始的&lt;/e1&gt;&lt;/s0&gt;发布机制：在Gradle 1.3 中我们引入了新的发布机制。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This chapter introduces some of the Gradle's support for web applications.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T071550Z" creationid="msdx" creationdate="20141030T071550Z">
        <seg>这一章主要介绍Gradle对Web程序的一些支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This chapter introduces some of the basics of dependency management in Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150703T101013Z" creationid="haohang" creationdate="20150703T100715Z">
        <seg>本章介绍了 Gradle 依赖管理的一些基础知识。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This chapter introduces the basics of the Gradle command-line.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141212T070815Z" creationid="msdx" creationdate="20141212T070736Z">
        <seg>本章介绍 Gradle 命令行的基础知识。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This chapter is a work in progress</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151228T151811Z" creationid="95" creationdate="20151228T151811Z">
        <seg>此章节还在完善中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This chapter is a work in progress.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T074043Z" creationid="msdx" creationdate="20141030T071411Z">
        <seg>此章节还在完善中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This chapter is about how you declare the outgoing artifacts of your project, and how to work with them (e.g. upload them).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151220T123213Z" creationid="95" creationdate="20151220T120812Z">
        <seg>本章介绍如何声明你的项目的输出构件，以及如何使用它们（例如上传它们）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This chapter is currently a work in progress.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T105003Z" creationid="msdx" creationdate="20150428T105003Z">
        <seg>此章节目前还在完善中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This chapter looks at some of the details of writing a build script.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T034603Z" creationid="msdx" creationdate="20141108T034416Z">
        <seg>这一章着眼于一些编写构建脚本的详细信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This concept, also known from Ivy, models the different levels of maturity that a module transitions through over time.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T012215Z" creationid="95" creationdate="20151129T011546Z">
        <seg>这一概念，也可以从 Ivy 中，随着时间推移，一个模块发展的成熟水平可以得知。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This configuration has by default only the default jar as an element.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151228T152339Z" creationid="95" creationdate="20151228T152339Z">
        <seg>该项配置在默认情况下只包含默认的 jar 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This creates a &lt;c3&gt;FileTree&lt;/c3&gt; defined with a base directory, and optionally some Ant-style include and exclude patterns.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T120210Z" creationid="msdx" creationdate="20141113T120210Z">
        <seg>它将定义一个基目录创建&lt;c3&gt;FileTree&lt;/c3&gt;对象，并可以选择加上一些 Ant风格的包含与排除模式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This creates a copy task with no default behavior.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T091841Z" creationid="msdx" creationdate="20141110T090306Z">
        <seg>上面的代码创建了一个什么都没做的复制任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This declares a dependency on Groovy.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T091526Z" creationid="haohang" creationdate="20150801T091453Z">
        <seg>这里定义了一个对 Groovy 的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This default platform does not specify any &lt;c0&gt;architecture&lt;/c0&gt; or &lt;c1&gt;operatingSystem&lt;/c1&gt; value, hence using the default values of the first available tool chain.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T092723Z" creationid="haohang" creationdate="20160408T092723Z">
        <seg>该默认平台不指定任何&lt;c0&gt;architecture&lt;/c0&gt;或&lt;c1&gt;operatingSystem&lt;/c1&gt;的值，因此会使用第一个可用的工具链的默认值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This dependency has a dependency on &lt;c6&gt;commons-codec&lt;/c6&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T091337Z" creationid="msdx" creationdate="20150503T091301Z">
        <seg>这个依赖又依赖于&lt;c6&gt;commons-codec&lt;/c6&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This dependency will then be used on compile and runtime class paths.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T075808Z" creationid="msdx" creationdate="20150429T075808Z">
        <seg>这个依赖会在编译和运行的类路径时用到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This description is for example displayed when executing &lt;s0&gt;&lt;c1&gt;gradle tasks&lt;/c1&gt;&lt;/s0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T015454Z" creationid="msdx" creationdate="20141111T015031Z">
        <seg>例如，当执行&lt;s0&gt;&lt;c1&gt;gradle tasks&lt;/c1&gt;&lt;/s0&gt;时显示这个描述。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This description is shown when running for example &lt;s0&gt;&lt;c1&gt;gradle tasks&lt;/c1&gt;&lt;/s0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T065403Z" creationid="msdx" creationdate="20141111T065340Z">
        <seg>当对这个例子运行 &lt;s0&gt;&lt;c1&gt;gradle tasks&lt;/c1&gt;&lt;/s0&gt; 的时候，这个描述会被显示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This determines how much information to write out stack traces when errors occur.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T161005Z" creationid="msdx" creationdate="20141105T161005Z">
        <seg>这决定了当出现错误时，有多少信息定到堆栈跟踪。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This did not work out.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T063343Z" creationid="haohang" creationdate="20160718T063343Z">
        <seg>它并没有成功。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This does not require dependent projects to be rebuilt (same as the -a option).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T154235Z" creationid="msdx" creationdate="20141105T153927Z">
        <seg>这使得重新构建时不去依赖项目（与-a选项一样）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This example performs some custom logging of project evaluation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T132115Z" creationid="95" creationdate="20160521T132115Z">
        <seg>下面的例子是在执行项目评估的自定义日志记录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This example uses method &lt;c0&gt;Project.afterEvaluate()&lt;/c0&gt; to add a closure which is executed after the project is evaluated.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T131539Z" creationid="95" creationdate="20160521T131539Z">
        <seg>上面的例子使用了&lt;c0&gt;Project.afterEvaluate()&lt;/c0&gt;方法添加一个在project 评估之后执行的闭包。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This extension allows the configuration of the JaCoCo specific properties of the test task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T132242Z" creationid="msdx" creationdate="20150506T132242Z">
        <seg>该扩展允许配置 JaCoCo 中的测试任务的一些特定属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This feature is &lt;a0&gt;incubating&lt;/a0&gt;, but currently offers the ability to change the group, name and/or version of a requested dependency, allowing a dependency to be substituted with a completely different module during resolution.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T060050Z" creationid="95" creationdate="20151115T060050Z">
        <seg>此功能还在&lt;a0&gt;孵化中&lt;/a0&gt;，但目前提供了对于一个请求的依赖更改组、 名称及版本的功能，允许在解析过程中，把一个依赖替换为另一个完全不同的模块。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This feature is helpful if you work with tasks provided by Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T055327Z" creationid="msdx" creationdate="20141111T055323Z">
        <seg>如果您使用由 Gradle 提供的任务，那么此功能将非常有用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This feature will be provided once Sonar Runner 2.1 has been released and adopted by the Sonar Runner plugin.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150525T234707Z" creationid="haohang" creationdate="20150525T234707Z">
        <seg>一旦 Sonar Runner 2.1 发布，将提供这个功能，并由 Sonar Runner 插件采用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This filter defines a boolean expression for which Gradle artifact it accepts.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T144418Z" creationid="95" creationdate="20160106T144418Z">
        <seg>这个过滤器为每一个它接受的 Gradle 构件定义了一个布尔表达式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This format is supported by many other tools, such as CI servers.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T084059Z" creationid="msdx" creationdate="20150428T084059Z">
        <seg>这种格式可以被许多工具所支持，比如CI服务器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This functionality is provided by the &lt;c3&gt;'windows-resources'&lt;/c3&gt; plugin.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160324T153236Z" creationid="95" creationdate="20160324T153212Z">
        <seg>这个功能是由&lt;c3&gt;'windows-resources'&lt;/c3&gt; 插件所提供的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This has led to external solutions often based on build tools.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150716T073939Z" creationid="haohang" creationdate="20150716T073939Z">
        <seg>这导致了外部的解决方案通常都会基于构建工具。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This has the benefit that the task class is automatically compiled and included in the classpath of the build script without you having to do anything.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T144059Z" creationid="95" creationdate="20160814T144059Z">
        <seg>这样做的好处是，你不需要再做什么，这个任务类就能够被自动地编译并且包含到这个构建脚本的类路径当中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This include all resource files and all Java source files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T053031Z" creationid="Administrator" creationdate="20150427T053031Z">
        <seg>包含所有的资源文件和Java源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This includes all Maven metadata manipulation and works also for Maven snapshots.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160104T153408Z" creationid="95" creationdate="20160104T153408Z">
        <seg>这包括所有的 Maven 元数据操纵，并且 Maven snapshot一样可用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This includes all build scripts, initialization scripts, and other scripts.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T153200Z" creationid="msdx" creationdate="20141109T153200Z">
        <seg>这包括所有构建脚本，初始化脚本和其他脚本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This includes the &lt;c0&gt;jar&lt;/c0&gt; task for project dependencies included in the &lt;c1&gt;compile&lt;/c1&gt; configuration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T174541Z" creationid="Administrator" creationdate="20150425T174541Z">
        <seg>这包括了用于&lt;c1&gt;编译&lt;/c1&gt;配置中包含的项目依赖关系的&lt;c0&gt;jar&lt;/c0&gt;任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This includes things such as system properties, JVM arguments, and the Java executable to use.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T140853Z" creationid="Administrator" creationdate="20150427T140853Z">
        <seg>这包括系统属性、 JVM 参数和使用的Java 可执行文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This includes, but is not limited to, projects, tasks, and source sets.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T050525Z" creationid="msdx" creationdate="20141108T050525Z">
        <seg>这包括但并不限于项目（project）、任务（task）和源码集（source set）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This interface extends the SLF4J &lt;c3&gt;Logger&lt;/c3&gt; interface and adds a few Gradle specific methods to it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T125840Z" creationid="msdx" creationdate="20141116T125840Z">
        <seg>该接口扩展自 SLF4J的 &lt;c3&gt;Logger&lt;/c3&gt;接口，并添加了几个 Gradle 的特有方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is Gradle's default strategy, and is often an appropriate choice as long as versions are backwards-compatible.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150721T061624Z" creationid="haohang" creationdate="20150721T061624Z">
        <seg>这是 Gradle 的默认策略，只要版本都能向后兼容，往往是合适的选择。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is a container for the project's source sets, of type &lt;a1&gt;&lt;c2&gt;SourceSetContainer&lt;/c2&gt;&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T050526Z" creationid="Administrator" creationdate="20150427T050526Z">
        <seg>这是项目的源集的容器，它的类型是 &lt;a1&gt; &lt;c2&gt;SourceSetContainer&lt;/c2&gt;&lt;/a1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is a key feature to create builds that are reliable and reproducible in any environment.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T151034Z" creationid="95" creationdate="20151129T151034Z">
        <seg>这是一个关键的功能，能在任何环境中创建可靠，重复性好的构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is a multi-project build with a root project &lt;c0&gt;water&lt;/c0&gt; and a subproject &lt;c1&gt;bluewhale&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160522T125211Z" creationid="95" creationdate="20160522T125134Z">
        <seg>这是一个多项目构建，它有一个根项目&lt;c0&gt;water&lt;/c0&gt;，和一个子项目&lt;c1&gt;bluewhale&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is a reason why some projects prefer to store their libraries in their version control system.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151201T062401Z" creationid="haohang" creationdate="20151201T062401Z">
        <seg>这也是为什么一些项目更愿意把他们的库存储于他们的版本控件系统的原因。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is a redundancy and not very nice to read.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T092243Z" creationid="msdx" creationdate="20141110T092243Z">
        <seg>这显得很冗余并且很不好读。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is a reference to an &lt;a1&gt;&lt;c2&gt;AntBuilder&lt;/c2&gt;&lt;/a1&gt; instance.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141114T143345Z" creationid="msdx" creationdate="20141114T143345Z">
        <seg>它指向一个 &lt;a1&gt;&lt;c2&gt;AntBuilder&lt;/c2&gt;&lt;/a1&gt;实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is a simple way to 'implement' the &lt;c4&gt;FileCollection&lt;/c4&gt; interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T160715Z" creationid="msdx" creationdate="20141112T160715Z">
        <seg>这是 “实现” &lt;c4&gt;FileCollection&lt;/c4&gt;接口的简单方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is a stand alone user interface that can be launched with the &lt;s0&gt;&lt;s1&gt;--gui&lt;/s1&gt;&lt;/s0&gt; option.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T145754Z" creationid="msdx" creationdate="20141105T145754Z">
        <seg>这是一个独立的用户界面，可以通过加上 &lt;s0&gt;&lt;s1&gt;--gui&lt;/s1&gt;&lt;/s0&gt; 参数来启动。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is accessible from a build script, or an init script, or via the embedding API.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T034911Z" creationid="msdx" creationdate="20141116T154217Z">
        <seg>它可以从构建脚本，init 脚本，或者是通过内嵌的 API 访问。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is also executed during the configuration phase.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T025434Z" creationid="haohang" creationdate="20160519T025434Z">
        <seg>This is also executed during the configuration phase.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is an alternative to configuration injection.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160727T053024Z" creationid="haohang" creationdate="20160727T053024Z">
        <seg>这是配置注入的另一种方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is an example of convention-over-configuration via a &lt;s3&gt;&lt;e4&gt;reasonable default&lt;/e4&gt;&lt;/s3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141123T154141Z" creationid="msdx" creationdate="20141123T154141Z">
        <seg>这是通过一个&lt;s3&gt;&lt;e4&gt;合理的默认&lt;/e4&gt;&lt;/s3&gt;的约定优于配置的例子。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is because these keywords are used in a &lt;c3&gt;build.gradle&lt;/c3&gt; file, which defines a project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T093700Z" creationid="haohang" creationdate="20160726T093700Z">
        <seg>这是因为这些关键字在 &lt;c3&gt;build.gradle&lt;/c3&gt; 文件中使用，而这个文件定义了一个project。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is called when the contents of the collection are queried, and its return value is converted to a set of &lt;c2&gt;File&lt;/c2&gt; instances.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T160901Z" creationid="msdx" creationdate="20141112T160434Z">
        <seg>它会在查询集合内容，并且它的返回值被转换为一组&lt;c2&gt;文件&lt;/c2&gt;实例时被调用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is changing with new services like &lt;a2&gt;Bintray&lt;/a2&gt; that let developers host and distribute their release binaries using a self-service repository platform.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151201T061224Z" creationid="haohang" creationdate="20151201T061113Z">
        <seg>这种状况通过一些新的服务也改变了，比如&lt;a2&gt;Bintray&lt;/a2&gt; ，它可以让开发者使用自助服务的仓库平台托管和分发他们发布的二进制文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is described in more detail in &lt;a0&gt;Section 50.4, “How to declare your dependencies”&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T060515Z" creationid="msdx" creationdate="20141116T060515Z">
        <seg>这在&lt;a0&gt; 50.4章节，“如何声明你的依赖关系”&lt;/a0&gt;有更详细的描述。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is discussed in more detail in the following sections.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T083637Z" creationid="Administrator" creationdate="20150426T083637Z">
        <seg>这一点将在以下各节中详细讨论。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is done as follows:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T091646Z" creationid="msdx" creationdate="20150429T091646Z">
        <seg>以如下方式进行：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is done by comparing published SHA1 values in the repository with the SHA1 values for existing downloaded artifacts.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T154654Z" creationid="95" creationdate="20151129T154654Z">
        <seg>这是通过比较发布在仓库中的 SHA1 值和现在已经下载好的工件的 SHA1 值来完成的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is done using the &lt;a4&gt;&lt;c5&gt;PlatformConfigurableToolChain&lt;/c5&gt;&lt;/a4&gt; API.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T094703Z" creationid="haohang" creationdate="20160408T094703Z">
        <seg>它通过 &lt;a4&gt;&lt;c5&gt;PlatformConfigurableToolChain&lt;/c5&gt;&lt;/a4&gt; API来完成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is done using the following criteria:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151007T024000Z" creationid="95" creationdate="20151007T024000Z">
        <seg>它使用以下标准来完成：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is done without requiring a separate artifact file store per repository.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T153255Z" creationid="95" creationdate="20151129T153255Z">
        <seg>这不需要让一个单独的文件在每一个仓库中存储就可以做到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is executed during the configuration phase.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T025431Z" creationid="haohang" creationdate="20160519T025431Z">
        <seg>This is executed during the configuration phase.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is expected to yield another significant speedup for Scala compilation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T081842Z" creationid="msdx" creationdate="20150503T081636Z">
        <seg>这将会为 Scala 编译带来另一个方面上的明显加速。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is expressed as &lt;c4&gt;taskB.mustRunAfter(taskA)&lt;/c4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T152101Z" creationid="msdx" creationdate="20141110T152054Z">
        <seg>这被表示为 &lt;c4&gt;taskB.mustRunAfter(taskA)&lt;/c4&gt; 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is extremely useful because it drives consistency across projects; the consistency regarding naming conventions of archives and their location after the build completed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T071915Z" creationid="Administrator" creationdate="20150425T071915Z">
        <seg>这是非常有用的，因为它促进了跨项目的一致性 ；完成了有关构件命名规范及构建之后的位置上的一致。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is interpreted as a relative path.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T061734Z" creationid="haohang" creationdate="20160718T061734Z">
        <seg>这被解释为相对路径。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is not without problems.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151130T032845Z" creationid="haohang" creationdate="20151130T032845Z">
        <seg>这不是没有问题的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is often the case with Maven SNAPSHOT artifacts, but can also be true for any artifact which is republished without changing it's identifier.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T152901Z" creationid="95" creationdate="20151129T152901Z">
        <seg>这种常见的情况是 Maven 的快照构件，但任何构件也都可以不改变它的标识符而重新发布。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is really different to what you are used to with Ant targets.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T160735Z" creationid="msdx" creationdate="20141109T160730Z">
        <seg>这是真正的与你所使用的 Ant 目标（target）的不同之处。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is reflected in the structure of the Maven POM. We think there are many situations where it makes sense to have more than one artifact per project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T144028Z" creationid="95" creationdate="20160106T144028Z">
        <seg>这也反映在 Maven POM 的结构中。我们认为在很多情况下，有意义一个项目有超多一个的构件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is similar to the way we would normally configure objects in Java.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T092044Z" creationid="msdx" creationdate="20141110T092044Z">
        <seg>这类似于我们通常在 Java 中配置对象的方式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is so unrelated tasks may share an output directory without interfering with each other.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T064058Z" creationid="msdx" creationdate="20141111T064055Z">
        <seg>这是不相关的任务可以在不互相干扰的情况下共用一个输出目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is to shield you from false security.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T035744Z" creationid="Administrator" creationdate="20150428T035744Z">
        <seg>这是为了使你不会误以为测试通过。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is useful for creating, say, a custom build command that explicitly skips tests, documentation, and samples that you could call "fast build".</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T155400Z" creationid="msdx" creationdate="20141105T155400Z">
        <seg>它用于创建一个自定义的命令，来显示地跳过测试，文档，例子。你可以称之为“快速构建”。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is useful if your project requires some extra setup that is done inside another batch file or shell script (such as specifying an init script).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T161430Z" creationid="msdx" creationdate="20141105T161430Z">
        <seg>这是很有用的。如果你的项目需要在另一个批处理文件或 shell 脚本中做一些额外的配置（比如指定一个初始化脚本）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is useful when you are developing custom Gradle tasks or plugins in Groovy.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T094821Z" creationid="haohang" creationdate="20150801T094821Z">
        <seg>当你在开发自定义 Gradle 任务或在 Groovy 中的插件时将会很有用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is useful when you are developing custom Gradle tasks or plugins.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T094648Z" creationid="haohang" creationdate="20150801T094648Z">
        <seg>当你在开发自定义 Gradle 任务或插件时将会很有用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is very handy for example for adding dependencies not needed for building or testing your software (e.g. additional JDBC drivers to be shipped with your distribution).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T075617Z" creationid="haohang" creationdate="20150722T075617Z">
        <seg>这是非常方便的，例如添加依赖时不需要构建或测试你的软件（比如，将会与发布的软件一起的额外的 JDBC 驱动程序）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This launching of an extra JVM on every build execution is quite expensive, which is why we highly recommend that you use the Gradle Daemon if you are specifying &lt;c0&gt;org.gradle.java.home&lt;/c0&gt; or &lt;c1&gt;org.gradle.jvmargs&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141121T141132Z" creationid="msdx" creationdate="20141121T141132Z">
        <seg>在执行每个构建时运行一个额外的 JVM 的代价是非常昂贵的，这就是为什么我们强烈推荐您使用 Gradle 守护进程，如果你指定了&lt;c0&gt;org.gradle.java.home&lt;/c0&gt;或&lt;c1&gt;org.gradle.jvmargs&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This lies at the heart of Gradle and makes many things possible which would not be possible otherwise.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160518T032418Z" creationid="haohang" creationdate="20160518T032418Z">
        <seg>这是 Gradle 的核心，它使得很多事情由不可能变得可能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This makes identifying the parameter values for a particular iteration easy.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T144321Z" creationid="msdx" creationdate="20150428T144321Z">
        <seg>这使得在特定的迭代过程，很容易确定参数值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This makes incremental migration to Gradle much easier than the alternative.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150716T040840Z" creationid="haohang" creationdate="20150716T040840Z">
        <seg>这使得增量迁移到 Gradle 比其他的要容易得多。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This makes it possible to use the best language for the job, and to rewrite any class in the other language if needed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T071240Z" creationid="msdx" creationdate="20150429T071240Z">
        <seg>这样一来，我们就能够在项目中使用最适合的语言，并且在有需要的情况下用其他的语言重写其中的任何类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This makes it unnecessary to execute the clean task explicitly.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T103340Z" creationid="haohang" creationdate="20150624T103340Z">
        <seg>这样一来，我们就没有必要显式执行 clean 任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This makes metadata rules another instrument for customizing dependency resolution.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T092139Z" creationid="95" creationdate="20151115T092139Z">
        <seg>这使得元数据成为自定义依赖解析的另一种手段。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This means neither &lt;c7&gt;httpclient&lt;/c7&gt; nor &lt;c8&gt;commons-codec&lt;/c8&gt; is added to your WAR, even if &lt;c9&gt;commons-codec&lt;/c9&gt; were an explicit dependency of your &lt;c10&gt;compile&lt;/c10&gt; configuration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T091518Z" creationid="msdx" creationdate="20150503T091518Z">
        <seg>这意味着 &lt;c7&gt;httpclient&lt;/c7&gt; 和 &lt;c8&gt;commons-codec&lt;/c8&gt; 都不会添加到你的 WAR 中，即使 &lt;c9&gt;commons-codec&lt;/c9&gt; 是 &lt;c10&gt;compile&lt;/c10&gt; 配置上的一个显示依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This means that 2 tasks from the same project are never executed in parallel.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T091331Z" creationid="haohang" creationdate="20160726T091331Z">
        <seg>这意味着同一个项目的两个任务都永远不会被执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This means that Gradle itself has to be run with Java 6 or higher.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T154440Z" creationid="msdx" creationdate="20150501T154440Z">
        <seg>这意味着 Gradle 本身要使用 Java 6 或其以上版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This means that Gradle must launch a separate JVM process to execute the build after parsing the various &lt;c0&gt;gradle.properties&lt;/c0&gt; files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141120T081859Z" creationid="msdx" creationdate="20141120T081853Z">
        <seg>这意味着 Gradle 在分析了各种&lt;c0&gt;gradle.properties&lt;/c0&gt;文件之后，必须启动一个单独的 JVM 进程，以执行构建操作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This means that all of the properties and methods declared by the &lt;c2&gt;Script&lt;/c2&gt; interface are available in your script.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T044735Z" creationid="msdx" creationdate="20141108T044735Z">
        <seg>这意味着所有由该&lt;c2&gt;Script&lt;/c2&gt;接口声明的属性和方法在您的脚本中是可用的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This means that even if some daemon is idle but you are running the build with a different version of Gradle, a new daemon will be started.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141117T153451Z" creationid="msdx" creationdate="20141117T153451Z">
        <seg>这意味着即使一些守护进程处于空闲状态，但您正在运行的构建与 Gradle 不同版本，也将启动一个新的守护进程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This means that if a given test class is executed by multiple test tasks, then the test report will include executions of that class, but it can be hard to distinguish individual executions of that class and their output.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T143752Z" creationid="msdx" creationdate="20150428T143752Z">
        <seg>这意味着，如果一个给定的测试类被多个test任务所执行，那么测试报告将包括那个类的所有执行结果，但它难以区分那个类的每次执行和它们的输出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This means that if you want to upload your signatures to your distribution repository along with the artifacts you simply execute the &lt;c2&gt;uploadArchives&lt;/c2&gt; task as normal.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160126T144609Z" creationid="95" creationdate="20160126T144609Z">
        <seg>这意味着，如果你想要将你的签名以及artifacts上传到你的分布仓库中，正常来讲你只需要执行&lt;c2&gt;uploadArchives&lt;/c2&gt;任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This means that the 'newest' conflict resolution strategy would still select version &lt;c4&gt;1.3&lt;/c4&gt; if this version was also pulled transitively.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T085744Z" creationid="95" creationdate="20151115T085607Z">
        <seg>这意味着，如果这个版本也因依赖传递被获取到，“使用最新”的冲突解决策略仍然会选择 &lt;c4&gt;1.3&lt;/c4&gt; 版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This means that the JAR is available in the classpath of a dependent project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T144617Z" creationid="msdx" creationdate="20150428T144617Z">
        <seg>这意味着这个JAR文件被包含在一个依赖它的项目的类路径中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This means that the closure we are passing gets evaluated &lt;s2&gt;&lt;e3&gt;after&lt;/e3&gt;&lt;/s2&gt; the build scripts of the subproject are evaluated.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160530T151251Z" creationid="95" creationdate="20160530T151251Z">
        <seg>这意味着我们所传的闭包在子项目的构建脚本评估&lt;s2&gt;&lt;e3&gt;之后&lt;/e3&gt;&lt;/s2&gt;才被评估。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This means that the inclusion of the path 'services:hotels:api' will result in creating 3 projects: 'services', 'services:hotels' and 'services:hotels:api'.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T041843Z" creationid="haohang" creationdate="20160519T041843Z">
        <seg>这意味着，包含路径 'services:hotels:api' 将导致创建3个项目: 'services'、'services:hotels'和'services:hotels:api'。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This means that using any form of shared build script logic or configuration injection (&lt;c0&gt;allprojects&lt;/c0&gt;, &lt;c1&gt;subprojects&lt;/c1&gt;, etc.) will cause your projects to be coupled.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T094333Z" creationid="haohang" creationdate="20160726T094333Z">
        <seg>这意味着，使用任何形式的共享构建脚本逻辑或配置注入（&lt;c0&gt;allprojects&lt;/c0&gt;、&lt;c1&gt;subprojects&lt;/c1&gt;等）会导致你的项目耦合。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This means that when a single task, from a single project is requested, &lt;s1&gt;&lt;e2&gt;all&lt;/e2&gt;&lt;/s1&gt; projects of multi-project build are configured first.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160522T120317Z" creationid="95" creationdate="20160522T120317Z">
        <seg>这意味着，当从一个项目请求一个任务时，首先会配置多项目构建的&lt;s1&gt;&lt;e2&gt;所有&lt;/e2&gt;&lt;/s1&gt;项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This means that when resolving against one repository Gradle will never overwrite the cached artifact file from a different repository.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T153105Z" creationid="95" creationdate="20151129T153105Z">
        <seg>这意味着，当对一个存储库解析时，Gradle 将永远不会覆盖从一个不同的仓库中缓存的构件文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This means that whenever you are using the STS Gradle plugin for Eclipse or the Gradle support in Intellij IDEA, you're already using the Gradle Daemon.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141117T143014Z" creationid="msdx" creationdate="20141117T142452Z">
        <seg>这意味着当您在 Eclipse中使用 STS Gradle  或在 Intellij IDEA 中使用 Gradle 支持时，您已经在使用 Gradle 守护进程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This means the default Gradle log level will not show any Ant/Ivy output unless it is an error or a warning.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T131051Z" creationid="msdx" creationdate="20141116T131051Z">
        <seg>这意味着默认情况下， Gradle 日志级别将不会显示任何 Ant/Ivy 的输出，除非是错误或警告信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This means they cannot be used outside the current build, but they can be used with the same build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T094334Z" creationid="haohang" creationdate="20150801T094334Z">
        <seg>这意味着它们不能在当前的构建外使用，但它们可以在同一个构建中使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This means you can manipulate and execute the Ant targets in exactly the same way as Gradle tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T060900Z" creationid="msdx" creationdate="20141116T060900Z">
        <seg>这意味着你可以用与 Gradle 任务完全相机的方式操纵和执行 Ant 目标。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This means you can set the property using, for example, a &lt;c4&gt;File&lt;/c4&gt;, &lt;c5&gt;String&lt;/c5&gt;, collection, &lt;c6&gt;FileCollection&lt;/c6&gt; or even a closure.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T123257Z" creationid="msdx" creationdate="20141113T123257Z">
        <seg>这意味着您可以通过如&lt;c4&gt;File&lt;/c4&gt;、&lt;c5&gt;String&lt;/c5&gt;、 集合、 &lt;c6&gt;FileCollection&lt;/c6&gt;对象，或甚至是一个闭包来设置此属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This means you can, for example, create a &lt;c0&gt;FileCollection&lt;/c0&gt; that represents files which will be created in the future by, say, some task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T161518Z" creationid="msdx" creationdate="20141112T161518Z">
        <seg>这意味着您可以，比如创建一个&lt;c0&gt;FileCollection&lt;/c0&gt; 对象而里面的文件会在以后才创建，比方说在一些任务中才创建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This mechanism has been superseded by 'Test Filtering', described above.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T035229Z" creationid="Administrator" creationdate="20150428T035229Z">
        <seg>这种机制已经被上述的“测试过滤”所取代。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This mechanism is very powerful and flexible.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151227T152810Z" creationid="95" creationdate="20151227T152751Z">
        <seg>这一机制非常强大和灵活。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This metadata typically originates in the module's descriptor.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T091638Z" creationid="95" creationdate="20151115T091638Z">
        <seg>这个元数据通常来源于模块的描述符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This method accepts a task instance, a task name or any other input accepted by &lt;a2&gt;&lt;c3&gt;Task.dependsOn()&lt;/c3&gt;&lt;/a2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T123145Z" creationid="msdx" creationdate="20141111T123145Z">
        <seg>这个方法接受一个任务实例、 任务名称或&lt;a4&gt;&lt;c5&gt;Task.dependsOn()&lt;/c5&gt;&lt;/a4&gt;所接受的任何其他输入作为参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This might be a library or a ZIP distribution or any other file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151220T123429Z" creationid="95" creationdate="20151220T123421Z">
        <seg>它可能是一个库，一个 ZIP 文件，或者是任何其他文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This mystery jar was a necessary transitive, fourth-level dependency that was easy to miss because no one had bothered to use managed transitive dependencies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150721T053914Z" creationid="haohang" creationdate="20150721T053914Z">
        <seg>这个神秘的 jar 包是一个必需传递的，第四级的依赖，很容易被忽略，因为没有人会费心去使用托管的传递依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This new behavior is implemented in a bandwidth and storage efficient way.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T043618Z" creationid="95" creationdate="20151129T043618Z">
        <seg>这一新行为通过带宽和存储空间的有效途径被实现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This override always forces the output to be shown.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T155956Z" creationid="msdx" creationdate="20141105T155956Z">
        <seg>它会始终强制显示输出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This plugin does not add any tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150526T004447Z" creationid="haohang" creationdate="20150526T004447Z">
        <seg>此插件不会添加任何任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This plugin extends the Java plugin to add Groovy compilation capabilities to your project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T061137Z" creationid="msdx" creationdate="20141030T040304Z">
        <seg>该插件扩展了Java插件，对你的项目增加了Groovy的编译功能.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This plugin is automatically applied if you use the Java plugin.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151227T161006Z" creationid="95" creationdate="20151227T161006Z">
        <seg>这个Base插件会在你使用 Java 插件时自动的添加进来。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This plugin provides a new DSL to support publishing artifacts to Ivy repositories, which improves on the existing DSL.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T032237Z" creationid="Administrator" creationdate="20150425T032237Z">
        <seg>这个插件提供了新的 DSL，用于支持发布文件到 Ivy 存储库，改善了现有的 DSL。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This plugin provides a new DSL to support publishing artifacts to Maven repositories, which improves on the existing DSL.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T032310Z" creationid="Administrator" creationdate="20150425T032310Z">
        <seg>这个插件提供了新的 DSL，用于支持发布文件到 Maven 存储库，改善了现有的 DSL。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This practice also reduces the potential for error.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150716T094031Z" creationid="haohang" creationdate="20150716T094031Z">
        <seg>这种做法也减少了潜在的错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This process can be done in parts over time, and you can have a working Gradle build during the entire process.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141114T143151Z" creationid="msdx" creationdate="20141114T143151Z">
        <seg>这个过程可以随着时间一点点完成，并且在这整个过程当中你的 Gradle 构建都可以使用用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This process is described in &lt;a0&gt;Chapter 51, &lt;i1&gt;Publishing artifacts&lt;/i1&gt;&lt;/a0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T160925Z" creationid="msdx" creationdate="20141113T160925Z">
        <seg>这一过程在&lt;a0&gt;第 51章，&lt;i1&gt;发布文件&lt;/i1&gt;&lt;/a0&gt;中会讲到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This project is simply a Groovy project that produces a JAR containing the task class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160815T144818Z" creationid="95" creationdate="20160815T144818Z">
        <seg>这个项目只是一个简单的Groovy项目，它将产生一个包含任务类的JAR包。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This project produces and publishes a JAR which you can then use in multiple builds and share with others.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T145059Z" creationid="95" creationdate="20160814T145059Z">
        <seg>这个项目会输出和发布一个JAR文件，然后你可以在多个构建中使用，并且分享出去。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This provides you with an alternate way to launch Gradle commands.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T161319Z" creationid="msdx" creationdate="20141105T161319Z">
        <seg>这为你提供了启动 Gradle 命令行的替代方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This recursive pattern of transitive dependencies results in a tree of dependencies including your project's first-level dependencies, second-level dependencies, and so on.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150720T060754Z" creationid="haohang" creationdate="20150720T060550Z">
        <seg>这种递归模式传递依赖的结果是，在一个依赖树中，会包含你的项目的第一级依赖、第二级依赖，等等。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This rule implementation can be neatly encapsulated in a corporate plugin, and shared across all builds within the organisation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T070632Z" creationid="95" creationdate="20151115T070632Z">
        <seg>该规则实现可以整齐地封装在一个公司的插件中，并在组织内和所有构建共享。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This section outlines the Gradle project's recommended best practices for managing dependencies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150716T083711Z" creationid="haohang" creationdate="20150716T083711Z">
        <seg>本节概述 Gradle 项目推荐的管理依赖的最佳实践。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This snapshot contains the set of input files and a hash of the contents of each file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T063355Z" creationid="msdx" creationdate="20141111T063142Z">
        <seg>这个快照包含了输入文件集和每个文件的内容的哈希值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This snapshot contains the set of output files and a hash of the contents of each file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T063348Z" creationid="msdx" creationdate="20141111T063348Z">
        <seg>该快照包含输出文件集和每个文件的内容的哈希值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This solution will include a Visual Studio Project for that component, as well as linking to project files for each depended-on binary.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T095430Z" creationid="haohang" creationdate="20160408T095430Z">
        <seg>这个方案包含了一个该组件的 Visual Studio Project ，并且为每一个依赖的二进制文件链接到项目文件中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This source set should contain the cunit test files for the component sources.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T144517Z" creationid="95" creationdate="20160504T144517Z">
        <seg>这个源码集应包含组件源码的 cunit 测试文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This specification is used by the &lt;c3&gt;installApp&lt;/c3&gt; and &lt;c4&gt;distZip&lt;/c4&gt; tasks as the specification of what is to be include in the distribution.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150703T100012Z" creationid="haohang" creationdate="20150703T033752Z">
        <seg>这个描述在 &lt;c3&gt;installApp&lt;/c3&gt; 和 &lt;c4&gt;distZip&lt;/c4&gt; 任务中会用到，作为这个distribution 都包含了什么内容的描述。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This strategy enforces that all version conflicts are resolved explicitly in the build script.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150721T061744Z" creationid="haohang" creationdate="20150721T061744Z">
        <seg>这种策略强制在构建脚本中明确地解决所有的版本冲突。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This task depends on all the archives task of the &lt;c1&gt;archives&lt;/c1&gt; configuration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T143025Z" creationid="95" creationdate="20160105T143025Z">
        <seg>这个任务依赖于&lt;c1&gt;archives&lt;/c1&gt;配置的所有archives任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This task doesn't do anything useful, so let's add some behaviour.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T145453Z" creationid="95" creationdate="20160814T145410Z">
        <seg>这个任务没有进行任何有用的操作，所以让我们来添加一些行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This task is only added to the root project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T072552Z" creationid="haohang" creationdate="20150625T072552Z">
        <seg>此任务仅添加到根项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This task will generate a Visual Studio Solution file for the named component.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T095306Z" creationid="haohang" creationdate="20160408T095306Z">
        <seg>这个任务会为所命名的组件生成一个 Visual Studio Solution 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This topic is also the most intellectually challenging.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160522T024625Z" creationid="95" creationdate="20160522T024625Z">
        <seg>本主题也是最具智力挑战性的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This type is used when no type was explicitly specified, and no type could be inferred.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T095112Z" creationid="haohang" creationdate="20150707T095112Z">
        <seg>如果没有显示地指定一个类型，或者无法推断出类型时，会使用该类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This type of task is good for implementing one-off tasks in your build script.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T143050Z" creationid="95" creationdate="20160814T143050Z">
        <seg>这个类型的任务适合于实现在构建脚本中只执行一次的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This type will be automatically inferred if such a file exists.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T092519Z" creationid="haohang" creationdate="20150707T092519Z">
        <seg>如果存在这样的文件，将会自动推断此类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This was all about simple tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T160319Z" creationid="msdx" creationdate="20141109T160257Z">
        <seg>这都是简单的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This way the default tasks behave correctly when projects are configured on demand.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160522T124517Z" creationid="95" creationdate="20160522T123957Z">
        <seg>这种方式当项目按需配置时默认任务的行为正确。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This way the dependency declaration is more explicit.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T102148Z" creationid="haohang" creationdate="20150801T102148Z">
        <seg>这种依赖声明的方式更加明确。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This way the typical common configuration is supported (allprojects or subprojects script blocks).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160522T122153Z" creationid="95" creationdate="20160522T122153Z">
        <seg>这种方式的典型常见配置已经支持（allprojects 或subprojects 脚本块）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This way you can force Gradle to rebuild the cache.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T153802Z" creationid="msdx" creationdate="20141109T153802Z">
        <seg>通过这种方式，您可以强制 Gradle 重新生成缓存。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This way, the configuration time of a large multi-project build is greatly improved.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160522T121749Z" creationid="95" creationdate="20160522T121749Z">
        <seg>这种方式，大大提高了大型多项目构建的配置时间。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This will add following tasks to the project:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150701T031310Z" creationid="haohang" creationdate="20150701T031258Z">
        <seg>这将向项目添加下列任务：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This will also apply the Java plugin to the project, if it has not already been applied.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T062257Z" creationid="msdx" creationdate="20141030T062217Z">
        <seg>这段代码同时会将Java插件应用到project中，如果Java插件还没被应用的话。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This will always involve a remote lookup on the repository, however in many cases no download will be required (see&lt;a2&gt;Section 50.9.1.3, “Artifact reuse”&lt;/a2&gt;, below).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T150650Z" creationid="95" creationdate="20151129T150650Z">
        <seg>这将始终涉及到存储库中的远程查找，然而，在许多情况下都没有下载的需要（见&lt;a2&gt;第 50.9.1.3 节，“构件重用”&lt;/a2&gt;下文）、。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This will cause the distribution archives to be created with a different name.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150701T034510Z" creationid="haohang" creationdate="20150701T034510Z">
        <seg>这将导致分发的 archives 以不同的名字创建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This will create a task (of type &lt;a0&gt;&lt;c1&gt;Sign&lt;/c1&gt;&lt;/a0&gt;) in your project named “&lt;c2&gt;signArchives&lt;/c2&gt;”, that will build any &lt;c3&gt;archives&lt;/c3&gt; artifacts (if needed) and then generate signatures for them.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160109T072447Z" creationid="95" creationdate="20160109T072242Z">
        <seg>这将在你的项目中创建一个名为“&lt;c2&gt;signArchives&lt;/c2&gt;”的任务（&lt;a0&gt;&lt;c1&gt;Sign&lt;/c1&gt;&lt;/a0&gt;类型），这个任务会构建任何&lt;c3&gt;archives&lt;/c3&gt;的artifacts（如果需要），然后为它们生成签名。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This will create a task (of type &lt;a0&gt;&lt;c1&gt;Sign&lt;/c1&gt;&lt;/a0&gt;) in your project named “&lt;c2&gt;signStuffZip&lt;/c2&gt;”, that will build the input task's archive (if needed) and then sign it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160126T140449Z" creationid="95" creationdate="20160109T073124Z">
        <seg>这将在您的项目创建一个名为“&lt;c2&gt;signStuffZip&lt;/c2&gt;”的（&lt;a0&gt;&lt;c1&gt;Sign&lt;/c1&gt;&lt;/a0&gt;类型） 的任务，这个任务会构建输入任务的archive（如果需要），并进行签字。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This will make the test task only use the includes / excludes to find test classes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T081854Z" creationid="Administrator" creationdate="20150428T081854Z">
        <seg>这将使test任务只使用includes / excludes 来找到测试类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This works by converting the POM to one or more Gradle files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T081841Z" creationid="haohang" creationdate="20150707T081841Z">
        <seg>这是通过将 POM 转换为一个或多个 Gradle 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This works for &lt;s0&gt;&lt;e1&gt;any&lt;/e1&gt;&lt;/s0&gt; task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T092555Z" creationid="msdx" creationdate="20141110T092547Z">
        <seg>这种方式适用于&lt;s0&gt;&lt;e1&gt;任何&lt;/e1&gt;&lt;/s0&gt;任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This works independent of the project's source directory layout.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T092502Z" creationid="msdx" creationdate="20150512T092502Z">
        <seg>它的分析独立于项目的源目录布局。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This works regardless of the project's source directory layout.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150520T143052Z" creationid="msdx" creationdate="20150520T143052Z">
        <seg>这个过程与project 的源目录布局无关。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This yields a hierarchical view in the Sonar web interface with aggregated metrics and the ability to drill down into subprojects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T085241Z" creationid="msdx" creationdate="20150512T085241Z">
        <seg>它能够在 Sonar 的 web 界面生成一个层次图，该层次图包含了综合的指标且能够深入到子项目中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This yields a hierarchical view in the Sonar web interface, with aggregated metrics and the ability to drill down into subprojects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150514T152136Z" creationid="msdx" creationdate="20150514T152136Z">
        <seg>它能够在 Sonar 的 web 界面生成一个层次图，该层次图包含了综合的指标且能够深入到子项目中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Those configurations have the same scope as the respective &lt;c2&gt;compile&lt;/c2&gt; and &lt;c3&gt;runtime&lt;/c3&gt; configurations, except that they are not added to the WAR archive.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T091028Z" creationid="msdx" creationdate="20150503T091028Z">
        <seg>虽然它们有各自的&lt;c2&gt;compile&lt;/c2&gt;和&lt;c3&gt;runtime&lt;/c3&gt;配置，但这些配置有相同的作用域，只是它们不会添加到 WAR 文件中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Those directories need to exist as siblings of the root project directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T063759Z" creationid="haohang" creationdate="20160519T042127Z">
        <seg>这些目录必须存在，并且与根项目目录同级。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Those elements also provide build-by-convention support for Java, Groovy, OSGi, Web and Scala projects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141101T035228Z" creationid="msdx" creationdate="20141101T035228Z">
        <seg>这些元素同样也为 Java, Groovy, OSGi, Web 和 Scala 项目提供了基于约定的构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Those levels are &lt;s1&gt;&lt;e2&gt;QUIET&lt;/e2&gt;&lt;/s1&gt; and &lt;s3&gt;&lt;e4&gt;LIFECYCLE&lt;/e4&gt;&lt;/s3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T070607Z" creationid="msdx" creationdate="20141116T070607Z">
        <seg>这两个级别分别是 &lt;s1&gt;&lt;e2&gt;QUIET&lt;/e2&gt;&lt;/s1&gt; 和 &lt;s3&gt;&lt;e4&gt;LIFECYCLE&lt;/e4&gt;&lt;/s3&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Those tasks assemble and upload the artifacts belonging to the specified configuration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T070734Z" creationid="Administrator" creationdate="20150425T070734Z">
        <seg>这些任务组装并上传属于指定的配置的构件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Those tasks assemble the artifacts belonging to the specified configuration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T041506Z" creationid="Administrator" creationdate="20150425T041506Z">
        <seg>这些任务组装成属于指定配置的构件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Those tasks form a &lt;a0&gt;Directed Acyclic Graph&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160518T032016Z" creationid="haohang" creationdate="20160518T032016Z">
        <seg>这些任务形成一个&lt;a0&gt;有向无环图&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Those tasks generate exactly the same content as the command line reports triggered by &lt;s0&gt;&lt;c1&gt;gradle tasks&lt;/c1&gt;&lt;/s0&gt;, &lt;s2&gt;&lt;c3&gt;gradle dependencies&lt;/c3&gt;&lt;/s2&gt; and &lt;s4&gt;&lt;c5&gt;gradle properties&lt;/c5&gt;&lt;/s4&gt; (see &lt;a6&gt;Section 11.6, “Obtaining information about your build”&lt;/a6&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150626T095654Z" creationid="haohang" creationdate="20150626T095654Z">
        <seg>这些任务生成内容，与由&lt;s0&gt;&lt;c1&gt;gradle tasks&lt;/c1&gt;&lt;/s0&gt;， &lt;s2&gt; &lt;c3&gt;gradle dependencies&lt;/c3&gt;&lt;/s2&gt;和&lt;s4&gt;&lt;c5&gt;gradle properties&lt;/c5&gt;&lt;/s4&gt;触发的命令行报告的内容完全相同（见&lt;a6&gt;第 11.6 节，“获取有关您的构建的信息”&lt;/a6&gt;）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thus providing concise, maintainable and comprehensible builds.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141101T035508Z" creationid="msdx" creationdate="20141101T035508Z">
        <seg>因此，它提供了简明、可维护和易理解的构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To access a Maven repository which uses basic authentication, you specify the username and password to use when you define the repository:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150909T053415Z" creationid="haohang" creationdate="20150909T053415Z">
        <seg>要访问一个使用基本的身份验证的 Maven 仓库，当你在定义该仓库时要指定使用的用户名和密码：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To access a configuration:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T075846Z" creationid="haohang" creationdate="20150722T075846Z">
        <seg>如果要访问配置：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To access a descriptor you can do:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T070340Z" creationid="haohang" creationdate="20160519T070340Z">
        <seg>你可以这样访问一个描述符：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To access a repository:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T133403Z" creationid="95" creationdate="20151006T133403Z">
        <seg>若要访问一个仓库：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To access an Ivy repository which uses basic authentication, you specify the username and password to use when you define the repository:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T133223Z" creationid="95" creationdate="20151006T133223Z">
        <seg>要访问一个使用基本的身份验证的 Ivy 仓库，当你在定义该仓库时要指定使用的用户名和密码：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To access the mapping configuration you can say:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T145314Z" creationid="95" creationdate="20160106T145314Z">
        <seg>要访问映射配置，你可以：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To accommodate that place the &lt;c2&gt;META-INF/application.xml&lt;/c2&gt; in the right place inside your source folders (see the &lt;c3&gt;appDirName&lt;/c3&gt; property).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T143748Z" creationid="msdx" creationdate="20150504T143748Z">
        <seg>去把 &lt;c2&gt;META-INF/application.xml&lt;/c2&gt; 放在你的源文件夹里的正确的位置（请查看 &lt;c3&gt;appDirName&lt;/c3&gt; 属性）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To achieve this, you can specify that signing is only required under certain conditions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160126T141354Z" creationid="95" creationdate="20160126T141354Z">
        <seg>要做到这一点，你可以指定只在一定条件下才要求签名。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To add additional content to the POM, the &lt;c0&gt;pom.project&lt;/c0&gt; builder can be used.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T142813Z" creationid="95" creationdate="20160106T142739Z">
        <seg>如果要向 POM 添加其他的内容，可以使用&lt;c0&gt;pom.project&lt;/c0&gt; 生成器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To add another bean elements to its parent, you use a closure.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T135220Z" creationid="95" creationdate="20160105T135220Z">
        <seg>如果要添加另一个bean元素到它的parent，你可以使用一个闭包。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To add any kind of repository (you can pretty easy write your own ones) you can do:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T134702Z" creationid="95" creationdate="20151006T134702Z">
        <seg>要添加任何一种仓库 (你可以很简单地编写你自己的) ，你可以：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To add some files as a dependency for a configuration, you simply pass a &lt;a0&gt;file collection&lt;/a0&gt; as a dependency:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T094136Z" creationid="haohang" creationdate="20150801T094136Z">
        <seg>如果想添加一些文件作为配置的依赖，你只需要传一个&lt;a0&gt;文件集合&lt;/a0&gt;作为依赖：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To add the JCenter Maven repository (&lt;a0&gt;http://jcenter.bintray.com&lt;/a0&gt;) simply add this to your build script:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T100514Z" creationid="haohang" creationdate="20150807T100514Z">
        <seg>若要添加 JCenter Maven 仓库（&lt;a0&gt;http://jcenter.bintray.com&lt;/a0&gt;），只需添加下面的内容到你的构建脚本中：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To add the central Maven 2 repository (&lt;a0&gt;http://repo1.maven.org/maven2&lt;/a0&gt;) simply add this to your build script:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T095842Z" creationid="haohang" creationdate="20150807T095842Z">
        <seg>若要添加中央 Maven 2 仓库（&lt;a0&gt;http://repo1.maven.org/maven2&lt;/a0&gt;），只需添加下面的代码到你的构建脚本中：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To adjust memory settings, configure &lt;c0&gt;scalaCompileOptions.forkOptions&lt;/c0&gt; as needed:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150430T160040Z" creationid="msdx" creationdate="20150430T160040Z">
        <seg>如果要调整内存设置，请根据需要配置&lt;c0&gt;scalaCompileOptions.forkOptions&lt;/c0&gt; ：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To analyze a project hierarchy, apply the Sonar Runner plugin to the root project of the hierarchy.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150514T152324Z" creationid="msdx" creationdate="20150514T152324Z">
        <seg>要分析一个项目的层次结构， 需要把 Sonar Runner 插件应用于层次结构的最顶层项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To analyze a project hierarchy, the Sonar plugin needs to be applied to the top-most project of the hierarchy.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T085348Z" creationid="msdx" creationdate="20150512T085348Z">
        <seg>要分析项目的层次结构， 需要把 Sonar 插件应用于层次结构的最顶层项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To analyze code written in a language other than Java, install the corresponding &lt;a0&gt;Sonar plugin&lt;/a0&gt;, and set &lt;c1&gt;sonar.project.language&lt;/c1&gt; accordingly:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T092626Z" creationid="msdx" creationdate="20150512T092549Z">
        <seg>要分析非 Java 语言编写的代码，请安装相应的&lt;a0&gt;Sonar 插件&lt;/a0&gt;，并相应地设置&lt;c1&gt;sonar.project.language&lt;/c1&gt; ：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To build a Groovy project, you use the &lt;e0&gt;Groovy plugin&lt;/e0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T041058Z" creationid="msdx" creationdate="20141030T040256Z">
        <seg>要构建一个Groovy项目，你需要使用&lt;e0&gt;Groovy插件&lt;/e0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To build a WAR file, you apply the War plugin to your project:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T085435Z" creationid="msdx" creationdate="20141030T085047Z">
        <seg>要构建一个WAR文件，你需要在你的项目当中应用War插件：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To build an executable binary, an &lt;a0&gt;&lt;c1&gt;Executable&lt;/c1&gt;&lt;/a0&gt; component is added to the &lt;c2&gt;executables&lt;/c2&gt; container and associated with a set of sources.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160219T065417Z" creationid="haohang" creationdate="20160219T065417Z">
        <seg>为构建一个可执行的二进制，&lt;a0&gt;&lt;c1&gt;Executable&lt;/c1&gt;&lt;/a0&gt;组件添加到&lt;c2&gt;executables&lt;/c2&gt;容器中，并与源码集相关联。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To build either a static or shared native library binary, a &lt;a0&gt;&lt;c1&gt;Library&lt;/c1&gt;&lt;/a0&gt; component is added to the &lt;c2&gt;libraries&lt;/c2&gt; container.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160219T065251Z" creationid="haohang" creationdate="20160219T065251Z">
        <seg>为构建一个静态或共享的原生库二进制文件，一个&lt;a0&gt;&lt;c1&gt;Library&lt;/c1&gt;&lt;/a0&gt;组件将添加到&lt;c2&gt;libraries&lt;/c2&gt;容器中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To change how long Gradle will cache the meta-data and artifacts for a changing module, use:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151130T032414Z" creationid="haohang" creationdate="20151130T032414Z">
        <seg>要修改 Gradle 对变化模块的元数据和构件的缓存时间，请使用：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To change how long Gradle will cache the resolved version for a dynamic version, use:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T154947Z" creationid="95" creationdate="20151129T154947Z">
        <seg>如果要改变Gradle对解析一个动态版本的缓存时间，可以使用：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To change the log level for standard out or error during task execution, tasks also provide a &lt;a0&gt;&lt;c1&gt;LoggingManager&lt;/c1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T150915Z" creationid="msdx" creationdate="20141116T150915Z">
        <seg>为能在任务执行过程中更改标准输出或错误的日志级别，task也提供了一个 &lt;a0&gt;&lt;c1&gt;LoggingManager&lt;/c1&gt;&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To change the the default configuration order to be bottom up, That means that a project configuration depends on the configuration of its child projects, the &lt;c0&gt;evaluationDependsOnChildren()&lt;/c0&gt; method can be used.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T090405Z" creationid="haohang" creationdate="20160718T090405Z">
        <seg>如果要把默认配置的顺序改为从下到上，这意味着项目配置将会依赖于它的子项目的配置，可以使用&lt;c0&gt;evaluationDependsOnChildren()&lt;/c0&gt;方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To completely overwrite existing Eclipse files, execute a clean task together with its corresponding generation task, for example &lt;s0&gt;&lt;c1&gt;gradle cleanEclipse eclipse&lt;/c1&gt;&lt;/s0&gt; (in that order).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T103257Z" creationid="haohang" creationdate="20150624T103257Z">
        <seg>若要完全覆盖现有 Eclipse 文件，请执行clean任务和其相应的生成任务，例如&lt;s0&gt;&lt;c1&gt;gradle cleanEclipse eclipse&lt;/c1&gt; &lt;/s0&gt; (按此顺序)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To completely overwrite existing IDEA files, execute a clean task together with its corresponding generation task, for example &lt;s0&gt;&lt;c1&gt;gradle cleanIdea idea&lt;/c1&gt;&lt;/s0&gt; (in that order).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T073432Z" creationid="haohang" creationdate="20150625T073432Z">
        <seg>若要完整覆盖现有 IDEA 文件，请执行clean任务和其相应的生成任务，例如&lt;s0&gt;&lt;c1&gt;gradle cleanIdea idea&lt;/c1&gt; &lt;/s0&gt; (按此顺序)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To configure a configuration:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T075920Z" creationid="haohang" creationdate="20150722T075920Z">
        <seg>配置一个配置：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To configure a repository:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T133431Z" creationid="95" creationdate="20151006T133431Z">
        <seg>要配置一个仓库：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To configure an existing source set, you simply use one of the above access methods to set the properties of the source set.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T050845Z" creationid="Administrator" creationdate="20150427T050845Z">
        <seg>要配置一个现有的源集，你只需使用上面的其中一种访问方法来设置源集的属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To configure on demand just for given build please see &lt;a1&gt;Appendix D, &lt;i2&gt;Gradle Command Line&lt;/i2&gt;&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160522T125116Z" creationid="95" creationdate="20160522T125116Z">
        <seg>只对指定的构建按需配置，请参见&lt;a1&gt;附录 D， &lt;i2&gt;Gradle 命令行&lt;/i2&gt;&lt;/a1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To configure on demand with every build run see &lt;a0&gt;Section 20.1, “Configuring the build environment via gradle.properties”&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160522T125047Z" creationid="95" creationdate="20160522T125047Z">
        <seg>要在每次构建时都按需配置，请参阅&lt;a0&gt;第 20.1 节，“通过 gradle.properties配置构建环境”&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To configure the simple attributes you pass a map to the bean elements.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T135150Z" creationid="95" creationdate="20160105T135150Z">
        <seg>你可以传一个map到bean元素中，来配置简单的属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To create a &lt;c1&gt;Copy&lt;/c1&gt; task for your build, you can declare in your build script:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T090208Z" creationid="msdx" creationdate="20141110T090208Z">
        <seg>若要创建&lt;c1&gt;Copy&lt;/c1&gt;任务，您可以在构建脚本中声明：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To customize the settings for the Maven installer (see&lt;a0&gt;Section 52.6.3, “Installing to the local repository”&lt;/a0&gt;), you can do:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T143436Z" creationid="95" creationdate="20160106T143436Z">
        <seg>要为 Maven installer（见&lt;a0&gt;第 52.6.3 条，“安装到本地资源库”&lt;/a0&gt;) 自定义设置，你可以：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To customize these you can do:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T142702Z" creationid="95" creationdate="20160106T142702Z">
        <seg>如果要自定义这些你可以这样做：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To deal with problems due to version conflicts, reports with dependency graphs are also very helpful.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150721T092224Z" creationid="haohang" creationdate="20150721T092224Z">
        <seg>为了解决版本冲突问题，报告依赖关系图也是很有帮助的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To define a configuration:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T075852Z" creationid="haohang" creationdate="20150722T075808Z">
        <seg>如果要定义配置：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To define a new source set, you simply reference it in the &lt;c0&gt;sourceSets { }&lt;/c0&gt; block.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T053322Z" creationid="Administrator" creationdate="20150427T053322Z">
        <seg>要定义一个新的源集，你只需在&lt;c0&gt;sourceSets {}&lt;/c0&gt;块中引用它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To define an Ivy repository which fetches Ivy files and artifacts from different locations, you can use the pattern layout with separate patterns to use to locate the Ivy files and artifacts:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T111329Z" creationid="95" creationdate="20151006T111329Z">
        <seg>若要定义一个从不同的位置获取 Ivy 文件和 artifacts 的 Ivy 仓库，您可以使用模式布局，每个单独的模式用于定位到 Ivy 文件和 artifacts：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To define an Ivy repository with a non-standard layout, you can define a pattern layout for the repository:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T110614Z" creationid="95" creationdate="20151006T110614Z">
        <seg>若要定义非标准布局的 Ivy 仓库，你可以定义一个仓库模式布局：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To define such a repository, you can do:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150909T053043Z" creationid="haohang" creationdate="20150909T053043Z">
        <seg>要定义一个这样的仓库，你可以这样：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To define the main-class for the application you have to set the &lt;c0&gt;mainClassName&lt;/c0&gt; property as shown below</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150702T103922Z" creationid="haohang" creationdate="20150702T103922Z">
        <seg>若要为应用程序定义 main-class，你必须如下所示设置&lt;c0&gt;mainClassName&lt;/c0&gt;属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To define the name for the distribution you have to set the &lt;c0&gt;baseName&lt;/c0&gt; property as shown below:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T065936Z" creationid="haohang" creationdate="20150705T084552Z">
        <seg>若要定义 distribution 的名称，必须如下所示设置&lt;c0&gt;baseName&lt;/c0&gt;属性：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To disable the build of the depended on projects you can run Gradle with the &lt;c0&gt;-a&lt;/c0&gt; option.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T085414Z" creationid="haohang" creationdate="20160726T085414Z">
        <seg>如果要禁止依赖项目的构建，你可以使用&lt;c0&gt;-a&lt;/c0&gt; 选项运行 Gradle。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To do so, we add a method to the task and mark it with the &lt;a0&gt;&lt;c1&gt;TaskAction&lt;/c1&gt;&lt;/a0&gt; annotation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T145536Z" creationid="95" creationdate="20160814T145536Z">
        <seg>要添加一些行为，我们需要添加一个方法到这个任务中，并且使用 &lt;a0&gt;&lt;c1&gt;TaskAction&lt;/c1&gt;&lt;/a0&gt; 注解来标记它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To do the same for project dependencies you need to declare:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T032744Z" creationid="haohang" creationdate="20150807T032744Z">
        <seg>同样的项目依赖，你需要声明：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To do this, you need to define a custom configuration for the classpath, then add some dependencies to the configuration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T060440Z" creationid="msdx" creationdate="20141116T060440Z">
        <seg>要做到这一点，你需要定义一个自定义配置的类路径中，然后将一些依赖项添加到配置中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To enable dynamic resolve mode, you need to set the appropriate option on the repository definition.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T091326Z" creationid="95" creationdate="20151115T091326Z">
        <seg>若要启用动态解析模式，你需要在仓库定义进行合适的设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To enable historical builds, you need to keep all the past libraries and you need a backup.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151201T060721Z" creationid="haohang" creationdate="20151201T060721Z">
        <seg>要启用历史版本，你需要保留所有过去的库，并且需要备份。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To facilitate their manipulation, values still have their "idiomatic" type (&lt;c1&gt;File&lt;/c1&gt;, &lt;c2&gt;List&lt;/c2&gt;, etc.).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150525T232935Z" creationid="haohang" creationdate="20150525T232935Z">
        <seg>为了方便它们的操作，这些值值仍然使用它们惯用的类型 （&lt;c1&gt;File&lt;/c1&gt;，&lt;c2&gt;List&lt;/c2&gt;等）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To generate the build dashboard, simply include the &lt;c1&gt;buildDashboard&lt;/c1&gt; task in the list of tasks to execute.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150713T100107Z" creationid="haohang" creationdate="20150713T100107Z">
        <seg>如果要生成 build dashboard，只需在要执行的任务列表中包含 &lt;c1&gt;buildDashboard&lt;/c1&gt; 任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To get started, apply the JaCoCo plugin to the project you want to calculate code coverage for.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T130208Z" creationid="msdx" creationdate="20150506T130208Z">
        <seg>要想开始，请将 JaCoCo 插件应用于你想要计算代码覆盖率的项目中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To get started, apply the Sonar Runner plugin to the project to be analyzed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T060730Z" creationid="msdx" creationdate="20150513T060730Z">
        <seg>若要开始，请对要分析的项目配置使用 Sonar Runner 插件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To get the library files of the configuration dependencies you can do:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T034557Z" creationid="haohang" creationdate="20150807T034557Z">
        <seg>要获得配置依赖的library文件，你可以这样：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To have access to the complete API, either with the map or with the string notation, you can assign a single dependency to a configuration together with a closure.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150724T035107Z" creationid="haohang" creationdate="20150724T035107Z">
        <seg>要访问完整的 API，使用 map 或 string 标记法，你可以把单个的依赖与一个闭包一起指定给一个配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To implement a custom task class, you extend &lt;a0&gt;&lt;c1&gt;DefaultTask&lt;/c1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T145346Z" creationid="95" creationdate="20160814T145346Z">
        <seg>要实现一个自定义任务类，你需要继承&lt;a0&gt;&lt;c1&gt;DefaultTask&lt;/c1&gt;&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To improve responsiveness Gradle caches all compiled scripts by default.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T153142Z" creationid="msdx" creationdate="20141109T153142Z">
        <seg>为了提高响应速度，默认情况下 Gradle 会缓存所有已编译的脚本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To include any static files in the distribution, simply arrange them in the &lt;c1&gt;src/dist&lt;/c1&gt; directory, or add it to the content of the distribution.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T070442Z" creationid="haohang" creationdate="20150707T070442Z">
        <seg>如果要在 distribution 中包括任何的静态文件，只需要把它们放在 &lt;c1&gt;src/dist&lt;/c1&gt; 目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To include any static files in the distribution, simply arrange them in the &lt;c8&gt;src/dist&lt;/c8&gt; directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150703T100243Z" creationid="haohang" creationdate="20150703T100243Z">
        <seg>如果要在 distribution 中包括任何的静态文件，只需要把它们放在&lt;c8&gt;src/dist&lt;/c8&gt;目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To learn more about executing external processes with Groovy have a look in 'Groovy in Action' 9.3.2 or at the Groovy wiki</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150330T155827Z" creationid="msdx" creationdate="20141116T063206Z">
        <seg>要了解更多关于使用 Groovy 执行外部进程的内容，可以看一下《Groovy in Action》的9.3.2章节，或者是 Groovy wiki</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To learn more about generic manifest handling, see &lt;a5&gt;Section 23.13.1, “Manifest”&lt;/a5&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150526T004033Z" creationid="haohang" creationdate="20150526T004033Z">
        <seg>要了解常见的清单处理的更多信息，请参阅&lt;a5&gt;第 23.13.1节，“Manifest”&lt;/a5&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To learn more about installing to the local repository, see: &lt;a1&gt;Section 52.6.3, “Installing to the local repository”&lt;/a1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151228T152427Z" creationid="95" creationdate="20151228T152427Z">
        <seg>要了解更多关于安装到本地资源库的内容，请参阅：&lt;a1&gt;第 52.6.3 节，“安装到本地仓库”&lt;/a1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To learn more about the API of the configuration class see the API documentation: &lt;a0&gt;&lt;c1&gt;Configuration&lt;/c1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T091327Z" creationid="haohang" creationdate="20150807T091327Z">
        <seg>想了解更多关于这个配置类的API，可以参阅它的 API 文档：&lt;a0&gt;&lt;c1&gt;Configuration&lt;/c1&gt;&lt;/a0&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To learn more about the Gradle Maven POM object, see &lt;a0&gt;&lt;c1&gt;MavenPom&lt;/c1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160104T153112Z" creationid="95" creationdate="20160104T153112Z">
        <seg>如果要了解关于 Gradle Maven POM 对象的更多信息，请参阅&lt;a0&gt;&lt;c1&gt;MavenPom&lt;/c1&gt;&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To learn more about the available instructions have a look at the &lt;a1&gt;BND tool&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150526T064756Z" creationid="haohang" creationdate="20150526T064756Z">
        <seg>要了解更多关于 instructions 的信息，可以看看&lt;a1&gt;BND tool&lt;/a1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To learn more about this API have a look at &lt;a1&gt;&lt;c2&gt;ConfigurationContainer&lt;/c2&gt;&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T075753Z" creationid="haohang" creationdate="20150722T075753Z">
        <seg>要了解更多关于此 API 的内容，可以看看&lt;a1&gt;&lt;c2&gt;ConfigurationContainer&lt;/c2&gt;&lt;/a1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To learn more about this have a look at &lt;a0&gt;&lt;c1&gt;PomFilterContainer&lt;/c1&gt;&lt;/a0&gt; and its associated classes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T144459Z" creationid="95" creationdate="20160106T144459Z">
        <seg>要了解更多关于它的信息，你可以看一下&lt;a0&gt;&lt;c1&gt;PomFilterContainer&lt;/c1&gt;&lt;/a0&gt;和其关联的类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To make custom tasks available in your build, you can use the &lt;c0&gt;taskdef&lt;/c0&gt; (usually easier) or &lt;c1&gt;typedef&lt;/c1&gt; Ant task, just as you would in a &lt;c2&gt;build.xml&lt;/c2&gt; file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T011850Z" creationid="msdx" creationdate="20141116T011850Z">
        <seg>要使自定义任务在您的构建中可用，你可以使用Ant 任务 &lt;c0&gt;taskdef&lt;/c0&gt;（通常更容易） 或&lt;c1&gt;typedef&lt;/c1&gt;，就像在&lt;c2&gt;build.xml&lt;/c2&gt;文件中一样。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To meet these needs, the plugins adds a task dependency from &lt;c1&gt;sonarRunner&lt;/c1&gt; on &lt;c2&gt;test&lt;/c2&gt; if the &lt;c3&gt;java&lt;/c3&gt; plugin is applied.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T062335Z" creationid="msdx" creationdate="20150513T061933Z">
        <seg>为了满足这些需要，如果应用了&lt;c3&gt;java&lt;/c3&gt;插件，Sonar Runner 插件将从&lt;c1&gt;sonarRunner&lt;/c1&gt;添加一个对 &lt;c2&gt;test&lt;/c2&gt; 的任务依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To override the Zinc version that Gradle uses by default, add an explicit Zinc dependency (for example &lt;c1&gt;zinc "com.typesafe.zinc:zinc:0.1.4"&lt;/c1&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T154842Z" creationid="msdx" creationdate="20150501T154842Z">
        <seg>如果要重写 Gradle 默认情况下使用的 Zinc 版本，请添加一个显式的 Zinc 依赖项 （例如&lt;c1&gt;zinc "com.typesafe.zinc:zinc:0.1.4"&lt;/c1&gt;）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To refer to a task in another project, you prefix the name of the task with the path of the project it belongs to.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T122022Z" creationid="msdx" creationdate="20141110T121925Z">
        <seg>要引用另一个项目中的任务，你需要把它所属的项目的路径作为前缀加到它的名字中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To refresh all dependencies in the dependency cache, use the &lt;c0&gt;--refresh-dependencies&lt;/c0&gt; option on the command line.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T154010Z" creationid="95" creationdate="20151129T154010Z">
        <seg>要刷新依赖缓存中的所有依赖项，请使用&lt;c0&gt;--refresh-dependencies&lt;/c0&gt;命令行选项。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To retrieve classified dependencies from a Maven repository you can write:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150731T100841Z" creationid="haohang" creationdate="20150731T100841Z">
        <seg>如果你想从一个 Maven 仓库中获取 classified 依赖项，你可以这样写：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To run your web application, you apply the Jetty plugin to your project:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T091050Z" creationid="msdx" creationdate="20141030T091050Z">
        <seg>若要运行您的 web 应用程序，您要将 Jetty 插件应用于您的项目：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To show more of the power of configuration injection, let's add another project called &lt;c0&gt;tropicalFish&lt;/c0&gt; and add more behavior to the build via the build script of the &lt;c1&gt;water&lt;/c1&gt; project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160527T163741Z" creationid="95" creationdate="20160527T163416Z">
        <seg>若要体现配置注入的更强大之处，让我们添加另一个项目&lt;c0&gt;tropicalFish&lt;/c0&gt;，并通过&lt;c1&gt;water&lt;/c1&gt;项目的构建脚本向这个构建添加更多的行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To specify a "must run after" or "should run after" ordering between 2 tasks, you use the &lt;a0&gt;&lt;c1&gt;Task.mustRunAfter()&lt;/c1&gt;&lt;/a0&gt; and &lt;a2&gt;&lt;c3&gt;Task.shouldRunAfter()&lt;/c3&gt;&lt;/a2&gt; methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T013709Z" creationid="msdx" creationdate="20141111T013709Z">
        <seg>如果想指定两个任务之间的“必须在之后运行”和“应该在之后运行”排序，可以使用&lt;a0&gt;&lt;c1&gt;Task.mustRunAfter()&lt;/c1&gt;&lt;/a0&gt;和&lt;a2&gt;&lt;c3&gt;Task.shouldRunAfter()&lt;/c3&gt;&lt;/a2&gt;方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To specify a finalizer task you use the &lt;a0&gt;&lt;c1&gt;Task.finalizedBy()&lt;/c1&gt;&lt;/a0&gt; method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T123112Z" creationid="msdx" creationdate="20141111T123040Z">
        <seg>你可以使用&lt;a0&gt;&lt;c1&gt;Task.finalizedBy()&lt;/c1&gt;&lt;/a0&gt;方法指定一个析构器任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To specify the destination directory, use the &lt;a7&gt;&lt;c8&gt;CopySpec.into()&lt;/c8&gt;&lt;/a7&gt; method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T124338Z" creationid="msdx" creationdate="20141113T124338Z">
        <seg>使用&lt;a7&gt;&lt;c8&gt;CopySpec.into()&lt;/c8&gt;&lt;/a7&gt;方法使用目标目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To switch the &lt;c2&gt;ScalaCompile&lt;/c2&gt; task from the default Ant based compiler to the new Zinc based compiler, set &lt;c3&gt;scalaCompileOptions.useAnt&lt;/c3&gt; to &lt;c4&gt;false&lt;/c4&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T154253Z" creationid="msdx" creationdate="20150501T154253Z">
        <seg>若要把&lt;c2&gt;ScalaCompile&lt;/c2&gt;任务从默认的基于 Ant 的编译器切换为新的基于 Zinc 的编译器，需要将 &lt;c3&gt;scalaCompileOptions.useAnt&lt;/c3&gt;设置为&lt;c4&gt;false&lt;/c4&gt;：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To this end, the core 'native-binary' plugins will attempt to locate and make available supported tool chains.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T085322Z" creationid="haohang" creationdate="20160408T085322Z">
        <seg>为此，核心的“native-binary”将尝试查找并使支持的工具链可用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To use Gradle's up-to-date checking, you need to declare the inputs and outputs of the task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T061102Z" creationid="msdx" creationdate="20141111T060919Z">
        <seg>若要使用 Gradle 的最新状态（up-to-date）检查，您需要声明这个任务的输入和输出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To use an Ivy repository with a standard layout:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T110426Z" creationid="95" creationdate="20151006T110426Z">
        <seg>使用一个标准布局的 Ivy 存储库：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To use the &lt;c0&gt;Copy&lt;/c0&gt; task, you must provide a set of source files to copy, and a destination directory to copy the files to.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T124047Z" creationid="msdx" creationdate="20141113T124047Z">
        <seg>若要使用&lt;c0&gt;Copy&lt;/c0&gt;任务，您必须提供用于复制的源文件和目标目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To use the ANTLR plugin, include in your build script:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T094856Z" creationid="haohang" creationdate="20150625T094856Z">
        <seg>要使用 ANTLR 插件，请在构建脚本中包含以下语句：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To use the Build Dashboard plugin, include the following in your build script:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150713T095157Z" creationid="haohang" creationdate="20150713T095157Z">
        <seg>要使用 Build Dashboard 插件，请在生成脚本中包括:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To use the Checkstyle plugin, include in your build script:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T151742Z" creationid="msdx" creationdate="20150504T151742Z">
        <seg>要使用 Checkstyle 插件，请在构建脚本中包含以下语句：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To use the CodeNarc plugin, include in your build script:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T133049Z" creationid="msdx" creationdate="20150505T133049Z">
        <seg>要使用 CodeNarc 插件，请在构建脚本中包含以下语句：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To use the Ear plugin, include in your build script:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T094435Z" creationid="msdx" creationdate="20150503T094435Z">
        <seg>要使用 Ear 的插件，请在构建脚本中包含以下语句：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To use the Eclipse plugin, include this in your build script:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T004122Z" creationid="haohang" creationdate="20150603T004122Z">
        <seg>要使用 Eclipse 插件，请在构建脚本中包含以下语句：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To use the FindBugs plugin, include in your build script:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T133613Z" creationid="msdx" creationdate="20150505T133613Z">
        <seg>要使用 FindBugs 插件，请在构建脚本中包含以下语句：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To use the Groovy library that ships with Gradle, declare a &lt;c0&gt;localGroovy()&lt;/c0&gt; dependency.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T080108Z" creationid="msdx" creationdate="20150429T080108Z">
        <seg>如果要使用 Gradle 所带的 Groovy 库，请声明&lt;c0&gt;localGroovy()&lt;/c0&gt;依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To use the Groovy plugin, add the following to your build file:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T061653Z" creationid="msdx" creationdate="20141030T061640Z">
        <seg>要使用Groovy插件，你需要在构建脚本文件当中添加以下内容：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To use the Groovy plugin, include in your build script:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T071306Z" creationid="msdx" creationdate="20150429T071306Z">
        <seg>要使用 Groovy 的插件，请在构建脚本中包含以下语句：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To use the IDEA plugin, include this in your build script:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T071723Z" creationid="haohang" creationdate="20150625T071723Z">
        <seg>要使用 IDEA 插件，请在构建脚本中包含以下语句：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To use the JDepend plugin, include in your build script:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T134200Z" creationid="msdx" creationdate="20150505T134200Z">
        <seg>要使用 JDepend 插件，请在构建脚本中包含以下语句：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To use the Java library distribution plugin, include in your build script:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150705T084524Z" creationid="haohang" creationdate="20150705T084524Z">
        <seg>要使用 Java 分发插件，请在构建脚本中加入：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To use the Java plugin, include in your build script:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T073622Z" creationid="Administrator" creationdate="20150425T073622Z">
        <seg>要使用 Java 插件，请在构建脚本中加入：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To use the Jetty plugin, include in your build script:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T150134Z" creationid="msdx" creationdate="20150504T150134Z">
        <seg>要使用 Jetty 的插件，请在构建脚本中包含以下语句：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To use the Maven plugin, include in your build script:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151228T151856Z" creationid="95" creationdate="20151228T151856Z">
        <seg>要使用 Maven 插件，请在构建脚本中包含以下语句：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To use the OSGi plugin, include in your build script:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150526T004254Z" creationid="haohang" creationdate="20150526T004254Z">
        <seg>要使用 OSGi 插件，请在构建脚本中包含以下语句：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To use the PMD plugin, include in your build script:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T135454Z" creationid="msdx" creationdate="20150505T135454Z">
        <seg>要使用 PMD 插件，请在构建脚本中包含以下语句：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To use the Project report plugin, include in your build script:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T061100Z" creationid="haohang" creationdate="20150626T100430Z">
        <seg>要使用项目报告插件，请在构建脚本中包含以下语句：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To use the Scala plugin, include in your build script:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T145129Z" creationid="msdx" creationdate="20150429T145129Z">
        <seg>要使用 Scala 插件，请在构建脚本中包含以下语句：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To use the Signing plugin, include in your build script:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160108T151056Z" creationid="95" creationdate="20160108T151056Z">
        <seg>要使用 Signing 插件，请在构建脚本中包含以下语句：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To use the War plugin, include in your build script:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T085846Z" creationid="msdx" creationdate="20150503T085846Z">
        <seg>要使用 War 的插件，请在构建脚本中包含以下语句：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To use the announce plugin, apply it to your build script:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T063420Z" creationid="haohang" creationdate="20150628T062854Z">
        <seg>要使用 announce 插件，请在构建脚本中包含以下语句：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To use the application plugin, include in your build script:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150702T103839Z" creationid="haohang" creationdate="20150702T103839Z">
        <seg>要使用这个应用程序插件，请在构建脚本中包含以下语句：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To use the build announcements plugin, include in your build script:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T091618Z" creationid="haohang" creationdate="20150628T091618Z">
        <seg>要使用构建公告插件，请在生成脚本中包括:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To use the classpath configuration, use the &lt;c0&gt;asPath&lt;/c0&gt; property of the custom configuration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T060557Z" creationid="msdx" creationdate="20141116T060557Z">
        <seg>若要使用类路径配置，请使用自定义配置里的&lt;c0&gt;asPath&lt;/c0&gt;属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To use the distribution plugin, include in your build script:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150701T025838Z" creationid="haohang" creationdate="20150701T025838Z">
        <seg>要使用分发插件，请在构建脚本中包含以下语句：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To use the groovy compilation tasks, you must also declare the Groovy version to use and where to find the Groovy libraries.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T064833Z" creationid="msdx" creationdate="20141030T064833Z">
        <seg>要使用groovy编译任务，还必须声明要使用的Groovy版本以及从哪里获取Groovy库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To use the local Maven cache as a repository you can do:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T100936Z" creationid="haohang" creationdate="20150807T100922Z">
        <seg>你可以这样把本地的 Maven 缓存作为仓库使用：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To use the plugin, simply execute the task named &lt;c2&gt;init&lt;/c2&gt; where you would like to create the Gradle build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T071253Z" creationid="haohang" creationdate="20150707T071240Z">
        <seg>如果要使用该插件，只需要在你想要的地方，执行名为&lt;c2&gt;init&lt;/c2&gt; 的任务，就可以创建 Gradle 构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To use this task type, you need to define a &lt;c3&gt;destinationDir&lt;/c3&gt; and the test results to include in the report.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T142659Z" creationid="msdx" creationdate="20150428T142659Z">
        <seg>要使用这个任务类型，你需要定义一个&lt;c3&gt;destinationDir&lt;/c3&gt;和要包含到报告的测试结果。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tool Chain</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160128T153339Z" creationid="95" creationdate="20160128T153339Z">
        <seg>工具链</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Top level element that enables configuration of the Eclipse plugin in a DSL-friendly fashion</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T022353Z" creationid="msdx" creationdate="20150620T034249Z">
        <seg>顶级元素，以DSL友好的方式启用 Eclipse 插件的配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Top level element that enables configuration of the idea plugin in a DSL-friendly fashion</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T072657Z" creationid="haohang" creationdate="20150625T072645Z">
        <seg>顶级元素，以DSL友好的方式启用 idea 插件的配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Transitive dependency management is a technique that enables your project to depend on libraries which, in turn, depend on other libraries.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150720T060539Z" creationid="haohang" creationdate="20150720T060539Z">
        <seg>传递依赖管理是一种技术，让你的项目能够依赖那些反过来依赖其他库的库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Troubleshooting</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162155Z" creationid="msdx" creationdate="20141109T162155Z">
        <seg>疑难解答</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Truncated stacktraces are printed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T104123Z" creationid="msdx" creationdate="20141116T104048Z">
        <seg>输出截断的栈跟踪。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tutorial - 'This and That'</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T141830Z" creationid="msdx" creationdate="20141109T164916Z">
        <seg>教程 - 杂七杂八</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tutorials</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162020Z" creationid="msdx" creationdate="20141109T162020Z">
        <seg>教程</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Twitter</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T062800Z" creationid="haohang" creationdate="20150628T062800Z">
        <seg>Twitter</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Two of the configurations are relevant for the usage with artifacts.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151226T085036Z" creationid="95" creationdate="20151221T141758Z">
        <seg>这两个配置都与构件的使用有关。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Two projects are said to be &lt;s0&gt;&lt;e1&gt;decoupled&lt;/e1&gt;&lt;/s0&gt; if they do not directly access each other's project model.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T092823Z" creationid="haohang" creationdate="20160726T092823Z">
        <seg>如果两个项目不能直接访问彼此的项目模型，那么可以说它们是&lt;s0&gt;&lt;e1&gt;解耦的&lt;/e1&gt;&lt;/s0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Type</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T044209Z" creationid="msdx" creationdate="20141108T044209Z">
        <seg>类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Typical build types are 'debug' and 'release', but a project is free to define any set of build types.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160401T090243Z" creationid="haohang" creationdate="20160401T090243Z">
        <seg>典型的构建类型是“debug”和“release”，但一个project可以自由定义任意的构建类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Typically (but not necessarily) this will be the root project of the Gradle build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150514T152401Z" creationid="msdx" creationdate="20150514T152401Z">
        <seg>通常（但不是一定）会是这个 Gradle 构建的根项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Typically (but not necessarily) this will be the root project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T085401Z" creationid="msdx" creationdate="20150512T085401Z">
        <seg>通常（但不是一定）会是根项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Typically, these are compile tasks, test tasks, and code coverage tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T061938Z" creationid="msdx" creationdate="20150513T061930Z">
        <seg>通常情况下，它们是编译任务、测试任务和代码覆盖任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Ubuntu</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T065616Z" creationid="haohang" creationdate="20150628T065616Z">
        <seg>Ubuntu</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Under *nix it is probably preferable to run this as a background task (&lt;s0&gt;&lt;s1&gt;gradle --gui&amp;&lt;/s1&gt;&lt;/s0&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T150011Z" creationid="msdx" creationdate="20141105T145925Z">
        <seg>如果是在linux/unix系统下，则可以通过 (&lt;s0&gt;&lt;s1&gt;gradle --gui&amp;&lt;/s1&gt;&lt;/s0&gt;)让它作为后台任务运行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Understanding how the build language works will help you when you write your build script, and in particular, when you start to write custom plugins and tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T060948Z" creationid="msdx" creationdate="20141108T060948Z">
        <seg>了解构建语言是如何工作的，将有助于你编写构建脚本，特别是当你开始写自定义插件和任务的时候。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unless &lt;c4&gt;groovyOptions.useAnt&lt;/c4&gt; is set to &lt;c5&gt;true&lt;/c5&gt;, Gradle's native Groovy compiler integration is used.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T094418Z" creationid="msdx" creationdate="20150429T094408Z">
        <seg>除非&lt;c4&gt;groovyOptions.useAnt&lt;/c4&gt;设置为&lt;c5&gt;true&lt;/c5&gt;，否则将使用 Gradle 集成的本地的 Groovy 编译器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unless Sonar is run locally and with default settings, it is necessary to configure connection settings for the Sonar server and database.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150510T143638Z" creationid="msdx" creationdate="20150510T143505Z">
        <seg>除非 Sonar 是在本地上运行，并且有默认的配置，否则有必要配置Sonar 服务器及数据库的连接设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unless a task's &lt;c0&gt;groovyClasspath&lt;/c0&gt; is configured explicitly, the Groovy (base) plugin will try to infer it from the task's &lt;c1&gt;classpath&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T091621Z" creationid="msdx" creationdate="20150429T091621Z">
        <seg>除非显式配置了一个 task 的&lt;c0&gt;groovyClasspath&lt;/c0&gt; ，否则 Groovy（基础）插件会尝试推断该 task 的&lt;c1&gt;classpath&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unless a task's &lt;c0&gt;scalaClasspath&lt;/c0&gt; is configured explicitly, the Scala (base) plugin will try to infer it from the task's &lt;c1&gt;classpath&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150430T154531Z" creationid="msdx" creationdate="20150430T154531Z">
        <seg>除非显式配置了一个 task 的&lt;c0&gt;scalaClasspath&lt;/c0&gt; ，否则 Scala（基础）插件会尝试推断该 task 的&lt;c1&gt;classpath&lt;/c1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unless you provide specific number of parallel threads Gradle attempts to choose the right number based on available CPU cores.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T091136Z" creationid="haohang" creationdate="20160726T091136Z">
        <seg>除非你提供了特定数量的并行线程，否则Gradle 将基于可用的 CPU 内核尝试选择正确的线程数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unlike the Sonar plugin, the Sonar Runner plugin works fine with Sonar 3.4 and higher.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T060612Z" creationid="msdx" creationdate="20150513T060612Z">
        <seg>不同于 Sonar 插件，Sonar Runner 插件与 Sonar 3.4 或更高的版本一起使用时也表现正常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unpacking</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162135Z" creationid="msdx" creationdate="20141109T162135Z">
        <seg>解压</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Until then, the Sonar Runner is executed in the main Gradle process.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150525T234752Z" creationid="haohang" creationdate="20150525T234745Z">
        <seg>到那时，Sonar Runner 会在 Gradle 主进程中执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Upload</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083219Z" creationid="msdx" creationdate="20150428T083219Z">
        <seg>Upload</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Uploading</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131833Z" creationid="msdx" creationdate="20150509T131833Z">
        <seg>上传</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Uploading to a Maven repository is described in &lt;a0&gt;Section 52.6, “Interacting with Maven repositories”&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151226T093111Z" creationid="95" creationdate="20151226T093111Z">
        <seg>关于上传到Maven仓库的内容，在&lt;a0&gt;52.6节，“与Maven仓库的交互”&lt;/a0&gt;中描述。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Uploads the artifacts in the &lt;c0&gt;archives&lt;/c0&gt; configuration, including the JAR file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T005118Z" creationid="Administrator" creationdate="20150426T005118Z">
        <seg>使用&lt;c0&gt;archives&lt;/c0&gt;配置上传包括 JAR 文件的构件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usage</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131614Z" creationid="msdx" creationdate="20150509T131614Z">
        <seg>用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usage and troubleshooting</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150508T131800Z" creationid="msdx" creationdate="20150508T131800Z">
        <seg>用法和故障排除</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Use &lt;c0&gt;sudo apt-get install libnotify-bin&lt;/c0&gt; to install it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T090835Z" creationid="haohang" creationdate="20150628T090835Z">
        <seg>使用 &lt;c0&gt;sudo apt-get install libnotify-bin&lt;/c0&gt; 来安装它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Use Custom Gradle Executor - Advanced feature</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T161439Z" creationid="msdx" creationdate="20141105T161253Z">
        <seg>使用自定义的 Gradle 执行器  - 高级功能</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Used by tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T084146Z" creationid="Administrator" creationdate="20150426T084146Z">
        <seg>在哪些任务中使用</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Used for</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T070712Z" creationid="msdx" creationdate="20141116T070712Z">
        <seg>用于</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Uses &lt;a0&gt;JUnit&lt;/a0&gt; for testing</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T094202Z" creationid="haohang" creationdate="20150707T094202Z">
        <seg>使用&lt;a0&gt;JUnit&lt;/a0&gt;测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Uses &lt;a0&gt;ScalaTest&lt;/a0&gt; is used for testing</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T094440Z" creationid="haohang" creationdate="20150707T094440Z">
        <seg>使用&lt;a0&gt;ScalaTest&lt;/a0&gt;作为测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Uses &lt;a0&gt;Spock testing framework&lt;/a0&gt; for testing</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T094651Z" creationid="haohang" creationdate="20150707T094632Z">
        <seg>测试使用 &lt;a0&gt;Spock testing framework&lt;/a0&gt; </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Uses Groovy 2.x</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T094615Z" creationid="haohang" creationdate="20150707T094608Z">
        <seg>使用 Groovy 2.x</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Uses Scala 2.10</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T094353Z" creationid="haohang" creationdate="20150707T094353Z">
        <seg>使用 Scala 2.10</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Uses effective POM and effective settings (support for POM inheritance, dependency management, properties)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T093331Z" creationid="haohang" creationdate="20150707T093331Z">
        <seg>使用有效的 POM 和有效设置（支持 POM 继承、 依赖管理、 属性）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Uses the " &lt;c0&gt;mavenCentral()&lt;/c0&gt; dependency repository</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T094155Z" creationid="haohang" creationdate="20150707T094155Z">
        <seg>使用“&lt;c0&gt;mavenCentral()&lt;/c0&gt;”依赖仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Uses the "&lt;c0&gt;groovy&lt;/c0&gt;" plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T094605Z" creationid="haohang" creationdate="20150707T094605Z">
        <seg>使用“&lt;c0&gt;groovy&lt;/c0&gt;”插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Uses the "&lt;c0&gt;java&lt;/c0&gt;" plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T094134Z" creationid="haohang" creationdate="20150707T094134Z">
        <seg>使用“&lt;c0&gt;java&lt;/c0&gt;”插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Uses the "&lt;c0&gt;scala&lt;/c0&gt;" plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T094348Z" creationid="haohang" creationdate="20150707T094348Z">
        <seg>使用“&lt;c0&gt;scala&lt;/c0&gt;”插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using Ant Tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163309Z" creationid="msdx" creationdate="20141109T163309Z">
        <seg>调用 Ant 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using Ant from Gradle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150330T141229Z" creationid="Administrator" creationdate="20150330T141229Z">
        <seg>从 Gradle 中调用 Ant</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using Ant tasks and types in your build</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150330T141238Z" creationid="Administrator" creationdate="20150330T141238Z">
        <seg>在构建中使用 Ant 任务和类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using Clang distributed with XCode.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160128T153450Z" creationid="95" creationdate="20160128T153450Z">
        <seg>使用 XCode 中的 Clang。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using GCC distributed with XCode.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160128T153439Z" creationid="95" creationdate="20160128T153439Z">
        <seg>使用 XCode 中的 GCC。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using custom descriptor file</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150514T151813Z" creationid="msdx" creationdate="20150514T151813Z">
        <seg>使用自定义的描述符文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using extra project properties is another.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160530T144300Z" creationid="95" creationdate="20160530T144300Z">
        <seg>或者是使用额外的项目属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using methods</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163329Z" creationid="msdx" creationdate="20141109T163329Z">
        <seg>方法抽取</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using pre-built artifacts in the place of building dependent projects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T090840Z" creationid="haohang" creationdate="20160726T090840Z">
        <seg>在构建依赖项目时使用预构建的构件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using the &lt;c0&gt;Sync&lt;/c0&gt; task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150330T141204Z" creationid="Administrator" creationdate="20150330T141204Z">
        <seg>使用&lt;c0&gt;Sync&lt;/c0&gt;任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using the &lt;c3&gt;buildSrc&lt;/c3&gt; project approach keeps separate the task declaration - that is, what the task should do - from the task implementation - that is, how the task does it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T144838Z" creationid="95" creationdate="20160814T144503Z">
        <seg>使用 &lt;c3&gt;buildSrc&lt;/c3&gt; 项目的方法能够保持任务的声明——即它应该做什么，与这个任务的实现——即它是怎么做的，相互独立。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using the Gradle Command-Line</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163824Z" creationid="msdx" creationdate="20141109T163824Z">
        <seg>使用 Gradle 命令行</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using the Gradle Graphical User Interface</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T055032Z" creationid="msdx" creationdate="20141108T031048Z">
        <seg>使用Gradle 图形用户界面</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using the Signing DSL, you can specify that all of the artifacts of this configuration should be signed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160109T072217Z" creationid="95" creationdate="20160109T072217Z">
        <seg>使用Signing DSL，你可以指定这个配置的所有 artifacts 都应该被签名。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using the contents of an archive as a file tree</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150330T141150Z" creationid="Administrator" creationdate="20150330T141150Z">
        <seg>使用归档文件的内容作为文件树</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using the project name for filtering is one option.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160530T144242Z" creationid="95" creationdate="20160530T144242Z">
        <seg>我们可以选择使用project的名称来筛选，</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using this descriptor you can change the name, project directory and build file of a project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T070444Z" creationid="haohang" creationdate="20160519T070444Z">
        <seg>使用这个描述符，你可以更改一个项目的名称、项目目录和构建文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using this method is a useful way to convert some user provided value into an absolute &lt;c0&gt;File&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T143859Z" creationid="msdx" creationdate="20141112T143859Z">
        <seg>这是把一些用户提供的值转换为一个相对路径的&lt;c0&gt;File&lt;/c0&gt;对象的有用方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using your project as a library can either happen from within a multi-project build or by retrieving your project from a repository.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151227T160033Z" creationid="95" creationdate="20151227T160033Z">
        <seg>把一个项目作为类库使用，可能是因为多项目构建，也可能是从仓库中获取项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usually we put the project specific behavior in the build script of the project where we want to apply this specific behavior.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160527T163133Z" creationid="95" creationdate="20160527T162552Z">
        <seg>通常我们会把项目的特定行为放到我们想添加的这个项目的构建脚本里。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usually, a real project will require more than this.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T065822Z" creationid="msdx" creationdate="20141030T065822Z">
        <seg>通常情况下，一个真实的项目所需要的不止于此。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usually, there is a method with the same name as the property, which appends to the set of files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T123540Z" creationid="msdx" creationdate="20141113T123344Z">
        <seg>通常情况下，有一个与属性相同名称的方法，可以追加这个文件集合。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usually, you would pass it a &lt;c2&gt;String&lt;/c2&gt; or &lt;c3&gt;File&lt;/c3&gt; instance.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T142848Z" creationid="msdx" creationdate="20141112T043533Z">
        <seg>通常情况下，你会传给它一个&lt;c2&gt;String&lt;/c2&gt;或&lt;c3&gt;File&lt;/c3&gt;的实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Utilize a pool of reusable processes available for compilation and testing.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141117T150959Z" creationid="msdx" creationdate="20141117T150959Z">
        <seg>使用可用于编译和测试的一个可复用线程池。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Value of the current used JVM</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T045816Z" creationid="Administrator" creationdate="20150427T045816Z">
        <seg>当前JVM所使用的值</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Version 1.12</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T161608Z" creationid="msdx" creationdate="20141109T161608Z">
        <seg>版本 1.12</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Versions in jar names increase the expressiveness of your project and make them easier to maintain.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150716T094023Z" creationid="haohang" creationdate="20150716T094023Z">
        <seg>在 jar 文件中包含版本号提高了在你的项目中的表现，并且让它们更易于维护。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Via the &lt;c2&gt;-u&lt;/c2&gt; command line option, you can tell Gradle not to look in the parent hierarchy for a &lt;c3&gt;settings.gradle&lt;/c3&gt; file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T075245Z" creationid="haohang" creationdate="20160519T074639Z">
        <seg>通过&lt;c2&gt;-u&lt;/c2&gt;命令行选项，你可以让 Gradle 不去父目录找&lt;c3&gt;settings.gradle&lt;/c3&gt;文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Via the string notation you can define a subset of the properties.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150724T034911Z" creationid="haohang" creationdate="20150724T034845Z">
        <seg>通过 string 标记法，你可以定义一个属性的子集。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Visual C++</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160128T153452Z" creationid="95" creationdate="20160128T153452Z">
        <seg>Visual C++</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>VisualCpp</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T091211Z" creationid="haohang" creationdate="20160408T091211Z">
        <seg>VisualCpp</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>WAR file base name</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T151031Z" creationid="msdx" creationdate="20150504T151031Z">
        <seg>WAR 文件的base name</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>WARNING</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T070727Z" creationid="msdx" creationdate="20141116T070727Z">
        <seg>WARNING</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>War</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T085939Z" creationid="msdx" creationdate="20150503T085939Z">
        <seg>War</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>War plugin - tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T090102Z" creationid="msdx" creationdate="20150503T090102Z">
        <seg>War 插件 - tasks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Warning messages</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T070729Z" creationid="msdx" creationdate="20141116T070729Z">
        <seg>警告消息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We add a property to the producer project and create now a configuration time dependency from consumer on producer.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T072747Z" creationid="haohang" creationdate="20160718T072747Z">
        <seg>我们添加一个属性到生产者项目，并且在生产者上创建一个来自消费者的配置时依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We also offer inheritance for projects as you will see later.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160527T162007Z" creationid="95" creationdate="20160527T162007Z">
        <seg>稍后您将看到，我们也提供了项目继承。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We also support the same mechanism for system properties.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T145748Z" creationid="msdx" creationdate="20141109T145644Z">
        <seg>对系统属性我们也支持相同的机制。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We are not that happy with the build script of the &lt;c0&gt;water&lt;/c0&gt; project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160526T155126Z" creationid="95" creationdate="20160526T155126Z">
        <seg>我们对这个 &lt;c0&gt;water&lt;/c0&gt; 项目的构建脚本不是很满意。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We assign this library to a new &lt;s3&gt;&lt;e4&gt;dependency configuration&lt;/e4&gt;&lt;/s3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T085137Z" creationid="haohang" creationdate="20160726T085020Z">
        <seg>我们将这个库指定给一个新的&lt;s3&gt;&lt;e4&gt;依赖配置&lt;/e4&gt;&lt;/s3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We came up with several use cases where the daemon is very useful.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141117T132801Z" creationid="msdx" creationdate="20141117T131823Z">
        <seg>我们准备了几个守护进程非常有用的用例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We can change this property simply by giving it a new value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141123T154156Z" creationid="msdx" creationdate="20141123T154156Z">
        <seg>我们可以简单地通过给它一个新的值来更改此属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We can change where the class files are written via the source set.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141124T074603Z" creationid="msdx" creationdate="20141124T073757Z">
        <seg>我们可以通过这个源码集修改写入类文件的位置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We can do better.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160526T155223Z" creationid="95" creationdate="20160526T155223Z">
        <seg>我们可以进行改善。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We can force all of these libraries to use a consistent version:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T061508Z" creationid="95" creationdate="20151115T061445Z">
        <seg>我们可以强制所有这些库使用一致的版本：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We could add project specific behavior for the &lt;c0&gt;bluewhale&lt;/c0&gt; project like this:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160527T163148Z" creationid="95" creationdate="20160527T162736Z">
        <seg>我们可以这样为&lt;c0&gt;bluewhale&lt;/c0&gt;项目添加特定行为︰</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We could also have used the following syntax:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141122T162227Z" creationid="msdx" creationdate="20141122T162227Z">
        <seg>我们还可以使用下面的语法：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We could not find a good overview for all possible proxy settings.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141121T142319Z" creationid="msdx" creationdate="20141121T141809Z">
        <seg>我们无法很好地概述所有可能的代理服务器设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We define the artifacts of the projects as the files the project provides to the outside world.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151220T123354Z" creationid="95" creationdate="20151220T123354Z">
        <seg>我们把项目的构件定义为项目向外界提供的文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We don't run CI builds with the daemon (i.e. a long running process) as the CI environment is optimized for consistency and reliability.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141120T051158Z" creationid="msdx" creationdate="20141119T153839Z">
        <seg>由于 CI 环境在一致性和可靠性上的优化，我们不通过守护进程运行 CI 构建（即长时间运行进程） 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We execute the &lt;c1&gt;hello&lt;/c1&gt; tasks of the &lt;c2&gt;water&lt;/c2&gt;, the &lt;c3&gt;krill&lt;/c3&gt; and the &lt;c4&gt;tropicalFish&lt;/c4&gt; project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160715T091902Z" creationid="haohang" creationdate="20160715T091817Z">
        <seg>我们执行了&lt;c2&gt;water&lt;/c2&gt;、&lt;c3&gt;krill&lt;/c3&gt;和&lt;c4&gt;tropicalFish&lt;/c4&gt;项目的&lt;c1&gt;hello&lt;/c1&gt;任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We fork a separate daemon process if the jvm arguments for the build are sufficiently different.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141117T153038Z" creationid="msdx" creationdate="20141117T153038Z">
        <seg>如果用于构建的jvm的参数足够不同，我们会fork一个单独的守护进程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We fork a separate daemon process per java home.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141117T152850Z" creationid="msdx" creationdate="20141117T152635Z">
        <seg>对每个java home，我们会fork一个单独的守护进程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We have already seen how to define tasks using a keyword style in &lt;a0&gt;Chapter 6, &lt;i1&gt;Build Script Basics&lt;/i1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T081719Z" creationid="msdx" creationdate="20141109T160905Z">
        <seg>在&lt;a0&gt;第 6 章，&lt;i1&gt;构建脚本基础&lt;/i1&gt;&lt;/a0&gt; 中我们已经看到如何通过关键字这种风格来定义任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We have an interesting set of dependencies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160722T091315Z" creationid="haohang" creationdate="20160722T091315Z">
        <seg>我们有一套有意思的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We have now declared that the &lt;c0&gt;action&lt;/c0&gt; task in the &lt;c1&gt;consumer&lt;/c1&gt; project has an &lt;s2&gt;&lt;e3&gt;execution dependency&lt;/e3&gt;&lt;/s2&gt; on the &lt;c4&gt;action&lt;/c4&gt; task on the &lt;c5&gt;producer&lt;/c5&gt; project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T071859Z" creationid="haohang" creationdate="20160718T071859Z">
        <seg>我们现在声明了&lt;c1&gt;consumer&lt;/c1&gt;项目的&lt;c0&gt;action&lt;/c0&gt;任务对&lt;c5&gt;producer&lt;/c5&gt;项目上的&lt;c4&gt;action&lt;/c4&gt;任务有&lt;s2&gt;&lt;e3&gt;执行依赖&lt;/e3&gt;&lt;/s2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We have said that there is a specific upload task for each configuration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151226T091610Z" creationid="95" creationdate="20151226T091524Z">
        <seg>我们说过，每一个配置都有一个特定的上传任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We have seen these in &lt;a0&gt;Chapter 15, &lt;i1&gt;More about Tasks&lt;/i1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T143204Z" creationid="95" creationdate="20160814T143204Z">
        <seg>我们在 &lt;a0&gt;第十五章 &lt;i1&gt;有关任务的详细信息&lt;/i1&gt;&lt;/a0&gt;中看到过它们。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We have seen these in &lt;a0&gt;Chapter 6, &lt;i1&gt;Build Script Basics&lt;/i1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T141041Z" creationid="95" creationdate="20160814T141041Z">
        <seg>这样的任务我们在&lt;a0&gt;第六章， &lt;i1&gt;构建脚本基础&lt;/i1&gt;&lt;/a0&gt;已经看到过。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We have seen this already in &lt;a0&gt;Section 6.13, “Configure by DAG”&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T135648Z" creationid="95" creationdate="20160521T135648Z">
        <seg>在&lt;a0&gt;第 6.13 章，“使用DAG配置”&lt;/a0&gt;我们已经看到进了。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We have the following project tree.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160522T125130Z" creationid="95" creationdate="20160522T125130Z">
        <seg>我们有以下的项目树。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We have the projects &lt;c0&gt;shared&lt;/c0&gt;, &lt;c1&gt;api&lt;/c1&gt; and&lt;c2&gt;personService&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T083650Z" creationid="haohang" creationdate="20160726T083559Z">
        <seg>我们有这些项目： &lt;c0&gt;shared&lt;/c0&gt;， &lt;c1&gt;api&lt;/c1&gt; 和&lt;c2&gt;personService&lt;/c2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We mention it for the sake of completeness and comparison with other build tools.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151201T064025Z" creationid="haohang" creationdate="20151201T064025Z">
        <seg>我们提到它是为了完整性，以及和其他构建工具进行比较。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We need something better than this hack.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T070949Z" creationid="haohang" creationdate="20160718T070949Z">
        <seg>我们需要比这种技巧更好的实现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We plan to add much more to the existing reports and create additional ones in future releases of Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150626T100211Z" creationid="haohang" creationdate="20150626T100211Z">
        <seg>我们计划在未来发布的版本中，向现有的报告添加更多的内容，以及创建额外的东西。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We plan to improve the ways of managing / pooling the daemons in future.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141117T154114Z" creationid="msdx" creationdate="20141117T154114Z">
        <seg>我们计划在将来改进守护进程的managing / pooling的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We recommend this over full stacktraces.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T105740Z" creationid="msdx" creationdate="20141116T105639Z">
        <seg>我们推荐使用这一个选项而不是打印全栈的跟踪信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We said earlier that the build script defines a project in Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T044315Z" creationid="msdx" creationdate="20141108T040249Z">
        <seg>我们之前说在 Gradle 中构建脚本定义了一个项目（project）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We said earlier, that the core of Gradle is a language for dependency based programming.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160518T031511Z" creationid="haohang" creationdate="20160518T031511Z">
        <seg>我们之前说，Gradle 的核心是一种以依赖为基础进行编程的语言。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We saw in the example above that the Java plugins adds a task named &lt;c0&gt;compileJava&lt;/c0&gt; that has a property named &lt;c1&gt;destinationDir&lt;/c1&gt; (that configures where the compiled Java source should be placed).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141123T153755Z" creationid="msdx" creationdate="20141123T153755Z">
        <seg>在上面的示例中我们看到，Java 插件添加了一个任务，名字为&lt;c0&gt;compileJava&lt;/c0&gt;  ，有一个名为&lt;c1&gt;destinationDir&lt;/c1&gt; 的属性（即配置编译的 Java 代码存放的地方）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We simply switch to the &lt;c0&gt;consumer&lt;/c0&gt; dir and execute the build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T070617Z" creationid="haohang" creationdate="20160718T070617Z">
        <seg>我们简单地切换到&lt;c0&gt;consumer&lt;/c0&gt;目录并执行构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We think it provides a very powerful and flexible way of configuring multiproject builds.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160527T162124Z" creationid="95" creationdate="20160527T162124Z">
        <seg>我们认为它提供了配置 multiproject 的构建非常强大和灵活的方式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We usually put the project specific stuff into the build script of the respective projects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160727T055235Z" creationid="haohang" creationdate="20160727T055235Z">
        <seg>我们通常把项目的具体东西放到各自的项目的构建脚本里。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We will grow the the test filtering api and add more kinds of filters.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T023929Z" creationid="Administrator" creationdate="20150428T023929Z">
        <seg>我们将会继续改进测试过滤的API，并添加更多种类的过滤器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We will have a closer look at this in the next section.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160715T075827Z" creationid="haohang" creationdate="20160715T075827Z">
        <seg>我们将在下一节详细讨论这一点。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We will improve this in a future release of Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T092012Z" creationid="haohang" creationdate="20150801T092012Z">
        <seg>我们将在未来版本的 Gradle 修正这一点。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We will talk more about the &lt;c2&gt;runtime&lt;/c2&gt; configuration in &lt;a3&gt;Section 51.5, “More about project libraries”&lt;/a3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151226T085255Z" creationid="95" creationdate="20151226T085255Z">
        <seg>我们将在&lt;a3&gt; 51.5 节，“详谈项目库”&lt;/a3&gt;中更多地对&lt;c2&gt;runtime&lt;/c2&gt;配置进行讨论。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Web Application Quickstart</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163743Z" creationid="msdx" creationdate="20141109T163743Z">
        <seg>Web 应用程序快速入门</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Web application sources</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T090144Z" creationid="msdx" creationdate="20150503T090144Z">
        <seg>Web 应用程序源代码</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Weeks later there is an exception on the integration machine which can't be reproduced on anyone's machine.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150716T093706Z" creationid="haohang" creationdate="20150716T093706Z">
        <seg>一周后在集成的机器上可能会有一个异常，而这个异常无法在任何人的机器上复现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What exactly the Eclipse plugin generates depends on which other plugins are used:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T003532Z" creationid="haohang" creationdate="20150603T003532Z">
        <seg>Eclipse 插件生成的内容完全取决于使用了哪些其他的插件：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What exactly the IDEA plugin generates depends on which other plugins are used:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T071409Z" creationid="haohang" creationdate="20150625T071409Z">
        <seg>IDEA 插件生成的内容完全取决于使用了哪些其他的插件：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What if one projects needs the jar produced by another project in its compile path?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T083341Z" creationid="haohang" creationdate="20160726T083341Z">
        <seg>可能会出现，一个项目在它的编译路径中需要由另一个项目所输出的jar包？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What is dependency management?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163533Z" creationid="msdx" creationdate="20141109T163533Z">
        <seg>什么是依赖管理？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What is the purpose of this behavior?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T074131Z" creationid="haohang" creationdate="20160519T074131Z">
        <seg>这种行为的目的是什么？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What plugins do</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131428Z" creationid="msdx" creationdate="20150509T131428Z">
        <seg>插件都做了什么</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When &lt;c0&gt;scalaCompileOptions.fork&lt;/c0&gt; is set to &lt;c1&gt;true&lt;/c1&gt;, compilation will take place in an external process.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150430T155622Z" creationid="msdx" creationdate="20150430T155622Z">
        <seg>当&lt;c0&gt;scalaCompileOptions.fork&lt;/c0&gt;设置为&lt;c1&gt;true&lt;/c1&gt;时，编译会在外部进程中进行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When Gradle executes a script, it compiles the script into a class which implements &lt;a0&gt;&lt;c1&gt;Script&lt;/c1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T044619Z" creationid="msdx" creationdate="20141108T044608Z">
        <seg>当 Gradle 执行一个脚本时，它将脚本编译为一个实现了&lt;a0&gt;&lt;c1&gt;Script&lt;/c1&gt;&lt;/a0&gt;接口的类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When Gradle is executed without the daemon, then a new JVM must be launched for every build execution, unless the JVM launched by the Gradle start script happens to have the same parameters.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141121T140737Z" creationid="msdx" creationdate="20141121T140737Z">
        <seg>当不通过守护进程执行 Gradle 时，在每次构建执行中都必须启动一个新的 JVM ，除非 JVM 是由 Gradle 启动脚本启动的，并且恰好具有相同的参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When a build's dependency tree becomes unwieldy, your build tool shouldn't force you to adopt a single, inflexible approach to dependency management.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150716T035654Z" creationid="haohang" creationdate="20150716T035028Z">
        <seg>当一个构建的依赖树变得笨拙时，你的构建工具不应该强迫你对依赖管理采取单一、不灵活的做法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When a platform does not define an architecture or operating system, the default target of the tool chain is assumed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T091829Z" creationid="haohang" creationdate="20160408T091829Z">
        <seg>当一个平台并没有定义一个架构或操作系统时，会被认为使用默认的工具链目标。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When a set of build types, target platforms, and flavors is defined for a component, a &lt;a0&gt;&lt;c1&gt;NativeBinary&lt;/c1&gt;&lt;/a0&gt; model element is created for every possible combination of these.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T084240Z" creationid="haohang" creationdate="20160408T084240Z">
        <seg>当为一个组件定义了一组构建类型，目标平台，以及flavor时，将会为它们的每一种可能的组合创建一个&lt;a0&gt;&lt;c1&gt;NativeBinary&lt;/c1&gt;&lt;/a0&gt; 模型元素。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When an argument resolves to a directory, everything under that directory (but not the directory itself) is recursively copied into the destination directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T130444Z" creationid="msdx" creationdate="20141113T124522Z">
        <seg>当参数解析为一个目录时，该目录下的所有文件（不包含目录本身） 都会递归复制到目标目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When an argument resolves to a file, that file is copied into the destination directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T130456Z" creationid="msdx" creationdate="20141113T130456Z">
        <seg>当参数解析为一个文件时，该文件会复制到目标目录中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When an argument resolves to a non-existing file, that argument is ignored.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T130515Z" creationid="msdx" creationdate="20141113T130515Z">
        <seg>当参数解析为一个不存在的文件时，参数会被忽略。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When analyzing a project hierarchy, values set via system properties apply to the root project of the analyzed hierarchy.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150525T234342Z" creationid="haohang" creationdate="20150525T234250Z">
        <seg>当分析项目的层次结构时，通过系统属性设置的值应用于所分析层次结构的根项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When compiling the 'french' variant, a separate macro is defined which leads to a different binary being produced.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T081513Z" creationid="haohang" creationdate="20160408T081213Z">
        <seg>当编译“french”变种时，会定义一个单独的宏，以产生不同的二进制文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When configured, Gradle will run in incubating parallel mode.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141120T053823Z" creationid="msdx" creationdate="20141120T053823Z">
        <seg>如果配置了这一个，Gradle 将在孵化的并行模式下运行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When creating the simple task, you have to set the &lt;c1&gt;overwrite&lt;/c1&gt; property to true.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T020224Z" creationid="msdx" creationdate="20141111T020147Z">
        <seg>当创建这个简单的任务时，您必须将&lt;c1&gt;overwrite&lt;/c1&gt;属性设置为 true。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When defining an exclude, you can specify either only the organization or only the module name or both.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T100629Z" creationid="haohang" creationdate="20150801T100427Z">
        <seg>在定义一个 exclude 时，你可以只指定 organization 或者 module 名称，或者是两者都指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When deploying an artifact to a Maven repository, Gradle automatically generates a POM for it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T143645Z" creationid="95" creationdate="20160105T143645Z">
        <seg>当部署一个artifact 到一个 Maven 库时，Gradle 会自动为它生成一个POM。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When deploying signatures for your artifacts to a Maven repository, you will also want to sign the published POM file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160126T145112Z" creationid="95" creationdate="20160126T144654Z">
        <seg>当为你的artifacts部署签名到 Maven 仓库时，你还想签名发布的 POM 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When developing a web application, where the application is assembled many times.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141117T135332Z" creationid="msdx" creationdate="20141117T133019Z">
        <seg>当开发一个 web 应用程序中，应用程序会被组装多次。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When discovering what a build can do, where &lt;s0&gt;&lt;c1&gt;gradle tasks&lt;/c1&gt;&lt;/s0&gt; is executed a number of times.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141117T135917Z" creationid="msdx" creationdate="20141117T135917Z">
        <seg>当发现构建能做什么，在&lt;s0&gt;&lt;c1&gt;gradle tasks&lt;/c1&gt;&lt;/s0&gt;在哪里会执行多次。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When evaluated, the closure is passed the task whose dependencies are being calculated.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T123248Z" creationid="msdx" creationdate="20141110T122709Z">
        <seg>在计算依赖时，闭包会被传入正在计算依赖的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When it executes, it copies the source files into the destination directory, and then removes any files from the destination directory which it did not copy.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T144733Z" creationid="msdx" creationdate="20141113T144733Z">
        <seg>当它执行时，它会将源文件复制到目标目录中，然后从目标目录移除所有不是它复制的文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When run with &lt;c0&gt;--continue&lt;/c0&gt;, it is possible for &lt;c1&gt;B&lt;/c1&gt; to execute in the event that &lt;c2&gt;A&lt;/c2&gt; fails.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T014703Z" creationid="msdx" creationdate="20141111T014655Z">
        <seg>当&lt;c0&gt;--continue&lt;/c0&gt;参数运行时，可能会是&lt;c2&gt;A&lt;/c2&gt;执行失败后&lt;c1&gt;B&lt;/c1&gt;执行了。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When running with offline, Gradle will never attempt to access the network to perform dependency resolution.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T153751Z" creationid="95" creationdate="20151129T153751Z">
        <seg>在使用离线运行时，Gradle 将不会尝试访问网络来执行依赖解析。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When running with the daemon, a JVM with the correct parameters is started once and reused for each daemon build execution.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141121T140606Z" creationid="msdx" creationdate="20141120T081855Z">
        <seg>当通过守护进程运行时，带有正确参数的 JVM 会启动一次，并在每次的守护进程构建执行时复用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When set to &lt;c0&gt;true&lt;/c0&gt; the Gradle daemon is to run the build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141119T153604Z" creationid="msdx" creationdate="20141119T153604Z">
        <seg>当设置为&lt;c0&gt;true&lt;/c0&gt; 时，Gradle 守护进程会运行构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When setting only a single property at a time, the equivalent property syntax is more succinct:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T092211Z" creationid="msdx" creationdate="20150512T092104Z">
        <seg>当一次只设置一个属性时，等效属性的语法更加简洁：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When signing is not required and the POM cannot be signed due to insufficient configuration (i.e. no credentials for signing) then the &lt;c0&gt;signPom()&lt;/c0&gt; method will silently do nothing.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160126T145716Z" creationid="95" creationdate="20160126T145300Z">
        <seg>当不需要签名，以及由于缺少配置（即没有签名证书）而不能签名 POM 的时候，&lt;c0&gt;signPom()&lt;/c0&gt;方法将什么都不会做，并且不会进行任何的提示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When specifying what is to be signed via the Signing DSL, the resultant signature artifacts are automatically added to the &lt;c0&gt;signatures&lt;/c0&gt; and &lt;c1&gt;archives&lt;/c1&gt; dependency configurations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160126T144455Z" creationid="95" creationdate="20160126T143830Z">
        <seg>当通过 Signing DSL指定什么要被签名的时候，生成的signature会自动地加入到 &lt;c0&gt;signatures&lt;/c0&gt; 和 &lt;c1&gt;archives&lt;/c1&gt; 的依赖配置中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When the &lt;c0&gt;visual-studio&lt;/c0&gt; plugin is applied, a task name &lt;c1&gt;${component.name}VisualStudio&lt;/c1&gt; is created for each defined component.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T095242Z" creationid="haohang" creationdate="20160408T095242Z">
        <seg>当应用 &lt;c0&gt;visual-studio&lt;/c0&gt; 插件后，会为每一个定义的组件创建一个名为 &lt;c1&gt;${component.name}VisualStudio&lt;/c1&gt; 的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When the Eclipse plugin encounters a Scala project, it adds additional configuration to make the project work with Scala IDE out of the box.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T081956Z" creationid="msdx" creationdate="20150503T081956Z">
        <seg>当 Eclipse 插件遇到 Scala 项目时，它将添加额外的配置，使得项目能够在使用 Scala IDE 时开箱即用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When the IDEA plugin encounters a Scala project, it adds additional configuration to make the project work with IDEA out of the box.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T082121Z" creationid="msdx" creationdate="20150503T082121Z">
        <seg>当 IDEA 插件遇到 Scala 项目时，它将添加额外的配置，使得项目能够在使用 IDEA 时开箱即用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When the archive is generated, a corresponding &lt;c3&gt;MANIFEST.MF&lt;/c3&gt; file is written into the archive.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T145209Z" creationid="msdx" creationdate="20150428T145209Z">
        <seg>当生成archive时，相应的&lt;c3&gt;MANIFEST.MF&lt;/c3&gt;文件也会被写入进去。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When the command line option is used, the inclusion filters declared in the build script are ignored.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T023342Z" creationid="Administrator" creationdate="20150428T023342Z">
        <seg>当使用该命令行选项选项时，在构建脚本中声明的列入过滤器的测试将会被忽略。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When the dependency is declared by a static version and a module descriptor file is found in a repository, there is no need to continue searching later repositories and the remainder of the process is short-circuited.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T053701Z" creationid="95" creationdate="20151007T024210Z">
        <seg>当依赖由一个静态版本来声明，并且在仓库中找到模块描述符文件时，将不会再继续搜索后面的仓库，这个过程的其余部分是短路的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When the last parameter of a method is a closure, you can place the closure after the method call:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T063355Z" creationid="msdx" creationdate="20141108T063355Z">
        <seg>当方法的最后一个参数是一个闭包时，你可以把闭包放在方法调用之后：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When these large dependency trees need to change, you'll often have to solve some dependency version conflicts.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150720T064303Z" creationid="haohang" creationdate="20150720T063608Z">
        <seg>当这些大的依赖树需要更改时，你经常得解决一些依赖的版本冲突。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When using JUnit, we scan for both JUnit 3 and 4 test classes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T040928Z" creationid="Administrator" creationdate="20150428T040928Z">
        <seg>当使用 JUnit 时，我们扫描 JUnit 3 和 4 的测试类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When using TestNG, we scan for methods annotated with &lt;c0&gt;@Test&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T041153Z" creationid="Administrator" creationdate="20150428T041153Z">
        <seg>当使用 TestNG 时，我们扫描所有带有&lt;c0&gt;@Test&lt;/c0&gt;注解的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When using test driven development, where the unit tests are executed many times.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141117T132951Z" creationid="msdx" creationdate="20141117T132951Z">
        <seg>当使用测试驱动开发时，单元测试会被执行多次。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When using the &lt;a0&gt;&lt;c1&gt;VisualCpp&lt;/c1&gt;&lt;/a0&gt; tool chain, Gradle is able to compile Window Resource (&lt;c2&gt;rc&lt;/c2&gt;) files and link them into a native binary.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160324T153208Z" creationid="95" creationdate="20160324T153150Z">
        <seg>当使用&lt;a0&gt;&lt;c1&gt;VisualCpp&lt;/c1&gt;&lt;/a0&gt;工具链时，Gradle 时能够编译Window Resource (&lt;c2&gt;rc&lt;/c2&gt;) 文件并将它们链接到本地的二进制文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When we have executed the &lt;c0&gt;hello&lt;/c0&gt; task from the root project dir things behaved in an intuitive way.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160530T151959Z" creationid="95" creationdate="20160530T151924Z">
        <seg>当我们从根项目的目录执行了&lt;c0&gt;hello&lt;/c0&gt;任务时，事情会以一种直观的方式来表现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you declare an enhanced task, you specify the type, or class of the task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T143525Z" creationid="95" creationdate="20160814T143525Z">
        <seg>当你定义一个增强型任务时，你要定义这个任务的类型或者是类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you define a new source set, the Java plugin adds some dependency configurations for the source set, as shown in &lt;a0&gt;Table 23.6, “Java plugin - source set dependency configurations”&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T132936Z" creationid="Administrator" creationdate="20150427T132936Z">
        <seg>当您定义一个新的源集时，Java 插件会为该源集添加一些依赖配置，如&lt;a0&gt;表 23.6，“Java 插件 - 源集依赖项配置”&lt;/a0&gt;所示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you import an Ant build, each Ant target is treated as a Gradle task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T060755Z" creationid="msdx" creationdate="20141116T060755Z">
        <seg>当您导入一个 Ant 构建时，每个 Ant 目标被视为一个 Gradle 任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you register a logger, only the logging for the interfaces that it implements is replaced.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T155025Z" creationid="msdx" creationdate="20141116T155025Z">
        <seg>当你注册一个logger时，只能替换它实现的接口的日志记录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you resolve a &lt;s6&gt;&lt;e7&gt;changing module&lt;/e7&gt;&lt;/s6&gt;, the artifacts are named using the version you requested, but the underlying artifacts may change over time.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T012307Z" creationid="haohang" creationdate="20150722T012307Z">
        <seg>当你解析一个&lt;s6&gt;&lt;e7&gt;变化模块&lt;/e7&gt;&lt;/s6&gt;时，这个 artifacts 使用你请求的版本进行命名，但下层的 artifacts 可能随时会有变化。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you set &lt;c0&gt;archiveTask.baseName&lt;/c0&gt; to a value other than the default, make sure to set &lt;c1&gt;uploadTask.repositories.mavenDeployer.pom.artifactId&lt;/c1&gt; to the same value.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T142040Z" creationid="95" creationdate="20160106T142040Z">
        <seg>当你将&lt;c0&gt;archiveTask.baseName&lt;/c0&gt;设置为非默认值时，请确保将&lt;c1&gt;uploadTask.repositories.mavenDeployer.pom.artifactId&lt;/c1&gt;设置为相同的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Where does this method come from?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T040115Z" creationid="msdx" creationdate="20141108T040115Z">
        <seg>这方法从何而来？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Where to next?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163421Z" creationid="msdx" creationdate="20141109T163419Z">
        <seg>下一步目标？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Which libraries depend on the protocol you need.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T134456Z" creationid="95" creationdate="20160105T134456Z">
        <seg>具体是哪些库，将取决于你需要的协议。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>While Gradle has strong opinions on dependency management, the tool gives you a choice between two options: follow recommended best practices or support any kind of pattern you can think of.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150716T083718Z" creationid="haohang" creationdate="20150716T083613Z">
        <seg>由于 Gradle 对依赖管理有强烈的主张，该工具使你可以选择两个选项之间：遵循推荐的最佳实践或支持任何你能想到的类型的模式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>While Maven provides a complete build system, Ivy focuses solely on dependency management.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150716T074045Z" creationid="haohang" creationdate="20150716T074045Z">
        <seg>Maven 提供了一个完整的构建系统，而 Ivy 则完全着眼于依赖管理。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>While all tasks of type &lt;a0&gt;&lt;c1&gt;Test&lt;/c1&gt;&lt;/a0&gt; are automatically enhanced to provide coverage information when the &lt;c2&gt;java&lt;/c2&gt; plugin has been applied, any task that implements &lt;a3&gt;&lt;c4&gt;JavaForkOptions&lt;/c4&gt;&lt;/a3&gt; can be enhanced by the JaCoCo plugin.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T135425Z" creationid="msdx" creationdate="20150506T132327Z">
        <seg>虽然&lt;a0&gt;&lt;c1&gt;Test&lt;/c1&gt;&lt;/a0&gt;的所有任务会在&lt;c2&gt;java&lt;/c2&gt;插件被配置使用时会自动增强以提供覆盖率信息，但是任何实现了&lt;a3&gt;&lt;c4&gt;JavaForkOptions&lt;/c4&gt;&lt;/a3&gt;的任务都可以通过 JaCoCo 插件得到增强。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>While certainly useful at times, we do recommend to keep the bulk of the configuration in a (versioned) build script, readily available to everyone.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150525T234201Z" creationid="haohang" creationdate="20150525T234201Z">
        <seg>虽然有时当然很有用，但我们建议在 （版本控制的）构建脚本中，能够方便地让每个人都保持大部分的配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>While it's possible to configure these in your local environment via GRADLE_OPTS or JAVA_OPTS, certain settings like JVM memory settings, Java home, daemon on/off can be more useful if they can versioned with the project in your VCS so that the entire team can work with consistent environment.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141119T152950Z" creationid="msdx" creationdate="20141119T064744Z">
        <seg>当可以通过 GRADLE_OPTS 或 JAVA_OPTS 在你的本地环境中配置这些选项时，如果某些设置如 JVM 内存设置， Java home， 守护进程的开/关，它们可以和你的项目在你的版本控制系统中被版本化的话，将会更有用，这样整个团队就可以使用一致的环境了。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>While many excellent build tools exist for this space of software development, Gradle offers developers it's trademark power and flexibility together with the dependency management practices more traditionally found in the JVM development space.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160128T152540Z" creationid="95" creationdate="20160128T152004Z">
        <seg>虽然对于这种软件开发的空间，已经有许多优秀的构建工具存在，但是Gradle 向开发人员提供的是它的强大特征和灵活性，以及在依赖管理实践上，在JVM开发空间上更为传统的发现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>While parallel execution does not strictly require decoupling at configuration time, the long-term goal is to provide a powerful set of features that will be available for fully decoupled projects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T090509Z" creationid="haohang" creationdate="20160726T090509Z">
        <seg>而并行执行并不严格要求在配置时解耦，它的长期目标是提供一套强大的可用于全解耦的项目的功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>While the &lt;c0&gt;c&lt;/c0&gt; plugin defines these default locations for each &lt;a1&gt;&lt;c2&gt;CSourceSet&lt;/c2&gt;&lt;/a1&gt;, it is possible to extend or override these defaults to allow for a different project layout.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160225T090539Z" creationid="haohang" creationdate="20160225T090539Z">
        <seg>而&lt;c0&gt;c&lt;/c0&gt;插件为每个&lt;a1&gt;&lt;c2&gt;CSourceSet&lt;/c2&gt;&lt;/a1&gt;定义了这些默认的位置，且可以扩展或重写这些默认值使能够成为不同的项目布局。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>While the &lt;c0&gt;cpp&lt;/c0&gt; plugin defines these default locations for each &lt;a1&gt;&lt;c2&gt;CppSourceSet&lt;/c2&gt;&lt;/a1&gt;, it is possible to extend or override these defaults to allow for a different project layout.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160225T085455Z" creationid="haohang" creationdate="20160225T085455Z">
        <seg>而&lt;c0&gt;cpp&lt;/c0&gt;插件为每个&lt;a1&gt;&lt;c2&gt;CppSourceSet&lt;/c2&gt;&lt;/a1&gt;定义了这些默认的位置，且可以扩展或重写这些默认值使能够成为不同的项目布局。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>While the &lt;c1&gt;build type&lt;/c1&gt; and &lt;c2&gt;target platform&lt;/c2&gt; variant dimensions have a defined meaning in Gradle, each project is free to define any number of flavors and apply meaning to them in any way.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T080853Z" creationid="haohang" creationdate="20160408T080853Z">
        <seg>在Gradle中 &lt;c1&gt;build type&lt;/c1&gt; 和 &lt;c2&gt;target platform&lt;/c2&gt; 变种维度是有一个确定的定义的，而每一个project都可以自由地定义数量的flavor并且用任何方式去应用它们的意义。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>While the build continued to work, developers were starting to notice all sorts of surprising (and surprisingly awful) bugs in production.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150721T055631Z" creationid="haohang" creationdate="20150721T055631Z">
        <seg>虽然可以继续构建，开发者已经开始注意到在生产中出现了各种令人惊讶（和惊人可怕）的 bug。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>While the strategies introduced above are usually enough to solve most conflicts, Gradle provides more fine-grained mechanisms to resolve version conflicts:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150721T090203Z" creationid="haohang" creationdate="20150721T083501Z">
        <seg>虽然上面介绍的策略通常足够解决大部分的冲突，但是 Gradle 也提供更细粒度的机制，以解决版本冲突：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>While the version of a jar is usually in the Manifest file, it isn't readily apparent when you are inspecting a project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150716T092308Z" creationid="haohang" creationdate="20150716T092205Z">
        <seg>Jar 的版本通常是在清单文件中，当你要检查一个项目时它并不显而易见。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>While this new mechanism is &lt;a2&gt;incubating&lt;/a2&gt; and not yet complete, it introduces some new concepts and features that do (and will) make Gradle publishing even more powerful.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151220T120620Z" creationid="95" creationdate="20151220T120615Z">
        <seg>这种新机制现在还在&lt;a2&gt;孵化中&lt;/a2&gt;而尚未完成，它引入了一些新的概念和特性，它们将使 Gradle 的发布功能更强大。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>While this provides a great deal of power and flexibility to the build author, it also limits the flexibility that Gradle has when building those projects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T092334Z" creationid="haohang" creationdate="20160726T092334Z">
        <seg>虽然这能为构建作者提供强大的功能和灵活性，但它也限制了在构建这些项目时Gradle 的灵活性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>While you are working in a typical development cycle repeatedly building and testing changes to the :api project (knowing that you are only changing files in this one project), you may not want to even suffer the expense of :shared:compile checking to see what has changed in the :shared project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160727T051820Z" creationid="haohang" creationdate="20160726T095313Z">
        <seg>当你在进行一个典型的开发周期的构建，或者是测试:api项目的修改（要知道你只修改了一个项目的文件），你可能不想经历:shared:compile 花费检查来看在:shared项目里修改了什么内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>While you could try to manage this problem manually, you will quickly find that this approach doesn't scale.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150720T065111Z" creationid="haohang" creationdate="20150720T065111Z">
        <seg>虽然你可以尝试手动管理这个问题，你很快就会发现这种方法不能扩展。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Why Groovy?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162016Z" creationid="msdx" creationdate="20141109T162016Z">
        <seg>为什么使用 Groovy?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Why are you using the Java plugin?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T145808Z" creationid="msdx" creationdate="20141113T145808Z">
        <seg>为什么要用 Java 插件？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Wildcard '*' is supported for matching any characters</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T023019Z" creationid="Administrator" creationdate="20150428T023019Z">
        <seg>通配符 “*” 支付匹配任何字符</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Windows</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T065612Z" creationid="haohang" creationdate="20150628T065612Z">
        <seg>Windows</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Windows XP and later, Visual C++ 2010 and later.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160128T153521Z" creationid="95" creationdate="20160128T153521Z">
        <seg>Windows XP及以上，Visual C++ 2010 及以上版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Windows XP and later, using GCC distributed with Cygwin.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160128T153546Z" creationid="95" creationdate="20160128T153546Z">
        <seg>Windows XP及以上，使用Cygwin的GCC。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Windows XP and later.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160128T153557Z" creationid="95" creationdate="20160128T153557Z">
        <seg>Windows XP 及以上。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Windows resources to be included in a native binary are provided via a &lt;a0&gt;&lt;c1&gt;WindowsResourceSet&lt;/c1&gt;&lt;/a0&gt;, which defines a set of Windows Resource source files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160325T020630Z" creationid="95" creationdate="20160324T153250Z">
        <seg>将 Windows 资源包含进本机二进制文件中，是通过一个&lt;a0&gt;&lt;c1&gt;WindowsResourceSet&lt;/c1&gt;&lt;/a0&gt;提供的，它定义了一组Windows Resource源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Windows, Mac OS X, Ubuntu</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T090847Z" creationid="haohang" creationdate="20150628T090847Z">
        <seg>Windows, Mac OS X, Ubuntu</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>With Gradle or Ivy, the case is different.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150724T042902Z" creationid="haohang" creationdate="20150724T042902Z">
        <seg>而使用 Gradle 或Ivy的话，情况就不同了。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>With Gradle you can deploy to remote Maven repositories or install to your local Maven repository.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160104T153312Z" creationid="95" creationdate="20160104T153312Z">
        <seg>通过 Gradle你可以部署到远程 Maven 仓库，或者是安装到你的本地 Maven 仓库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>With Gradle you can mix and match approaches; for example, you could store your jars in an SCM without XML descriptor files and still use transitive dependency management.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150721T054126Z" creationid="haohang" creationdate="20150721T054126Z">
        <seg>通过 Gradle 你可以混合使用和适配一些方法；例如，你可以在 SCM 中存储你的 jar 包，而不需要 XML 描述符文件，并且仍然使用传递依赖管理。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>With Gradle you just don't configure them via XML but directly via their API.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151007T022547Z" creationid="95" creationdate="20151007T022547Z">
        <seg>通过Gradle，你只是不用通过XML来配置它们，而是通过它们的API。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>With Gradle, you can adapt your new build to any existing source of dependencies or dependency metadata.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150716T040813Z" creationid="haohang" creationdate="20150716T040813Z">
        <seg>使用 Gradle，你可以让你的新构建适配任何现有的依赖来源或依赖元数据。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>With a good conflict reporting tool like Gradle, that information can be used to communicate with the entire organization and standardize on a single version.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150721T060708Z" creationid="haohang" creationdate="20150721T060708Z">
        <seg>通过一个好的冲突报告工具，像 Gradle，这些信息可以用于与整个组织沟通，并在一个单一的版本上实现标准化。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>With enhanced tasks, you don't need to implement the task behaviour as you do with simple tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T143316Z" creationid="95" creationdate="20160814T143316Z">
        <seg>使用这些增强型的任务，你不需要像使用简单任务一样去实现这个任务的行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>With hundreds of thousands of interdependent open source components each with a range of versions and incompatibilities, dependency management has a habit of causing problems as builds grow in complexity.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150716T081115Z" creationid="haohang" creationdate="20150716T035020Z">
        <seg>成千上万的开源组件互相依赖，每个组件都有一系列的版本及不兼容性，随着构建变得越来越复杂，依赖管理常常出现各种问题。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>With more and more CPU cores available on developer desktops and CI servers, it is important that Gradle is able to fully utilise these processing resources.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T085555Z" creationid="haohang" creationdate="20160726T085555Z">
        <seg>随着在开发人员的台式机和CI服务器上，有越来越多的CPU内核可用，Gradle 能够充分利用这些处理资源就很重要。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>With the &lt;c0&gt;-D&lt;/c0&gt; command line option you can pass a system property to the JVM which runs Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T075831Z" creationid="msdx" creationdate="20141109T073926Z">
        <seg> 从Gradle 启动的 JVM，你可以使用&lt;c0&gt;-D&lt;/c0&gt;命令行选项向它传入一个系统属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>With the &lt;c0&gt;gradle.properties&lt;/c0&gt; files you can also set system properties.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T150123Z" creationid="msdx" creationdate="20141109T150123Z">
        <seg>通过&lt;c0&gt;gradle.properties&lt;/c0&gt;文件，你还可以设置系统属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>With the Zinc based compiler, even Java code will be compiled incrementally.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T155245Z" creationid="msdx" creationdate="20150501T155245Z">
        <seg>使用基于 Zinc 的编译器时，即使是 Java 代码也将会进行增量编译。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>With the coming releases the API will grow to provide more information about the resolution result.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T033819Z" creationid="haohang" creationdate="20150807T033819Z">
        <seg>在未来的版本，这个API 将提供更多有关解析结果的详细信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>With the help of the Project report plugin (see &lt;a1&gt;Chapter 41, &lt;i2&gt;The Project Report Plugin&lt;/i2&gt;&lt;/a1&gt;) such a report can be created by your build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T033055Z" creationid="haohang" creationdate="20150807T032917Z">
        <seg>通过使用 Project report 插件（参阅 &lt;a1&gt;第 41 章， &lt;i2&gt;Project Report 插件&lt;/i2&gt;&lt;/a1&gt;），在构建中可以创建一个这样的报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>With the introduction of directory tasks (see &lt;a1&gt;Section 14.1, “Directory creation”&lt;/a1&gt;) this was no longer possible, as the name of the directory task contains the &lt;c2&gt;'/'&lt;/c2&gt; character.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T061858Z" creationid="haohang" creationdate="20160718T061858Z">
        <seg>在引入目录任务（见&lt;a1&gt;第 14.1节，“创建目录”&lt;/a1&gt;）后将不能再这样做，因为目录任务的名称包含&lt;c2&gt;/&lt;/c2&gt;字符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>With the map notation you can define all properties.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150724T034930Z" creationid="haohang" creationdate="20150724T034930Z">
        <seg>而通过使用 map 标记法，你可以定义所有的属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>With these rules present it is still possible to execute &lt;c0&gt;taskA&lt;/c0&gt; without &lt;c1&gt;taskB&lt;/c1&gt; and vice-versa.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T012755Z" creationid="msdx" creationdate="20141111T012610Z">
        <seg>目前使用这些规则仍有可能出现&lt;c0&gt;taskA&lt;/c0&gt;执行而&lt;c1&gt;taskB&lt;/c1&gt; 没有执行，或者&lt;c0&gt;taskB&lt;/c0&gt;执行而&lt;c1&gt;taskA&lt;/c1&gt; 没有执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>With this builder, any element listed in the &lt;a1&gt;Maven POM reference&lt;/a1&gt; can be added.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T142919Z" creationid="95" creationdate="20160106T142919Z">
        <seg>通过这个生成器，&lt;a1&gt;Maven POM 参考&lt;/a1&gt;中列出的任何元素都可以被添加进来。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Within a project you can address a task of the same project just by its name.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T061728Z" creationid="haohang" creationdate="20160718T061728Z">
        <seg>在一个项目内，你可以通过任务的名称得到同一个项目的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Without modifying the &lt;c0&gt;build.gradle&lt;/c0&gt; file, the wrapper plugin can be auto-applied to the rootproject of the current build by running &lt;c1&gt;gradle wrapper&lt;/c1&gt; from the commandline.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150710T012800Z" creationid="haohang" creationdate="20150710T012800Z">
        <seg>不需要修改&lt;c0&gt;build.gradle&lt;/c0&gt;文件，该 wrapper 插件可以通过从命令行运行&lt;c1&gt;gradle wrapper&lt;/c1&gt;，自动应用到当前构建的 rootproject 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Without this, in the example above, we would have had to reconfigure every object that needs to work with the class files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141124T100039Z" creationid="msdx" creationdate="20141124T095513Z">
        <seg>如果没有这一点，在上面的例子中，我们将不得不重新配置需要使用类文件的每个对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Working With Files</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150330T141113Z" creationid="Administrator" creationdate="20150330T141113Z">
        <seg>使用文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Working through problems</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162241Z" creationid="msdx" creationdate="20141109T162241Z">
        <seg>解决问题</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Working with source sets</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131701Z" creationid="msdx" creationdate="20150509T131701Z">
        <seg>使用source sets</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Works with</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141209T073446Z" creationid="msdx" creationdate="20141126T120900Z">
        <seg>与什么插件一起使用</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Workspace</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T073757Z" creationid="haohang" creationdate="20150625T073757Z">
        <seg>Workspace</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Worse yet, this unintentional downgrade of Spring introduced several security vulnerabilities into the system, which now required a full security audit throughout the organization.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150721T055755Z" creationid="haohang" creationdate="20150721T055755Z">
        <seg>然而，更糟糕的是，无意降低版本的 Spring 向系统引入了几个安全漏洞，现在需要在整个组织中进行全面的安全审核。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Wrapper</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T071604Z" creationid="haohang" creationdate="20150707T071604Z">
        <seg>Wrapper</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Writing Build Scripts</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T031200Z" creationid="msdx" creationdate="20141108T031200Z">
        <seg>编写构建脚本</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Writing this chapter was pretty exhausting and reading it might have a similar effect.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160727T053713Z" creationid="haohang" creationdate="20160727T053554Z">
        <seg>写这一章相当耗费精力，可能你想起来也有同样的感受。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Writing your own log messages</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150330T141316Z" creationid="Administrator" creationdate="20150330T141316Z">
        <seg>编写自己的日志消息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>WtpComponent</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T105350Z" creationid="haohang" creationdate="20150624T105350Z">
        <seg>WtpComponent</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>WtpFacet</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T105406Z" creationid="haohang" creationdate="20150624T105406Z">
        <seg>WtpFacet</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>XmlProvider</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T105256Z" creationid="haohang" creationdate="20150624T105256Z">
        <seg>XmlProvider</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Yet Gradle offers complete transitive dependency management.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151201T062536Z" creationid="haohang" creationdate="20151201T062536Z">
        <seg>然而 Gradle 能提供完整的传递依赖管理。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Yet they usually do not contain relevant information for what has gone wrong in &lt;s0&gt;&lt;e1&gt;your&lt;/e1&gt;&lt;/s0&gt; code.)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T113051Z" creationid="msdx" creationdate="20141116T113051Z">
        <seg>然而他们通常不包含&lt;s0&gt;&lt;e1&gt;你的&lt;/e1&gt;&lt;/s0&gt;的代码中哪里错了的相关信息。）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Yet, this approach may not be the most efficient in a very large multi-project builds.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160522T120629Z" creationid="95" creationdate="20160522T120629Z">
        <seg>然而，在一个非常大的多项目构建里，这种方法可能不是最有效的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You also might want to refactor some part of the :api project that is used in other projects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160727T052419Z" creationid="haohang" creationdate="20160727T052322Z">
        <seg>你也可能想要重构:api 项目中一些被其他项目用到的内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You are able to construct a resource-only library by providing Windows Resource sources with no other language sources, and configure the linker as appropriate:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160325T023053Z" creationid="haohang" creationdate="20160325T023053Z">
        <seg>你能够通过提供没有任何其他语言来源的 Windows Resource 源文件，来构造纯资源库，并适当地配置链接器︰</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can access Ant types in the same way that you access tasks, using the name of the type as the method name.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141115T171109Z" creationid="msdx" creationdate="20141115T162803Z">
        <seg>您可以用访问任务同样的方法，把类型名字作为方法名称，访问 Ant 类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can access a project property in your build script simply by using its name as you would use a variable.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T151349Z" creationid="msdx" creationdate="20141109T151343Z">
        <seg>当你要使用一个变量时，你可以仅通过其名称在构建脚本中访问一个项目的属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can access tasks from any project using the task's path using the &lt;c0&gt;tasks.getByPath()&lt;/c0&gt; method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T082149Z" creationid="msdx" creationdate="20141110T081714Z">
        <seg>您可以从任何项目中，使用&lt;c0&gt;tasks.getByPath()&lt;/c0&gt;方法获取任务路径并且通过这个路径来访问任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can access the source sets of a project using the &lt;c0&gt;sourceSets&lt;/c0&gt; property.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T050501Z" creationid="Administrator" creationdate="20150427T050501Z">
        <seg>你可以使用&lt;c0&gt;sourceSets&lt;/c0&gt;属性访问项目的源集。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can achieve this with:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T015817Z" creationid="msdx" creationdate="20141111T015817Z">
        <seg>你可以这样实现：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can add a description to your task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T015024Z" creationid="msdx" creationdate="20141111T015024Z">
        <seg>你可以向你的任务添加描述。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can add a task which depends on an Ant target:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T060954Z" creationid="msdx" creationdate="20141116T060954Z">
        <seg>您可以添加一个依赖于 Ant 目标的任务：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can add additional files by configuring the &lt;a3&gt;&lt;c4&gt;Distribution&lt;/c4&gt;&lt;/a3&gt; object that is part of the container.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150701T032421Z" creationid="haohang" creationdate="20150701T032421Z">
        <seg>你可以通过配置作为窗口一部分的 &lt;a3&gt;&lt;c4&gt;Distribution&lt;/c4&gt;&lt;/a3&gt; 对象，来添加额外的文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can add specific behavior on top of the common behavior.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160527T163107Z" creationid="95" creationdate="20160527T162440Z">
        <seg>你可以在共同行为上面再添加特定的行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can add your own custom configuration or let the existing configurations extend from other configurations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151227T152616Z" creationid="95" creationdate="20151227T152616Z">
        <seg>你可以添加你自己的自定义配置，或者让现有配置继承自扩展配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also add 2 file collections together using the &lt;c1&gt;+&lt;/c1&gt; operator, or subtract one file collection from another using the &lt;c2&gt;-&lt;/c2&gt; operator.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T155814Z" creationid="msdx" creationdate="20141112T155551Z">
        <seg>您还可以使用&lt;c1&gt;+&lt;/c1&gt;运算符把两个文件集合相加，或使用&lt;c2&gt;-&lt;/c2&gt;运算符减去一个文件集合。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also add WAR, ZIP and TAR archives to your project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T145631Z" creationid="msdx" creationdate="20141113T145631Z">
        <seg>您也可以将WAR、 ZIP 和TAG文件添加到您的项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also add a &lt;a0&gt;&lt;c1&gt;TaskExecutionGraphListener&lt;/c1&gt;&lt;/a0&gt; to the &lt;a2&gt;&lt;c3&gt;TaskExecutionGraph&lt;/c3&gt;&lt;/a2&gt; to receive these events.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T135731Z" creationid="95" creationdate="20160521T135731Z">
        <seg>你也可以向&lt;a2&gt;&lt;c3&gt;TaskExecutionGraph&lt;/c3&gt;&lt;/a2&gt;添加一个&lt;a0&gt;&lt;c1&gt;TaskExecutionGraphListener&lt;/c1&gt;&lt;/a0&gt;来接收这些事件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also add an &lt;a0&gt;&lt;c1&gt;Action&lt;/c1&gt;&lt;/a0&gt; to a &lt;a2&gt;&lt;c3&gt;TaskContainer&lt;/c3&gt;&lt;/a2&gt; to receive these events.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T135230Z" creationid="95" creationdate="20160521T135111Z">
        <seg>你还可以向&lt;a2&gt;&lt;c3&gt;TaskContainer&lt;/c3&gt;&lt;/a2&gt;添加一个&lt;a0&gt;&lt;c1&gt;Action&lt;/c1&gt;&lt;/a0&gt;来接收这些事件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also add properties directly to your project object via the &lt;c0&gt;-P&lt;/c0&gt; command line option.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T141157Z" creationid="msdx" creationdate="20141109T141157Z">
        <seg>你也可以通过使用&lt;c0&gt;-P&lt;/c0&gt;命令行选项来直接向您的项目对象添加属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also apply the plugin from an init script:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T091735Z" creationid="haohang" creationdate="20150628T091735Z">
        <seg>你还可以从一个 init 脚本应用这个插件：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also assign collections or arrays of dependency notations to a configuration:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T103635Z" creationid="haohang" creationdate="20150801T103635Z">
        <seg>你也可以向一个配置指定依赖 notations 的集合或数组：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also configure arbitrary objects using an external script.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T152914Z" creationid="msdx" creationdate="20141109T152914Z">
        <seg>你还可以使用外部脚本配置任意对象</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also copy a configuration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T040214Z" creationid="haohang" creationdate="20150807T040214Z">
        <seg>你还可以复制配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also create dependsOn relations on rule based tasks:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T065626Z" creationid="msdx" creationdate="20141111T065626Z">
        <seg>你也可以对基于规则的任务创建依赖关系：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also directly add properties to your project objects using properties files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T081010Z" creationid="msdx" creationdate="20141109T081010Z">
        <seg>此外，您也可以通过属性文件向您的project对象添加属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also hook into Gradle's logging system from within other classes used in the build (classes from the &lt;c0&gt;buildSrc&lt;/c0&gt; directory for example).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T033839Z" creationid="msdx" creationdate="20141116T125946Z">
        <seg>您也可以在构建脚本中通过其他使用的类 hook 到 Gradle 的日志系统中（例如 &lt;c0&gt;buildSrc&lt;/c0&gt; 目录中的类）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also pass collections, iterables, maps and arrays to the &lt;c7&gt;files()&lt;/c7&gt; method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T150811Z" creationid="msdx" creationdate="20141112T150811Z">
        <seg>你也可以将集合，迭代变量，map和数组传递给&lt;c7&gt;files()&lt;/c7&gt;方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also pass the &lt;c0&gt;files()&lt;/c0&gt; method a closure or a &lt;c1&gt;Callable&lt;/c1&gt; instance.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T160359Z" creationid="msdx" creationdate="20141112T155907Z">
        <seg>你也可以向&lt;c0&gt;files()&lt;/c0&gt;方法传一个闭包或一个&lt;c1&gt;Callable&lt;/c1&gt;实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also specify multiple patterns.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T040224Z" creationid="Administrator" creationdate="20150428T040224Z">
        <seg>你还可以指定多个模式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also use a &lt;a0&gt;&lt;c1&gt;TaskExecutionListener&lt;/c1&gt;&lt;/a0&gt; to the &lt;a2&gt;&lt;c3&gt;TaskExecutionGraph&lt;/c3&gt;&lt;/a2&gt; to receive these events.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T140255Z" creationid="95" creationdate="20160521T140146Z">
        <seg>你也可以对&lt;a2&gt;&lt;c3&gt;TaskExecutionGraph&lt;/c3&gt;&lt;/a2&gt;使用一个&lt;a0&gt;&lt;c1&gt;TaskExecutionListener&lt;/c1&gt;&lt;/a0&gt;来接收这些事件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also use a configuration closure when you define a task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T095952Z" creationid="msdx" creationdate="20141110T095952Z">
        <seg>您也可以在定义一个任务的时候使用一个配置闭包。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also use a file to define an artifact:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151226T091036Z" creationid="95" creationdate="20151226T091036Z">
        <seg>你也可以使用一个文件来定义构件：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also use customization options that the &lt;a0&gt;&lt;c1&gt;Ear&lt;/c1&gt;&lt;/a0&gt; task provides, such as &lt;c2&gt;from&lt;/c2&gt; and &lt;c3&gt;metaInf&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T143311Z" creationid="msdx" creationdate="20150504T142906Z">
        <seg>你还可以使用&lt;a0&gt;&lt;c1&gt;Ear&lt;/c1&gt;&lt;/a0&gt;任务提供的自定义选项，如&lt;c2&gt;from&lt;/c2&gt;和&lt;c3&gt;metaInf&lt;/c3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also use strings for the task names:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T022741Z" creationid="msdx" creationdate="20141110T021721Z">
        <seg>您还可以使用字符串作为任务名称：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also use the &lt;a0&gt;&lt;c1&gt;Project.copy()&lt;/c1&gt;&lt;/a0&gt; method to copy files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T131147Z" creationid="msdx" creationdate="20141113T131132Z">
        <seg>此外，你也可以使用&lt;a0&gt;&lt;c1&gt;Project.copy()&lt;/c1&gt;&lt;/a0&gt;方法来复制文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also use the Ant &lt;c1&gt;property&lt;/c1&gt; task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T061842Z" creationid="msdx" creationdate="20141116T061842Z">
        <seg>您还可以使用 Ant &lt;c1&gt;property&lt;/c1&gt; 任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also visit the contents of the tree, and select a sub-tree using Ant-style patterns:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T120348Z" creationid="msdx" creationdate="20141113T120303Z">
        <seg>你也可以使用Ant风格的模式来访问文件树的内容或选择一个子树：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can always copy a resolved configuration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T091221Z" creationid="haohang" creationdate="20150807T091221Z">
        <seg>你可以永远复制一个解析了的配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can call the &lt;c1&gt;getByPath()&lt;/c1&gt; method with a task name, or a relative path, or an absolute path.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T082106Z" creationid="msdx" creationdate="20141110T082046Z">
        <seg>你可以用任务名称，相对路径或者是绝对路径作为参数调用&lt;c1&gt;getByPath()&lt;/c1&gt;方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can change the cache expiry times in your build using the &lt;c1&gt;resolution strategy&lt;/c1&gt; (see &lt;a2&gt;Section 50.9.3, “Fine-tuned control over dependency caching”&lt;/a2&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T075048Z" creationid="haohang" creationdate="20150722T074853Z">
        <seg>你可以通过&lt;c1&gt;resolution strategy&lt;/c1&gt;修改你的构建的缓存到期时间（见&lt;a2&gt;第 50.9.3 节，“调整控制依赖缓存”&lt;/a2&gt;）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can combine multiple plugins in a single project, so you can use the War and Groovy plugins together to build a Groovy based web application.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T090650Z" creationid="msdx" creationdate="20141030T090650Z">
        <seg>你可以在单个project中组合多个插件，因此你可以一起使用War和Groovy插件来构建一个基于Groovy的web应用程序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can configure arbitrary objects in the following very readable way.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T152748Z" creationid="msdx" creationdate="20141109T152725Z">
        <seg>您可以用以下非常易理解的方式配置任意对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can configure the current project using an external build script.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T152207Z" creationid="msdx" creationdate="20141109T152207Z">
        <seg>您可以使用外部构建脚本来配置当前项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can control which tool chain will be used to build by changing the operating system PATH to include the desired tool chain compiler.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160128T153146Z" creationid="95" creationdate="20160128T153146Z">
        <seg>你可以通过更改操作系统的PATH让其包含所需的工具链编译器，来控制使用哪个工具链。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can create a separate project for your task class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T145005Z" creationid="95" creationdate="20160814T144929Z">
        <seg>你可以为你的任务类创建一个独立的项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can create stand alone instances of a &lt;c0&gt;Manifest&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T145251Z" creationid="msdx" creationdate="20150428T145251Z">
        <seg>您可以创建一个单独的&lt;c0&gt;Manifest&lt;/c0&gt;实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can customize these properties:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151226T091147Z" creationid="95" creationdate="20151226T091147Z">
        <seg>你可以自定义这些属性：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can declare a dependency on the API of the current version of Gradle by using the &lt;a0&gt;&lt;c1&gt;DependencyHandler.gradleApi()&lt;/c1&gt;&lt;/a0&gt; method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T094632Z" creationid="haohang" creationdate="20150801T094632Z">
        <seg>你可以通过使用&lt;a0&gt;&lt;c1&gt;DependencyHandler.gradleApi()&lt;/c1&gt;&lt;/a0&gt;方法，来声明一个当前的 Gradle 版本的 API 上的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can declare a dependency on the Groovy that is distributed with Gradle by using the &lt;a0&gt;&lt;c1&gt;DependencyHandler.localGroovy()&lt;/c1&gt;&lt;/a0&gt; method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T094806Z" creationid="haohang" creationdate="20150801T094806Z">
        <seg>可以通过使用&lt;a0&gt;&lt;c1&gt;DependencyHandler.localGroovy()&lt;/c1&gt;&lt;/a0&gt;方法，来声明对与 Gradle 一起发布的 Groovy 的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can declare which tasks produce the files for a file dependency.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T094359Z" creationid="haohang" creationdate="20150801T094359Z">
        <seg>你可以声明哪些任务将产生作为文件依赖的文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can disable the HTML test report using the &lt;a0&gt;&lt;c1&gt;Test.setTestReport()&lt;/c1&gt;&lt;/a0&gt; method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T142123Z" creationid="msdx" creationdate="20150428T142123Z">
        <seg>您可以使用&lt;a0&gt;&lt;c1&gt;Test.setTestReport()&lt;/c1&gt;&lt;/a0&gt;方法来禁用 HTML 测试报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can do this by using the method &lt;c0&gt;hasProperty('propertyName')&lt;/c0&gt; which returns &lt;c1&gt;true&lt;/c1&gt; or &lt;c2&gt;false&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T152023Z" creationid="msdx" creationdate="20141109T152023Z">
        <seg>你可以通过使用方法&lt;c0&gt;hasProperty('propertyName')&lt;/c0&gt; 来进行检查，它返回&lt;c1&gt;true&lt;/c1&gt;或&lt;c2&gt;false&lt;/c2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can do this with Gradle, but we don't recommend it.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151201T063939Z" creationid="haohang" creationdate="20151201T063939Z">
        <seg>你可以使用 Gradle 来做，但我们不推荐它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can easily depend on these constantly changing dependencies by using a &lt;s0&gt;&lt;e1&gt;dynamic version&lt;/e1&gt;&lt;/s0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T010858Z" creationid="haohang" creationdate="20150722T010858Z">
        <seg>你可以通过使用&lt;s0&gt;&lt;e1&gt;动态版本&lt;/e1&gt;&lt;/s0&gt;很容易地依赖这些不断变化的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can easily write a manifest to disk.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T151444Z" creationid="msdx" creationdate="20150428T151444Z">
        <seg>你可以很轻松地把一个manifest写入磁盘中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can even apply other scripts from the external script.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T152349Z" creationid="msdx" creationdate="20141109T152349Z">
        <seg>您甚至可以在外部脚本中应用其他脚本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can exclude a &lt;s0&gt;&lt;e1&gt;transitive&lt;/e1&gt;&lt;/s0&gt; dependency either by configuration or by dependency:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T094927Z" creationid="haohang" creationdate="20150801T094927Z">
        <seg>通过配置或者是通过依赖，你可以排除一个&lt;s0&gt;&lt;e1&gt;传递&lt;/e1&gt;&lt;/s0&gt;依赖：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can execute the checks by running &lt;s0&gt;&lt;c1&gt;gradle check&lt;/c1&gt;&lt;/s0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T151901Z" creationid="msdx" creationdate="20150504T151901Z">
        <seg>你可以通过运行&lt;s0&gt;&lt;c1&gt;gradle check&lt;/c1&gt;&lt;/s0&gt;执行检查。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can filter the contents of file, rename files, and all the other things you can do with a copy spec.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T154555Z" creationid="msdx" creationdate="20141113T154555Z">
        <seg>您可以通过一个复制规范来筛选文件的内容、 重命名文件和进行其他你可以做的事情。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can find a list of external plugins on the &lt;a0&gt;wiki&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T072534Z" creationid="Administrator" creationdate="20150425T072534Z">
        <seg>你可以在&lt;a0&gt;维基&lt;/a0&gt;上找到外部插件的列表。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can find more details in the API documentation for &lt;a0&gt;&lt;c1&gt;SourceSet&lt;/c1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T051227Z" creationid="Administrator" creationdate="20150427T051227Z">
        <seg>你可以在&lt;a0&gt;&lt;c1&gt;SourceSet&lt;/c1&gt;&lt;/a0&gt;的 API 文档中查看更多的详细信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can find more sample Java projects in the &lt;c4&gt;samples/webApplication&lt;/c4&gt; directory in the Gradle distribution.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T095946Z" creationid="msdx" creationdate="20141030T095946Z">
        <seg>你可以在Gradle的 &lt;c4&gt;samples/webApplication&lt;/c4&gt; 目录中找到更多的Java 的示例项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can find out more about closures &lt;a0&gt;here&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T063258Z" creationid="msdx" creationdate="20141108T063258Z">
        <seg>你可以&lt;a0&gt;在这里&lt;/a0&gt;查看更多有关闭包的资料。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can find out more about the Groovy plugin in &lt;a0&gt;Chapter 24, &lt;i1&gt;The Groovy Plugin&lt;/i1&gt;&lt;/a0&gt;, and you can find more sample Groovy projects in the &lt;c2&gt;samples/groovy&lt;/c2&gt; directory in the Gradle distribution.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T070249Z" creationid="msdx" creationdate="20141030T070249Z">
        <seg>你可以在 &lt;a0&gt;第24章 &lt;i1&gt;Groovy插件&lt;/i1&gt;&lt;/a0&gt;中了解更多关于Groovy 插件的内容，或在Gradle的 &lt;c2&gt;samples/groovy&lt;/c2&gt;目录中找到更多的Groovy project的例子。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can find out more about the War plugin in &lt;a0&gt;Chapter 26, &lt;i1&gt;The War Plugin&lt;/i1&gt;&lt;/a0&gt; and the Jetty plugin in &lt;a2&gt;Chapter 28, &lt;i3&gt;The Jetty Plugin&lt;/i3&gt;&lt;/a2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T095829Z" creationid="msdx" creationdate="20141030T095829Z">
        <seg>你可以在 &lt;a0&gt;第26章， &lt;i1&gt;War插件&lt;/i1&gt;&lt;/a0&gt; 和在&lt;a2&gt;第28章 &lt;i3&gt;Jetty插件&lt;/i3&gt;&lt;/a2&gt;.中了解到更多有关War插件和Jetty插件的内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can find out more about the copy task in &lt;a2&gt;Section 16.6, “Copying files”&lt;/a2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T134707Z" creationid="Administrator" creationdate="20150427T134707Z">
        <seg>你可以在&lt;a2&gt;16.6章节，“复制文件”&lt;/a2&gt;中找到关于copy任务的更多信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can find out more about the listener interfaces in &lt;a0&gt;Section 55.6, “Responding to the lifecycle in the build script”&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T155215Z" creationid="msdx" creationdate="20141116T155215Z">
        <seg>你可以在&lt;a0&gt; 55.6章节，“在构建脚本中响应生命周期”&lt;/a0&gt;参阅更多有关监听器接口的信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can fine-tune certain aspects of caching using the &lt;c0&gt;ResolutionStrategy&lt;/c0&gt; for a configuration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T154822Z" creationid="95" creationdate="20151129T154822Z">
        <seg>你可以在一个配置中通过使用&lt;c0&gt;ResolutionStrategy&lt;/c0&gt;对缓存的某些方面进行微调。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can fully customize the merge behavior by adding &lt;c1&gt;eachEntry&lt;/c1&gt; actions in which you have access to a &lt;a2&gt;&lt;c3&gt;ManifestMergeDetails&lt;/c3&gt;&lt;/a2&gt; instance for each entry of the resulting manifest.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T151256Z" creationid="msdx" creationdate="20150428T151256Z">
        <seg>你可以通过添加&lt;c1&gt;eachEntry&lt;/c1&gt; action 来完全自定义合并行为，它可以让你对每一项生成的manifest 访问它的一个&lt;a2&gt;&lt;c3&gt;ManifestMergeDetails&lt;/c3&gt;&lt;/a2&gt;实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can further customize the archive names:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T155608Z" creationid="msdx" creationdate="20141113T155556Z">
        <seg>您可以进一步自定义存档名称：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can generate dependency reports from the command line (see &lt;a0&gt;Section 11.6.4, “Listing project dependencies”&lt;/a0&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T032854Z" creationid="haohang" creationdate="20150807T032854Z">
        <seg>你可以从命令行生成依赖报告 （参阅 &lt;a0&gt;第11.6.4节，“列出项目依赖”&lt;/a0&gt;）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can get the property directly from the &lt;c0&gt;AntBuilder&lt;/c0&gt; instance.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T062201Z" creationid="msdx" creationdate="20141116T062201Z">
        <seg>你可以直接从&lt;c0&gt;AntBuilder&lt;/c0&gt;实例获得属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can implement a custom task class in pretty much any language you like, provided it ends up compiled to bytecode.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T143636Z" creationid="95" creationdate="20160814T143636Z">
        <seg>你可以使用你喜欢的几乎任何一种语言来实现一个自定义任务类，只要它最终能够提供编译的字节码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can include the task class directly in the build script.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T144001Z" creationid="95" creationdate="20160814T144001Z">
        <seg>你可以在构建脚本中直接包含这个任务类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can influence the location of build dashboard plugin generation via &lt;a0&gt;&lt;c1&gt;ReportingExtension&lt;/c1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150713T100620Z" creationid="haohang" creationdate="20150713T100620Z">
        <seg>你可以通过 &lt;a0&gt;&lt;c1&gt;ReportingExtension&lt;/c1&gt;&lt;/a0&gt; 修改 build dashboard 插件生成内容的位置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can launch the application in debug mode with &lt;s2&gt;&lt;c3&gt;gradle run --debug-jvm&lt;/c3&gt;&lt;/s2&gt; (see &lt;a4&gt;&lt;c5&gt;JavaExec.setDebug()&lt;/c5&gt;&lt;/a4&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150702T104251Z" creationid="haohang" creationdate="20150702T104251Z">
        <seg>你可以通过&lt;s2&gt;&lt;c3&gt;gradle run --debug-jvm&lt;/c3&gt; &lt;/s2&gt; 在调试模式下启动该应用程序(见&lt;a4&gt;&lt;c5&gt;JavaExec.setDebug()&lt;/c5&gt;&lt;/a4&gt;)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can learn more about how to work with archives in &lt;a2&gt;Section 16.8, “Creating archives”&lt;/a2&gt; and artifact configurations in &lt;a3&gt;Chapter 51, &lt;i4&gt;Publishing artifacts&lt;/i4&gt;&lt;/a3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T145012Z" creationid="msdx" creationdate="20150428T144827Z">
        <seg>你可以在&lt;a2&gt;第16.8节，“创建档案”&lt;/a2&gt;和&lt;a3&gt;第51章， &lt;i4&gt;发布artifact&lt;/i4&gt;&lt;/a3&gt;中了解如何使用archives和配置artifact。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can locate a file relative to the project directory using the &lt;a0&gt;&lt;c1&gt;Project.file()&lt;/c1&gt;&lt;/a0&gt; method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T043445Z" creationid="msdx" creationdate="20141111T125325Z">
        <seg>你可以使用&lt;a0&gt;&lt;c1&gt;Project.file()&lt;/c1&gt;&lt;/a0&gt;方法来找到一个相对于项目目录的文件 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can map a configuration to one and only one scope.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T145037Z" creationid="95" creationdate="20160106T145026Z">
        <seg>你可以把一个configuration映射到一个并且只能是一个scope上。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can merge other manifests into any &lt;c0&gt;Manifest&lt;/c0&gt; object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T145414Z" creationid="msdx" creationdate="20150428T145414Z">
        <seg>你可以把其他的manifest 合并到任何一个&lt;c0&gt;Manifest&lt;/c0&gt;对象中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can modify these descriptors in the settings file at any time.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T070323Z" creationid="haohang" creationdate="20160519T070323Z">
        <seg>你可以在任何时间修改设置文件中的这些描述符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can optionally specify that only a subset of dependencies from the original configuration should be copied.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T040303Z" creationid="haohang" creationdate="20150807T040303Z">
        <seg>你可以选择指定只复制原始配置里的一个子集的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can override the default cache modes using &lt;a0&gt;command line options&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T012411Z" creationid="haohang" creationdate="20150722T012411Z">
        <seg>你可以使用&lt;a0&gt;命令行选项&lt;/a0&gt;重写默认的缓存模式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can pass any object to the &lt;c0&gt;file()&lt;/c0&gt; method, and it will attempt to convert the value to an absolute &lt;c1&gt;File&lt;/c1&gt; object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T142819Z" creationid="msdx" creationdate="20141112T043528Z">
        <seg>您可以把任何对象传递给&lt;c0&gt;file()&lt;/c0&gt;方法，而它将尝试将其转换为一个绝对路径的&lt;c1&gt;File&lt;/c1&gt;对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can pass this method any number of objects, which are then converted into a set of &lt;c3&gt;File&lt;/c3&gt; objects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T145528Z" creationid="msdx" creationdate="20141112T145528Z">
        <seg>你可以向这个方法传入任意个对象，而它们会被转换为一组 &lt;c3&gt;File&lt;/c3&gt; 对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can place a &lt;c0&gt;gradle.properties&lt;/c0&gt; file in the Gradle user home directory (defaults to &lt;c1&gt;&lt;e2&gt;&lt;c3&gt;USER_HOME&lt;/c3&gt;&lt;/e2&gt;/.gradle&lt;/c1&gt;) or in your project directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T134109Z" creationid="msdx" creationdate="20141109T092007Z">
        <seg>您可以把一个&lt;c0&gt;gradle.properties&lt;/c0&gt;文件放在 Gradle 的用户主目录 （默认为&lt;c1&gt;&lt;e2&gt;&lt;c3&gt;USER_HOME&lt;/c3&gt;&lt;/e2&gt;/.gradle&lt;/c1&gt;） ，或您的项目目录中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can put the source for the task class in the &lt;c0&gt;&lt;e1&gt;&lt;c2&gt;rootProjectDir&lt;/c2&gt;&lt;/e1&gt;/buildSrc/src/main/groovy&lt;/c0&gt; directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T144248Z" creationid="95" creationdate="20160814T144248Z">
        <seg>你可以把任务类的源码放在 &lt;c0&gt;&lt;e1&gt;&lt;c2&gt;rootProjectDir&lt;/c2&gt;&lt;/e1&gt;/buildSrc/src/main/groovy&lt;/c0&gt; 目录中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can read about the new publishing plugins in &lt;a0&gt;Chapter 64, &lt;i1&gt;Ivy Publishing (new)&lt;/i1&gt;&lt;/a0&gt; and &lt;a2&gt;Chapter 65, &lt;i3&gt;Maven Publishing (new)&lt;/i3&gt;&lt;/a2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151220T120735Z" creationid="95" creationdate="20151220T120616Z">
        <seg>你可以在&lt;a0&gt; 64 章，&lt;i1&gt;Ivy 发布（新）&lt;/i1&gt;&lt;/a0&gt;和&lt;a2&gt; 65 章， &lt;i3&gt;Maven 发布（新）&lt;/i3&gt;&lt;/a2&gt;中读到有关新发布插件的内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can receive a notification immediately after a task is added to a project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T134108Z" creationid="95" creationdate="20160521T134108Z">
        <seg>你可以在有任务添加到项目后立即收到通知。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can receive a notification immediately after the task execution graph has been populated.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T135610Z" creationid="95" creationdate="20160521T135610Z">
        <seg>在任务执行图生成之后你可以立刻收到一个通知。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can receive a notification immediately before and after a project is evaluated.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T124858Z" creationid="95" creationdate="20160521T124858Z">
        <seg>你可以在一个项目评估之前及之后立刻收到通知。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can receive a notification immediately before and after any task is executed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T135927Z" creationid="95" creationdate="20160521T135923Z">
        <seg>在任一任务执行前你都会马上收到一条通知。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can reorder favorites to your liking and even export them to disk so they can imported by others.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T155515Z" creationid="msdx" creationdate="20141105T155503Z">
        <seg>你可以根据自己的喜好，对收藏夹进行排序，甚至可以把它们导出到磁盘，并在其他地方导入。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can replace much of Gradle's logging UI with your own.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T152941Z" creationid="msdx" creationdate="20141116T152941Z">
        <seg>您可以用您自己的 logging UI大量地替换 Gradle 的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can run "&lt;s0&gt;&lt;c1&gt;gradle distZip&lt;/c1&gt;&lt;/s0&gt;" to package the main distribution as a ZIP, or "&lt;s2&gt;&lt;c3&gt;gradle distTar&lt;/c3&gt;&lt;/s2&gt;" to create a GZip compressed TAR file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150701T030548Z" creationid="haohang" creationdate="20150701T030548Z">
        <seg>你可以运行“&lt;s0&gt;&lt;c1&gt;gradle distZip&lt;/c1&gt;&lt;/s0&gt;”把 main distribution 打包为 ZIP，或者是运行“&lt;s2&gt;&lt;c3&gt;gradle distTar&lt;/c3&gt;&lt;/s2&gt;”来创建一个使用 GZip 压缩的 TAR 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can run "&lt;s0&gt;&lt;c1&gt;gradle installDist&lt;/c1&gt;&lt;/s0&gt;" to assembles the distribution content, uncompressed, into "&lt;c2&gt;&lt;e3&gt;&lt;c4&gt;$buildDir&lt;/c4&gt;&lt;/e3&gt;/install/&lt;e5&gt;&lt;c6&gt;main&lt;/c6&gt;&lt;/e5&gt;&lt;/c2&gt;".</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150701T030749Z" creationid="haohang" creationdate="20150701T030655Z">
        <seg>你可以运行“&lt;s0&gt;&lt;c1&gt;gradle installDist&lt;/c1&gt;&lt;/s0&gt;”来组装这些分发内容，解压到“&lt;c2&gt;&lt;e3&gt;&lt;c4&gt;$buildDir&lt;/c4&gt;&lt;/e3&gt;/install/&lt;e5&gt;&lt;c6&gt;main&lt;/c6&gt;&lt;/e5&gt;&lt;/c2&gt;”。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can run &lt;s1&gt;&lt;c2&gt;gradle distZip&lt;/c2&gt;&lt;/s1&gt; to create a ZIP containing the distribution.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T070256Z" creationid="haohang" creationdate="20150707T070256Z">
        <seg>你可以运行 &lt;s1&gt;&lt;c2&gt;gradle distZip&lt;/c2&gt;&lt;/s1&gt;  把 distrubution 打包成一个 ZIP 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can run &lt;s1&gt;&lt;c2&gt;gradle installApp&lt;/c2&gt;&lt;/s1&gt; to create an image of the application in &lt;c3&gt;build/install/&lt;e4&gt;&lt;c5&gt;projectName&lt;/c5&gt;&lt;/e4&gt;&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150702T104630Z" creationid="haohang" creationdate="20150702T104621Z">
        <seg>您可以运行&lt;s1&gt;&lt;c2&gt;gradle installApp&lt;/c2&gt;&lt;/s1&gt;，在 &lt;c3&gt;build/install/&lt;e4&gt;&lt;c5&gt;projectName&lt;/c5&gt;&lt;/e4&gt;&lt;/c3&gt; 中创建一张应用程序的图像。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can run &lt;s6&gt;&lt;c7&gt;gradle distZip&lt;/c7&gt;&lt;/s6&gt; to create a ZIP containing the distribution.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150702T104700Z" creationid="haohang" creationdate="20150702T104623Z">
        <seg>你可以运行&lt;s6&gt;&lt;c7&gt;gradle distZip&lt;/c7&gt;&lt;/s6&gt; 把 distrubution 打包成一个 ZIP 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can select the files to copy using Ant-style include or exclude patterns, or using a closure:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T131107Z" creationid="msdx" creationdate="20141113T130959Z">
        <seg>您可以使用 Ant 风格的包含或排除模式，或使用一个闭包，来选择要复制的文件：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can set custom includes / excludes, only those classes will be scanned.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T040649Z" creationid="Administrator" creationdate="20150428T040649Z">
        <seg>您可以设置自定义的includes 或 excludes，这样就只有这些类才会被扫描。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can set the property directly on the &lt;c0&gt;AntBuilder&lt;/c0&gt; instance.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T061246Z" creationid="msdx" creationdate="20141116T061246Z">
        <seg>你可以直接在&lt;c0&gt;AntBuilder&lt;/c0&gt;实例上设置属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can set the value of this property using any of the types supported by the &lt;a3&gt;files()&lt;/a3&gt; method, which was shown above.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T123137Z" creationid="msdx" creationdate="20141113T123137Z">
        <seg>你可以使用上面所示的&lt;a3&gt;files()&lt;/a3&gt;方法所支持的任意类型的对象设置此属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can specify that test processes should be restarted after it has executed a certain number of test classes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150428T013402Z" creationid="Administrator" creationdate="20150428T013402Z">
        <seg>你可以指定在执行了一定数量的测试类之后，重启那个测试进程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can specify whether or not to execute your tests in parallel.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T140908Z" creationid="Administrator" creationdate="20150427T140908Z">
        <seg>你可以指定是否要并行运行你的测试。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can then refer to the custom Ant task as you would a built-in Ant task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T060159Z" creationid="msdx" creationdate="20141116T020147Z">
        <seg>然后，您可以像引用内置的 Ant 任务一样引用自定义 Ant 任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can then use the targets of your Ant build as if they were Gradle tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141114T141231Z" creationid="msdx" creationdate="20141114T140930Z">
        <seg>然后你可以使用你的 Ant 构建中的target，就好像它们是 Gradle 任务一样。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can toggle the filter via the Filter button.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T151214Z" creationid="msdx" creationdate="20141105T151214Z">
        <seg>你可以通过过滤器（Filter）按钮切换是否进行过滤。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use Gradle's Ant integration as a path for migrating your build from Ant to Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141114T142634Z" creationid="msdx" creationdate="20141114T142305Z">
        <seg>你可以把 Gradle 的 Ant 集成当成一个路径，将你的构建从 Ant 迁移至 Gradle 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use Gradle's dependency management to assemble the classpath to use for the custom tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T060418Z" creationid="msdx" creationdate="20141116T060418Z">
        <seg>你可以使用 Gradle 的依赖管理组合类路径，以用于自定义任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use an archive task to define an artifact:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151226T090821Z" creationid="95" creationdate="20151226T090800Z">
        <seg>你可以使用一个archive任务来定义构件：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use either client module dependencies to express the dependency relations, or artifact dependencies in case a first level dependency has no transitive dependencies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151201T062812Z" creationid="haohang" creationdate="20151201T062812Z">
        <seg>您可以使用客户端模块依赖，或者是工件依赖来表达依赖关系，后者的情况中第一级依赖是没有传递依赖的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use individual Ant tasks or entire Ant builds in your Gradle builds.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141114T071514Z" creationid="msdx" creationdate="20141114T071514Z">
        <seg>您可以在你的 Gradle 构建中，使用单独的 Ant 任务或整个 Ant 构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use that for example, to share manifest information between jars.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T145328Z" creationid="msdx" creationdate="20150428T145328Z">
        <seg>它可以用于共享两个jar包的manifest 信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use the &lt;a0&gt;&lt;c1&gt;Copy&lt;/c1&gt;&lt;/a0&gt; task to copy files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T123657Z" creationid="msdx" creationdate="20141113T123644Z">
        <seg>你可以使用&lt;a0&gt;&lt;c1&gt;Copy&lt;/c1&gt;&lt;/a0&gt;任务来复制文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use the &lt;a0&gt;&lt;c1&gt;Project.copySpec()&lt;/c1&gt;&lt;/a0&gt; method to share content between archives.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T160753Z" creationid="msdx" creationdate="20141113T160753Z">
        <seg>你可以使用&lt;a0&gt;&lt;c1&gt;Project.copySpec()&lt;/c1&gt;&lt;/a0&gt;方法在归档之间共享内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use the &lt;c0&gt;ant.importBuild()&lt;/c0&gt; method to import an Ant build into your Gradle project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T060737Z" creationid="msdx" creationdate="20141116T060737Z">
        <seg>你可以使用&lt;c0&gt;ant.importBuild()&lt;/c0&gt;方法来向 Gradle 项目导入一个 Ant 构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use the &lt;c0&gt;onlyIf()&lt;/c0&gt; method to attach a predicate to a task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T020400Z" creationid="msdx" creationdate="20141111T020313Z">
        <seg>你可以使用&lt;c0&gt;onlyIf()&lt;/c0&gt;方法将断言附加到一项任务中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use the archive tasks without using the Java plugin, if you like.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T145942Z" creationid="msdx" creationdate="20141113T145842Z">
        <seg>如果你愿意，使用归档任务时可以不需要Java插件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use the command line argument (&lt;a0&gt;Appendix D, &lt;i1&gt;Gradle Command Line&lt;/i1&gt;&lt;/a0&gt;) or configure your build environment (&lt;a2&gt;Section 20.1, “Configuring the build environment via gradle.properties”&lt;/a2&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T091056Z" creationid="haohang" creationdate="20160726T091056Z">
        <seg>你可以使用命令行参数（&lt;a0&gt;附录 D， &lt;i1&gt;Gradle 命令行&lt;/i1&gt;&lt;/a0&gt;），或者是配置你的构建环境（&lt;a2&gt;第 20.1 节，“通过 gradle.properties 配置构建环境”&lt;/a2&gt;）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use the command line switches shown in &lt;a0&gt;Table 18.2, “Log level command-line options”&lt;/a0&gt; to choose different log levels.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T095147Z" creationid="msdx" creationdate="20141116T095147Z">
        <seg>您可以使用&lt;a0&gt;表 18.2，“日志级别的命令行选项”&lt;/a0&gt;中所示的命令行开关来选择不同的日志级别。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use the configuration to access the declared dependencies or a subset of those:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T034344Z" creationid="haohang" creationdate="20150807T034344Z">
        <seg>你可以使用配置来访问它们的声明依赖或其中一个子集：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use the contents of an archive, such as a ZIP or TAR file, as a file tree.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T120455Z" creationid="msdx" creationdate="20141113T120455Z">
        <seg>您可以使用档案的内容，如 ZIP 或者 TAR 文件，作为一个文件树。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use these configurations to define the compile and runtime dependencies of the source set.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T132956Z" creationid="Administrator" creationdate="20150427T132956Z">
        <seg>你可以使用这些配置来定义源集的编译和运行时的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use these properties in your build script as though they were properties of the project object (see &lt;a0&gt;Section 21.3, “Conventions”&lt;/a0&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T085717Z" creationid="Administrator" creationdate="20150426T085717Z">
        <seg>您可以在构建脚本中使用这些属性，就像它们是project对象的属性一样（见&lt;a0&gt;第21.3节，“约定”&lt;/a0&gt;）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use these properties in your build script as though they were properties of the source set object (see &lt;a0&gt;Section 21.3, “Conventions”&lt;/a0&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T092935Z" creationid="msdx" creationdate="20150429T092935Z">
        <seg>你可以在你的构建脚本中，把这些属性当成是source set 对象中的属性一样使用 （见&lt;a0&gt;第 21.3，“公约”&lt;/a0&gt;）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use this logger the same way as you use the provided logger in the build script.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T034009Z" creationid="msdx" creationdate="20141116T130521Z">
        <seg>你可以在构建脚本中，以与内置的logger 相同的方式来使用这个logger。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can, for example, change the name of the archive:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T155513Z" creationid="msdx" creationdate="20141113T155513Z">
        <seg>你可以，比方说，更改归档文件的名称：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can, however, set a different language for each project in a multi-project build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T092737Z" creationid="msdx" creationdate="20150512T092737Z">
        <seg>不过，在多项目构建中你可以为不同的项目设置不同的语言。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You configure the project layout by configuring the appropriate source set.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150426T083611Z" creationid="Administrator" creationdate="20150426T083611Z">
        <seg>你可以通过配置适当的源集，来配置项目的布局。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You could also do an iteration via &lt;c3&gt;allprojects.each&lt;/c3&gt;, but that would be more verbose.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160527T161905Z" creationid="95" creationdate="20160527T161905Z">
        <seg>你也可以通过&lt;c3&gt;allprojects.each&lt;/c3&gt;来进行迭代，不过这样写会比较冗长。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You could also have a mixed strategy.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151201T063508Z" creationid="haohang" creationdate="20151201T063508Z">
        <seg>你也可以使用混合策略。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You could even use Gradle simply as a powerful Ant task scripting tool.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141114T071729Z" creationid="msdx" creationdate="20141114T071729Z">
        <seg>你甚至可以只把 Gradle 当作一个强大的 Ant 任务脚本的工具。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You could, for instance, call &lt;c2&gt;doFirst()&lt;/c2&gt; or &lt;c3&gt;doLast()&lt;/c3&gt; with a closure in the task constructor to add behaviour.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T145725Z" creationid="95" creationdate="20160814T145725Z">
        <seg>你能够，例如，在构建方法中调用 &lt;c2&gt;doFirst()&lt;/c2&gt; 或者 &lt;c3&gt;doLast()&lt;/c3&gt; 并传入一个闭包来添加行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You do all this using a &lt;e1&gt;copy spec&lt;/e1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T124144Z" creationid="msdx" creationdate="20141113T124144Z">
        <seg>你可以使用一个&lt;e1&gt;复制规范&lt;/e1&gt;来做这些。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You do this by adding a dependency to the &lt;c0&gt;groovy&lt;/c0&gt; configuration.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T065053Z" creationid="msdx" creationdate="20141030T065053Z">
        <seg>你可以通过在&lt;c0&gt;groovy&lt;/c0&gt;配置中添加依赖来完成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You do this using the &lt;a0&gt;&lt;c1&gt;Project.zipTree()&lt;/c1&gt;&lt;/a0&gt; and &lt;a2&gt;&lt;c3&gt;Project.tarTree()&lt;/c3&gt;&lt;/a2&gt; methods.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T122522Z" creationid="msdx" creationdate="20141113T120525Z">
        <seg>你可以通过使用&lt;a0&gt;&lt;c1&gt;Project.zipTree()&lt;/c1&gt;&lt;/a0&gt;或&lt;a2&gt;&lt;c3&gt;Project.tarTree()&lt;/c3&gt;&lt;/a2&gt;方法来实现这一过程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You don't have to use a method to define the behaviour for the task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T145625Z" creationid="95" creationdate="20160814T145625Z">
        <seg>你不需要使用一个方法来定义这个任务的行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You don't want to expose people who want to build your project, to the downtimes or sometimes very long response times of Maven Central.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151130T051936Z" creationid="haohang" creationdate="20151130T051149Z">
        <seg>你不想曝光给想要对你的项目进行构建的人，Maven 中央仓停机或者有时候响应时间太长。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You execute an Ant task by calling a method on the &lt;c0&gt;AntBuilder&lt;/c0&gt; instance.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141114T143608Z" creationid="msdx" creationdate="20141114T143608Z">
        <seg>通过调用 &lt;c0&gt;AntBuilder&lt;/c0&gt;实例上的一个方法，可以执行一个 Ant 任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You have also learned how to add additional behavior to these tasks later on.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T160251Z" creationid="msdx" creationdate="20141109T160143Z">
        <seg>之后您还学习了如何将其他行为添加到这些任务中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You have been making changes, but have not built the entire project since performing a clean.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T095046Z" creationid="haohang" creationdate="20160726T095046Z">
        <seg>你做了一些修改，但从执行clean以来还没有构建整个项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You have to declare the projects taking part in the multiproject build in the settings file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T030227Z" creationid="haohang" creationdate="20160519T030227Z">
        <seg>你需要在settings文件中，声明要加入多项目构建的项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You have to explicitly do this assignment.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151226T091016Z" creationid="95" creationdate="20151226T091016Z">
        <seg>你必须进行显示的指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You have to repeat the context (&lt;c0&gt;myCopy&lt;/c0&gt;) in the configuration statement every time.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T092134Z" creationid="msdx" creationdate="20141110T092122Z">
        <seg>您必须在每一次的配置语句重复上下文 （&lt;c0&gt;myCopy&lt;/c0&gt;）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You implement the predicate as a closure.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T020439Z" creationid="msdx" creationdate="20141111T020439Z">
        <seg>你可以用一个闭包来实现断言。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You may also specify how to transform the files as they are copied.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T124121Z" creationid="msdx" creationdate="20141113T124121Z">
        <seg>您还可以在复制文件的时候指定如何转换文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You may configure any number of repositories, each of which is treated independently by Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T093711Z" creationid="haohang" creationdate="20150807T093711Z">
        <seg>您可以配置任意数量的仓库，每一个都会被Gradle 独立处理。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You may want to start the daemon in &lt;c0&gt;--foreground&lt;/c0&gt; mode to observe how the build is executed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141119T030832Z" creationid="msdx" creationdate="20141119T030832Z">
        <seg>你可能想要以&lt;c0&gt;--foreground&lt;/c0&gt;模式启动守护程序，以观察构建是怎么执行的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You may wish to use the new &lt;a0&gt;Sonar Runner Plugin&lt;/a0&gt; instead of this plugin.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150507T065225Z" creationid="msdx" creationdate="20150507T065225Z">
        <seg>你可能会想使用新的&lt;a0&gt;Sonar Runner 插件&lt;/a0&gt;来代替现在这个插件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You might also want to learn where conflicting versions are used and consolidate on a particular version of a dependency across your organization.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150721T060306Z" creationid="haohang" creationdate="20150721T060306Z">
        <seg>你也可能想要了解版本冲突用到的地方，并且在你的整个组织中统一一个指定版本的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You might be wondering why we have implemented a feature we obviously don't like that much.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160727T053424Z" creationid="haohang" creationdate="20160727T053424Z">
        <seg>你可能想知道，为什么我们要实现一个我们显然不喜欢做的功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You might do this when, for example, the files are generated by the build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T094442Z" creationid="haohang" creationdate="20150801T094442Z">
        <seg>例如，你可以在通过构建生成文件的时候这样做。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You might do this, for example, if you want to customize the UI in some way - to log more or less information, or to change the formatting.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T034607Z" creationid="msdx" creationdate="20141116T153100Z">
        <seg>你可以这样，比如，如果您想要以某种方式自定义 UI ——以输出更多或更少的信息，或修改日志格式，</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You might have different group of artifacts which have a different set of dependencies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151227T152802Z" creationid="95" creationdate="20151227T152744Z">
        <seg>你可以有不同组的构件，它们有不同的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You might need dependencies that are not uploaded to Maven Central yet.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151130T050851Z" creationid="haohang" creationdate="20151130T050851Z">
        <seg>你可能需要还没有上传到Maven 中央仓的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You might need it for example, to add libraries to your build script classpath (see &lt;a3&gt;Chapter 59, &lt;i4&gt;Organizing Build Logic&lt;/i4&gt;&lt;/a3&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T025204Z" creationid="haohang" creationdate="20160519T025204Z">
        <seg>你可能需要一个关于将libraries添加到你的构建脚本类路径中的例子（见&lt;a3&gt;第59章，&lt;i4&gt;组织构建逻辑&lt;/i4&gt;&lt;/a3&gt;）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You might refer to their API documentation to learn more about them.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T040958Z" creationid="Administrator" creationdate="20150425T040958Z">
        <seg>您可能会引用他们的 API 文档，以了解更多关于它们的信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You need to declare a filter for each artifact you want to publish.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T144338Z" creationid="95" creationdate="20160106T144338Z">
        <seg>你需要为你想发布的每一个构件声明一个过滤器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You need to make sure the task dependencies are declared correctly to avoid ordering issues.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T092120Z" creationid="haohang" creationdate="20160726T092120Z">
        <seg>你需要确保正确地声明任务，以避免排序的问题。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You need to provide the signing plugin with your key information, which means three things:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160108T151419Z" creationid="95" creationdate="20160108T151419Z">
        <seg>您需要向签名插件提供你的关键信息，即如下三项信息：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You often need to locate the tasks that you have defined in the build file, for example, to configure them or use them for dependencies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T080533Z" creationid="msdx" creationdate="20141110T023442Z">
        <seg>你经常需要在构建文件中查找你所定义的任务，例如，为了去配置或是依赖它们。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You only need to specify the leaves of the tree.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T041707Z" creationid="haohang" creationdate="20160519T041707Z">
        <seg>你只需要指定树上的叶子。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You pass nested elements to an Ant task inside a closure.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141115T155121Z" creationid="msdx" creationdate="20141115T154720Z">
        <seg>你可以在一个闭包里把嵌套的元素传给一个 Ant 任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You pass nested text to an Ant task by passing it as a parameter of the task method call.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141115T154821Z" creationid="msdx" creationdate="20141115T154521Z">
        <seg>你可以把一个嵌套文本，通过作为任务方法调用的参数，把它传给一个 Ant 任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You probably want to set-up a repository proxy for this.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151201T070824Z" creationid="haohang" creationdate="20151201T070824Z">
        <seg>你可能需要设置一个仓库代理。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You replace the logging using the &lt;a0&gt;&lt;c1&gt;Gradle.useLogger()&lt;/c1&gt;&lt;/a0&gt; method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T153134Z" creationid="msdx" creationdate="20141116T153134Z">
        <seg>您可以使用 &lt;a0&gt;&lt;c1&gt;Gradle.useLogger()&lt;/c1&gt;&lt;/a0&gt; 方法替换这个logging。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You should note that the &lt;c0&gt;TestReport&lt;/c0&gt; type combines the results from multiple test tasks and needs to aggregate the results of individual test classes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T143101Z" creationid="msdx" creationdate="20150428T143101Z">
        <seg>你应该注意到，&lt;c0&gt;TestReport&lt;/c0&gt;类型组合了多个测试任务的结果，并且需要聚合各个测试类的结果。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You should now be able to browse the analysis results.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T061723Z" creationid="msdx" creationdate="20150513T061723Z">
        <seg>你现在应该能够看到分析结果了。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You simply declare the task and configure the task using its properties.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T143343Z" creationid="95" creationdate="20160814T143343Z">
        <seg>你只需要简单地声明这个任务，并用它的属性来配置它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You specify the source files using the &lt;a5&gt;&lt;c6&gt;CopySpec.from()&lt;/c6&gt;&lt;/a5&gt; method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T124344Z" creationid="msdx" creationdate="20141113T124305Z">
        <seg>你可以使用&lt;a5&gt;&lt;c6&gt;CopySpec.from()&lt;/c6&gt;&lt;/a5&gt;方法指定源文件，</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You use a file tree in the same way you use a file collection.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T120306Z" creationid="msdx" creationdate="20141113T120300Z">
        <seg>你可以像使用一个文件集合的方式一样来使用一个文件树。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You use the task name as the method name.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141114T143741Z" creationid="msdx" creationdate="20141114T143741Z">
        <seg>你可以把任务名称当作方法名称使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You use this kind of dependency when you are developing custom Gradle plugins and task types.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T080724Z" creationid="haohang" creationdate="20150722T080724Z">
        <seg>当你正在开发自定义的 Gradle 插件和任务类型时，你可以使用这种类型的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You use this kind of dependency when you want to override the meta-data for the module.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T080626Z" creationid="haohang" creationdate="20150722T080626Z">
        <seg>当你想要重写模块的元数据时，你可以使用这种类型的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You use this to declare the ANTLR dependency that you wish to use.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T095538Z" creationid="haohang" creationdate="20150625T095538Z">
        <seg>你可以使用它来声明你想要使用的 ANTLR 依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You want to build any necessary supporting jars, but only perform code quality and unit tests on the project you have changed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T095204Z" creationid="haohang" creationdate="20160726T095204Z">
        <seg>你想要构建出所有必需的支持jar包，但只对这个你修改了的项目进行代码质量和单元测试。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You want to deal properly with wrong metadata in a Maven Central POM file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151130T050919Z" creationid="haohang" creationdate="20151130T050919Z">
        <seg>你想要正确地处理 Maven 中央仓 POM 文件中错误的元数据。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You will find more on this topic in &lt;a5&gt;Section 56.6, “Dependencies - Which dependencies?”&lt;/a5&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160530T151528Z" creationid="95" creationdate="20160530T151516Z">
        <seg>在 &lt;a5&gt;第 56.6 节， “依赖——哪些依赖”&lt;/a5&gt;，你可以看到更多关于这个主题的内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You will need to provide values for some additional properties.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T150016Z" creationid="msdx" creationdate="20141113T145958Z">
        <seg>您需要提供一些值给附加的属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You would use 'should run after' rule when ordering preference for faster feedback, where the ordering is helpful but not strictly required.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T012210Z" creationid="msdx" creationdate="20141111T005440Z">
        <seg>当倾向于更快的反馈时，会使用“应该在之后运行”的规则，因为这种排序很有帮助但要求不严格。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Your &lt;c1&gt;webapp&lt;/c1&gt; directory may of course contain a &lt;c2&gt;WEB-INF&lt;/c2&gt; sub-directory, which again may contain a &lt;c3&gt;web.xml&lt;/c3&gt; file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T093456Z" creationid="msdx" creationdate="20150503T093433Z">
        <seg>你的&lt;c1&gt;webapp&lt;/c1&gt;目录自然可能包含一个&lt;c2&gt;WEB-INF&lt;/c2&gt;子目录，这个子目录可能还再包含一个&lt;c3&gt;web.xml&lt;/c3&gt;文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Your build script can receive notifications as the build progresses through its lifecycle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160520T124452Z" creationid="95" creationdate="20160520T124452Z">
        <seg>在构建通过其生命周期的时候，你的构建脚本会接收到对应的通知。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Your build script may contain statements like:&lt;c0&gt;"ant clean compile".execute()&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141114T142059Z" creationid="msdx" creationdate="20141114T142059Z">
        <seg>你的构建脚本可能包含有类似这样的语句：&lt;c0&gt;"ant clean compile".execute()&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Your build script needs properties which values should not be seen by others.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T141859Z" creationid="msdx" creationdate="20141109T141550Z">
        <seg>而你的构建脚本需要一些不能让其他人知道的属性值，</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Your build scripts configure this dependency graph.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160518T032440Z" creationid="haohang" creationdate="20160518T032440Z">
        <seg>你的构建脚本能配置这个依赖关系图。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Your compiled classes are compiled to &lt;c4&gt;WEB-INF/classes&lt;/c4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T093519Z" creationid="msdx" creationdate="20150503T093452Z">
        <seg>已编译的类被编译进&lt;c4&gt;WEB-INF/classes&lt;/c4&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Your compiled classes, and their runtime dependencies are also included in the WAR file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T085852Z" creationid="msdx" creationdate="20141030T085852Z">
        <seg>已编译的类文件和他们的运行时依赖也会被包含在WAR文件中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Your logger can implement any of the listener interfaces listed below.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T154912Z" creationid="msdx" creationdate="20141116T154835Z">
        <seg>你的logger可以实现下面列出的任何监听器接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Your project can contain Groovy source code, Java source code, or a mix of the two.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T061208Z" creationid="msdx" creationdate="20141030T040323Z">
        <seg>你的项目可以包含Groovy源码，Java源码，或者两者都包含。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ZIPs and TARs are generated into &lt;c3&gt;&lt;e4&gt;&lt;c5&gt;project.buildDir&lt;/c5&gt;&lt;/e4&gt;/distributions&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T160101Z" creationid="msdx" creationdate="20141113T160040Z">
        <seg>ZIP文件和 TAR文件会生成到 &lt;c3&gt;&lt;e4&gt;&lt;c5&gt;project.buildDir&lt;/c5&gt;&lt;/e4&gt;/distributions&lt;/c3&gt;中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Zip</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150701T030820Z" creationid="haohang" creationdate="20150701T030820Z">
        <seg>Zip</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[&lt;e0&gt;&lt;c1&gt;projectDir&lt;/c1&gt;&lt;/e0&gt;/src/&lt;e2&gt;&lt;c3&gt;name&lt;/c3&gt;&lt;/e2&gt;/antlr]</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T102901Z" creationid="haohang" creationdate="20150625T102901Z">
        <seg>[&lt;e0&gt;&lt;c1&gt;projectDir&lt;/c1&gt;&lt;/e0&gt;/src/&lt;e2&gt;&lt;c3&gt;name&lt;/c3&gt;&lt;/e2&gt;/antlr]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[&lt;e0&gt;&lt;c1&gt;projectDir&lt;/c1&gt;&lt;/e0&gt;/src/&lt;e2&gt;&lt;c3&gt;name&lt;/c3&gt;&lt;/e2&gt;/groovy]</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T093154Z" creationid="msdx" creationdate="20150429T093154Z">
        <seg>[&lt;e0&gt;&lt;c1&gt;projectDir&lt;/c1&gt;&lt;/e0&gt;/src/&lt;e2&gt;&lt;c3&gt;name&lt;/c3&gt;&lt;/e2&gt;/groovy]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[&lt;e0&gt;&lt;c1&gt;projectDir&lt;/c1&gt;&lt;/e0&gt;/src/&lt;e2&gt;&lt;c3&gt;name&lt;/c3&gt;&lt;/e2&gt;/java]</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083419Z" creationid="msdx" creationdate="20150428T083419Z">
        <seg>[&lt;e0&gt;&lt;c1&gt;projectDir&lt;/c1&gt;&lt;/e0&gt;/src/&lt;e2&gt;&lt;c3&gt;name&lt;/c3&gt;&lt;/e2&gt;/java]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[&lt;e0&gt;&lt;c1&gt;projectDir&lt;/c1&gt;&lt;/e0&gt;/src/&lt;e2&gt;&lt;c3&gt;name&lt;/c3&gt;&lt;/e2&gt;/resources]</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083421Z" creationid="msdx" creationdate="20150428T083421Z">
        <seg>[&lt;e0&gt;&lt;c1&gt;projectDir&lt;/c1&gt;&lt;/e0&gt;/src/&lt;e2&gt;&lt;c3&gt;name&lt;/c3&gt;&lt;/e2&gt;/resources]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[&lt;e0&gt;&lt;c1&gt;projectDir&lt;/c1&gt;&lt;/e0&gt;/src/&lt;e2&gt;&lt;c3&gt;name&lt;/c3&gt;&lt;/e2&gt;/scala]</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150430T154831Z" creationid="msdx" creationdate="20150430T154831Z">
        <seg>[&lt;e0&gt;&lt;c1&gt;projectDir&lt;/c1&gt;&lt;/e0&gt;/src/&lt;e2&gt;&lt;c3&gt;name&lt;/c3&gt;&lt;/e2&gt;/scala]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[]</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T132309Z" creationid="msdx" creationdate="20150506T132309Z">
        <seg>[]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[group: &lt;s5&gt;'org.springframework'&lt;/s5&gt;, name: &lt;s6&gt;'spring-core'&lt;/s6&gt;, version: &lt;s7&gt;'2.5'&lt;/s7&gt;],</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T102840Z" creationid="haohang" creationdate="20150722T102833Z">
        <seg>[group: &lt;s5&gt;'org.springframework'&lt;/s5&gt;, name: &lt;s6&gt;'spring-core'&lt;/s6&gt;, version: &lt;s7&gt;'2.5'&lt;/s7&gt;],</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[group: &lt;s8&gt;'org.springframework'&lt;/s8&gt;, name: &lt;s9&gt;'spring-aop'&lt;/s9&gt;, version: &lt;s10&gt;'2.5'&lt;/s10&gt;]</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T102846Z" creationid="haohang" creationdate="20150722T102837Z">
        <seg>[group: &lt;s8&gt;'org.springframework'&lt;/s8&gt;, name: &lt;s9&gt;'spring-aop'&lt;/s9&gt;, version: &lt;s10&gt;'2.5'&lt;/s10&gt;]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[installer, deployer]*.pom*.whenConfigured {pom -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T143207Z" creationid="95" creationdate="20160106T143207Z">
        <seg>[installer, deployer]*.pom*.whenConfigured {pom -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>a multiproject build, if the &lt;c0&gt;settings.gradle&lt;/c0&gt; file does define a multiproject hierarchy.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T075356Z" creationid="haohang" creationdate="20160519T075336Z">
        <seg>多项目构建，如果&lt;c0&gt;settings.gradle&lt;/c0&gt;文件定义了一个多项目的层次结构。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>a single project build, if the &lt;c0&gt;settings.gradle&lt;/c0&gt; file does not define a multiproject hierarchy</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T075334Z" creationid="haohang" creationdate="20160519T075334Z">
        <seg>单项目构建，如果&lt;c0&gt;settings.gradle&lt;/c0&gt;文件没有定义一个多项目的层次结构</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>aProducer/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T070212Z" creationid="haohang" creationdate="20160718T070212Z">
        <seg>aProducer/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>aProducer/build.gradle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T070215Z" creationid="haohang" creationdate="20160718T070215Z">
        <seg>aProducer/build.gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>add project.repositories.fileRepo</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151226T092052Z" creationid="95" creationdate="20151226T092052Z">
        <seg>add project.repositories.fileRepo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>addFilter(&lt;s1&gt;'api'&lt;/s1&gt;) {artifact, file -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T144207Z" creationid="95" creationdate="20160106T144207Z">
        <seg>addFilter(&lt;s1&gt;'api'&lt;/s1&gt;) {artifact, file -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>addFilter(&lt;s3&gt;'service'&lt;/s3&gt;) {artifact, file -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T144209Z" creationid="95" creationdate="20160106T144209Z">
        <seg>addFilter(&lt;s3&gt;'service'&lt;/s3&gt;) {artifact, file -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>address</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T132322Z" creationid="msdx" creationdate="20150506T132322Z">
        <seg>address</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>adds build &lt;e0&gt;&lt;c1&gt;ConfigurationName&lt;/c1&gt;&lt;/e0&gt; tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T041215Z" creationid="Administrator" creationdate="20150425T041215Z">
        <seg>添加构建 &lt;e0&gt;&lt;c1&gt;ConfigurationName&lt;/c1&gt;&lt;/e0&gt;任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>adds upload &lt;e0&gt;&lt;c1&gt;ConfigurationName&lt;/c1&gt;&lt;/e0&gt; tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T070714Z" creationid="Administrator" creationdate="20150425T070714Z">
        <seg>添加上传&lt;e0&gt;&lt;c1&gt;ConfigurationName&lt;/c1&gt;&lt;/e0&gt;任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>afterEvaluate { Project project -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160530T144430Z" creationid="95" creationdate="20160530T144430Z">
        <seg>afterEvaluate { Project project -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>afterEvaluate { project -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T125502Z" creationid="95" creationdate="20160521T125502Z">
        <seg>afterEvaluate { project -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>all*.exclude group: &lt;s1&gt;'org.gradle.test.excludes'&lt;/s1&gt;, module: &lt;s2&gt;'reports'&lt;/s2&gt;
}

dependencies {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T094943Z" creationid="haohang" creationdate="20150801T094943Z">
        <seg>all*.exclude group: &lt;s1&gt;'org.gradle.test.excludes'&lt;/s1&gt;, module: &lt;s2&gt;'reports'&lt;/s2&gt;
}

dependencies {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>allGroovy</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T093413Z" creationid="msdx" creationdate="20150429T093413Z">
        <seg>allGroovy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>allJava</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083421Z" creationid="msdx" creationdate="20150428T083421Z">
        <seg>allJava</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>allScala</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150430T154839Z" creationid="msdx" creationdate="20150430T154839Z">
        <seg>allScala</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>allSource</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083422Z" creationid="msdx" creationdate="20150428T083422Z">
        <seg>allSource</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>alllife
}

dependencies {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T034240Z" creationid="haohang" creationdate="20150807T034240Z">
        <seg>alllife
}

dependencies {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>alllife &lt;s3&gt;"air.birds:albatros:1.0"&lt;/s3&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T034244Z" creationid="haohang" creationdate="20150807T034244Z">
        <seg>alllife &lt;s3&gt;"air.birds:albatros:1.0"&lt;/s3&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>alllife configurations.sealife</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T034242Z" creationid="haohang" creationdate="20150807T034242Z">
        <seg>alllife configurations.sealife</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>allprojects {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T125502Z" creationid="95" creationdate="20160521T125502Z">
        <seg>allprojects {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>allprojects { ext."signing.keyId" = id }</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160108T152919Z" creationid="95" creationdate="20160108T152919Z">
        <seg>allprojects { ext."signing.keyId" = id }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>allprojects { ext."signing.password" = password }</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160108T152920Z" creationid="95" creationdate="20160108T152920Z">
        <seg>allprojects { ext."signing.password" = password }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>allprojects { ext."signing.secretKeyRingFile" = file }</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160108T152919Z" creationid="95" creationdate="20160108T152919Z">
        <seg>allprojects { ext."signing.secretKeyRingFile" = file }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>an empty manifest</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150427T050033Z" creationid="Administrator" creationdate="20150427T050033Z">
        <seg>一个空的清单</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>announce</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104802Z" creationid="msdx" creationdate="20150428T104802Z">
        <seg>announce</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>announce {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T063126Z" creationid="haohang" creationdate="20150628T063126Z">
        <seg>announce {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>announce.announce(&lt;s1&gt;"helloWorld completed!"&lt;/s1&gt;, &lt;s2&gt;"twitter"&lt;/s2&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T063537Z" creationid="haohang" creationdate="20150628T063537Z">
        <seg>announce.announce(&lt;s1&gt;"helloWorld completed!"&lt;/s1&gt;, &lt;s2&gt;"twitter"&lt;/s2&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>announce.announce(&lt;s3&gt;"helloWorld completed!"&lt;/s3&gt;, &lt;s4&gt;"local"&lt;/s4&gt;)
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T063538Z" creationid="haohang" creationdate="20150628T063538Z">
        <seg>announce.announce(&lt;s3&gt;"helloWorld completed!"&lt;/s3&gt;, &lt;s4&gt;"local"&lt;/s4&gt;)
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>announce_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104802Z" creationid="msdx" creationdate="20150428T104802Z">
        <seg>announce_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ant</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T044451Z" creationid="msdx" creationdate="20141108T044451Z">
        <seg>ant</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ant.buildDir = buildDir
ant.properties.buildDir = buildDir
ant.properties[&lt;s0&gt;'buildDir'&lt;/s0&gt;] = buildDir
ant.property(name: &lt;s1&gt;'buildDir'&lt;/s1&gt;, location: buildDir)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T062046Z" creationid="msdx" creationdate="20141116T062046Z">
        <seg>ant.buildDir = buildDir
ant.properties.buildDir = buildDir
ant.properties[&lt;s0&gt;'buildDir'&lt;/s0&gt;] = buildDir
ant.property(name: &lt;s1&gt;'buildDir'&lt;/s1&gt;, location: buildDir)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ant.checkstyle(config: &lt;s3&gt;'checkstyle.xml'&lt;/s3&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T060208Z" creationid="msdx" creationdate="20141116T060208Z">
        <seg>ant.checkstyle(config: &lt;s3&gt;'checkstyle.xml'&lt;/s3&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ant.echo(&lt;s0&gt;'hello from Ant'&lt;/s0&gt;)
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141115T154712Z" creationid="msdx" creationdate="20141115T154712Z">
        <seg>ant.echo(&lt;s0&gt;'hello from Ant'&lt;/s0&gt;)
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ant.echo(message: greeting)
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141115T153410Z" creationid="msdx" creationdate="20141115T153410Z">
        <seg>ant.echo(message: greeting)
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ant.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T124440Z" creationid="msdx" creationdate="20141111T124440Z">
        <seg>ant.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ant.html#N113E8</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T030404Z" creationid="msdx" creationdate="20150501T030404Z">
        <seg>ant.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ant.html#N11488</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T030405Z" creationid="msdx" creationdate="20150501T030405Z">
        <seg>ant.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ant.html#N114E2</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T030406Z" creationid="msdx" creationdate="20150501T030406Z">
        <seg>ant.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ant.html#N11536</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T030406Z" creationid="msdx" creationdate="20150501T030406Z">
        <seg>ant.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ant.importBuild &lt;s0&gt;'build.xml'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T060914Z" creationid="msdx" creationdate="20141116T060914Z">
        <seg>ant.importBuild &lt;s0&gt;'build.xml'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ant.importBuild &lt;s0&gt;'build.xml'&lt;/s0&gt;

hello &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T061046Z" creationid="msdx" creationdate="20141116T061046Z">
        <seg>ant.importBuild &lt;s0&gt;'build.xml'&lt;/s0&gt;

hello &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ant.importBuild &lt;s0&gt;'build.xml'&lt;/s0&gt;

task intro &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T061142Z" creationid="msdx" creationdate="20141116T061142Z">
        <seg>ant.importBuild &lt;s0&gt;'build.xml'&lt;/s0&gt;

task intro &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ant.importBuild &lt;s0&gt;'build.xml'&lt;/s0&gt;

task intro(dependsOn: hello) &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T061008Z" creationid="msdx" creationdate="20141116T061008Z">
        <seg>ant.importBuild &lt;s0&gt;'build.xml'&lt;/s0&gt;

task intro(dependsOn: hello) &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ant.path(id: &lt;s0&gt;'classpath'&lt;/s0&gt;, location: &lt;s1&gt;'libs'&lt;/s1&gt;)
ant.references.classpath = ant.path(location: &lt;s2&gt;'libs'&lt;/s2&gt;)
ant.references[&lt;s3&gt;'classpath'&lt;/s3&gt;] = ant.path(location: &lt;s4&gt;'libs'&lt;/s4&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T062648Z" creationid="msdx" creationdate="20141116T062648Z">
        <seg>ant.path(id: &lt;s0&gt;'classpath'&lt;/s0&gt;, location: &lt;s1&gt;'libs'&lt;/s1&gt;)
ant.references.classpath = ant.path(location: &lt;s2&gt;'libs'&lt;/s2&gt;)
ant.references[&lt;s3&gt;'classpath'&lt;/s3&gt;] = ant.path(location: &lt;s4&gt;'libs'&lt;/s4&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ant.pmd(shortFilenames: &lt;s2&gt;'true'&lt;/s2&gt;, failonruleviolation: &lt;s3&gt;'true'&lt;/s3&gt;, rulesetfiles: file(&lt;s4&gt;'pmd-rules.xml'&lt;/s4&gt;).toURI().toString()) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T060633Z" creationid="msdx" creationdate="20141116T060633Z">
        <seg>ant.pmd(shortFilenames: &lt;s2&gt;'true'&lt;/s2&gt;, failonruleviolation: &lt;s3&gt;'true'&lt;/s3&gt;, rulesetfiles: file(&lt;s4&gt;'pmd-rules.xml'&lt;/s4&gt;).toURI().toString()) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ant.taskdef(name: &lt;s0&gt;'pmd'&lt;/s0&gt;, classname: &lt;s1&gt;'net.sourceforge.pmd.ant.PMDTask'&lt;/s1&gt;, classpath: configurations.pmd.asPath)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T060625Z" creationid="msdx" creationdate="20141116T060625Z">
        <seg>ant.taskdef(name: &lt;s0&gt;'pmd'&lt;/s0&gt;, classname: &lt;s1&gt;'net.sourceforge.pmd.ant.PMDTask'&lt;/s1&gt;, classpath: configurations.pmd.asPath)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ant.taskdef(resource: &lt;s0&gt;'checkstyletask.properties'&lt;/s0&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T060206Z" creationid="msdx" creationdate="20141116T060206Z">
        <seg>ant.taskdef(resource: &lt;s0&gt;'checkstyletask.properties'&lt;/s0&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ant.zip(destfile: &lt;s0&gt;'archive.zip'&lt;/s0&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141115T154729Z" creationid="msdx" creationdate="20141115T154729Z">
        <seg>ant.zip(destfile: &lt;s0&gt;'archive.zip'&lt;/s0&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>antlr</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141209T073532Z" creationid="msdx" creationdate="20141209T073532Z">
        <seg>antlr</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>antlr &lt;s0&gt;'antlr:antlr:2.7.7'&lt;/s0&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T095740Z" creationid="haohang" creationdate="20150625T095740Z">
        <seg>antlr &lt;s0&gt;'antlr:antlr:2.7.7'&lt;/s0&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>antlr.srcDirs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T102849Z" creationid="haohang" creationdate="20150625T102849Z">
        <seg>antlr.srcDirs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>antlr_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141209T073532Z" creationid="msdx" creationdate="20141209T073532Z">
        <seg>antlr_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>api/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T083504Z" creationid="haohang" creationdate="20160726T083504Z">
        <seg>api/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apiImpl/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T083507Z" creationid="haohang" creationdate="20160726T083507Z">
        <seg>apiImpl/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>appDirName</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T141341Z" creationid="msdx" creationdate="20150504T141341Z">
        <seg>appDirName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>appDirName &lt;s9&gt;'src/main/app'&lt;/s9&gt;  &lt;s10&gt;// use application metadata found in this folder&lt;/s10&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T142855Z" creationid="msdx" creationdate="20150504T142855Z">
        <seg>appDirName &lt;s9&gt;'src/main/app'&lt;/s9&gt;  &lt;s10&gt;// use application metadata found in this folder&lt;/s10&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>append</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T132307Z" creationid="msdx" creationdate="20150506T132307Z">
        <seg>append</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>append = false</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T132254Z" creationid="msdx" creationdate="20150506T132254Z">
        <seg>append = false</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>appendix</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T160253Z" creationid="msdx" creationdate="20141113T160253Z">
        <seg>appendix</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>appendix = &lt;s3&gt;'wrapper'&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T155759Z" creationid="msdx" creationdate="20141113T155759Z">
        <seg>appendix = &lt;s3&gt;'wrapper'&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>application</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104754Z" creationid="msdx" creationdate="20150428T104754Z">
        <seg>application</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>application/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T135829Z" creationid="msdx" creationdate="20150506T135829Z">
        <seg>application</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>applicationDefaultJvmArgs = [&lt;s0&gt;"-Dgreeting.language=en"&lt;/s0&gt;]</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150702T104915Z" creationid="haohang" creationdate="20150702T104915Z">
        <seg>applicationDefaultJvmArgs = [&lt;s0&gt;"-Dgreeting.language=en"&lt;/s0&gt;]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>applicationName = &lt;s17&gt;"customear"&lt;/s17&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T142900Z" creationid="msdx" creationdate="20150504T142900Z">
        <seg>applicationName = &lt;s17&gt;"customear"&lt;/s17&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>application_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104753Z" creationid="msdx" creationdate="20150428T104753Z">
        <seg>application_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply from: &lt;s0&gt;'other.gradle'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T152437Z" creationid="msdx" creationdate="20141109T152437Z">
        <seg>apply from: &lt;s0&gt;'other.gradle'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply from: &lt;s3&gt;'other.gradle'&lt;/s3&gt;, to: pos</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T153044Z" creationid="msdx" creationdate="20141109T153044Z">
        <seg>apply from: &lt;s3&gt;'other.gradle'&lt;/s3&gt;, to: pos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;"application"&lt;/s0&gt;
apply plugin: &lt;s1&gt;"jacoco"&lt;/s1&gt;

mainClassName = &lt;s2&gt;"org.gradle.MyMain"&lt;/s2&gt;

jacoco {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T135602Z" creationid="msdx" creationdate="20150506T135602Z">
        <seg>apply plugin: &lt;s0&gt;"application"&lt;/s0&gt;
apply plugin: &lt;s1&gt;"jacoco"&lt;/s1&gt;

mainClassName = &lt;s2&gt;"org.gradle.MyMain"&lt;/s2&gt;

jacoco {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;"c"&lt;/s0&gt;
apply plugin: &lt;s1&gt;"cunit"&lt;/s1&gt;

model {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T151333Z" creationid="95" creationdate="20160504T151333Z">
        <seg>apply plugin: &lt;s0&gt;"c"&lt;/s0&gt;
apply plugin: &lt;s1&gt;"cunit"&lt;/s1&gt;

model {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;"jacoco"&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T130229Z" creationid="msdx" creationdate="20150506T130229Z">
        <seg>apply plugin: &lt;s0&gt;"jacoco"&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;"java"&lt;/s0&gt;

ext {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T050709Z" creationid="msdx" creationdate="20141108T050709Z">
        <seg>apply plugin: &lt;s0&gt;"java"&lt;/s0&gt;

ext {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;"sonar"&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150510T143422Z" creationid="msdx" creationdate="20150510T143422Z">
        <seg>apply plugin: &lt;s0&gt;"sonar"&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;"sonar"&lt;/s0&gt;

sonar {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T091237Z" creationid="msdx" creationdate="20150512T091237Z">
        <seg>apply plugin: &lt;s0&gt;"sonar"&lt;/s0&gt;

sonar {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;"sonar-runner"&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T060745Z" creationid="msdx" creationdate="20150513T060745Z">
        <seg>apply plugin: &lt;s0&gt;"sonar-runner"&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'announce'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T063022Z" creationid="haohang" creationdate="20150628T063022Z">
        <seg>apply plugin: &lt;s0&gt;'announce'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'antlr'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T094906Z" creationid="haohang" creationdate="20150625T094906Z">
        <seg>apply plugin: &lt;s0&gt;'antlr'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'assembler'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160313T053831Z" creationid="95" creationdate="20160313T053831Z">
        <seg>apply plugin: &lt;s0&gt;'assembler'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'build-announcements'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T091629Z" creationid="haohang" creationdate="20150628T091629Z">
        <seg>apply plugin: &lt;s0&gt;'build-announcements'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'build-announcements'&lt;/s0&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T091821Z" creationid="haohang" creationdate="20150628T091821Z">
        <seg>apply plugin: &lt;s0&gt;'build-announcements'&lt;/s0&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'build-dashboard'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150713T095213Z" creationid="haohang" creationdate="20150713T095213Z">
        <seg>apply plugin: &lt;s0&gt;'build-dashboard'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'c'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160225T090443Z" creationid="haohang" creationdate="20160225T090443Z">
        <seg>apply plugin: &lt;s0&gt;'c'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'checkstyle'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T151750Z" creationid="msdx" creationdate="20150504T151750Z">
        <seg>apply plugin: &lt;s0&gt;'checkstyle'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'codenarc'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T133100Z" creationid="msdx" creationdate="20150505T133100Z">
        <seg>apply plugin: &lt;s0&gt;'codenarc'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'cpp'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160219T082844Z" creationid="haohang" creationdate="20160219T082844Z">
        <seg>apply plugin: &lt;s0&gt;'cpp'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'distribution'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150701T025858Z" creationid="haohang" creationdate="20150701T025858Z">
        <seg>apply plugin: &lt;s0&gt;'distribution'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'distribution'&lt;/s0&gt;

distributions {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150701T032500Z" creationid="haohang" creationdate="20150701T032500Z">
        <seg>apply plugin: &lt;s0&gt;'distribution'&lt;/s0&gt;

distributions {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'distribution'&lt;/s0&gt;

version = &lt;s1&gt;'1.2'&lt;/s1&gt;
distributions {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150701T031249Z" creationid="haohang" creationdate="20150701T031249Z">
        <seg>apply plugin: &lt;s0&gt;'distribution'&lt;/s0&gt;

version = &lt;s1&gt;'1.2'&lt;/s1&gt;
distributions {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'ear'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T094446Z" creationid="msdx" creationdate="20150503T094446Z">
        <seg>apply plugin: &lt;s0&gt;'ear'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'ear'&lt;/s0&gt;
apply plugin: &lt;s1&gt;'java'&lt;/s1&gt;

repositories { mavenCentral() }

dependencies {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T142848Z" creationid="msdx" creationdate="20150504T142848Z">
        <seg>apply plugin: &lt;s0&gt;'ear'&lt;/s0&gt;
apply plugin: &lt;s1&gt;'java'&lt;/s1&gt;

repositories { mavenCentral() }

dependencies {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'eclipse'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T004133Z" creationid="haohang" creationdate="20150603T004133Z">
        <seg>apply plugin: &lt;s0&gt;'eclipse'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'eclipse'&lt;/s0&gt;
apply plugin: &lt;s1&gt;'groovy'&lt;/s1&gt;

repositories {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T065503Z" creationid="msdx" creationdate="20141030T065503Z">
        <seg>apply plugin: &lt;s0&gt;'eclipse'&lt;/s0&gt;
apply plugin: &lt;s1&gt;'groovy'&lt;/s1&gt;

repositories {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'eclipse-wtp'&lt;/s0&gt;

eclipse.wtp.facet.file.withXml { provider -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T070449Z" creationid="haohang" creationdate="20150625T070449Z">
        <seg>apply plugin: &lt;s0&gt;'eclipse-wtp'&lt;/s0&gt;

eclipse.wtp.facet.file.withXml { provider -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'findbugs'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T133622Z" creationid="msdx" creationdate="20150505T133622Z">
        <seg>apply plugin: &lt;s0&gt;'findbugs'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'groovy'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104613Z" creationid="msdx" creationdate="20150428T104613Z">
        <seg>apply plugin: &lt;s0&gt;'groovy'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'idea'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T071741Z" creationid="haohang" creationdate="20150625T071741Z">
        <seg>apply plugin: &lt;s0&gt;'idea'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'java'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141122T162031Z" creationid="msdx" creationdate="20141122T162031Z">
        <seg>apply plugin: &lt;s0&gt;'java'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'java'&lt;/s0&gt;

compileJava.destinationDir = file(&lt;s1&gt;"$buildDir/output/classes"&lt;/s1&gt;)

task show &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141123T154211Z" creationid="msdx" creationdate="20141123T154211Z">
        <seg>apply plugin: &lt;s0&gt;'java'&lt;/s0&gt;

compileJava.destinationDir = file(&lt;s1&gt;"$buildDir/output/classes"&lt;/s1&gt;)

task show &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'java'&lt;/s0&gt;

sourceSets.main.output.classesDir = file(&lt;s1&gt;"$buildDir/output/classes"&lt;/s1&gt;)

task show &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141124T073954Z" creationid="msdx" creationdate="20141124T073954Z">
        <seg>apply plugin: &lt;s0&gt;'java'&lt;/s0&gt;

sourceSets.main.output.classesDir = file(&lt;s1&gt;"$buildDir/output/classes"&lt;/s1&gt;)

task show &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'java'&lt;/s0&gt;

task show &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141123T151129Z" creationid="msdx" creationdate="20141123T151129Z">
        <seg>apply plugin: &lt;s0&gt;'java'&lt;/s0&gt;

task show &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'java'&lt;/s0&gt;

task zip(type: Zip) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T145755Z" creationid="msdx" creationdate="20141113T145755Z">
        <seg>apply plugin: &lt;s0&gt;'java'&lt;/s0&gt;

task zip(type: Zip) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'java'&lt;/s0&gt;

version = &lt;s1&gt;1.0&lt;/s1&gt;

task myZip(type: Zip) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T154734Z" creationid="msdx" creationdate="20141113T154734Z">
        <seg>apply plugin: &lt;s0&gt;'java'&lt;/s0&gt;

version = &lt;s1&gt;1.0&lt;/s1&gt;

task myZip(type: Zip) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'java'&lt;/s0&gt;
archivesBaseName = &lt;s1&gt;'gradle'&lt;/s1&gt;
version = &lt;s2&gt;1.0&lt;/s2&gt;

task myZip(type: Zip) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T155614Z" creationid="msdx" creationdate="20141113T155614Z">
        <seg>apply plugin: &lt;s0&gt;'java'&lt;/s0&gt;
archivesBaseName = &lt;s1&gt;'gradle'&lt;/s1&gt;
version = &lt;s2&gt;1.0&lt;/s2&gt;

task myZip(type: Zip) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'java'&lt;/s0&gt;
version = &lt;s1&gt;1.0&lt;/s1&gt;

task myZip(type: Zip) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T155545Z" creationid="msdx" creationdate="20141113T155545Z">
        <seg>apply plugin: &lt;s0&gt;'java'&lt;/s0&gt;
version = &lt;s1&gt;1.0&lt;/s1&gt;

task myZip(type: Zip) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'java-library-distribution'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150705T084551Z" creationid="haohang" creationdate="20150705T084551Z">
        <seg>apply plugin: &lt;s0&gt;'java-library-distribution'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'jdepend'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T134208Z" creationid="msdx" creationdate="20150505T134208Z">
        <seg>apply plugin: &lt;s0&gt;'jdepend'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'jetty'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T094212Z" creationid="msdx" creationdate="20141030T094212Z">
        <seg>apply plugin: &lt;s0&gt;'jetty'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'maven'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151228T151904Z" creationid="95" creationdate="20151228T151904Z">
        <seg>apply plugin: &lt;s0&gt;'maven'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'maven'&lt;/s0&gt;

uploadArchives {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160104T154207Z" creationid="95" creationdate="20160104T154207Z">
        <seg>apply plugin: &lt;s0&gt;'maven'&lt;/s0&gt;

uploadArchives {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'objective-c'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160319T115138Z" creationid="95" creationdate="20160319T115138Z">
        <seg>apply plugin: &lt;s0&gt;'objective-c'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'objective-cpp'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160319T115450Z" creationid="95" creationdate="20160319T115450Z">
        <seg>apply plugin: &lt;s0&gt;'objective-cpp'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'osgi'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150526T004304Z" creationid="haohang" creationdate="20150526T004304Z">
        <seg>apply plugin: &lt;s0&gt;'osgi'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'pmd'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T135525Z" creationid="msdx" creationdate="20150505T135525Z">
        <seg>apply plugin: &lt;s0&gt;'pmd'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'project-report'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T061102Z" creationid="haohang" creationdate="20150628T061102Z">
        <seg>apply plugin: &lt;s0&gt;'project-report'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'scala'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T145324Z" creationid="msdx" creationdate="20150429T145324Z">
        <seg>apply plugin: &lt;s0&gt;'scala'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'signing'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160108T151112Z" creationid="95" creationdate="20160108T151112Z">
        <seg>apply plugin: &lt;s0&gt;'signing'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'war'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T085901Z" creationid="msdx" creationdate="20150503T085901Z">
        <seg>apply plugin: &lt;s0&gt;'war'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'windows-resources'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160324T153249Z" creationid="95" creationdate="20160324T153249Z">
        <seg>apply plugin: &lt;s0&gt;'windows-resources'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s1&gt;"cpp"&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160325T033432Z" creationid="haohang" creationdate="20160325T033432Z">
        <seg>apply plugin: &lt;s1&gt;"cpp"&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s3&gt;"cpp"&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160325T033440Z" creationid="haohang" creationdate="20160325T033440Z">
        <seg>apply plugin: &lt;s3&gt;"cpp"&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s3&gt;'war'&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160722T091244Z" creationid="haohang" creationdate="20160722T091244Z">
        <seg>apply plugin: &lt;s3&gt;'war'&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: JavaPlugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141122T162533Z" creationid="msdx" creationdate="20141122T162533Z">
        <seg>apply plugin: JavaPlugin</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: org.gradle.api.plugins.JavaPlugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141122T162340Z" creationid="msdx" creationdate="20141122T162340Z">
        <seg>apply plugin: org.gradle.api.plugins.JavaPlugin</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin:&lt;s0&gt;'application'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150702T103847Z" creationid="haohang" creationdate="20150702T103847Z">
        <seg>apply plugin:&lt;s0&gt;'application'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>applyTo run
}

task applicationCodeCoverageReport(type:JacocoReport){</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T135603Z" creationid="msdx" creationdate="20150506T135603Z">
        <seg>applyTo run
}

task applicationCodeCoverageReport(type:JacocoReport){</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>architecture &lt;s1&gt;"x86"&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160405T034024Z" creationid="haohang" creationdate="20160405T034024Z">
        <seg>architecture &lt;s1&gt;"x86"&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>architecture &lt;s3&gt;"x86_64"&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160405T034031Z" creationid="haohang" creationdate="20160405T034031Z">
        <seg>architecture &lt;s3&gt;"x86_64"&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>architecture &lt;s4&gt;"ia-64"&lt;/s4&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160405T034032Z" creationid="haohang" creationdate="20160405T034032Z">
        <seg>architecture &lt;s4&gt;"ia-64"&lt;/s4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>archiveName</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T155819Z" creationid="msdx" creationdate="20141113T155819Z">
        <seg>archiveName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>archivePath</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T155927Z" creationid="msdx" creationdate="20141113T155927Z">
        <seg>archivePath</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>archiveTask.extension</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T144045Z" creationid="95" creationdate="20160105T144045Z">
        <seg>archiveTask.extension</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>archives</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083232Z" creationid="msdx" creationdate="20150428T083232Z">
        <seg>archives</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>archives file: generate.destFile, name: &lt;s1&gt;'my-artifact'&lt;/s1&gt;, type: &lt;s2&gt;'text'&lt;/s2&gt;, builtBy: generate
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151226T091510Z" creationid="95" creationdate="20151226T091510Z">
        <seg>archives file: generate.destFile, name: &lt;s1&gt;'my-artifact'&lt;/s1&gt;, type: &lt;s2&gt;'text'&lt;/s2&gt;, builtBy: generate
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>archives myJar
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151226T090908Z" creationid="95" creationdate="20151226T090908Z">
        <seg>archives myJar
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>archives someFile
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151226T091055Z" creationid="95" creationdate="20151226T091055Z">
        <seg>archives someFile
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>archives(myTask.destFile) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151226T091158Z" creationid="95" creationdate="20151226T091158Z">
        <seg>archives(myTask.destFile) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>archivesBaseName</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083245Z" creationid="msdx" creationdate="20150428T083245Z">
        <seg>archivesBaseName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>artifact &lt;s2&gt;"3rd-party-artifacts/[organisation]/[module]/[revision]/[artifact]-[revision].[ext]"&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T111345Z" creationid="95" creationdate="20151006T111345Z">
        <seg>artifact &lt;s2&gt;"3rd-party-artifacts/[organisation]/[module]/[revision]/[artifact]-[revision].[ext]"&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>artifact &lt;s2&gt;"[module]/[revision]/[type]/[artifact].[ext]"&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T110641Z" creationid="95" creationdate="20151006T110641Z">
        <seg>artifact &lt;s2&gt;"[module]/[revision]/[type]/[artifact].[ext]"&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>artifact &lt;s2&gt;"[organisation]/[module]/[revision]/[artifact]-[revision].[ext]"&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T111052Z" creationid="95" creationdate="20151006T111052Z">
        <seg>artifact &lt;s2&gt;"[organisation]/[module]/[revision]/[artifact]-[revision].[ext]"&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>artifact &lt;s3&gt;"company-artifacts/[organisation]/[module]/[revision]/[artifact]-[revision].[ext]"&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T111347Z" creationid="95" creationdate="20151006T111347Z">
        <seg>artifact &lt;s3&gt;"company-artifacts/[organisation]/[module]/[revision]/[artifact]-[revision].[ext]"&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>artifact.name == &lt;s2&gt;'api'&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T144208Z" creationid="95" creationdate="20160106T144208Z">
        <seg>artifact.name == &lt;s2&gt;'api'&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>artifact.name == &lt;s4&gt;'service'&lt;/s4&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T144210Z" creationid="95" creationdate="20160106T144210Z">
        <seg>artifact.name == &lt;s4&gt;'service'&lt;/s4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>artifactId</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T144036Z" creationid="95" creationdate="20160105T144036Z">
        <seg>artifactId</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>artifactPattern &lt;s1&gt;"$projectDir/repo/[organisation]/[module]-[revision](-[classifier]).[ext]"&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T134715Z" creationid="95" creationdate="20151006T134715Z">
        <seg>artifactPattern &lt;s1&gt;"$projectDir/repo/[organisation]/[module]-[revision](-[classifier]).[ext]"&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>artifactUrls &lt;s3&gt;"http://repo.mycompany.com/jars"&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150909T053118Z" creationid="haohang" creationdate="20150909T053118Z">
        <seg>artifactUrls &lt;s3&gt;"http://repo.mycompany.com/jars"&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>artifactUrls &lt;s4&gt;"http://repo.mycompany.com/jars2"&lt;/s4&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150909T053119Z" creationid="haohang" creationdate="20150909T053119Z">
        <seg>artifactUrls &lt;s4&gt;"http://repo.mycompany.com/jars2"&lt;/s4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>artifact_dependencies_tutorial.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T161446Z" creationid="msdx" creationdate="20141105T161446Z">
        <seg>artifact_dependencies_tutorial.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>artifact_dependencies_tutorial.html#N10568</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163517Z" creationid="msdx" creationdate="20141109T163517Z">
        <seg>artifact_dependencies_tutorial.html#N10568</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>artifact_dependencies_tutorial.html#N10586</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163535Z" creationid="msdx" creationdate="20141109T163535Z">
        <seg>artifact_dependencies_tutorial.html#N10586</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>artifact_dependencies_tutorial.html#N105C6</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163610Z" creationid="msdx" creationdate="20141109T163610Z">
        <seg>artifact_dependencies_tutorial.html#N105C6</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>artifact_dependencies_tutorial.html#N10608</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163620Z" creationid="msdx" creationdate="20141109T163620Z">
        <seg>artifact_dependencies_tutorial.html#N10608</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>artifact_dependencies_tutorial.html#N10650</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163640Z" creationid="msdx" creationdate="20141109T163640Z">
        <seg>artifact_dependencies_tutorial.html#N10650</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>artifact_dependencies_tutorial.html#N1068E</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163650Z" creationid="msdx" creationdate="20141109T163650Z">
        <seg>artifact_dependencies_tutorial.html#N1068E</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>artifact_dependencies_tutorial.html#configurations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163600Z" creationid="msdx" creationdate="20141109T163600Z">
        <seg>artifact_dependencies_tutorial.html#configurations</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>artifact_management.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T160754Z" creationid="msdx" creationdate="20141113T160754Z">
        <seg>artifact_management.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>artifact_management.html#project_libraries</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151221T141636Z" creationid="95" creationdate="20151221T141636Z">
        <seg>artifact_management.html#project_libraries</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>artifacts {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T084528Z" creationid="haohang" creationdate="20160726T084528Z">
        <seg>artifacts {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assemble</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083225Z" creationid="msdx" creationdate="20150428T083225Z">
        <seg>assemble</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assembler</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141209T073742Z" creationid="msdx" creationdate="20141209T073742Z">
        <seg>assembler</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assembler.args &lt;s1&gt;"/Zi"&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160324T152625Z" creationid="95" creationdate="20160324T152625Z">
        <seg>assembler.args &lt;s1&gt;"/Zi"&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assembler.args &lt;s3&gt;"-g"&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160324T152626Z" creationid="95" creationdate="20160324T152626Z">
        <seg>assembler.args &lt;s3&gt;"-g"&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>attributes key1: &lt;s0&gt;'value1'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T145616Z" creationid="msdx" creationdate="20150428T145616Z">
        <seg>attributes key1: &lt;s0&gt;'value1'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>attributes(&lt;s0&gt;"Implementation-Title"&lt;/s0&gt;: &lt;s1&gt;"Gradle"&lt;/s1&gt;, &lt;s2&gt;"Implementation-Version"&lt;/s2&gt;: version)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T145225Z" creationid="msdx" creationdate="20150428T145225Z">
        <seg>attributes(&lt;s0&gt;"Implementation-Title"&lt;/s0&gt;: &lt;s1&gt;"Gradle"&lt;/s1&gt;, &lt;s2&gt;"Implementation-Version"&lt;/s2&gt;: version)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>attributes(&lt;s0&gt;"Implementation-Title"&lt;/s0&gt;: &lt;s1&gt;"Gradle"&lt;/s1&gt;, &lt;s2&gt;"Implementation-Version"&lt;/s2&gt;: version)
}
task fooJar(type: Jar) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T145342Z" creationid="msdx" creationdate="20150428T145342Z">
        <seg>attributes(&lt;s0&gt;"Implementation-Title"&lt;/s0&gt;: &lt;s1&gt;"Gradle"&lt;/s1&gt;, &lt;s2&gt;"Implementation-Version"&lt;/s2&gt;: version)
}
task fooJar(type: Jar) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>authentication</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T141905Z" creationid="95" creationdate="20160105T141905Z">
        <seg>authentication</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>authentication(userName: &lt;s2&gt;"me"&lt;/s2&gt;, password: &lt;s3&gt;"myPassword"&lt;/s3&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T134856Z" creationid="95" creationdate="20160105T134856Z">
        <seg>authentication(userName: &lt;s2&gt;"me"&lt;/s2&gt;, password: &lt;s3&gt;"myPassword"&lt;/s3&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>auto-generated</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T132320Z" creationid="msdx" creationdate="20150506T132320Z">
        <seg>auto-generated</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>base</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104859Z" creationid="msdx" creationdate="20150428T104859Z">
        <seg>base</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>base.css</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T033818Z" creationid="msdx" creationdate="20141030T033818Z">
        <seg>base.css</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>baseName</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T160146Z" creationid="msdx" creationdate="20141113T160146Z">
        <seg>baseName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>baseName = &lt;s0&gt;"stuff"&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160109T073059Z" creationid="95" creationdate="20160109T073059Z">
        <seg>baseName = &lt;s0&gt;"stuff"&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>baseName = &lt;s0&gt;'my-name'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150705T084611Z" creationid="haohang" creationdate="20150705T084611Z">
        <seg>baseName = &lt;s0&gt;'my-name'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>baseName = &lt;s1&gt;'someName'&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150701T032508Z" creationid="haohang" creationdate="20150701T032508Z">
        <seg>baseName = &lt;s1&gt;'someName'&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>baseName = &lt;s3&gt;'customName'&lt;/s3&gt;
}

println myZip.archiveName</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T155547Z" creationid="msdx" creationdate="20141113T155547Z">
        <seg>baseName = &lt;s3&gt;'customName'&lt;/s3&gt;
}

println myZip.archiveName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>baseName = &lt;s5&gt;'api-spi'&lt;/s5&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T084525Z" creationid="haohang" creationdate="20160726T084525Z">
        <seg>baseName = &lt;s5&gt;'api-spi'&lt;/s5&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>beforeDeployment { MavenDeployment deployment -&gt; signing.signPom(deployment) }</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160126T145258Z" creationid="95" creationdate="20160126T145258Z">
        <seg>beforeDeployment { MavenDeployment deployment -&gt; signing.signPom(deployment) }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>beforeMerged { classpath -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T064926Z" creationid="haohang" creationdate="20150625T064926Z">
        <seg>beforeMerged { classpath -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>beforeMerged { module -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T073922Z" creationid="haohang" creationdate="20150625T073922Z">
        <seg>beforeMerged { module -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>beforeMerged { project -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T074117Z" creationid="haohang" creationdate="20150625T074117Z">
        <seg>beforeMerged { project -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>beginIndex = &lt;s0&gt;1&lt;/s0&gt;;
endIndex = &lt;s1&gt;5&lt;/s1&gt;;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T153046Z" creationid="msdx" creationdate="20141109T153046Z">
        <seg>beginIndex = &lt;s0&gt;1&lt;/s0&gt;;
endIndex = &lt;s1&gt;5&lt;/s1&gt;;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>beginIndex = &lt;s2&gt;1&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T152807Z" creationid="msdx" creationdate="20141109T152807Z">
        <seg>beginIndex = &lt;s2&gt;1&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>binaries.all {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160324T151753Z" creationid="95" creationdate="20160324T151753Z">
        <seg>binaries.all {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>binaries.withType(SharedLibraryBinary) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160324T153106Z" creationid="95" creationdate="20160324T153106Z">
        <seg>binaries.withType(SharedLibraryBinary) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>binaries.withType(StaticLibraryBinary) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T151339Z" creationid="95" creationdate="20160504T151339Z">
        <seg>binaries.withType(StaticLibraryBinary) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>binaries.withType(TestSuiteExecutableBinary) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T151036Z" creationid="95" creationdate="20160504T151036Z">
        <seg>binaries.withType(TestSuiteExecutableBinary) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>bluewhale/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160522T125259Z" creationid="95" creationdate="20160522T125259Z">
        <seg>bluewhale/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>bluewhale/build.gradle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160527T163303Z" creationid="95" creationdate="20160527T163303Z">
        <seg>bluewhale/build.gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>build</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083226Z" creationid="msdx" creationdate="20150428T083226Z">
        <seg>build</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>build-announcements</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104803Z" creationid="msdx" creationdate="20150428T104803Z">
        <seg>build-announcements</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>build-dashboard</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104921Z" creationid="msdx" creationdate="20150428T104921Z">
        <seg>build-dashboard</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>build-init</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104922Z" creationid="msdx" creationdate="20150428T104922Z">
        <seg>build-init</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>build-resource-only-dll.gradle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160325T020937Z" creationid="haohang" creationdate="20160325T020937Z">
        <seg>build-resource-only-dll.gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>build.gradle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T065503Z" creationid="msdx" creationdate="20141030T065503Z">
        <seg>build.gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>build.xml</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T060914Z" creationid="msdx" creationdate="20141116T060914Z">
        <seg>build.xml</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>build/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T135829Z" creationid="msdx" creationdate="20150506T135829Z">
        <seg>build</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>build&lt;e0&gt;&lt;c1&gt;ConfigurationName&lt;/c1&gt;&lt;/e0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083228Z" creationid="msdx" creationdate="20150428T083228Z">
        <seg>build&lt;e0&gt;&lt;c1&gt;ConfigurationName&lt;/c1&gt;&lt;/e0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>buildDashboard</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150713T100310Z" creationid="haohang" creationdate="20150713T100310Z">
        <seg>buildDashboard</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>buildDashboard_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104920Z" creationid="msdx" creationdate="20150428T104920Z">
        <seg>buildDashboard_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>buildDependents</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083227Z" creationid="msdx" creationdate="20150428T083227Z">
        <seg>buildDependents</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>buildDir</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T044403Z" creationid="msdx" creationdate="20141108T044403Z">
        <seg>buildDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>buildNeeded</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083227Z" creationid="msdx" creationdate="20150428T083227Z">
        <seg>buildNeeded</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>buildTypes {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160401T090259Z" creationid="haohang" creationdate="20160401T090259Z">
        <seg>buildTypes {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>build_announcements_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104802Z" creationid="msdx" creationdate="20150428T104802Z">
        <seg>build_announcements_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>build_environment.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141117T123745Z" creationid="msdx" creationdate="20141117T123745Z">
        <seg>build_environment.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>build_environment.html#sec:accessing_the_web_via_a_proxy</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150508T131819Z" creationid="msdx" creationdate="20150508T131819Z">
        <seg>build_environment.html#sec:accessing_the_web_via_a_proxy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>build_environment.html#sec:gradle_configuration_properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141118T095704Z" creationid="msdx" creationdate="20141118T095704Z">
        <seg>build_environment.html#sec:gradle_configuration_properties</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>build_init_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104922Z" creationid="msdx" creationdate="20150428T104922Z">
        <seg>build_init_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>build_lifecycle.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T145919Z" creationid="95" creationdate="20160106T145919Z">
        <seg>build_lifecycle.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>build_lifecycle.html#build_lifecycle_events</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T154833Z" creationid="msdx" creationdate="20141116T154833Z">
        <seg>build_lifecycle.html#build_lifecycle_events</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>build_lifecycle.html#sec:build_phases</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160522T025002Z" creationid="95" creationdate="20160522T025002Z">
        <seg>build_lifecycle.html#sec:build_phases</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>builtBy &lt;s1&gt;'compile'&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T094453Z" creationid="haohang" creationdate="20150801T094453Z">
        <seg>builtBy &lt;s1&gt;'compile'&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>builtBy myTask</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151226T091200Z" creationid="95" creationdate="20151226T091200Z">
        <seg>builtBy myTask</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>c</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141209T074046Z" creationid="msdx" creationdate="20141209T074046Z">
        <seg>c</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>c {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160225T090549Z" creationid="haohang" creationdate="20160225T090549Z">
        <seg>c {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>cCompiler.args &lt;s2&gt;"/Zi"&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160324T152308Z" creationid="95" creationdate="20160324T152308Z">
        <seg>cCompiler.args &lt;s2&gt;"/Zi"&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>cCompiler.define &lt;s3&gt;"DLL_EXPORT"&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160324T152309Z" creationid="95" creationdate="20160324T152309Z">
        <seg>cCompiler.define &lt;s3&gt;"DLL_EXPORT"&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>cCompiler.define &lt;s3&gt;"PLUS_BROKEN"&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T151038Z" creationid="95" creationdate="20160504T151038Z">
        <seg>cCompiler.define &lt;s3&gt;"PLUS_BROKEN"&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>cCompiler.define &lt;s7&gt;"PLUS_BROKEN"&lt;/s7&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T151359Z" creationid="95" creationdate="20160504T151359Z">
        <seg>cCompiler.define &lt;s7&gt;"PLUS_BROKEN"&lt;/s7&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>check</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083226Z" creationid="msdx" creationdate="20150428T083226Z">
        <seg>check</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>checkstyle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104803Z" creationid="msdx" creationdate="20150428T104803Z">
        <seg>checkstyle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>checkstyle&lt;e0&gt;&lt;c1&gt;SourceSet&lt;/c1&gt;&lt;/e0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T025708Z" creationid="msdx" creationdate="20150505T025708Z">
        <seg>checkstyle&lt;e0&gt;&lt;c1&gt;SourceSet&lt;/c1&gt;&lt;/e0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>checkstyleMain</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T024701Z" creationid="msdx" creationdate="20150505T024701Z">
        <seg>checkstyleMain</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>checkstyleTest</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T025651Z" creationid="msdx" creationdate="20150505T025651Z">
        <seg>checkstyleTest</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>checkstyle_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104803Z" creationid="msdx" creationdate="20150428T104803Z">
        <seg>checkstyle_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>checkstyle_plugin.html#N13341</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150514T151852Z" creationid="msdx" creationdate="20150514T151852Z">
        <seg>checkstyle_plugin.html#N13341</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>checkstyle_plugin.html#N13355</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150514T151856Z" creationid="msdx" creationdate="20150514T151856Z">
        <seg>checkstyle_plugin.html#N13355</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>checkstyle_plugin.html#N133C8</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150514T151902Z" creationid="msdx" creationdate="20150514T151902Z">
        <seg>checkstyle_plugin.html#N133C8</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>checkstyle_plugin.html#N133E4</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150514T151907Z" creationid="msdx" creationdate="20150514T151907Z">
        <seg>checkstyle_plugin.html#N133E4</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>checkstyle_plugin.html#N13400</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150514T151911Z" creationid="msdx" creationdate="20150514T151911Z">
        <seg>checkstyle_plugin.html#N13400</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>chrome=1</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141126T122700Z" creationid="msdx" creationdate="20141126T122700Z">
        <seg>chrome=1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>clang(Clang)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T091226Z" creationid="haohang" creationdate="20160408T091226Z">
        <seg>clang(Clang)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>classDumpFile = file(&lt;s1&gt;"$buildDir/jacoco/classpathdumps"&lt;/s1&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T132255Z" creationid="msdx" creationdate="20150506T132255Z">
        <seg>classDumpFile = file(&lt;s1&gt;"$buildDir/jacoco/classpathdumps"&lt;/s1&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>classDumpPath</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T132323Z" creationid="msdx" creationdate="20150506T132323Z">
        <seg>classDumpPath</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>classes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083213Z" creationid="msdx" creationdate="20150428T083213Z">
        <seg>classes</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>classesDir = &lt;s0&gt;new&lt;/s0&gt; File(&lt;s1&gt;'build/classes'&lt;/s1&gt;)
task resources &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T073303Z" creationid="msdx" creationdate="20141109T073303Z">
        <seg>classesDir = &lt;s0&gt;new&lt;/s0&gt; File(&lt;s1&gt;'build/classes'&lt;/s1&gt;)
task resources &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>classesDir.mkdirs()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T093714Z" creationid="msdx" creationdate="20141109T093714Z">
        <seg>classesDir.mkdirs()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>classifier</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T160405Z" creationid="msdx" creationdate="20141113T160405Z">
        <seg>classifier</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>classifier = &lt;s4&gt;'src'&lt;/s4&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T155802Z" creationid="msdx" creationdate="20141113T155802Z">
        <seg>classifier = &lt;s4&gt;'src'&lt;/s4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>classpath</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083437Z" creationid="msdx" creationdate="20150428T083437Z">
        <seg>classpath</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>classpath = sourceSets.intTest.runtimeClasspath
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083433Z" creationid="msdx" creationdate="20150428T083433Z">
        <seg>classpath = sourceSets.intTest.runtimeClasspath
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>classpath configurations.moreLibs &lt;s17&gt;// adds a configuration to the WEB-INF/lib dir.&lt;/s17&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T093821Z" creationid="msdx" creationdate="20150503T093821Z">
        <seg>classpath configurations.moreLibs &lt;s17&gt;// adds a configuration to the WEB-INF/lib dir.&lt;/s17&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>classpath fileTree(&lt;s15&gt;'additionalLibs'&lt;/s15&gt;) &lt;s16&gt;// adds a file-set to the WEB-INF/lib dir.&lt;/s16&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T093821Z" creationid="msdx" creationdate="20150503T093821Z">
        <seg>classpath fileTree(&lt;s15&gt;'additionalLibs'&lt;/s15&gt;) &lt;s16&gt;// adds a file-set to the WEB-INF/lib dir.&lt;/s16&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>classpath {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T060206Z" creationid="msdx" creationdate="20141116T060206Z">
        <seg>classpath {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>classpath.entries.findAll { entry -&gt; entry.kind == &lt;s0&gt;'lib'&lt;/s0&gt; }*.exported = false</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T065955Z" creationid="haohang" creationdate="20150625T065955Z">
        <seg>classpath.entries.findAll { entry -&gt; entry.kind == &lt;s0&gt;'lib'&lt;/s0&gt; }*.exported = false</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>classpath.entries.removeAll { entry -&gt; entry.kind == &lt;s0&gt;'lib'&lt;/s0&gt; || entry.kind == &lt;s1&gt;'var'&lt;/s1&gt; }</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T064928Z" creationid="haohang" creationdate="20150625T064928Z">
        <seg>classpath.entries.removeAll { entry -&gt; entry.kind == &lt;s0&gt;'lib'&lt;/s0&gt; || entry.kind == &lt;s1&gt;'var'&lt;/s1&gt; }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>clean</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083219Z" creationid="msdx" creationdate="20150428T083219Z">
        <seg>clean</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>clean&lt;e0&gt;&lt;c1&gt;TaskName&lt;/c1&gt;&lt;/e0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083224Z" creationid="msdx" creationdate="20150428T083224Z">
        <seg>clean&lt;e0&gt;&lt;c1&gt;TaskName&lt;/c1&gt;&lt;/e0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>cleanEclipse</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T004400Z" creationid="haohang" creationdate="20150603T004400Z">
        <seg>cleanEclipse</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>cleanEclipseClasspath</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T004412Z" creationid="haohang" creationdate="20150603T004412Z">
        <seg>cleanEclipseClasspath</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>cleanEclipseJdt</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T004415Z" creationid="haohang" creationdate="20150603T004415Z">
        <seg>cleanEclipseJdt</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>cleanEclipseProject</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T004408Z" creationid="haohang" creationdate="20150603T004408Z">
        <seg>cleanEclipseProject</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>cleanEclipseWtpComponent</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T004419Z" creationid="haohang" creationdate="20150603T004419Z">
        <seg>cleanEclipseWtpComponent</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>cleanEclipseWtpFacet</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T004429Z" creationid="haohang" creationdate="20150603T004429Z">
        <seg>cleanEclipseWtpFacet</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>cleanIdea</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T072336Z" creationid="haohang" creationdate="20150625T072336Z">
        <seg>cleanIdea</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>cleanIdeaModule</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T072441Z" creationid="haohang" creationdate="20150625T072441Z">
        <seg>cleanIdeaModule</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>cleanIdeaProject</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T072350Z" creationid="haohang" creationdate="20150625T072350Z">
        <seg>cleanIdeaProject</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>cleanIdeaWorkspace</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T072458Z" creationid="haohang" creationdate="20150625T072458Z">
        <seg>cleanIdeaWorkspace</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>coberturaReportPath = file(&lt;s0&gt;"$buildDir/cobertura.xml"&lt;/s0&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150510T143856Z" creationid="msdx" creationdate="20150510T143856Z">
        <seg>coberturaReportPath = file(&lt;s0&gt;"$buildDir/cobertura.xml"&lt;/s0&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>codenarc</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104804Z" creationid="msdx" creationdate="20150428T104804Z">
        <seg>codenarc</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>codenarc&lt;e0&gt;&lt;c1&gt;SourceSet&lt;/c1&gt;&lt;/e0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T133229Z" creationid="msdx" creationdate="20150505T133229Z">
        <seg>codenarc&lt;e0&gt;&lt;c1&gt;SourceSet&lt;/c1&gt;&lt;/e0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>codenarcMain</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T133150Z" creationid="msdx" creationdate="20150505T133150Z">
        <seg>codenarcMain</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>codenarcTest</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T133209Z" creationid="msdx" creationdate="20150505T133209Z">
        <seg>codenarcTest</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>codenarc_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104804Z" creationid="msdx" creationdate="20150428T104804Z">
        <seg>codenarc_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>codenarc_plugin.html#N13415</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150514T151923Z" creationid="msdx" creationdate="20150514T151923Z">
        <seg>codenarc_plugin.html#N13415</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>collection = files { srcDir.listFiles() }</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T160738Z" creationid="msdx" creationdate="20141112T160738Z">
        <seg>collection = files { srcDir.listFiles() }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>collection.collect { relativePath(it) }.sort().each { println it }</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T160740Z" creationid="msdx" creationdate="20141112T160740Z">
        <seg>collection.collect { relativePath(it) }.sort().each { println it }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>collection.collect { relativePath(it) }.sort().each { println it }
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T160746Z" creationid="msdx" creationdate="20141112T160746Z">
        <seg>collection.collect { relativePath(it) }.sort().each { println it }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>comparing_builds.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151201T070917Z" creationid="haohang" creationdate="20151201T070917Z">
        <seg>comparing_builds.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compile</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083215Z" creationid="msdx" creationdate="20150428T083215Z">
        <seg>compile</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compile
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T075824Z" creationid="haohang" creationdate="20150722T075824Z">
        <seg>compile
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compile &lt;s0&gt;"org.gradle.test.classifiers:service:1.0:jdk15@jar"&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150731T100858Z" creationid="haohang" creationdate="20150731T100858Z">
        <seg>compile &lt;s0&gt;"org.gradle.test.classifiers:service:1.0:jdk15@jar"&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compile &lt;s0&gt;'org.codehaus.groovy:groovy-all:2.2.0'&lt;/s0&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104655Z" creationid="msdx" creationdate="20150428T104655Z">
        <seg>compile &lt;s0&gt;'org.codehaus.groovy:groovy-all:2.2.0'&lt;/s0&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compile &lt;s0&gt;'org.scala-lang:scala-library:2.9.1'&lt;/s0&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T152946Z" creationid="msdx" creationdate="20150429T152946Z">
        <seg>compile &lt;s0&gt;'org.scala-lang:scala-library:2.9.1'&lt;/s0&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compile &lt;s2&gt;'org.codehaus.groovy:groovy-all:2.2.0'&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T065506Z" creationid="msdx" creationdate="20141030T065506Z">
        <seg>compile &lt;s2&gt;'org.codehaus.groovy:groovy-all:2.2.0'&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compile &lt;s4&gt;"javax.servlet:servlet-api:2.5"&lt;/s4&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160722T091246Z" creationid="haohang" creationdate="20160722T091246Z">
        <seg>compile &lt;s4&gt;"javax.servlet:servlet-api:2.5"&lt;/s4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compile files(&lt;s0&gt;"$buildDir/classes"&lt;/s0&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T094452Z" creationid="haohang" creationdate="20150801T094452Z">
        <seg>compile files(&lt;s0&gt;"$buildDir/classes"&lt;/s0&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compile gradleApi()
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T094658Z" creationid="haohang" creationdate="20150801T094658Z">
        <seg>compile gradleApi()
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compile localGroovy()
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T080609Z" creationid="msdx" creationdate="20150429T080609Z">
        <seg>compile localGroovy()
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compile module(&lt;s1&gt;":compile:1.0"&lt;/s1&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T093818Z" creationid="msdx" creationdate="20150503T093818Z">
        <seg>compile module(&lt;s1&gt;":compile:1.0"&lt;/s1&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compile module(&lt;s1&gt;'org.codehaus.groovy:groovy:1.6.0'&lt;/s1&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T080911Z" creationid="msdx" creationdate="20150429T080911Z">
        <seg>compile module(&lt;s1&gt;'org.codehaus.groovy:groovy:1.6.0'&lt;/s1&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compile project(&lt;s0&gt;':shared'&lt;/s0&gt;)
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T092519Z" creationid="haohang" creationdate="20150801T092519Z">
        <seg>compile project(&lt;s0&gt;':shared'&lt;/s0&gt;)
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compile project(&lt;s4&gt;':shared'&lt;/s4&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T084523Z" creationid="haohang" creationdate="20160726T084523Z">
        <seg>compile project(&lt;s4&gt;':shared'&lt;/s4&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compile project(&lt;s5&gt;':shared'&lt;/s5&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T083846Z" creationid="haohang" creationdate="20160726T083846Z">
        <seg>compile project(&lt;s5&gt;':shared'&lt;/s5&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compile project(&lt;s7&gt;':shared'&lt;/s7&gt;), project(&lt;s8&gt;':api'&lt;/s8&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T083851Z" creationid="haohang" creationdate="20160726T083851Z">
        <seg>compile project(&lt;s7&gt;':shared'&lt;/s7&gt;), project(&lt;s8&gt;':api'&lt;/s8&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compile project(&lt;s8&gt;':shared'&lt;/s8&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T084539Z" creationid="haohang" creationdate="20160726T084539Z">
        <seg>compile project(&lt;s8&gt;':shared'&lt;/s8&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compile project(path: &lt;s0&gt;':api'&lt;/s0&gt;, configuration: &lt;s1&gt;'spi'&lt;/s1&gt;)
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T032801Z" creationid="haohang" creationdate="20150807T032801Z">
        <seg>compile project(path: &lt;s0&gt;':api'&lt;/s0&gt;, configuration: &lt;s1&gt;'spi'&lt;/s1&gt;)
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compile project(path: &lt;s9&gt;':api'&lt;/s9&gt;, configuration: &lt;s10&gt;'spi'&lt;/s10&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T084542Z" creationid="haohang" creationdate="20160726T084542Z">
        <seg>compile project(path: &lt;s9&gt;':api'&lt;/s9&gt;, configuration: &lt;s10&gt;'spi'&lt;/s10&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compile {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T123631Z" creationid="msdx" creationdate="20141113T123631Z">
        <seg>compile {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compile(&lt;s3&gt;"org.gradle.test.excludes:api:1.0"&lt;/s3&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T094944Z" creationid="haohang" creationdate="20150801T094944Z">
        <seg>compile(&lt;s3&gt;"org.gradle.test.excludes:api:1.0"&lt;/s3&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compile.exclude module: &lt;s0&gt;'commons'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T094942Z" creationid="haohang" creationdate="20150801T094942Z">
        <seg>compile.exclude module: &lt;s0&gt;'commons'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compile&lt;e0&gt;&lt;c1&gt;SourceSet&lt;/c1&gt;&lt;/e0&gt;Groovy</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T071435Z" creationid="msdx" creationdate="20150429T071435Z">
        <seg>compile&lt;e0&gt;&lt;c1&gt;SourceSet&lt;/c1&gt;&lt;/e0&gt;Groovy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compile&lt;e0&gt;&lt;c1&gt;SourceSet&lt;/c1&gt;&lt;/e0&gt;Java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083224Z" creationid="msdx" creationdate="20150428T083224Z">
        <seg>compile&lt;e0&gt;&lt;c1&gt;SourceSet&lt;/c1&gt;&lt;/e0&gt;Java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compile&lt;e0&gt;&lt;c1&gt;SourceSet&lt;/c1&gt;&lt;/e0&gt;Scala</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T145506Z" creationid="msdx" creationdate="20150429T145506Z">
        <seg>compile&lt;e0&gt;&lt;c1&gt;SourceSet&lt;/c1&gt;&lt;/e0&gt;Scala</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compileClasspath</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083252Z" creationid="msdx" creationdate="20150428T083252Z">
        <seg>compileClasspath</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compileGroovy</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T071352Z" creationid="msdx" creationdate="20150429T071352Z">
        <seg>compileGroovy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compileJava</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083210Z" creationid="msdx" creationdate="20150428T083210Z">
        <seg>compileJava</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compileScala</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T145447Z" creationid="msdx" creationdate="20150429T145447Z">
        <seg>compileScala</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compileScala {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150430T155213Z" creationid="msdx" creationdate="20150430T155213Z">
        <seg>compileScala</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compileTestGroovy</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T071419Z" creationid="msdx" creationdate="20150429T071419Z">
        <seg>compileTestGroovy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compileTestJava</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083213Z" creationid="msdx" creationdate="20150428T083213Z">
        <seg>compileTestJava</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compileTestScala</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T145459Z" creationid="msdx" creationdate="20150429T145459Z">
        <seg>compileTestScala</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>components {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T041818Z" creationid="95" creationdate="20151129T041818Z">
        <seg>components {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>conf2ScopeMappings</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151228T152745Z" creationid="95" creationdate="20151228T152745Z">
        <seg>conf2ScopeMappings</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>config/checkstyle/checkstyle.xml</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T132636Z" creationid="msdx" creationdate="20150505T132636Z">
        <seg>config/checkstyle/checkstyle.xml</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>config/codenarc/codenarc.xml</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T133420Z" creationid="msdx" creationdate="20150505T133420Z">
        <seg>config/codenarc/codenarc.xml</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>config1 &lt;s0&gt;"sea.fish:tuna:latest.integration"&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T041617Z" creationid="95" creationdate="20151129T041617Z">
        <seg>config1 &lt;s0&gt;"sea.fish:tuna:latest.integration"&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>config2 &lt;s1&gt;"sea.fish:tuna:latest.release"&lt;/s1&gt;
}

task listFish &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T041618Z" creationid="95" creationdate="20151129T041618Z">
        <seg>config2 &lt;s1&gt;"sea.fish:tuna:latest.release"&lt;/s1&gt;
}

task listFish &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>config3 &lt;s0&gt;"air.birds:albatros:latest.silver"&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T041818Z" creationid="95" creationdate="20151129T041818Z">
        <seg>config3 &lt;s0&gt;"air.birds:albatros:latest.silver"&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>configuration = configurations.deployerJars</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T134854Z" creationid="95" creationdate="20160105T134854Z">
        <seg>configuration = configurations.deployerJars</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>configurations {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T060529Z" creationid="msdx" creationdate="20141116T060529Z">
        <seg>configurations {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>configurations.all {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T061530Z" creationid="95" creationdate="20151115T061530Z">
        <seg>configurations.all {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>configurations.alllife.allDependencies.each { dep -&gt; println dep.name }</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T034359Z" creationid="haohang" creationdate="20150807T034359Z">
        <seg>configurations.alllife.allDependencies.each { dep -&gt; println dep.name }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>configurations.alllife.allDependencies.findAll { dep -&gt; dep.name != &lt;s0&gt;'orca'&lt;/s0&gt; }.each { dep -&gt; println dep.name }
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T034400Z" creationid="haohang" creationdate="20150807T034400Z">
        <seg>configurations.alllife.allDependencies.findAll { dep -&gt; dep.name != &lt;s0&gt;'orca'&lt;/s0&gt; }.each { dep -&gt; println dep.name }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>configurations.alllife.copy().allDependencies.each { dep -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T040604Z" creationid="haohang" creationdate="20150807T040604Z">
        <seg>configurations.alllife.copy().allDependencies.each { dep -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>configurations.alllife.copyRecursive { dep -&gt; dep.name != &lt;s0&gt;'orca'&lt;/s0&gt; }.allDependencies.each { dep -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T040602Z" creationid="haohang" creationdate="20150807T040602Z">
        <seg>configurations.alllife.copyRecursive { dep -&gt; dep.name != &lt;s0&gt;'orca'&lt;/s0&gt; }.allDependencies.each { dep -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>configurations.alllife.dependencies.each { dep -&gt; println dep.name }</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T034358Z" creationid="haohang" creationdate="20150807T034358Z">
        <seg>configurations.alllife.dependencies.each { dep -&gt; println dep.name }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>configurations.compile.each { File file -&gt; println file.name }
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T091159Z" creationid="haohang" creationdate="20150801T091159Z">
        <seg>configurations.compile.each { File file -&gt; println file.name }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>configurations.config1.each { println it.name }</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T041619Z" creationid="95" creationdate="20151129T041619Z">
        <seg>configurations.config1.each { println it.name }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>configurations.config2.each { println it.name}
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T041643Z" creationid="95" creationdate="20151129T041643Z">
        <seg>configurations.config2.each { println it.name}
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>configurations.config3.each { println it.name }
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T041825Z" creationid="95" creationdate="20151129T041825Z">
        <seg>configurations.config3.each { println it.name }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>configurations.sealife.copyRecursive { dep -&gt; dep.name == &lt;s0&gt;'orca'&lt;/s0&gt; }.each { file -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T041230Z" creationid="haohang" creationdate="20150807T041230Z">
        <seg>configurations.sealife.copyRecursive { dep -&gt; dep.name == &lt;s0&gt;'orca'&lt;/s0&gt; }.each { file -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>configurations.sealife.files { dep -&gt; dep.name == &lt;s0&gt;'orca'&lt;/s0&gt; }.each { file -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T034743Z" creationid="haohang" creationdate="20150807T034743Z">
        <seg>configurations.sealife.files { dep -&gt; dep.name == &lt;s0&gt;'orca'&lt;/s0&gt; }.each { file -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>configurations.sealife.files { dep -&gt; dep.name == &lt;s1&gt;'orca'&lt;/s1&gt; }.each { file -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T041232Z" creationid="haohang" creationdate="20150807T041232Z">
        <seg>configurations.sealife.files { dep -&gt; dep.name == &lt;s1&gt;'orca'&lt;/s1&gt; }.each { file -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>configurations.sealife.files.each { file -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T034609Z" creationid="haohang" creationdate="20150807T034609Z">
        <seg>configurations.sealife.files.each { file -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>configure(scalaCompileOptions.forkOptions) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150430T160054Z" creationid="msdx" creationdate="20150430T160054Z">
        <seg>configure(scalaCompileOptions.forkOptions) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>configures reasonable default values for all archive tasks (e.g. tasks that inherit from &lt;a0&gt;&lt;c1&gt;AbstractArchiveTask&lt;/c1&gt;&lt;/a0&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T070908Z" creationid="Administrator" creationdate="20150425T070908Z">
        <seg>为所有归档任务配置合适的默认值（比如从&lt;a0&gt;&lt;c1&gt;AbstractArchiveTask&lt;/c1&gt;&lt;/a0&gt;继承来任务）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>console.printf "\nThanks.\n\n"</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160108T152921Z" creationid="95" creationdate="20160108T152921Z">
        <seg>console.printf "\nThanks.\n\n"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>console.printf "\n\nWe have to sign some things in this build.\n\nPlease enter your signing details.\n\n"</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160108T152907Z" creationid="95" creationdate="20160108T152907Z">
        <seg>console.printf "\n\nWe have to sign some things in this build.\n\nPlease enter your signing details.\n\n"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>consumer/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T062303Z" creationid="haohang" creationdate="20160718T062303Z">
        <seg>consumer/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>consumer/build.gradle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T062357Z" creationid="haohang" creationdate="20160718T062357Z">
        <seg>consumer/build.gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>contents {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150701T032508Z" creationid="haohang" creationdate="20150701T032508Z">
        <seg>contents {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>contextPath</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T151016Z" creationid="msdx" creationdate="20150504T151016Z">
        <seg>contextPath</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>copy {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T131756Z" creationid="msdx" creationdate="20141113T131756Z">
        <seg>copy {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>cpp</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141209T074117Z" creationid="msdx" creationdate="20141209T074117Z">
        <seg>cpp</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>cpp {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160225T085519Z" creationid="haohang" creationdate="20160225T085519Z">
        <seg>cpp {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>cppCompiler.args &lt;s1&gt;"-g"&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160401T090612Z" creationid="haohang" creationdate="20160401T090612Z">
        <seg>cppCompiler.args &lt;s1&gt;"-g"&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>cppCompiler.args &lt;s3&gt;'/Zi'&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160401T090620Z" creationid="haohang" creationdate="20160401T090620Z">
        <seg>cppCompiler.args &lt;s3&gt;'/Zi'&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>cppCompiler.args &lt;s4&gt;"-O2"&lt;/s4&gt;, &lt;s5&gt;"-fno-access-control"&lt;/s5&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160324T151759Z" creationid="95" creationdate="20160324T151759Z">
        <seg>cppCompiler.args &lt;s4&gt;"-O2"&lt;/s4&gt;, &lt;s5&gt;"-fno-access-control"&lt;/s5&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>cppCompiler.args &lt;s9&gt;"/Zi"&lt;/s9&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160324T151801Z" creationid="95" creationdate="20160324T151801Z">
        <seg>cppCompiler.args &lt;s9&gt;"/Zi"&lt;/s9&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>cppCompiler.define &lt;s1&gt;"DLL_EXPORT"&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160324T153108Z" creationid="95" creationdate="20160324T153108Z">
        <seg>cppCompiler.define &lt;s1&gt;"DLL_EXPORT"&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>cppCompiler.define &lt;s1&gt;"FRENCH"&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T081121Z" creationid="haohang" creationdate="20160408T081121Z">
        <seg>cppCompiler.define &lt;s1&gt;"FRENCH"&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>cppCompiler.define &lt;s1&gt;"NDEBUG"&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160324T151756Z" creationid="95" creationdate="20160324T151756Z">
        <seg>cppCompiler.define &lt;s1&gt;"NDEBUG"&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>cppCompiler.define &lt;s4&gt;'DEBUG'&lt;/s4&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160401T090621Z" creationid="haohang" creationdate="20160401T090621Z">
        <seg>cppCompiler.define &lt;s4&gt;'DEBUG'&lt;/s4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>credentials {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150909T053440Z" creationid="haohang" creationdate="20150909T053440Z">
        <seg>credentials {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>csv.enabled false</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T132001Z" creationid="msdx" creationdate="20150506T132001Z">
        <seg>csv.enabled false</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>cunit</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104923Z" creationid="msdx" creationdate="20150428T104923Z">
        <seg>cunit</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>cunit {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T151337Z" creationid="95" creationdate="20160504T151337Z">
        <seg>cunit {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>custom {}
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150701T031256Z" creationid="haohang" creationdate="20150701T031256Z">
        <seg>custom {}
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>customDistTar</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150701T031311Z" creationid="haohang" creationdate="20150701T031311Z">
        <seg>customDistTar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>customDistZip</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150701T031310Z" creationid="haohang" creationdate="20150701T031310Z">
        <seg>customDistZip</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>custom_plugins.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141123T150631Z" creationid="msdx" creationdate="20141123T150631Z">
        <seg>custom_plugins.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>custom_tasks.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T134204Z" creationid="msdx" creationdate="20141113T134204Z">
        <seg>custom_tasks.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>database {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150510T143650Z" creationid="msdx" creationdate="20150510T143650Z">
        <seg>database {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>database.driverClassName</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T053935Z" creationid="msdx" creationdate="20150513T053935Z">
        <seg>database.driverClassName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>database.password</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T053935Z" creationid="msdx" creationdate="20150513T053935Z">
        <seg>database.password</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>database.url</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T053935Z" creationid="msdx" creationdate="20150513T053935Z">
        <seg>database.url</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>database.username</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T053935Z" creationid="msdx" creationdate="20150513T053935Z">
        <seg>database.username</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>date/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160722T091203Z" creationid="haohang" creationdate="20160722T091203Z">
        <seg>date/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>debug</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160401T090301Z" creationid="haohang" creationdate="20160401T090301Z">
        <seg>debug</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>def dest = &lt;s0&gt;"dest"&lt;/s0&gt;

task copy(type: Copy) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T045150Z" creationid="msdx" creationdate="20141108T045150Z">
        <seg>def dest = &lt;s0&gt;"dest"&lt;/s0&gt;

task copy(type: Copy) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>def destFile = &lt;s7&gt;new&lt;/s7&gt; File(destDir, &lt;s8&gt;"${name}.txt"&lt;/s8&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T060328Z" creationid="msdx" creationdate="20141111T060328Z">
        <seg>def destFile = &lt;s7&gt;new&lt;/s7&gt; File(destDir, &lt;s8&gt;"${name}.txt"&lt;/s8&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>def docs = file(&lt;s0&gt;"$buildDir/docs"&lt;/s0&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150703T100424Z" creationid="haohang" creationdate="20150703T100424Z">
        <seg>def docs = file(&lt;s0&gt;"$buildDir/docs"&lt;/s0&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>def file = console.readLine("PGP Secret Key Ring File (absolute path): ")</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160108T152917Z" creationid="95" creationdate="20160108T152917Z">
        <seg>def file = console.readLine("PGP Secret Key Ring File (absolute path): ")</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>def greet() {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T145742Z" creationid="95" creationdate="20160814T145742Z">
        <seg>def greet() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>def height = mountain.height[&lt;s6&gt;0&lt;/s6&gt;].text()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T060328Z" creationid="msdx" creationdate="20141111T060328Z">
        <seg>def height = mountain.height[&lt;s6&gt;0&lt;/s6&gt;].text()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>def id = console.readLine("PGP Key Id: ")</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160108T152908Z" creationid="95" creationdate="20160108T152908Z">
        <seg>def id = console.readLine("PGP Key Id: ")</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>def mountains = &lt;s4&gt;new&lt;/s4&gt; XmlParser().parse(srcFile)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T060325Z" creationid="msdx" creationdate="20141111T060325Z">
        <seg>def mountains = &lt;s4&gt;new&lt;/s4&gt; XmlParser().parse(srcFile)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>def name = mountain.name[&lt;s5&gt;0&lt;/s5&gt;].text()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T060326Z" creationid="msdx" creationdate="20141111T060326Z">
        <seg>def name = mountain.name[&lt;s5&gt;0&lt;/s5&gt;].text()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>def password = console.readPassword("PGP Private Key Password: ")</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160108T152918Z" creationid="95" creationdate="20160108T152918Z">
        <seg>def password = console.readPassword("PGP Private Key Password: ")</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>def path = ant.path {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T011226Z" creationid="msdx" creationdate="20141116T011226Z">
        <seg>def path = ant.path {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>def someFile = file(&lt;s0&gt;'build/somefile.txt'&lt;/s0&gt;)

artifacts {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151226T091054Z" creationid="95" creationdate="20151226T091054Z">
        <seg>def someFile = file(&lt;s0&gt;'build/somefile.txt'&lt;/s0&gt;)

artifacts {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>def version = findDefaultVersionInCatalog(details.requested.group, details.requested.name)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T070653Z" creationid="95" creationdate="20151115T070653Z">
        <seg>def version = findDefaultVersionInCatalog(details.requested.group, details.requested.name)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>default</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083232Z" creationid="msdx" creationdate="20150428T083232Z">
        <seg>default</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependencies &lt;s5&gt;"org.apache.ant:ant-launcher:1.9.3@jar"&lt;/s5&gt;, &lt;s6&gt;"org.apache.ant:ant-junit:1.9.3"&lt;/s6&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T091427Z" creationid="haohang" creationdate="20150801T091427Z">
        <seg>dependencies &lt;s5&gt;"org.apache.ant:ant-launcher:1.9.3@jar"&lt;/s5&gt;, &lt;s6&gt;"org.apache.ant:ant-junit:1.9.3"&lt;/s6&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependencies {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T080015Z" creationid="msdx" creationdate="20150429T080015Z">
        <seg>dependencies {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependencies(&lt;s6&gt;'org.apache.ant:ant-junit:1.9.3@jar'&lt;/s6&gt;, &lt;s7&gt;'org.apache.ant:ant-launcher:1.9.3'&lt;/s7&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T080914Z" creationid="msdx" creationdate="20150429T080914Z">
        <seg>dependencies(&lt;s6&gt;'org.apache.ant:ant-junit:1.9.3@jar'&lt;/s6&gt;, &lt;s7&gt;'org.apache.ant:ant-launcher:1.9.3'&lt;/s7&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependency &lt;s2&gt;":compile-transitive-1.0@jar"&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T093818Z" creationid="msdx" creationdate="20150503T093818Z">
        <seg>dependency &lt;s2&gt;":compile-transitive-1.0@jar"&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependency &lt;s3&gt;":providedCompile-transitive:1.0@jar"&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T093818Z" creationid="msdx" creationdate="20150503T093818Z">
        <seg>dependency &lt;s3&gt;":providedCompile-transitive:1.0@jar"&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependency &lt;s6&gt;":providedCompile-transitive:1.0@jar"&lt;/s6&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T093819Z" creationid="msdx" creationdate="20150503T093819Z">
        <seg>dependency &lt;s3&gt;":providedCompile-transitive:1.0@jar"&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependency(&lt;s1&gt;"commons-cli:commons-cli:1.0"&lt;/s1&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T091423Z" creationid="haohang" creationdate="20150801T091423Z">
        <seg>dependency(&lt;s1&gt;"commons-cli:commons-cli:1.0"&lt;/s1&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependency(&lt;s2&gt;'asm:asm-all:2.2.3'&lt;/s2&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T080911Z" creationid="msdx" creationdate="20150429T080911Z">
        <seg>dependency(&lt;s2&gt;'asm:asm-all:2.2.3'&lt;/s2&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependency(&lt;s3&gt;'antlr:antlr:2.7.7'&lt;/s3&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T080912Z" creationid="msdx" creationdate="20150429T080912Z">
        <seg>dependency(&lt;s3&gt;'antlr:antlr:2.7.7'&lt;/s3&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependency(&lt;s4&gt;'commons-cli:commons-cli:1.2'&lt;/s4&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T080912Z" creationid="msdx" creationdate="20150429T080912Z">
        <seg>dependency(&lt;s4&gt;'commons-cli:commons-cli:1.2'&lt;/s4&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependency-cache</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083243Z" creationid="msdx" creationdate="20150428T083243Z">
        <seg>dependency-cache</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependencyCacheDir</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083244Z" creationid="msdx" creationdate="20150428T083244Z">
        <seg>dependencyCacheDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependencyCacheDirName</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083243Z" creationid="msdx" creationdate="20150428T083243Z">
        <seg>dependencyCacheDirName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependencyReport</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T061142Z" creationid="haohang" creationdate="20150628T061142Z">
        <seg>dependencyReport</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependency_management.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150710T013140Z" creationid="haohang" creationdate="20150710T013140Z">
        <seg>dependency_management.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependency_management.html#para:dependencies_with_empty_attributes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150910T012138Z" creationid="haohang" creationdate="20150910T012138Z">
        <seg>dependency_management.html#para:dependencies_with_empty_attributes</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependency_management.html#para:notation_collections</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151201T064026Z" creationid="haohang" creationdate="20151201T064026Z">
        <seg>dependency_management.html#para:notation_collections</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependency_management.html#sec:blacklisting_version</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T054351Z" creationid="95" creationdate="20151115T054351Z">
        <seg>dependency_management.html#sec:blacklisting_version</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependency_management.html#sec:cache_command_line_options</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T012309Z" creationid="haohang" creationdate="20150722T012309Z">
        <seg>dependency_management.html#sec:cache_command_line_options</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependency_management.html#sec:controlling_caching</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T012310Z" creationid="haohang" creationdate="20150722T012310Z">
        <seg>dependency_management.html#sec:controlling_caching</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependency_management.html#sec:dependency_configurations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151227T152814Z" creationid="95" creationdate="20151227T152814Z">
        <seg>dependency_management.html#sec:dependency_configurations</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependency_management.html#sec:flat_dir_resolver</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T095702Z" creationid="haohang" creationdate="20150807T095702Z">
        <seg>dependency_management.html#sec:flat_dir_resolver</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependency_management.html#sec:how_to_declare_your_dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T060209Z" creationid="msdx" creationdate="20141116T060209Z">
        <seg>dependency_management.html#sec:how_to_declare_your_dependencies</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependency_management.html#sec:ivy_repositories</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T095651Z" creationid="haohang" creationdate="20150807T095651Z">
        <seg>dependency_management.html#sec:ivy_repositories</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependency_management.html#sec:repositories</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T103053Z" creationid="haohang" creationdate="20150801T103053Z">
        <seg>dependency_management.html#sec:repositories</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependency_management.html#sub:api_dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T080630Z" creationid="haohang" creationdate="20150722T080630Z">
        <seg>dependency_management.html#sub:api_dependencies</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependency_management.html#sub:cache_artifact_reuse</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T045619Z" creationid="95" creationdate="20151129T045619Z">
        <seg>dependency_management.html#sub:cache_artifact_reuse</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependency_management.html#sub:client_module_dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T080442Z" creationid="haohang" creationdate="20150722T080442Z">
        <seg>dependency_management.html#sub:client_module_dependencies</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependency_management.html#sub:configurations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T144838Z" creationid="msdx" creationdate="20141112T144838Z">
        <seg>dependency_management.html#sub:configurations</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependency_management.html#sub:dependency_management_and_java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150721T055757Z" creationid="haohang" creationdate="20150721T055757Z">
        <seg>dependency_management.html#sub:dependency_management_and_java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependency_management.html#sub:file_dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T080428Z" creationid="haohang" creationdate="20150722T080428Z">
        <seg>dependency_management.html#sub:file_dependencies</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependency_management.html#sub:groovy_dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T080726Z" creationid="haohang" creationdate="20150722T080726Z">
        <seg>dependency_management.html#sub:groovy_dependencies</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependency_management.html#sub:maven_central</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T094110Z" creationid="haohang" creationdate="20150807T094110Z">
        <seg>dependency_management.html#sub:maven_central</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependency_management.html#sub:maven_jcenter</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T094158Z" creationid="haohang" creationdate="20150807T094158Z">
        <seg>dependency_management.html#sub:maven_jcenter</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependency_management.html#sub:maven_local</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T095556Z" creationid="haohang" creationdate="20150807T095556Z">
        <seg>dependency_management.html#sub:maven_local</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependency_management.html#sub:maven_repo</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T095617Z" creationid="haohang" creationdate="20150807T095617Z">
        <seg>dependency_management.html#sub:maven_repo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependency_management.html#sub:module_dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T080039Z" creationid="haohang" creationdate="20150722T080039Z">
        <seg>dependency_management.html#sub:module_dependencies</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependency_management.html#sub:more_about_ivy_resolvers</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151226T092101Z" creationid="95" creationdate="20151226T092101Z">
        <seg>dependency_management.html#sub:more_about_ivy_resolvers</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependency_management.html#sub:project_dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T080348Z" creationid="haohang" creationdate="20150722T080348Z">
        <seg>dependency_management.html#sub:project_dependencies</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependency_management.html#sub:version_conflicts</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T101744Z" creationid="haohang" creationdate="20150801T101744Z">
        <seg>dependency_management.html#sub:version_conflicts</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependsOn binaries.withType(ExecutableBinary).matching {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T084719Z" creationid="haohang" creationdate="20160408T084719Z">
        <seg>dependsOn binaries.withType(ExecutableBinary).matching {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependsOn classes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T084525Z" creationid="haohang" creationdate="20160726T084525Z">
        <seg>dependsOn classes</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependsOn pingServer1, pingServer2
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T065650Z" creationid="msdx" creationdate="20141111T065650Z">
        <seg>dependsOn pingServer1, pingServer2
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>deploy project(&lt;s3&gt;':war'&lt;/s3&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T142849Z" creationid="msdx" creationdate="20150504T142849Z">
        <seg>deploy project(&lt;s3&gt;':war'&lt;/s3&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>deployerJars
}

repositories {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T134850Z" creationid="95" creationdate="20160105T134850Z">
        <seg>deployerJars
}

repositories {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>deployerJars &lt;s0&gt;"org.apache.maven.wagon:wagon-ssh:2.2"&lt;/s0&gt;
}

uploadArchives {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T134852Z" creationid="95" creationdate="20160105T134852Z">
        <seg>deployerJars &lt;s0&gt;"org.apache.maven.wagon:wagon-ssh:2.2"&lt;/s0&gt;
}

uploadArchives {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>deploymentDescriptor</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T141717Z" creationid="msdx" creationdate="20150504T141717Z">
        <seg>deploymentDescriptor</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>deploymentDescriptor {  &lt;s14&gt;// custom entries for application.xml:&lt;/s14&gt;
&lt;s15&gt;//      fileName = "application.xml"  // same as the default value&lt;/s15&gt;
&lt;s16&gt;//      version = "6"  // same as the default value&lt;/s16&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T142900Z" creationid="msdx" creationdate="20150504T142900Z">
        <seg>deploymentDescriptor {  &lt;s14&gt;// custom entries for application.xml:&lt;/s14&gt;
&lt;s15&gt;//      fileName = "application.xml"  // same as the default value&lt;/s15&gt;
&lt;s16&gt;//      version = "6"  // same as the default value&lt;/s16&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>description</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T044337Z" creationid="msdx" creationdate="20141108T044337Z">
        <seg>description</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>description &lt;s0&gt;'Copies the resource directory to the target directory.'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T015507Z" creationid="msdx" creationdate="20141111T015507Z">
        <seg>description &lt;s0&gt;'Copies the resource directory to the target directory.'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>description = &lt;s0&gt;'compile classpath'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T075930Z" creationid="haohang" creationdate="20150722T075930Z">
        <seg>description = &lt;s0&gt;'compile classpath'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>description = &lt;s1&gt;'compile classpath'&lt;/s1&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T075939Z" creationid="haohang" creationdate="20150722T075939Z">
        <seg>description = &lt;s1&gt;'compile classpath'&lt;/s1&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>description = &lt;s20&gt;"My customized EAR for the Gradle documentation"&lt;/s20&gt;  &lt;s21&gt;// defaults to project.description&lt;/s21&gt;
&lt;s22&gt;//      libraryDirectory = "APP-INF/lib"  // not needed, because setting libDirName above did this for us&lt;/s22&gt;
&lt;s23&gt;//      module("my.jar", "java")  // wouldn't deploy since my.jar isn't a deploy dependency&lt;/s23&gt;
&lt;s24&gt;//      webModule("my.war", "/")  // wouldn't deploy since my.war isn't a deploy dependency&lt;/s24&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T142901Z" creationid="msdx" creationdate="20150504T142901Z">
        <seg>description = &lt;s20&gt;"My customized EAR for the Gradle documentation"&lt;/s20&gt;  &lt;s21&gt;// defaults to project.description&lt;/s21&gt;
&lt;s22&gt;//      libraryDirectory = "APP-INF/lib"  // not needed, because setting libDirName above did this for us&lt;/s22&gt;
&lt;s23&gt;//      module("my.jar", "java")  // wouldn't deploy since my.jar isn't a deploy dependency&lt;/s23&gt;
&lt;s24&gt;//      webModule("my.war", "/")  // wouldn't deploy since my.war isn't a deploy dependency&lt;/s24&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>destDir.mkdirs()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T060325Z" creationid="msdx" creationdate="20141111T060325Z">
        <seg>destDir.mkdirs()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>destFile = file(&lt;s0&gt;'build/somefile.txt'&lt;/s0&gt;)
}

artifacts {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151226T091157Z" creationid="95" creationdate="20151226T091157Z">
        <seg>destFile = file(&lt;s0&gt;'build/somefile.txt'&lt;/s0&gt;)
}

artifacts {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>destFile.text = &lt;s9&gt;"$name -&gt; ${height}\n"&lt;/s9&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T060330Z" creationid="msdx" creationdate="20141111T060330Z">
        <seg>destFile.text = &lt;s9&gt;"$name -&gt; ${height}\n"&lt;/s9&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>destPath</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T132307Z" creationid="msdx" creationdate="20150506T132307Z">
        <seg>destPath</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>destinationDir</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T155941Z" creationid="msdx" creationdate="20141113T155941Z">
        <seg>destinationDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>destinationDir = file(&lt;s2&gt;"$buildDir/reports/allTests"&lt;/s2&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T142810Z" creationid="msdx" creationdate="20150428T142810Z">
        <seg>destinationDir = file(&lt;s2&gt;"$buildDir/reports/allTests"&lt;/s2&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>destinationFile = file(&lt;s0&gt;"$buildDir/jacoco/jacocoTest.exec"&lt;/s0&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T132254Z" creationid="msdx" creationdate="20150506T132254Z">
        <seg>destinationFile = file(&lt;s0&gt;"$buildDir/jacoco/jacocoTest.exec"&lt;/s0&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>details.exclude()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T145618Z" creationid="msdx" creationdate="20150428T145618Z">
        <seg>details.exclude()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>details.statusScheme = [&lt;s3&gt;"bronze"&lt;/s3&gt;, &lt;s4&gt;"silver"&lt;/s4&gt;, &lt;s5&gt;"gold"&lt;/s5&gt;, &lt;s6&gt;"platinum"&lt;/s6&gt;]</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T041821Z" creationid="95" creationdate="20151129T041821Z">
        <seg>details.statusScheme = [&lt;s3&gt;"bronze"&lt;/s3&gt;, &lt;s4&gt;"silver"&lt;/s4&gt;, &lt;s5&gt;"gold"&lt;/s5&gt;, &lt;s6&gt;"platinum"&lt;/s6&gt;]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>details.useTarget &lt;s7&gt;"org.slf4j:log4j-over-slf4j:1.7.5"&lt;/s7&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T090645Z" creationid="95" creationdate="20151115T090645Z">
        <seg>details.useTarget &lt;s7&gt;"org.slf4j:log4j-over-slf4j:1.7.5"&lt;/s7&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>details.useTarget group: details.requested.group, name: &lt;s3&gt;'groovy'&lt;/s3&gt;, version: details.requested.version</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T090642Z" creationid="95" creationdate="20151115T090642Z">
        <seg>details.useTarget group: details.requested.group, name: &lt;s3&gt;'groovy'&lt;/s3&gt;, version: details.requested.version</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>details.useVersion &lt;s2&gt;'1.4'&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T061534Z" creationid="95" creationdate="20151115T061534Z">
        <seg>details.useVersion &lt;s2&gt;'1.4'&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>details.useVersion &lt;s5&gt;'1.2.1'&lt;/s5&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T085849Z" creationid="95" creationdate="20151115T085849Z">
        <seg>details.useVersion &lt;s5&gt;'1.2.1'&lt;/s5&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>details.useVersion version</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T070654Z" creationid="95" creationdate="20151115T070654Z">
        <seg>details.useVersion version</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>details.value = baseValue</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T145617Z" creationid="msdx" creationdate="20150428T145617Z">
        <seg>details.value = baseValue</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dir</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083441Z" creationid="msdx" creationdate="20150428T083441Z">
        <seg>dir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dirs &lt;s0&gt;'lib'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150910T012111Z" creationid="haohang" creationdate="20150910T012111Z">
        <seg>dirs &lt;s0&gt;'lib'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dirs &lt;s1&gt;"repo"&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151226T092022Z" creationid="95" creationdate="20151226T092022Z">
        <seg>dirs &lt;s1&gt;"repo"&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dirs &lt;s1&gt;'lib'&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T133454Z" creationid="95" creationdate="20151006T133454Z">
        <seg>dirs &lt;s1&gt;'lib'&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dirs &lt;s1&gt;'lib1'&lt;/s1&gt;, &lt;s2&gt;'lib2'&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150910T012123Z" creationid="haohang" creationdate="20150910T012123Z">
        <seg>dirs &lt;s1&gt;'lib1'&lt;/s1&gt;, &lt;s2&gt;'lib2'&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dirs &lt;s2&gt;'lib'&lt;/s2&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T133506Z" creationid="95" creationdate="20151006T133506Z">
        <seg>dirs &lt;s2&gt;'lib'&lt;/s2&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>displayName = &lt;s18&gt;"Custom Ear"&lt;/s18&gt;  &lt;s19&gt;// defaults to project.name&lt;/s19&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T142901Z" creationid="msdx" creationdate="20150504T142901Z">
        <seg>displayName = &lt;s18&gt;"Custom Ear"&lt;/s18&gt;  &lt;s19&gt;// defaults to project.name&lt;/s19&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>distTar</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150701T030852Z" creationid="haohang" creationdate="20150701T030852Z">
        <seg>distTar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>distZip</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150701T030819Z" creationid="haohang" creationdate="20150701T030819Z">
        <seg>distZip</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>distribution</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104800Z" creationid="msdx" creationdate="20150428T104800Z">
        <seg>distribution</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>distribution &lt;s3&gt;'repo'&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160104T152819Z" creationid="95" creationdate="20160104T152819Z">
        <seg>distribution &lt;s3&gt;'repo'&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>distribution_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104800Z" creationid="msdx" creationdate="20150428T104800Z">
        <seg>distribution_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>distributions</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083242Z" creationid="msdx" creationdate="20150428T083242Z">
        <seg>distributions</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>distributions {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150705T084608Z" creationid="haohang" creationdate="20150705T084608Z">
        <seg>distributions {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>distsDir</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083242Z" creationid="msdx" creationdate="20150428T083242Z">
        <seg>distsDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>distsDirName</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083241Z" creationid="msdx" creationdate="20150428T083241Z">
        <seg>distsDirName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>doFirst {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T150936Z" creationid="msdx" creationdate="20141116T150936Z">
        <seg>doFirst {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>doLast {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T060323Z" creationid="msdx" creationdate="20141111T060323Z">
        <seg>doLast {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>doLast {println &lt;s1&gt;"- I depend on water"&lt;/s1&gt;}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160530T144429Z" creationid="95" creationdate="20160530T144429Z">
        <seg>doLast {println &lt;s1&gt;"- I depend on water"&lt;/s1&gt;}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>doLast{</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T134202Z" creationid="msdx" creationdate="20141113T134202Z">
        <seg>doLast{</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>docs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083243Z" creationid="msdx" creationdate="20150428T083243Z">
        <seg>docs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>docs.css</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T033829Z" creationid="msdx" creationdate="20141030T033829Z">
        <seg>docs.css</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>docs.mkdirs()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150703T100425Z" creationid="haohang" creationdate="20150703T100425Z">
        <seg>docs.mkdirs()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>docsDir</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083243Z" creationid="msdx" creationdate="20150428T083243Z">
        <seg>docsDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>docsDirName</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083242Z" creationid="msdx" creationdate="20150428T083242Z">
        <seg>docsDirName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>driverClassName = &lt;s2&gt;"com.mysql.jdbc.Driver"&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150510T143651Z" creationid="msdx" creationdate="20150510T143651Z">
        <seg>driverClassName = &lt;s2&gt;"com.mysql.jdbc.Driver"&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>driverClassName = &lt;s3&gt;"com.mysql.jdbc.Driver"&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T091239Z" creationid="msdx" creationdate="20150512T091239Z">
        <seg>driverClassName = &lt;s2&gt;"com.mysql.jdbc.Driver"&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dumpOnExit</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T132321Z" creationid="msdx" creationdate="20150506T132321Z">
        <seg>dumpOnExit</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>eachComponent { ComponentMetadataDetails details -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T041819Z" creationid="95" creationdate="20151129T041819Z">
        <seg>eachComponent { ComponentMetadataDetails details -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>eachEntry { details -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T145617Z" creationid="msdx" creationdate="20150428T145617Z">
        <seg>eachEntry { details -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ear</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104756Z" creationid="msdx" creationdate="20150428T104756Z">
        <seg>ear</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ear_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104754Z" creationid="msdx" creationdate="20150428T104754Z">
        <seg>ear_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ear_plugin.html#N1310D</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T132233Z" creationid="msdx" creationdate="20150509T132233Z">
        <seg>ear_plugin.html#N1310D</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ear_plugin.html#N1311C</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T132237Z" creationid="msdx" creationdate="20150509T132237Z">
        <seg>ear_plugin.html#N1311C</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ear_plugin.html#N1315C</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T132240Z" creationid="msdx" creationdate="20150509T132240Z">
        <seg>ear_plugin.html#N1315C</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ear_plugin.html#N13176</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T132243Z" creationid="msdx" creationdate="20150509T132243Z">
        <seg>ear_plugin.html#N13176</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ear_plugin.html#N1318D</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T132245Z" creationid="msdx" creationdate="20150509T132245Z">
        <seg>ear_plugin.html#N1318D</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ear_plugin.html#sec:customizing</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T084855Z" creationid="msdx" creationdate="20150513T084855Z">
        <seg>ear_plugin.html#sec:customizing</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ear_plugin.html#sec:default_settings</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T132248Z" creationid="msdx" creationdate="20150509T132248Z">
        <seg>ear_plugin.html#sec:default_settings</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ear_plugin.html#sec:using_custom_app_xml</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150514T151805Z" creationid="msdx" creationdate="20150514T151805Z">
        <seg>ear_plugin.html#sec:using_custom_app_xml</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>earlib group: &lt;s5&gt;'log4j'&lt;/s5&gt;, name: &lt;s6&gt;'log4j'&lt;/s6&gt;, version: &lt;s7&gt;'1.2.15'&lt;/s7&gt;, ext: &lt;s8&gt;'jar'&lt;/s8&gt;
}

ear {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T142851Z" creationid="msdx" creationdate="20150504T142851Z">
        <seg>earlib group: &lt;s5&gt;'log4j'&lt;/s5&gt;, name: &lt;s6&gt;'log4j'&lt;/s6&gt;, version: &lt;s7&gt;'1.2.15'&lt;/s7&gt;, ext: &lt;s8&gt;'jar'&lt;/s8&gt;
}

ear {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>eclipse</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104806Z" creationid="msdx" creationdate="20150428T104806Z">
        <seg>eclipse</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>eclipse-wtp</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104807Z" creationid="msdx" creationdate="20150428T104807Z">
        <seg>eclipse-wtp</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>eclipse.classpath</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T022415Z" creationid="haohang" creationdate="20150624T022415Z">
        <seg>eclipse.classpath</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>eclipse.classpath.file {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T064926Z" creationid="haohang" creationdate="20150625T064926Z">
        <seg>eclipse.classpath.file {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>eclipse.jdt</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T022429Z" creationid="haohang" creationdate="20150624T022429Z">
        <seg>eclipse.jdt</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>eclipse.project</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T022404Z" creationid="haohang" creationdate="20150624T022404Z">
        <seg>eclipse.project</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>eclipse.project.file.beforeMerged { project -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T065750Z" creationid="haohang" creationdate="20150625T065750Z">
        <seg>eclipse.project.file.beforeMerged { project -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>eclipse.wtp.component</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T022456Z" creationid="haohang" creationdate="20150624T022456Z">
        <seg>eclipse.wtp.component</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>eclipse.wtp.facet</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T022526Z" creationid="haohang" creationdate="20150624T022526Z">
        <seg>eclipse.wtp.facet</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>eclipseClasspath</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T004447Z" creationid="haohang" creationdate="20150603T004447Z">
        <seg>eclipseClasspath</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>eclipseJdt</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T004457Z" creationid="haohang" creationdate="20150603T004457Z">
        <seg>eclipseJdt</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>eclipseProject</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T004430Z" creationid="haohang" creationdate="20150603T004430Z">
        <seg>eclipseProject</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>eclipseWtpComponent</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T004508Z" creationid="haohang" creationdate="20150603T004508Z">
        <seg>eclipseWtpComponent</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>eclipseWtpFacet</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150603T004538Z" creationid="haohang" creationdate="20150603T004538Z">
        <seg>eclipseWtpFacet</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>eclipse_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104806Z" creationid="msdx" creationdate="20150428T104806Z">
        <seg>eclipse_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>eclipse_plugin.html#sec:complete-overwrite</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150624T105547Z" creationid="haohang" creationdate="20150624T105547Z">
        <seg>eclipse_plugin.html#sec:complete-overwrite</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>emailNotification = &lt;s2&gt;"build@master.org"&lt;/s2&gt;
}

sourceSets.all { ext.purpose = null }

sourceSets {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T050711Z" creationid="msdx" creationdate="20141108T050711Z">
        <seg>emailNotification = &lt;s2&gt;"build@master.org"&lt;/s2&gt;
}

sourceSets.all { ext.purpose = null }

sourceSets {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>embedding.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141117T142230Z" creationid="msdx" creationdate="20141117T142230Z">
        <seg>embedding.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>enabled</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T132306Z" creationid="msdx" creationdate="20150506T132306Z">
        <seg>enabled</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>endIndex = &lt;s3&gt;5&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T152808Z" creationid="msdx" creationdate="20141109T152808Z">
        <seg>endIndex = &lt;s3&gt;5&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>english</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T081114Z" creationid="haohang" creationdate="20160408T081114Z">
        <seg>english</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>evaluationDependsOn(&lt;s0&gt;':producer'&lt;/s0&gt;)

message = rootProject.producerMessage

task consume &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T074959Z" creationid="haohang" creationdate="20160718T074959Z">
        <seg>evaluationDependsOn(&lt;s0&gt;':producer'&lt;/s0&gt;)

message = rootProject.producerMessage

task consume &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>exclude &lt;s1&gt;'**/*staging*'&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T143852Z" creationid="msdx" creationdate="20141113T143852Z">
        <seg>exclude &lt;s1&gt;'**/*staging*'&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>exclude module: &lt;s4&gt;'shared'&lt;/s4&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T094945Z" creationid="haohang" creationdate="20150801T094945Z">
        <seg>exclude module: &lt;s4&gt;'shared'&lt;/s4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>exclude { details -&gt; details.file.name.endsWith(&lt;s4&gt;'.html'&lt;/s4&gt;) &amp;&amp; details.file.text.contains(&lt;s5&gt;'staging'&lt;/s5&gt;) }
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T131124Z" creationid="msdx" creationdate="20141113T131124Z">
        <seg>exclude { details -&gt; details.file.name.endsWith(&lt;s4&gt;'.html'&lt;/s4&gt;) &amp;&amp; details.file.text.contains(&lt;s5&gt;'staging'&lt;/s5&gt;) }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>exclude(name: &lt;s3&gt;'**.java'&lt;/s3&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141115T162756Z" creationid="msdx" creationdate="20141115T162756Z">
        <seg>exclude(name: &lt;s3&gt;'**.java'&lt;/s3&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>excludeCategories &lt;s1&gt;'org.gradle.junit.CategoryB'&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T082903Z" creationid="msdx" creationdate="20150428T082903Z">
        <seg>excludeCategories &lt;s1&gt;'org.gradle.junit.CategoryB'&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>excludeClassLoaders</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T132314Z" creationid="msdx" creationdate="20150506T132314Z">
        <seg>excludeClassLoaders</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>excludeGroups &lt;s0&gt;'integrationTests'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083148Z" creationid="msdx" creationdate="20150428T083148Z">
        <seg>excludeGroups &lt;s0&gt;'integrationTests'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>excludes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T132309Z" creationid="msdx" creationdate="20150506T132309Z">
        <seg>excludes</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>executables {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160219T065425Z" creationid="haohang" creationdate="20160219T065425Z">
        <seg>executables {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>executionData run</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T135604Z" creationid="msdx" creationdate="20150506T135604Z">
        <seg>executionData run</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>expand(copyright: &lt;s5&gt;'2009'&lt;/s5&gt;, version: &lt;s6&gt;'2.3.1'&lt;/s6&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T140844Z" creationid="msdx" creationdate="20141113T140844Z">
        <seg>expand(copyright: &lt;s5&gt;'2009'&lt;/s5&gt;, version: &lt;s6&gt;'2.3.1'&lt;/s6&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>expand(project.properties)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T140845Z" creationid="msdx" creationdate="20141113T140845Z">
        <seg>expand(project.properties)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>exportedHeaders {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160225T090554Z" creationid="haohang" creationdate="20160225T090554Z">
        <seg>exportedHeaders {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ext.arctic = false</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160530T144427Z" creationid="95" creationdate="20160530T144427Z">
        <seg>ext.arctic = false</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ext.arctic = true
hello &lt;&lt; { println &lt;s0&gt;"- I'm the largest animal that has ever lived on this planet."&lt;/s0&gt; }

task distanceToIceberg &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160715T075946Z" creationid="haohang" creationdate="20160715T075946Z">
        <seg>ext.arctic = true
hello &lt;&lt; { println &lt;s0&gt;"- I'm the largest animal that has ever lived on this planet."&lt;/s0&gt; }

task distanceToIceberg &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ext.arctic = true
hello &lt;&lt; { println &lt;s0&gt;"- The weight of my species in summer is twice as heavy as all human beings."&lt;/s0&gt; }

task distanceToIceberg &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160715T075951Z" creationid="haohang" creationdate="20160715T075951Z">
        <seg>ext.arctic = true
hello &lt;&lt; { println &lt;s0&gt;"- The weight of my species in summer is twice as heavy as all human beings."&lt;/s0&gt; }

task distanceToIceberg &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ext.arctic = true
hello.doLast {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160530T144425Z" creationid="95" creationdate="20160530T144425Z">
        <seg>ext.arctic = true
hello.doLast {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ext.arctic = true
hello.doLast { println &lt;s0&gt;"- I'm the largest animal that has ever lived on this planet."&lt;/s0&gt; }</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160530T144412Z" creationid="95" creationdate="20160530T144412Z">
        <seg>ext.arctic = true
hello.doLast { println &lt;s0&gt;"- I'm the largest animal that has ever lived on this planet."&lt;/s0&gt; }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ext.destDir = &lt;s1&gt;new&lt;/s1&gt; File(buildDir, &lt;s2&gt;'generated'&lt;/s2&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T060322Z" creationid="msdx" creationdate="20141111T060322Z">
        <seg>ext.destDir = &lt;s1&gt;new&lt;/s1&gt; File(buildDir, &lt;s2&gt;'generated'&lt;/s2&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ext.sharedManifest = manifest {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T145342Z" creationid="msdx" creationdate="20150428T145342Z">
        <seg>ext.sharedManifest = manifest {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ext.srcFile = file(&lt;s0&gt;'mountains.xml'&lt;/s0&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T060321Z" creationid="msdx" creationdate="20141111T060321Z">
        <seg>ext.srcFile = file(&lt;s0&gt;'mountains.xml'&lt;/s0&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>extendsFrom compile</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T075936Z" creationid="haohang" creationdate="20150722T075936Z">
        <seg>extendsFrom compile</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>extension</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T160418Z" creationid="msdx" creationdate="20141113T160418Z">
        <seg>extension</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>failing</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T151335Z" creationid="95" creationdate="20160504T151335Z">
        <seg>failing</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>false</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T132324Z" creationid="msdx" creationdate="20150506T132324Z">
        <seg>false</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>feature_lifecycle.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T124114Z" creationid="msdx" creationdate="20141110T124114Z">
        <seg>feature_lifecycle.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>feature_lifecycle.html#sec:incubating_state</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T065727Z" creationid="msdx" creationdate="20141111T065727Z">
        <seg>feature_lifecycle.html#sec:incubating_state</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>file</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T141839Z" creationid="95" creationdate="20160105T141839Z">
        <seg>file</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>file(&lt;s12&gt;'src'&lt;/s12&gt;).listFiles().findAll {it.name.endsWith(&lt;s13&gt;'.zip'&lt;/s13&gt;)}.collect { zipTree(it) }</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T123340Z" creationid="msdx" creationdate="20141113T123340Z">
        <seg>file(&lt;s12&gt;'src'&lt;/s12&gt;).listFiles().findAll {it.name.endsWith(&lt;s13&gt;'.zip'&lt;/s13&gt;)}.collect { zipTree(it) }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>fileName.replace(&lt;s3&gt;'-staging-'&lt;/s3&gt;, &lt;s4&gt;''&lt;/s4&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T140713Z" creationid="msdx" creationdate="20141113T140713Z">
        <seg>fileName.replace(&lt;s3&gt;'-staging-'&lt;/s3&gt;, &lt;s4&gt;''&lt;/s4&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>fileset(dir: &lt;s0&gt;'libs'&lt;/s0&gt;, includes: &lt;s1&gt;'*.jar'&lt;/s1&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T011227Z" creationid="msdx" creationdate="20141116T011227Z">
        <seg>fileset(dir: &lt;s0&gt;'libs'&lt;/s0&gt;, includes: &lt;s1&gt;'*.jar'&lt;/s1&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>fileset(dir: &lt;s1&gt;'libs'&lt;/s1&gt;, includes: &lt;s2&gt;'*.jar'&lt;/s2&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T060207Z" creationid="msdx" creationdate="20141116T060207Z">
        <seg>fileset(dir: &lt;s1&gt;'libs'&lt;/s1&gt;, includes: &lt;s2&gt;'*.jar'&lt;/s2&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>fileset(dir: &lt;s1&gt;'src'&lt;/s1&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141115T162754Z" creationid="msdx" creationdate="20141115T162754Z">
        <seg>fileset(dir: &lt;s1&gt;'src'&lt;/s1&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>fileset(dir: &lt;s4&gt;'src'&lt;/s4&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T060208Z" creationid="msdx" creationdate="20141116T060208Z">
        <seg>fileset(dir: &lt;s4&gt;'src'&lt;/s4&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>fileset(dir: &lt;s7&gt;'src'&lt;/s7&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T060635Z" creationid="msdx" creationdate="20141116T060635Z">
        <seg>fileset(dir: &lt;s7&gt;'src'&lt;/s7&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>filter {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083451Z" creationid="msdx" creationdate="20150428T083451Z">
        <seg>filter {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>filter { String line -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T140854Z" creationid="msdx" creationdate="20141113T140854Z">
        <seg>filter { String line -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>filter(FixCrLfFilter)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T140847Z" creationid="msdx" creationdate="20141113T140847Z">
        <seg>filter(FixCrLfFilter)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>filter(ReplaceTokens, tokens: [copyright: &lt;s8&gt;'2009'&lt;/s8&gt;, version: &lt;s9&gt;'2.3.1'&lt;/s9&gt;])</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T140852Z" creationid="msdx" creationdate="20141113T140852Z">
        <seg>filter(ReplaceTokens, tokens: [copyright: &lt;s8&gt;'2009'&lt;/s8&gt;, version: &lt;s9&gt;'2.3.1'&lt;/s9&gt;])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>findbugs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104850Z" creationid="msdx" creationdate="20150428T104850Z">
        <seg>findbugs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>findbugs&lt;e0&gt;&lt;c1&gt;SourceSet&lt;/c1&gt;&lt;/e0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T133713Z" creationid="msdx" creationdate="20150505T133713Z">
        <seg>findbugs&lt;e0&gt;&lt;c1&gt;SourceSet&lt;/c1&gt;&lt;/e0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>findbugsMain</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T133646Z" creationid="msdx" creationdate="20150505T133646Z">
        <seg>findbugsMain</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>findbugsTest</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T133701Z" creationid="msdx" creationdate="20150505T133701Z">
        <seg>findbugsTest</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>findbugs_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104850Z" creationid="msdx" creationdate="20150428T104850Z">
        <seg>findbugs_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>flatDir {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150910T012111Z" creationid="haohang" creationdate="20150910T012111Z">
        <seg>flatDir {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>flatDir { dirs &lt;s0&gt;"lib"&lt;/s0&gt; }</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T093817Z" creationid="msdx" creationdate="20150503T093817Z">
        <seg>flatDir { dirs &lt;s0&gt;"lib"&lt;/s0&gt; }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>flatDir { dirs &lt;s0&gt;'lib'&lt;/s0&gt; }
}

dependencies {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T080910Z" creationid="msdx" creationdate="20150429T080910Z">
        <seg>flatDir { dirs &lt;s0&gt;'lib'&lt;/s0&gt; }
}

dependencies {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>flavors {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T081113Z" creationid="haohang" creationdate="20160408T081113Z">
        <seg>flavors {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>forceAnalysis</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T053936Z" creationid="msdx" creationdate="20150513T053936Z">
        <seg>forceAnalysis</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>formatter(type: &lt;s5&gt;'text'&lt;/s5&gt;, toConsole: &lt;s6&gt;'true'&lt;/s6&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T060634Z" creationid="msdx" creationdate="20141116T060634Z">
        <seg>formatter(type: &lt;s5&gt;'text'&lt;/s5&gt;, toConsole: &lt;s6&gt;'true'&lt;/s6&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>french</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T081115Z" creationid="haohang" creationdate="20160408T081115Z">
        <seg>french</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from &lt;c0&gt;gradle.properties&lt;/c0&gt; located in &lt;c1&gt;gradle user home&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141119T153444Z" creationid="msdx" creationdate="20141119T153421Z">
        <seg>位于&lt;c1&gt;gradle 用户主目录&lt;/c1&gt;的&lt;c0&gt;gradle.properties&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from &lt;c0&gt;gradle.properties&lt;/c0&gt; located in project build dir.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141119T153441Z" creationid="msdx" creationdate="20141119T153324Z">
        <seg>位于项目构建目录的&lt;c0&gt;gradle.properties&lt;/c0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from &lt;s0&gt;'resources'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T092538Z" creationid="msdx" creationdate="20141110T092538Z">
        <seg>from &lt;s0&gt;'resources'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from &lt;s0&gt;'src/main/webapp'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T124407Z" creationid="msdx" creationdate="20141113T124407Z">
        <seg>from &lt;s0&gt;'src/main/webapp'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from &lt;s11&gt;'src/rootContent'&lt;/s11&gt; &lt;s12&gt;// adds a file-set to the root of the archive&lt;/s12&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T093820Z" creationid="msdx" creationdate="20150503T093820Z">
        <seg>from &lt;s11&gt;'src/rootContent'&lt;/s11&gt; &lt;s12&gt;// adds a file-set to the root of the archive&lt;/s12&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from &lt;s1&gt;"source"&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T045151Z" creationid="msdx" creationdate="20141108T045151Z">
        <seg>from &lt;s1&gt;"source"&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from &lt;s1&gt;"src/stuff"&lt;/s1&gt;
}

signing {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160109T073101Z" creationid="95" creationdate="20160109T073101Z">
        <seg>from &lt;s1&gt;"src/stuff"&lt;/s1&gt;
}

signing {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from &lt;s1&gt;'resources'&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T015509Z" creationid="msdx" creationdate="20141111T015509Z">
        <seg>from &lt;s1&gt;'resources'&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from &lt;s1&gt;'src/dist'&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T145755Z" creationid="msdx" creationdate="20141113T145755Z">
        <seg>from &lt;s1&gt;'src/dist'&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from &lt;s1&gt;'src/main/webapp'&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T130949Z" creationid="msdx" creationdate="20141113T130949Z">
        <seg>from &lt;s1&gt;'src/main/webapp'&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from &lt;s2&gt;'somedir'&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T155546Z" creationid="msdx" creationdate="20141113T155546Z">
        <seg>from &lt;s2&gt;'somedir'&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from &lt;s2&gt;'somedir'&lt;/s2&gt;
}

println myZip.archiveName
println relativePath(myZip.destinationDir)
println relativePath(myZip.archivePath)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T154735Z" creationid="msdx" creationdate="20141113T154735Z">
        <seg>from &lt;s2&gt;'somedir'&lt;/s2&gt;
}

println myZip.archiveName
println relativePath(myZip.destinationDir)
println relativePath(myZip.archivePath)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from &lt;s2&gt;'src/main/webapp'&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T140843Z" creationid="msdx" creationdate="20141113T140843Z">
        <seg>from &lt;s2&gt;'src/main/webapp'&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from &lt;s3&gt;'src/staging/index.html'&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T130950Z" creationid="msdx" creationdate="20141113T130950Z">
        <seg>from &lt;s3&gt;'src/staging/index.html'&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from &lt;s5&gt;'somedir'&lt;/s5&gt;
}

println myZip.archiveName</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T155803Z" creationid="msdx" creationdate="20141113T155803Z">
        <seg>from &lt;s5&gt;'somedir'&lt;/s5&gt;
}

println myZip.archiveName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from archiveTask.archivePath</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160722T091251Z" creationid="haohang" creationdate="20160722T091251Z">
        <seg>from archiveTask.archivePath</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from configurations.runtime</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T143854Z" creationid="msdx" creationdate="20141113T143854Z">
        <seg>from configurations.runtime</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from copyTask</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T130952Z" creationid="msdx" creationdate="20141113T130952Z">
        <seg>from copyTask</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from copyTaskWithPatterns.outputs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T130953Z" creationid="msdx" creationdate="20141113T130953Z">
        <seg>from copyTaskWithPatterns.outputs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from sharedManifest</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T145343Z" creationid="msdx" creationdate="20150428T145343Z">
        <seg>from sharedManifest</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from sharedManifest, &lt;s1&gt;'src/config/basemanifest.txt'&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T145616Z" creationid="msdx" creationdate="20150428T145616Z">
        <seg>from sharedManifest, &lt;s1&gt;'src/config/basemanifest.txt'&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from sourceSets.intTest.output
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083429Z" creationid="msdx" creationdate="20150428T083429Z">
        <seg>from sourceSets.intTest.output
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from sourceSets.main.output</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T084526Z" creationid="haohang" creationdate="20160726T084526Z">
        <seg>from sourceSets.main.output</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from system properties, e.g. when &lt;c0&gt;-Dsome.property&lt;/c0&gt; is used in the command line.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141119T153508Z" creationid="msdx" creationdate="20141119T153436Z">
        <seg>系统属性，例如当在命令行中使用 &lt;c0&gt;-Dsome.property&lt;/c0&gt; 时。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from zipTree(&lt;s7&gt;'src/main/assets.zip'&lt;/s7&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T130956Z" creationid="msdx" creationdate="20141113T130956Z">
        <seg>from zipTree(&lt;s7&gt;'src/main/assets.zip'&lt;/s7&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from { &lt;s1&gt;'src/dist'&lt;/s1&gt; }</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T070505Z" creationid="haohang" creationdate="20150707T070505Z">
        <seg>from { &lt;s1&gt;'src/dist'&lt;/s1&gt; }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from { &lt;s2&gt;'src/readme'&lt;/s2&gt; }</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150701T032509Z" creationid="haohang" creationdate="20150701T032509Z">
        <seg>from { &lt;s2&gt;'src/readme'&lt;/s2&gt; }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from(&lt;s2&gt;'src/config/javabasemanifest.txt'&lt;/s2&gt;, &lt;s3&gt;'src/config/libbasemanifest.txt'&lt;/s3&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T145616Z" creationid="msdx" creationdate="20150428T145616Z">
        <seg>from(&lt;s2&gt;'src/config/javabasemanifest.txt'&lt;/s2&gt;, &lt;s3&gt;'src/config/libbasemanifest.txt'&lt;/s3&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from(&lt;s2&gt;'src/dist'&lt;/s2&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T143853Z" creationid="msdx" creationdate="20141113T143853Z">
        <seg>from(&lt;s2&gt;'src/dist'&lt;/s2&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from(file(&lt;s1&gt;'srcDir'&lt;/s1&gt;))</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T021259Z" creationid="msdx" creationdate="20141110T021259Z">
        <seg>from(file(&lt;s1&gt;'srcDir'&lt;/s1&gt;))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from(file(&lt;s3&gt;'srcDir'&lt;/s3&gt;))</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T022747Z" creationid="msdx" creationdate="20141110T022747Z">
        <seg>from(file(&lt;s3&gt;'srcDir'&lt;/s3&gt;))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ftp</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T141833Z" creationid="95" creationdate="20160105T141833Z">
        <seg>ftp</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>gcc(Gcc) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T091224Z" creationid="haohang" creationdate="20160408T091224Z">
        <seg>gcc(Gcc) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>generate&lt;e0&gt;&lt;c1&gt;SourceSet&lt;/c1&gt;&lt;/e0&gt;GrammarSource</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T095026Z" creationid="haohang" creationdate="20150625T095026Z">
        <seg>generate&lt;e0&gt;&lt;c1&gt;SourceSet&lt;/c1&gt;&lt;/e0&gt;GrammarSource</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>generateGrammarSource</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T094928Z" creationid="haohang" creationdate="20150625T094928Z">
        <seg>generateGrammarSource</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>generateTestGrammarSource</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T095016Z" creationid="haohang" creationdate="20150625T095016Z">
        <seg>generateTestGrammarSource</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>gradle --gui</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T145801Z" creationid="msdx" creationdate="20141105T145801Z">
        <seg>gradle --gui</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>gradle -DintegTest.single=*IntegrationTest integTest</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083459Z" creationid="msdx" creationdate="20150428T083459Z">
        <seg>gradle -DintegTest.single=*IntegrationTest integTest</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>gradle -DintegTest.single=c/d/ :proj1:integTest</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083500Z" creationid="msdx" creationdate="20150428T083500Z">
        <seg>gradle -DintegTest.single=c/d/ :proj1:integTest</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>gradle -Dtest.single=:proj1:test:Customer build</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083500Z" creationid="msdx" creationdate="20150428T083500Z">
        <seg>gradle -Dtest.single=:proj1:test:Customer build</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>gradle -Dtest.single=ThisUniquelyNamedTest test</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083459Z" creationid="msdx" creationdate="20150428T083459Z">
        <seg>gradle -Dtest.single=ThisUniquelyNamedTest test</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>gradle -Dtest.single=a/b/ test</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083459Z" creationid="msdx" creationdate="20150428T083459Z">
        <seg>gradle -Dtest.single=a/b/ test</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>gradle someTestTask --tests *UiTest someOtherTestTask --tests *WebTest*ui</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083458Z" creationid="msdx" creationdate="20150428T083458Z">
        <seg>gradle someTestTask --tests *UiTest someOtherTestTask --tests *WebTest*ui</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>gradle sonarAnalyze --server.url=http://sonar.mycompany.com --database.password=myPassword --verbose</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T053953Z" creationid="msdx" creationdate="20150513T053953Z">
        <seg>gradle sonarAnalyze --server.url=http://sonar.mycompany.com --database.password=myPassword --verbose</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>gradle sonarRunner -Dsonar.host.url=http://sonar.mycompany.com -Dsonar.jdbc.password=myPassword -Dsonar.verbose=true</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150525T233823Z" creationid="haohang" creationdate="20150525T233823Z">
        <seg>gradle sonarRunner -Dsonar.host.url=http://sonar.mycompany.com -Dsonar.jdbc.password=myPassword -Dsonar.verbose=true</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>gradle test --tests *IntegTest</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083458Z" creationid="msdx" creationdate="20150428T083458Z">
        <seg>gradle test --tests *IntegTest</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>gradle test --tests *IntegTest*ui*</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083458Z" creationid="msdx" creationdate="20150428T083458Z">
        <seg>gradle test --tests *IntegTest*ui*</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>gradle test --tests *SomeSpecificTest</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083457Z" creationid="msdx" creationdate="20150428T083457Z">
        <seg>gradle test --tests *SomeSpecificTest</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>gradle test --tests *SomeTest.someSpecificFeature</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083457Z" creationid="msdx" creationdate="20150428T083457Z">
        <seg>gradle test --tests *SomeTest.someSpecificFeature</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>gradle test --tests all.in.specific.package*</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083457Z" creationid="msdx" creationdate="20150428T083457Z">
        <seg>gradle test --tests all.in.specific.package*</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>gradle test --tests org.gradle.SomeTest.someSpecificFeature</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083456Z" creationid="msdx" creationdate="20150428T083456Z">
        <seg>gradle test --tests org.gradle.SomeTest.someSpecificFeature</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>gradle.afterProject {project, projectState -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T132215Z" creationid="95" creationdate="20160521T132215Z">
        <seg>gradle.afterProject {project, projectState -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>gradle.properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T151055Z" creationid="msdx" creationdate="20141109T151055Z">
        <seg>gradle.properties</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>gradlePropertiesProp=gradlePropertiesValue
systemProjectProp=shouldBeOverWrittenBySystemProp
envProjectProp=shouldBeOverWrittenByEnvProp
systemProp.system=systemValue</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T151057Z" creationid="msdx" creationdate="20141109T151057Z">
        <seg>gradlePropertiesProp=gradlePropertiesValue
systemProjectProp=shouldBeOverWrittenBySystemProp
envProjectProp=shouldBeOverWrittenByEnvProp
systemProp.system=systemValue</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>gradle_command_line.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141118T095702Z" creationid="msdx" creationdate="20141118T095702Z">
        <seg>gradle_command_line.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>gradle_daemon.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T063502Z" creationid="msdx" creationdate="20141116T063502Z">
        <seg>gradle_daemon.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>gradle_daemon.html#daemon_usage_and_troubleshooting</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150508T131755Z" creationid="msdx" creationdate="20150508T131755Z">
        <seg>gradle_daemon.html#daemon_usage_and_troubleshooting</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>gradle_daemon.html#enter_the_daemon</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150508T131738Z" creationid="msdx" creationdate="20150508T131738Z">
        <seg>gradle_daemon.html#enter_the_daemon</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>gradle_daemon.html#reusing_daemons</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150508T131745Z" creationid="msdx" creationdate="20150508T131745Z">
        <seg>gradle_daemon.html#reusing_daemons</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>gradle_daemon.html#sec:daemon_properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150508T131801Z" creationid="msdx" creationdate="20150508T131801Z">
        <seg>gradle_daemon.html#sec:daemon_properties</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>gradle_wrapper.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T095643Z" creationid="msdx" creationdate="20150503T095643Z">
        <seg>gradle_wrapper.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>greeting = &lt;s2&gt;'greetings from GreetingTask'&lt;/s2&gt;
}

&lt;s3&gt;class&lt;/s3&gt; GreetingTask &lt;s4&gt;extends&lt;/s4&gt; DefaultTask {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T151532Z" creationid="95" creationdate="20160814T151532Z">
        <seg>greeting = &lt;s2&gt;'greetings from GreetingTask'&lt;/s2&gt;
}

&lt;s3&gt;class&lt;/s3&gt; GreetingTask &lt;s4&gt;extends&lt;/s4&gt; DefaultTask {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>groovy</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141126T121042Z" creationid="msdx" creationdate="20141126T121042Z">
        <seg>groovy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>groovy {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T075353Z" creationid="msdx" creationdate="20150429T075353Z">
        <seg>groovy {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>groovy-base</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104804Z" creationid="msdx" creationdate="20150428T104804Z">
        <seg>groovy-base</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>groovy.srcDirs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T093152Z" creationid="msdx" creationdate="20150429T093152Z">
        <seg>groovy.srcDirs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>groovyClasspath</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T094545Z" creationid="msdx" creationdate="20150429T094545Z">
        <seg>groovyClasspath</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>groovy_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T070002Z" creationid="msdx" creationdate="20141030T070002Z">
        <seg>groovy_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>groovy_plugin.html#N129EF</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131844Z" creationid="msdx" creationdate="20150509T131844Z">
        <seg>groovy_plugin.html#N129EF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>groovy_plugin.html#N129FE</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131846Z" creationid="msdx" creationdate="20150509T131846Z">
        <seg>groovy_plugin.html#N129EF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>groovy_plugin.html#N12A93</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131847Z" creationid="msdx" creationdate="20150509T131847Z">
        <seg>groovy_plugin.html#N129EF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>groovy_plugin.html#N12B36</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131853Z" creationid="msdx" creationdate="20150509T131853Z">
        <seg>groovy_plugin.html#N12B36</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>groovy_plugin.html#N12B7A</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131857Z" creationid="msdx" creationdate="20150509T131857Z">
        <seg>groovy_plugin.html#N12B7A</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>groovy_plugin.html#N12BB3</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131909Z" creationid="msdx" creationdate="20150509T131909Z">
        <seg>groovy_plugin.html#N12BB3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>groovy_plugin.html#N12BB8</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131924Z" creationid="msdx" creationdate="20150509T131924Z">
        <seg>groovy_plugin.html#N12BB8</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>groovy_plugin.html#groovylayout</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T071811Z" creationid="msdx" creationdate="20150429T071811Z">
        <seg>groovy_plugin.html#groovylayout</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>groovy_plugin.html#sec:groovyCompile</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131937Z" creationid="msdx" creationdate="20150509T131937Z">
        <seg>groovy_plugin.html#sec:groovyCompile</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>groovydoc</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T071454Z" creationid="msdx" creationdate="20150429T071454Z">
        <seg>groovydoc</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>group</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T044426Z" creationid="msdx" creationdate="20141108T044426Z">
        <seg>group</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>group = &lt;s1&gt;'org.gradle.sample'&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160722T091241Z" creationid="haohang" creationdate="20160722T091241Z">
        <seg>group = &lt;s1&gt;'org.gradle.sample'&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>groupId</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T144034Z" creationid="95" creationdate="20160105T144034Z">
        <seg>groupId</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>growl</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T065613Z" creationid="haohang" creationdate="20150628T065613Z">
        <seg>growl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>hasTests = true</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T125520Z" creationid="95" creationdate="20160521T125520Z">
        <seg>hasTests = true</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>headers.srcDir &lt;s2&gt;"lib/cunit/2.1-2/include"&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T151338Z" creationid="95" creationdate="20160504T151338Z">
        <seg>headers.srcDir &lt;s2&gt;"lib/cunit/2.1-2/include"&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>hello &lt;&lt; {println &lt;s1&gt;"- I depend on water"&lt;/s1&gt;}
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160527T162340Z" creationid="95" creationdate="20160527T162340Z">
        <seg>hello &lt;&lt; {println &lt;s1&gt;"- I depend on water"&lt;/s1&gt;}
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>hello &lt;&lt; {println &lt;s1&gt;"- I depend on water"&lt;/s1&gt;}
}
configure(subprojects.findAll {it.name != &lt;s2&gt;'tropicalFish'&lt;/s2&gt;}) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160527T163820Z" creationid="95" creationdate="20160527T163820Z">
        <seg>hello &lt;&lt; {println &lt;s1&gt;"- I depend on water"&lt;/s1&gt;}
}
configure(subprojects.findAll {it.name != &lt;s2&gt;'tropicalFish'&lt;/s2&gt;}) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>hello &lt;&lt; {println &lt;s1&gt;"- I depend on water"&lt;/s1&gt;}
}
project(&lt;s2&gt;':bluewhale'&lt;/s2&gt;).hello &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160527T162900Z" creationid="95" creationdate="20160527T162900Z">
        <seg>hello &lt;&lt; {println &lt;s1&gt;"- I depend on water"&lt;/s1&gt;}
}
project(&lt;s2&gt;':bluewhale'&lt;/s2&gt;).hello &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>hello &lt;&lt; {println &lt;s3&gt;'- I love to spend time in the arctic waters.'&lt;/s3&gt;}
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160527T163821Z" creationid="95" creationdate="20160527T163821Z">
        <seg>hello &lt;&lt; {println &lt;s3&gt;'- I love to spend time in the arctic waters.'&lt;/s3&gt;}
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>hello {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160225T090546Z" creationid="haohang" creationdate="20160225T090546Z">
        <seg>hello {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>hello {}
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160219T065322Z" creationid="haohang" creationdate="20160219T065322Z">
        <seg>hello {}
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>hello.doLast {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160527T163309Z" creationid="95" creationdate="20160527T163309Z">
        <seg>hello.doLast {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>hello.doLast { println &lt;s0&gt;"- I'm the largest animal that has ever lived on this planet."&lt;/s0&gt; }</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160527T163307Z" creationid="95" creationdate="20160527T163307Z">
        <seg>hello.doLast { println &lt;s0&gt;"- I'm the largest animal that has ever lived on this planet."&lt;/s0&gt; }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>hello/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160722T091212Z" creationid="haohang" creationdate="20160722T091212Z">
        <seg>hello/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>helloRes {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160325T020938Z" creationid="haohang" creationdate="20160325T020938Z">
        <seg>helloRes {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>html.destination &lt;s0&gt;"${buildDir}/jacocoHtml"&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T132002Z" creationid="msdx" creationdate="20150506T132002Z">
        <seg>html.destination &lt;s0&gt;"${buildDir}/jacocoHtml"&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>htmlDependencyReport</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T061235Z" creationid="haohang" creationdate="20150628T061235Z">
        <seg>htmlDependencyReport</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T141826Z" creationid="95" creationdate="20160105T141826Z">
        <seg>http</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://ant.apache.org/ivy/history/latest-milestone/concept.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151201T070440Z" creationid="haohang" creationdate="20151201T070440Z">
        <seg>http://ant.apache.org/ivy/history/latest-milestone/concept.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://ant.apache.org/ivy/history/latest-milestone/settings/resolvers.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T134739Z" creationid="95" creationdate="20151006T134739Z">
        <seg>http://ant.apache.org/ivy/history/latest-milestone/settings/resolvers.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://bintray.com</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T095937Z" creationid="haohang" creationdate="20150807T095937Z">
        <seg>http://bintray.com</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://books.sonatype.com/mvnref-book/reference/pom-relationships-sect-project-relationships.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151201T070430Z" creationid="haohang" creationdate="20151201T070430Z">
        <seg>http://books.sonatype.com/mvnref-book/reference/pom-relationships-sect-project-relationships.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://checkstyle.sourceforge.net/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104804Z" creationid="msdx" creationdate="20150428T104804Z">
        <seg>http://checkstyle.sourceforge.net/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://clang.llvm.org</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160128T153345Z" creationid="95" creationdate="20160128T153345Z">
        <seg>http://clang.llvm.org</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://clarkware.com/software/JDepend.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104853Z" creationid="msdx" creationdate="20150428T104853Z">
        <seg>http://clarkware.com/software/JDepend.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://code.google.com/p/spock/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T094609Z" creationid="haohang" creationdate="20150707T094609Z">
        <seg>http://code.google.com/p/spock/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://codenarc.sourceforge.net/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104805Z" creationid="msdx" creationdate="20150428T104805Z">
        <seg>http://codenarc.sourceforge.net/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://cunit.sourceforge.net</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104923Z" creationid="msdx" creationdate="20150428T104923Z">
        <seg>http://cunit.sourceforge.net</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://docs.codehaus.org/display/SONAR/Analysis+Parameters</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T101430Z" creationid="msdx" creationdate="20150512T101430Z">
        <seg>http://docs.codehaus.org/display/SONAR/Analysis+Parameters</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://docs.codehaus.org/display/SONAR/Analyzing+with+Sonar+Runner</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150507T065259Z" creationid="msdx" creationdate="20150507T065259Z">
        <seg>http://docs.codehaus.org/display/SONAR/Analyzing+with+Sonar+Runner</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://download.oracle.com/javase/1.5.0/docs/tooldocs/windows/javadoc.html#referenceguide</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083435Z" creationid="msdx" creationdate="20150428T083435Z">
        <seg>http://download.oracle.com/javase/1.5.0/docs/tooldocs/windows/javadoc.html#referenceguide</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://download.oracle.com/javase/6/docs/technotes/guides/net/properties.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141121T141807Z" creationid="msdx" creationdate="20141121T141807Z">
        <seg>http://download.oracle.com/javase/6/docs/technotes/guides/net/properties.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://eclipse.org</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104807Z" creationid="msdx" creationdate="20150428T104807Z">
        <seg>http://eclipse.org</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://en.wikipedia.org/wiki/Directed_acyclic_graph</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160518T031249Z" creationid="haohang" creationdate="20160518T031249Z">
        <seg>http://en.wikipedia.org/wiki/Directed_acyclic_graph</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://en.wikipedia.org/wiki/The_Magical_Number_Seven,_Plus_or_Minus_Two</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160727T055237Z" creationid="haohang" creationdate="20160727T055237Z">
        <seg>http://en.wikipedia.org/wiki/The_Magical_Number_Seven,_Plus_or_Minus_Two</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://findbugs.sourceforge.net</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104851Z" creationid="msdx" creationdate="20150428T104851Z">
        <seg>http://findbugs.sourceforge.net</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://gant.codehaus.org</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T094737Z" creationid="msdx" creationdate="20150429T094737Z">
        <seg>http://gant.codehaus.org</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://gcc.gnu.org/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160128T153343Z" creationid="95" creationdate="20160128T153343Z">
        <seg>http://gcc.gnu.org/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://gradle.org/docs/current/dsl/org.gradle.api.tasks.scala.ScalaCompile.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T154310Z" creationid="msdx" creationdate="20150501T154310Z">
        <seg>http://gradle.org/docs/current/dsl/org.gradle.api.tasks.scala.ScalaCompile.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://groovy.codehaus.org/Using+Ant+from+Groovy</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T011230Z" creationid="msdx" creationdate="20141116T011230Z">
        <seg>http://groovy.codehaus.org/Using+Ant+from+Groovy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://groovy.codehaus.org/groovy-jdk/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150710T013024Z" creationid="haohang" creationdate="20150710T013024Z">
        <seg>http://groovy.codehaus.org/groovy-jdk/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://growl.info/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T062805Z" creationid="haohang" creationdate="20150628T062805Z">
        <seg>http://growl.info/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://jcenter.bintray.com</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T100435Z" creationid="haohang" creationdate="20150807T100435Z">
        <seg>http://jcenter.bintray.com</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://junit.org</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T094156Z" creationid="haohang" creationdate="20150707T094156Z">
        <seg>http://junit.org</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://lucene.apache.org/solr</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160727T054323Z" creationid="haohang" creationdate="20160727T054323Z">
        <seg>http://lucene.apache.org/solr</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://manpages.ubuntu.com/manpages/gutsy/man1/notify-send.1.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T062801Z" creationid="haohang" creationdate="20150628T062801Z">
        <seg>http://manpages.ubuntu.com/manpages/gutsy/man1/notify-send.1.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://maven.apache.org/ant-tasks/apidocs/org/apache/maven/artifact/ant/Authentication.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T141907Z" creationid="95" creationdate="20160105T141907Z">
        <seg>http://maven.apache.org/ant-tasks/apidocs/org/apache/maven/artifact/ant/Authentication.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://maven.apache.org/ant-tasks/apidocs/org/apache/maven/artifact/ant/Proxy.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T141914Z" creationid="95" creationdate="20160105T141914Z">
        <seg>http://maven.apache.org/ant-tasks/apidocs/org/apache/maven/artifact/ant/Proxy.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://maven.apache.org/ant-tasks/apidocs/org/apache/maven/artifact/ant/RemoteRepository.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T141903Z" creationid="95" creationdate="20160105T141903Z">
        <seg>http://maven.apache.org/ant-tasks/apidocs/org/apache/maven/artifact/ant/RemoteRepository.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://maven.apache.org/ant-tasks/apidocs/org/apache/maven/artifact/ant/RepositoryPolicy.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T141910Z" creationid="95" creationdate="20160105T141910Z">
        <seg>http://maven.apache.org/ant-tasks/apidocs/org/apache/maven/artifact/ant/RepositoryPolicy.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://maven.apache.org/pom.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T142736Z" creationid="95" creationdate="20160106T142736Z">
        <seg>http://maven.apache.org/pom.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://pmd.sourceforge.net</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104856Z" creationid="msdx" creationdate="20150428T104856Z">
        <seg>http://pmd.sourceforge.net</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://repo1.maven.org/maven2</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T095741Z" creationid="haohang" creationdate="20150807T095741Z">
        <seg>http://repo1.maven.org/maven2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://svn.apache.org/viewvc/ant/core/trunk/src/main/org/apache/tools/ant/util/ProxySetup.java?view=markup&amp;pathrev=556977</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141121T141806Z" creationid="msdx" creationdate="20141121T141806Z">
        <seg>http://svn.apache.org/viewvc/ant/core/trunk/src/main/org/apache/tools/ant/util/ProxySetup.java?view=markup&amp;pathrev=556977</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://testng.org/doc/documentation-main.html#parameters</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T143801Z" creationid="msdx" creationdate="20150428T143801Z">
        <seg>http://testng.org/doc/documentation-main.html#parameters</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://testng.org/doc/documentation-main.html#test-groups</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T151625Z" creationid="msdx" creationdate="20150428T151625Z">
        <seg>http://testng.org/doc/documentation-main.html#test-groups</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://twitter.com</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T062759Z" creationid="haohang" creationdate="20150628T062759Z">
        <seg>http://twitter.com</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://wiki.gradle.org/display/GRADLE/Plugins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104932Z" creationid="msdx" creationdate="20150428T104932Z">
        <seg>http://wiki.gradle.org/display/GRADLE/Plugins</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.antlr.org/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T063338Z" creationid="msdx" creationdate="20141116T063338Z">
        <seg>http://www.antlr.org/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.aqute.biz/Code/Bnd</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150526T004140Z" creationid="haohang" creationdate="20150526T004140Z">
        <seg>http://www.aqute.biz/Code/Bnd</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.eclemma.org/jacoco/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104925Z" creationid="msdx" creationdate="20150428T104925Z">
        <seg>http://www.eclemma.org/jacoco/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.gnupg.org/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160108T151155Z" creationid="95" creationdate="20160108T151155Z">
        <seg>http://www.gnupg.org/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.gnupg.org/documentation/howtos.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160108T151156Z" creationid="95" creationdate="20160108T151156Z">
        <seg>http://www.gnupg.org/documentation/howtos.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.jetbrains.com/idea/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T070616Z" creationid="haohang" creationdate="20150625T070616Z">
        <seg>http://www.jetbrains.com/idea/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.jetbrains.com/idea/index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104852Z" creationid="msdx" creationdate="20150428T104852Z">
        <seg>http://www.jetbrains.com/idea/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.microsoft.com/visualstudio/en-us</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160128T153451Z" creationid="95" creationdate="20160128T153451Z">
        <seg>http://www.microsoft.com/visualstudio/en-us</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.mingw.org/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160128T153547Z" creationid="95" creationdate="20160128T153547Z">
        <seg>http://www.mingw.org/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.pgpi.org/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160108T150722Z" creationid="95" creationdate="20160108T150722Z">
        <seg>http://www.pgpi.org/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.scala-lang.org/docu/files/tools/fsc.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150430T155005Z" creationid="msdx" creationdate="20150430T155005Z">
        <seg>http://www.scala-lang.org/docu/files/tools/fsc.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.scalatest.org</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T094355Z" creationid="haohang" creationdate="20150707T094355Z">
        <seg>http://www.scalatest.org</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.sonarsource.com/products/plugins/languages/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T092546Z" creationid="msdx" creationdate="20150512T092546Z">
        <seg>http://www.sonarsource.com/products/plugins/languages/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.sonarsource.org</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104919Z" creationid="msdx" creationdate="20150428T104919Z">
        <seg>http://www.sonarsource.org</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>httpPort</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T151122Z" creationid="msdx" creationdate="20150504T151122Z">
        <seg>httpPort</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://docs.sonatype.org/display/Repository/Central+Sync+Requirements</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160108T150723Z" creationid="95" creationdate="20160108T150723Z">
        <seg>https://docs.sonatype.org/display/Repository/Central+Sync+Requirements</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://github.com/harrah/xsbt</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T154014Z" creationid="msdx" creationdate="20150501T154014Z">
        <seg>https://github.com/harrah/xsbt</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://github.com/jbaruch/maven2gradle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T092520Z" creationid="haohang" creationdate="20150707T092520Z">
        <seg>https://github.com/jbaruch/maven2gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://github.com/junit-team/junit/wiki/Categories</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T151602Z" creationid="msdx" creationdate="20150428T151602Z">
        <seg>https://github.com/junit-team/junit/wiki/Categories</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://github.com/typesafehub/zinc</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T154013Z" creationid="msdx" creationdate="20150501T154013Z">
        <seg>https://github.com/typesafehub/zinc</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>https://sites.google.com/site/snarlapp/home</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T062803Z" creationid="haohang" creationdate="20150628T062803Z">
        <seg>https://sites.google.com/site/snarlapp/home</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ide_support.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T124043Z" creationid="msdx" creationdate="20141111T124043Z">
        <seg>ide_support.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>idea</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104851Z" creationid="msdx" creationdate="20150428T104851Z">
        <seg>idea</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>idea.module</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T072709Z" creationid="haohang" creationdate="20150625T072709Z">
        <seg>idea.module</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>idea.module.iml {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T073921Z" creationid="haohang" creationdate="20150625T073921Z">
        <seg>idea.module.iml {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>idea.project</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T072700Z" creationid="haohang" creationdate="20150625T072700Z">
        <seg>idea.project</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>idea.project.ipr {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T074116Z" creationid="haohang" creationdate="20150625T074116Z">
        <seg>idea.project.ipr {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>idea.workspace</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T072717Z" creationid="haohang" creationdate="20150625T072717Z">
        <seg>idea.workspace</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ideaModule</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T072553Z" creationid="haohang" creationdate="20150625T072553Z">
        <seg>ideaModule</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ideaProject</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T072514Z" creationid="haohang" creationdate="20150625T072514Z">
        <seg>ideaProject</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ideaWorkspace</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T072602Z" creationid="haohang" creationdate="20150625T072602Z">
        <seg>ideaWorkspace</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>idea_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T063312Z" creationid="msdx" creationdate="20141116T063312Z">
        <seg>idea_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if (taskGraph.allTasks.any { it instanceof Sign }) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160108T152851Z" creationid="95" creationdate="20160108T152851Z">
        <seg>if (taskGraph.allTasks.any { it instanceof Sign }) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>img/groovyPluginTasks.png</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T071745Z" creationid="msdx" creationdate="20150429T071745Z">
        <seg>img/groovyPluginTasks.png</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>img/guiSetup.png</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141211T024659Z" creationid="msdx" creationdate="20141211T024659Z">
        <seg>img/guiSetup.png</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>img/guiTaskTree.png</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T150124Z" creationid="msdx" creationdate="20141105T150124Z">
        <seg>img/guiTaskTree.png</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>img/jacocoHtmlReport.png</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T132003Z" creationid="msdx" creationdate="20150506T132003Z">
        <seg>img/jacocoHtmlReport.png</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>img/javaPluginConfigurations.png</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083233Z" creationid="msdx" creationdate="20150428T083233Z">
        <seg>img/javaPluginConfigurations.png</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>img/javaPluginTasks.png</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083228Z" creationid="msdx" creationdate="20150428T083228Z">
        <seg>img/javaPluginTasks.png</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>img/jettyPluginTasks.png</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T150534Z" creationid="msdx" creationdate="20150504T150534Z">
        <seg>img/jettyPluginTasks.png</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>img/scalaPluginTasks.png</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T152446Z" creationid="msdx" creationdate="20150429T152446Z">
        <seg>img/scalaPluginTasks.png</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>img/warPluginTasks.png</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T090104Z" creationid="msdx" creationdate="20150503T090104Z">
        <seg>img/warPluginTasks.png</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>import org.gradle.plugins.signing.Sign

gradle.taskGraph.whenReady { taskGraph -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160108T152850Z" creationid="95" creationdate="20160108T152850Z">
        <seg>import org.gradle.plugins.signing.Sign

gradle.taskGraph.whenReady { taskGraph -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>inceptionYear &lt;s0&gt;'2008'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160104T152813Z" creationid="95" creationdate="20160104T152813Z">
        <seg>inceptionYear &lt;s0&gt;'2008'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>include &lt;s0&gt;'api'&lt;/s0&gt;, &lt;s1&gt;'shared'&lt;/s1&gt;, &lt;s2&gt;'services:personService'&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T083730Z" creationid="haohang" creationdate="20160726T083730Z">
        <seg>include &lt;s0&gt;'api'&lt;/s0&gt;, &lt;s1&gt;'shared'&lt;/s1&gt;, &lt;s2&gt;'services:personService'&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>include &lt;s0&gt;'bluewhale'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160522T125536Z" creationid="95" creationdate="20160522T125536Z">
        <seg>include &lt;s0&gt;'bluewhale'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>include &lt;s0&gt;'bluewhale'&lt;/s0&gt;, &lt;s1&gt;'krill'&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160526T155400Z" creationid="95" creationdate="20160526T155400Z">
        <seg>include &lt;s0&gt;'bluewhale'&lt;/s0&gt;, &lt;s1&gt;'krill'&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>include &lt;s0&gt;'bluewhale'&lt;/s0&gt;, &lt;s1&gt;'krill'&lt;/s1&gt;, &lt;s2&gt;'tropicalFish'&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160527T163819Z" creationid="95" creationdate="20160527T163819Z">
        <seg>include &lt;s0&gt;'bluewhale'&lt;/s0&gt;, &lt;s1&gt;'krill'&lt;/s1&gt;, &lt;s2&gt;'tropicalFish'&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>include &lt;s0&gt;'consumer'&lt;/s0&gt;, &lt;s1&gt;'aProducer'&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T070213Z" creationid="haohang" creationdate="20160718T070213Z">
        <seg>include &lt;s0&gt;'consumer'&lt;/s0&gt;, &lt;s1&gt;'aProducer'&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>include &lt;s0&gt;'consumer'&lt;/s0&gt;, &lt;s1&gt;'producer'&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T062356Z" creationid="haohang" creationdate="20160718T062356Z">
        <seg>include &lt;s0&gt;'consumer'&lt;/s0&gt;, &lt;s1&gt;'producer'&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>include &lt;s0&gt;'date'&lt;/s0&gt;, &lt;s1&gt;'hello'&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160722T091240Z" creationid="haohang" creationdate="20160722T091240Z">
        <seg>include &lt;s0&gt;'date'&lt;/s0&gt;, &lt;s1&gt;'hello'&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>include &lt;s0&gt;'project1'&lt;/s0&gt;, &lt;s1&gt;'project2:child'&lt;/s1&gt;, &lt;s2&gt;'project3:child1'&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T041332Z" creationid="haohang" creationdate="20160519T041332Z">
        <seg>include &lt;s0&gt;'project1'&lt;/s0&gt;, &lt;s1&gt;'project2:child'&lt;/s1&gt;, &lt;s2&gt;'project3:child1'&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>include &lt;s10&gt;'**/*.java'&lt;/s10&gt;
}

&lt;s11&gt;// Create a tree using a map&lt;/s11&gt;
tree = fileTree(dir: &lt;s12&gt;'src'&lt;/s12&gt;, include: &lt;s13&gt;'**/*.java'&lt;/s13&gt;)
tree = fileTree(dir: &lt;s14&gt;'src'&lt;/s14&gt;, includes: [&lt;s15&gt;'**/*.java'&lt;/s15&gt;, &lt;s16&gt;'**/*.xml'&lt;/s16&gt;])
tree = fileTree(dir: &lt;s17&gt;'src'&lt;/s17&gt;, include: &lt;s18&gt;'**/*.java'&lt;/s18&gt;, exclude: &lt;s19&gt;'**/*test*/**'&lt;/s19&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T120223Z" creationid="msdx" creationdate="20141113T120223Z">
        <seg>include &lt;s10&gt;'**/*.java'&lt;/s10&gt;
}

&lt;s11&gt;// Create a tree using a map&lt;/s11&gt;
tree = fileTree(dir: &lt;s12&gt;'src'&lt;/s12&gt;, include: &lt;s13&gt;'**/*.java'&lt;/s13&gt;)
tree = fileTree(dir: &lt;s14&gt;'src'&lt;/s14&gt;, includes: [&lt;s15&gt;'**/*.java'&lt;/s15&gt;, &lt;s16&gt;'**/*.xml'&lt;/s16&gt;])
tree = fileTree(dir: &lt;s17&gt;'src'&lt;/s17&gt;, include: &lt;s18&gt;'**/*.java'&lt;/s18&gt;, exclude: &lt;s19&gt;'**/*test*/**'&lt;/s19&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>include &lt;s1&gt;"**/*.c"&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160225T090551Z" creationid="haohang" creationdate="20160225T090551Z">
        <seg>include &lt;s1&gt;"**/*.c"&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>include &lt;s1&gt;"**/*.cpp"&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160225T085545Z" creationid="haohang" creationdate="20160225T085545Z">
        <seg>include &lt;s1&gt;"**/*.cpp"&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>include &lt;s2&gt;'**/*.html'&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T131123Z" creationid="msdx" creationdate="20141113T131123Z">
        <seg>include &lt;s2&gt;'**/*.html'&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>include &lt;s2&gt;'org/gradle/api/**'&lt;/s2&gt;
}

&lt;s3&gt;// Add trees together&lt;/s3&gt;
FileTree sum = tree + fileTree(dir: &lt;s4&gt;'src/test'&lt;/s4&gt;)

&lt;s5&gt;// Visit the elements of the tree&lt;/s5&gt;
tree.visit {element -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T120400Z" creationid="msdx" creationdate="20141113T120400Z">
        <seg>include &lt;s2&gt;'org/gradle/api/**'&lt;/s2&gt;
}

&lt;s3&gt;// Add trees together&lt;/s3&gt;
FileTree sum = tree + fileTree(dir: &lt;s4&gt;'src/test'&lt;/s4&gt;)

&lt;s5&gt;// Visit the elements of the tree&lt;/s5&gt;
tree.visit {element -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>include &lt;s3&gt;'**/*.html'&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T143853Z" creationid="msdx" creationdate="20141113T143853Z">
        <seg>include &lt;s3&gt;'**/*.html'&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>include &lt;s3&gt;'**/*.jsp'&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T131124Z" creationid="msdx" creationdate="20141113T131124Z">
        <seg>include &lt;s3&gt;'**/*.jsp'&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>include(&lt;s2&gt;'**/*.txt'&lt;/s2&gt;, &lt;s3&gt;'**/*.xml'&lt;/s3&gt;, &lt;s4&gt;'**/*.properties'&lt;/s4&gt;)
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T092541Z" creationid="msdx" creationdate="20141110T092541Z">
        <seg>include(&lt;s2&gt;'**/*.txt'&lt;/s2&gt;, &lt;s3&gt;'**/*.xml'&lt;/s3&gt;, &lt;s4&gt;'**/*.properties'&lt;/s4&gt;)
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>include(&lt;s3&gt;'**/*.txt'&lt;/s3&gt;, &lt;s4&gt;'**/*.xml'&lt;/s4&gt;, &lt;s5&gt;'**/*.properties'&lt;/s5&gt;)
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T015513Z" creationid="msdx" creationdate="20141111T015513Z">
        <seg>include(&lt;s3&gt;'**/*.txt'&lt;/s3&gt;, &lt;s4&gt;'**/*.xml'&lt;/s4&gt;, &lt;s5&gt;'**/*.properties'&lt;/s5&gt;)
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>include(&lt;s6&gt;'org/gradle/sample/api/**'&lt;/s6&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T084527Z" creationid="haohang" creationdate="20160726T084527Z">
        <seg>include(&lt;s6&gt;'org/gradle/sample/api/**'&lt;/s6&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>include(name: &lt;s2&gt;'**.xml'&lt;/s2&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141115T162755Z" creationid="msdx" creationdate="20141115T162755Z">
        <seg>include(name: &lt;s2&gt;'**.xml'&lt;/s2&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>includeCategories &lt;s0&gt;'org.gradle.junit.CategoryA'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T082902Z" creationid="msdx" creationdate="20150428T082902Z">
        <seg>includeCategories &lt;s0&gt;'org.gradle.junit.CategoryA'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>includeFlat &lt;s0&gt;'project3'&lt;/s0&gt;, &lt;s1&gt;'project4'&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T041858Z" creationid="haohang" creationdate="20160519T041858Z">
        <seg>includeFlat &lt;s0&gt;'project3'&lt;/s0&gt;, &lt;s1&gt;'project4'&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>includeGroups &lt;s1&gt;'unitTests'&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083149Z" creationid="msdx" creationdate="20150428T083149Z">
        <seg>includeGroups &lt;s1&gt;'unitTests'&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>includeTestsMatching &lt;s1&gt;"*UiCheck"&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083454Z" creationid="msdx" creationdate="20150428T083454Z">
        <seg>includeTestsMatching &lt;s1&gt;"*UiCheck"&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>includeTestsMatching &lt;s3&gt;"org.gradle.internal.*"&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083455Z" creationid="msdx" creationdate="20150428T083455Z">
        <seg>includeTestsMatching &lt;s3&gt;"org.gradle.internal.*"&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>includeTestsMatching &lt;s5&gt;"*IntegTest"&lt;/s5&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083455Z" creationid="msdx" creationdate="20150428T083455Z">
        <seg>includeTestsMatching &lt;s5&gt;"*IntegTest"&lt;/s5&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>includes</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T132308Z" creationid="msdx" creationdate="20150506T132308Z">
        <seg>includes</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>index.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T135831Z" creationid="msdx" creationdate="20150506T135831Z">
        <seg>index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>init</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T071552Z" creationid="haohang" creationdate="20150707T071552Z">
        <seg>init</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>init.gradle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T154814Z" creationid="msdx" creationdate="20141116T154814Z">
        <seg>init.gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>initializeInOrder = true</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T142901Z" creationid="msdx" creationdate="20150504T142901Z">
        <seg>initializeInOrder = true</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>inputs.file copyTask &lt;s0&gt;// up-to-date check for inputs, plus add copyTask as dependency&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T134159Z" creationid="msdx" creationdate="20141113T134159Z">
        <seg>inputs.file copyTask &lt;s0&gt;// up-to-date check for inputs, plus add copyTask as dependency&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>inputs.file srcFile</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T061312Z" creationid="msdx" creationdate="20141111T061312Z">
        <seg>inputs.file srcFile</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>install</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151228T151927Z" creationid="95" creationdate="20151228T151927Z">
        <seg>install</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>install {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T143450Z" creationid="95" creationdate="20160106T143450Z">
        <seg>install {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>install&lt;e0&gt;&lt;c1&gt;${distribution.name.capitalize()}&lt;/c1&gt;&lt;/e0&gt;Dist</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150701T031239Z" creationid="haohang" creationdate="20150701T031239Z">
        <seg>install&lt;e0&gt;&lt;c1&gt;${distribution.name.capitalize()}&lt;/c1&gt;&lt;/e0&gt;Dist</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>installApp</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150702T105052Z" creationid="haohang" creationdate="20150702T105052Z">
        <seg>installApp</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>installCustomDist</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150701T031312Z" creationid="haohang" creationdate="20150701T031312Z">
        <seg>installCustomDist</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>installDist</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150701T030902Z" creationid="haohang" creationdate="20150701T030902Z">
        <seg>installDist</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>installation.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162026Z" creationid="msdx" creationdate="20141109T162026Z">
        <seg>installation.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>installation.html#N10116</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162030Z" creationid="msdx" creationdate="20141109T162030Z">
        <seg>installation.html#N10116</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>installation.html#N10123</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162124Z" creationid="msdx" creationdate="20141109T162124Z">
        <seg>installation.html#N10123</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>installation.html#N1012C</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162127Z" creationid="msdx" creationdate="20141109T162127Z">
        <seg>installation.html#N1012C</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>installation.html#N10148</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162136Z" creationid="msdx" creationdate="20141109T162136Z">
        <seg>installation.html#N10148</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>installation.html#N10155</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162143Z" creationid="msdx" creationdate="20141109T162143Z">
        <seg>installation.html#N10155</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>installation.html#N10160</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162148Z" creationid="msdx" creationdate="20141109T162148Z">
        <seg>installation.html#N10160</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>instruction &lt;s11&gt;'Bundle-Vendor'&lt;/s11&gt;, &lt;s12&gt;'MyCompany'&lt;/s12&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150526T064446Z" creationid="haohang" creationdate="20150526T064446Z">
        <seg>~instruction &lt;s5&gt;'Bundle-Vendor'&lt;/s5&gt;, &lt;s6&gt;'MyCompany'&lt;/s6&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>instruction &lt;s2&gt;'Private-Package'&lt;/s2&gt;,</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150526T064440Z" creationid="haohang" creationdate="20150526T064440Z">
        <seg>instruction &lt;s2&gt;'Private-Package'&lt;/s2&gt;,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>instruction &lt;s5&gt;'Bundle-Vendor'&lt;/s5&gt;, &lt;s6&gt;'MyCompany'&lt;/s6&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150526T064442Z" creationid="haohang" creationdate="20150526T064442Z">
        <seg>instruction &lt;s5&gt;'Bundle-Vendor'&lt;/s5&gt;, &lt;s6&gt;'MyCompany'&lt;/s6&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>instruction &lt;s7&gt;'Bundle-Description'&lt;/s7&gt;, &lt;s8&gt;'Platform2: Metrics 2 Measures Framework'&lt;/s8&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150526T064443Z" creationid="haohang" creationdate="20150526T064443Z">
        <seg>instruction &lt;s7&gt;'Bundle-Description'&lt;/s7&gt;, &lt;s8&gt;'Platform2: Metrics 2 Measures Framework'&lt;/s8&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>instruction &lt;s9&gt;'Bundle-DocURL'&lt;/s9&gt;, &lt;s10&gt;'http://www.mycompany.com'&lt;/s10&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150526T064444Z" creationid="haohang" creationdate="20150526T064444Z">
        <seg>instruction &lt;s9&gt;'Bundle-DocURL'&lt;/s9&gt;, &lt;s10&gt;'http://www.mycompany.com'&lt;/s10&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>intTest
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083422Z" creationid="msdx" creationdate="20150428T083422Z">
        <seg>intTest
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>intTest
}

dependencies {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083424Z" creationid="msdx" creationdate="20150428T083424Z">
        <seg>intTest
}

dependencies {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>intTestCompile &lt;s0&gt;'junit:junit:4.11'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083424Z" creationid="msdx" creationdate="20150428T083424Z">
        <seg>intTestCompile &lt;s0&gt;'junit:junit:4.11'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>intTestRuntime &lt;s1&gt;'org.ow2.asm:asm-all:4.0'&lt;/s1&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083425Z" creationid="msdx" creationdate="20150428T083425Z">
        <seg>intTestRuntime &lt;s1&gt;'org.ow2.asm:asm-all:4.0'&lt;/s1&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>into &lt;s0&gt;"$buildDir/libs"&lt;/s0&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T145437Z" creationid="msdx" creationdate="20141113T145437Z">
        <seg>into &lt;s0&gt;"$buildDir/libs"&lt;/s0&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>into &lt;s0&gt;'build/explodedWar'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T143852Z" creationid="msdx" creationdate="20141113T143852Z">
        <seg>into &lt;s0&gt;'build/explodedWar'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>into &lt;s1&gt;'build/explodedWar'&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T131123Z" creationid="msdx" creationdate="20141113T131123Z">
        <seg>into &lt;s1&gt;'build/explodedWar'&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>into &lt;s1&gt;'build/explodedWar'&lt;/s1&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T124408Z" creationid="msdx" creationdate="20141113T124408Z">
        <seg>into &lt;s1&gt;'build/explodedWar'&lt;/s1&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>into &lt;s1&gt;'target'&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T092539Z" creationid="msdx" creationdate="20141110T092539Z">
        <seg>into &lt;s1&gt;'target'&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>into &lt;s2&gt;'target'&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T015510Z" creationid="msdx" creationdate="20141111T015510Z">
        <seg>into &lt;s2&gt;'target'&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>into &lt;s3&gt;'build/explodedWar'&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T140843Z" creationid="msdx" creationdate="20141113T140843Z">
        <seg>into &lt;s3&gt;'build/explodedWar'&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>into &lt;s4&gt;"docs"&lt;/s4&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150703T100432Z" creationid="haohang" creationdate="20150703T100432Z">
        <seg>into &lt;s4&gt;"docs"&lt;/s4&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>into &lt;s4&gt;'some-dir'&lt;/s4&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T134203Z" creationid="msdx" creationdate="20141113T134203Z">
        <seg>into &lt;s4&gt;'some-dir'&lt;/s4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>into dest
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T045152Z" creationid="msdx" creationdate="20141108T045152Z">
        <seg>into dest
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>into explodedDist</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160722T091252Z" creationid="haohang" creationdate="20160722T091252Z">
        <seg>into explodedDist</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>into { getDestDir() }
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T130957Z" creationid="msdx" creationdate="20141113T130957Z">
        <seg>into { getDestDir() }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>into(&lt;s2&gt;'libs'&lt;/s2&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T145756Z" creationid="msdx" creationdate="20141113T145756Z">
        <seg>into(&lt;s2&gt;'libs'&lt;/s2&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>into(&lt;s4&gt;'libs'&lt;/s4&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T143854Z" creationid="msdx" creationdate="20141113T143854Z">
        <seg>into(&lt;s4&gt;'libs'&lt;/s4&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>into(buildDir)
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T021302Z" creationid="msdx" creationdate="20141110T021302Z">
        <seg>into(buildDir)
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>introduction.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141101T034300Z" creationid="msdx" creationdate="20141101T034300Z">
        <seg>introduction.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>introduction.html#N10048</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T161842Z" creationid="msdx" creationdate="20141109T161842Z">
        <seg>introduction.html#N10048</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>it.buildable</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T084720Z" creationid="haohang" creationdate="20160408T084720Z">
        <seg>it.buildable</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>itanium {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160405T034031Z" creationid="haohang" creationdate="20160405T034031Z">
        <seg>itanium {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ivy &lt;s4&gt;"ivy-files/[organisation]/[module]/[revision]/ivy.xml"&lt;/s4&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T111348Z" creationid="95" creationdate="20151006T111348Z">
        <seg>ivy &lt;s4&gt;"ivy-files/[organisation]/[module]/[revision]/ivy.xml"&lt;/s4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ivy {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T110441Z" creationid="95" creationdate="20151006T110441Z">
        <seg>ivy {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ivy-publish</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104801Z" creationid="msdx" creationdate="20150428T104801Z">
        <seg>ivy-publish</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ivyPattern &lt;s0&gt;"$projectDir/repo/[organisation]/[module]-ivy-[revision].xml"&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T133502Z" creationid="95" creationdate="20151006T133502Z">
        <seg>ivyPattern &lt;s0&gt;"$projectDir/repo/[organisation]/[module]-ivy-[revision].xml"&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>jacoco</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104924Z" creationid="msdx" creationdate="20150428T104924Z">
        <seg>jacoco</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>jacoco {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T131554Z" creationid="msdx" creationdate="20150506T131554Z">
        <seg>jacoco</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>jacoco/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T135830Z" creationid="msdx" creationdate="20150506T135830Z">
        <seg>jacoco</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>jacocoAgent</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T140034Z" creationid="msdx" creationdate="20150506T140034Z">
        <seg>jacocoAgent</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>jacocoAnt</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T140006Z" creationid="msdx" creationdate="20150506T140006Z">
        <seg>jacocoAnt</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>jacocoTestReport</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T140302Z" creationid="msdx" creationdate="20150506T135918Z">
        <seg>jacocoTestReport</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>jacocoTestReport {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T132000Z" creationid="msdx" creationdate="20150506T132000Z">
        <seg>jacocoTestReport {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>jacoco_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104924Z" creationid="msdx" creationdate="20150428T104924Z">
        <seg>jacoco_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>jar</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083214Z" creationid="msdx" creationdate="20150428T083214Z">
        <seg>jar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>jar {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T145224Z" creationid="msdx" creationdate="20150428T145224Z">
        <seg>jar {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>jar.manifest.writeTo(&lt;s0&gt;"$buildDir/mymanifest.mf"&lt;/s0&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T151508Z" creationid="msdx" creationdate="20150428T151508Z">
        <seg>jar.manifest.writeTo(&lt;s0&gt;"$buildDir/mymanifest.mf"&lt;/s0&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141126T120902Z" creationid="msdx" creationdate="20141126T120902Z">
        <seg>java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>java {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083230Z" creationid="msdx" creationdate="20150428T083230Z">
        <seg>java {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>java-base</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141126T120902Z" creationid="msdx" creationdate="20141126T120902Z">
        <seg>java-base</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>java-base, java, jacoco</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104919Z" creationid="msdx" creationdate="20150428T104919Z">
        <seg>java-base，java，jacoco</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>java-library-distribution</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104801Z" creationid="msdx" creationdate="20150428T104801Z">
        <seg>java-library-distribution</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>java.srcDirs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083417Z" creationid="msdx" creationdate="20150428T083417Z">
        <seg>java.srcDirs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>java/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T083502Z" creationid="haohang" creationdate="20160726T083502Z">
        <seg>java/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>javaLibraryDistribution_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141121T142753Z" creationid="msdx" creationdate="20141121T142753Z">
        <seg>javaLibraryDistribution_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>java_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141124T100518Z" creationid="msdx" creationdate="20141124T100518Z">
        <seg>java_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>java_plugin.html#N11E80</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131609Z" creationid="msdx" creationdate="20150509T131609Z">
        <seg>java_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>java_plugin.html#N11E8F</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131614Z" creationid="msdx" creationdate="20150509T131614Z">
        <seg>java_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>java_plugin.html#N11EA7</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131625Z" creationid="msdx" creationdate="20150509T131625Z">
        <seg>java_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>java_plugin.html#N12119</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131636Z" creationid="msdx" creationdate="20150509T131636Z">
        <seg>java_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>java_plugin.html#N1223E</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131645Z" creationid="msdx" creationdate="20150509T131645Z">
        <seg>java_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>java_plugin.html#N12970</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131816Z" creationid="msdx" creationdate="20150509T131816Z">
        <seg>java_plugin.html#N12970</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>java_plugin.html#java_source_set_configurations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083423Z" creationid="msdx" creationdate="20150428T083423Z">
        <seg>java_plugin.html#java_source_set_configurations</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>java_plugin.html#java_source_set_tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083425Z" creationid="msdx" creationdate="20150428T083425Z">
        <seg>java_plugin.html#java_source_set_tasks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>java_plugin.html#sec:clean</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131703Z" creationid="msdx" creationdate="20150509T131703Z">
        <seg>java_plugin.html#sec:clean</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>java_plugin.html#sec:compile</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T094144Z" creationid="msdx" creationdate="20150429T094144Z">
        <seg>java_plugin.html#sec:compile</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>java_plugin.html#sec:java_plugin_and_dependency_management</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131640Z" creationid="msdx" creationdate="20150509T131640Z">
        <seg>java_plugin.html#sec:java_plugin_and_dependency_management</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>java_plugin.html#sec:java_test</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131806Z" creationid="msdx" creationdate="20150509T131806Z">
        <seg>java_plugin.html#sec:java_test</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>java_plugin.html#sec:javadoc</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131701Z" creationid="msdx" creationdate="20150509T131701Z">
        <seg>java_plugin.html#sec:javadoc</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>java_plugin.html#sec:resources</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131753Z" creationid="msdx" creationdate="20150509T131753Z">
        <seg>java_plugin.html#sec:resources</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>java_plugin.html#sec:source_sets</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T161531Z" creationid="msdx" creationdate="20141112T161531Z">
        <seg>java_plugin.html#sec:source_sets</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>java_plugin.html#sec:upload</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131828Z" creationid="msdx" creationdate="20150509T131828Z">
        <seg>java_plugin.html#sec:upload</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>java_plugin.html#sub:manifest</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150526T003804Z" creationid="haohang" creationdate="20150526T003804Z">
        <seg>java_plugin.html#sub:manifest</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>java_plugin.html#tab:configurations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151221T141635Z" creationid="95" creationdate="20151221T141635Z">
        <seg>java_plugin.html#tab:configurations</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>javadoc</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083216Z" creationid="msdx" creationdate="20150428T083216Z">
        <seg>javadoc</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>jcenter()
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T100536Z" creationid="haohang" creationdate="20150807T100536Z">
        <seg>jcenter()
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>jdepend</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104853Z" creationid="msdx" creationdate="20150428T104853Z">
        <seg>jdepend</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>jdepend&lt;e0&gt;&lt;c1&gt;SourceSet&lt;/c1&gt;&lt;/e0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T134258Z" creationid="msdx" creationdate="20150505T134258Z">
        <seg>jdepend&lt;e0&gt;&lt;c1&gt;SourceSet&lt;/c1&gt;&lt;/e0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>jdependMain</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T134229Z" creationid="msdx" creationdate="20150505T134229Z">
        <seg>jdependMain</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>jdependTest</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T134239Z" creationid="msdx" creationdate="20150505T134239Z">
        <seg>jdependTest</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>jdepend_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141124T100504Z" creationid="msdx" creationdate="20141124T100504Z">
        <seg>jdepend_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>jetty</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104757Z" creationid="msdx" creationdate="20150428T104757Z">
        <seg>jetty</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>jettyRun</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T150215Z" creationid="msdx" creationdate="20150504T150215Z">
        <seg>jettyRun</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>jettyRunWar</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T150420Z" creationid="msdx" creationdate="20150504T150420Z">
        <seg>jettyRunWar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>jettyStop</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T150445Z" creationid="msdx" creationdate="20150504T150445Z">
        <seg>jettyStop</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>jetty_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104756Z" creationid="msdx" creationdate="20150428T104756Z">
        <seg>jetty_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>jetty_plugin.html#N13247</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150514T151824Z" creationid="msdx" creationdate="20150514T151824Z">
        <seg>jetty_plugin.html#N13247</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>jetty_plugin.html#N13256</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150514T151828Z" creationid="msdx" creationdate="20150514T151828Z">
        <seg>jetty_plugin.html#N13256</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>jetty_plugin.html#N132B5</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150514T151830Z" creationid="msdx" creationdate="20150514T151830Z">
        <seg>jetty_plugin.html#N132B5</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>jetty_plugin.html#N132BA</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150514T151833Z" creationid="msdx" creationdate="20150514T151833Z">
        <seg>jetty_plugin.html#N132BA</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>jetty_plugin.html#N132BF</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150514T151836Z" creationid="msdx" creationdate="20150514T151836Z">
        <seg>jetty_plugin.html#N132BF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>jmx</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T132323Z" creationid="msdx" creationdate="20150506T132323Z">
        <seg>jmx</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>jvmArgs = [&lt;s1&gt;'-XX:MaxPermSize=512m'&lt;/s1&gt;]</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150430T160055Z" creationid="msdx" creationdate="20150430T160055Z">
        <seg>jvmArgs = [&lt;s1&gt;'-XX:MaxPermSize=512m'&lt;/s1&gt;]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>krill/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160526T155321Z" creationid="95" creationdate="20160526T155321Z">
        <seg>krill/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>krill/build.gradle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160527T163308Z" creationid="95" creationdate="20160527T163308Z">
        <seg>krill/build.gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>language = &lt;s0&gt;"grvy"&lt;/s0&gt; &lt;s1&gt;// set language to Groovy&lt;/s1&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T092637Z" creationid="msdx" creationdate="20150512T092637Z">
        <seg>language = &lt;s0&gt;"grvy"&lt;/s0&gt; &lt;s1&gt;// set language to Groovy&lt;/s1&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>language = &lt;s1&gt;"groovy"&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T092010Z" creationid="msdx" creationdate="20150512T092010Z">
        <seg>language = &lt;s1&gt;"groovy"&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>language = System.getProperty(&lt;s0&gt;"sonar.language"&lt;/s0&gt;, &lt;s1&gt;"java"&lt;/s1&gt;)
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T054036Z" creationid="msdx" creationdate="20150513T054036Z">
        <seg>language = System.getProperty(&lt;s0&gt;"sonar.language"&lt;/s0&gt;, &lt;s1&gt;"java"&lt;/s1&gt;)
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>layout &lt;s1&gt;"maven"&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T110443Z" creationid="95" creationdate="20151006T110443Z">
        <seg>layout &lt;s1&gt;"maven"&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>layout &lt;s1&gt;"pattern"&lt;/s1&gt;, {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T110640Z" creationid="95" creationdate="20151006T110640Z">
        <seg>layout &lt;s1&gt;"pattern"&lt;/s1&gt;, {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>lib</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T141507Z" creationid="msdx" creationdate="20150504T141507Z">
        <seg>into(&lt;s2&gt;'libs'&lt;/s2&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>lib libraries.hello</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160325T032909Z" creationid="haohang" creationdate="20160325T032909Z">
        <seg>lib libraries.hello</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>lib libraries.hello.&lt;s1&gt;static&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160325T033132Z" creationid="haohang" creationdate="20160325T033132Z">
        <seg>lib libraries.hello.&lt;s1&gt;static&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>lib library: &lt;s0&gt;"cunit"&lt;/s0&gt;, linkage: &lt;s1&gt;"static"&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T151037Z" creationid="95" creationdate="20160504T151037Z">
        <seg>lib library: &lt;s0&gt;"cunit"&lt;/s0&gt;, linkage: &lt;s1&gt;"static"&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>lib library: &lt;s4&gt;"cunit"&lt;/s4&gt;, linkage: &lt;s5&gt;"static"&lt;/s5&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T151355Z" creationid="95" creationdate="20160504T151355Z">
        <seg>lib library: &lt;s4&gt;"cunit"&lt;/s4&gt;, linkage: &lt;s5&gt;"static"&lt;/s5&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>lib project: &lt;s4&gt;':lib'&lt;/s4&gt;, library: &lt;s5&gt;'main'&lt;/s5&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160325T033442Z" creationid="haohang" creationdate="20160325T033442Z">
        <seg>lib project: &lt;s4&gt;':lib'&lt;/s4&gt;, library: &lt;s5&gt;'main'&lt;/s5&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>libDirName</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T141507Z" creationid="msdx" creationdate="20150504T141507Z">
        <seg>libDirName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>libDirName &lt;s11&gt;'APP-INF/lib'&lt;/s11&gt;  &lt;s12&gt;// put dependency libraries into APP-INF/lib inside the generated EAR;&lt;/s12&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T142900Z" creationid="msdx" creationdate="20150504T142900Z">
        <seg>libDirName &lt;s11&gt;'APP-INF/lib'&lt;/s11&gt;  &lt;s12&gt;// put dependency libraries into APP-INF/lib inside the generated EAR;&lt;/s12&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>libraries {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160219T065319Z" creationid="haohang" creationdate="20160219T065319Z">
        <seg>libraries {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>libs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083240Z" creationid="msdx" creationdate="20150428T083240Z">
        <seg>libs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>libs(PrebuiltLibraries) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T151335Z" creationid="95" creationdate="20160504T151335Z">
        <seg>libs(PrebuiltLibraries) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>libsDir</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083241Z" creationid="msdx" creationdate="20150428T083241Z">
        <seg>libsDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>libsDirName</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083240Z" creationid="msdx" creationdate="20150428T083240Z">
        <seg>libsDirName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>license {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160104T152816Z" creationid="95" creationdate="20160104T152816Z">
        <seg>license {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>licenses {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160104T152814Z" creationid="95" creationdate="20160104T152814Z">
        <seg>licenses {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>linker.args &lt;s10&gt;"/DEBUG"&lt;/s10&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160324T151802Z" creationid="95" creationdate="20160324T151802Z">
        <seg>linker.args &lt;s10&gt;"/DEBUG"&lt;/s10&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>linker.args &lt;s1&gt;"/noentry"&lt;/s1&gt;, &lt;s2&gt;"/machine:x86"&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160325T023108Z" creationid="haohang" creationdate="20160325T023108Z">
        <seg>linker.args &lt;s1&gt;"/noentry"&lt;/s1&gt;, &lt;s2&gt;"/machine:x86"&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>linker.args &lt;s5&gt;'/DEBUG'&lt;/s5&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160401T090626Z" creationid="haohang" creationdate="20160401T090626Z">
        <seg>linker.args &lt;s5&gt;'/DEBUG'&lt;/s5&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>linker.args &lt;s6&gt;"-Xlinker"&lt;/s6&gt;, &lt;s7&gt;"-S"&lt;/s7&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160324T151759Z" creationid="95" creationdate="20160324T151759Z">
        <seg>linker.args &lt;s6&gt;"-Xlinker"&lt;/s6&gt;, &lt;s7&gt;"-S"&lt;/s7&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>local</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T090846Z" creationid="haohang" creationdate="20150628T090846Z">
        <seg>local</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>local Maven repository)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150707T093731Z" creationid="haohang" creationdate="20150707T093731Z">
        <seg>本地 Maven 存储库）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>localRepository {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T133452Z" creationid="95" creationdate="20151006T133452Z">
        <seg>localRepository {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>logger.quiet(&lt;s0&gt;'An info log message which is always logged.'&lt;/s0&gt;)
logger.error(&lt;s1&gt;'An error log message.'&lt;/s1&gt;)
logger.warn(&lt;s2&gt;'A warning log message.'&lt;/s2&gt;)
logger.lifecycle(&lt;s3&gt;'A lifecycle info log message.'&lt;/s3&gt;)
logger.info(&lt;s4&gt;'An info log message.'&lt;/s4&gt;)
logger.debug(&lt;s5&gt;'A debug log message.'&lt;/s5&gt;)
logger.trace(&lt;s6&gt;'A trace log message.'&lt;/s6&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T125915Z" creationid="msdx" creationdate="20141116T125915Z">
        <seg>logger.quiet(&lt;s0&gt;'An info log message which is always logged.'&lt;/s0&gt;)
logger.error(&lt;s1&gt;'An error log message.'&lt;/s1&gt;)
logger.warn(&lt;s2&gt;'A warning log message.'&lt;/s2&gt;)
logger.lifecycle(&lt;s3&gt;'A lifecycle info log message.'&lt;/s3&gt;)
logger.info(&lt;s4&gt;'An info log message.'&lt;/s4&gt;)
logger.debug(&lt;s5&gt;'A debug log message.'&lt;/s5&gt;)
logger.trace(&lt;s6&gt;'A trace log message.'&lt;/s6&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>logging.captureStandardOutput LogLevel.INFO</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T150935Z" creationid="msdx" creationdate="20141116T150935Z">
        <seg>logging.captureStandardOutput LogLevel.INFO</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>logging.captureStandardOutput LogLevel.INFO
println &lt;s0&gt;'A message which is logged at INFO level'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T150313Z" creationid="msdx" creationdate="20141116T150313Z">
        <seg>logging.captureStandardOutput LogLevel.INFO
println &lt;s0&gt;'A message which is logged at INFO level'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>logging.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T161648Z" creationid="msdx" creationdate="20141113T161648Z">
        <seg>logging.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>logging.html#logLevelCommandLineOptions</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T070959Z" creationid="msdx" creationdate="20141116T070959Z">
        <seg>logging.html#logLevelCommandLineOptions</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>logging.html#logLevels</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T063519Z" creationid="msdx" creationdate="20141116T063519Z">
        <seg>logging.html#logLevels</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>logging.html#sec:changing_what_gradle_logs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T030410Z" creationid="msdx" creationdate="20150501T030410Z">
        <seg>logging.html#sec:changing_what_gradle_logs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>logging.html#sec:choosing_a_log_level</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T030408Z" creationid="msdx" creationdate="20150501T030408Z">
        <seg>logging.html#sec:choosing_a_log_level</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>logging.html#sec:external_tools</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T030409Z" creationid="msdx" creationdate="20150501T030409Z">
        <seg>logging.html#sec:external_tools</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>logging.html#sec:sending_your_own_log_messages</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T030409Z" creationid="msdx" creationdate="20150501T030409Z">
        <seg>logging.html#sec:sending_your_own_log_messages</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>logging.html#stacktraces</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T071013Z" creationid="msdx" creationdate="20141116T071013Z">
        <seg>logging.html#stacktraces</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>m2compatible = true</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T111055Z" creationid="95" creationdate="20151006T111055Z">
        <seg>m2compatible = true</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>main {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T050712Z" creationid="msdx" creationdate="20141108T050712Z">
        <seg>main {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>main {}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160325T033434Z" creationid="haohang" creationdate="20160325T033434Z">
        <seg>main {}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>main {}
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160219T065432Z" creationid="haohang" creationdate="20160219T065432Z">
        <seg>main {}
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>main/java/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T083509Z" creationid="haohang" creationdate="20160726T083509Z">
        <seg>main/java/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>mainClassName = &lt;s0&gt;"org.gradle.sample.Main"&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150702T103935Z" creationid="haohang" creationdate="20150702T103935Z">
        <seg>mainClassName = &lt;s0&gt;"org.gradle.sample.Main"&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>main{</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150705T084609Z" creationid="haohang" creationdate="20150705T084609Z">
        <seg>main{</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>manifest</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083246Z" creationid="msdx" creationdate="20150428T083246Z">
        <seg>manifest</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>manifest = osgiManifest {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150526T064445Z" creationid="haohang" creationdate="20150526T064445Z">
        <seg>manifest = osgiManifest {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>manifest = project.manifest {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T145343Z" creationid="msdx" creationdate="20150428T145343Z">
        <seg>manifest = project.manifest {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>manifest {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T145224Z" creationid="msdx" creationdate="20150428T145224Z">
        <seg>manifest {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>manifest { &lt;s0&gt;// the manifest of the default jar is of type OsgiManifest&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150526T064438Z" creationid="haohang" creationdate="20150526T064438Z">
        <seg>manifest { &lt;s0&gt;// the manifest of the default jar is of type OsgiManifest&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>manufactured viewport for HTML img</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T150123Z" creationid="msdx" creationdate="20141105T150123Z">
        <seg>manufactured viewport for HTML img</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>maven</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104758Z" creationid="msdx" creationdate="20150428T104758Z">
        <seg>maven</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>maven {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150909T052927Z" creationid="haohang" creationdate="20150909T052927Z">
        <seg>maven {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>maven-publish</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104802Z" creationid="msdx" creationdate="20150428T104802Z">
        <seg>maven-publish</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>mavenCentral()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160722T091246Z" creationid="haohang" creationdate="20160722T091246Z">
        <seg>mavenCentral()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>mavenCentral()
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T095902Z" creationid="haohang" creationdate="20150807T095902Z">
        <seg>mavenCentral()
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>mavenCentral()
}

dependencies {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T065504Z" creationid="msdx" creationdate="20141030T065504Z">
        <seg>mavenCentral()
}

dependencies {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>mavenDeployer {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160104T154208Z" creationid="95" creationdate="20160104T154208Z">
        <seg>mavenDeployer {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>mavenLocal()
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T101038Z" creationid="haohang" creationdate="20150807T101038Z">
        <seg>mavenLocal()
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>maven_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104758Z" creationid="msdx" creationdate="20150428T104758Z">
        <seg>maven_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>maven_plugin.html#deployerConfig</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T134857Z" creationid="95" creationdate="20160105T134857Z">
        <seg>maven_plugin.html#deployerConfig</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>maven_plugin.html#sub:dependency_mapping</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151228T152803Z" creationid="95" creationdate="20151228T152803Z">
        <seg>maven_plugin.html#sub:dependency_mapping</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>maven_plugin.html#sub:installing_to_the_local_repository</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151228T152038Z" creationid="95" creationdate="20151228T152038Z">
        <seg>maven_plugin.html#sub:installing_to_the_local_repository</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>maven_plugin.html#sub:multiple_artifacts_per_project</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T143214Z" creationid="95" creationdate="20160106T143214Z">
        <seg>maven_plugin.html#sub:multiple_artifacts_per_project</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>maven_plugin.html#uploading_to_maven_repositories</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151226T093006Z" creationid="95" creationdate="20151226T093006Z">
        <seg>maven_plugin.html#uploading_to_maven_repositories</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>maven_plugin.html#wagonLibs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160104T154621Z" creationid="95" creationdate="20160104T154621Z">
        <seg>maven_plugin.html#wagonLibs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>memoryMaximumSize = &lt;s0&gt;'1g'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150430T160055Z" creationid="msdx" creationdate="20150430T160055Z">
        <seg>memoryMaximumSize = &lt;s0&gt;'1g'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>message = rootProject.producerMessage

task consume &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T072756Z" creationid="haohang" creationdate="20160718T072756Z">
        <seg>message = rootProject.producerMessage

task consume &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>messages/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T062257Z" creationid="haohang" creationdate="20160718T062257Z">
        <seg>messages/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>model {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160401T090258Z" creationid="haohang" creationdate="20160401T090258Z">
        <seg>model {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>module(&lt;s5&gt;'org.apache.ant:ant:1.9.3'&lt;/s5&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T080913Z" creationid="msdx" creationdate="20150429T080913Z">
        <seg>module(&lt;s5&gt;'org.apache.ant:ant:1.9.3'&lt;/s5&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>module(group: &lt;s2&gt;'org.apache.ant'&lt;/s2&gt;, name: &lt;s3&gt;'ant'&lt;/s3&gt;, version: &lt;s4&gt;'1.9.3'&lt;/s4&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T091426Z" creationid="haohang" creationdate="20150801T091426Z">
        <seg>module(group: &lt;s2&gt;'org.apache.ant'&lt;/s2&gt;, name: &lt;s3&gt;'ant'&lt;/s3&gt;, version: &lt;s4&gt;'1.9.3'&lt;/s4&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>module.dependencies*.exported = true</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T074614Z" creationid="haohang" creationdate="20150625T074614Z">
        <seg>module.dependencies*.exported = true</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>module.dependencies.clear()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T073923Z" creationid="haohang" creationdate="20150625T073923Z">
        <seg>module.dependencies.clear()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>moreLibs
}

repositories {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T093817Z" creationid="msdx" creationdate="20150503T093817Z">
        <seg>moreLibs
}

repositories {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>moreLibs &lt;s10&gt;":otherLib:1.0"&lt;/s10&gt;
}

war {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T093820Z" creationid="msdx" creationdate="20150503T093820Z">
        <seg>moreLibs &lt;s10&gt;":otherLib:1.0"&lt;/s10&gt;
}

war {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>more_about_tasks.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T092518Z" creationid="msdx" creationdate="20141109T092518Z">
        <seg>more_about_tasks.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>more_about_tasks.html#N10CBF</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T165025Z" creationid="msdx" creationdate="20141109T165025Z">
        <seg>more_about_tasks.html#N10CBF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>more_about_tasks.html#N10CF6</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T030352Z" creationid="msdx" creationdate="20150501T030352Z">
        <seg>more_about_tasks.html#N10CBF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>more_about_tasks.html#N10E91</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T030355Z" creationid="msdx" creationdate="20150501T030355Z">
        <seg>more_about_tasks.html#N10CBF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>more_about_tasks.html#N10EA3</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T030356Z" creationid="msdx" creationdate="20150501T030356Z">
        <seg>more_about_tasks.html#N10CBF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>more_about_tasks.html#N10EC0</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T030357Z" creationid="msdx" creationdate="20150501T030357Z">
        <seg>more_about_tasks.html#N10CBF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>more_about_tasks.html#N10F94</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T030357Z" creationid="msdx" creationdate="20150501T030357Z">
        <seg>more_about_tasks.html#N10CBF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>more_about_tasks.html#N10FC0</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T030358Z" creationid="msdx" creationdate="20150501T030358Z">
        <seg>more_about_tasks.html#N10CBF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>more_about_tasks.html#sec:adding_dependencies_to_tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T030354Z" creationid="msdx" creationdate="20150501T030354Z">
        <seg>more_about_tasks.html#sec:adding_dependencies_to_tasks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>more_about_tasks.html#sec:configuring_tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T030353Z" creationid="msdx" creationdate="20150501T030353Z">
        <seg>more_about_tasks.html#sec:configuring_tasks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>more_about_tasks.html#sec:ordering_tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T030355Z" creationid="msdx" creationdate="20150501T030355Z">
        <seg>more_about_tasks.html#sec:ordering_tasks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>more_about_tasks.html#sec:task_inputs_outputs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150703T100435Z" creationid="haohang" creationdate="20150703T100435Z">
        <seg>more_about_tasks.html#sec:task_inputs_outputs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>more_about_tasks.html#sec:the_idea_behind_gradle_tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T030359Z" creationid="msdx" creationdate="20150501T030359Z">
        <seg>more_about_tasks.html#sec:the_idea_behind_gradle_tasks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>more_about_tasks.html#sec:up_to_date_checks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T131127Z" creationid="msdx" creationdate="20141113T131127Z">
        <seg>more_about_tasks.html#sec:up_to_date_checks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>mountains.mountain.each { mountain -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T060326Z" creationid="msdx" creationdate="20141111T060326Z">
        <seg>mountains.mountain.each { mountain -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>multi_project_builds.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T092535Z" creationid="haohang" creationdate="20150801T092535Z">
        <seg>multi_project_builds.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>multi_project_builds.html#javadependencies_2</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T094809Z" creationid="haohang" creationdate="20160726T094809Z">
        <seg>multi_project_builds.html#javadependencies_2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>multi_project_builds.html#sec:configuration_on_demand</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141120T052430Z" creationid="msdx" creationdate="20141120T052430Z">
        <seg>multi_project_builds.html#sec:configuration_on_demand</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>multi_project_builds.html#sec:cross_project_configuration</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T093151Z" creationid="haohang" creationdate="20160726T093151Z">
        <seg>multi_project_builds.html#sec:cross_project_configuration</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>multi_project_builds.html#sec:decoupled_projects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160522T121412Z" creationid="95" creationdate="20160522T121412Z">
        <seg>multi_project_builds.html#sec:decoupled_projects</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>multi_project_builds.html#sec:dependencies_which_dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160530T144447Z" creationid="95" creationdate="20160530T144447Z">
        <seg>multi_project_builds.html#sec:dependencies_which_dependencies</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>multi_project_builds.html#sec:project_and_task_paths</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160715T091100Z" creationid="haohang" creationdate="20160715T091100Z">
        <seg>multi_project_builds.html#sec:project_and_task_paths</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>multi_project_builds.html#sec:running_partial_build_from_the_root</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T075358Z" creationid="haohang" creationdate="20160519T075358Z">
        <seg>multi_project_builds.html#sec:running_partial_build_from_the_root</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>n/a</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151228T152801Z" creationid="95" creationdate="20151228T152801Z">
        <seg>n/a</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>name</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T044233Z" creationid="msdx" creationdate="20141108T044233Z">
        <seg>name</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>name &lt;s0&gt;"fileRepo"&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151226T092021Z" creationid="95" creationdate="20151226T092021Z">
        <seg>name &lt;s0&gt;"fileRepo"&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>name &lt;s0&gt;'localRepository'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T133449Z" creationid="95" creationdate="20151006T133449Z">
        <seg>name &lt;s0&gt;'localRepository'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>name &lt;s1&gt;'The Apache Software License, Version 2.0'&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160104T152817Z" creationid="95" creationdate="20160104T152817Z">
        <seg>name &lt;s1&gt;'The Apache Software License, Version 2.0'&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>name &lt;s1&gt;'my-artifact'&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151226T091159Z" creationid="95" creationdate="20151226T091159Z">
        <seg>name &lt;s1&gt;'my-artifact'&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>name = &lt;s1&gt;'overwrittenSpecialOsgiName'&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150526T064439Z" creationid="haohang" creationdate="20150526T064439Z">
        <seg>name = &lt;s1&gt;'overwrittenSpecialOsgiName'&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>native language plugins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="Administrator" changedate="20150425T040444Z" creationid="Administrator" creationdate="20150425T040444Z">
        <seg>本机语言插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>nativeBinaries.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141209T073741Z" creationid="msdx" creationdate="20141209T073741Z">
        <seg>nativeBinaries.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>nativeBinaries.html#native_binaries:build_type</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160401T064011Z" creationid="haohang" creationdate="20160401T064011Z">
        <seg>nativeBinaries.html#native_binaries:build_type</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>nativeBinaries.html#native_binaries:flavor</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160401T064013Z" creationid="haohang" creationdate="20160401T064013Z">
        <seg>nativeBinaries.html#native_binaries:flavor</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>nativeBinaries.html#native_binaries:platform</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160401T064012Z" creationid="haohang" creationdate="20160401T064012Z">
        <seg>nativeBinaries.html#native_binaries:platform</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>nativeBinaries.html#native_binaries:tool_chain</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160405T034034Z" creationid="haohang" creationdate="20160405T034034Z">
        <seg>nativeBinaries.html#native_binaries:tool_chain</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>no logging options</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T102909Z" creationid="msdx" creationdate="20141116T102909Z">
        <seg>没有日志选项</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>notify-send</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T065616Z" creationid="haohang" creationdate="20150628T065616Z">
        <seg>notify-send</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>null</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T160253Z" creationid="msdx" creationdate="20141113T160253Z">
        <seg>null</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>objective-c</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141209T074139Z" creationid="msdx" creationdate="20141209T074139Z">
        <seg>objective-c</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>objective-cpp</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141209T074200Z" creationid="msdx" creationdate="20141209T074200Z">
        <seg>objective-cpp</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>operators {}
}
binaries.withType(TestSuiteExecutableBinary) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T151341Z" creationid="95" creationdate="20160504T151341Z">
        <seg>operators {}
}
binaries.withType(TestSuiteExecutableBinary) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>orca-1.0 -&gt; seal-1.0</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T034314Z" creationid="haohang" creationdate="20150807T034314Z">
        <seg>orca-1.0 -&gt; seal-1.0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>org.apache.maven.artifact.ant.Authentication</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T141908Z" creationid="95" creationdate="20160105T141908Z">
        <seg>org.apache.maven.artifact.ant.Authentication</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>org.apache.maven.artifact.ant.Proxy</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T141915Z" creationid="95" creationdate="20160105T141915Z">
        <seg>org.apache.maven.artifact.ant.Proxy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>org.apache.maven.artifact.ant.RemoteRepository</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T141904Z" creationid="95" creationdate="20160105T141904Z">
        <seg>org.apache.maven.artifact.ant.RemoteRepository</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>org.apache.maven.artifact.ant.RepositoryPolicy</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T141910Z" creationid="95" creationdate="20160105T141910Z">
        <seg>org.apache.maven.artifact.ant.RepositoryPolicy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>org.apache.maven.wagon:wagon-ftp:2.2</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T141834Z" creationid="95" creationdate="20160105T141834Z">
        <seg>org.apache.maven.wagon:wagon-ftp:2.2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>org.apache.maven.wagon:wagon-http:2.2</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T141829Z" creationid="95" creationdate="20160105T141829Z">
        <seg>org.apache.maven.wagon:wagon-http:2.2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>org.apache.maven.wagon:wagon-ssh-external:2.2</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T141832Z" creationid="95" creationdate="20160105T141832Z">
        <seg>org.apache.maven.wagon:wagon-ssh-external:2.2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>org.apache.maven.wagon:wagon-ssh:2.2</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T141831Z" creationid="95" creationdate="20160105T141831Z">
        <seg>org.apache.maven.wagon:wagon-ssh:2.2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>org.apache.maven.wagon:wagon-webdav:1.0-beta-2</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T141835Z" creationid="95" creationdate="20160105T141835Z">
        <seg>org.apache.maven.wagon:wagon-webdav:1.0-beta-2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>org.gradle.configureondemand</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141120T052427Z" creationid="msdx" creationdate="20141120T052427Z">
        <seg>org.gradle.configureondemand</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>org.gradle.daemon</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141119T153525Z" creationid="msdx" creationdate="20141119T153525Z">
        <seg>org.gradle.daemon</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>org.gradle.java.home</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141120T051200Z" creationid="msdx" creationdate="20141120T051200Z">
        <seg>org.gradle.java.home</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>org.gradle.jvmargs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141120T051940Z" creationid="msdx" creationdate="20141120T051940Z">
        <seg>org.gradle.jvmargs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>org.gradle.parallel</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141120T053747Z" creationid="msdx" creationdate="20141120T053747Z">
        <seg>org.gradle.parallel</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>org.gradle.plugins.ear.descriptor.DeploymentDescriptor</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T141727Z" creationid="msdx" creationdate="20150504T141727Z">
        <seg>org.gradle.plugins.ear.descriptor.DeploymentDescriptor</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>org/gradle/sample/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160722T091208Z" creationid="haohang" creationdate="20160722T091208Z">
        <seg>org/gradle/sample/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>org/gradle/sample/services/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T083510Z" creationid="haohang" creationdate="20160726T083510Z">
        <seg>org/gradle/sample/services/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>org/gradle/sample/shared/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T083514Z" creationid="haohang" creationdate="20160726T083514Z">
        <seg>org/gradle/sample/shared/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>organizing_build_logic.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T024720Z" creationid="haohang" creationdate="20160519T024720Z">
        <seg>organizing_build_logic.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>organizing_build_logic.html#sec:external_dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141122T162843Z" creationid="msdx" creationdate="20141122T162843Z">
        <seg>organizing_build_logic.html#sec:external_dependencies</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>osgi</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104759Z" creationid="msdx" creationdate="20150428T104759Z">
        <seg>osgi</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>osgiManifest()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150526T004705Z" creationid="haohang" creationdate="20150526T004705Z">
        <seg>osgiManifest()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>osgiManifest(Closure cl)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150526T004718Z" creationid="haohang" creationdate="20150526T004718Z">
        <seg>osgiManifest(Closure cl)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>osgi_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104759Z" creationid="msdx" creationdate="20150428T104759Z">
        <seg>osgi_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>other.gradle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T152440Z" creationid="msdx" creationdate="20141109T152440Z">
        <seg>other.gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>otherConf group: &lt;s1&gt;'org.gradle.test.classifiers'&lt;/s1&gt;, name: &lt;s2&gt;'service'&lt;/s2&gt;, version: &lt;s3&gt;'1.0'&lt;/s3&gt;, classifier: &lt;s4&gt;'jdk14'&lt;/s4&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150731T100900Z" creationid="haohang" creationdate="20150731T100900Z">
        <seg>otherConf group: &lt;s1&gt;'org.gradle.test.classifiers'&lt;/s1&gt;, name: &lt;s2&gt;'service'&lt;/s2&gt;, version: &lt;s3&gt;'1.0'&lt;/s3&gt;, classifier: &lt;s4&gt;'jdk14'&lt;/s4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>output</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083250Z" creationid="msdx" creationdate="20150428T083250Z">
        <seg>output</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>output.classesDir</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083251Z" creationid="msdx" creationdate="20150428T083251Z">
        <seg>output.classesDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>output.resourcesDir</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083251Z" creationid="msdx" creationdate="20150428T083251Z">
        <seg>output.resourcesDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>outputs.dir &lt;s1&gt;'some-dir'&lt;/s1&gt; &lt;s2&gt;// up-to-date check for outputs&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T134159Z" creationid="msdx" creationdate="20141113T134159Z">
        <seg>outputs.dir &lt;s1&gt;'some-dir'&lt;/s1&gt; &lt;s2&gt;// up-to-date check for outputs&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>outputs.dir destDir</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T061314Z" creationid="msdx" creationdate="20141111T061314Z">
        <seg>outputs.dir destDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>outputs.dir docs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150703T100424Z" creationid="haohang" creationdate="20150703T100424Z">
        <seg>outputs.dir docs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>overview.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T161849Z" creationid="msdx" creationdate="20141109T161849Z">
        <seg>overview.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>overview.html#sec:special_feature_of_gradle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T161853Z" creationid="msdx" creationdate="20141109T161853Z">
        <seg>overview.html#sec:special_feature_of_gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>overview.html#sec:why_groovy</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T161958Z" creationid="msdx" creationdate="20141109T161958Z">
        <seg>overview.html#sec:why_groovy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>packaging</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T144038Z" creationid="95" creationdate="20160105T144038Z">
        <seg>packaging</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>passing</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T151334Z" creationid="95" creationdate="20160504T151334Z">
        <seg>passing</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>password &lt;s1&gt;'password'&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150909T053441Z" creationid="haohang" creationdate="20150909T053441Z">
        <seg>password &lt;s1&gt;'password'&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>password &lt;s2&gt;'password'&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T133237Z" creationid="95" creationdate="20151006T133237Z">
        <seg>password &lt;s2&gt;'password'&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>password &lt;s3&gt;"pw"&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151226T092054Z" creationid="95" creationdate="20151226T092054Z">
        <seg>password &lt;s3&gt;"pw"&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>password = &lt;s1&gt;'myPassword'&lt;/s1&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T063506Z" creationid="haohang" creationdate="20150628T063506Z">
        <seg>password = &lt;s1&gt;'myPassword'&lt;/s1&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>password = &lt;s4&gt;"very clever"&lt;/s4&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150510T143652Z" creationid="msdx" creationdate="20150510T143652Z">
        <seg>password = &lt;s4&gt;"very clever"&lt;/s4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>password = &lt;s5&gt;"very clever"&lt;/s5&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T091240Z" creationid="msdx" creationdate="20150512T091240Z">
        <seg>password = &lt;s4&gt;"very clever"&lt;/s4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>path</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T044249Z" creationid="msdx" creationdate="20141108T044249Z">
        <seg>path</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>path.list().each {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T011228Z" creationid="msdx" creationdate="20141116T011228Z">
        <seg>path.list().each {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>platforms {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160405T034022Z" creationid="haohang" creationdate="20160405T034022Z">
        <seg>platforms {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>plugin {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150710T012934Z" creationid="haohang" creationdate="20150710T012934Z">
        <seg>plugin {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>plugins.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141119T031528Z" creationid="msdx" creationdate="20141119T031528Z">
        <seg>plugins.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>plugins.html#N1185A</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131420Z" creationid="msdx" creationdate="20150509T131420Z">
        <seg>plugins.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>plugins.html#N118FD</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131513Z" creationid="msdx" creationdate="20150509T131513Z">
        <seg>plugins.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>plugins.html#sec:using_plugins</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131414Z" creationid="msdx" creationdate="20150509T131414Z">
        <seg>plugins.html#sec:using_plugins</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>plugins.html#sub:more_about_convention_objects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083234Z" creationid="msdx" creationdate="20150428T083234Z">
        <seg>plugins.html#sub:more_about_convention_objects</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>pmd</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104855Z" creationid="msdx" creationdate="20150428T104855Z">
        <seg>pmd</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>pmd
}

dependencies {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T060533Z" creationid="msdx" creationdate="20141116T060533Z">
        <seg>pmd
}

dependencies {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>pmd group: &lt;s0&gt;'pmd'&lt;/s0&gt;, name: &lt;s1&gt;'pmd'&lt;/s1&gt;, version: &lt;s2&gt;'4.2.5'&lt;/s2&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T060538Z" creationid="msdx" creationdate="20141116T060538Z">
        <seg>pmd group: &lt;s0&gt;'pmd'&lt;/s0&gt;, name: &lt;s1&gt;'pmd'&lt;/s1&gt;, version: &lt;s2&gt;'4.2.5'&lt;/s2&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>pmd&lt;e0&gt;&lt;c1&gt;SourceSet&lt;/c1&gt;&lt;/e0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T135558Z" creationid="msdx" creationdate="20150505T135558Z">
        <seg>pmd&lt;e0&gt;&lt;c1&gt;SourceSet&lt;/c1&gt;&lt;/e0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>pmdMain</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T135543Z" creationid="msdx" creationdate="20150505T135543Z">
        <seg>pmdMain</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>pmdTest</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150505T135552Z" creationid="msdx" creationdate="20150505T135552Z">
        <seg>pmdTest</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>pmd_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104854Z" creationid="msdx" creationdate="20150428T104854Z">
        <seg>pmd_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>pom {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160104T152812Z" creationid="95" creationdate="20160104T152812Z">
        <seg>pom {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>pom(&lt;s5&gt;'api'&lt;/s5&gt;).version = &lt;s6&gt;'mySpecialMavenVersion'&lt;/s6&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T144211Z" creationid="95" creationdate="20160106T144211Z">
        <seg>pom(&lt;s5&gt;'api'&lt;/s5&gt;).version = &lt;s6&gt;'mySpecialMavenVersion'&lt;/s6&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>pom.artifactId = &lt;s1&gt;'myName'&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T143458Z" creationid="95" creationdate="20160106T143458Z">
        <seg>pom.artifactId = &lt;s1&gt;'myName'&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>pom.artifactId = &lt;s2&gt;'myMavenName'&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T142734Z" creationid="95" creationdate="20160106T142734Z">
        <seg>pom.artifactId = &lt;s2&gt;'myMavenName'&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>pom.dependencies.find {dep -&gt; dep.groupId == &lt;s0&gt;'group3'&lt;/s0&gt; &amp;&amp; dep.artifactId == &lt;s1&gt;'runtime'&lt;/s1&gt; }.optional = true
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T143213Z" creationid="95" creationdate="20160106T143213Z">
        <seg>pom.dependencies.find {dep -&gt; dep.groupId == &lt;s0&gt;'group3'&lt;/s0&gt; &amp;&amp; dep.artifactId == &lt;s1&gt;'runtime'&lt;/s1&gt; }.optional = true
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>pom.project {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T143106Z" creationid="95" creationdate="20160106T143106Z">
        <seg>pom.project {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>pom.version = &lt;s0&gt;'1.0Maven'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T143453Z" creationid="95" creationdate="20160106T143453Z">
        <seg>pom.version = &lt;s0&gt;'1.0Maven'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>pom.version = &lt;s1&gt;'1.0Maven'&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T142733Z" creationid="95" creationdate="20160106T142733Z">
        <seg>pom.version = &lt;s1&gt;'1.0Maven'&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>pomDir</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151228T152713Z" creationid="95" creationdate="20151228T152713Z">
        <seg>pomDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>pomDirName</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151228T152522Z" creationid="95" creationdate="20151228T152522Z">
        <seg>pomDirName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>poms</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151228T152523Z" creationid="95" creationdate="20151228T152523Z">
        <seg>poms</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>port</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T132322Z" creationid="msdx" creationdate="20150506T132322Z">
        <seg>port</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>pos = &lt;s0&gt;new&lt;/s0&gt; java.text.FieldPosition(&lt;s1&gt;10&lt;/s1&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T153041Z" creationid="msdx" creationdate="20141109T153041Z">
        <seg>pos = &lt;s0&gt;new&lt;/s0&gt; java.text.FieldPosition(&lt;s1&gt;10&lt;/s1&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>pos = configure(&lt;s0&gt;new&lt;/s0&gt; java.text.FieldPosition(&lt;s1&gt;10&lt;/s1&gt;)) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T152807Z" creationid="msdx" creationdate="20141109T152807Z">
        <seg>pos = configure(&lt;s0&gt;new&lt;/s0&gt; java.text.FieldPosition(&lt;s1&gt;10&lt;/s1&gt;)) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s0&gt;"- The weight of my species in summer is twice as heavy as all human beings."&lt;/s0&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160527T163310Z" creationid="95" creationdate="20160527T163310Z">
        <seg>println &lt;s0&gt;"- The weight of my species in summer is twice as heavy as all human beings."&lt;/s0&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s0&gt;"Hello, world!"&lt;/s0&gt;
}  

helloWorld.doLast {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T063535Z" creationid="haohang" creationdate="20150628T063535Z">
        <seg>println &lt;s0&gt;"Hello, world!"&lt;/s0&gt;
}  

helloWorld.doLast {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s0&gt;"Producing message:"&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T062405Z" creationid="haohang" creationdate="20160718T062405Z">
        <seg>println &lt;s0&gt;"Producing message:"&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s0&gt;"configuring $project"&lt;/s0&gt;
task hello &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T152441Z" creationid="msdx" creationdate="20141109T152441Z">
        <seg>println &lt;s0&gt;"configuring $project"&lt;/s0&gt;
task hello &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s0&gt;"hello"&lt;/s0&gt;
}

task(copy, type: Copy) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T021257Z" creationid="msdx" creationdate="20141110T021257Z">
        <seg>println &lt;s0&gt;"hello"&lt;/s0&gt;
}

task(copy, type: Copy) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s0&gt;'A message which is logged at QUIET level'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T122540Z" creationid="msdx" creationdate="20141116T122540Z">
        <seg>println &lt;s0&gt;'A message which is logged at QUIET level'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s0&gt;'A task message which is logged at INFO level'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T150936Z" creationid="msdx" creationdate="20141116T150936Z">
        <seg>println &lt;s0&gt;'A task message which is logged at INFO level'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s0&gt;'This is executed during the configuration phase.'&lt;/s0&gt;

task configured {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T025307Z" creationid="haohang" creationdate="20160519T025307Z">
        <seg>println &lt;s0&gt;'This is executed during the configuration phase.'&lt;/s0&gt;

task configured {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s0&gt;'This is executed during the initialization phase.'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T025306Z" creationid="haohang" creationdate="20160519T025306Z">
        <seg>println &lt;s0&gt;'This is executed during the initialization phase.'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s0&gt;'This should not be printed if the task is disabled.'&lt;/s0&gt;
}
disableMe.enabled = false</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T055744Z" creationid="msdx" creationdate="20141111T055744Z">
        <seg>println &lt;s0&gt;'This should not be printed if the task is disabled.'&lt;/s0&gt;
}
disableMe.enabled = false</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s0&gt;'We are doing the compile.'&lt;/s0&gt;
}

compile.doFirst {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T054822Z" creationid="msdx" creationdate="20141111T054822Z">
        <seg>println &lt;s0&gt;'We are doing the compile.'&lt;/s0&gt;
}

compile.doFirst {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s0&gt;'hello world'&lt;/s0&gt;
}

hello.onlyIf { !project.hasProperty(&lt;s1&gt;'skipHello'&lt;/s1&gt;) }</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T021016Z" creationid="msdx" creationdate="20141111T021016Z">
        <seg>println &lt;s0&gt;'hello world'&lt;/s0&gt;
}

hello.onlyIf { !project.hasProperty(&lt;s1&gt;'skipHello'&lt;/s1&gt;) }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s0&gt;'taskX'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T070351Z" creationid="msdx" creationdate="20141111T070351Z">
        <seg>println &lt;s0&gt;'taskX'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s0&gt;'taskX'&lt;/s0&gt;
}

task taskY &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T122607Z" creationid="msdx" creationdate="20141110T122607Z">
        <seg>println &lt;s0&gt;'taskX'&lt;/s0&gt;
}

task taskY &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s0&gt;'taskX'&lt;/s0&gt;
}

taskX.dependsOn {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T123904Z" creationid="msdx" creationdate="20141110T123904Z">
        <seg>println &lt;s0&gt;'taskX'&lt;/s0&gt;
}

taskX.dependsOn {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s0&gt;'taskX'&lt;/s0&gt;
}
task taskY &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T012835Z" creationid="msdx" creationdate="20141111T012835Z">
        <seg>println &lt;s0&gt;'taskX'&lt;/s0&gt;
}
task taskY &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s11&gt;'build completed'&lt;/s11&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T154819Z" creationid="msdx" creationdate="20141116T154819Z">
        <seg>println &lt;s11&gt;'build completed'&lt;/s11&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s1&gt;"Adding test task to $project"&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T125505Z" creationid="95" creationdate="20160521T125505Z">
        <seg>println &lt;s1&gt;"Adding test task to $project"&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s1&gt;"Evaluation of $project FAILED"&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T132217Z" creationid="95" creationdate="20160521T132217Z">
        <seg>println &lt;s1&gt;"Evaluation of $project FAILED"&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s1&gt;"hello"&lt;/s1&gt;
}

task(&lt;s2&gt;'copy'&lt;/s2&gt;, type: Copy) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T022746Z" creationid="msdx" creationdate="20141110T022746Z">
        <seg>println &lt;s1&gt;"hello"&lt;/s1&gt;
}

task(&lt;s2&gt;'copy'&lt;/s2&gt;, type: Copy) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s1&gt;"hello"&lt;/s1&gt;
}

tasks.create(name: &lt;s2&gt;'copy'&lt;/s2&gt;, type: Copy) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T023139Z" creationid="msdx" creationdate="20141110T023139Z">
        <seg>println &lt;s1&gt;"hello"&lt;/s1&gt;
}

tasks.create(name: &lt;s2&gt;'copy'&lt;/s2&gt;, type: Copy) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s1&gt;'20 nautical miles'&lt;/s1&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160715T075948Z" creationid="haohang" creationdate="20160715T075948Z">
        <seg>println &lt;s1&gt;'20 nautical miles'&lt;/s1&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s1&gt;'5 nautical miles'&lt;/s1&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160715T075955Z" creationid="haohang" creationdate="20160715T075955Z">
        <seg>println &lt;s1&gt;'5 nautical miles'&lt;/s1&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s1&gt;'Hello, from Gradle'&lt;/s1&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T061010Z" creationid="msdx" creationdate="20141116T061010Z">
        <seg>println &lt;s1&gt;'Hello, from Gradle'&lt;/s1&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s1&gt;'This is also executed during the configuration phase.'&lt;/s1&gt;
}

task test &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T025319Z" creationid="haohang" creationdate="20160519T025319Z">
        <seg>println &lt;s1&gt;'This is also executed during the configuration phase.'&lt;/s1&gt;
}

task test &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s1&gt;'hello from other script'&lt;/s1&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T152441Z" creationid="msdx" creationdate="20141109T152441Z">
        <seg>println &lt;s1&gt;'hello from other script'&lt;/s1&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s1&gt;'taskY'&lt;/s1&gt;
}

taskX.dependsOn taskY</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T122608Z" creationid="msdx" creationdate="20141110T122608Z">
        <seg>println &lt;s1&gt;'taskY'&lt;/s1&gt;
}

taskX.dependsOn taskY</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s1&gt;'taskY'&lt;/s1&gt;
}

taskX.finalizedBy taskY</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T070207Z" creationid="msdx" creationdate="20141111T070207Z">
        <seg>println &lt;s1&gt;'taskY'&lt;/s1&gt;
}

taskX.finalizedBy taskY</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s1&gt;'taskY'&lt;/s1&gt;
}
task taskZ &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T014953Z" creationid="msdx" creationdate="20141111T014953Z">
        <seg>println &lt;s1&gt;'taskY'&lt;/s1&gt;
}
task taskZ &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s1&gt;'taskY'&lt;/s1&gt;
}
taskY.mustRunAfter taskX</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T012836Z" creationid="msdx" creationdate="20141111T012836Z">
        <seg>println &lt;s1&gt;'taskY'&lt;/s1&gt;
}
taskY.mustRunAfter taskX</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s1&gt;'taskY'&lt;/s1&gt;
}
taskY.shouldRunAfter taskX</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T012914Z" creationid="msdx" creationdate="20141111T012914Z">
        <seg>println &lt;s1&gt;'taskY'&lt;/s1&gt;
}
taskY.shouldRunAfter taskX</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s2&gt;"Contents of $srcDir.name"&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T160739Z" creationid="msdx" creationdate="20141112T160739Z">
        <seg>println &lt;s2&gt;"Contents of $srcDir.name"&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s2&gt;'This is executed during the execution phase.'&lt;/s2&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T025338Z" creationid="haohang" creationdate="20160519T025338Z">
        <seg>println &lt;s2&gt;'This is executed during the execution phase.'&lt;/s2&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s2&gt;'compiling classes'&lt;/s2&gt;
}

task list(dependsOn: configurations.compile) &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T094500Z" creationid="haohang" creationdate="20150801T094500Z">
        <seg>println &lt;s2&gt;'compiling classes'&lt;/s2&gt;
}

task list(dependsOn: configurations.compile) &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s2&gt;'lib1'&lt;/s2&gt;
}

task lib2 &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T123905Z" creationid="msdx" creationdate="20141110T123905Z">
        <seg>println &lt;s2&gt;'lib1'&lt;/s2&gt;
}

task lib2 &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s2&gt;'taskX'&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T122313Z" creationid="msdx" creationdate="20141110T122313Z">
        <seg>println &lt;s2&gt;'taskX'&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s2&gt;'taskZ'&lt;/s2&gt;
}
taskX.dependsOn taskY
taskY.dependsOn taskZ
taskZ.shouldRunAfter taskX</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T014956Z" creationid="msdx" creationdate="20141111T014956Z">
        <seg>println &lt;s2&gt;'taskZ'&lt;/s2&gt;
}
taskX.dependsOn taskY
taskY.dependsOn taskZ
taskZ.shouldRunAfter taskX</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s3&gt;"- I'm the largest animal that has ever lived on this planet."&lt;/s3&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160527T162902Z" creationid="95" creationdate="20160527T162902Z">
        <seg>println &lt;s3&gt;"- I'm the largest animal that has ever lived on this planet."&lt;/s3&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s3&gt;"Evaluation of $project succeeded"&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T132218Z" creationid="95" creationdate="20160521T132218Z">
        <seg>println &lt;s3&gt;"Evaluation of $project succeeded"&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s3&gt;"Pinging: "&lt;/s3&gt; + (taskName - &lt;s4&gt;'ping'&lt;/s4&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T065004Z" creationid="msdx" creationdate="20141111T065004Z">
        <seg>println &lt;s3&gt;"Pinging: "&lt;/s3&gt; + (taskName - &lt;s4&gt;'ping'&lt;/s4&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s3&gt;"Running tests for $project"&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T125516Z" creationid="95" creationdate="20160521T125516Z">
        <seg>println &lt;s3&gt;"Running tests for $project"&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s3&gt;"Transforming source file."&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T060324Z" creationid="msdx" creationdate="20141111T060324Z">
        <seg>println &lt;s3&gt;"Transforming source file."&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s3&gt;"classpath = ${configurations.compile.collect {File file -&gt; file.name}}"&lt;/s3&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T094503Z" creationid="haohang" creationdate="20150801T094503Z">
        <seg>println &lt;s3&gt;"classpath = ${configurations.compile.collect {File file -&gt; file.name}}"&lt;/s3&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s3&gt;"executing $task ..."&lt;/s3&gt;
}

gradle.taskGraph.afterTask { Task task, TaskState state -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T140116Z" creationid="95" creationdate="20160521T140116Z">
        <seg>println &lt;s3&gt;"executing $task ..."&lt;/s3&gt;
}

gradle.taskGraph.afterTask { Task task, TaskState state -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s3&gt;'- I love to spend time in the arctic waters.'&lt;/s3&gt; }</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160530T144439Z" creationid="95" creationdate="20160530T144439Z">
        <seg>println &lt;s3&gt;'- I love to spend time in the arctic waters.'&lt;/s3&gt; }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s3&gt;'hello from GreetingTask'&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T145743Z" creationid="95" creationdate="20160814T145743Z">
        <seg>println &lt;s3&gt;'hello from GreetingTask'&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s3&gt;'lib2'&lt;/s3&gt;
}

task notALib &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T123906Z" creationid="msdx" creationdate="20141110T123906Z">
        <seg>println &lt;s3&gt;'lib2'&lt;/s3&gt;
}

task notALib &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s3&gt;'taskY'&lt;/s3&gt;
}

taskX.finalizedBy taskY</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T070353Z" creationid="msdx" creationdate="20141111T070353Z">
        <seg>println &lt;s3&gt;'taskY'&lt;/s3&gt;
}

taskX.finalizedBy taskY</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s4&gt;"Contents of $srcDir.name"&lt;/s4&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T160741Z" creationid="msdx" creationdate="20141112T160741Z">
        <seg>println &lt;s4&gt;"Contents of $srcDir.name"&lt;/s4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s4&gt;'notALib'&lt;/s4&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T123906Z" creationid="msdx" creationdate="20141110T123906Z">
        <seg>println &lt;s4&gt;'notALib'&lt;/s4&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s4&gt;'taskY'&lt;/s4&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T122319Z" creationid="msdx" creationdate="20141110T122319Z">
        <seg>println &lt;s4&gt;'taskY'&lt;/s4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s5&gt;"FAILED"&lt;/s5&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T140117Z" creationid="95" creationdate="20160521T140117Z">
        <seg>println &lt;s5&gt;"FAILED"&lt;/s5&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s5&gt;'The class directory exists.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T093718Z" creationid="msdx" creationdate="20141109T093718Z">
        <seg>println &lt;s5&gt;'The class directory exists.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s6&gt;"$element.relativePath =&gt; $element.file"&lt;/s6&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T120401Z" creationid="msdx" creationdate="20141113T120401Z">
        <seg>println &lt;s6&gt;"$element.relativePath =&gt; $element.file"&lt;/s6&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s6&gt;"[$task.name]"&lt;/s6&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T154817Z" creationid="msdx" creationdate="20141116T154817Z">
        <seg>println &lt;s6&gt;"[$task.name]"&lt;/s6&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s6&gt;'I am not affected'&lt;/s6&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T055252Z" creationid="msdx" creationdate="20141111T055252Z">
        <seg>println &lt;s6&gt;'I am not affected'&lt;/s6&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s7&gt;"done"&lt;/s7&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T140124Z" creationid="95" creationdate="20160521T140124Z">
        <seg>println &lt;s7&gt;"done"&lt;/s7&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println System.properties[&lt;s0&gt;'system'&lt;/s0&gt;]
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T151105Z" creationid="msdx" creationdate="20141109T151105Z">
        <seg>println System.properties[&lt;s0&gt;'system'&lt;/s0&gt;]
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println ant.antProp
println ant.properties.antProp
println ant.properties[&lt;s0&gt;'antProp'&lt;/s0&gt;]</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T062233Z" creationid="msdx" creationdate="20141116T062233Z">
        <seg>println ant.antProp
println ant.properties.antProp
println ant.properties[&lt;s0&gt;'antProp'&lt;/s0&gt;]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println ant.references.antPath
println ant.references[&lt;s0&gt;'antPath'&lt;/s0&gt;]</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T062720Z" creationid="msdx" creationdate="20141116T062720Z">
        <seg>println ant.references.antPath
println ant.references[&lt;s0&gt;'antPath'&lt;/s0&gt;]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println commandLineProjectProp</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T151100Z" creationid="msdx" creationdate="20141109T151100Z">
        <seg>println commandLineProjectProp</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println conf2ScopeMappings.mappings
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T145331Z" creationid="95" creationdate="20160106T145331Z">
        <seg>println conf2ScopeMappings.mappings
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println configurations.compile.name
println configurations[&lt;s0&gt;'compile'&lt;/s0&gt;].name</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T075910Z" creationid="haohang" creationdate="20150722T075910Z">
        <seg>println configurations.compile.name
println configurations[&lt;s0&gt;'compile'&lt;/s0&gt;].name</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println dep.name</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T040602Z" creationid="haohang" creationdate="20150807T040602Z">
        <seg>println dep.name</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println emailNotification</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150710T012940Z" creationid="haohang" creationdate="20150710T012940Z">
        <seg>println emailNotification</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println envProjectProp</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T151103Z" creationid="msdx" creationdate="20141109T151103Z">
        <seg>println envProjectProp</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println file
}

&lt;s1&gt;// Filter a tree&lt;/s1&gt;
FileTree filtered = tree.matching {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T120359Z" creationid="msdx" creationdate="20141113T120359Z">
        <seg>println file
}

&lt;s1&gt;// Filter a tree&lt;/s1&gt;
FileTree filtered = tree.matching {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println file.name</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T034610Z" creationid="haohang" creationdate="20150807T034610Z">
        <seg>println file.name</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println file.name
}

&lt;s1&gt;// Convert the collection to various types&lt;/s1&gt;
Set set = collection.files
Set set2 = collection as Set
List list = collection as List
String path = collection.asPath
File file = collection.singleFile
File file2 = collection as File

&lt;s2&gt;// Add and subtract collections&lt;/s2&gt;
def union = collection + files(&lt;s3&gt;'src/file3.txt'&lt;/s3&gt;)
def different = collection - files(&lt;s4&gt;'src/file3.txt'&lt;/s4&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T155904Z" creationid="msdx" creationdate="20141112T155904Z">
        <seg>println file.name
}

&lt;s1&gt;// Convert the collection to various types&lt;/s1&gt;
Set set = collection.files
Set set2 = collection as Set
List list = collection as List
String path = collection.asPath
File file = collection.singleFile
File file2 = collection as File

&lt;s2&gt;// Add and subtract collections&lt;/s2&gt;
def union = collection + files(&lt;s3&gt;'src/file3.txt'&lt;/s3&gt;)
def different = collection - files(&lt;s4&gt;'src/file3.txt'&lt;/s4&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println gradlePropertiesProp</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T151101Z" creationid="msdx" creationdate="20141109T151101Z">
        <seg>println gradlePropertiesProp</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println greeting</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T151536Z" creationid="95" creationdate="20160814T151536Z">
        <seg>println greeting</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println it</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T011229Z" creationid="msdx" creationdate="20141116T011229Z">
        <seg>println it</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println main.output.classesDir
}
sourceSets {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083248Z" creationid="msdx" creationdate="20150428T083248Z">
        <seg>println main.output.classesDir
}
sourceSets {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println name
println project.name</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T043131Z" creationid="msdx" creationdate="20141108T043131Z">
        <seg>println name
println project.name</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println name
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083249Z" creationid="msdx" creationdate="20150428T083249Z">
        <seg>println name
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println output.classesDir</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083248Z" creationid="msdx" creationdate="20150428T083248Z">
        <seg>println output.classesDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println pos.beginIndex</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T152810Z" creationid="msdx" creationdate="20141109T152810Z">
        <seg>println pos.beginIndex</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println pos.endIndex
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T152810Z" creationid="msdx" creationdate="20141109T152810Z">
        <seg>println pos.endIndex
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println relativePath(compileJava.destinationDir)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141123T151130Z" creationid="msdx" creationdate="20141123T151130Z">
        <seg>println relativePath(compileJava.destinationDir)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println relativePath(compileJava.destinationDir)
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141123T154212Z" creationid="msdx" creationdate="20141123T154212Z">
        <seg>println relativePath(compileJava.destinationDir)
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println relativePath(processResources.destinationDir)
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141123T151130Z" creationid="msdx" creationdate="20141123T151130Z">
        <seg>println relativePath(processResources.destinationDir)
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println repositories.localRepository.name</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T133420Z" creationid="95" creationdate="20151006T133420Z">
        <seg>println repositories.localRepository.name</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println repositories[&lt;s0&gt;'localRepository'&lt;/s0&gt;].name</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T133421Z" creationid="95" creationdate="20151006T133421Z">
        <seg>println repositories[&lt;s0&gt;'localRepository'&lt;/s0&gt;].name</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println rootProject.name
println project(&lt;s0&gt;':projectA'&lt;/s0&gt;).name</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T070350Z" creationid="haohang" creationdate="20160519T070350Z">
        <seg>println rootProject.name
println project(&lt;s0&gt;':projectA'&lt;/s0&gt;).name</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println springVersion</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150710T012939Z" creationid="haohang" creationdate="20150710T012939Z">
        <seg>println springVersion</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println systemProjectProp</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T151102Z" creationid="msdx" creationdate="20141109T151102Z">
        <seg>println systemProjectProp</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T154818Z" creationid="msdx" creationdate="20141116T154818Z">
        <seg>println()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println(&lt;s0&gt;"Consuming message: "&lt;/s0&gt; + message)
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T072757Z" creationid="haohang" creationdate="20160718T072757Z">
        <seg>println(&lt;s0&gt;"Consuming message: "&lt;/s0&gt; + message)
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println(&lt;s0&gt;"Consuming message: ${rootProject.producerMessage}"&lt;/s0&gt;)
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T062400Z" creationid="haohang" creationdate="20160718T062400Z">
        <seg>println(&lt;s0&gt;"Consuming message: ${rootProject.producerMessage}"&lt;/s0&gt;)
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println(&lt;s0&gt;'I am the new one.'&lt;/s0&gt;)
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T015857Z" creationid="msdx" creationdate="20141111T015857Z">
        <seg>println(&lt;s0&gt;'I am the new one.'&lt;/s0&gt;)
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println(&lt;s1&gt;"Consuming message: "&lt;/s1&gt; + message)
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T075003Z" creationid="haohang" creationdate="20160718T075003Z">
        <seg>println(&lt;s1&gt;"Consuming message: "&lt;/s1&gt; + message)
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println(&lt;s1&gt;"Consuming message: ${rootProject.producerMessage}"&lt;/s1&gt;)
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T071039Z" creationid="haohang" creationdate="20160718T071039Z">
        <seg>println(&lt;s1&gt;"Consuming message: ${rootProject.producerMessage}"&lt;/s1&gt;)
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>process&lt;e0&gt;&lt;c1&gt;SourceSet&lt;/c1&gt;&lt;/e0&gt;Resources</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083225Z" creationid="msdx" creationdate="20150428T083225Z">
        <seg>process&lt;e0&gt;&lt;c1&gt;SourceSet&lt;/c1&gt;&lt;/e0&gt;Resources</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>processResources</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083212Z" creationid="msdx" creationdate="20150428T083212Z">
        <seg>processResources</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>processTestResources</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083214Z" creationid="msdx" creationdate="20150428T083214Z">
        <seg>processTestResources</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>producer/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T062305Z" creationid="haohang" creationdate="20160718T062305Z">
        <seg>producer/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>producer/build.gradle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T062401Z" creationid="haohang" creationdate="20160718T062401Z">
        <seg>producer/build.gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>project</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T044156Z" creationid="msdx" creationdate="20141108T044156Z">
        <seg>project</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>project {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150510T143855Z" creationid="msdx" creationdate="20150510T143855Z">
        <seg>project</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>project(&lt;s0&gt;":lib"&lt;/s0&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160325T033426Z" creationid="haohang" creationdate="20160325T033426Z">
        <seg>project(&lt;s0&gt;":lib"&lt;/s0&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>project(&lt;s0&gt;":project1"&lt;/s0&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T091737Z" creationid="msdx" creationdate="20150512T091737Z">
        <seg>project</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>project(&lt;s0&gt;":project2"&lt;/s0&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T092003Z" creationid="msdx" creationdate="20150512T092003Z">
        <seg>project</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>project(&lt;s0&gt;":project2"&lt;/s0&gt;).sonar.project.language = &lt;s1&gt;"groovy"&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T092211Z" creationid="msdx" creationdate="20150512T092211Z">
        <seg>project(&lt;s0&gt;":project2"&lt;/s0&gt;).sonar.project.language = &lt;s1&gt;"groovy"&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>project(&lt;s0&gt;':projectA'&lt;/s0&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T082153Z" creationid="msdx" creationdate="20141110T082153Z">
        <seg>project(&lt;s0&gt;':projectA'&lt;/s0&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>project(&lt;s0&gt;'projectA'&lt;/s0&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T122311Z" creationid="msdx" creationdate="20141110T122311Z">
        <seg>project(&lt;s0&gt;'projectA'&lt;/s0&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>project-report</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104857Z" creationid="msdx" creationdate="20150428T104857Z">
        <seg>project-report</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>project.description</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T065247Z" creationid="msdx" creationdate="20150513T065247Z">
        <seg>project.description</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>project.group</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T144035Z" creationid="95" creationdate="20160105T144035Z">
        <seg>project.group</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>project.modulePaths.clear()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T074118Z" creationid="haohang" creationdate="20150625T074118Z">
        <seg>project.modulePaths.clear()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>project.name</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T160154Z" creationid="msdx" creationdate="20141113T160154Z">
        <seg>project.name</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>project.natures.clear()
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T065752Z" creationid="haohang" creationdate="20150625T065752Z">
        <seg>project.natures.clear()
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>project.projectDir</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T065249Z" creationid="msdx" creationdate="20150513T065249Z">
        <seg>project.projectDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>project.sourceCompatibility</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T065356Z" creationid="msdx" creationdate="20150513T065356Z">
        <seg>project.sourceCompatibility</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>project.targetCompatibility</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T065358Z" creationid="msdx" creationdate="20150513T065358Z">
        <seg>project.targetCompatibility</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>project.task(&lt;s2&gt;'test'&lt;/s2&gt;) &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T125508Z" creationid="95" creationdate="20160521T125508Z">
        <seg>project.task(&lt;s2&gt;'test'&lt;/s2&gt;) &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>project.tasks.withType(Jar).each {archiveTask -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160722T091250Z" creationid="haohang" creationdate="20160722T091250Z">
        <seg>project.tasks.withType(Jar).each {archiveTask -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>project.version</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T160358Z" creationid="msdx" creationdate="20141113T160358Z">
        <seg>project.version</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>projectA.gradle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T125520Z" creationid="95" creationdate="20160521T125520Z">
        <seg>projectA.gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>projectDir</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T044348Z" creationid="msdx" creationdate="20141108T044348Z">
        <seg>projectDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>projectName</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083245Z" creationid="msdx" creationdate="20150428T083245Z">
        <seg>projectName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>projectReport</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T061532Z" creationid="haohang" creationdate="20150628T061532Z">
        <seg>projectReport</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>projectReportDir</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T062021Z" creationid="haohang" creationdate="20150628T062021Z">
        <seg>projectReportDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>projectReportDirName</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T061916Z" creationid="haohang" creationdate="20150628T061916Z">
        <seg>projectReportDirName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>project_reports_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T063335Z" creationid="msdx" creationdate="20141116T063335Z">
        <seg>project_reports_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>projects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T061719Z" creationid="haohang" creationdate="20150628T061719Z">
        <seg>projects</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>properties[&lt;s0&gt;"sonar.sources"&lt;/s0&gt;] += sourceSets.custom.allSource.srcDirs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150520T143105Z" creationid="msdx" creationdate="20150520T143105Z">
        <seg>properties[&lt;s0&gt;"sonar.sources"&lt;/s0&gt;] += sourceSets.custom.allSource.srcDirs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>properties[&lt;s1&gt;"sonar.tests"&lt;/s1&gt;] += sourceSets.integTest.allSource.srcDirs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150520T143106Z" creationid="msdx" creationdate="20150520T143106Z">
        <seg>properties[&lt;s1&gt;"sonar.tests"&lt;/s1&gt;] += sourceSets.integTest.allSource.srcDirs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>property &lt;s0&gt;"sonar.host.url"&lt;/s0&gt;, &lt;s1&gt;"http://my.server.com"&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T063356Z" creationid="msdx" creationdate="20150513T063356Z">
        <seg>property &lt;s0&gt;"sonar.host.url"&lt;/s0&gt;, &lt;s1&gt;"http://my.server.com"&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>property &lt;s0&gt;"sonar.language"&lt;/s0&gt;, &lt;s1&gt;"grvy"&lt;/s1&gt; &lt;s2&gt;// set language to Groovy&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150520T143132Z" creationid="msdx" creationdate="20150520T143132Z">
        <seg>property &lt;s0&gt;"sonar.language"&lt;/s0&gt;, &lt;s1&gt;"grvy"&lt;/s1&gt; &lt;s2&gt;// set language to Groovy&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>property &lt;s0&gt;"sonar.sourceEncoding"&lt;/s0&gt;, &lt;s1&gt;"UTF-8"&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150519T124458Z" creationid="msdx" creationdate="20150519T124458Z">
        <seg>property &lt;s0&gt;"sonar.sourceEncoding"&lt;/s0&gt;, &lt;s1&gt;"UTF-8"&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>property &lt;s1&gt;"sonar.language"&lt;/s1&gt;, &lt;s2&gt;"grvy"&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150519T124645Z" creationid="msdx" creationdate="20150519T124645Z">
        <seg>property &lt;s1&gt;"sonar.language"&lt;/s1&gt;, &lt;s2&gt;"grvy"&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>property &lt;s2&gt;"sonar.jdbc.url"&lt;/s2&gt;, &lt;s3&gt;"jdbc:mysql://my.server.com/sonar"&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141126T122707Z" creationid="msdx" creationdate="20141126T122707Z">
        <seg>property &lt;s2&gt;"sonar.jdbc.url"&lt;/s2&gt;, &lt;s3&gt;"jdbc:mysql://my.server.com/sonar"&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>property &lt;s4&gt;"sonar.jdbc.driverClassName"&lt;/s4&gt;, &lt;s5&gt;"com.mysql.jdbc.Driver"&lt;/s5&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T063357Z" creationid="msdx" creationdate="20150513T063357Z">
        <seg>property &lt;s4&gt;"sonar.jdbc.driverClassName"&lt;/s4&gt;, &lt;s5&gt;"com.mysql.jdbc.Driver"&lt;/s5&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>property &lt;s6&gt;"sonar.jdbc.username"&lt;/s6&gt;, &lt;s7&gt;"Fred Flintstone"&lt;/s7&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T063358Z" creationid="msdx" creationdate="20150513T063358Z">
        <seg>property &lt;s6&gt;"sonar.jdbc.username"&lt;/s6&gt;, &lt;s7&gt;"Fred Flintstone"&lt;/s7&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>property &lt;s8&gt;"sonar.jdbc.password"&lt;/s8&gt;, &lt;s9&gt;"very clever"&lt;/s9&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T063358Z" creationid="msdx" creationdate="20150513T063358Z">
        <seg>property &lt;s8&gt;"sonar.jdbc.password"&lt;/s8&gt;, &lt;s9&gt;"very clever"&lt;/s9&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>propertyReport</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T061514Z" creationid="haohang" creationdate="20150628T061514Z">
        <seg>propertyReport</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>props[&lt;s0&gt;"some.global.property"&lt;/s0&gt;] = &lt;s1&gt;"some value"&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T101338Z" creationid="msdx" creationdate="20150512T101338Z">
        <seg>props[&lt;s0&gt;"some.global.property"&lt;/s0&gt;] = &lt;s1&gt;"some value"&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>props[&lt;s0&gt;"some.project.property"&lt;/s0&gt;] = &lt;s1&gt;"some value"&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T101429Z" creationid="msdx" creationdate="20150512T101429Z">
        <seg>props[&lt;s0&gt;"some.project.property"&lt;/s0&gt;] = &lt;s1&gt;"some value"&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>props[&lt;s3&gt;"other.global.property"&lt;/s3&gt;] = [&lt;s4&gt;"foo"&lt;/s4&gt;, &lt;s5&gt;"bar"&lt;/s5&gt;, &lt;s6&gt;"baz"&lt;/s6&gt;]
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T101340Z" creationid="msdx" creationdate="20150512T101340Z">
        <seg>props[&lt;s3&gt;"other.global.property"&lt;/s3&gt;] = [&lt;s4&gt;"foo"&lt;/s4&gt;, &lt;s5&gt;"bar"&lt;/s5&gt;, &lt;s6&gt;"baz"&lt;/s6&gt;]
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>props[&lt;s3&gt;"other.project.property"&lt;/s3&gt;] = [&lt;s4&gt;"foo"&lt;/s4&gt;, &lt;s5&gt;"bar"&lt;/s5&gt;, &lt;s6&gt;"baz"&lt;/s6&gt;]
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T101430Z" creationid="msdx" creationdate="20150512T101430Z">
        <seg>props[&lt;s3&gt;"other.global.property"&lt;/s3&gt;] = [&lt;s4&gt;"foo"&lt;/s4&gt;, &lt;s5&gt;"bar"&lt;/s5&gt;, &lt;s6&gt;"baz"&lt;/s6&gt;]
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>providedCompile &lt;s4&gt;"javax.servlet:servlet-api:2.5"&lt;/s4&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T093818Z" creationid="msdx" creationdate="20150503T093818Z">
        <seg>providedCompile &lt;s4&gt;"javax.servlet:servlet-api:2.5"&lt;/s4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>providedCompile module(&lt;s5&gt;":providedCompile:1.0"&lt;/s5&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T093819Z" creationid="msdx" creationdate="20150503T093819Z">
        <seg>providedCompile module(&lt;s5&gt;":providedCompile:1.0"&lt;/s5&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>providedRuntime &lt;s8&gt;":providedRuntime:1.0@jar"&lt;/s8&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T093819Z" creationid="msdx" creationdate="20150503T093819Z">
        <seg>providedRuntime &lt;s8&gt;":providedRuntime:1.0@jar"&lt;/s8&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>provider.asNode().appendNode(&lt;s28&gt;"data-source"&lt;/s28&gt;, &lt;s29&gt;"my/data/source"&lt;/s29&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T142903Z" creationid="msdx" creationdate="20150504T142903Z">
        <seg>provider.asNode().appendNode(&lt;s28&gt;"data-source"&lt;/s28&gt;, &lt;s29&gt;"my/data/source"&lt;/s29&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>provider.asNode().fixed.find { it.&lt;s1&gt;@facet&lt;/s1&gt; == &lt;s2&gt;'jst.java'&lt;/s2&gt; }.&lt;s3&gt;@facet&lt;/s3&gt; = &lt;s4&gt;'jst2.java'&lt;/s4&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T070451Z" creationid="haohang" creationdate="20150625T070451Z">
        <seg>provider.asNode().fixed.find { it.&lt;s1&gt;@facet&lt;/s1&gt; == &lt;s2&gt;'jst.java'&lt;/s2&gt; }.&lt;s3&gt;@facet&lt;/s3&gt; = &lt;s4&gt;'jst2.java'&lt;/s4&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>provider.node.component.find { it.&lt;s0&gt;@name&lt;/s0&gt; == &lt;s1&gt;'VcsDirectoryMappings'&lt;/s1&gt; }.mapping.&lt;s2&gt;@vcs&lt;/s2&gt; = &lt;s3&gt;'Git'&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T074625Z" creationid="haohang" creationdate="20150625T074625Z">
        <seg>provider.node.component.find { it.&lt;s0&gt;@name&lt;/s0&gt; == &lt;s1&gt;'VcsDirectoryMappings'&lt;/s1&gt; }.mapping.&lt;s2&gt;@vcs&lt;/s2&gt; = &lt;s3&gt;'Git'&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>proxy</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T141913Z" creationid="95" creationdate="20160105T141913Z">
        <seg>proxy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>publishing_ivy.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104801Z" creationid="msdx" creationdate="20150428T104801Z">
        <seg>publishing_ivy.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>publishing_maven.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104801Z" creationid="msdx" creationdate="20150428T104801Z">
        <seg>publishing_maven.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>purpose = &lt;s3&gt;"production"&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T050715Z" creationid="msdx" creationdate="20141108T050715Z">
        <seg>purpose = &lt;s3&gt;"production"&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>purpose = &lt;s4&gt;"test"&lt;/s4&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150710T012931Z" creationid="haohang" creationdate="20150710T012931Z">
        <seg>purpose = &lt;s4&gt;"test"&lt;/s4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>purpose = &lt;s5&gt;"production"&lt;/s5&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150710T012937Z" creationid="haohang" creationdate="20150710T012937Z">
        <seg>purpose = &lt;s5&gt;"production"&lt;/s5&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>rc {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160325T020938Z" creationid="haohang" creationdate="20160325T020938Z">
        <seg>rc {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>rcCompiler.args &lt;s0&gt;"/v"&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160325T023107Z" creationid="haohang" creationdate="20160325T023107Z">
        <seg>rcCompiler.args &lt;s0&gt;"/v"&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>release</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160401T090303Z" creationid="haohang" creationdate="20160401T090303Z">
        <seg>release</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>releases</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T141908Z" creationid="95" creationdate="20160105T141908Z">
        <seg>releases</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>rename &lt;s6&gt;'(.+)-staging-(.+)'&lt;/s6&gt;, &lt;s7&gt;'$1$2'&lt;/s7&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T140715Z" creationid="msdx" creationdate="20141113T140715Z">
        <seg>rename &lt;s6&gt;'(.+)-staging-(.+)'&lt;/s6&gt;, &lt;s7&gt;'$1$2'&lt;/s7&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>rename { String fileName -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T140712Z" creationid="msdx" creationdate="20141113T140712Z">
        <seg>rename { String fileName -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>rename(/(.+)-staging-(.+)/, &lt;s8&gt;'$1$2'&lt;/s8&gt;)
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T140715Z" creationid="msdx" creationdate="20141113T140715Z">
        <seg>rename(/(.+)-staging-(.+)/, &lt;s8&gt;'$1$2'&lt;/s8&gt;)
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>reportOn subprojects*.test
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T142812Z" creationid="msdx" creationdate="20150428T142812Z">
        <seg>reportOn subprojects*.test
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>reporting-base</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104858Z" creationid="msdx" creationdate="20150428T104858Z">
        <seg>reporting-base</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>reports</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083235Z" creationid="msdx" creationdate="20150428T083235Z">
        <seg>reports</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>reports {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T132000Z" creationid="msdx" creationdate="20150506T132000Z">
        <seg>reports</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>reports.html.enabled = false</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083544Z" creationid="msdx" creationdate="20150428T083544Z">
        <seg>reports.html.enabled = false</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>reports/jacoco/applicationCodeCoverageReport/html/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T135831Z" creationid="msdx" creationdate="20150506T135831Z">
        <seg>reports/jacoco/applicationCodeCoverageReport/html/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>reportsDir</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083235Z" creationid="msdx" creationdate="20150428T083235Z">
        <seg>reportsDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>reportsDir = file(&lt;s1&gt;"$buildDir/customJacocoReportDir"&lt;/s1&gt;)
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T131555Z" creationid="msdx" creationdate="20150506T131555Z">
        <seg>reportsDir = file(&lt;s1&gt;"$buildDir/customJacocoReportDir"&lt;/s1&gt;)
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>reportsDirName</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083234Z" creationid="msdx" creationdate="20150428T083234Z">
        <seg>reportsDirName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>repositories {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104652Z" creationid="msdx" creationdate="20150428T104652Z">
        <seg>repositories {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>repositories.mavenDeployer {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T134853Z" creationid="95" creationdate="20160105T134853Z">
        <seg>repositories.mavenDeployer {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>repositories.mavenInstaller {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T143451Z" creationid="95" creationdate="20160106T143451Z">
        <seg>repositories.mavenInstaller {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>repository</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T141901Z" creationid="95" creationdate="20160105T141901Z">
        <seg>repository</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>repository(url: &lt;s0&gt;"file://localhost/tmp/myRepo/"&lt;/s0&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T142732Z" creationid="95" creationdate="20160106T142732Z">
        <seg>repository(url: &lt;s0&gt;"file://localhost/tmp/myRepo/"&lt;/s0&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>repository(url: &lt;s1&gt;"file://localhost/tmp/myRepo/"&lt;/s1&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160104T154225Z" creationid="95" creationdate="20160104T154225Z">
        <seg>repository(url: &lt;s1&gt;"file://localhost/tmp/myRepo/"&lt;/s1&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>repository(url: &lt;s1&gt;"scp://repos.mycompany.com/releases"&lt;/s1&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T134855Z" creationid="95" creationdate="20160105T134855Z">
        <seg>repository(url: &lt;s1&gt;"scp://repos.mycompany.com/releases"&lt;/s1&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>required { isReleaseVersion &amp;&amp; gradle.taskGraph.hasTask(&lt;s2&gt;"uploadArchives"&lt;/s2&gt;) }</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160126T141412Z" creationid="95" creationdate="20160126T141412Z">
        <seg>required { isReleaseVersion &amp;&amp; gradle.taskGraph.hasTask(&lt;s2&gt;"uploadArchives"&lt;/s2&gt;) }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>resolutionStrategy.cacheChangingModulesFor &lt;s0&gt;4&lt;/s0&gt;, &lt;s1&gt;'hours'&lt;/s1&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20151130T032622Z" creationid="haohang" creationdate="20151130T032622Z">
        <seg>resolutionStrategy.cacheChangingModulesFor &lt;s0&gt;4&lt;/s0&gt;, &lt;s1&gt;'hours'&lt;/s1&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>resolutionStrategy.cacheDynamicVersionsFor &lt;s0&gt;10&lt;/s0&gt;, &lt;s1&gt;'minutes'&lt;/s1&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T155000Z" creationid="95" creationdate="20151129T155000Z">
        <seg>resolutionStrategy.cacheDynamicVersionsFor &lt;s0&gt;10&lt;/s0&gt;, &lt;s1&gt;'minutes'&lt;/s1&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>resolutionStrategy.eachDependency { DependencyResolveDetails details -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T061531Z" creationid="95" creationdate="20151115T061531Z">
        <seg>resolutionStrategy.eachDependency { DependencyResolveDetails details -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>resolve.dynamicMode = true</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T091454Z" creationid="95" creationdate="20151115T091454Z">
        <seg>resolve.dynamicMode = true</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>resolve.dynamicMode = true
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T091500Z" creationid="95" creationdate="20151115T091500Z">
        <seg>resolve.dynamicMode = true
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>resources</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083420Z" creationid="msdx" creationdate="20150428T083420Z">
        <seg>resources</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>resources + java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083422Z" creationid="msdx" creationdate="20150428T083422Z">
        <seg>resources + java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>resources {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083231Z" creationid="msdx" creationdate="20150428T083231Z">
        <seg>resources {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>resources.srcDirs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083420Z" creationid="msdx" creationdate="20150428T083420Z">
        <seg>resources.srcDirs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>result.failure.printStackTrace()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T154821Z" creationid="msdx" creationdate="20141116T154821Z">
        <seg>result.failure.printStackTrace()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return 0;
}

int suite_clean(void) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T150240Z" creationid="95" creationdate="20160504T150240Z">
        <seg>return 0;
}

int suite_clean(void) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>return 0;
}

void gradle_cunit_register() {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T150241Z" creationid="95" creationdate="20160504T150241Z">
        <seg>return 0;
}

void gradle_cunit_register() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>root</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T141853Z" creationid="95" creationdate="20160105T141853Z">
        <seg>root</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>rootProject {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T091801Z" creationid="haohang" creationdate="20150628T091801Z">
        <seg>rootProject {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>rootProject.name = &lt;s0&gt;'main'&lt;/s0&gt;
project(&lt;s1&gt;':projectA'&lt;/s1&gt;).projectDir = &lt;s2&gt;new&lt;/s2&gt; File(settingsDir, &lt;s3&gt;'../my-project-a'&lt;/s3&gt;)
project(&lt;s4&gt;':projectA'&lt;/s4&gt;).buildFileName = &lt;s5&gt;'projectA.gradle'&lt;/s5&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T070500Z" creationid="haohang" creationdate="20160519T070500Z">
        <seg>rootProject.name = &lt;s0&gt;'main'&lt;/s0&gt;
project(&lt;s1&gt;':projectA'&lt;/s1&gt;).projectDir = &lt;s2&gt;new&lt;/s2&gt; File(settingsDir, &lt;s3&gt;'../my-project-a'&lt;/s3&gt;)
project(&lt;s4&gt;':projectA'&lt;/s4&gt;).buildFileName = &lt;s5&gt;'projectA.gradle'&lt;/s5&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>rootProject.producerMessage = &lt;s0&gt;'Watch the order of evaluation.'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T072757Z" creationid="haohang" creationdate="20160718T072757Z">
        <seg>rootProject.producerMessage = &lt;s0&gt;'Watch the order of evaluation.'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>rootProject.producerMessage = &lt;s1&gt;'Watch the order of execution.'&lt;/s1&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T062405Z" creationid="haohang" creationdate="20160718T062405Z">
        <seg>rootProject.producerMessage = &lt;s1&gt;'Watch the order of execution.'&lt;/s1&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>run</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150702T105009Z" creationid="haohang" creationdate="20150702T105009Z">
        <seg>run</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>run.exec</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T135830Z" creationid="msdx" creationdate="20150506T135830Z">
        <seg>run.exec</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>runtime</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083231Z" creationid="msdx" creationdate="20150428T083231Z">
        <seg>runtime</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>runtime &lt;s0&gt;":junit:4.10"&lt;/s0&gt;, &lt;s1&gt;":testng"&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T103549Z" creationid="haohang" creationdate="20150801T103549Z">
        <seg>runtime &lt;s0&gt;":junit:4.10"&lt;/s0&gt;, &lt;s1&gt;":testng"&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>runtime &lt;s0&gt;"org.groovy:groovy:2.2.0@jar"&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150731T034555Z" creationid="haohang" creationdate="20150731T034555Z">
        <seg>runtime &lt;s0&gt;"org.groovy:groovy:2.2.0@jar"&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>runtime &lt;s3&gt;'org.springframework:spring-core:2.5'&lt;/s3&gt;, &lt;s4&gt;'org.springframework:spring-aop:2.5'&lt;/s4&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T102832Z" creationid="haohang" creationdate="20150722T102832Z">
        <seg>runtime &lt;s3&gt;'org.springframework:spring-core:2.5'&lt;/s3&gt;, &lt;s4&gt;'org.springframework:spring-aop:2.5'&lt;/s4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>runtime &lt;s7&gt;":runtime:1.0"&lt;/s7&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T093819Z" creationid="msdx" creationdate="20150503T093819Z">
        <seg>runtime &lt;s7&gt;":runtime:1.0"&lt;/s7&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>runtime fileTree(dir: &lt;s2&gt;'libs'&lt;/s2&gt;, include: &lt;s3&gt;'*.jar'&lt;/s3&gt;)
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T094146Z" creationid="haohang" creationdate="20150801T094146Z">
        <seg>runtime fileTree(dir: &lt;s2&gt;'libs'&lt;/s2&gt;, include: &lt;s3&gt;'*.jar'&lt;/s3&gt;)
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>runtime files(&lt;s0&gt;'libs/a.jar'&lt;/s0&gt;, &lt;s1&gt;'libs/b.jar'&lt;/s1&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T094146Z" creationid="haohang" creationdate="20150801T094146Z">
        <seg>runtime files(&lt;s0&gt;'libs/a.jar'&lt;/s0&gt;, &lt;s1&gt;'libs/b.jar'&lt;/s1&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>runtime groovy, hibernate
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T103705Z" creationid="haohang" creationdate="20150801T103705Z">
        <seg>runtime groovy, hibernate
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>runtime group: &lt;s0&gt;'org.somegroup'&lt;/s0&gt;, name: &lt;s1&gt;'somedependency'&lt;/s1&gt;, version: &lt;s2&gt;'1.0'&lt;/s2&gt;, configuration: &lt;s3&gt;'someConfiguration'&lt;/s3&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T032719Z" creationid="haohang" creationdate="20150807T032719Z">
        <seg>runtime group: &lt;s0&gt;'org.somegroup'&lt;/s0&gt;, name: &lt;s1&gt;'somedependency'&lt;/s1&gt;, version: &lt;s2&gt;'1.0'&lt;/s2&gt;, configuration: &lt;s3&gt;'someConfiguration'&lt;/s3&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>runtime group: &lt;s0&gt;'org.springframework'&lt;/s0&gt;, name: &lt;s1&gt;'spring-core'&lt;/s1&gt;, version: &lt;s2&gt;'2.5'&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T102830Z" creationid="haohang" creationdate="20150722T102830Z">
        <seg>runtime group: &lt;s0&gt;'org.springframework'&lt;/s0&gt;, name: &lt;s1&gt;'spring-core'&lt;/s1&gt;, version: &lt;s2&gt;'2.5'&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>runtime group: &lt;s12&gt;'org.hibernate'&lt;/s12&gt;, name: &lt;s13&gt;'hibernate'&lt;/s13&gt;, version: &lt;s14&gt;'3.0.5'&lt;/s14&gt;, transitive: true</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T102850Z" creationid="haohang" creationdate="20150722T102850Z">
        <seg>runtime group: &lt;s12&gt;'org.hibernate'&lt;/s12&gt;, name: &lt;s13&gt;'hibernate'&lt;/s13&gt;, version: &lt;s14&gt;'3.0.5'&lt;/s14&gt;, transitive: true</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>runtime group: &lt;s1&gt;'org.groovy'&lt;/s1&gt;, name: &lt;s2&gt;'groovy'&lt;/s2&gt;, version: &lt;s3&gt;'2.2.0'&lt;/s3&gt;, ext: &lt;s4&gt;'jar'&lt;/s4&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150731T034556Z" creationid="haohang" creationdate="20150731T034556Z">
        <seg>runtime group: &lt;s1&gt;'org.groovy'&lt;/s1&gt;, name: &lt;s2&gt;'groovy'&lt;/s2&gt;, version: &lt;s3&gt;'2.2.0'&lt;/s3&gt;, ext: &lt;s4&gt;'jar'&lt;/s4&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>runtime module(&lt;s0&gt;"org.codehaus.groovy:groovy-all:2.2.0"&lt;/s0&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T091420Z" creationid="haohang" creationdate="20150801T091420Z">
        <seg>runtime module(&lt;s0&gt;"org.codehaus.groovy:groovy-all:2.2.0"&lt;/s0&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>runtime name: &lt;s2&gt;'testng'&lt;/s2&gt; 
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T103550Z" creationid="haohang" creationdate="20150801T103550Z">
        <seg>runtime name: &lt;s2&gt;'testng'&lt;/s2&gt; 
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>runtime {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T075935Z" creationid="haohang" creationdate="20150722T075935Z">
        <seg>runtime {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>runtime(</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T102836Z" creationid="haohang" creationdate="20150722T102832Z">
        <seg>runtime(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>runtime(&lt;s11&gt;'org.hibernate:hibernate:3.0.5'&lt;/s11&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T102848Z" creationid="haohang" creationdate="20150722T102848Z">
        <seg>runtime(&lt;s11&gt;'org.hibernate:hibernate:3.0.5'&lt;/s11&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>runtime(group: &lt;s15&gt;'org.hibernate'&lt;/s15&gt;, name: &lt;s16&gt;'hibernate'&lt;/s16&gt;, version: &lt;s17&gt;'3.0.5'&lt;/s17&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T102850Z" creationid="haohang" creationdate="20150722T102850Z">
        <seg>runtime(group: &lt;s15&gt;'org.hibernate'&lt;/s15&gt;, name: &lt;s16&gt;'hibernate'&lt;/s16&gt;, version: &lt;s17&gt;'3.0.5'&lt;/s17&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>runtime, testCompile</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083232Z" creationid="msdx" creationdate="20150428T083232Z">
        <seg>runtime, testCompile</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>runtimeClasspath</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083255Z" creationid="msdx" creationdate="20150428T083255Z">
        <seg>runtimeClasspath</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>scala</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141126T121121Z" creationid="msdx" creationdate="20141126T121121Z">
        <seg>scala</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>scala {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T152730Z" creationid="msdx" creationdate="20150429T152730Z">
        <seg>scala</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>scala-base</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104931Z" creationid="msdx" creationdate="20150428T104931Z">
        <seg>scala-base</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>scala.srcDirs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150430T154830Z" creationid="msdx" creationdate="20150430T154830Z">
        <seg>scala.srcDirs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>scalaCompileOptions.daemonServer = &lt;s1&gt;"localhost:4243"&lt;/s1&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150430T155215Z" creationid="msdx" creationdate="20150430T155215Z">
        <seg>scalaCompileOptions.daemonServer = &lt;s1&gt;"localhost:4243"&lt;/s1&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>scalaCompileOptions.useAnt = false
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T154308Z" creationid="msdx" creationdate="20150501T154308Z">
        <seg>scalaCompileOptions.useAnt = false
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>scalaCompileOptions.useCompileDaemon = true</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150430T155214Z" creationid="msdx" creationdate="20150430T155214Z">
        <seg>scalaCompileOptions.useCompileDaemon = true</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>scala_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141126T121119Z" creationid="msdx" creationdate="20141126T121119Z">
        <seg>scala_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>scala_plugin.html#N12CDE</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131948Z" creationid="msdx" creationdate="20150509T131948Z">
        <seg>scala_plugin.html#N12CDE</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>scala_plugin.html#N12CED</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131951Z" creationid="msdx" creationdate="20150509T131951Z">
        <seg>scala_plugin.html#N12CED</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>scala_plugin.html#N12D94</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131953Z" creationid="msdx" creationdate="20150509T131953Z">
        <seg>scala_plugin.html#N12D94</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>scala_plugin.html#N12E2D</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131955Z" creationid="msdx" creationdate="20150509T131955Z">
        <seg>scala_plugin.html#N12E2D</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>scala_plugin.html#N12E95</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T132005Z" creationid="msdx" creationdate="20150509T132005Z">
        <seg>scala_plugin.html#N12E95</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>scala_plugin.html#N12E9A</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T132008Z" creationid="msdx" creationdate="20150509T132008Z">
        <seg>scala_plugin.html#N12E9A</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>scala_plugin.html#N12F37</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T132010Z" creationid="msdx" creationdate="20150509T132010Z">
        <seg>scala_plugin.html#N12F37</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>scala_plugin.html#N12F54</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T132020Z" creationid="msdx" creationdate="20150509T132020Z">
        <seg>scala_plugin.html#N12F54</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>scala_plugin.html#N12F78</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T132105Z" creationid="msdx" creationdate="20150509T132105Z">
        <seg>scala_plugin.html#N12F78</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>scala_plugin.html#N12FCC</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T132113Z" creationid="msdx" creationdate="20150509T132110Z">
        <seg>scala_plugin.html#N12FCC</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>scala_plugin.html#N12FD1</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T132121Z" creationid="msdx" creationdate="20150509T132121Z">
        <seg>scala_plugin.html#N12FD1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>scala_plugin.html#sec:configure_scala_classpath</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T082245Z" creationid="msdx" creationdate="20150503T082245Z">
        <seg>scala_plugin.html#sec:configure_scala_classpath</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>scaladoc</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T145512Z" creationid="msdx" creationdate="20150429T145512Z">
        <seg>scaladoc</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sealife</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T034239Z" creationid="haohang" creationdate="20150807T034239Z">
        <seg>sealife</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sealife &lt;s0&gt;"sea.mammals:orca:1.0"&lt;/s0&gt;, &lt;s1&gt;"sea.fish:shark:1.0"&lt;/s1&gt;, &lt;s2&gt;"sea.fish:tuna:1.0"&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T034241Z" creationid="haohang" creationdate="20150807T034241Z">
        <seg>sealife &lt;s0&gt;"sea.mammals:orca:1.0"&lt;/s0&gt;, &lt;s1&gt;"sea.fish:shark:1.0"&lt;/s1&gt;, &lt;s2&gt;"sea.fish:tuna:1.0"&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>securityRole &lt;s25&gt;"admin"&lt;/s25&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T142901Z" creationid="msdx" creationdate="20150504T142901Z">
        <seg>securityRole &lt;s25&gt;"admin"&lt;/s25&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>securityRole &lt;s26&gt;"superadmin"&lt;/s26&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T142902Z" creationid="msdx" creationdate="20150504T142902Z">
        <seg>securityRole &lt;s26&gt;"superadmin"&lt;/s26&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>see &lt;a0&gt;Section 23.5, “Dependency management”&lt;/a0&gt; for details.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T075336Z" creationid="haohang" creationdate="20150722T075336Z">
        <seg>详细信息请参阅&lt;a0&gt;第 23.5 节，“依赖管理”&lt;/a0&gt; 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>server {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150510T143649Z" creationid="msdx" creationdate="20150510T143649Z">
        <seg>server {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>server.url</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T053933Z" creationid="msdx" creationdate="20150513T053933Z">
        <seg>server.url</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>services/personService/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T083508Z" creationid="haohang" creationdate="20160726T083508Z">
        <seg>services/personService/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sessionId</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T132320Z" creationid="msdx" creationdate="20150506T132320Z">
        <seg>sessionId</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>settings.gradle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160519T025305Z" creationid="haohang" creationdate="20160519T025305Z">
        <seg>settings.gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>shared/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T083513Z" creationid="haohang" creationdate="20160726T083513Z">
        <seg>shared/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>shark-1.0 -&gt; seal-2.0, tuna-1.0</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T034313Z" creationid="haohang" creationdate="20150807T034313Z">
        <seg>shark-1.0 -&gt; seal-2.0, tuna-1.0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>showSql</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T053936Z" creationid="msdx" creationdate="20150513T053936Z">
        <seg>showSql</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>showSqlResults</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T053936Z" creationid="msdx" creationdate="20150513T053936Z">
        <seg>showSqlResults</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sign configurations.archives
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160109T072233Z" creationid="95" creationdate="20160109T072233Z">
        <seg>sign configurations.archives
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sign stuffZip
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160109T073103Z" creationid="95" creationdate="20160109T073103Z">
        <seg>sign stuffZip
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>signing</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104859Z" creationid="msdx" creationdate="20150428T104859Z">
        <seg>signing</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>signing {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160109T072231Z" creationid="95" creationdate="20160109T072231Z">
        <seg>signing {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>signing.keyId=24875D73
signing.password=secret
signing.secretKeyRingFile=/Users/me/.gnupg/secring.gpg</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160108T152514Z" creationid="95" creationdate="20160108T152514Z">
        <seg>signing.keyId=24875D73
signing.password=secret
signing.secretKeyRingFile=/Users/me/.gnupg/secring.gpg</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>signing_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104859Z" creationid="msdx" creationdate="20150428T104859Z">
        <seg>signing_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>skip = true</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T091738Z" creationid="msdx" creationdate="20150512T091738Z">
        <seg>skip = true</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>skipProject = true</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150519T124737Z" creationid="msdx" creationdate="20150519T124737Z">
        <seg>skipProject = true</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>snapshotRepository</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T141916Z" creationid="95" creationdate="20160105T141916Z">
        <seg>snapshotRepository</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>snapshots</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T141912Z" creationid="95" creationdate="20160105T141912Z">
        <seg>snapshots</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>snarl</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T065611Z" creationid="haohang" creationdate="20150628T065611Z">
        <seg>snarl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sonar</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104900Z" creationid="msdx" creationdate="20150428T104900Z">
        <seg>sonar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sonar {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150510T143649Z" creationid="msdx" creationdate="20150510T143649Z">
        <seg>sonar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sonar-runner</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104925Z" creationid="msdx" creationdate="20150428T104925Z">
        <seg>sonar-runner</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sonar.binaries</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T065654Z" creationid="msdx" creationdate="20150513T065654Z">
        <seg>sonar.binaries</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sonar.dynamicAnalysis</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T065250Z" creationid="msdx" creationdate="20150513T065250Z">
        <seg>sonar.dynamicAnalysis</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sonar.java.source</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T065356Z" creationid="msdx" creationdate="20150513T065356Z">
        <seg>sonar.java.source</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sonar.java.target</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T065357Z" creationid="msdx" creationdate="20150513T065357Z">
        <seg>sonar.java.target</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sonar.junit.reportsPath</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150514T152044Z" creationid="msdx" creationdate="20150514T152044Z">
        <seg>sonar.junit.reportsPath</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sonar.libraries</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T065708Z" creationid="msdx" creationdate="20150513T065708Z">
        <seg>sonar.libraries</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sonar.project {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T092528Z" creationid="msdx" creationdate="20150512T092528Z">
        <seg>sonar.project {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sonar.project.withProjectProperties { props -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T101428Z" creationid="msdx" creationdate="20150512T101428Z">
        <seg>sonar.project.withProjectProperties { props -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sonar.projectBaseDir</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T065248Z" creationid="msdx" creationdate="20150513T065248Z">
        <seg>sonar.projectBaseDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sonar.projectDescription</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T065247Z" creationid="msdx" creationdate="20150513T065247Z">
        <seg>sonar.projectDescription</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sonar.projectKey</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T065246Z" creationid="msdx" creationdate="20150513T065246Z">
        <seg>sonar.projectKey</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sonar.projectName</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T065247Z" creationid="msdx" creationdate="20150513T065247Z">
        <seg>sonar.projectName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sonar.projectVersion</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T065248Z" creationid="msdx" creationdate="20150513T065248Z">
        <seg>sonar.projectVersion</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sonar.sources</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T065601Z" creationid="msdx" creationdate="20150513T065601Z">
        <seg>sonar.sources</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sonar.surefire.reportsPath</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150514T151939Z" creationid="msdx" creationdate="20150514T151939Z">
        <seg>sonar.surefire.reportsPath</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sonar.tests</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T065640Z" creationid="msdx" creationdate="20150513T065640Z">
        <seg>sonar.tests</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sonar.withGlobalProperties { props -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T101338Z" creationid="msdx" creationdate="20150512T101338Z">
        <seg>sonar.withGlobalProperties { props -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sonar.working.directory</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T065249Z" creationid="msdx" creationdate="20150513T065249Z">
        <seg>sonar.working.directory</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sonarAnalyze</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T054213Z" creationid="msdx" creationdate="20150513T054213Z">
        <seg>sonarAnalyze</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sonarProperties {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T063356Z" creationid="msdx" creationdate="20150513T063356Z">
        <seg>sonarProperties {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sonarRunner</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T024619Z" creationid="haohang" creationdate="20150525T235017Z">
        <seg>sonarRunner</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sonarRunner {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T063355Z" creationid="msdx" creationdate="20150513T063355Z">
        <seg>sonarRunner {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sonar_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104900Z" creationid="msdx" creationdate="20150428T104900Z">
        <seg>sonar_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sonar_plugin.html#sec:sonar_command_line_parameters</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150510T143654Z" creationid="msdx" creationdate="20150510T143654Z">
        <seg>sonar_plugin.html#sec:sonar_command_line_parameters</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sonar_runner_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104920Z" creationid="msdx" creationdate="20150428T104920Z">
        <seg>sonar_runner_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>source</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083438Z" creationid="msdx" creationdate="20150428T083438Z">
        <seg>source</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>source &lt;s1&gt;'src/main/java'&lt;/s1&gt;, &lt;s2&gt;'src/main/groovy'&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T123633Z" creationid="msdx" creationdate="20141113T123633Z">
        <seg>source &lt;s1&gt;'src/main/java'&lt;/s1&gt;, &lt;s2&gt;'src/main/groovy'&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>source = &lt;s3&gt;'src/main/java'&lt;/s3&gt;
}

&lt;s4&gt;// Use a collection to specify multiple source directories&lt;/s4&gt;
compile {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T123335Z" creationid="msdx" creationdate="20141113T123335Z">
        <seg>source = &lt;s3&gt;'src/main/java'&lt;/s3&gt;
}

&lt;s4&gt;// Use a collection to specify multiple source directories&lt;/s4&gt;
compile {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>source = [&lt;s5&gt;'src/main/java'&lt;/s5&gt;, &lt;s6&gt;'../shared/java'&lt;/s6&gt;]
}

&lt;s7&gt;// Use a FileCollection (or FileTree in this case) to specify the source files&lt;/s7&gt;
compile {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T123336Z" creationid="msdx" creationdate="20141113T123336Z">
        <seg>source = [&lt;s5&gt;'src/main/java'&lt;/s5&gt;, &lt;s6&gt;'../shared/java'&lt;/s6&gt;]
}

&lt;s7&gt;// Use a FileCollection (or FileTree in this case) to specify the source files&lt;/s7&gt;
compile {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>source = file(&lt;s1&gt;'src/main/java'&lt;/s1&gt;)
}

&lt;s2&gt;// Use a String path to specify the source directory&lt;/s2&gt;
compile {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T123334Z" creationid="msdx" creationdate="20141113T123334Z">
        <seg>source = file(&lt;s1&gt;'src/main/java'&lt;/s1&gt;)
}

&lt;s2&gt;// Use a String path to specify the source directory&lt;/s2&gt;
compile {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>source = fileTree(dir: &lt;s8&gt;'src/main/java'&lt;/s8&gt;).matching { include &lt;s9&gt;'org/gradle/api/**'&lt;/s9&gt; }
}

&lt;s10&gt;// Using a closure to specify the source files.&lt;/s10&gt;
compile {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T123337Z" creationid="msdx" creationdate="20141113T123337Z">
        <seg>source = fileTree(dir: &lt;s8&gt;'src/main/java'&lt;/s8&gt;).matching { include &lt;s9&gt;'org/gradle/api/**'&lt;/s9&gt; }
}

&lt;s10&gt;// Using a closure to specify the source files.&lt;/s10&gt;
compile {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>source = {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T123338Z" creationid="msdx" creationdate="20141113T123338Z">
        <seg>source = {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>source file(&lt;s4&gt;'../shared/java'&lt;/s4&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T123634Z" creationid="msdx" creationdate="20141113T123634Z">
        <seg>source file(&lt;s4&gt;'../shared/java'&lt;/s4&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>source sourceSets.intTest.allJava
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083430Z" creationid="msdx" creationdate="20150428T083430Z">
        <seg>source sourceSets.intTest.allJava
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>source sources.lib</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T081123Z" creationid="haohang" creationdate="20160408T081123Z">
        <seg>source sources.lib</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>source {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160225T085523Z" creationid="haohang" creationdate="20160225T085523Z">
        <seg>source {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>source { file(&lt;s6&gt;'src/test/'&lt;/s6&gt;).listFiles() }
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T123635Z" creationid="msdx" creationdate="20141113T123635Z">
        <seg>source { file(&lt;s6&gt;'src/test/'&lt;/s6&gt;).listFiles() }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sourceCompatibility</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083245Z" creationid="msdx" creationdate="20150428T083245Z">
        <seg>sourceCompatibility</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sourceDirs += sourceSets.custom.allSource.srcDirs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T092528Z" creationid="msdx" creationdate="20150512T092528Z">
        <seg>sourceDirs += sourceSets.custom.allSource.srcDirs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sourceEncoding = &lt;s0&gt;"UTF-8"&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T091355Z" creationid="msdx" creationdate="20150512T091355Z">
        <seg>sourceEncoding = &lt;s0&gt;"UTF-8"&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sourceSets</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083244Z" creationid="msdx" creationdate="20150428T083244Z">
        <seg>sourceSets</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sourceSets sourceSets.main
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T135605Z" creationid="msdx" creationdate="20150506T135605Z">
        <seg>sourceSets sourceSets.main
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sourceSets {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083230Z" creationid="msdx" creationdate="20150428T083230Z">
        <seg>sourceSets {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sourceSets.main.allJava</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083439Z" creationid="msdx" creationdate="20150428T083439Z">
        <seg>sourceSets.main.allJava</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sourceSets.main.allSource.srcDirs (filtered to only include existing directories)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T065638Z" creationid="msdx" creationdate="20150513T065638Z">
        <seg>sourceSets.main.allSource.srcDirs（过滤为只包含存在的目录）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sourceSets.main.output + sourceSets.main.compileClasspath</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083438Z" creationid="msdx" creationdate="20150428T083438Z">
        <seg>sourceSets.main.output + sourceSets.main.compileClasspath</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sourceSets.main.runtimeClasspath (filtered to only include directories)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T065707Z" creationid="msdx" creationdate="20150513T065707Z">
        <seg>sourceSets.main.runtimeClasspath （过滤为只包含存在的目录）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sourceSets.main.runtimeClasspath (filtering to only include files; &lt;c0&gt;rt.jar&lt;/c0&gt; added if necessary)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150514T152030Z" creationid="msdx" creationdate="20150513T065814Z">
        <seg>sourceSets.main.runtimeClasspath （过滤为仅包括文件 ；如果有必要会加上 &lt;c0&gt;rt.jar&lt;/c0&gt;）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sourceSets.matching { it.purpose == &lt;s6&gt;"production"&lt;/s6&gt; }.each { println it.name }
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150710T012941Z" creationid="haohang" creationdate="20150710T012941Z">
        <seg>sourceSets.matching { it.purpose == &lt;s6&gt;"production"&lt;/s6&gt; }.each { println it.name }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sourceSets.test.allSource.srcDirs (filtered to only include existing directories)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T065653Z" creationid="msdx" creationdate="20150513T065653Z">
        <seg>sourceSets.test.allSource.srcDirs（过滤为只包含存在的目录）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sourceSets.test.java.srcDirs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T144359Z" creationid="msdx" creationdate="20150428T144359Z">
        <seg>sourceSets.test.java.srcDirs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sourceSets.test.output.classesDir</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T144356Z" creationid="msdx" creationdate="20150428T144356Z">
        <seg>sourceSets.test.output.classesDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sourceSets.test.runtimeClasspath</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T144358Z" creationid="msdx" creationdate="20150428T144358Z">
        <seg>sourceSets.test.runtimeClasspath</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sources {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160225T085517Z" creationid="haohang" creationdate="20160225T085517Z">
        <seg>sources {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>spi</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T084513Z" creationid="haohang" creationdate="20160726T084513Z">
        <seg>spi</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>spi spiJar</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T084528Z" creationid="haohang" creationdate="20160726T084528Z">
        <seg>spi spiJar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>springVersion = &lt;s1&gt;"3.1.0.RELEASE"&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T050710Z" creationid="msdx" creationdate="20141108T050710Z">
        <seg>springVersion = &lt;s1&gt;"3.1.0.RELEASE"&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>src/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T083509Z" creationid="haohang" creationdate="20160726T083509Z">
        <seg>src/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>src/&lt;e0&gt;&lt;c1&gt;sourceSet&lt;/c1&gt;&lt;/e0&gt;/antlr</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T095150Z" creationid="haohang" creationdate="20150625T095150Z">
        <seg>src/&lt;e0&gt;&lt;c1&gt;sourceSet&lt;/c1&gt;&lt;/e0&gt;/antlr</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>src/&lt;e0&gt;&lt;c1&gt;sourceSet&lt;/c1&gt;&lt;/e0&gt;/groovy</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T075139Z" creationid="msdx" creationdate="20150429T075139Z">
        <seg>src/&lt;e0&gt;&lt;c1&gt;sourceSet&lt;/c1&gt;&lt;/e0&gt;/groovy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>src/&lt;e0&gt;&lt;c1&gt;sourceSet&lt;/c1&gt;&lt;/e0&gt;/java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083229Z" creationid="msdx" creationdate="20150428T083229Z">
        <seg>src/&lt;e0&gt;&lt;c1&gt;sourceSet&lt;/c1&gt;&lt;/e0&gt;/java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>src/&lt;e0&gt;&lt;c1&gt;sourceSet&lt;/c1&gt;&lt;/e0&gt;/resources</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083230Z" creationid="msdx" creationdate="20150428T083230Z">
        <seg>src/&lt;e0&gt;&lt;c1&gt;sourceSet&lt;/c1&gt;&lt;/e0&gt;/resources</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>src/&lt;e0&gt;&lt;c1&gt;sourceSet&lt;/c1&gt;&lt;/e0&gt;/scala</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T152633Z" creationid="msdx" creationdate="20150429T152633Z">
        <seg>src/&lt;e0&gt;&lt;c1&gt;sourceSet&lt;/c1&gt;&lt;/e0&gt;/scala</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>src/main/antlr</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T095132Z" creationid="haohang" creationdate="20150625T095132Z">
        <seg>src/main/antlr</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>src/main/application</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T095226Z" creationid="msdx" creationdate="20150503T095226Z">
        <seg>src/main/application</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>src/main/groovy</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T075102Z" creationid="msdx" creationdate="20150429T075102Z">
        <seg>src/main/groovy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>src/main/java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083228Z" creationid="msdx" creationdate="20150428T083228Z">
        <seg>src/main/java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>src/main/java/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160722T091207Z" creationid="haohang" creationdate="20160722T091207Z">
        <seg>src/main/java/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>src/main/resources</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083229Z" creationid="msdx" creationdate="20150428T083229Z">
        <seg>src/main/resources</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>src/main/scala</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T152612Z" creationid="msdx" creationdate="20150429T152612Z">
        <seg>src/main/scala</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>src/main/webapp</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T090128Z" creationid="msdx" creationdate="20150503T090128Z">
        <seg>from &lt;s1&gt;'src/main/webapp'&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>src/test/antlr</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T095142Z" creationid="haohang" creationdate="20150625T095142Z">
        <seg>src/test/antlr</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>src/test/groovy</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T075127Z" creationid="msdx" creationdate="20150429T075127Z">
        <seg>src/test/groovy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>src/test/java</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083229Z" creationid="msdx" creationdate="20150428T083229Z">
        <seg>src/test/java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>src/test/resources</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083229Z" creationid="msdx" creationdate="20150428T083229Z">
        <seg>src/test/resources</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>src/test/scala</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T152620Z" creationid="msdx" creationdate="20150429T152620Z">
        <seg>src/test/scala</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>srcDir &lt;s0&gt;"src/source"&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160225T085529Z" creationid="haohang" creationdate="20160225T085529Z">
        <seg>srcDir &lt;s0&gt;"src/source"&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>srcDir &lt;s0&gt;'src/java'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083230Z" creationid="msdx" creationdate="20150428T083230Z">
        <seg>srcDir &lt;s0&gt;'src/java'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>srcDir &lt;s1&gt;'src/resources'&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083231Z" creationid="msdx" creationdate="20150428T083231Z">
        <seg>srcDir &lt;s1&gt;'src/resources'&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>srcDir &lt;s2&gt;"src/include"&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160225T090555Z" creationid="haohang" creationdate="20160225T090555Z">
        <seg>srcDir &lt;s2&gt;"src/include"&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>srcDir = file(&lt;s1&gt;'src'&lt;/s1&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T160739Z" creationid="msdx" creationdate="20141112T160739Z">
        <seg>srcDir = file(&lt;s1&gt;'src'&lt;/s1&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>srcDir = file(&lt;s3&gt;'src2'&lt;/s3&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T160740Z" creationid="msdx" creationdate="20141112T160740Z">
        <seg>srcDir = file(&lt;s3&gt;'src2'&lt;/s3&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>srcDirs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083442Z" creationid="msdx" creationdate="20150428T083442Z">
        <seg>srcDirs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>srcDirs &lt;s0&gt;"src/hello/rc"&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160325T020939Z" creationid="haohang" creationdate="20160325T020939Z">
        <seg>srcDirs &lt;s0&gt;"src/hello/rc"&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>srcDirs &lt;s1&gt;"src/hello/headers"&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160325T020940Z" creationid="haohang" creationdate="20160325T020940Z">
        <seg>srcDirs &lt;s1&gt;"src/hello/headers"&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>srcDirs = [&lt;s0&gt;'src/groovy'&lt;/s0&gt;]</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T075354Z" creationid="msdx" creationdate="20150429T075354Z">
        <seg>srcDirs = [&lt;s0&gt;'src/groovy'&lt;/s0&gt;]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>srcDirs = [&lt;s0&gt;'src/scala'&lt;/s0&gt;]</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T152731Z" creationid="msdx" creationdate="20150429T152731Z">
        <seg>srcDirs = [&lt;s0&gt;'src/scala'&lt;/s0&gt;]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>srcDirs = [&lt;s1&gt;'test/groovy'&lt;/s1&gt;]</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T075355Z" creationid="msdx" creationdate="20150429T075355Z">
        <seg>srcDirs = [&lt;s1&gt;'test/groovy'&lt;/s1&gt;]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>srcDirs = [&lt;s1&gt;'test/scala'&lt;/s1&gt;]</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T152731Z" creationid="msdx" creationdate="20150429T152731Z">
        <seg>srcDirs = [&lt;s1&gt;'test/scala'&lt;/s1&gt;]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ssh</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T141830Z" creationid="95" creationdate="20160105T141830Z">
        <seg>ssh</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ssh-external</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T141831Z" creationid="95" creationdate="20160105T141831Z">
        <seg>ssh-external</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>standard_plugins.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141121T142833Z" creationid="msdx" creationdate="20141121T142833Z">
        <seg>standard_plugins.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>standard_plugins.html#N1190C</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131528Z" creationid="msdx" creationdate="20150509T131528Z">
        <seg>standard_plugins.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>standard_plugins.html#N1199D</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131533Z" creationid="msdx" creationdate="20150509T131533Z">
        <seg>standard_plugins.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>standard_plugins.html#N11A44</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131540Z" creationid="msdx" creationdate="20150509T131540Z">
        <seg>standard_plugins.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>standard_plugins.html#N11B08</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131546Z" creationid="msdx" creationdate="20150509T131546Z">
        <seg>standard_plugins.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>standard_plugins.html#N11B8B</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131551Z" creationid="msdx" creationdate="20150509T131551Z">
        <seg>standard_plugins.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>standard_plugins.html#N11D27</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131554Z" creationid="msdx" creationdate="20150509T131554Z">
        <seg>standard_plugins.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>standard_plugins.html#N11DFC</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131558Z" creationid="msdx" creationdate="20150509T131558Z">
        <seg>standard_plugins.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>standard_plugins.html#N11E6F</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T131602Z" creationid="msdx" creationdate="20150509T131602Z">
        <seg>standard_plugins.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>startScripts</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150702T105015Z" creationid="haohang" creationdate="20150702T105015Z">
        <seg>startScripts</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>staticLibraryFile = file(&lt;s3&gt;"lib/cunit/2.1-2/lib/"&lt;/s3&gt; + findCUnitLibForPlatform(targetPlatform))</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T151339Z" creationid="95" creationdate="20160504T151339Z">
        <seg>staticLibraryFile = file(&lt;s3&gt;"lib/cunit/2.1-2/lib/"&lt;/s3&gt; + findCUnitLibForPlatform(targetPlatform))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>stopKey</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T151239Z" creationid="msdx" creationdate="20150504T151239Z">
        <seg>stopKey</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>stopPort</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T151206Z" creationid="msdx" creationdate="20150504T151206Z">
        <seg>stopPort</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>subprojects {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083543Z" creationid="msdx" creationdate="20150428T083543Z">
        <seg>subprojects {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>subprojects.each {project -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160722T091249Z" creationid="haohang" creationdate="20160722T091249Z">
        <seg>subprojects.each {project -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>suite_operators.c</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160504T150235Z" creationid="95" creationdate="20160504T150235Z">
        <seg>suite_operators.c</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>systemProp.http.proxyHost=www.somehost.org
systemProp.http.proxyPort=8080
systemProp.http.proxyUser=userid
systemProp.http.proxyPassword=password
systemProp.http.nonProxyHosts=*.nonproxyrepos.com|localhost</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141121T141741Z" creationid="msdx" creationdate="20141121T141741Z">
        <seg>systemProp.http.proxyHost=www.somehost.org
systemProp.http.proxyPort=8080
systemProp.http.proxyUser=userid
systemProp.http.proxyPassword=password
systemProp.http.nonProxyHosts=*.nonproxyrepos.com|localhost</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>systemProp.https.proxyHost=www.somehost.org
systemProp.https.proxyPort=8080
systemProp.https.proxyUser=userid
systemProp.https.proxyPassword=password
systemProp.https.nonProxyHosts=*.nonproxyrepos.com|localhost</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141121T141804Z" creationid="msdx" creationdate="20141121T141804Z">
        <seg>systemProp.https.proxyHost=www.somehost.org
systemProp.https.proxyPort=8080
systemProp.https.proxyUser=userid
systemProp.https.proxyPassword=password
systemProp.https.nonProxyHosts=*.nonproxyrepos.com|localhost</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>targetCompatibility</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083245Z" creationid="msdx" creationdate="20150428T083245Z">
        <seg>targetCompatibility</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>targetPlatforms &lt;s0&gt;"x86"&lt;/s0&gt;, &lt;s1&gt;"x64"&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T082930Z" creationid="haohang" creationdate="20160408T082930Z">
        <seg>targetPlatforms &lt;s0&gt;"x86"&lt;/s0&gt;, &lt;s1&gt;"x64"&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task action &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T062358Z" creationid="haohang" creationdate="20160718T062358Z">
        <seg>task action &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task action(dependsOn: &lt;s0&gt;":producer:action"&lt;/s0&gt;) &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T071036Z" creationid="haohang" creationdate="20160718T071036Z">
        <seg>task action(dependsOn: &lt;s0&gt;":producer:action"&lt;/s0&gt;) &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task allFiles &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T034607Z" creationid="haohang" creationdate="20150807T034607Z">
        <seg>task allFiles &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task anotherCopyTask(type: Copy) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T130947Z" creationid="msdx" creationdate="20141113T130947Z">
        <seg>task anotherCopyTask(type: Copy) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task barJar(type: Jar) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T145615Z" creationid="msdx" creationdate="20150428T145615Z">
        <seg>task barJar(type: Jar) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task buildAllExecutables {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T084718Z" creationid="haohang" creationdate="20160408T084718Z">
        <seg>task buildAllExecutables {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task check &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T060205Z" creationid="msdx" creationdate="20141116T060205Z">
        <seg>task check &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task compile &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T054822Z" creationid="msdx" creationdate="20141111T054822Z">
        <seg>task compile &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task configure &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T152803Z" creationid="msdx" creationdate="20141109T152803Z">
        <seg>task configure &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task consume &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T085919Z" creationid="haohang" creationdate="20160718T085919Z">
        <seg>task consume &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task consume(dependsOn: &lt;s0&gt;':producer:produce'&lt;/s0&gt;) &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T072047Z" creationid="haohang" creationdate="20160718T072047Z">
        <seg>task consume(dependsOn: &lt;s0&gt;':producer:produce'&lt;/s0&gt;) &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task copy &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T040601Z" creationid="haohang" creationdate="20150807T040601Z">
        <seg>task copy &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task copy(type: Copy)

task copy(overwrite: true) &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T015856Z" creationid="msdx" creationdate="20141111T015856Z">
        <seg>task copy(type: Copy)

task copy(overwrite: true) &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task copy(type: Copy) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T100017Z" creationid="msdx" creationdate="20141110T100017Z">
        <seg>task copy(type: Copy) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task copyMethod &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T131756Z" creationid="msdx" creationdate="20141113T131756Z">
        <seg>task copyMethod &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task copyMethodWithExplicitDependencies{</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T134158Z" creationid="msdx" creationdate="20141113T134158Z">
        <seg>task copyMethodWithExplicitDependencies{</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task copyTask(type: Copy) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T124407Z" creationid="msdx" creationdate="20141113T124407Z">
        <seg>task copyTask(type: Copy) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task copyTaskWithPatterns(type: Copy) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T131122Z" creationid="msdx" creationdate="20141113T131122Z">
        <seg>task copyTaskWithPatterns(type: Copy) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task copyVsFiles &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T041227Z" creationid="haohang" creationdate="20150807T041227Z">
        <seg>task copyVsFiles &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task createDocs {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150703T100422Z" creationid="haohang" creationdate="20150703T100422Z">
        <seg>task createDocs {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task dependencies &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T034356Z" creationid="haohang" creationdate="20150807T034356Z">
        <seg>task dependencies &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task disableMe &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T055744Z" creationid="msdx" creationdate="20141111T055744Z">
        <seg>task disableMe &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task files &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T034742Z" creationid="haohang" creationdate="20150807T034742Z">
        <seg>task files &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task generate(type:  MyTaskType) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151226T091459Z" creationid="95" creationdate="20151226T091459Z">
        <seg>task generate(type:  MyTaskType) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task hello

println hello.name
println project.hello.name</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T081019Z" creationid="msdx" creationdate="20141110T081019Z">
        <seg>task hello

println hello.name
println project.hello.name</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task hello

println tasks.hello.name
println tasks[&lt;s0&gt;'hello'&lt;/s0&gt;].name</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T081116Z" creationid="msdx" creationdate="20141110T081116Z">
        <seg>task hello

println tasks.hello.name
println tasks[&lt;s0&gt;'hello'&lt;/s0&gt;].name</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task hello
}

task hello

println tasks.getByPath(&lt;s1&gt;'hello'&lt;/s1&gt;).path
println tasks.getByPath(&lt;s2&gt;':hello'&lt;/s2&gt;).path
println tasks.getByPath(&lt;s3&gt;'projectA:hello'&lt;/s3&gt;).path
println tasks.getByPath(&lt;s4&gt;':projectA:hello'&lt;/s4&gt;).path</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T082154Z" creationid="msdx" creationdate="20141110T082154Z">
        <seg>task hello
}

task hello

println tasks.getByPath(&lt;s1&gt;'hello'&lt;/s1&gt;).path
println tasks.getByPath(&lt;s2&gt;':hello'&lt;/s2&gt;).path
println tasks.getByPath(&lt;s3&gt;'projectA:hello'&lt;/s3&gt;).path
println tasks.getByPath(&lt;s4&gt;':projectA:hello'&lt;/s4&gt;).path</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task hello &lt;&lt; cl
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160522T125909Z" creationid="95" creationdate="20160522T125909Z">
        <seg>task hello &lt;&lt; cl
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task hello &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T021014Z" creationid="msdx" creationdate="20141111T021014Z">
        <seg>task hello &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task hello &lt;&lt; { task -&gt; println &lt;s0&gt;"I'm $task.project.name"&lt;/s0&gt; }
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160527T161029Z" creationid="95" creationdate="20160527T161029Z">
        <seg>task hello &lt;&lt; { task -&gt; println &lt;s0&gt;"I'm $task.project.name"&lt;/s0&gt; }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task hello &lt;&lt; {task -&gt; println &lt;s0&gt;"I'm $task.project.name"&lt;/s0&gt; }
}
subprojects {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160527T162339Z" creationid="95" creationdate="20160527T162302Z">
        <seg>task hello &lt;&lt; {task -&gt; println &lt;s0&gt;"I'm $task.project.name"&lt;/s0&gt; }
}
subprojects {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task hello(type: GreetingTask)

&lt;s0&gt;class&lt;/s0&gt; GreetingTask &lt;s1&gt;extends&lt;/s1&gt; DefaultTask {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160814T145740Z" creationid="95" creationdate="20160814T145740Z">
        <seg>task hello(type: GreetingTask)

&lt;s0&gt;class&lt;/s0&gt; GreetingTask &lt;s1&gt;extends&lt;/s1&gt; DefaultTask {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task helloWorld &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T063534Z" creationid="haohang" creationdate="20150628T063534Z">
        <seg>task helloWorld &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task intTest(type: Test) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083431Z" creationid="msdx" creationdate="20150428T083431Z">
        <seg>task intTest(type: Test) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task intTestJar(type: Jar) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083429Z" creationid="msdx" creationdate="20150428T083429Z">
        <seg>task intTestJar(type: Jar) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task intTestJavadoc(type: Javadoc) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083430Z" creationid="msdx" creationdate="20150428T083430Z">
        <seg>task intTestJavadoc(type: Javadoc) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task libs(type: Sync) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T145436Z" creationid="msdx" creationdate="20141113T145436Z">
        <seg>task libs(type: Sync) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task list &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T070220Z" creationid="msdx" creationdate="20141108T070220Z">
        <seg>task list &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task listJars &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T091159Z" creationid="haohang" creationdate="20150801T091159Z">
        <seg>task listJars &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task logInfo {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T150934Z" creationid="msdx" creationdate="20141116T150934Z">
        <seg>task logInfo {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task mappings &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T145327Z" creationid="95" creationdate="20160106T145327Z">
        <seg>task mappings &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task myCopy(type: Copy)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T090223Z" creationid="msdx" creationdate="20141110T090223Z">
        <seg>task myCopy(type: Copy)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task myCopy(type: Copy)

myCopy {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T092537Z" creationid="msdx" creationdate="20141110T092537Z">
        <seg>task myCopy(type: Copy)

myCopy {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task myJar(type: Jar)

artifacts {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151226T090855Z" creationid="95" creationdate="20151226T090855Z">
        <seg>task myJar(type: Jar)

artifacts {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task myTask(type:  MyTaskType) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151226T091157Z" creationid="95" creationdate="20151226T091157Z">
        <seg>task myTask(type:  MyTaskType) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task nestedSpecs(type: Copy) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T143851Z" creationid="msdx" creationdate="20141113T143851Z">
        <seg>task nestedSpecs(type: Copy) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task ok

task broken(dependsOn: ok) &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T140113Z" creationid="95" creationdate="20160521T140113Z">
        <seg>task ok

task broken(dependsOn: ok) &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task printProps &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T151100Z" creationid="msdx" creationdate="20141109T151100Z">
        <seg>task printProps &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task produce &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160718T072048Z" creationid="haohang" creationdate="20160718T072048Z">
        <seg>task produce &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task rename(type: Copy) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T140710Z" creationid="msdx" creationdate="20141113T140710Z">
        <seg>task rename(type: Copy) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task spiJar(type: Jar) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T084524Z" creationid="haohang" creationdate="20160726T084524Z">
        <seg>task spiJar(type: Jar) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task stuffZip (type: Zip) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160109T073059Z" creationid="95" creationdate="20160109T073059Z">
        <seg>task stuffZip (type: Zip) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task taskX &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T122607Z" creationid="msdx" creationdate="20141110T122607Z">
        <seg>task taskX &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task taskX(dependsOn: &lt;s1&gt;':projectB:taskY'&lt;/s1&gt;) &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T122312Z" creationid="msdx" creationdate="20141110T122312Z">
        <seg>task taskX(dependsOn: &lt;s1&gt;':projectB:taskY'&lt;/s1&gt;) &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task taskY &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T122319Z" creationid="msdx" creationdate="20141110T122319Z">
        <seg>task taskY &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task transform {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T060320Z" creationid="msdx" creationdate="20141111T060320Z">
        <seg>task transform {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task writeNewPom &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160104T152810Z" creationid="95" creationdate="20160104T152810Z">
        <seg>task writeNewPom &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task zip &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141115T162753Z" creationid="msdx" creationdate="20141115T162753Z">
        <seg>task zip &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task(&lt;s0&gt;'hello'&lt;/s0&gt;) &lt;&lt;
{</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T022745Z" creationid="msdx" creationdate="20141110T022745Z">
        <seg>task(&lt;s0&gt;'hello'&lt;/s0&gt;) &lt;&lt;
{</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task(hello) &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T021256Z" creationid="msdx" creationdate="20141110T021256Z">
        <seg>task(hello) &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task(taskName) &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T065001Z" creationid="msdx" creationdate="20141111T065001Z">
        <seg>task(taskName) &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task.srcDir = &lt;s0&gt;'src/main/java'&lt;/s0&gt;
}

task a

println &lt;s1&gt;"source dir is $a.srcDir"&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T135055Z" creationid="95" creationdate="20160521T135055Z">
        <seg>task.srcDir = &lt;s0&gt;'src/main/java'&lt;/s0&gt;
}

task a

println &lt;s1&gt;"source dir is $a.srcDir"&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>taskReport</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T061526Z" creationid="haohang" creationdate="20150628T061526Z">
        <seg>taskReport</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tasks.addRule(&lt;s0&gt;"Pattern: ping&lt;ID&gt;"&lt;/s0&gt;) { String taskName -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T064958Z" creationid="msdx" creationdate="20141111T064958Z">
        <seg>tasks.addRule(&lt;s0&gt;"Pattern: ping&lt;ID&gt;"&lt;/s0&gt;) { String taskName -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tasks.create(name: &lt;s0&gt;'hello'&lt;/s0&gt;) &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T023139Z" creationid="msdx" creationdate="20141110T023139Z">
        <seg>tasks.create(name: &lt;s0&gt;'hello'&lt;/s0&gt;) &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tasks.findAll { task -&gt; task.name.startsWith(&lt;s1&gt;'lib'&lt;/s1&gt;) }
}

task lib1 &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T123905Z" creationid="msdx" creationdate="20141110T123905Z">
        <seg>tasks.findAll { task -&gt; task.name.startsWith(&lt;s1&gt;'lib'&lt;/s1&gt;) }
}

task lib1 &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tasks.whenTaskAdded { task -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T135054Z" creationid="95" creationdate="20160521T135054Z">
        <seg>tasks.whenTaskAdded { task -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tasks.withType(ScalaCompile) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150430T160054Z" creationid="msdx" creationdate="20150430T160054Z">
        <seg>tasks.withType(ScalaCompile) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>test</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083217Z" creationid="msdx" creationdate="20150428T083217Z">
        <seg>test</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>test report task combines the outputs of all executed test tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T145406Z" creationid="msdx" creationdate="20141110T145406Z">
        <seg>测试报告任务结合了所有执行的测试任务的输出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>test {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T082901Z" creationid="msdx" creationdate="20150428T082901Z">
        <seg>test {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>test-results</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083237Z" creationid="msdx" creationdate="20150428T083237Z">
        <seg>test-results</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>test.testResultsDir (if the directory exists)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150514T152043Z" creationid="msdx" creationdate="20150514T152043Z">
        <seg>test.testResultsDir （如果该目录存在）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>test/java/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T083512Z" creationid="haohang" creationdate="20160726T083512Z">
        <seg>test/java/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>testClasses</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083214Z" creationid="msdx" creationdate="20150428T083214Z">
        <seg>testClasses</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>testClassesDir</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T144355Z" creationid="msdx" creationdate="20150428T144355Z">
        <seg>testClassesDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>testClassesDir = sourceSets.intTest.output.classesDir</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083432Z" creationid="msdx" creationdate="20150428T083432Z">
        <seg>testClassesDir = sourceSets.intTest.output.classesDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>testCompile</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083231Z" creationid="msdx" creationdate="20150428T083231Z">
        <seg>testCompile</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>testCompile &lt;s0&gt;"org.codehaus.groovy:groovy-all:2.2.0"&lt;/s0&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T080016Z" creationid="msdx" creationdate="20150429T080016Z">
        <seg>testCompile &lt;s0&gt;"org.codehaus.groovy:groovy-all:2.2.0"&lt;/s0&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>testCompile &lt;s0&gt;"org.scala-lang:scala-library:2.9.2"&lt;/s0&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150429T153036Z" creationid="msdx" creationdate="20150429T153036Z">
        <seg>testCompile &lt;s0&gt;"org.scala-lang:scala-library:2.9.2"&lt;/s0&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>testCompile &lt;s11&gt;"junit:junit:4.11"&lt;/s11&gt;, project(&lt;s12&gt;':api'&lt;/s12&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T084543Z" creationid="haohang" creationdate="20160726T084543Z">
        <seg>testCompile &lt;s11&gt;"junit:junit:4.11"&lt;/s11&gt;, project(&lt;s12&gt;':api'&lt;/s12&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>testCompile &lt;s3&gt;"junit:junit:4.11"&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T083801Z" creationid="haohang" creationdate="20160726T083801Z">
        <seg>testCompile &lt;s3&gt;"junit:junit:4.11"&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>testCompile &lt;s3&gt;'junit:junit:4.11'&lt;/s3&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T065507Z" creationid="msdx" creationdate="20141030T065507Z">
        <seg>testCompile &lt;s3&gt;'junit:junit:4.11'&lt;/s3&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>testCompile &lt;s9&gt;"junit:junit:4.11"&lt;/s9&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T093820Z" creationid="msdx" creationdate="20150503T093820Z">
        <seg>testCompile &lt;s3&gt;'junit:junit:4.11'&lt;/s3&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>testDirs += sourceSets.integTest.allSource.srcDirs
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T092528Z" creationid="msdx" creationdate="20150512T092528Z">
        <seg>testDirs += sourceSets.integTest.allSource.srcDirs
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>testReportDir</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083239Z" creationid="msdx" creationdate="20150428T083239Z">
        <seg>testReportDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>testReportDirName</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083238Z" creationid="msdx" creationdate="20150428T083238Z">
        <seg>testReportDirName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>testResultsDir</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083237Z" creationid="msdx" creationdate="20150428T083237Z">
        <seg>testResultsDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>testResultsDirName</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083237Z" creationid="msdx" creationdate="20150428T083237Z">
        <seg>testResultsDirName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>testRuntime</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083232Z" creationid="msdx" creationdate="20150428T083232Z">
        <seg>testRuntime</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>testSrcDirs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T144358Z" creationid="msdx" creationdate="20150428T144358Z">
        <seg>testSrcDirs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tests</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083239Z" creationid="msdx" creationdate="20150428T083239Z">
        <seg>tests</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>title</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083440Z" creationid="msdx" creationdate="20150428T083440Z">
        <seg>title</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>toolChains {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T091221Z" creationid="haohang" creationdate="20160408T091221Z">
        <seg>toolChains {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>toolVersion = &lt;s0&gt;"0.6.2.201302030002"&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T131554Z" creationid="msdx" creationdate="20150506T131554Z">
        <seg>toolVersion = &lt;s0&gt;"0.6.2.201302030002"&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>transitive = false</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T091424Z" creationid="haohang" creationdate="20150801T091424Z">
        <seg>transitive = false</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>transitive = true</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T075931Z" creationid="haohang" creationdate="20150722T075931Z">
        <seg>transitive = true</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tropicalFish/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160527T163810Z" creationid="95" creationdate="20160527T163810Z">
        <seg>tropicalFish/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tropicalFish/build.gradle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160530T144426Z" creationid="95" creationdate="20160530T144426Z">
        <seg>tropicalFish/build.gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>troubleshooting.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T154055Z" creationid="msdx" creationdate="20141109T154055Z">
        <seg>troubleshooting.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>troubleshooting.html#N10187</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162211Z" creationid="msdx" creationdate="20141109T162211Z">
        <seg>troubleshooting.html#N10187</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>troubleshooting.html#N10194</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162242Z" creationid="msdx" creationdate="20141109T162242Z">
        <seg>troubleshooting.html#N10194</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>true</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T132306Z" creationid="msdx" creationdate="20150506T132306Z">
        <seg>true</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tuna-1.0 -&gt; herring-1.0</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T034315Z" creationid="haohang" creationdate="20150807T034315Z">
        <seg>tuna-1.0 -&gt; herring-1.0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_gradle_command_line.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T071201Z" creationid="msdx" creationdate="20141030T071201Z">
        <seg>tutorial_gradle_command_line.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_gradle_command_line.html#N10779</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163825Z" creationid="msdx" creationdate="20141109T163825Z">
        <seg>tutorial_gradle_command_line.html#N10779</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_gradle_command_line.html#N107F0</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163856Z" creationid="msdx" creationdate="20141109T163856Z">
        <seg>tutorial_gradle_command_line.html#N107F0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_gradle_command_line.html#N10952</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T164808Z" creationid="msdx" creationdate="20141109T164808Z">
        <seg>tutorial_gradle_command_line.html#N10952</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_gradle_command_line.html#para:commandline_dependency_report</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150807T032812Z" creationid="haohang" creationdate="20150807T032812Z">
        <seg>tutorial_gradle_command_line.html#para:commandline_dependency_report</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_gradle_command_line.html#sec:continue_build_on_failure</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163846Z" creationid="msdx" creationdate="20141109T163846Z">
        <seg>tutorial_gradle_command_line.html#sec:continue_build_on_failure</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_gradle_command_line.html#sec:dry_run</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163936Z" creationid="msdx" creationdate="20141109T163936Z">
        <seg>tutorial_gradle_command_line.html#sec:dry_run</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_gradle_command_line.html#sec:excluding_tasks_from_the_command_line</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163831Z" creationid="msdx" creationdate="20141109T163831Z">
        <seg>tutorial_gradle_command_line.html#sec:excluding_tasks_from_the_command_line</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_gradle_command_line.html#sec:obtaining_information_about_your_build</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163921Z" creationid="msdx" creationdate="20141109T163921Z">
        <seg>tutorial_gradle_command_line.html#sec:obtaining_information_about_your_build</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_gradle_command_line.html#sec:selecting_build</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163906Z" creationid="msdx" creationdate="20141109T163906Z">
        <seg>tutorial_gradle_command_line.html#sec:selecting_build</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_gradle_gui.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T031233Z" creationid="msdx" creationdate="20141108T031233Z">
        <seg>tutorial_gradle_gui.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_gradle_gui.html#N10980</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T031054Z" creationid="msdx" creationdate="20141108T031054Z">
        <seg>tutorial_gradle_gui.html#N10980</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_gradle_gui.html#N10996</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T164821Z" creationid="msdx" creationdate="20141109T164821Z">
        <seg>tutorial_gradle_gui.html#N10996</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_gradle_gui.html#N1099D</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T164823Z" creationid="msdx" creationdate="20141109T164823Z">
        <seg>tutorial_gradle_gui.html#N1099D</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_gradle_gui.html#N109A2</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T164824Z" creationid="msdx" creationdate="20141109T164824Z">
        <seg>tutorial_gradle_gui.html#N109A2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_groovy_projects.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T071153Z" creationid="msdx" creationdate="20141030T071153Z">
        <seg>tutorial_groovy_projects.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_groovy_projects.html#N106BE</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163657Z" creationid="msdx" creationdate="20141109T163657Z">
        <seg>tutorial_groovy_projects.html#N106BE</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_groovy_projects.html#N10707</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163728Z" creationid="msdx" creationdate="20141109T163728Z">
        <seg>tutorial_groovy_projects.html#N10707</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_java_projects.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T161502Z" creationid="msdx" creationdate="20141105T161502Z">
        <seg>tutorial_java_projects.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_java_projects.html#N103C9</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163426Z" creationid="msdx" creationdate="20141109T163426Z">
        <seg>tutorial_java_projects.html#N103C9</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_java_projects.html#N103DA</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163431Z" creationid="msdx" creationdate="20141109T163431Z">
        <seg>tutorial_java_projects.html#N103DA</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_java_projects.html#N1054F</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163503Z" creationid="msdx" creationdate="20141109T163503Z">
        <seg>tutorial_java_projects.html#N1054F</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_java_projects.html#sec:examples</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163437Z" creationid="msdx" creationdate="20141109T163437Z">
        <seg>tutorial_java_projects.html#sec:examples</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_this_and_that.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T031236Z" creationid="msdx" creationdate="20141108T031236Z">
        <seg>tutorial_this_and_that.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_this_and_that.html#N10C8A</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T164951Z" creationid="msdx" creationdate="20141109T164951Z">
        <seg>tutorial_this_and_that.html#N10C8A</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_this_and_that.html#sec:caching</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T164958Z" creationid="msdx" creationdate="20141109T164958Z">
        <seg>tutorial_this_and_that.html#sec:caching</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_this_and_that.html#sec:configuring_arbitrary_objects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T164942Z" creationid="msdx" creationdate="20141109T164942Z">
        <seg>tutorial_this_and_that.html#sec:configuring_arbitrary_objects</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_this_and_that.html#sec:configuring_using_external_script</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T164933Z" creationid="msdx" creationdate="20141109T164933Z">
        <seg>tutorial_this_and_that.html#sec:configuring_using_external_script</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_this_and_that.html#sec:directory_creation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T164918Z" creationid="msdx" creationdate="20141109T164918Z">
        <seg>tutorial_this_and_that.html#sec:directory_creation</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_this_and_that.html#sec:gradle_properties_and_system_properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T164924Z" creationid="msdx" creationdate="20141109T164924Z">
        <seg>tutorial_this_and_that.html#sec:gradle_properties_and_system_properties</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_using_tasks.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T155952Z" creationid="msdx" creationdate="20141109T155952Z">
        <seg>tutorial_using_tasks.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_using_tasks.html#N101A5</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162258Z" creationid="msdx" creationdate="20141109T162258Z">
        <seg>tutorial_using_tasks.html#N101A5</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_using_tasks.html#N101BC</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162323Z" creationid="msdx" creationdate="20141109T162323Z">
        <seg>tutorial_using_tasks.html#N101BC</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_using_tasks.html#N10222</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162329Z" creationid="msdx" creationdate="20141109T162329Z">
        <seg>tutorial_using_tasks.html#N10222</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_using_tasks.html#N10239</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162412Z" creationid="msdx" creationdate="20141109T162412Z">
        <seg>tutorial_using_tasks.html#N10239</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_using_tasks.html#N1029B</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162454Z" creationid="msdx" creationdate="20141109T162454Z">
        <seg>tutorial_using_tasks.html#N1029B</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_using_tasks.html#N102B0</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162459Z" creationid="msdx" creationdate="20141109T162459Z">
        <seg>tutorial_using_tasks.html#N102B0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_using_tasks.html#N10326</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163249Z" creationid="msdx" creationdate="20141109T163249Z">
        <seg>tutorial_using_tasks.html#N10326</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_using_tasks.html#N10346</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163310Z" creationid="msdx" creationdate="20141109T163310Z">
        <seg>tutorial_using_tasks.html#N10346</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_using_tasks.html#N103B3</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163408Z" creationid="msdx" creationdate="20141109T163408Z">
        <seg>tutorial_using_tasks.html#N103B3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_using_tasks.html#configure-by-dag</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163349Z" creationid="msdx" creationdate="20141109T163349Z">
        <seg>tutorial_using_tasks.html#configure-by-dag</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_using_tasks.html#sec:default_tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163340Z" creationid="msdx" creationdate="20141109T163340Z">
        <seg>tutorial_using_tasks.html#sec:default_tasks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_using_tasks.html#sec:extra_task_properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163236Z" creationid="msdx" creationdate="20141109T163236Z">
        <seg>tutorial_using_tasks.html#sec:extra_task_properties</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_using_tasks.html#sec:shortcut_notations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162514Z" creationid="msdx" creationdate="20141109T162514Z">
        <seg>tutorial_using_tasks.html#sec:shortcut_notations</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_using_tasks.html#sec:task_dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162436Z" creationid="msdx" creationdate="20141109T162436Z">
        <seg>tutorial_using_tasks.html#sec:task_dependencies</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorials.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141101T034311Z" creationid="msdx" creationdate="20141101T034311Z">
        <seg>tutorials.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorials.html#N100CE</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T162022Z" creationid="msdx" creationdate="20141109T162022Z">
        <seg>tutorials.html#N100CE</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>twitter</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T065604Z" creationid="haohang" creationdate="20150628T065604Z">
        <seg>twitter</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>type &lt;s2&gt;'text'&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151226T091159Z" creationid="95" creationdate="20151226T091159Z">
        <seg>type &lt;s2&gt;'text'&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>unit tests should run before integration tests.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T144911Z" creationid="msdx" creationdate="20141110T144725Z">
        <seg>单元测试应在集成测试之前运行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>unspecified</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T044441Z" creationid="msdx" creationdate="20141108T044441Z">
        <seg>未指定</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>upload&lt;e0&gt;&lt;c1&gt;ConfigurationName&lt;/c1&gt;&lt;/e0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083228Z" creationid="msdx" creationdate="20150428T083228Z">
        <seg>upload&lt;e0&gt;&lt;c1&gt;ConfigurationName&lt;/c1&gt;&lt;/e0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>uploadArchives</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083218Z" creationid="msdx" creationdate="20150428T083218Z">
        <seg>uploadArchives</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>uploadArchives {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160106T142714Z" creationid="95" creationdate="20160106T142714Z">
        <seg>uploadArchives {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>uploadTask.repositories.mavenDeployer.pom.artifactId (if set) or archiveTask.baseName.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T144130Z" creationid="95" creationdate="20160105T144037Z">
        <seg>uploadTask.repositories.mavenDeployer.pom.artifactId（如果有设置的话）或archiveTask.baseName.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>url &lt;s0&gt;"http://repo.mycompany.com/maven2"&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150909T052930Z" creationid="haohang" creationdate="20150909T052930Z">
        <seg>url &lt;s0&gt;"http://repo.mycompany.com/maven2"&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>url &lt;s0&gt;"http://repo.mycompany.com/repo"&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T110442Z" creationid="95" creationdate="20151006T110442Z">
        <seg>url &lt;s0&gt;"http://repo.mycompany.com/repo"&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>url &lt;s0&gt;'http://repo.mycompany.com'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T133233Z" creationid="95" creationdate="20151006T133233Z">
        <seg>url &lt;s0&gt;'http://repo.mycompany.com'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>url &lt;s1&gt;"http://repo.mycompany.com/repo"&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T091454Z" creationid="95" creationdate="20151115T091454Z">
        <seg>url &lt;s1&gt;"http://repo.mycompany.com/repo"&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>url &lt;s1&gt;"http://repo2.mycompany.com/maven2"&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150909T053116Z" creationid="haohang" creationdate="20150909T053116Z">
        <seg>url &lt;s1&gt;"http://repo2.mycompany.com/maven2"&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>url &lt;s2&gt;"http://repo.mycompany.com/maven2"&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150909T053444Z" creationid="haohang" creationdate="20150909T053444Z">
        <seg>url &lt;s2&gt;"http://repo.mycompany.com/maven2"&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>url &lt;s2&gt;'http://www.apache.org/licenses/LICENSE-2.0.txt'&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160104T152817Z" creationid="95" creationdate="20160104T152817Z">
        <seg>url &lt;s2&gt;'http://www.apache.org/licenses/LICENSE-2.0.txt'&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>url &lt;s4&gt;"http://repo.mycompany.com"&lt;/s4&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151226T092058Z" creationid="95" creationdate="20151226T092058Z">
        <seg>url &lt;s4&gt;"http://repo.mycompany.com"&lt;/s4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>url = &lt;s0&gt;"http://my.server.com"&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150510T143650Z" creationid="msdx" creationdate="20150510T143650Z">
        <seg>url = &lt;s0&gt;"http://my.server.com"&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>url = &lt;s1&gt;"http://my.server.com"&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T091238Z" creationid="msdx" creationdate="20150512T091238Z">
        <seg>url = &lt;s0&gt;"http://my.server.com"&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>url = &lt;s1&gt;"jdbc:mysql://my.server.com/sonar"&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150510T143651Z" creationid="msdx" creationdate="20150510T143651Z">
        <seg>url = &lt;s1&gt;"jdbc:mysql://my.server.com/sonar"&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>url = &lt;s2&gt;"jdbc:mysql://my.server.com/sonar"&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T091239Z" creationid="msdx" creationdate="20150512T091239Z">
        <seg>url = &lt;s1&gt;"jdbc:mysql://my.server.com/sonar"&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>useJUnit {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T082902Z" creationid="msdx" creationdate="20150428T082902Z">
        <seg>useJUnit {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>useLogger(&lt;s0&gt;new&lt;/s0&gt; CustomEventLogger())

&lt;s1&gt;class&lt;/s1&gt; CustomEventLogger &lt;s2&gt;extends&lt;/s2&gt; BuildAdapter &lt;s3&gt;implements&lt;/s3&gt; TaskExecutionListener {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141116T154815Z" creationid="msdx" creationdate="20141116T154815Z">
        <seg>useLogger(&lt;s0&gt;new&lt;/s0&gt; CustomEventLogger())

&lt;s1&gt;class&lt;/s1&gt; CustomEventLogger &lt;s2&gt;extends&lt;/s2&gt; BuildAdapter &lt;s3&gt;implements&lt;/s3&gt; TaskExecutionListener {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>useTestNG {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083148Z" creationid="msdx" creationdate="20150428T083148Z">
        <seg>useTestNG {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>userguide.css</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T035422Z" creationid="msdx" creationdate="20141030T035422Z">
        <seg>userguide.css</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>userguide.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141030T071142Z" creationid="msdx" creationdate="20141030T071142Z">
        <seg>userguide.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>username &lt;s0&gt;'user'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150909T053440Z" creationid="haohang" creationdate="20150909T053440Z">
        <seg>username &lt;s0&gt;'user'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>username &lt;s1&gt;'user'&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T133235Z" creationid="95" creationdate="20151006T133235Z">
        <seg>username &lt;s1&gt;'user'&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>username &lt;s2&gt;"username"&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151226T092054Z" creationid="95" creationdate="20151226T092054Z">
        <seg>username &lt;s2&gt;"username"&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>username = &lt;s0&gt;'myId'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T063505Z" creationid="haohang" creationdate="20150628T063505Z">
        <seg>username = &lt;s0&gt;'myId'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>username = &lt;s3&gt;"Fred Flintstone"&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150510T143651Z" creationid="msdx" creationdate="20150510T143651Z">
        <seg>username = &lt;s3&gt;"Fred Flintstone"&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>username = &lt;s4&gt;"Fred Flintstone"&lt;/s4&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150512T091239Z" creationid="msdx" creationdate="20150512T091239Z">
        <seg>username = &lt;s3&gt;"Fred Flintstone"&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>username, password</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150628T065609Z" creationid="haohang" creationdate="20150628T065609Z">
        <seg>username, password</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>validate I have the correct credentials before starting the work for a release build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T144724Z" creationid="msdx" creationdate="20141110T144311Z">
        <seg>验证在开始发布的工作前有一个正确的证书。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>verbose</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150513T053936Z" creationid="msdx" creationdate="20150513T053936Z">
        <seg>verbose</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>version</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T044443Z" creationid="msdx" creationdate="20141108T044443Z">
        <seg>version</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>version = &lt;s0&gt;'1.0-SNAPSHOT'&lt;/s0&gt;
ext.isReleaseVersion = !version.endsWith(&lt;s1&gt;"SNAPSHOT"&lt;/s1&gt;)

signing {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160126T141410Z" creationid="95" creationdate="20160126T141410Z">
        <seg>version = &lt;s0&gt;'1.0-SNAPSHOT'&lt;/s0&gt;
ext.isReleaseVersion = !version.endsWith(&lt;s1&gt;"SNAPSHOT"&lt;/s1&gt;)

signing {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>version = &lt;s2&gt;'1.0'&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T083741Z" creationid="haohang" creationdate="20160726T083741Z">
        <seg>version = &lt;s2&gt;'1.0'&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>version = &lt;s2&gt;'1.0'&lt;/s2&gt;
}

project(&lt;s3&gt;':api'&lt;/s3&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T084512Z" creationid="haohang" creationdate="20160726T084512Z">
        <seg>version = &lt;s2&gt;'1.0'&lt;/s2&gt;
}

project(&lt;s3&gt;':api'&lt;/s3&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>version = &lt;s2&gt;'1.0'&lt;/s2&gt;
}

subprojects {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160722T091241Z" creationid="haohang" creationdate="20160722T091241Z">
        <seg>version = &lt;s2&gt;'1.0'&lt;/s2&gt;
}

subprojects {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>visual-studio</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104926Z" creationid="msdx" creationdate="20150428T104926Z">
        <seg>visual-studio</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>visualCpp(VisualCpp) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T091221Z" creationid="haohang" creationdate="20160408T091221Z">
        <seg>visualCpp(VisualCpp) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>war</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104757Z" creationid="msdx" creationdate="20150428T104757Z">
        <seg>war</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>war_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104800Z" creationid="msdx" creationdate="20150428T104800Z">
        <seg>war_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>war_plugin.html#N12FDE</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T132159Z" creationid="msdx" creationdate="20150509T132159Z">
        <seg>war_plugin.html#N12FDE</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>war_plugin.html#N12FED</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T132202Z" creationid="msdx" creationdate="20150509T132202Z">
        <seg>war_plugin.html#N12FED</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>war_plugin.html#N13033</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T132204Z" creationid="msdx" creationdate="20150509T132204Z">
        <seg>war_plugin.html#N13033</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>war_plugin.html#N1304D</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T132208Z" creationid="msdx" creationdate="20150509T132205Z">
        <seg>war_plugin.html#N1304D</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>war_plugin.html#N13079</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T132210Z" creationid="msdx" creationdate="20150509T132210Z">
        <seg>war_plugin.html#N13079</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>war_plugin.html#sec:customizing</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T132217Z" creationid="msdx" creationdate="20150509T132217Z">
        <seg>war_plugin.html#sec:customizing</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>war_plugin.html#sec:default_settings</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150509T132212Z" creationid="msdx" creationdate="20150509T132212Z">
        <seg>war_plugin.html#sec:default_settings</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>water/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160522T125257Z" creationid="95" creationdate="20160522T125257Z">
        <seg>water/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>webAppDir</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T092314Z" creationid="msdx" creationdate="20150503T092314Z">
        <seg>webAppDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>webAppDirName</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T092125Z" creationid="msdx" creationdate="20150503T092125Z">
        <seg>webAppDirName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>webDist/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160722T091202Z" creationid="haohang" creationdate="20160722T091202Z">
        <seg>webDist/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>webInf { from &lt;s13&gt;'src/additionalWebInf'&lt;/s13&gt; } &lt;s14&gt;// adds a file-set to the WEB-INF dir.&lt;/s14&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T093821Z" creationid="msdx" creationdate="20150503T093821Z">
        <seg>webInf { from &lt;s13&gt;'src/additionalWebInf'&lt;/s13&gt; } &lt;s14&gt;// adds a file-set to the WEB-INF dir.&lt;/s14&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>webXml = file(&lt;s18&gt;'src/someWeb.xml'&lt;/s18&gt;) &lt;s19&gt;// copies a file to WEB-INF/web.xml&lt;/s19&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150503T093821Z" creationid="msdx" creationdate="20150503T093821Z">
        <seg>webXml = file(&lt;s18&gt;'src/someWeb.xml'&lt;/s18&gt;) &lt;s19&gt;// copies a file to WEB-INF/web.xml&lt;/s19&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>web_project_tutorial.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T161502Z" creationid="msdx" creationdate="20141105T161502Z">
        <seg>web_project_tutorial.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>web_project_tutorial.html#N10722</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163745Z" creationid="msdx" creationdate="20141109T163745Z">
        <seg>web_project_tutorial.html#N10722</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>web_project_tutorial.html#N10747</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163757Z" creationid="msdx" creationdate="20141109T163757Z">
        <seg>web_project_tutorial.html#N10747</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>web_project_tutorial.html#N10760</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T163810Z" creationid="msdx" creationdate="20141109T163810Z">
        <seg>web_project_tutorial.html#N10760</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>webdav</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160105T141834Z" creationid="95" creationdate="20160105T141834Z">
        <seg>webdav</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>whenMerged { classpath -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T065954Z" creationid="haohang" creationdate="20150625T065954Z">
        <seg>whenMerged { classpath -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>whenMerged { module -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T074612Z" creationid="haohang" creationdate="20150625T074612Z">
        <seg>whenMerged { module -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>windows-resources</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141209T074227Z" creationid="msdx" creationdate="20141209T074227Z">
        <seg>windows-resources</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>withXml { provider -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150625T074624Z" creationid="haohang" creationdate="20150625T074624Z">
        <seg>withXml { provider -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>withXml { provider -&gt; &lt;s27&gt;// add a custom node to the XML&lt;/s27&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150504T142902Z" creationid="msdx" creationdate="20150504T142902Z">
        <seg>withXml { provider -&gt; &lt;s27&gt;// add a custom node to the XML&lt;/s27&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>working_with_files.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T155950Z" creationid="msdx" creationdate="20141109T155950Z">
        <seg>working_with_files.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>working_with_files.html#archiveTasksNamingProperties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T155235Z" creationid="msdx" creationdate="20141113T155235Z">
        <seg>working_with_files.html#archiveTasksNamingProperties</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>working_with_files.html#sec:archive_contents</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T030401Z" creationid="msdx" creationdate="20150501T030401Z">
        <seg>working_with_files.html#sec:archive_contents</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>working_with_files.html#sec:archives</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T144403Z" creationid="msdx" creationdate="20150428T144403Z">
        <seg>working_with_files.html#sec:archives</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>working_with_files.html#sec:copying_files</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083442Z" creationid="msdx" creationdate="20150428T083442Z">
        <seg>working_with_files.html#sec:copying_files</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>working_with_files.html#sec:file_collections</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141113T122858Z" creationid="msdx" creationdate="20141113T122858Z">
        <seg>working_with_files.html#sec:file_collections</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>working_with_files.html#sec:file_trees</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T030400Z" creationid="msdx" creationdate="20150501T030400Z">
        <seg>working_with_files.html#sec:file_trees</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>working_with_files.html#sec:locating_files</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141112T145253Z" creationid="msdx" creationdate="20141112T145253Z">
        <seg>working_with_files.html#sec:locating_files</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>working_with_files.html#sec:specifying_multiple_files</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083418Z" creationid="msdx" creationdate="20150428T083418Z">
        <seg>working_with_files.html#sec:specifying_multiple_files</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>working_with_files.html#sec:sync_task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150501T030402Z" creationid="msdx" creationdate="20150501T030402Z">
        <seg>working_with_files.html#sec:sync_task</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>wrapper</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104922Z" creationid="msdx" creationdate="20150428T104922Z">
        <seg>wrapper</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>wrapper_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T104927Z" creationid="msdx" creationdate="20150428T104927Z">
        <seg>wrapper_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>writing_build_scripts.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141105T145254Z" creationid="msdx" creationdate="20141105T145254Z">
        <seg>writing_build_scripts.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>writing_build_scripts.html#N109CC</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T164830Z" creationid="msdx" creationdate="20141109T164830Z">
        <seg>writing_build_scripts.html#N109CC</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>writing_build_scripts.html#N10AD2</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T164849Z" creationid="msdx" creationdate="20141109T164849Z">
        <seg>writing_build_scripts.html#N10AD2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>writing_build_scripts.html#N10ADF</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T164854Z" creationid="msdx" creationdate="20141109T164854Z">
        <seg>writing_build_scripts.html#N10ADF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>writing_build_scripts.html#N10B36</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T164858Z" creationid="msdx" creationdate="20141109T164858Z">
        <seg>writing_build_scripts.html#N10B36</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>writing_build_scripts.html#sec:extra_properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160530T144114Z" creationid="95" creationdate="20160530T144114Z">
        <seg>writing_build_scripts.html#sec:extra_properties</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>writing_build_scripts.html#sec:project_api</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T164840Z" creationid="msdx" creationdate="20141109T164840Z">
        <seg>writing_build_scripts.html#sec:project_api</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>x6&lt;s2&gt;4&lt;/s2&gt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160405T034025Z" creationid="haohang" creationdate="20160405T034025Z">
        <seg>x6&lt;s2&gt;4&lt;/s2&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>x86, x86_64</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T092150Z" creationid="haohang" creationdate="20160408T092150Z">
        <seg>x86, x86_64</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>x86, x86_64, ia-64</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T092152Z" creationid="haohang" creationdate="20160408T092152Z">
        <seg>x86, x86_64, ia-64</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>x8&lt;s0&gt;6&lt;/s0&gt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160405T034023Z" creationid="haohang" creationdate="20160405T034023Z">
        <seg>x8&lt;s0&gt;6&lt;/s0&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>xml.enabled false</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150506T132001Z" creationid="msdx" creationdate="20150506T132001Z">
        <seg>xml.enabled false</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141109T093721Z" creationid="msdx" creationdate="20141109T093721Z">
        <seg>}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T122321Z" creationid="msdx" creationdate="20141110T122321Z">
        <seg>}
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}
}

&lt;s2&gt;// Can use a rule instead to enable (or disable) dynamic resolve mode for all repositories&lt;/s2&gt;
repositories.withType(IvyArtifactRepository) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T091456Z" creationid="95" creationdate="20151115T091456Z">
        <seg>}
}

&lt;s2&gt;// Can use a rule instead to enable (or disable) dynamic resolve mode for all repositories&lt;/s2&gt;
repositories.withType(IvyArtifactRepository) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}
}

&lt;s2&gt;// Iterate over the source sets&lt;/s2&gt;
sourceSets.all {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T083249Z" creationid="msdx" creationdate="20150428T083249Z">
        <seg>}
}

&lt;s2&gt;// Iterate over the source sets&lt;/s2&gt;
sourceSets.all {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}
}

applicationDistribution.from(createDocs) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150703T100429Z" creationid="haohang" creationdate="20150703T100429Z">
        <seg>}
}

applicationDistribution.from(createDocs) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}
}

def findDefaultVersionInCatalog(String group, String name) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151115T070655Z" creationid="95" creationdate="20151115T070655Z">
        <seg>}
}

def findDefaultVersionInCatalog(String group, String name) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}
}

libraries {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160408T081117Z" creationid="haohang" creationdate="20160408T081117Z">
        <seg>}
}

libraries {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}
}

project(&lt;s2&gt;":exe"&lt;/s2&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160325T033436Z" creationid="haohang" creationdate="20160325T033436Z">
        <seg>}
}

project(&lt;s2&gt;":exe"&lt;/s2&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}
}

project(&lt;s3&gt;'projectB'&lt;/s3&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141110T122314Z" creationid="msdx" creationdate="20141110T122314Z">
        <seg>}
}

project(&lt;s3&gt;'projectB'&lt;/s3&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}
}

project(&lt;s4&gt;':api'&lt;/s4&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T083843Z" creationid="haohang" creationdate="20160726T083812Z">
        <seg>}
}

project(&lt;s4&gt;':api'&lt;/s4&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}
}

project(&lt;s6&gt;':services:personService'&lt;/s6&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T083850Z" creationid="haohang" creationdate="20160726T083850Z">
        <seg>}
}

project(&lt;s6&gt;':services:personService'&lt;/s6&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}
}

project(&lt;s7&gt;':services:personService'&lt;/s7&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160726T084537Z" creationid="haohang" creationdate="20160726T084537Z">
        <seg>}
}

project(&lt;s7&gt;':services:personService'&lt;/s7&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}
}

task compile &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150801T094457Z" creationid="haohang" creationdate="20150801T094457Z">
        <seg>}
}

task compile &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}
}

task explodedDist(dependsOn: assemble) &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20160722T091247Z" creationid="haohang" creationdate="20160722T091247Z">
        <seg>}
}

task explodedDist(dependsOn: assemble) &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}
}

task groupPing {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141111T065649Z" creationid="msdx" creationdate="20141111T065649Z">
        <seg>}
}

task groupPing {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}
}

task listBirds &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151129T041822Z" creationid="95" creationdate="20151129T041822Z">
        <seg>}
}

task listBirds &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}
}

task printProperties &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20141108T050730Z" creationid="msdx" creationdate="20141108T050730Z">
        <seg>}
}

task printProperties &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}
}

task testReport(type: TestReport) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="msdx" changedate="20150428T142809Z" creationid="msdx" creationdate="20150428T142809Z">
        <seg>}
}

task testReport(type: TestReport) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}
}

uploadArchives {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151226T092032Z" creationid="95" creationdate="20151226T092032Z">
        <seg>}
}

uploadArchives {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}
}
configurations.compile {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150722T075937Z" creationid="haohang" creationdate="20150722T075937Z">
        <seg>}
}
configurations.compile {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}
}
repositories {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T133451Z" creationid="95" creationdate="20151006T133451Z">
        <seg>}
}
repositories {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}
}
repositories.localRepository {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20151006T133504Z" creationid="95" creationdate="20151006T133504Z">
        <seg>}
}
repositories.localRepository {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}
}
task fooJar(type: Jar) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20150526T064444Z" creationid="haohang" creationdate="20150526T064444Z">
        <seg>}
}
task fooJar(type: Jar) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>} &lt;s2&gt;else&lt;/s2&gt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160324T152625Z" creationid="95" creationdate="20160324T152625Z">
        <seg>} &lt;s2&gt;else&lt;/s2&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}.writeTo(&lt;s4&gt;"$buildDir/newpom.xml"&lt;/s4&gt;)
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160104T152820Z" creationid="95" creationdate="20160104T152820Z">
        <seg>}.writeTo(&lt;s4&gt;"$buildDir/newpom.xml"&lt;/s4&gt;)
}</seg>
      </tuv>
    </tu>
<!-- Alternative translations -->
    <tu>
      <prop type="file">build_lifecycle.html</prop>
      <prop type="prev">../dsl/org.gradle.api.invocation.Gradle.html</prop>
      <prop type="next">55.6.2. Task creation</prop>
      <tuv lang="EN-US">
        <seg>You can also add a &lt;a0&gt;&lt;c1&gt;ProjectEvaluationListener&lt;/c1&gt;&lt;/a0&gt; to the &lt;a2&gt;&lt;c3&gt;Gradle&lt;/c3&gt;&lt;/a2&gt; to receive these events.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20160521T134029Z" creationid="95" creationdate="20160521T132451Z">
        <seg>你也可以将一个&lt;a0&gt;&lt;c1&gt;ProjectEvaluationListener&lt;/c1&gt;&lt;/a0&gt;添加到&lt;a2&gt;&lt;c3&gt;Gradle&lt;/c3&gt;&lt;/a2&gt;中，来接收这些事件。</seg>
      </tuv>
    </tu>
  </body>
</tmx>
