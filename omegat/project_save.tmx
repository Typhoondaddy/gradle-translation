<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE tmx SYSTEM "tmx11.dtd">
<tmx version="1.1">
  <header creationtool="OmegaT" o-tmf="OmegaT TMX" adminlang="EN-US" datatype="plaintext" creationtoolversion="OmegaT-4.1.2" segtype="sentence" srclang="EN-US"/>
  <body>
<!-- Default translations -->
    <tu>
      <tuv lang="EN-US">
        <seg>#N100BF</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T072132Z" creationid="95" creationdate="20170723T072132Z">
        <seg>#N100BF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#ftn.N100BF</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T070853Z" creationid="95" creationdate="20170723T070853Z">
        <seg>#ftn.N100BF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#ftn.N101CA</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T143921Z" creationid="95" creationdate="20170724T143921Z">
        <seg>#ftn.N101CA</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072430Z" creationid="haohang" creationdate="20170720T072430Z">
        <seg>1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>1.1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072433Z" creationid="haohang" creationdate="20170720T072433Z">
        <seg>1.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>1.1. About this user guide</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T142043Z" creationid="95" creationdate="20170721T142043Z">
        <seg>1.1. 关于本用户指南</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072442Z" creationid="haohang" creationdate="20170720T072442Z">
        <seg>2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>2.1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072445Z" creationid="haohang" creationdate="20170720T072445Z">
        <seg>2.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>2.1. Features</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T165942Z" creationid="95" creationdate="20170721T165942Z">
        <seg>2.1. 特性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>2.2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072450Z" creationid="haohang" creationdate="20170720T072450Z">
        <seg>2.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>2.2. Why Groovy?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T065618Z" creationid="95" creationdate="20170723T065618Z">
        <seg>2.2. 为什么使用 Groovy？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>3.1. Getting Started</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T072518Z" creationid="95" creationdate="20170723T072518Z">
        <seg>34.1. 入门</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>4.1. Prerequisites</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T081223Z" creationid="95" creationdate="20170723T081223Z">
        <seg>4.1. 环境要求</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>4.2. Download</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T114306Z" creationid="95" creationdate="20170723T114306Z">
        <seg>4.2. 下载</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>4.3. Unpacking</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T114407Z" creationid="95" creationdate="20170723T114407Z">
        <seg>4.3. 解压</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>4.4. Environment variables</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T115052Z" creationid="95" creationdate="20170723T115052Z">
        <seg>4.4. 环境变量</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>4.5. Running and testing your installation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T115236Z" creationid="95" creationdate="20170723T115236Z">
        <seg>4.5. 运行和测试您的安装</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>4.6. JVM options</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T115602Z" creationid="95" creationdate="20170723T115602Z">
        <seg>4.6. JVM 选项</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>4.times { counter -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T132724Z" creationid="95" creationdate="20170727T132724Z">
        <seg>4.times { counter -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>4.times { print &lt;s0&gt;"$it "&lt;/s0&gt; }
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155858Z" creationid="95" creationdate="20170726T155858Z">
        <seg>4.times { print &lt;s0&gt;"$it "&lt;/s0&gt; }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>5.1. Working through problems</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T121003Z" creationid="95" creationdate="20170723T121003Z">
        <seg>5.1. 解决问题</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>5.2. Getting help</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T121457Z" creationid="95" creationdate="20170723T121457Z">
        <seg>5.2. 获取帮助</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.1. Projects and tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T122532Z" creationid="95" creationdate="20170723T122532Z">
        <seg>6.1. 项目和任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.10. Using Ant Tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T142147Z" creationid="95" creationdate="20170727T142147Z">
        <seg>6.10. 使用 Ant 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.2. Hello world</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T143914Z" creationid="95" creationdate="20170724T143914Z">
        <seg>6.2. Hello world</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.3. A shortcut task definition</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T151714Z" creationid="95" creationdate="20170724T151714Z">
        <seg>6.3. 快速任务定义</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.4. Build scripts are code</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155605Z" creationid="95" creationdate="20170726T155605Z">
        <seg>6.4. 构建脚本即代码</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.5. Task dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155926Z" creationid="95" creationdate="20170726T155926Z">
        <seg>6.5. 任务依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.6. Dynamic tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T132506Z" creationid="95" creationdate="20170727T132506Z">
        <seg>6.6. 动态任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.7. Manipulating existing tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T132812Z" creationid="95" creationdate="20170727T132812Z">
        <seg>6.7. 操纵现有任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.8. Shortcut notations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T133636Z" creationid="95" creationdate="20170727T133636Z">
        <seg>6.8. 快捷符号</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.9. Extra task properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T141631Z" creationid="95" creationdate="20170727T141631Z">
        <seg>6.9. 额外的任务属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;Previous&lt;/a0&gt;&lt;s1&gt;|&lt;/s1&gt;&lt;a2&gt;Contents&lt;/a2&gt;&lt;s3&gt;|&lt;/s3&gt;&lt;a4&gt;Next&lt;/a4&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072520Z" creationid="haohang" creationdate="20170720T072520Z">
        <seg>&lt;a0&gt;上一章&lt;/a0&gt;&lt;s1&gt;|&lt;/s1&gt;&lt;a2&gt;目录&lt;/a2&gt;&lt;s3&gt;|&lt;/s3&gt;&lt;a4&gt;下一章&lt;/a4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;&lt;e1&gt;Groovy&lt;/e1&gt;&lt;/s0&gt; build scripts.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T140744Z" creationid="95" creationdate="20170721T140744Z">
        <seg>使用&lt;s0&gt;&lt;e1&gt;Groovy&lt;/e1&gt;&lt;/s0&gt; 语言的构建脚本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;[&lt;a1&gt;1&lt;/a1&gt;] &lt;/s0&gt;At &lt;a2&gt;http://www.defmacro.org/ramblings/lisp.html&lt;/a2&gt; you find an interesting article comparing Ant, XML, Java and Lisp. It's funny that the 'if Java had that syntax' syntax in this article is actually the Groovy syntax.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T072342Z" creationid="95" creationdate="20170723T072136Z">
        <seg>&lt;s0&gt;[&lt;a1&gt;1&lt;/a1&gt;] &lt;/s0&gt;在 &lt;a2&gt;http://www.defmacro.org/ramblings/lisp.html&lt;/a2&gt; 上面，你可以找到一篇比较Ant，XML，Java和List的文章。很有趣的是，这篇文章中的“如果Java具有该语法”的语法实际上正是Groovy的语法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q count
0 1 2 3</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155921Z" creationid="95" creationdate="20170726T155921Z">
        <seg>&gt; gradle -q count
0 1 2 3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q hello
Hello Venus
Hello Earth
Hello Mars
Hello Jupiter</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T133119Z" creationid="95" creationdate="20170727T133119Z">
        <seg>&gt; gradle -q hello
Hello Venus
Hello Earth
Hello Mars
Hello Jupiter</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q hello
Hello world!</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T145850Z" creationid="95" creationdate="20170724T145850Z">
        <seg>&gt; gradle -q hello
Hello world!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q hello
Hello world!
Greetings from the hello task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T141348Z" creationid="95" creationdate="20170727T141348Z">
        <seg>&gt; gradle -q hello
Hello world!
Greetings from the hello task.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q intro
Hello world!
I'm Gradle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T160131Z" creationid="95" creationdate="20170726T160131Z">
        <seg>&gt; gradle -q intro
Hello world!
I'm Gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q printTaskProperties
myValue</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T142011Z" creationid="95" creationdate="20170727T142011Z">
        <seg>&gt; gradle -q printTaskProperties
myValue</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q task0
I'm task number 2
I'm task number 3
I'm task number 0</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T133039Z" creationid="95" creationdate="20170727T133039Z">
        <seg>&gt; gradle -q task0
I'm task number 2
I'm task number 3
I'm task number 0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q task1
I'm task number 1</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T132731Z" creationid="95" creationdate="20170727T132731Z">
        <seg>&gt; gradle -q task1
I'm task number 1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q taskX
taskY
taskX</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T160402Z" creationid="95" creationdate="20170726T160402Z">
        <seg>&gt; gradle -q taskX
taskY
taskX</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q upper
Original: mY_nAmE
Upper case: MY_NAME</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155840Z" creationid="95" creationdate="20170726T155840Z">
        <seg>&gt; gradle -q upper
Original: mY_nAmE
Upper case: MY_NAME</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A rich domain model for describing your build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T140853Z" creationid="95" creationdate="20170721T140853Z">
        <seg>丰富的领域模型来描述您的构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A very flexible general purpose build tool like Ant.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T133918Z" creationid="95" creationdate="20170721T133918Z">
        <seg>一个像Ant一样非常灵活而通用的构建工具。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>About this user guide</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072441Z" creationid="haohang" creationdate="20170720T072441Z">
        <seg>关于本用户指南</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Again, this defines a task called &lt;c0&gt;hello&lt;/c0&gt; with a single closure to execute. We will use this task definition style throughout the user guide.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155544Z" creationid="95" creationdate="20170726T155319Z">
        <seg>这里再一次使用了一个闭包的方式来定义一个 &lt;c0&gt;hello&lt;/c0&gt; 任务去执行。在本用户指南中，我们还会再使用这种任务定义的风格。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Ant tasks and builds as first class citizens.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T140635Z" creationid="95" creationdate="20170721T140635Z">
        <seg>Ant 任务和构建是Gradle的第一公民。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Ant tasks are first class citizens. Even more interesting, Ant projects are first class citizens as well. Gradle provides a deep import for any Ant project, turning Ant targets into native Gradle tasks at runtime. You can depend on them from Gradle, you can enhance them from Gradle, you can even declare dependencies on Gradle tasks in your build.xml. The same integration is provided for properties, paths, etc ...</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T060609Z" creationid="95" creationdate="20170723T060609Z">
        <seg>Ant任务是一级公民。更有趣的是，Ant 项目也是一级公民。Gradle为Ant项目提供了一种深度的导入，能够在运行时将Ant 目标转换为原生的Gradle任何。你可以从Gradle中依赖它们，增强它们，甚至在你的build.xml中定义对Gradle任何的依赖。同时，Gradle还为属性，路径等提供了同样的集成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As you might have noticed in the previous examples, there is a convenient notation for accessing an &lt;s0&gt;&lt;e1&gt;existing&lt;/e1&gt;&lt;/s0&gt; task. Each task is available as a property of the build script:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T141306Z" creationid="95" creationdate="20170727T141306Z">
        <seg>你可能在前面的例子中也注意到了，一个&lt;s0&gt;&lt;e1&gt;已存在&lt;/e1&gt;&lt;/s0&gt;任务会有一个便捷的符号用于访问。 每一个任务都可作为这个构建脚本中的一个属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As you probably have guessed, you can declare dependencies between your tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T160057Z" creationid="95" creationdate="20170726T160057Z">
        <seg>你应该也已经猜到了，我们可以声明任务之间的依赖关系。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>At the heart of Gradle lies a rich extensible Domain Specific Language (DSL) based on Groovy. Gradle pushes declarative builds to the next level by providing declarative language elements that you can assemble as you like. Those elements also provide build-by-convention support for Java, Groovy, OSGi, Web and Scala projects. Even more, this declarative language is extensible. Add your own new language elements or enhance the existing ones. Thus providing concise, maintainable and comprehensible builds.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170722T020231Z" creationid="95" creationdate="20170722T015420Z">
        <seg>Gradle 的核心是基于Groovy的丰富可扩展的域特定语言（DSL）。Gradle通过提供可以根据需要进行组合的声明性语言元素，将声明性构建推到一个新的层次。这些元素还将为Java，Groovy，OSGi，Web和Scala项目提供基于约定的构建。更重要的是，这种声明性语言是可扩展的。可以通过添加你自己的新的语言元素，或者是增加现有的元素，从而提供简洁，可维护以及易于理解的构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But we never lock you in!</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T135020Z" creationid="95" creationdate="20170721T134611Z">
        <seg>但我们不会去限定你。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 1. Introduction</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072252Z" creationid="haohang" creationdate="20170720T072252Z">
        <seg>第一章. 介绍</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 10, &lt;i0&gt;Web Application Quickstart&lt;/i0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T081015Z" creationid="95" creationdate="20170723T081015Z">
        <seg>第十章， &lt;i0&gt;Web 应用程序快速入门&lt;/i0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 2. Overview</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072513Z" creationid="haohang" creationdate="20170720T072513Z">
        <seg>第二章. 概述</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 3. Tutorials</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T072420Z" creationid="95" creationdate="20170721T165938Z">
        <seg>第三章. 教程</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 4, &lt;i0&gt;Installing Gradle&lt;/i0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T072730Z" creationid="95" creationdate="20170723T072609Z">
        <seg>第四章，&lt;i0&gt; 安装Gradle&lt;/i0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 4. Installing Gradle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T072502Z" creationid="95" creationdate="20170723T072433Z">
        <seg>第四章. 安装Gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 42. The Announce Plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072240Z" creationid="haohang" creationdate="20170720T072240Z">
        <seg>第四十二章. Announce插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 5. Troubleshooting</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T081157Z" creationid="95" creationdate="20170723T081157Z">
        <seg>第五章. 疑难解答</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 6, &lt;i0&gt;Build Script Basics&lt;/i0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T072726Z" creationid="95" creationdate="20170723T072726Z">
        <seg>第六章， &lt;i0&gt;构建脚本基础&lt;/i0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 6. Build Script Basics</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T122508Z" creationid="95" creationdate="20170723T072427Z">
        <seg>第六章. 构建脚本基础</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 7, &lt;i0&gt;Java Quickstart&lt;/i0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T072829Z" creationid="95" creationdate="20170723T072829Z">
        <seg>第 7 章，  &lt;i0&gt;Java 快速入门&lt;/i0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 7. Java Quickstart</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T122517Z" creationid="95" creationdate="20170723T122517Z">
        <seg>第 7 章. Java 快速入门</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 8, &lt;i0&gt;Dependency Management Basics&lt;/i0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T080804Z" creationid="95" creationdate="20170723T080804Z">
        <seg>第八章， &lt;i0&gt;依赖管理基础&lt;/i0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 9, &lt;i0&gt;Groovy Quickstart&lt;/i0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T080844Z" creationid="95" creationdate="20170723T080844Z">
        <seg>第九章. &lt;i0&gt;Groovy快速入门&lt;/i0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Copies of this document may be made for your own use and for distribution to others, provided that you do not charge any fee for such copies and further provided that each copy contains this Copyright Notice, whether distributed in print or electronically.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072426Z" creationid="haohang" creationdate="20170720T072343Z">
        <seg>本文件的副本，无论其是以印刷版本形式还是电子版本形式，也无论是您自用，还是分发给他人，均为免费，并且每一份副本均需带有版权声明。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Copyright © 2007-2012 Hans Dockter, Adam Murdoch</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072305Z" creationid="haohang" creationdate="20170720T072305Z">
        <seg>版权所有 © 2007-2012 Hans Dockter, Adam Murdoch</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Declarative builds and build-by-convention</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170722T015356Z" creationid="95" creationdate="20170722T015356Z">
        <seg>声明式的构建以及基于约定的构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Deep API</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170722T023155Z" creationid="95" creationdate="20170722T023155Z">
        <seg>深度 API</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Describes how to install Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T072817Z" creationid="95" creationdate="20170723T072621Z">
        <seg>介绍如何安装Gradle。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Different teams prefer different ways to manage their external dependencies. Gradle provides convenient support for any strategy. From transitive dependency management with remote Maven and Ivy repositories to jars or dirs on the local file system.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T034310Z" creationid="95" creationdate="20170723T034054Z">
        <seg>不同的团队喜欢使用不同的方式来管理他们的外部依赖。从远程Maven和Ivy仓库的传递依赖管理到本地文件系统上的jar包或目录，Gradle为任何策略都提供了方便的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>DocBook XSL Stylesheets V1.75.2</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072248Z" creationid="haohang" creationdate="20170720T072248Z">
        <seg>DocBook XSL Stylesheets V1.75.2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each project is made up of one or more &lt;e0&gt;tasks&lt;/e0&gt;. A task represents some atomic piece of work which a build performs. This might be compiling some classes, creating a JAR, generating javadoc, or publishing some archives to a repository.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T143544Z" creationid="95" creationdate="20170724T143343Z">
        <seg>每一个项目都由一个或多个&lt;e0&gt;任务&lt;/e0&gt;组成。一个任务表示构建执行的一些原子工作，比如编译一些类，创建一个JAR包，生成javadoc，或者是把一些档案发布到仓库中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Ease of migration</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T060917Z" creationid="95" creationdate="20170723T060917Z">
        <seg>易于迁移</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Every Gradle build is made up of one or more &lt;e0&gt;projects&lt;/e0&gt;. What a project represents depends on what it is that you are doing with Gradle. For example, a project might represent a library JAR or a web application. It might represent a distribution ZIP assembled from the JARs produced by other projects. A project does not necessarily represent a thing to be built. It might represent a thing to be done, such as deploying your application to staging or production environments. Don't worry if this seems a little vague for now. Gradle's build-by-convention support adds a more concrete definition for what a project is.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T143530Z" creationid="95" creationdate="20170724T143309Z">
        <seg>任何一个Gradle构建都是由一个或多个&lt;e0&gt;项目&lt;/e0&gt;组成。一个项目代表着什么，取决于你想通过Gradle来做什么。比如，一个项目可能代表着一个JAR库，或者是一个Web应用程序。它也可能代表从其他项目所生成的JAR包组装起来的ZIP文件。一个项目不一定是代表一个要构建的东西，它也可能代表一个要完成的东西，比如把您的应用部署到预发布或生产环境。如果现在看得不是很明白，也不用担心。Gradle的按约定来构建的支持为项目提供了更具体的定义。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Everything in Gradle sits on top of two basic concepts: &lt;e0&gt;projects&lt;/e0&gt; and &lt;e1&gt;tasks&lt;/e1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T142329Z" creationid="95" creationdate="20170724T142329Z">
        <seg>在整个Gradle，有两个最基础的概念：&lt;e0&gt;项目&lt;/e0&gt; 和 &lt;e1&gt;任务&lt;/e1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 6.1. The first build script</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T144942Z" creationid="95" creationdate="20170724T144942Z">
        <seg>示例 6.1. 第一个构建脚本</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 6.10. Accessing a task via API - adding behaviour</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T133108Z" creationid="95" creationdate="20170727T133108Z">
        <seg>示例6.10. 通过API访问任务——添加行为</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 6.11. Accessing task as a property of the build script</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T141334Z" creationid="95" creationdate="20170727T141334Z">
        <seg>示例6.11. 以构建脚本的属性的方式访问任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 6.12. Adding extra properties to a task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T141956Z" creationid="95" creationdate="20170727T141956Z">
        <seg>示例6.12. 为任务添加额外的属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 6.2. Execution of a build script</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T145831Z" creationid="95" creationdate="20170724T145831Z">
        <seg>示例 6.2. 执行构建脚本</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 6.3. A task definition shortcut</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155313Z" creationid="95" creationdate="20170726T155313Z">
        <seg>示例6.3. 任务定义的快捷方式</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 6.4. Using Groovy in Gradle's tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155816Z" creationid="95" creationdate="20170726T155709Z">
        <seg>示例6.4. 在Gradle任务中使用Groovy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 6.5. Using Groovy in Gradle's tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155854Z" creationid="95" creationdate="20170726T155854Z">
        <seg>示例6.5. 在Gradle任务中使用Groovy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 6.6. Declaration of dependencies between tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T160115Z" creationid="95" creationdate="20170726T160115Z">
        <seg>示例6.6. 声明任务之间的依赖关系</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 6.7. Lazy dependsOn - the other task does not exist (yet)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T160342Z" creationid="95" creationdate="20170726T160335Z">
        <seg>示例6.7. 延迟依赖——另一个任务（暂）不存在</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 6.8. Dynamic creation of a task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T132722Z" creationid="95" creationdate="20170727T132722Z">
        <seg>示例6.8. 任务的动态创建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 6.9. Accessing a task via API - adding a dependency</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T133005Z" creationid="95" creationdate="20170727T133005Z">
        <seg>示例6.9. 通过API访问任务——添加依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Extensive samples, including the examples referenced in the user guide, along with some complete and more complex builds you can use the starting point for your own build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T114843Z" creationid="95" creationdate="20170723T114843Z">
        <seg>大量的样例，包括用户指南里的例子，以及一些完整的和更加复杂的构建。您可以把它们作为您自己的构建的基础。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Extra properties aren't limited to tasks. You can read more about them in &lt;a0&gt;Section 13.4.2, “Extra properties”&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T142130Z" creationid="95" creationdate="20170727T142016Z">
        <seg>额外属性并不局限于任务，你可以在 &lt;a0&gt;第13.4.2节，“额外属性”&lt;/a0&gt;中了解更多关于它们的内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Features</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072448Z" creationid="haohang" creationdate="20170720T072448Z">
        <seg>特性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For Java teams which share also Python or Ruby knowledge or are happy to learn it, the above arguments don't apply. The Gradle design is well-suited for creating another build script engine in JRuby or Jython. It just doesn't have the highest priority for us at the moment. We happily support any community effort to create additional build script engines.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T072131Z" creationid="95" creationdate="20170723T071728Z">
        <seg>对于分享Python或Ruby知识并且乐于学习它们的Java团队来说，上面的论据并不适用。Gradle设计非常适全于在JRuby或Jython中创建另一种构建脚本引擎。目前我们并没有最高的优先级，我们很高兴任何社区来努力创建其他的构建脚本引擎。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For now, we will look at defining some simple tasks in a build with one project. Later chapters will look at working with multiple projects and more about working with projects and tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T143910Z" creationid="95" creationdate="20170724T143910Z">
        <seg>现在，我们来看一下如何在一个项目的构建中定义一些简单的任务。后续的章节将更多的关注多项目的构建，以及多项目和多任务的内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For running Gradle, add &lt;c0&gt;&lt;e1&gt;&lt;c2&gt;GRADLE_HOME&lt;/c2&gt;&lt;/e1&gt;/bin&lt;/c0&gt; to your &lt;c3&gt;PATH&lt;/c3&gt; environment variable. Usually, this is sufficient to run Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T115222Z" creationid="95" creationdate="20170723T115222Z">
        <seg>要运行Gradle，您需要将 &lt;c0&gt;&lt;e1&gt;&lt;c2&gt;GRADLE_HOME&lt;/c2&gt;&lt;/e1&gt;/bin&lt;/c0&gt; 添加到您的 &lt;c3&gt;PATH&lt;/c3&gt;环境变量中。通常添加了之后就可以运行Gradle了。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Free and open source</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T065551Z" creationid="95" creationdate="20170723T065551Z">
        <seg>自由开源</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>From being a pleasure to be used embedded to its many hooks over the whole lifecycle of build execution, Gradle allows you to monitor and customize its configuration and execution behavior to its very core.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170722T041546Z" creationid="95" creationdate="20170722T041546Z">
        <seg>来自于惯在整个构建执行的生命周期中习嵌入钩子的乐趣，Gradle允许你监视以及对它的配置和它核心的执行行为进行定制。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Full support for your existing Maven or Ivy repository infrastructure.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T135843Z" creationid="95" creationdate="20170721T135843Z">
        <seg>完全支持已有的Maven或Ivy仓库结构。 </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generating the POM file without publishing</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T132923Z" creationid="95" creationdate="20170721T132923Z">
        <seg>-不发布的情况下生成POM文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle User Guide</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072244Z" creationid="haohang" creationdate="20170720T072244Z">
        <seg>Gradle 用户指南</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle can adapt to any structure you have. Therefore you can always develop your Gradle build in the same branch where your production build lives and both can evolve in parallel. We usually recommend to write tests that make sure that the produced artifacts are similar. That way migration is as less disruptive and as reliable as possible. This is following the best-practices for refactoring by applying baby steps.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T063535Z" creationid="95" creationdate="20170723T060933Z">
        <seg>Gradle可以适应您现在任何结构的项目。因此您可以在生产构建所在的分支上随时开发你的Gradle构建，并且它们可以并行演进。我们通常建议编写测试用例，以确保生成的工件是类似的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle fully supports your existing Maven or Ivy repository infrastructure for publishing and retrieving dependencies. Gradle also provides a converter for turning a Maven &lt;c0&gt;pom.xml&lt;/c0&gt; into a Gradle script. Runtime imports of Maven projects will come soon.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T060851Z" creationid="95" creationdate="20170723T060851Z">
        <seg>对于您用于发布和检索依赖的现有的Maven或Ivy仓库基础架构，Gradle完全支持。并且Gradle也提供了一个转换器，用于将一个Maven的&lt;c0&gt;pom.xml&lt;/c0&gt;转换为一个Gradle脚本。Maven项目的运行时导入即将推出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle is an open source project, and is licensed under the &lt;a0&gt;ASL&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T065609Z" creationid="95" creationdate="20170723T065609Z">
        <seg>Gradle是一个开源项目，并且使用&lt;a0&gt;ASL&lt;/a0&gt;开源协议。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle is the first build integration tool</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T034327Z" creationid="95" creationdate="20170723T034327Z">
        <seg>Gradle是第一个构建集成工具</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle provides partial builds. If you build a single subproject Gradle takes care of building all the subprojects that subproject depends on. You can also choose to rebuild the subprojects that depend on a particular subproject. Together with incremental builds this is a big time saver for larger builds.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T034026Z" creationid="95" creationdate="20170723T034026Z">
        <seg>Gradle提供了部分构建。如果你是在构建一个子项目，Gradle将负责构建这个子项目所依赖的所有子项目。你也可以选择重新构建依赖于特定子项目的所有子项目。这和增量构建一起为大型的构建省下了不少的时间。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle provides:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T133756Z" creationid="95" creationdate="20170721T133756Z">
        <seg>它提供了：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle requires a Java JDK or JRE to be installed. Gradle requires a Java version 6 or higher. Gradle ships with its own Groovy library, therefore no Groovy needs to be installed. Any existing Groovy installation is ignored by Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T114013Z" creationid="95" creationdate="20170723T114013Z">
        <seg>Gradle需要安装Java6或更高以上版本的JDK或JRE。Gradle自带了Groovy库，因此不需要安装Groovy。已经安装的Groovy会被Gradle所忽略。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle scales</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170722T041724Z" creationid="95" creationdate="20170722T041724Z">
        <seg>Gradle 的效率提升</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle scales very well. It significantly increases your productivity, from simple single project builds up to huge enterprise multi-project builds. This is true for structuring the build. With the state-of-art incremental build function, this is also true for tackling the performance pain many large enterprise builds suffer from.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170722T042048Z" creationid="95" creationdate="20170722T042048Z">
        <seg>Gradle能够带大显著的效率提升。从简单的单项目构建，到大型的企业多项目构建，它都能大大地提高您的生产力。这是结构化构建所带来的。凭借最先进的增量构建功能，对于解决许多大型企业构建所遭遇的性能难题也是如此。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle uses whichever JDK it finds in your path (to check, use &lt;s0&gt;&lt;c1&gt;java -version&lt;/c1&gt;&lt;/s0&gt;). Alternatively, you can set the &lt;c2&gt;JAVA_HOME&lt;/c2&gt; environment variable to point to the install directory of the desired JDK.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T114331Z" creationid="95" creationdate="20170723T114023Z">
        <seg>Gradle会使用在您的path环境变量中找到的JDK（可以使用&lt;s0&gt;&lt;c1&gt;java -version&lt;/c1&gt;&lt;/s0&gt;命令来检查自己的JDK版本）。 另外，您也可以设置 &lt;c2&gt;JAVA_HOME&lt;/c2&gt; 环境变量来指向你想要的JDK的安装目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle's build scripts are written in Groovy, not XML. But unlike other approaches this is not for simply exposing the raw scripting power of a dynamic language. That would just lead to a very difficult to maintain build. The whole design of Gradle is oriented towards being used as a language, not as a rigid framework. And Groovy is our glue that allows you to tell your individual story with the abstractions Gradle (or you) provide. Gradle provides some standard stories but they are not privileged in any form. This is for us a major distinguishing features compared to other declarative build systems. Our Groovy support is also not just some simple coating sugar layer. The whole Gradle API is fully groovynized. Only by that using Groovy is the fun and productivity gain it can be.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T065134Z" creationid="95" creationdate="20170723T063603Z">
        <seg>Gradle的构建脚本是使用Groovy来编写的，而不是使用XML。但是与其他方法不同，这不仅仅是暴露了一门动态语言的原始脚本的能力，那样只会导致构建难以维护。Gradle的整个设计是面向一门语言，而不是一个僵化的框架。并且Groovy作为胶水语言，可以使您通过使用Gradle（或您）所提供的抽象概念，来讲述您的个别故事。Gradle提供了一些标准的故事，但它们没有任何特权。与其他的声明式构建系统相比，这对于我们来说是一个主要的区别。我们的Groovy支持也不只是简单的糖层，整个的Gradle API都是完全的Groovy化的。只有使用Groovy才能获得乐趣和生产力。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle's build scripts expose to you the full power of Groovy. As an appetizer, have a look at this:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155756Z" creationid="95" creationdate="20170726T155707Z">
        <seg>Gradle的构建脚本向您开放了Groovy的全部功能。作为开胃菜，可以看看下这个例子：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle's support for multi-project build is outstanding. Project dependencies are first class citizens. We allow you to model the project relationships in a multi-project build as they really are for your problem domain. Gradle follows your layout not vice versa.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T033707Z" creationid="95" creationdate="20170722T042113Z">
        <seg>Gradle对多项目构建的支持非常出色。项目依赖是第一公民。我们允许您在一个多项目构建中为项目关系进行建模，因为它们真的适用于您的问题域。Gradle遵循您的布局，而非相反。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Groovy</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T063538Z" creationid="95" creationdate="20170723T063538Z">
        <seg>Groovy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is a list of some of Gradle's features.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170722T015227Z" creationid="95" creationdate="20170722T015227Z">
        <seg>以下是Gradle的一些特性列表。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If something's not working for you, posting a question or problem report to the forums is the fastest way to get help. It's also the place to post improvement suggestions or new ideas. The development team frequently posts news items and announces releases via the forum, making it a great way to stay up to date with the latest Gradle developments.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T122322Z" creationid="95" creationdate="20170723T122322Z">
        <seg>如果出了问题，到论坛上提问或上报问题是获取帮助的最佳方式。有什么改进的建议或是新想法，也可以到论坛上发帖。开发团队会经常地通过论坛发布一些新闻和发表更新，使其成为与最新的Gradle开发保持更新的最佳方式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you are encountering problems, one of the first things to try is using the very latest release of Gradle. New versions of Gradle are released frequently with bug fixes and new features. The problem you are having may have been fixed in a new release.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T121207Z" creationid="95" creationdate="20170723T121006Z">
        <seg>当您遇到问题时，首先确认一下是否使用的最新版本的Gradle。新版本的Gradle总是会更加完善并且带有新特性。有可能遇到的问题在一个新的版本中已经被修复。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you are using the Gradle Daemon, try temporarily disabling the daemon (you can pass the command line switch &lt;c0&gt;--no-daemon&lt;/c0&gt;). More information about troubleshooting daemon is located in &lt;a1&gt;Chapter 19, &lt;i2&gt;The Gradle Daemon&lt;/i2&gt;&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T121452Z" creationid="95" creationdate="20170723T121210Z">
        <seg>如果您正在使用Gradle守护进程，尝试禁掉守护进程（通过向命令行中传入&lt;c0&gt;--no-daemon&lt;/c0&gt;参数）。更多的内容可参阅 《&lt;a1&gt;第十九章， &lt;i2&gt;Gradle 守护进程&lt;/i2&gt;&lt;/a1&gt;》。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you think this looks similar to Ant's targets, well, you are right. Gradle tasks are the equivalent to Ant targets. But as you will see, they are much more powerful. We have used a different terminology than Ant as we think the word &lt;s0&gt;&lt;e1&gt;task&lt;/e1&gt;&lt;/s0&gt; is more expressive than the word &lt;s2&gt;&lt;e3&gt;target&lt;/e3&gt;&lt;/s2&gt;. Unfortunately this introduces a terminology clash with Ant, as Ant calls its commands, such as &lt;c4&gt;javac&lt;/c4&gt; or &lt;c5&gt;copy&lt;/c5&gt;, tasks. So when we talk about tasks, we &lt;s6&gt;&lt;e7&gt;always&lt;/e7&gt;&lt;/s6&gt; mean Gradle tasks, which are the equivalent to Ant's targets. If we talk about Ant tasks (Ant commands), we explicitly say &lt;s8&gt;&lt;e9&gt;ant task&lt;/e9&gt;&lt;/s8&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T151624Z" creationid="95" creationdate="20170724T151624Z">
        <seg>如果你认为它看上去和Ant的目标很像，那就对了。Gradle的任务相当于Ant的目标。但是，正如你所见，它们更加强大。我们使用与Ant不同的术语，是因为我们认为&lt;s0&gt;&lt;e1&gt;任务&lt;/e1&gt;&lt;/s0&gt;这个词比&lt;s2&gt;&lt;e3&gt;目标&lt;/e3&gt;&lt;/s2&gt;的含义更丰富。不过不幸的是，这也导致了与Ant的术语冲突。Ant会调用它自己的一些命令，比如像&lt;c4&gt;javac&lt;/c4&gt; 或是 &lt;c5&gt;copy&lt;/c5&gt;任务。因为，当我们讨论任务时，&lt;s6&gt;&lt;e7&gt;通常&lt;/e7&gt;&lt;/s6&gt;指的是Gradle的任务，相当于Ant的目标。当我们讨论Ant 的任务时，我们会明确地说是 &lt;s8&gt;&lt;e9&gt;ant 任务&lt;/e9&gt;&lt;/s8&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In &lt;a0&gt;Chapter 2, &lt;i1&gt;Overview&lt;/i1&gt;&lt;/a0&gt; you will find a detailed overview of Gradle. Otherwise, the &lt;a2&gt;tutorials&lt;/a2&gt; are waiting, have fun :)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T142020Z" creationid="95" creationdate="20170721T142020Z">
        <seg>在 《&lt;a0&gt;第二章，&lt;i1&gt;概述&lt;/i1&gt;&lt;/a0&gt;》，你将会看到有关Gradle的详细介绍。另一方面， &lt;a2&gt;教程&lt;/a2&gt; 在等你，开始吧。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In a command-line shell, enter into the containing directory and execute the build script by running &lt;s0&gt;&lt;c1&gt;gradle -q hello&lt;/c1&gt;&lt;/s0&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T145113Z" creationid="95" creationdate="20170724T144952Z">
        <seg>然后在命令行shell里，进入到当前目录并运行&lt;s0&gt;&lt;c1&gt;gradle -q hello&lt;/c1&gt;&lt;/s0&gt;来执行这个构建脚本：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Introduces the basic build script elements: &lt;e0&gt;projects&lt;/e0&gt; and &lt;e1&gt;tasks&lt;/e1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T072802Z" creationid="95" creationdate="20170723T072802Z">
        <seg>介绍了基本的构建脚本元素：&lt;e0&gt;项目&lt;/e0&gt; 和 &lt;e1&gt;任何&lt;/e1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Introduction</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072431Z" creationid="haohang" creationdate="20170720T072431Z">
        <seg>介绍</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>JVM options for running Gradle can be set via environment variables. You can use &lt;c0&gt;GRADLE_OPTS&lt;/c0&gt; or &lt;c1&gt;JAVA_OPTS&lt;/c1&gt;. Those variables can be used together. &lt;c2&gt;JAVA_OPTS&lt;/c2&gt; is by convention an environment variable shared by many Java applications. A typical use case would be to set the HTTP proxy in &lt;c3&gt;JAVA_OPTS&lt;/c3&gt; and the memory options in &lt;c4&gt;GRADLE_OPTS&lt;/c4&gt;. Those variables can also be set at the beginning of the &lt;s5&gt;&lt;s6&gt;gradle&lt;/s6&gt;&lt;/s5&gt; or &lt;s7&gt;&lt;s8&gt;gradlew&lt;/s8&gt;&lt;/s7&gt; script.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T120248Z" creationid="95" creationdate="20170723T115605Z">
        <seg>Gradle运行时的JVM参数可以通过&lt;c0&gt;GRADLE_OPTS&lt;/c0&gt; 或是 &lt;c1&gt;JAVA_OPTS&lt;/c1&gt;的环境变量来设置，这些环境变量也可以一起使用。习惯上， &lt;c2&gt;JAVA_OPTS&lt;/c2&gt; 是一个与其他Java应用程序共享的环境变量，一个典型的场景是在 &lt;c3&gt;JAVA_OPTS&lt;/c3&gt; 中设置HTTP代理，而在&lt;c4&gt;GRADLE_OPTS&lt;/c4&gt;中设置内存选项。这些环境变量也可以在 &lt;s5&gt;&lt;s6&gt;gradle&lt;/s6&gt;&lt;/s5&gt; 或 &lt;s7&gt;&lt;s8&gt;gradlew&lt;/s8&gt;&lt;/s7&gt; 脚本文件的开头设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Language for dependency based programming</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170722T015549Z" creationid="95" creationdate="20170722T015549Z">
        <seg>基于编程的依赖语言</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Legal Notice</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072307Z" creationid="haohang" creationdate="20170720T072307Z">
        <seg>法律公告</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Many ways to manage your dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T034041Z" creationid="95" creationdate="20170723T034041Z">
        <seg>多种方式去管理依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Most of the examples in this user guide are run with the &lt;c0&gt;-q&lt;/c0&gt; command-line option. This suppresses Gradle's log messages, so that only the output of the tasks is shown. This keeps the example output in this user guide a little clearer. You don't need to use this option if you don't want. See &lt;a1&gt;Chapter 18, &lt;i2&gt;Logging&lt;/i2&gt;&lt;/a1&gt; for more details about the command-line options which affect Gradle's output.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T145756Z" creationid="95" creationdate="20170724T145756Z">
        <seg>本用户指南中的很多例子都用了 &lt;c0&gt;-q&lt;/c0&gt;参数运行，这个参数是用于抑制Gradle的日志消息，以便只显示任务的输出结果，这样会使得在本用户指南里的文档的输出更清晰一点。如果你不想要的话，你可以不加上这个参数。如果想了解更多影响Gradle的输出的命令参数，请参阅&lt;a1&gt;第十八章， &lt;i2&gt;日志&lt;/i2&gt;&lt;/a1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Multi-project builds</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170722T042054Z" creationid="95" creationdate="20170722T042054Z">
        <seg>多项目构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Once tasks are created they can be accessed via an &lt;s0&gt;&lt;e1&gt;API&lt;/e1&gt;&lt;/s0&gt;. This is different to Ant. For example you can create additional dependencies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T132935Z" creationid="95" creationdate="20170727T132814Z">
        <seg>与Ant不同，一旦任务被创建了，就可以通过一个 &lt;s0&gt;&lt;e1&gt;API&lt;/e1&gt;&lt;/s0&gt;去访问它。例如，你可以去给它们添加其他的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Or you can add behavior to an existing task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T133059Z" creationid="95" creationdate="20170727T133059Z">
        <seg>或者，你也可以对已经存在的任务添加行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q count&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155907Z" creationid="95" creationdate="20170726T155907Z">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q count&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q hello&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T145842Z" creationid="95" creationdate="20170724T145842Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q hello&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q intro&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T160129Z" creationid="95" creationdate="20170726T160129Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q intro&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q printTaskProperties&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T142009Z" creationid="95" creationdate="20170727T142009Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q printTaskProperties&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q task0&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T133037Z" creationid="95" creationdate="20170727T133037Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q task0&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q task1&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T132756Z" creationid="95" creationdate="20170727T132730Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q task1&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q taskX&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T160358Z" creationid="95" creationdate="20170726T160358Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q taskX&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q upper&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155839Z" creationid="95" creationdate="20170726T155839Z">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q upper&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Overview</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072443Z" creationid="haohang" creationdate="20170720T072443Z">
        <seg>概述</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Please notice that you can't use shortcut notation (see &lt;a0&gt;Section 6.8, “Shortcut notations”&lt;/a0&gt;) when referring to a task that is not yet defined.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T132502Z" creationid="95" creationdate="20170727T132113Z">
        <seg>请注意，当一个任务还没有被定义的时候，不能使用快捷符号（见 &lt;a0&gt;第6.8节，“快捷标记”&lt;/a0&gt;）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Shows how to start using Gradle's build-by-convention support for Java projects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T080750Z" creationid="95" creationdate="20170723T080750Z">
        <seg>说明了对于Java项目如何使用Gradle的基于约定的构建支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Shows how to start using Gradle's dependency management.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T080835Z" creationid="95" creationdate="20170723T080835Z">
        <seg>介绍了如何开始使用Gradle的依赖管理。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String someString = &lt;s0&gt;'mY_nAmE'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155825Z" creationid="95" creationdate="20170726T155825Z">
        <seg>String someString = &lt;s0&gt;'mY_nAmE'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Structure your build</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170722T021853Z" creationid="95" creationdate="20170722T021853Z">
        <seg>构建结构化</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Support for transitive dependency management without the need for remote repositories or &lt;c0&gt;pom.xml&lt;/c0&gt; and &lt;c1&gt;ivy.xml&lt;/c1&gt; files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T140613Z" creationid="95" creationdate="20170721T135929Z">
        <seg>支持传递性依赖管理，而不需要远程仓库或是 &lt;c0&gt;pom.xml&lt;/c0&gt; 以及 &lt;c1&gt;ivy.xml&lt;/c1&gt; 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Switchable, build-by-convention frameworks a la Maven.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T134507Z" creationid="95" creationdate="20170721T134507Z">
        <seg>可切换的，按Maven的方式的基于约定的框架。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Switchable, build-by-convention frameworks a la Maven. But we never lock you in!</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T135705Z" creationid="95" creationdate="20170721T135705Z">
        <seg>按Maven的方式的基于约定的框架。但我们从不会去限定你，它是可切换的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table of Contents</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072346Z" creationid="haohang" creationdate="20170720T072346Z">
        <seg>目录</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The API documentation (Javadoc and Groovydoc).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T114544Z" creationid="95" creationdate="20170723T114544Z">
        <seg>API文档（包括Javadoc和Groovydoc）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The DSL reference guide.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T114530Z" creationid="95" creationdate="20170723T114530Z">
        <seg>DSL参考指南。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Gradle Wrapper allows you to execute Gradle builds on machines where Gradle is not installed. This is useful for example for some continuous integration servers. It is also useful for an open source project to keep the barrier low for building it. The wrapper is also very interesting for the enterprise. It is a zero administration approach for the client machines. It also enforces the usage of a particular Gradle version thus minimizing support issues.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T065536Z" creationid="95" creationdate="20170723T065536Z">
        <seg>Gradle 包装器允许您能够在没有安装Gradle的机器上执行Gradle构建。这对于一些持续集成服务器来说是很有用的。对于开源项目来说，它也是有用的，可以降低项目构建的障碍。包装器对于企业来说也同样友好。对于客户端机器来说，它是一种零管理方法。它还强制了指定的Gradle版本的使用，以最大限度地减少支持问题。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Gradle binaries.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T114505Z" creationid="95" creationdate="20170723T114505Z">
        <seg>Gradle可执行文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Gradle distribution comes packaged as a ZIP. The full distribution contains:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T114456Z" creationid="95" creationdate="20170723T114456Z">
        <seg>Gradle的发行包是一个ZIP文件。完整的发行包包含以下内容：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Gradle wrapper</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T063605Z" creationid="95" creationdate="20170723T063605Z">
        <seg>Gradle 包装器</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The binary sources. This is for reference only. If you want to build Gradle you need to download the source distribution or checkout the sources from the source repository. See the &lt;a0&gt;Gradle web site&lt;/a0&gt; for details.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T115048Z" creationid="95" creationdate="20170723T115048Z">
        <seg>源代码。这些源代码仅供参考。如果您想要自己来编译Gradle，您需要去下载源码发行包，或者是从源码仓库里检出代码。具体请参阅&lt;a0&gt;Gradle官方网站&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The calls &lt;c0&gt;doFirst&lt;/c0&gt; and &lt;c1&gt;doLast&lt;/c1&gt; can be executed multiple times. They add an action to the beginning or the end of the task's actions list. When the task executes, the actions in the action list are executed in order. The &lt;c2&gt;&lt;&lt;&lt;/c2&gt; operator is simply an alias for &lt;c3&gt;doLast&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T133618Z" creationid="95" creationdate="20170727T133133Z">
        <seg>&lt;c0&gt;doFirst&lt;/c0&gt;和&lt;c1&gt;doLast&lt;/c1&gt; 可以被多次调用，它们分别是向任务的动作列表的开头或结尾添加一个动作。当任务执行的时候，动作列表的这些动作会依次执行。&lt;c2&gt;&lt;&lt;&lt;/c2&gt; 操作只是 &lt;c3&gt;doLast&lt;/c3&gt;的别名。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The declarative language lies on top of a general purpose task graph, which you can fully leverage in your builds. It provides utmost flexibility to adapt Gradle to your unique needs.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170722T021842Z" creationid="95" creationdate="20170722T021842Z">
        <seg>声明性语言位于通用任务图的顶部，您可以在构建中充分利用它。它提供了极大的灵活性，使Gradle满足您的独特需求。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The dependency of &lt;c0&gt;taskX&lt;/c0&gt; to &lt;c1&gt;taskY&lt;/c1&gt; is declared before &lt;c2&gt;taskY&lt;/c2&gt; is defined. This is very important for multi-project builds. Task dependencies are discussed in more detail in &lt;a3&gt;Section 15.4, “Adding dependencies to a task”&lt;/a3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T132109Z" creationid="95" creationdate="20170726T160408Z">
        <seg>&lt;c0&gt;taskX&lt;/c0&gt; 依赖 &lt;c1&gt;taskY&lt;/c1&gt; 是在 &lt;c2&gt;taskY&lt;/c2&gt; 之前定义的。这点在多项目构建中非常有用。有关任务依赖的更多信息，可以参阅 &lt;a3&gt;第15.4节，“给任务添加依赖”&lt;/a3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following tutorials introduce some of the basics of Gradle, to help you get started.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T072551Z" creationid="95" creationdate="20170723T072551Z">
        <seg>以下是Gradle的一些基础的教程介绍，来帮助你快速入门。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The place to go for help with Gradle is &lt;a0&gt;http://forums.gradle.org&lt;/a0&gt;. The Gradle Forums is the place where you can report problems and ask questions to the Gradle developers and other community members.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T121738Z" creationid="95" creationdate="20170723T121738Z">
        <seg>您可以到Gradle的官方论坛 &lt;a0&gt;http://forums.gradle.org&lt;/a0&gt;来寻求一些帮助。在这里，您可以向Gradle的开发者和其他的社区成员报告您的问题或者是进行提问。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The power of Groovy can be used for more than defining what a task does. For example, you can also use it to dynamically create tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T132702Z" creationid="95" creationdate="20170727T132702Z">
        <seg>Groovy的强大之处，不仅仅是用在定义一个任务做什么的时候。例如，你也可以使用它来动态地创建一些任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The suppleness and richness of Gradle finally allows you to apply common design principles to your build. For example, it is very easy to compose your build from reusable pieces of build logic. Inline stuff where unnecessary indirections would be inappropriate. Don't be forced to tear apart what belongs together (e.g. in your project hierarchy). Thus avoiding smells like shotgun changes or divergent change that turn your build into a maintenance nightmare. At last you can create a well structured, easily maintained, comprehensible build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170722T022659Z" creationid="95" creationdate="20170722T022659Z">
        <seg>Gradle的灵活性和丰富性最终允许您将常见的设计原则应用于您的构建。 例如，通过可重用的构建逻辑来组织构建是非常容易的。 把不必要而没有直接联系的内容内联在一起是不适合的。 不要强制拆分原本一起的东西（例如在你的项目层次结构中）。 因此，避免出现分散式的变化而使您的建设的维护变成噩梦。 最后，您可以创建一个结构良好、易于维护、易于理解的构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The user guide (HTML and PDF).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T114522Z" creationid="95" creationdate="20170723T114522Z">
        <seg>用户指南（HTML和PDF两种版本）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is a shorthand way to define a task like our &lt;c0&gt;hello&lt;/c0&gt; task above, which is more concise.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155226Z" creationid="95" creationdate="20170726T155226Z">
        <seg>有一种简单的方法可以定义像上面我们的这类&lt;c0&gt;hello&lt;/c0&gt; 任务，它看起来更简洁。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This chapter gives some advice for troubleshooting problems and explains how to get help with your problems.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T120955Z" creationid="95" creationdate="20170723T120955Z">
        <seg>本章节给出了一些解决问题的建议，并解释了如何获取帮助。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This chapter is currently a work in progress.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T120352Z" creationid="95" creationdate="20170723T120352Z">
        <seg>本章节目前还在完善中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This enables very readable code, especially when using the out of the box tasks provided by the plugins (e.g. &lt;c0&gt;compile&lt;/c0&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T141645Z" creationid="95" creationdate="20170727T141349Z">
        <seg>这使得代码很易于阅读，尤其是当使用插件所提供的任务时（例如 &lt;c0&gt;compile&lt;/c0&gt;）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This user guide, like Gradle itself, is under very active development. Some parts of Gradle aren't documented as completely as they need to be. Some of the content presented won't be entirely clear or will assume that you know more about Gradle than you do. We need your help to improve this user guide. You can find out more about contributing to the documentation at the &lt;a0&gt;Gradle web site&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T165849Z" creationid="95" creationdate="20170721T162658Z">
        <seg>与Gradle一样，本指南也在不断地更新。一些Gradle的内容并未完全进行描述。有些内容并未完整描述，或者是假定了您对Gradle有一定的了解。我们需要您来帮助一起提供本指南。有关如何参与贡献文档的信息，可以在 &lt;a0&gt;Gradle 官方网站&lt;/a0&gt;上找到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To add a dependency, the corresponding task does not need to exist.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T160246Z" creationid="95" creationdate="20170726T160246Z">
        <seg>在添加依赖时，对应的任务不一定要存在。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To try this out, create the following build script named &lt;c0&gt;build.gradle&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T144931Z" creationid="95" creationdate="20170724T144931Z">
        <seg>试着创建一个叫 &lt;c0&gt;build.gradle&lt;/c0&gt;的构建脚本，如下所示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using Gradle's build-by-convention support for Groovy projects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T080954Z" creationid="95" creationdate="20170723T080954Z">
        <seg>使用Gradle对于Groovy项目的基于约定的构建的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using Gradle's build-by-convention support for Web applications.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T081041Z" creationid="95" creationdate="20170723T081029Z">
        <seg>使用Gradle对于Web应用的基于约定的构建的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Version 2.0</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072300Z" creationid="haohang" creationdate="20170720T072300Z">
        <seg>版本 2.0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Very powerful dependency management (based on Apache Ivy).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T135756Z" creationid="95" creationdate="20170721T135756Z">
        <seg>（基于Apache Ivy的）非常强大的依赖管理。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Very powerful support for multi-project builds.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T135728Z" creationid="95" creationdate="20170721T135728Z">
        <seg>非常强大的多项目构建支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We think the advantages of an internal DSL (based on a dynamic language) over XML are tremendous in case of &lt;s0&gt;&lt;e1&gt;build scripts&lt;/e1&gt;&lt;/s0&gt;. There are a couple of dynamic languages out there. Why Groovy? The answer lies in the context Gradle is operating in. Although Gradle is a general purpose build tool at its core, its main focus are Java projects. In such projects obviously the team members know Java. We think a build should be as transparent as possible to &lt;s2&gt;&lt;e3&gt;all&lt;/e3&gt;&lt;/s2&gt; team members.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T070852Z" creationid="95" creationdate="20170723T065620Z">
        <seg>我们认为在 &lt;s0&gt;&lt;e1&gt;构建脚本&lt;/e1&gt;&lt;/s0&gt;这种情况中，比起使用XML，（基于一种动态语言的）一种内部DSL会有很大的优点。 那么，有那么多的动态语言，我们为什么要使用Groovy？答案在于Gradle的操作环境。尽管Gradle的核心是成为一个通用的构建工具，但是它的主要重点还是Java项目。这样的项目的团队成员都知道Java。我们认为 ，构建应尽可能对 &lt;s2&gt;&lt;e3&gt;所有&lt;/e3&gt;&lt;/s2&gt; 的团队成员透明。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We would like to introduce Gradle to you, a build system that we think is a quantum leap for build technology in the Java (JVM) world.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T133736Z" creationid="95" creationdate="20170721T133736Z">
        <seg>我们很高兴向大家介绍Gradle，一个我们认为在Java（JVM）世界的构建技术上富有突破性的构建系统。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We would like to introduce Gradle to you, a build system that we think is a quantum leap for build technology in the Java (JVM) world. Gradle provides:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T135513Z" creationid="95" creationdate="20170721T135513Z">
        <seg>我们很高兴向大家介绍Gradle，一个我们认为在Java（JVM）世界的构建技术上富有突破性的构建系统。它提供了：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What does &lt;c0&gt;-q&lt;/c0&gt; do?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T145132Z" creationid="95" creationdate="20170724T145132Z">
        <seg> &lt;c0&gt;-q&lt;/c0&gt; 参数的作用是什么？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What's going on here? This build script defines a single task, called &lt;c0&gt;hello&lt;/c0&gt;, and adds an action to it. When you run &lt;s1&gt;&lt;c2&gt;gradle hello&lt;/c2&gt;&lt;/s1&gt;, Gradle executes the &lt;c3&gt;hello&lt;/c3&gt; task, which in turn executes the action you've provided. The action is simply a closure containing some Groovy code to execute.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T150523Z" creationid="95" creationdate="20170724T145851Z">
        <seg>我们来看看这个脚本做了些什么。它定义了一个叫做 &lt;c0&gt;hello&lt;/c0&gt;的任务，并且给它加了一个动作。当你执行&lt;s1&gt;&lt;c2&gt;gradle hello&lt;/c2&gt;&lt;/s1&gt;的时候，Gradle会执行这个&lt;c3&gt;hello&lt;/c3&gt;任务，而这个任务又会执行您所提供的动作。这个动作只是一个包含了一些要执行的Groovy代码的闭包。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When using Gradle (or any software package), you can run into problems. You may not understand how to use a particular feature, or you may encounter a defect. Or, you may have a general question about Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T120847Z" creationid="95" creationdate="20170723T120847Z">
        <seg>当使用Gradle（或者是其他软件包）的时候，或多或少都会遇到一些问题。或许是您无法驾驭的新特性，或许是正好遇到了缺陷，也可能是关于Gradle的一些常见问题。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Why Groovy?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072502Z" creationid="haohang" creationdate="20170720T072502Z">
        <seg>为什么使用 Groovy?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can add your own properties to a task. To add a property named &lt;c0&gt;myProperty&lt;/c0&gt;, set &lt;c1&gt;ext.myProperty&lt;/c1&gt; to an initial value. From that point on, the property can be read and set like a predefined task property.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T141932Z" creationid="95" creationdate="20170727T141635Z">
        <seg>您可以把您自己的属性添加到一个任务中。譬如如果要添加一个 &lt;c0&gt;myProperty&lt;/c0&gt;属性，可以为 &lt;c1&gt;ext.myProperty&lt;/c1&gt;设置一个初始值，然后您就可以像使用预定义的任务属性一样对它进行读取或设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can download one of the Gradle distributions from the &lt;a0&gt;Gradle web site&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T114403Z" creationid="95" creationdate="20170723T114319Z">
        <seg>您可以从&lt;a0&gt;Gradle 官方网站&lt;/a0&gt;上下载Gradle的发行包。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You might argue why not using Java then as the language for build scripts. We think this is a valid question. It would have the highest transparency for your team and the lowest learning curve. But due to limitations of Java such a build language would not be as nice, expressive and powerful as it could be. &lt;s0&gt;[&lt;a1&gt;1&lt;/a1&gt;]&lt;/s0&gt; Languages like Python, Groovy or Ruby do a much better job here. We have chosen Groovy as it offers by far the greatest transparency for Java people. Its base syntax is the same as Java's as well as its type system, its package structure and other things. Groovy builds a lot on top of that. But on a common ground with Java.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T071727Z" creationid="95" creationdate="20170723T070855Z">
        <seg>您可能会想问，为什么不使用Java来作为构建脚本的语言。这确实是一个很好的问题，它的团队透明度最高，并且学习曲线最低。但是由于Java的局限性，这样的一门构建语言就不会像现在的那样好、丰富而强大。&lt;s0&gt;[&lt;a1&gt;1&lt;/a1&gt;]&lt;/s0&gt; 像Python，Groovy或是Ruby这样的语言能够比它更好。我们之所以选择Groovy，是因为它为Java程序员提供了最大的透明度，它的基本语法，类型系统，包结构等都与Java相同。Groovy的底层是与Java相同的，只是在其之上做了许多工作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You run Gradle via the &lt;s0&gt;&lt;s1&gt;gradle&lt;/s1&gt;&lt;/s0&gt; command. To check if Gradle is properly installed just type &lt;s2&gt;&lt;s3&gt;gradle -v&lt;/s3&gt;&lt;/s2&gt;. The output shows Gradle version and also local environment configuration (groovy and JVM version, etc.). The displayed Gradle version should match the distribution you have downloaded.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T115559Z" creationid="95" creationdate="20170723T115238Z">
        <seg>您可以通过&lt;s0&gt;&lt;s1&gt;gradle&lt;/s1&gt;&lt;/s0&gt;命令来运行Gradle。输入&lt;s2&gt;&lt;s3&gt;gradle -v&lt;/s3&gt;&lt;/s2&gt;就可以检查Gradle是否被正确安装。该命令会输出Gradle的版本，以及本地环境的配置（groovy和JVM版本等等）。所显示的Gradle版本应该与您已经安装的发行包相匹配。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You run a Gradle build using the &lt;s0&gt;&lt;s1&gt;gradle&lt;/s1&gt;&lt;/s0&gt; command. The &lt;s2&gt;&lt;s3&gt;gradle&lt;/s3&gt;&lt;/s2&gt; command looks for a file called &lt;c4&gt;build.gradle&lt;/c4&gt; in the current directory. &lt;s5&gt;[&lt;a6&gt;2&lt;/a6&gt;]&lt;/s5&gt; We call this &lt;c7&gt;build.gradle&lt;/c7&gt; file a &lt;e8&gt;build script&lt;/e8&gt;, although strictly speaking it is a build configuration script, as we will see later. The build script defines a project and its tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T144635Z" creationid="95" creationdate="20170724T143923Z">
        <seg>您可以使用 &lt;s0&gt;&lt;s1&gt;gradle&lt;/s1&gt;&lt;/s0&gt; 命令来运行Gradle构建。 &lt;s2&gt;&lt;s3&gt;gradle&lt;/s3&gt;&lt;/s2&gt;命令会在当前目录下查找一个 &lt;c4&gt;build.gradle&lt;/c4&gt; 文件。 &lt;s5&gt;[&lt;a6&gt;2&lt;/a6&gt;]&lt;/s5&gt; 我们把这个 &lt;c7&gt;build.gradle&lt;/c7&gt; 文件称为是一个 &lt;e8&gt;构建脚本&lt;/e8&gt;，尽管严格上来讲，它只是一个构建的配置脚本，我们将会在后面看到。这个构建脚本定义了一个项目和它的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>artifact_dependencies_tutorial.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T080751Z" creationid="95" creationdate="20170723T080751Z">
        <seg>artifact_dependencies_tutorial.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>base.css</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072245Z" creationid="haohang" creationdate="20170720T072245Z">
        <seg>base.css</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>build.gradle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T144943Z" creationid="95" creationdate="20170724T144943Z">
        <seg>build.gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>doLast {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T144949Z" creationid="95" creationdate="20170724T144949Z">
        <seg>doLast {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>docs.css</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072245Z" creationid="haohang" creationdate="20170720T072245Z">
        <seg>docs.css</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ext.myProperty = &lt;s0&gt;"myValue"&lt;/s0&gt;
}

task printTaskProperties &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T141959Z" creationid="95" creationdate="20170727T141959Z">
        <seg>ext.myProperty = &lt;s0&gt;"myValue"&lt;/s0&gt;
}

task printTaskProperties &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>gradle_daemon.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T121208Z" creationid="95" creationdate="20170723T121208Z">
        <seg>gradle_daemon.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://forums.gradle.org</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T121536Z" creationid="95" creationdate="20170723T121536Z">
        <seg>http://forums.gradle.org</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.defmacro.org/ramblings/lisp.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T072133Z" creationid="95" creationdate="20170723T072133Z">
        <seg>http://www.defmacro.org/ramblings/lisp.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.gradle.org/contribute</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T142045Z" creationid="95" creationdate="20170721T142045Z">
        <seg>http://www.gradle.org/contribute</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.gradle.org/development</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T114844Z" creationid="95" creationdate="20170723T114844Z">
        <seg>http://www.gradle.org/development</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.gradle.org/downloads</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T114310Z" creationid="95" creationdate="20170723T114310Z">
        <seg>http://www.gradle.org/downloads</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.gradle.org/license</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T065552Z" creationid="95" creationdate="20170723T065552Z">
        <seg>http://www.gradle.org/license</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>installation.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T072426Z" creationid="95" creationdate="20170723T072426Z">
        <seg>installation.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>introduction.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072249Z" creationid="haohang" creationdate="20170720T072249Z">
        <seg>introduction.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>introduction.html#N10048</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072433Z" creationid="haohang" creationdate="20170720T072433Z">
        <seg>introduction.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>logging.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T145142Z" creationid="95" creationdate="20170724T145142Z">
        <seg>logging.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>more_about_tasks.html#sec:adding_dependencies_to_tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T160405Z" creationid="95" creationdate="20170726T160405Z">
        <seg>more_about_tasks.html#sec:adding_dependencies_to_tasks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>or</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155848Z" creationid="95" creationdate="20170726T155848Z">
        <seg>或者</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>overview.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072441Z" creationid="haohang" creationdate="20170720T072441Z">
        <seg>overview.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>overview.html#sec:special_feature_of_gradle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072444Z" creationid="haohang" creationdate="20170720T072444Z">
        <seg>overview.html#sec:special_feature_of_gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>overview.html#sec:why_groovy</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072449Z" creationid="haohang" creationdate="20170720T072449Z">
        <seg>overview.html#sec:why_groovy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>pmd_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T135423Z" creationid="95" creationdate="20170721T135423Z">
        <seg>-pmd_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s0&gt;'Hello Earth'&lt;/s0&gt;
}
hello.doFirst {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T133109Z" creationid="95" creationdate="20170727T133109Z">
        <seg>println &lt;s0&gt;'Hello Earth'&lt;/s0&gt;
}
hello.doFirst {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s0&gt;'Hello world!'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T144950Z" creationid="95" creationdate="20170724T144950Z">
        <seg>println &lt;s0&gt;'Hello world!'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s0&gt;'Hello world!'&lt;/s0&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155317Z" creationid="95" creationdate="20170726T155317Z">
        <seg>println &lt;s0&gt;'Hello world!'&lt;/s0&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s0&gt;'Hello world!'&lt;/s0&gt;
}
hello.doLast {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T141337Z" creationid="95" creationdate="20170727T141337Z">
        <seg>println &lt;s0&gt;'Hello world!'&lt;/s0&gt;
}
hello.doLast {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s0&gt;'Hello world!'&lt;/s0&gt;
}
task intro(dependsOn: hello) &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T160117Z" creationid="95" creationdate="20170726T160117Z">
        <seg>println &lt;s0&gt;'Hello world!'&lt;/s0&gt;
}
task intro(dependsOn: hello) &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s1&gt;"Greetings from the $hello.name task."&lt;/s1&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T141341Z" creationid="95" creationdate="20170727T141341Z">
        <seg>println &lt;s1&gt;"Greetings from the $hello.name task."&lt;/s1&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s1&gt;"I'm Gradle"&lt;/s1&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T160119Z" creationid="95" creationdate="20170726T160119Z">
        <seg>println &lt;s1&gt;"I'm Gradle"&lt;/s1&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s1&gt;"I'm task number $counter"&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T132726Z" creationid="95" creationdate="20170727T132726Z">
        <seg>println &lt;s1&gt;"I'm task number $counter"&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s1&gt;"Original: "&lt;/s1&gt; + someString</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155826Z" creationid="95" creationdate="20170726T155826Z">
        <seg>println &lt;s1&gt;"Original: "&lt;/s1&gt; + someString</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s1&gt;'Hello Venus'&lt;/s1&gt;
}
hello.doLast {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T133111Z" creationid="95" creationdate="20170727T133111Z">
        <seg>println &lt;s1&gt;'Hello Venus'&lt;/s1&gt;
}
hello.doLast {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s1&gt;'taskX'&lt;/s1&gt;
}
task taskY &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T160344Z" creationid="95" creationdate="20170726T160344Z">
        <seg>println &lt;s1&gt;'taskX'&lt;/s1&gt;
}
task taskY &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s2&gt;"Upper case: "&lt;/s2&gt; + someString.toUpperCase()
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155827Z" creationid="95" creationdate="20170726T155827Z">
        <seg>println &lt;s2&gt;"Upper case: "&lt;/s2&gt; + someString.toUpperCase()
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s2&gt;'Hello Mars'&lt;/s2&gt;
}
hello &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T133111Z" creationid="95" creationdate="20170727T133111Z">
        <seg>println &lt;s2&gt;'Hello Mars'&lt;/s2&gt;
}
hello &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s2&gt;'taskY'&lt;/s2&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T160347Z" creationid="95" creationdate="20170726T160347Z">
        <seg>println &lt;s2&gt;'taskY'&lt;/s2&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s3&gt;'Hello Jupiter'&lt;/s3&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T133114Z" creationid="95" creationdate="20170727T133114Z">
        <seg>println &lt;s3&gt;'Hello Jupiter'&lt;/s3&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println myTask.myProperty
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T142000Z" creationid="95" creationdate="20170727T142000Z">
        <seg>println myTask.myProperty
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task &lt;s0&gt;"task$counter"&lt;/s0&gt; &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T132725Z" creationid="95" creationdate="20170727T132725Z">
        <seg>task &lt;s0&gt;"task$counter"&lt;/s0&gt; &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task count &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155856Z" creationid="95" creationdate="20170726T155856Z">
        <seg>task count &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task hello &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155315Z" creationid="95" creationdate="20170726T155315Z">
        <seg>task hello &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task hello {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T144945Z" creationid="95" creationdate="20170724T144945Z">
        <seg>task hello {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task myTask {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T141958Z" creationid="95" creationdate="20170727T141958Z">
        <seg>task myTask {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task taskX(dependsOn: &lt;s0&gt;'taskY'&lt;/s0&gt;) &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T160338Z" creationid="95" creationdate="20170726T160338Z">
        <seg>task taskX(dependsOn: &lt;s0&gt;'taskY'&lt;/s0&gt;) &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task upper &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155757Z" creationid="95" creationdate="20170726T155757Z">
        <seg>task upper &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>troubleshooting.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T081148Z" creationid="95" creationdate="20170723T081148Z">
        <seg>troubleshooting.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_groovy_projects.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T080836Z" creationid="95" creationdate="20170723T080836Z">
        <seg>tutorial_groovy_projects.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_java_projects.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T072818Z" creationid="95" creationdate="20170723T072818Z">
        <seg>tutorial_java_projects.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_using_tasks.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T072622Z" creationid="95" creationdate="20170723T072622Z">
        <seg>tutorial_using_tasks.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_using_tasks.html#sec:shortcut_notations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T132111Z" creationid="95" creationdate="20170727T132111Z">
        <seg>tutorial_using_tasks.html#sec:shortcut_notations</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorials.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T141647Z" creationid="95" creationdate="20170721T141647Z">
        <seg>tutorials.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>userguide.css</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072246Z" creationid="haohang" creationdate="20170720T072246Z">
        <seg>userguide.css</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>userguide.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072248Z" creationid="haohang" creationdate="20170720T072248Z">
        <seg>userguide.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>web_project_tutorial.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T080955Z" creationid="95" creationdate="20170723T080955Z">
        <seg>web_project_tutorial.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>writing_build_scripts.html#sec:extra_properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T142011Z" creationid="95" creationdate="20170727T142011Z">
        <seg>writing_build_scripts.html#sec:extra_properties</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T144952Z" creationid="95" creationdate="20170724T144952Z">
        <seg>}
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}
}
task0.dependsOn task2, task3</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T133026Z" creationid="95" creationdate="20170727T133026Z">
        <seg>}
}
task0.dependsOn task2, task3</seg>
      </tuv>
    </tu>
<!-- Alternative translations -->
  </body>
</tmx>
