<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE tmx SYSTEM "tmx11.dtd">
<tmx version="1.1">
  <header creationtool="OmegaT" o-tmf="OmegaT TMX" adminlang="EN-US" datatype="plaintext" creationtoolversion="OmegaT-4.1.2" segtype="sentence" srclang="EN-US"/>
  <body>
<!-- Default translations -->
    <tu>
      <tuv lang="EN-US">
        <seg>#N100BF</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T072132Z" creationid="95" creationdate="20170723T072132Z">
        <seg>#N100BF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#N101CA</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T030915Z" creationid="95" creationdate="20170729T030915Z">
        <seg>#N101CA</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#N10658</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T051629Z" creationid="huanghaohang" creationdate="20170908T051629Z">
        <seg>#N10658</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#N1067B</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T051837Z" creationid="huanghaohang" creationdate="20170908T051837Z">
        <seg>#N1067B</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#ftn.N100BF</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T070853Z" creationid="95" creationdate="20170723T070853Z">
        <seg>#ftn.N100BF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#ftn.N101CA</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T143921Z" creationid="95" creationdate="20170724T143921Z">
        <seg>#ftn.N101CA</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#ftn.N10658</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T050030Z" creationid="huanghaohang" creationdate="20170908T050030Z">
        <seg>#ftn.N10658</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>#ftn.N1067B</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T050750Z" creationid="huanghaohang" creationdate="20170908T050750Z">
        <seg>#ftn.N1067B</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>*** gradle.manifesto.txt ***
Make the impossible possible, make the possible easy and make the easy elegant.
(inspired by Moshe Feldenkrais)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170728T153833Z" creationid="95" creationdate="20170728T153833Z">
        <seg>*** gradle.manifesto.txt ***
Make the impossible possible, make the possible easy and make the easy elegant.
(inspired by Moshe Feldenkrais)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:configurations(groovy.lang.Closure)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T051255Z" creationid="huanghaohang" creationdate="20170908T051255Z">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:configurations(groovy.lang.Closure)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:dependencies(groovy.lang.Closure)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T051302Z" creationid="huanghaohang" creationdate="20170908T051302Z">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:dependencies(groovy.lang.Closure)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:repositories(groovy.lang.Closure)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T051300Z" creationid="huanghaohang" creationdate="20170908T051300Z">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:repositories(groovy.lang.Closure)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.diagnostics.DependencyInsightReportTask.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T022204Z" creationid="huanghaohang" creationdate="20170910T022204Z">
        <seg>../dsl/org.gradle.api.tasks.diagnostics.DependencyInsightReportTask.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.testing.Test.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T132800Z" creationid="95" creationdate="20170730T132800Z">
        <seg>../dsl/org.gradle.api.tasks.testing.Test.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072430Z" creationid="haohang" creationdate="20170720T072430Z">
        <seg>1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>1.1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072433Z" creationid="haohang" creationdate="20170720T072433Z">
        <seg>1.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>1.1. About this user guide</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T142043Z" creationid="95" creationdate="20170721T142043Z">
        <seg>1.1. 关于本用户指南</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>10.1. Building a WAR file</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T004549Z" creationid="huanghaohang" creationdate="20170909T004549Z">
        <seg>10.1. 构建一个WAR文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>10.2. Running your web application</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T005509Z" creationid="huanghaohang" creationdate="20170909T005509Z">
        <seg>10.2. 运行 web 应用程序</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>10.3. Summary</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T010145Z" creationid="huanghaohang" creationdate="20170909T010145Z">
        <seg>10.3. 总结</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>11.1. Executing multiple tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T030325Z" creationid="huanghaohang" creationdate="20170909T030325Z">
        <seg>11.1. 执行多个任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>11.2. Excluding tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T031707Z" creationid="huanghaohang" creationdate="20170909T031707Z">
        <seg>11.2. 排除任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>11.3. Continuing the build when a failure occurs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T073647Z" creationid="huanghaohang" creationdate="20170909T073647Z">
        <seg>11.3. 失败后继续构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>11.4. Task name abbreviation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T075114Z" creationid="huanghaohang" creationdate="20170909T075114Z">
        <seg>11.4. 任务名缩写</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>11.5. Selecting which build to execute</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T113358Z" creationid="huanghaohang" creationdate="20170909T113358Z">
        <seg>11.5. 选择执行哪个构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>11.6.1. Listing projects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T011446Z" creationid="huanghaohang" creationdate="20170910T010925Z">
        <seg>11.6.1. 列出项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>11.6.2. Listing tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T011451Z" creationid="huanghaohang" creationdate="20170910T011436Z">
        <seg>11.6.2. 列出任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>11.6.3. Show task usage details</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T012423Z" creationid="huanghaohang" creationdate="20170910T012334Z">
        <seg>11.6.3. 显示任务帮助信息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>11.6.4. Listing project dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T013110Z" creationid="huanghaohang" creationdate="20170910T013110Z">
        <seg>11.6.4. 列出项目依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>11.6.5. Getting the insight into a particular dependency</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T021957Z" creationid="huanghaohang" creationdate="20170910T021706Z">
        <seg>11.6.5. 查看特定的依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>11.6.6. Listing project properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T023255Z" creationid="huanghaohang" creationdate="20170910T023255Z">
        <seg>11.6.6. 列出项目属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>11.6.7. Profiling a build</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T023503Z" creationid="huanghaohang" creationdate="20170910T023503Z">
        <seg>11.6.7. 分析构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>11.6. Obtaining information about your build</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T114322Z" creationid="huanghaohang" creationdate="20170909T114322Z">
        <seg>11.6. 获取构建的相关信息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>11.7. Dry Run</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T031426Z" creationid="huanghaohang" creationdate="20170910T031426Z">
        <seg>11.7. 演练</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>11.8. Summary</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T031753Z" creationid="huanghaohang" creationdate="20170910T031753Z">
        <seg>11.8. 总结</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072442Z" creationid="haohang" creationdate="20170720T072442Z">
        <seg>2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>2.1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072445Z" creationid="haohang" creationdate="20170720T072445Z">
        <seg>2.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>2.1. Features</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T165942Z" creationid="95" creationdate="20170721T165942Z">
        <seg>2.1. 特性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>2.2.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072450Z" creationid="haohang" creationdate="20170720T072450Z">
        <seg>2.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>2.2. Why Groovy?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T065618Z" creationid="95" creationdate="20170723T065618Z">
        <seg>2.2. 为什么使用 Groovy？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>3.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170801T014533Z" creationid="haohang" creationdate="20170801T014533Z">
        <seg>3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>3.1.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170801T014538Z" creationid="haohang" creationdate="20170801T014538Z">
        <seg>3.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>3.1. Getting Started</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170801T014519Z" creationid="95" creationdate="20170723T072518Z">
        <seg>3.1. 入门</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>4.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170801T014548Z" creationid="haohang" creationdate="20170801T014548Z">
        <seg>4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>4.1. Prerequisites</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T081223Z" creationid="95" creationdate="20170723T081223Z">
        <seg>4.1. 环境要求</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>4.2. Download</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T114306Z" creationid="95" creationdate="20170723T114306Z">
        <seg>4.2. 下载</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>4.3. Unpacking</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T114407Z" creationid="95" creationdate="20170723T114407Z">
        <seg>4.3. 解压</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>4.4. Environment variables</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T115052Z" creationid="95" creationdate="20170723T115052Z">
        <seg>4.4. 环境变量</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>4.5. Running and testing your installation</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T115236Z" creationid="95" creationdate="20170723T115236Z">
        <seg>4.5. 运行和测试您的安装</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>4.6. JVM options</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T115602Z" creationid="95" creationdate="20170723T115602Z">
        <seg>4.6. JVM 选项</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>4.times { counter -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T132724Z" creationid="95" creationdate="20170727T132724Z">
        <seg>4.times { counter -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>4.times { print &lt;s0&gt;"$it "&lt;/s0&gt; }
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155858Z" creationid="95" creationdate="20170726T155858Z">
        <seg>4.times { print &lt;s0&gt;"$it "&lt;/s0&gt; }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>5.1. Working through problems</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T121003Z" creationid="95" creationdate="20170723T121003Z">
        <seg>5.1. 解决问题</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>5.2. Getting help</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T121457Z" creationid="95" creationdate="20170723T121457Z">
        <seg>5.2. 获取帮助</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.1. Projects and tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T122532Z" creationid="95" creationdate="20170723T122532Z">
        <seg>6.1. 项目和任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.10. Using Ant Tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T142147Z" creationid="95" creationdate="20170727T142147Z">
        <seg>6.10. 使用 Ant 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.11. Using methods</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170728T154530Z" creationid="95" creationdate="20170728T154530Z">
        <seg>6.11. 使用方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.12. Default tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T023840Z" creationid="95" creationdate="20170729T023840Z">
        <seg>6.12. 默认任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.13. Configure by DAG</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T024252Z" creationid="95" creationdate="20170729T024252Z">
        <seg>6.13. 使用 DAG 配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.14. Where to next?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T030623Z" creationid="95" creationdate="20170729T030623Z">
        <seg>6.14. 下一步目标？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.2. Hello world</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T143914Z" creationid="95" creationdate="20170724T143914Z">
        <seg>6.2. Hello world</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.3. A shortcut task definition</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T151714Z" creationid="95" creationdate="20170724T151714Z">
        <seg>6.3. 快速任务定义</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.4. Build scripts are code</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155605Z" creationid="95" creationdate="20170726T155605Z">
        <seg>6.4. 构建脚本即代码</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.5. Task dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155926Z" creationid="95" creationdate="20170726T155926Z">
        <seg>6.5. 任务依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.6. Dynamic tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T132506Z" creationid="95" creationdate="20170727T132506Z">
        <seg>6.6. 动态任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.7. Manipulating existing tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T132812Z" creationid="95" creationdate="20170727T132812Z">
        <seg>6.7. 操纵现有任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.8. Shortcut notations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T133636Z" creationid="95" creationdate="20170727T133636Z">
        <seg>6.8. 快捷符号</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>6.9. Extra task properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T141631Z" creationid="95" creationdate="20170727T141631Z">
        <seg>6.9. 额外的任务属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>7.1. The Java plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T031248Z" creationid="95" creationdate="20170729T031248Z">
        <seg>7.1. Java 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>7.2.1. Building the project</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T013552Z" creationid="95" creationdate="20170730T013552Z">
        <seg>7.2.1. 构建项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>7.2.2. External dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T014724Z" creationid="95" creationdate="20170730T014724Z">
        <seg>7.2.2. 外部依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>7.2.3. customizing the project</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T124812Z" creationid="95" creationdate="20170730T124812Z">
        <seg>7.2.3. 自定义项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>7.2.4. Publishing the JAR file</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T150128Z" creationid="95" creationdate="20170731T150128Z">
        <seg>7.2.4. 发布JAR文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>7.2.5. Creating an Eclipse project</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T153752Z" creationid="95" creationdate="20170731T153752Z">
        <seg>7.2.5. 创建一个Eclipse项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>7.2.6. Summary</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T153944Z" creationid="95" creationdate="20170731T153944Z">
        <seg>7.2.6. 总结</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>7.2. A basic Java project</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T012356Z" creationid="95" creationdate="20170730T012356Z">
        <seg>7.2. 一个基本的 Java 项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>7.3.1. Defining a multi-project build</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T123148Z" creationid="95" creationdate="20170803T123148Z">
        <seg>7.3.1. 定义一个多项目构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>7.3.2. Common configuration</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T123812Z" creationid="95" creationdate="20170803T123812Z">
        <seg>7.3.2. 公共配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>7.3.3. Dependencies between projects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T124842Z" creationid="95" creationdate="20170803T124826Z">
        <seg>7.3.3. 项目中的依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>7.3.4. Creating a distribution</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T125652Z" creationid="95" creationdate="20170803T125526Z">
        <seg>7.3.4. 创建分发</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>7.3. Multi-project Java build</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T154344Z" creationid="95" creationdate="20170731T154124Z">
        <seg>7.3. 多项目的Java构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>7.4. Where to next?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T125746Z" creationid="95" creationdate="20170803T125725Z">
        <seg>7.4. 下一步目标？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>8.1. What is dependency management?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T130527Z" creationid="95" creationdate="20170803T130527Z">
        <seg>8.1. 什么是依赖管理？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>8.2. Declaring your dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170907T154905Z" creationid="95" creationdate="20170907T154905Z">
        <seg>8.2. 依赖声明</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>8.3. Dependency configurations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T021415Z" creationid="huanghaohang" creationdate="20170908T021415Z">
        <seg>8.3. 依赖配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>8.4. External dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T042927Z" creationid="huanghaohang" creationdate="20170908T042927Z">
        <seg>8.4. 外部依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>8.5. Repositories</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T044102Z" creationid="huanghaohang" creationdate="20170908T044102Z">
        <seg>8.5. 仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>8.6. Publishing artifacts</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T050027Z" creationid="huanghaohang" creationdate="20170908T050027Z">
        <seg>8.6. 发布构件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>8.7. Where to next?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T051121Z" creationid="huanghaohang" creationdate="20170908T051121Z">
        <seg>8.7. 下一步目标？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>9.1. A basic Groovy project</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T001602Z" creationid="huanghaohang" creationdate="20170909T001602Z">
        <seg>9.1. 一个基本的Groovy 项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>9.2. Summary</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T003019Z" creationid="huanghaohang" creationdate="20170909T003019Z">
        <seg>9.2. 总结</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>:api:libs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T012842Z" creationid="huanghaohang" creationdate="20170910T012842Z">
        <seg>:api:libs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>:webapp:libs

Type</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T012843Z" creationid="huanghaohang" creationdate="20170910T012843Z">
        <seg>:webapp:libs

Type</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;Previous&lt;/a0&gt;&lt;s1&gt;|&lt;/s1&gt;&lt;a2&gt;Contents&lt;/a2&gt;&lt;s3&gt;|&lt;/s3&gt;&lt;a4&gt;Next&lt;/a4&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072520Z" creationid="haohang" creationdate="20170720T072520Z">
        <seg>&lt;a0&gt;上一章&lt;/a0&gt;&lt;s1&gt;|&lt;/s1&gt;&lt;a2&gt;目录&lt;/a2&gt;&lt;s3&gt;|&lt;/s3&gt;&lt;a4&gt;下一章&lt;/a4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;// URL can refer to a local directory&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T045145Z" creationid="huanghaohang" creationdate="20170908T045145Z">
        <seg>&lt;s0&gt;// URL can refer to a local directory&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;&lt;e1&gt;Groovy&lt;/e1&gt;&lt;/s0&gt; build scripts.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T140744Z" creationid="95" creationdate="20170721T140744Z">
        <seg>使用&lt;s0&gt;&lt;e1&gt;Groovy&lt;/e1&gt;&lt;/s0&gt; 语言的构建脚本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;&lt;e1&gt;Note:&lt;/e1&gt;&lt;/s0&gt; The code for this example can be found at &lt;c2&gt;samples/groovy/quickstart&lt;/c2&gt; which is in both the binary and source distributions of Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T001840Z" creationid="huanghaohang" creationdate="20170909T001702Z">
        <seg>&lt;s0&gt;&lt;e1&gt;注：&lt;/e1&gt;&lt;/s0&gt;本示例的代码可以在Gradle的二进制或源码发行包中的 &lt;c2&gt;samples/groovy/quickstart&lt;/c2&gt;里找到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;&lt;e1&gt;Note:&lt;/e1&gt;&lt;/s0&gt; The code for this example can be found at &lt;c2&gt;samples/java/multiproject&lt;/c2&gt; which is in both the binary and source distributions of Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T154518Z" creationid="95" creationdate="20170731T154518Z">
        <seg>&lt;s0&gt;&lt;e1&gt;注：&lt;/e1&gt;&lt;/s0&gt;本示例的代码可以在Gradle的二进制或源代码发行包中的 &lt;c2&gt;samples/java/multiproject&lt;/c2&gt;里找到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;&lt;e1&gt;Note:&lt;/e1&gt;&lt;/s0&gt; The code for this example can be found at &lt;c2&gt;samples/java/quickstart&lt;/c2&gt; which is in both the binary and source distributions of Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T012606Z" creationid="95" creationdate="20170730T012606Z">
        <seg>&lt;s0&gt;&lt;e1&gt;注：&lt;/e1&gt;&lt;/s0&gt;本示例的代码可以在Gradle的二进制或源代码发行包中的 &lt;c2&gt;samples/java/quickstart&lt;/c2&gt;里找到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;&lt;e1&gt;Note:&lt;/e1&gt;&lt;/s0&gt; The code for this example can be found at &lt;c2&gt;samples/webApplication/quickstart&lt;/c2&gt; which is in both the binary and source distributions of Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T004659Z" creationid="huanghaohang" creationdate="20170909T004659Z">
        <seg>&lt;s0&gt;&lt;e1&gt;注：&lt;/e1&gt;&lt;/s0&gt;本示例的代码可以在Gradle的二进制或源代码发行包中的 &lt;c2&gt;samples/webApplication/quickstart&lt;/c2&gt;里找到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;[&lt;a1&gt;1&lt;/a1&gt;] &lt;/s0&gt;At &lt;a2&gt;http://www.defmacro.org/ramblings/lisp.html&lt;/a2&gt; you find an interesting article comparing Ant, XML, Java and Lisp. It's funny that the 'if Java had that syntax' syntax in this article is actually the Groovy syntax.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T072342Z" creationid="95" creationdate="20170723T072136Z">
        <seg>&lt;s0&gt;[&lt;a1&gt;1&lt;/a1&gt;] &lt;/s0&gt;在 &lt;a2&gt;http://www.defmacro.org/ramblings/lisp.html&lt;/a2&gt; 上面，你可以找到一篇比较Ant，XML，Java和List的文章。很有趣的是，这篇文章中的“如果Java具有该语法”的语法实际上正是Groovy的语法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;[&lt;a1&gt;2&lt;/a1&gt;] &lt;/s0&gt;There are command line switches to change this behavior. See &lt;a2&gt;Appendix D, &lt;i3&gt;Gradle Command Line&lt;/i3&gt;&lt;/a2&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T031034Z" creationid="95" creationdate="20170729T030917Z">
        <seg>&lt;s0&gt;[&lt;a1&gt;2&lt;/a1&gt;] &lt;/s0&gt;有一些命令行开关可以改变这一行为，请参阅《&lt;a2&gt;附录 D， &lt;i3&gt;Gradle 命令行&lt;/i3&gt;&lt;/a2&gt;》。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;[&lt;a1&gt;3&lt;/a1&gt;] &lt;/s0&gt;We think this is confusing, and we are gradually teasing apart the two concepts in the Gradle DSL.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T051835Z" creationid="huanghaohang" creationdate="20170908T051835Z">
        <seg>&lt;s0&gt;[&lt;a1&gt;3&lt;/a1&gt;] &lt;/s0&gt;关于这点，我们认为会让人感到很困惑，因此我们正在逐渐梳理Gradle DSL中的这两个概念。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;[&lt;a1&gt;4&lt;/a1&gt;] &lt;/s0&gt;We are working to make the syntax consistent for resolving from and publishing to Maven repositories.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T052002Z" creationid="huanghaohang" creationdate="20170908T052002Z">
        <seg>&lt;s0&gt;[&lt;a1&gt;4&lt;/a1&gt;] &lt;/s0&gt;我们正在努力统一从Maven仓库解析依赖以及向其发布的语法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s1&gt;if&lt;/s1&gt; (file.isFile()) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170728T153800Z" creationid="95" creationdate="20170728T153800Z">
        <seg>&lt;s1&gt;if&lt;/s1&gt; (file.isFile()) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s3&gt;if&lt;/s3&gt; (taskGraph.hasTask(release)) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T025306Z" creationid="95" creationdate="20170729T025306Z">
        <seg>&lt;s3&gt;if&lt;/s3&gt; (taskGraph.hasTask(release)) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q
Default Cleaning!
Default Running!</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T023928Z" creationid="95" creationdate="20170729T023928Z">
        <seg>&gt; gradle -q
Default Cleaning!
Default Running!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q -b subdir/myproject.gradle hello
using build file 'myproject.gradle' in 'subdir'.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T114026Z" creationid="huanghaohang" creationdate="20170909T114026Z">
        <seg>&gt; gradle -q -b subdir/myproject.gradle hello
using build file 'myproject.gradle' in 'subdir'.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q -p subdir hello
using build file 'build.gradle' in 'subdir'.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T114308Z" creationid="huanghaohang" creationdate="20170909T114308Z">
        <seg>&gt; gradle -q -p subdir hello
using build file 'build.gradle' in 'subdir'.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q api:dependencies --configuration testCompile
------------------------------------------------------------
Project :api - The shared API for the application
------------------------------------------------------------

testCompile
\--- junit:junit:4.11</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T021703Z" creationid="huanghaohang" creationdate="20170910T021703Z">
        <seg>&gt; gradle -q api:dependencies --configuration testCompile
------------------------------------------------------------
Project :api - The shared API for the application
------------------------------------------------------------

testCompile
\--- junit:junit:4.11</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q api:properties
------------------------------------------------------------
Project :api - The shared API for the application
------------------------------------------------------------

allprojects: [project ':api']
ant: org.gradle.api.internal.project.DefaultAntBuilder@12345
antBuilderFactory: org.gradle.api.internal.project.DefaultAntBuilderFactory@12345
artifacts: org.gradle.api.internal.artifacts.dsl.DefaultArtifactHandler@12345
asDynamicObject: org.gradle.api.internal.ExtensibleDynamicObject@12345
baseClassLoaderScope: org.gradle.api.internal.initialization.DefaultClassLoaderScope@12345
buildDir: /home/user/gradle/samples/userguide/tutorial/projectReports/api/build
buildFile: /home/user/gradle/samples/userguide/tutorial/projectReports/api/build.gradle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T023447Z" creationid="huanghaohang" creationdate="20170910T023447Z">
        <seg>&gt; gradle -q api:properties
------------------------------------------------------------
Project :api - The shared API for the application
------------------------------------------------------------

allprojects: [project ':api']
ant: org.gradle.api.internal.project.DefaultAntBuilder@12345
antBuilderFactory: org.gradle.api.internal.project.DefaultAntBuilderFactory@12345
artifacts: org.gradle.api.internal.artifacts.dsl.DefaultArtifactHandler@12345
asDynamicObject: org.gradle.api.internal.ExtensibleDynamicObject@12345
baseClassLoaderScope: org.gradle.api.internal.initialization.DefaultClassLoaderScope@12345
buildDir: /home/user/gradle/samples/userguide/tutorial/projectReports/api/build
buildFile: /home/user/gradle/samples/userguide/tutorial/projectReports/api/build.gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q count
0 1 2 3</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155921Z" creationid="95" creationdate="20170726T155921Z">
        <seg>&gt; gradle -q count
0 1 2 3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q dependencies api:dependencies webapp:dependencies
------------------------------------------------------------
Root project
------------------------------------------------------------

No configurations

------------------------------------------------------------
Project :api - The shared API for the application
------------------------------------------------------------

compile
\--- org.codehaus.groovy:groovy-all:2.3.3

testCompile
\--- junit:junit:4.11</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T014136Z" creationid="huanghaohang" creationdate="20170910T014136Z">
        <seg>&gt; gradle -q dependencies api:dependencies webapp:dependencies
------------------------------------------------------------
Root project
------------------------------------------------------------

No configurations

------------------------------------------------------------
Project :api - The shared API for the application
------------------------------------------------------------

compile
\--- org.codehaus.groovy:groovy-all:2.3.3

testCompile
\--- junit:junit:4.11</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q distribution
We build the zip with version=1.0-SNAPSHOT</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T025321Z" creationid="95" creationdate="20170729T025321Z">
        <seg>&gt; gradle -q distribution
We build the zip with version=1.0-SNAPSHOT</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q hello
Hello Venus
Hello Earth
Hello Mars
Hello Jupiter</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T133119Z" creationid="95" creationdate="20170727T133119Z">
        <seg>&gt; gradle -q hello
Hello Venus
Hello Earth
Hello Mars
Hello Jupiter</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q hello
Hello world!</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T145850Z" creationid="95" creationdate="20170724T145850Z">
        <seg>&gt; gradle -q hello
Hello world!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q hello
Hello world!
Greetings from the hello task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T141348Z" creationid="95" creationdate="20170727T141348Z">
        <seg>&gt; gradle -q hello
Hello world!
Greetings from the hello task.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q help --task libs
Detailed task information for libs

Paths</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T012840Z" creationid="huanghaohang" creationdate="20170910T012840Z">
        <seg>&gt; gradle -q help --task libs
Detailed task information for libs

Paths</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q intro
Hello world!
I'm Gradle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T160131Z" creationid="95" creationdate="20170726T160131Z">
        <seg>&gt; gradle -q intro
Hello world!
I'm Gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q loadfile
*** agile.manifesto.txt ***
Individuals and interactions over processes and tools
Working software over comprehensive documentation
Customer collaboration  over contract negotiation
Responding to change over following a plan</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170728T153832Z" creationid="95" creationdate="20170728T153832Z">
        <seg>&gt; gradle -q loadfile
*** agile.manifesto.txt ***
Individuals and interactions over processes and tools
Working software over comprehensive documentation
Customer collaboration  over contract negotiation
Responding to change over following a plan</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q loadfile
I'm fond of agile.manifesto.txt
I'm fond of gradle.manifesto.txt</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T023516Z" creationid="95" creationdate="20170729T023516Z">
        <seg>&gt; gradle -q loadfile
I'm fond of agile.manifesto.txt
I'm fond of gradle.manifesto.txt</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q printTaskProperties
myValue</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T142011Z" creationid="95" creationdate="20170727T142011Z">
        <seg>&gt; gradle -q printTaskProperties
myValue</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q projects
------------------------------------------------------------
Root project
------------------------------------------------------------

Root project 'projectReports'
+--- Project ':api' - The shared API for the application
\--- Project ':webapp' - The Web application implementation

To see a list of the tasks of a project, run gradle &lt;project-path&gt;:tasks
For example, try running gradle :api:tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T011131Z" creationid="huanghaohang" creationdate="20170910T011131Z">
        <seg>&gt; gradle -q projects
------------------------------------------------------------
Root project
------------------------------------------------------------

Root project 'projectReports'
+--- Project ':api' - The shared API for the application
\--- Project ':webapp' - The Web application implementation

To see a list of the tasks of a project, run gradle &lt;project-path&gt;:tasks
For example, try running gradle :api:tasks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q release
We build the zip with version=1.0
We release now</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T025329Z" creationid="95" creationdate="20170729T025329Z">
        <seg>&gt; gradle -q release
We build the zip with version=1.0
We release now</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q task0
I'm task number 2
I'm task number 3
I'm task number 0</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T133039Z" creationid="95" creationdate="20170727T133039Z">
        <seg>&gt; gradle -q task0
I'm task number 2
I'm task number 3
I'm task number 0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q task1
I'm task number 1</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T132731Z" creationid="95" creationdate="20170727T132731Z">
        <seg>&gt; gradle -q task1
I'm task number 1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q taskX
taskY
taskX</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T160402Z" creationid="95" creationdate="20170726T160402Z">
        <seg>&gt; gradle -q taskX
taskY
taskX</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q tasks
------------------------------------------------------------
All tasks runnable from root project
------------------------------------------------------------

Default tasks: dists

Build tasks
-----------
clean - Deletes the build directory (build)
dists - Builds the distribution
libs - Builds the JAR

Build Setup tasks
-----------------
init - Initializes a new Gradle build. [incubating]
wrapper - Generates Gradle wrapper files. [incubating]

Help tasks
----------
dependencies - Displays all dependencies declared in root project 'projectReports'.
dependencyInsight - Displays the insight into a specific dependency in root project 'projectReports'.
help - Displays a help message
projects - Displays the sub-projects of root project 'projectReports'.
properties - Displays the properties of root project 'projectReports'.
tasks - Displays the tasks runnable from root project 'projectReports' (some of the displayed tasks may belong to subprojects).

To see all tasks and more detail, run with --all.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T011714Z" creationid="huanghaohang" creationdate="20170910T011714Z">
        <seg>&gt; gradle -q tasks
------------------------------------------------------------
All tasks runnable from root project
------------------------------------------------------------

Default tasks: dists

Build tasks
-----------
clean - Deletes the build directory (build)
dists - Builds the distribution
libs - Builds the JAR

Build Setup tasks
-----------------
init - Initializes a new Gradle build. [incubating]
wrapper - Generates Gradle wrapper files. [incubating]

Help tasks
----------
dependencies - Displays all dependencies declared in root project 'projectReports'.
dependencyInsight - Displays the insight into a specific dependency in root project 'projectReports'.
help - Displays a help message
projects - Displays the sub-projects of root project 'projectReports'.
properties - Displays the properties of root project 'projectReports'.
tasks - Displays the tasks runnable from root project 'projectReports' (some of the displayed tasks may belong to subprojects).

To see all tasks and more detail, run with --all.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q tasks --all
------------------------------------------------------------
All tasks runnable from root project
------------------------------------------------------------

Default tasks: dists

Build tasks
-----------
clean - Deletes the build directory (build)
api:clean - Deletes the build directory (build)
webapp:clean - Deletes the build directory (build)
dists - Builds the distribution [api:libs, webapp:libs]</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T012327Z" creationid="huanghaohang" creationdate="20170910T012327Z">
        <seg>&gt; gradle -q tasks --all
------------------------------------------------------------
All tasks runnable from root project
------------------------------------------------------------

Default tasks: dists

Build tasks
-----------
clean - Deletes the build directory (build)
api:clean - Deletes the build directory (build)
webapp:clean - Deletes the build directory (build)
dists - Builds the distribution [api:libs, webapp:libs]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q upper
Original: mY_nAmE
Upper case: MY_NAME</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155840Z" creationid="95" creationdate="20170726T155840Z">
        <seg>&gt; gradle -q upper
Original: mY_nAmE
Upper case: MY_NAME</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle -q webapp:dependencyInsight --dependency groovy --configuration compile
org.codehaus.groovy:groovy-all:2.3.3
\--- project :api</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T022200Z" creationid="huanghaohang" creationdate="20170910T022200Z">
        <seg>&gt; gradle -q webapp:dependencyInsight --dependency groovy --configuration compile
org.codehaus.groovy:groovy-all:2.3.3
\--- project :api</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle build
:compileJava
:processResources
:classes
:jar
:assemble
:compileTestJava
:processTestResources
:testClasses
:test
:check
:build

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T014310Z" creationid="95" creationdate="20170730T014310Z">
        <seg>&gt; gradle build
:compileJava
:processResources
:classes
:jar
:assemble
:compileTestJava
:processTestResources
:testClasses
:test
:check
:build

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle cT
:compile
compiling source
:compileTest
compiling unit tests

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T113301Z" creationid="huanghaohang" creationdate="20170909T113301Z">
        <seg>&gt; gradle cT
:compile
compiling source
:compileTest
compiling unit tests

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle di
:compile
compiling source
:compileTest
compiling unit tests
:test
running unit tests
:dist
building the distribution

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T112858Z" creationid="huanghaohang" creationdate="20170909T112858Z">
        <seg>&gt; gradle di
:compile
compiling source
:compileTest
compiling unit tests
:test
running unit tests
:dist
building the distribution

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle dist -x test
:compile
compiling source
:dist
building the distribution

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T032032Z" creationid="huanghaohang" creationdate="20170909T032032Z">
        <seg>&gt; gradle dist -x test
:compile
compiling source
:dist
building the distribution

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&gt; gradle dist test
:compile
compiling source
:compileTest
compiling unit tests
:test
running unit tests
:dist
building the distribution

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T031201Z" creationid="huanghaohang" creationdate="20170909T031201Z">
        <seg>&gt; gradle dist test
:compile
compiling source
:compileTest
compiling unit tests
:test
running unit tests
:dist
building the distribution

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A project can have multiple repositories. Gradle will look for a dependency in each repository in the order they are specified, stopping at the first repository that contains the requested module.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T045952Z" creationid="huanghaohang" creationdate="20170908T045151Z">
        <seg>项目可以有多个仓库。 Gradle将按照指定的顺序在每个仓库中查找依赖，并在找到包含了所请求模块的第一个仓库后停止。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A rich domain model for describing your build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T140853Z" creationid="95" creationdate="20170721T140853Z">
        <seg>丰富的领域模型来描述您的构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A very flexible general purpose build tool like Ant.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T133918Z" creationid="95" creationdate="20170721T133918Z">
        <seg>一个像Ant一样非常灵活而通用的构建工具。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>About this user guide</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072441Z" creationid="haohang" creationdate="20170720T072441Z">
        <seg>关于本用户指南</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Again, this defines a task called &lt;c0&gt;hello&lt;/c0&gt; with a single closure to execute. We will use this task definition style throughout the user guide.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155544Z" creationid="95" creationdate="20170726T155319Z">
        <seg>这里再一次使用了一个闭包的方式来定义一个 &lt;c0&gt;hello&lt;/c0&gt; 任务去执行。在本用户指南中，我们还会再使用这种任务定义的风格。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Alternatively, you can use the &lt;c0&gt;-p&lt;/c0&gt; option to specify the project directory to use. For multi-project builds you should use &lt;c1&gt;-p&lt;/c1&gt; option instead of &lt;c2&gt;-b&lt;/c2&gt; option.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T114222Z" creationid="huanghaohang" creationdate="20170909T114222Z">
        <seg>或者，你也可以使用&lt;c0&gt;-p&lt;/c0&gt;选项来指定使用哪一个项目目录。对于多项目构建，你应该使用&lt;c1&gt;-p&lt;/c1&gt;而不是&lt;c2&gt;-b&lt;/c2&gt;选项。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An external dependency is identified using &lt;c0&gt;group&lt;/c0&gt;, &lt;c1&gt;name&lt;/c1&gt; and &lt;c2&gt;version&lt;/c2&gt; attributes. Depending on which kind of repository you are using, &lt;c3&gt;group&lt;/c3&gt; and &lt;c4&gt;version&lt;/c4&gt; may be optional.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T043615Z" creationid="huanghaohang" creationdate="20170908T043428Z">
        <seg>一个外部依赖使用&lt;c0&gt;group&lt;/c0&gt;, &lt;c1&gt;name&lt;/c1&gt; 和 &lt;c2&gt;version&lt;/c2&gt; 属性来定义。根据你所使用的仓库类型不同， &lt;c3&gt;group&lt;/c3&gt; 和 &lt;c4&gt;version&lt;/c4&gt; 可能是可选的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Ant tasks and builds as first class citizens.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T140635Z" creationid="95" creationdate="20170721T140635Z">
        <seg>Ant 任务和构建是Gradle的第一公民。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Ant tasks are first class citizens. Even more interesting, Ant projects are first class citizens as well. Gradle provides a deep import for any Ant project, turning Ant targets into native Gradle tasks at runtime. You can depend on them from Gradle, you can enhance them from Gradle, you can even declare dependencies on Gradle tasks in your build.xml. The same integration is provided for properties, paths, etc ...</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T060609Z" creationid="95" creationdate="20170723T060609Z">
        <seg>Ant任务是一级公民。更有趣的是，Ant 项目也是一级公民。Gradle为Ant项目提供了一种深度的导入，能够在运行时将Ant 目标转换为原生的Gradle任何。你可以从Gradle中依赖它们，增强它们，甚至在你的build.xml中定义对Gradle任何的依赖。同时，Gradle还为属性，路径等提供了同样的集成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Ant tasks are first-class citizens in Gradle. Gradle provides excellent integration for Ant tasks by simply relying on Groovy. Groovy is shipped with the fantastic &lt;c0&gt;AntBuilder&lt;/c0&gt;. Using Ant tasks from Gradle is as convenient and more powerful than using Ant tasks from a &lt;c1&gt;build.xml&lt;/c1&gt; file. From the example below, you can learn how to execute ant tasks and how to access ant properties:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170728T153726Z" creationid="95" creationdate="20170728T153726Z">
        <seg>Ant任务是Gradle的一级公民。Gradle通过简单地依赖Groovy，对Ant任务提供了强大的集成。Groovy自带了一个神奇的&lt;c0&gt;AntBuilder&lt;/c0&gt;，在Gradle中使用Ant任务比在&lt;c1&gt;build.xml&lt;/c1&gt;中调用更方便和强大。通过下面的例子，您可以学习到如何执行ant任务，以及如何访问ant属性：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As we have seen, Gradle is a general-purpose build tool. It can build pretty much anything you care to implement in your build script. Out-of-the-box, however, it doesn't build anything unless you add code to your build script to do so.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T010757Z" creationid="95" creationdate="20170729T031316Z">
        <seg>如你所见，Gradle是一个通用的构建工具。你在构建脚本中实现的几乎任何内容它都能够构建。它开箱即用，但是需要你在构建脚本中先写好代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As we later describe in full detail (see &lt;a0&gt;Chapter 55, &lt;i1&gt;The Build Lifecycle&lt;/i1&gt;&lt;/a0&gt;), Gradle has a configuration phase and an execution phase. After the configuration phase, Gradle knows all tasks that should be executed. Gradle offers you a hook to make use of this information. A use-case for this would be to check if the release task is among the tasks to be executed. Depending on this, you can assign different values to some variables.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T025119Z" creationid="95" creationdate="20170729T024301Z">
        <seg>正如我们后面会详细描述的的（见&lt;a0&gt;第五十五章，&lt;i1&gt;构建的生命周期&lt;/i1&gt;&lt;/a0&gt;），Gradle有一个配置阶段和一个执行阶段。在配置阶段后，Gradle会了解所有应该执行的任务。Gradle提供了一个钩子来让你使用这些信息。一个使用场景是，可以检查某个发布任务是否在这些要执行的任务当中。借由此，您可以为一些变量进行不同的赋值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As you might have noticed in the previous examples, there is a convenient notation for accessing an &lt;s0&gt;&lt;e1&gt;existing&lt;/e1&gt;&lt;/s0&gt; task. Each task is available as a property of the build script:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T141306Z" creationid="95" creationdate="20170727T141306Z">
        <seg>你可能在前面的例子中也注意到了，一个&lt;s0&gt;&lt;e1&gt;已存在&lt;/e1&gt;&lt;/s0&gt;任务会有一个便捷的符号用于访问。 每一个任务都可作为这个构建脚本中的一个属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As you probably have guessed, you can declare dependencies between your tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T160057Z" creationid="95" creationdate="20170726T160057Z">
        <seg>你应该也已经猜到了，我们可以声明任务之间的依赖关系。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>At the heart of Gradle lies a rich extensible Domain Specific Language (DSL) based on Groovy. Gradle pushes declarative builds to the next level by providing declarative language elements that you can assemble as you like. Those elements also provide build-by-convention support for Java, Groovy, OSGi, Web and Scala projects. Even more, this declarative language is extensible. Add your own new language elements or enhance the existing ones. Thus providing concise, maintainable and comprehensible builds.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170722T020231Z" creationid="95" creationdate="20170722T015420Z">
        <seg>Gradle 的核心是基于Groovy的丰富可扩展的域特定语言（DSL）。Gradle通过提供可以根据需要进行组合的声明性语言元素，将声明性构建推到一个新的层次。这些元素还将为Java，Groovy，OSGi，Web和Scala项目提供基于约定的构建。更重要的是，这种声明性语言是可扩展的。可以通过添加你自己的新的语言元素，或者是增加现有的元素，从而提供简洁，可维护以及易于理解的构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Because each task is executed once only, executing &lt;s0&gt;&lt;c1&gt;gradle test test&lt;/c1&gt;&lt;/s0&gt; is exactly the same as executing &lt;s2&gt;&lt;c3&gt;gradle test&lt;/c3&gt;&lt;/s2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T031650Z" creationid="huanghaohang" creationdate="20170909T031205Z">
        <seg>由于每个任务只执行一次，执行&lt;s0&gt;&lt;c1&gt;gradle test test&lt;/c1&gt;&lt;/s0&gt;与执行&lt;s2&gt;&lt;c3&gt;gradle test&lt;/c3&gt;&lt;/s2&gt;的结果是完全相同的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Below four tasks are defined. Both &lt;c0&gt;dist&lt;/c0&gt; and &lt;c1&gt;test&lt;/c1&gt; depend on the &lt;c2&gt;compile&lt;/c2&gt; task. Running &lt;s3&gt;&lt;c4&gt;gradle dist test&lt;/c4&gt;&lt;/s3&gt; for this build script results in the &lt;c5&gt;compile&lt;/c5&gt; task being executed only once.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T031022Z" creationid="huanghaohang" creationdate="20170909T031022Z">
        <seg>下面定义了四个任务，其中&lt;c0&gt;dist&lt;/c0&gt;和&lt;c1&gt;test&lt;/c1&gt;都依赖于&lt;c2&gt;compile&lt;/c2&gt;任务。对于这个构建脚本，运行&lt;s3&gt;&lt;c4&gt;gradle dist test&lt;/c4&gt;&lt;/s3&gt;只会使&lt;c5&gt;compile&lt;/c5&gt;任务被执行一次。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Build layout</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T154433Z" creationid="95" creationdate="20170731T154433Z">
        <seg>构建布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Builds the JAR</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T012851Z" creationid="huanghaohang" creationdate="20170910T012851Z">
        <seg>Builds the JAR</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Builds which utilize a buildSrc directory will generate a second profile report for buildSrc in the &lt;c0&gt;buildSrc/build&lt;/c0&gt; directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T031129Z" creationid="huanghaohang" creationdate="20170910T030957Z">
        <seg>使用buildSrc目录的构建为buildSrc在&lt;c0&gt;buildSrc/build&lt;/c0&gt;目录里生成第二个分析报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But we never lock you in!</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T135020Z" creationid="95" creationdate="20170721T134611Z">
        <seg>但我们不会去限定你。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default, Gradle does not define any repositories. You need to define at least one before you can use external dependencies. One option is use the Maven central repository:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T044736Z" creationid="huanghaohang" creationdate="20170908T044736Z">
        <seg>默认情况下，Gradle没有定义任何仓库。需要你至少去定义一个，然后才能使用外部依赖。我们通常使用的有Maven中央仓库：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default, Gradle will abort execution and fail the build as soon as any task fails. This allows the build to complete sooner, but hides other failures that would have occurred. In order to discover as many failures as possible in a single build execution, you can use the &lt;c0&gt;--continue&lt;/c0&gt; option.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T074040Z" creationid="huanghaohang" creationdate="20170909T074040Z">
        <seg>默认情况下，只要有任务失败，Gradle就将中断执行让构建失败。这样做会使构建更快地结束，但也会让其他可能发生的失败不被发现。因此你可以使用&lt;c0&gt;--continue&lt;/c0&gt;选项来在单个构建执行中发现尽可能多的失败。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default, this report shows only those tasks which have been assigned to a task group. You can do this by setting the &lt;c0&gt;group&lt;/c0&gt; property for the task. You can also set the &lt;c1&gt;description&lt;/c1&gt; property, to provide a description to be included in the report.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T011914Z" creationid="huanghaohang" creationdate="20170910T011716Z">
        <seg>默认情况下，此报告仅显示已分配给任务组的任务。你可以通过为任务设置&lt;c0&gt;group&lt;/c0&gt;属性来实现它。你也可以通过设置&lt;c1&gt;description&lt;/c1&gt;属性，来提供包含在报告中的描述。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 1. Introduction</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072252Z" creationid="haohang" creationdate="20170720T072252Z">
        <seg>第一章. 介绍</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 10, &lt;i0&gt;Web Application Quickstart&lt;/i0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T081015Z" creationid="95" creationdate="20170723T081015Z">
        <seg>第十章， &lt;i0&gt;Web 应用程序快速入门&lt;/i0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 10. Web Application Quickstart</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T011058Z" creationid="huanghaohang" creationdate="20170908T052100Z">
        <seg>第十章. Web 应用程序快速入门</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 11. Using the Gradle Command-Line</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T004301Z" creationid="huanghaohang" creationdate="20170909T004301Z">
        <seg>第十一章. 使用Gradle命令行</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 12. Using the Gradle Graphical User Interface</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T030126Z" creationid="huanghaohang" creationdate="20170909T030126Z">
        <seg>第十二章. 使用Gradle 图形用户界面</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 2. Overview</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072513Z" creationid="haohang" creationdate="20170720T072513Z">
        <seg>第二章. 概述</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 3. Tutorials</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T072420Z" creationid="95" creationdate="20170721T165938Z">
        <seg>第三章. 教程</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 4, &lt;i0&gt;Installing Gradle&lt;/i0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T072730Z" creationid="95" creationdate="20170723T072609Z">
        <seg>第四章，&lt;i0&gt; 安装Gradle&lt;/i0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 4. Installing Gradle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T072502Z" creationid="95" creationdate="20170723T072433Z">
        <seg>第四章. 安装Gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 42. The Announce Plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072240Z" creationid="haohang" creationdate="20170720T072240Z">
        <seg>第四十二章. Announce插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 5. Troubleshooting</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T081157Z" creationid="95" creationdate="20170723T081157Z">
        <seg>第五章. 疑难解答</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 6, &lt;i0&gt;Build Script Basics&lt;/i0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T072726Z" creationid="95" creationdate="20170723T072726Z">
        <seg>第六章， &lt;i0&gt;构建脚本基础&lt;/i0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 6. Build Script Basics</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T122508Z" creationid="95" creationdate="20170723T072427Z">
        <seg>第六章. 构建脚本基础</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 7, &lt;i0&gt;Java Quickstart&lt;/i0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170801T014527Z" creationid="95" creationdate="20170723T072829Z">
        <seg>第七章，  &lt;i0&gt;Java 快速入门&lt;/i0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 7. Java Quickstart</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T031231Z" creationid="95" creationdate="20170723T122517Z">
        <seg>第七章. Java 快速入门</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 8, &lt;i0&gt;Dependency Management Basics&lt;/i0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T080804Z" creationid="95" creationdate="20170723T080804Z">
        <seg>第八章， &lt;i0&gt;依赖管理基础&lt;/i0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 8. Dependency Management Basics</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T130441Z" creationid="95" creationdate="20170729T031243Z">
        <seg>第八章. 依赖管理基础</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 9, &lt;i0&gt;Groovy Quickstart&lt;/i0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T080844Z" creationid="95" creationdate="20170723T080844Z">
        <seg>第九章. &lt;i0&gt;Groovy快速入门&lt;/i0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Chapter 9. Groovy Quickstart</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T130455Z" creationid="95" creationdate="20170803T130455Z">
        <seg>第九章. Groovy 快速入门</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Compiles and jars your code, but does not run the unit tests. Other plugins add more artifacts to this task. For example, if you use the War plugin, this task will also build the WAR file for your project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T014612Z" creationid="95" creationdate="20170730T014612Z">
        <seg>编译代码并打成jar包，但不会运行单元测试。其他的插件会向这个任务添加更多的工件。例如，如果你使用 War 插件，这个任务也会对你的项目构建出 WAR 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Compiles and tests your code. Other plugins add more checks to this task. For example, if you use the &lt;c0&gt;checkstyle&lt;/c0&gt; plugin, this task will also run Checkstyle against your source code.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T014719Z" creationid="95" creationdate="20170730T014719Z">
        <seg>编译和测试代码。其他的插件会向这一任务添加更多的检查。例如，如果你使用 &lt;c0&gt;checkstyle&lt;/c0&gt; 插件，这一任务就会针对你的源代码运行 Checkstyle 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Copies of this document may be made for your own use and for distribution to others, provided that you do not charge any fee for such copies and further provided that each copy contains this Copyright Notice, whether distributed in print or electronically.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072426Z" creationid="haohang" creationdate="20170720T072343Z">
        <seg>本文件的副本，无论其是以印刷版本形式还是电子版本形式，也无论是您自用，还是分发给他人，均为免费，并且每一份副本均需带有版权声明。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Copyright © 2007-2012 Hans Dockter, Adam Murdoch</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072305Z" creationid="haohang" creationdate="20170720T072305Z">
        <seg>版权所有 © 2007-2012 Hans Dockter, Adam Murdoch</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Declarative builds and build-by-convention</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170722T015356Z" creationid="95" creationdate="20170722T015356Z">
        <seg>声明式的构建以及基于约定的构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Deep API</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170722T023155Z" creationid="95" creationdate="20170722T023155Z">
        <seg>深度 API</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Deletes the &lt;c0&gt;build&lt;/c0&gt; directory, removing all built files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T014417Z" creationid="95" creationdate="20170730T014417Z">
        <seg>删除&lt;c0&gt;build&lt;/c0&gt;目录，移除所有构建的文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Dependency configurations are also used to publish files.&lt;s0&gt;[&lt;a1&gt;3&lt;/a1&gt;]&lt;/s0&gt; We call these files &lt;e2&gt;publication artifacts&lt;/e2&gt;, or usually just &lt;e3&gt;artifacts&lt;/e3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T050136Z" creationid="huanghaohang" creationdate="20170908T050044Z">
        <seg>依赖配置也用于发布文件。&lt;s0&gt;[&lt;a1&gt;3&lt;/a1&gt;]&lt;/s0&gt;我们称这些文件&lt;e2&gt;发布构件&lt;/e2&gt;，通常也叫做&lt;e3&gt;构件&lt;/e3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Describes how to install Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T072817Z" creationid="95" creationdate="20170723T072621Z">
        <seg>介绍如何安装Gradle。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Different teams prefer different ways to manage their external dependencies. Gradle provides convenient support for any strategy. From transitive dependency management with remote Maven and Ivy repositories to jars or dirs on the local file system.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T034310Z" creationid="95" creationdate="20170723T034054Z">
        <seg>不同的团队喜欢使用不同的方式来管理他们的外部依赖。从远程Maven和Ivy仓库的传递依赖管理到本地文件系统上的jar包或目录，Gradle为任何策略都提供了方便的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>DocBook XSL Stylesheets V1.75.2</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072248Z" creationid="haohang" creationdate="20170720T072248Z">
        <seg>DocBook XSL Stylesheets V1.75.2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each project is made up of one or more &lt;e0&gt;tasks&lt;/e0&gt;. A task represents some atomic piece of work which a build performs. This might be compiling some classes, creating a JAR, generating javadoc, or publishing some archives to a repository.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T143544Z" creationid="95" creationdate="20170724T143343Z">
        <seg>每一个项目都由一个或多个&lt;e0&gt;任务&lt;/e0&gt;组成。一个任务表示构建执行的一些原子工作，比如编译一些类，创建一个JAR包，生成javadoc，或者是把一些档案发布到仓库中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Ease of migration</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T060917Z" creationid="95" creationdate="20170723T060917Z">
        <seg>易于迁移</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Every Gradle build is made up of one or more &lt;e0&gt;projects&lt;/e0&gt;. What a project represents depends on what it is that you are doing with Gradle. For example, a project might represent a library JAR or a web application. It might represent a distribution ZIP assembled from the JARs produced by other projects. A project does not necessarily represent a thing to be built. It might represent a thing to be done, such as deploying your application to staging or production environments. Don't worry if this seems a little vague for now. Gradle's build-by-convention support adds a more concrete definition for what a project is.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T143530Z" creationid="95" creationdate="20170724T143309Z">
        <seg>任何一个Gradle构建都是由一个或多个&lt;e0&gt;项目&lt;/e0&gt;组成。一个项目代表着什么，取决于你想通过Gradle来做什么。比如，一个项目可能代表着一个JAR库，或者是一个Web应用程序。它也可能代表从其他项目所生成的JAR包组装起来的ZIP文件。一个项目不一定是代表一个要构建的东西，它也可能代表一个要完成的东西，比如把您的应用部署到预发布或生产环境。如果现在看得不是很明白，也不用担心。Gradle的按约定来构建的支持为项目提供了更具体的定义。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Everything in Gradle sits on top of two basic concepts: &lt;e0&gt;projects&lt;/e0&gt; and &lt;e1&gt;tasks&lt;/e1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T142329Z" creationid="95" creationdate="20170724T142329Z">
        <seg>在整个Gradle，有两个最基础的概念：&lt;e0&gt;项目&lt;/e0&gt; 和 &lt;e1&gt;任务&lt;/e1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 10.1. War plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T004613Z" creationid="huanghaohang" creationdate="20170909T004613Z">
        <seg>示例 10.1. 使用War 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 10.2. Running web application with Jetty plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T005558Z" creationid="huanghaohang" creationdate="20170909T005558Z">
        <seg>示例10.2. 使用Jetty插件运行Web应用程序</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 11.1. Executing multiple tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T031119Z" creationid="huanghaohang" creationdate="20170909T031119Z">
        <seg>示例 11.1. 执行多个任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 11.10. Changing the content of the task report</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T012002Z" creationid="huanghaohang" creationdate="20170910T012002Z">
        <seg>示例11.10. 更改任务报告的内容</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 11.11. Obtaining more information about tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T012308Z" creationid="huanghaohang" creationdate="20170910T012308Z">
        <seg>示例11.11. 获取任务的更多相关信息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 11.12. Obtaining detailed help for tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T012828Z" creationid="huanghaohang" creationdate="20170910T012755Z">
        <seg>示例11.12. 获取任务的帮助信息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 11.13. Obtaining information about dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T014039Z" creationid="huanghaohang" creationdate="20170910T014039Z">
        <seg>示例11.13. 获取依赖的相关信息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 11.14. Filtering dependency report by configuration</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T021651Z" creationid="huanghaohang" creationdate="20170910T021651Z">
        <seg>示例11.14. 按配置过滤依赖报告</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 11.15. Getting the insight into a particular dependency</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T022143Z" creationid="huanghaohang" creationdate="20170910T022143Z">
        <seg>示例11.15. 查看特定的依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 11.16. Information about properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T023437Z" creationid="huanghaohang" creationdate="20170910T023437Z">
        <seg>示例11.16. 获取属性的相关信息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 11.2. Excluding tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T031953Z" creationid="huanghaohang" creationdate="20170909T031953Z">
        <seg>示例 11.2. 排除任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 11.3. Abbreviated task name</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T113243Z" creationid="huanghaohang" creationdate="20170909T112820Z">
        <seg>示例11.3. 缩写任务名称</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 11.4. Abbreviated camel case task name</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T113246Z" creationid="huanghaohang" creationdate="20170909T113231Z">
        <seg>示例11.4. 缩写驼峰任务名称</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 11.5. Selecting the project using a build file</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T114011Z" creationid="huanghaohang" creationdate="20170909T114011Z">
        <seg>示例11.5. 使用构建文件选择项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 11.6. Selecting the project using project directory</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T114250Z" creationid="huanghaohang" creationdate="20170909T114250Z">
        <seg>示例11.6. 使用项目目录选择项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 11.7. Obtaining information about projects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T011117Z" creationid="huanghaohang" creationdate="20170910T011117Z">
        <seg>示例11.7. 获取项目的相关信息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 11.8. Providing a description for a project</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T011416Z" creationid="huanghaohang" creationdate="20170910T011416Z">
        <seg>示例11.8. 提供项目描述信息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 11.9. Obtaining information about tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T011700Z" creationid="huanghaohang" creationdate="20170910T011700Z">
        <seg>示例11.9. 获取任务的相关信息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 6.1. The first build script</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T144942Z" creationid="95" creationdate="20170724T144942Z">
        <seg>示例 6.1. 第一个构建脚本</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 6.10. Accessing a task via API - adding behaviour</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T133108Z" creationid="95" creationdate="20170727T133108Z">
        <seg>示例6.10. 通过API访问任务——添加行为</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 6.11. Accessing task as a property of the build script</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T141334Z" creationid="95" creationdate="20170727T141334Z">
        <seg>示例6.11. 以构建脚本的属性的方式访问任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 6.12. Adding extra properties to a task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T141956Z" creationid="95" creationdate="20170727T141956Z">
        <seg>示例6.12. 为任务添加额外的属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 6.13. Using AntBuilder to execute ant.loadfile target</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170728T153752Z" creationid="95" creationdate="20170728T153752Z">
        <seg>示例6.13. 使用AntBuilder 执行 ant.loadfile 目标</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 6.14. Using methods to organize your build logic</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T023454Z" creationid="95" creationdate="20170729T023454Z">
        <seg>示例6.14. 在构建逻辑中使用方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 6.15. Defining a default tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T023907Z" creationid="95" creationdate="20170729T023907Z">
        <seg>示例6.15. 定义一个默认任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 6.16. Different outcomes of build depending on chosen tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T025301Z" creationid="95" creationdate="20170729T025301Z">
        <seg>示例6.16. 根据所选择的任务输出不同的构建结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 6.2. Execution of a build script</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T145831Z" creationid="95" creationdate="20170724T145831Z">
        <seg>示例 6.2. 执行构建脚本</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 6.3. A task definition shortcut</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155313Z" creationid="95" creationdate="20170726T155313Z">
        <seg>示例6.3. 任务定义的快捷方式</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 6.4. Using Groovy in Gradle's tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155816Z" creationid="95" creationdate="20170726T155709Z">
        <seg>示例6.4. 在Gradle任务中使用Groovy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 6.5. Using Groovy in Gradle's tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155854Z" creationid="95" creationdate="20170726T155854Z">
        <seg>示例6.5. 在Gradle任务中使用Groovy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 6.6. Declaration of dependencies between tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T160115Z" creationid="95" creationdate="20170726T160115Z">
        <seg>示例6.6. 声明任务之间的依赖关系</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 6.7. Lazy dependsOn - the other task does not exist (yet)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T160342Z" creationid="95" creationdate="20170726T160335Z">
        <seg>示例6.7. 延迟依赖——另一个任务（暂）不存在</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 6.8. Dynamic creation of a task</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T132722Z" creationid="95" creationdate="20170727T132722Z">
        <seg>示例6.8. 任务的动态创建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 6.9. Accessing a task via API - adding a dependency</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T133005Z" creationid="95" creationdate="20170727T133005Z">
        <seg>示例6.9. 通过API访问任务——添加依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 7.1. Using the Java plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T012449Z" creationid="95" creationdate="20170730T012449Z">
        <seg>示例 7.1. 使用 Java 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 7.10. Multi-project build - hierarchical layout</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T154450Z" creationid="95" creationdate="20170731T154425Z">
        <seg>示例7.10. 多项目构建——层次布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 7.11. Multi-project build - settings.gradle file</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T123537Z" creationid="95" creationdate="20170803T123537Z">
        <seg>示例7.11. 多项目构建——settings.gradle文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 7.12. Multi-project build - common configuration</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T124421Z" creationid="95" creationdate="20170803T124421Z">
        <seg>示例7.12. 多项目构建——公共配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 7.13. Multi-project build - dependencies between projects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T125326Z" creationid="95" creationdate="20170803T125259Z">
        <seg>示例7.13. 多项目构建——项目间的依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 7.14. Multi-project build - distribution file</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T125715Z" creationid="95" creationdate="20170803T125715Z">
        <seg>示例7.14. 多项目构建——分发文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 7.2. Building a Java project</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T014257Z" creationid="95" creationdate="20170730T013858Z">
        <seg>示例7.2. 构建Java项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 7.3. Adding Maven repository</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T124330Z" creationid="95" creationdate="20170730T124330Z">
        <seg>示例 7.3. 添加 Maven 仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 7.4. Adding dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T124731Z" creationid="95" creationdate="20170730T124731Z">
        <seg>示例 7.4. 添加 依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 7.5. Customization of MANIFEST.MF</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T132601Z" creationid="95" creationdate="20170730T132601Z">
        <seg>示例 7.5. 自定义的MANIFEST.MF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 7.6. Adding a test system property</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T150114Z" creationid="95" creationdate="20170731T150114Z">
        <seg>示例 7.6. 添加一个系统属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 7.7. Publishing the JAR file</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T153704Z" creationid="95" creationdate="20170731T153704Z">
        <seg>示例7.7. 发布JAR文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 7.8. Eclipse plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T153830Z" creationid="95" creationdate="20170731T153830Z">
        <seg>示例 7.8. Eclipse插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 7.9. Java example - complete build file</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T154050Z" creationid="95" creationdate="20170731T154050Z">
        <seg>示例7.9. Java示例——完整的构建文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 8.1. Declaring dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170908T013226Z" creationid="haohang" creationdate="20170908T013226Z">
        <seg>示例 8.1. 依赖声明</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 8.2. Definition of an external dependency</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T043317Z" creationid="huanghaohang" creationdate="20170908T043317Z">
        <seg>示例8.2. 外部依赖的定义</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 8.3. Shortcut definition of an external dependency</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T043905Z" creationid="huanghaohang" creationdate="20170908T043905Z">
        <seg>示例8.3. 外部依赖的定义</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 8.4. Usage of Maven central repository</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T044750Z" creationid="huanghaohang" creationdate="20170908T044750Z">
        <seg>示例8.4. 使用Maven中央仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 8.5. Usage of a remote Maven repository</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T044837Z" creationid="huanghaohang" creationdate="20170908T044837Z">
        <seg>示例8.5. 使用远程的Maven仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 8.6. Usage of a remote Ivy directory</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T044924Z" creationid="huanghaohang" creationdate="20170908T044924Z">
        <seg>示例8.6. 使用远程Ivy目录</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 8.7. Usage of a local Ivy directory</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T045133Z" creationid="huanghaohang" creationdate="20170908T045133Z">
        <seg>示例8.7. 使用本地Ivy目录</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 8.8. Publishing to an Ivy repository</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T050445Z" creationid="huanghaohang" creationdate="20170908T050445Z">
        <seg>示例8.8. 发布到Ivy仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 8.9. Publishing to a Maven repository</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T051000Z" creationid="huanghaohang" creationdate="20170908T051000Z">
        <seg>示例8.9. 发布到Maven仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 9.1. Groovy plugin</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T001650Z" creationid="huanghaohang" creationdate="20170909T001650Z">
        <seg>示例9.1. Groovy插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 9.2. Dependency on Groovy 2.2.0</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T002719Z" creationid="huanghaohang" creationdate="20170909T002719Z">
        <seg>示例 9.2. 依赖 Groovy 2.2.0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Example 9.3. Groovy example - complete build file</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T002842Z" creationid="huanghaohang" creationdate="20170909T002842Z">
        <seg>示例9.3. Groovy示例 - 完整的构建文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Extensive samples, including the examples referenced in the user guide, along with some complete and more complex builds you can use the starting point for your own build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T114843Z" creationid="95" creationdate="20170723T114843Z">
        <seg>大量的样例，包括用户指南里的例子，以及一些完整的和更加复杂的构建。您可以把它们作为您自己的构建的基础。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Extra properties aren't limited to tasks. You can read more about them in &lt;a0&gt;Section 13.4.2, “Extra properties”&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T142130Z" creationid="95" creationdate="20170727T142016Z">
        <seg>额外属性并不局限于任务，你可以在 &lt;a0&gt;第13.4.2节，“额外属性”&lt;/a0&gt;中了解更多关于它们的内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Features</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072448Z" creationid="haohang" creationdate="20170720T072448Z">
        <seg>特性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Figure 11.1. Task dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T031036Z" creationid="huanghaohang" creationdate="20170909T031036Z">
        <seg>图11.1. 任务依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For Java teams which share also Python or Ruby knowledge or are happy to learn it, the above arguments don't apply. The Gradle design is well-suited for creating another build script engine in JRuby or Jython. It just doesn't have the highest priority for us at the moment. We happily support any community effort to create additional build script engines.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T072131Z" creationid="95" creationdate="20170723T071728Z">
        <seg>对于分享Python或Ruby知识并且乐于学习它们的Java团队来说，上面的论据并不适用。Gradle设计非常适全于在JRuby或Jython中创建另一种构建脚本引擎。目前我们并没有最高的优先级，我们很高兴任何社区来努力创建其他的构建脚本引擎。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For all the details of dependency resolution, see &lt;a0&gt;Chapter 50, &lt;i1&gt;Dependency Management&lt;/i1&gt;&lt;/a0&gt;, and for artifact publication see &lt;a2&gt;Chapter 51, &lt;i3&gt;Publishing artifacts&lt;/i3&gt;&lt;/a2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T051234Z" creationid="huanghaohang" creationdate="20170908T051234Z">
        <seg>有关依赖解析的所有细节，请参阅《&lt;a0&gt;第五十章，&lt;i1&gt;依赖管理&lt;/i1&gt;&lt;/a0&gt;》；而关于构件发布则请参阅《&lt;a2&gt;第五十一章， &lt;i3&gt;发布构件&lt;/i3&gt;&lt;/a2&gt;》。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For most multi-project builds, there is some configuration which is common to all projects. In our sample, we will define this common configuration in the root project, using a technique called &lt;e0&gt;configuration injection&lt;/e0&gt;. Here, the root project is like a container and the &lt;c1&gt;subprojects&lt;/c1&gt; method iterates over the elements of this container - the projects in this instance - and injects the specified configuration. This way we can easily define the manifest content for all archives, and some common dependencies:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T124401Z" creationid="95" creationdate="20170803T123813Z">
        <seg>对于大多数的多项目构建，会有一些共同的配置。在我们的例子中，将会在根项目中使用一种叫做&lt;e0&gt;配置注入&lt;/e0&gt;的技术来定义这些公共配置。在这里，这个根项目就像一个容器，&lt;c1&gt;subprojects&lt;/c1&gt; 的方法会遍历这个容器的一些元素——这个实例中的所有子项目，并且注入指定的配置。这样我们就可以轻松地定义所有存档的清单内容，以及一些公共的依赖：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For now, we will look at defining some simple tasks in a build with one project. Later chapters will look at working with multiple projects and more about working with projects and tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T143910Z" creationid="95" creationdate="20170724T143910Z">
        <seg>现在，我们来看一下如何在一个项目的构建中定义一些简单的任务。后续的章节将更多的关注多项目的构建，以及多项目和多任务的内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For running Gradle, add &lt;c0&gt;&lt;e1&gt;&lt;c2&gt;GRADLE_HOME&lt;/c2&gt;&lt;/e1&gt;/bin&lt;/c0&gt; to your &lt;c3&gt;PATH&lt;/c3&gt; environment variable. Usually, this is sufficient to run Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T115222Z" creationid="95" creationdate="20170723T115222Z">
        <seg>要运行Gradle，您需要将 &lt;c0&gt;&lt;e1&gt;&lt;c2&gt;GRADLE_HOME&lt;/c2&gt;&lt;/e1&gt;/bin&lt;/c0&gt; 添加到您的 &lt;c3&gt;PATH&lt;/c3&gt;环境变量中。通常添加了之后就可以运行Gradle了。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Free and open source</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T065551Z" creationid="95" creationdate="20170723T065551Z">
        <seg>自由开源</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>From being a pleasure to be used embedded to its many hooks over the whole lifecycle of build execution, Gradle allows you to monitor and customize its configuration and execution behavior to its very core.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170722T041546Z" creationid="95" creationdate="20170722T041546Z">
        <seg>来自于惯在整个构建执行的生命周期中习嵌入钩子的乐趣，Gradle允许你监视以及对它的配置和它核心的执行行为进行定制。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Full support for your existing Maven or Ivy repository infrastructure.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T135843Z" creationid="95" creationdate="20170721T135843Z">
        <seg>完全支持已有的Maven或Ivy仓库结构。 </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generating the POM file without publishing</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T132923Z" creationid="95" creationdate="20170721T132923Z">
        <seg>-不发布的情况下生成POM文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Getting Started</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170801T014546Z" creationid="haohang" creationdate="20170801T014546Z">
        <seg>入门</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle User Guide</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072244Z" creationid="haohang" creationdate="20170720T072244Z">
        <seg>Gradle 用户指南</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle allows you to define one or more default tasks for your build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T023856Z" creationid="95" creationdate="20170729T023856Z">
        <seg>Gradle允许您在构建中定义一个或多个的默认任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle can adapt to any structure you have. Therefore you can always develop your Gradle build in the same branch where your production build lives and both can evolve in parallel. We usually recommend to write tests that make sure that the produced artifacts are similar. That way migration is as less disruptive and as reliable as possible. This is following the best-practices for refactoring by applying baby steps.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T063535Z" creationid="95" creationdate="20170723T060933Z">
        <seg>Gradle可以适应您现在任何结构的项目。因此您可以在生产构建所在的分支上随时开发你的Gradle构建，并且它们可以并行演进。我们通常建议编写测试用例，以确保生成的工件是类似的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle expects to find your production source code under &lt;c0&gt;src/main/java&lt;/c0&gt; and your test source code under &lt;c1&gt;src/test/java&lt;/c1&gt;. In addition, any files under &lt;c2&gt;src/main/resources&lt;/c2&gt; will be included in the JAR file as resources, and any files under &lt;c3&gt;src/test/resources&lt;/c3&gt; will be included in the classpath used to run the tests. All output files are created under the &lt;c4&gt;build&lt;/c4&gt; directory, with the JAR file ending up in the &lt;c5&gt;build/libs&lt;/c5&gt; directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T013543Z" creationid="95" creationdate="20170730T013013Z">
        <seg>Gradle会在 &lt;c0&gt;src/main/java&lt;/c0&gt; and your test source code under和 &lt;c1&gt;src/test/java&lt;/c1&gt;能分别找你的生产 源码和测试源码。并且，在 &lt;c2&gt;src/main/resources&lt;/c2&gt;的所有文件都会作为资源被打包进JAR包，任何在 &lt;c3&gt;src/test/resources&lt;/c3&gt;下的资源文件都会被包含到类路径中用于执行测试。所有输出的文件都会在 &lt;c4&gt;build&lt;/c4&gt; 目录里创建，而JAR包会被输出在&lt;c5&gt;build/libs&lt;/c5&gt; 目录里。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle fully supports your existing Maven or Ivy repository infrastructure for publishing and retrieving dependencies. Gradle also provides a converter for turning a Maven &lt;c0&gt;pom.xml&lt;/c0&gt; into a Gradle script. Runtime imports of Maven projects will come soon.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T060851Z" creationid="95" creationdate="20170723T060851Z">
        <seg>对于您用于发布和检索依赖的现有的Maven或Ivy仓库基础架构，Gradle完全支持。并且Gradle也提供了一个转换器，用于将一个Maven的&lt;c0&gt;pom.xml&lt;/c0&gt;转换为一个Gradle脚本。Maven项目的运行时导入即将推出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle is an open source project, and is licensed under the &lt;a0&gt;ASL&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T065609Z" creationid="95" creationdate="20170723T065609Z">
        <seg>Gradle是一个开源项目，并且使用&lt;a0&gt;ASL&lt;/a0&gt;开源协议。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle is the first build integration tool</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T034327Z" creationid="95" creationdate="20170723T034327Z">
        <seg>Gradle是第一个构建集成工具</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle provides partial builds. If you build a single subproject Gradle takes care of building all the subprojects that subproject depends on. You can also choose to rebuild the subprojects that depend on a particular subproject. Together with incremental builds this is a big time saver for larger builds.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T034026Z" creationid="95" creationdate="20170723T034026Z">
        <seg>Gradle提供了部分构建。如果你是在构建一个子项目，Gradle将负责构建这个子项目所依赖的所有子项目。你也可以选择重新构建依赖于特定子项目的所有子项目。这和增量构建一起为大型的构建省下了不少的时间。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle provides several built-in tasks which show particular details of your build. This can be useful for understanding the structure and dependencies of your build, and for debugging problems.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T010749Z" creationid="huanghaohang" creationdate="20170910T010749Z">
        <seg>Gradle提供了一些内置任务能展示构建的相关特定信息。这对于了解构建的结构和依赖以及调试问题可能很有用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle provides:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T133756Z" creationid="95" creationdate="20170721T133756Z">
        <seg>它提供了：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle requires a Java JDK or JRE to be installed. Gradle requires a Java version 6 or higher. Gradle ships with its own Groovy library, therefore no Groovy needs to be installed. Any existing Groovy installation is ignored by Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T114013Z" creationid="95" creationdate="20170723T114013Z">
        <seg>Gradle需要安装Java6或更高以上版本的JDK或JRE。Gradle自带了Groovy库，因此不需要安装Groovy。已经安装的Groovy会被Gradle所忽略。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle scales</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170722T041724Z" creationid="95" creationdate="20170722T041724Z">
        <seg>Gradle 的效率提升</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle scales in how you can organize your build logic. The first level of organizing your build logic for the example above, is extracting a method.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T023442Z" creationid="95" creationdate="20170729T023442Z">
        <seg> Gradle的内向扩展取决于您如何组织您的构建逻辑。在上面的例子中，组织您的构建逻辑的第一个层次是抽取出方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle scales very well. It significantly increases your productivity, from simple single project builds up to huge enterprise multi-project builds. This is true for structuring the build. With the state-of-art incremental build function, this is also true for tackling the performance pain many large enterprise builds suffer from.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170722T042048Z" creationid="95" creationdate="20170722T042048Z">
        <seg>Gradle能够带大显著的效率提升。从简单的单项目构建，到大型的企业多项目构建，它都能大大地提高您的生产力。这是结构化构建所带来的。凭借最先进的增量构建功能，对于解决许多大型企业构建所遭遇的性能难题也是如此。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle uses whichever JDK it finds in your path (to check, use &lt;s0&gt;&lt;c1&gt;java -version&lt;/c1&gt;&lt;/s0&gt;). Alternatively, you can set the &lt;c2&gt;JAVA_HOME&lt;/c2&gt; environment variable to point to the install directory of the desired JDK.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T114331Z" creationid="95" creationdate="20170723T114023Z">
        <seg>Gradle会使用在您的path环境变量中找到的JDK（可以使用&lt;s0&gt;&lt;c1&gt;java -version&lt;/c1&gt;&lt;/s0&gt;命令来检查自己的JDK版本）。 另外，您也可以设置 &lt;c2&gt;JAVA_HOME&lt;/c2&gt; 环境变量来指向你想要的JDK的安装目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle's build scripts are written in Groovy, not XML. But unlike other approaches this is not for simply exposing the raw scripting power of a dynamic language. That would just lead to a very difficult to maintain build. The whole design of Gradle is oriented towards being used as a language, not as a rigid framework. And Groovy is our glue that allows you to tell your individual story with the abstractions Gradle (or you) provide. Gradle provides some standard stories but they are not privileged in any form. This is for us a major distinguishing features compared to other declarative build systems. Our Groovy support is also not just some simple coating sugar layer. The whole Gradle API is fully groovynized. Only by that using Groovy is the fun and productivity gain it can be.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T065134Z" creationid="95" creationdate="20170723T063603Z">
        <seg>Gradle的构建脚本是使用Groovy来编写的，而不是使用XML。但是与其他方法不同，这不仅仅是暴露了一门动态语言的原始脚本的能力，那样只会导致构建难以维护。Gradle的整个设计是面向一门语言，而不是一个僵化的框架。并且Groovy作为胶水语言，可以使您通过使用Gradle（或您）所提供的抽象概念，来讲述您的个别故事。Gradle提供了一些标准的故事，但它们没有任何特权。与其他的声明式构建系统相比，这对于我们来说是一个主要的区别。我们的Groovy支持也不只是简单的糖层，整个的Gradle API都是完全的Groovy化的。只有使用Groovy才能获得乐趣和生产力。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle's build scripts expose to you the full power of Groovy. As an appetizer, have a look at this:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155756Z" creationid="95" creationdate="20170726T155707Z">
        <seg>Gradle的构建脚本向您开放了Groovy的全部功能。作为开胃菜，可以看看下这个例子：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Gradle's support for multi-project build is outstanding. Project dependencies are first class citizens. We allow you to model the project relationships in a multi-project build as they really are for your problem domain. Gradle follows your layout not vice versa.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T033707Z" creationid="95" creationdate="20170722T042113Z">
        <seg>Gradle对多项目构建的支持非常出色。项目依赖是第一公民。我们允许您在一个多项目构建中为项目关系进行建模，因为它们真的适用于您的问题域。Gradle遵循您的布局，而非相反。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Groovy</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T063538Z" creationid="95" creationdate="20170723T063538Z">
        <seg>Groovy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Groovy web applications</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T005200Z" creationid="huanghaohang" creationdate="20170909T005200Z">
        <seg>Groovy web 应用程序</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is a list of some of Gradle's features.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170722T015227Z" creationid="95" creationdate="20170722T015227Z">
        <seg>以下是Gradle的一些特性列表。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is our complete build file:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T002815Z" creationid="huanghaohang" creationdate="20170909T002815Z">
        <seg>这里是我们的完整构建文件：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here we have three projects. Project &lt;c0&gt;api&lt;/c0&gt; produces a JAR file which is shipped to the client to provide them a Java client for your XML webservice. Project &lt;c1&gt;webservice&lt;/c1&gt; is a webapp which returns XML. Project &lt;c2&gt;shared&lt;/c2&gt; contains code used both by &lt;c3&gt;api&lt;/c3&gt; and &lt;c4&gt;webservice&lt;/c4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T123142Z" creationid="95" creationdate="20170731T154521Z">
        <seg>在这里我们有三个项目。项目&lt;c0&gt;api&lt;/c0&gt;会生成一个JAR文件给一个客户端，为您的XML webservice提供一个Java客户端，项目 &lt;c1&gt;webservice&lt;/c1&gt; 是一个返回XML的webapp。项目&lt;c2&gt;shared&lt;/c2&gt; 包含了在 &lt;c3&gt;api&lt;/c3&gt; 和 &lt;c4&gt;webservice&lt;/c4&gt;中都会用到的代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here's the complete build file for our sample:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T154035Z" creationid="95" creationdate="20170731T154035Z">
        <seg>以下是我们的例子中的完全的构建文件：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>How does Gradle find the files for external dependencies? Gradle looks for them in a &lt;e0&gt;repository&lt;/e0&gt;. A repository is really just a collection of files, organized by &lt;c1&gt;group&lt;/c1&gt;, &lt;c2&gt;name&lt;/c2&gt; and &lt;c3&gt;version&lt;/c3&gt;. Gradle understands several different repository formats, such as Maven and Ivy, and several different ways of accessing the repository, such as using the local file system or HTTP.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T044633Z" creationid="huanghaohang" creationdate="20170908T044250Z">
        <seg>Gradle是如何找到外部依赖的文件的呢？它通过在一个&lt;e0&gt;仓库&lt;/e0&gt;去查找它们。仓库只是文件的一个集合，由&lt;c1&gt;group&lt;/c1&gt;， &lt;c2&gt;name&lt;/c2&gt;和&lt;c3&gt;version&lt;/c3&gt;来组织。 Gradle支持几种不同的仓库格式，例如Maven和Ivy；以及访问仓库的几种不同方法，例如使用本地文件系统或HTTP。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If a task fails, any subsequent tasks that were depending on it will not be executed, as it is not safe to do so. For example, tests will not run if there is a compilation failure in the code under test; because the test task will depend on the compilation task (either directly or indirectly).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T075102Z" creationid="huanghaohang" creationdate="20170909T075102Z">
        <seg>如果任务失败了，则依赖于它的所有后续任务将不会被执行，因为那样做是不安全的。例如，如果在测试代码中存在编译失败，测试将不会运行;因为测试任务会（直接或间接地）依赖于编译任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If something's not working for you, posting a question or problem report to the forums is the fastest way to get help. It's also the place to post improvement suggestions or new ideas. The development team frequently posts news items and announces releases via the forum, making it a great way to stay up to date with the latest Gradle developments.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T122322Z" creationid="95" creationdate="20170723T122322Z">
        <seg>如果出了问题，到论坛上提问或上报问题是获取帮助的最佳方式。有什么改进的建议或是新想法，也可以到论坛上发帖。开发团队会经常地通过论坛发布一些新闻和发表更新，使其成为与最新的Gradle开发保持更新的最佳方式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you are encountering problems, one of the first things to try is using the very latest release of Gradle. New versions of Gradle are released frequently with bug fixes and new features. The problem you are having may have been fixed in a new release.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T121207Z" creationid="95" creationdate="20170723T121006Z">
        <seg>当您遇到问题时，首先确认一下是否使用的最新版本的Gradle。新版本的Gradle总是会更加完善并且带有新特性。有可能遇到的问题在一个新的版本中已经被修复。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you are interested in the DSL elements mentioned here, have a look at &lt;a0&gt;&lt;c1&gt;Project.configurations{}&lt;/c1&gt;&lt;/a0&gt;, &lt;a2&gt;&lt;c3&gt;Project.repositories{}&lt;/c3&gt;&lt;/a2&gt; and &lt;a4&gt;&lt;c5&gt;Project.dependencies{}&lt;/c5&gt;&lt;/a4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T051447Z" creationid="huanghaohang" creationdate="20170908T051314Z">
        <seg>如果对这里提到的DSL元素感兴趣，请查看&lt;a0&gt;&lt;c1&gt;Project.configurations{}&lt;/c1&gt;&lt;/a0&gt;，&lt;a2&gt;&lt;c3&gt;Project.repositories{}&lt;/c3&gt;&lt;/a2&gt;和&lt;a4&gt;&lt;c5&gt;Project.dependencies{}&lt;/c5&gt;&lt;/a4&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you are using the Gradle Daemon, try temporarily disabling the daemon (you can pass the command line switch &lt;c0&gt;--no-daemon&lt;/c0&gt;). More information about troubleshooting daemon is located in &lt;a1&gt;Chapter 19, &lt;i2&gt;The Gradle Daemon&lt;/i2&gt;&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T121452Z" creationid="95" creationdate="20170723T121210Z">
        <seg>如果您正在使用Gradle守护进程，尝试禁掉守护进程（通过向命令行中传入&lt;c0&gt;--no-daemon&lt;/c0&gt;参数）。更多的内容可参阅 《&lt;a1&gt;第十九章， &lt;i2&gt;Gradle 守护进程&lt;/i2&gt;&lt;/a1&gt;》。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you think this looks similar to Ant's targets, well, you are right. Gradle tasks are the equivalent to Ant targets. But as you will see, they are much more powerful. We have used a different terminology than Ant as we think the word &lt;s0&gt;&lt;e1&gt;task&lt;/e1&gt;&lt;/s0&gt; is more expressive than the word &lt;s2&gt;&lt;e3&gt;target&lt;/e3&gt;&lt;/s2&gt;. Unfortunately this introduces a terminology clash with Ant, as Ant calls its commands, such as &lt;c4&gt;javac&lt;/c4&gt; or &lt;c5&gt;copy&lt;/c5&gt;, tasks. So when we talk about tasks, we &lt;s6&gt;&lt;e7&gt;always&lt;/e7&gt;&lt;/s6&gt; mean Gradle tasks, which are the equivalent to Ant's targets. If we talk about Ant tasks (Ant commands), we explicitly say &lt;s8&gt;&lt;e9&gt;ant task&lt;/e9&gt;&lt;/s8&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T151624Z" creationid="95" creationdate="20170724T151624Z">
        <seg>如果你认为它看上去和Ant的目标很像，那就对了。Gradle的任务相当于Ant的目标。但是，正如你所见，它们更加强大。我们使用与Ant不同的术语，是因为我们认为&lt;s0&gt;&lt;e1&gt;任务&lt;/e1&gt;&lt;/s0&gt;这个词比&lt;s2&gt;&lt;e3&gt;目标&lt;/e3&gt;&lt;/s2&gt;的含义更丰富。不过不幸的是，这也导致了与Ant的术语冲突。Ant会调用它自己的一些命令，比如像&lt;c4&gt;javac&lt;/c4&gt; 或是 &lt;c5&gt;copy&lt;/c5&gt;任务。因为，当我们讨论任务时，&lt;s6&gt;&lt;e7&gt;通常&lt;/e7&gt;&lt;/s6&gt;指的是Gradle的任务，相当于Ant的目标。当我们讨论Ant 的任务时，我们会明确地说是 &lt;s8&gt;&lt;e9&gt;ant 任务&lt;/e9&gt;&lt;/s8&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In &lt;a0&gt;Chapter 2, &lt;i1&gt;Overview&lt;/i1&gt;&lt;/a0&gt; you will find a detailed overview of Gradle. Otherwise, the &lt;a2&gt;tutorials&lt;/a2&gt; are waiting, have fun :)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T142020Z" creationid="95" creationdate="20170721T142020Z">
        <seg>在 《&lt;a0&gt;第二章，&lt;i1&gt;概述&lt;/i1&gt;&lt;/a0&gt;》，你将会看到有关Gradle的详细介绍。另一方面， &lt;a2&gt;教程&lt;/a2&gt; 在等你，开始吧。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In Gradle dependencies are grouped into &lt;e0&gt;configurations&lt;/e0&gt;. A configuration is simply a named set of dependencies. We will refer to them as &lt;e1&gt;dependency configurations&lt;/e1&gt;. You can use them to declare the external dependencies of your project. As we will see later, they are also used to declare the publications of your project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T032324Z" creationid="huanghaohang" creationdate="20170908T032324Z">
        <seg>在Gradle中依赖会被分为几组&lt;e0&gt;配置&lt;/e0&gt;。配置只是一组依赖的命名，我们会把它们称为&lt;e1&gt;依赖配置&lt;/e1&gt;。你可以使用它们来声明项目的外部依赖。我们稍后会看到，它们也被用来声明你的项目的发布内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In a command-line shell, enter into the containing directory and execute the build script by running &lt;s0&gt;&lt;c1&gt;gradle -q hello&lt;/c1&gt;&lt;/s0&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T145113Z" creationid="95" creationdate="20170724T144952Z">
        <seg>然后在命令行shell里，进入到当前目录并运行&lt;s0&gt;&lt;c1&gt;gradle -q hello&lt;/c1&gt;&lt;/s0&gt;来执行这个构建脚本：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In addition to the built-in tasks shown below, you can also use the &lt;a0&gt;project report plugin&lt;/a0&gt; to add tasks to your project which will generate these reports.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T010826Z" creationid="huanghaohang" creationdate="20170910T010826Z">
        <seg>除了下面所示的内置任务之外，还可以使用&lt;a0&gt;项目报告插件&lt;/a0&gt;将一些任务添加到项目中，以生成这些报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the following example, execution of the &lt;c0&gt;distribution&lt;/c0&gt; and &lt;c1&gt;release&lt;/c1&gt; tasks results in different value of the &lt;c2&gt;version&lt;/c2&gt; variable.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T025155Z" creationid="95" creationdate="20170729T025155Z">
        <seg>在下面的例子中，&lt;c0&gt;distribution&lt;/c0&gt;和&lt;c1&gt;release&lt;/c1&gt; 任务的执行会导致&lt;c2&gt;version&lt;/c2&gt; 变量有不同的结果。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this chapter, we have had a first look at tasks. But this is not the end of the story for tasks. If you want to jump into more of the details, have a look at &lt;a0&gt;Chapter 15, &lt;i1&gt;More about Tasks&lt;/i1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T030800Z" creationid="95" creationdate="20170729T030627Z">
        <seg>在本章中，我们已经对任务有了初步的了解。但是关于任务的内容还不仅仅是这些，如果你想了解更多的细节，请参阅 &lt;a0&gt;第十五章，&lt;i1&gt;任务进阶&lt;/i1&gt;&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this chapter, you have seen how to do some of the things you commonly need to build a Java based project. This chapter is not exhaustive, and there are many other things you can do with Java projects in Gradle. You can find out more about the Java plugin in &lt;a0&gt;Chapter 23, &lt;i1&gt;The Java Plugin&lt;/i1&gt;&lt;/a0&gt;, and you can find more sample Java projects in the &lt;c2&gt;samples/java&lt;/c2&gt; directory in the Gradle distribution.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T130337Z" creationid="95" creationdate="20170803T130337Z">
        <seg>在本章中，你已经学习了如何构建一个基于Java的项目。本章节只是简单介绍，Gradle对Java项目可以做的事情还有很多。你可以在《&lt;a0&gt;第二十三章，&lt;i1&gt;Java插件&lt;/i1&gt;&lt;/a0&gt;》中对Java插件进行进一步了解，更多的Java项目示例请在Gradle分发包中的&lt;c2&gt;samples/java&lt;/c2&gt;目录中查看。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this chapter, you have seen some of the things you can do with Gradle from the command-line. You can find out more about the &lt;s0&gt;&lt;s1&gt;gradle&lt;/s1&gt;&lt;/s0&gt; command in &lt;a2&gt;Appendix D, &lt;i3&gt;Gradle Command Line&lt;/i3&gt;&lt;/a2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T031935Z" creationid="huanghaohang" creationdate="20170910T031935Z">
        <seg>在本章中，你已经学到了许多可以从命令行做的事情。关于&lt;s0&gt;&lt;s1&gt;gradle这&lt;/s1&gt;&lt;/s0&gt;命令的更多信息，可以参考《&lt;a2&gt;附录D，&lt;i3&gt;Gradle命令行&lt;/i3&gt;&lt;/a2&gt;》。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Introduces the basic build script elements: &lt;e0&gt;projects&lt;/e0&gt; and &lt;e1&gt;tasks&lt;/e1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170801T015153Z" creationid="95" creationdate="20170723T072802Z">
        <seg>介绍了基本的构建脚本元素：&lt;e0&gt;项目&lt;/e0&gt; 和 &lt;e1&gt;任务&lt;/e1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Introduction</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072431Z" creationid="haohang" creationdate="20170720T072431Z">
        <seg>介绍</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>JVM options for running Gradle can be set via environment variables. You can use &lt;c0&gt;GRADLE_OPTS&lt;/c0&gt; or &lt;c1&gt;JAVA_OPTS&lt;/c1&gt;. Those variables can be used together. &lt;c2&gt;JAVA_OPTS&lt;/c2&gt; is by convention an environment variable shared by many Java applications. A typical use case would be to set the HTTP proxy in &lt;c3&gt;JAVA_OPTS&lt;/c3&gt; and the memory options in &lt;c4&gt;GRADLE_OPTS&lt;/c4&gt;. Those variables can also be set at the beginning of the &lt;s5&gt;&lt;s6&gt;gradle&lt;/s6&gt;&lt;/s5&gt; or &lt;s7&gt;&lt;s8&gt;gradlew&lt;/s8&gt;&lt;/s7&gt; script.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T120248Z" creationid="95" creationdate="20170723T115605Z">
        <seg>Gradle运行时的JVM参数可以通过&lt;c0&gt;GRADLE_OPTS&lt;/c0&gt; 或是 &lt;c1&gt;JAVA_OPTS&lt;/c1&gt;的环境变量来设置，这些环境变量也可以一起使用。习惯上， &lt;c2&gt;JAVA_OPTS&lt;/c2&gt; 是一个与其他Java应用程序共享的环境变量，一个典型的场景是在 &lt;c3&gt;JAVA_OPTS&lt;/c3&gt; 中设置HTTP代理，而在&lt;c4&gt;GRADLE_OPTS&lt;/c4&gt;中设置内存选项。这些环境变量也可以在 &lt;s5&gt;&lt;s6&gt;gradle&lt;/s6&gt;&lt;/s5&gt; 或 &lt;s7&gt;&lt;s8&gt;gradlew&lt;/s8&gt;&lt;/s7&gt; 脚本文件的开头设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Language for dependency based programming</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170722T015549Z" creationid="95" creationdate="20170722T015549Z">
        <seg>基于编程的依赖语言</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Later you will see that such methods can be shared among subprojects in multi-project builds. If your build logic becomes more complex, Gradle offers you other very convenient ways to organize it. We have devoted a whole chapter to this. See &lt;a0&gt;Chapter 59, &lt;i1&gt;Organizing Build Logic&lt;/i1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T023835Z" creationid="95" creationdate="20170729T023518Z">
        <seg>在后面您将会看到，像这样的方法可以在多项目构建的子项目之间共享。即使您的构建逻辑变得很复杂，Gradle也提供了一种非常方便的方式去组织它。关于这一点，我们会用一整个章节来讨论，详请参阅 &lt;a0&gt;第五十九章，&lt;i1&gt;组织构建逻辑&lt;/i1&gt;&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Legal Notice</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072307Z" creationid="haohang" creationdate="20170720T072307Z">
        <seg>法律公告</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's add some dependencies. Here, we will declare that our production classes have a compile-time dependency on commons collections, and that our test classes have a compile-time dependency on junit:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T130644Z" creationid="95" creationdate="20170730T124722Z">
        <seg>让我们来添加一些依赖。在这里，我们将声明我们的生产类对commons collection具有编译时依赖，我们的测试类对junit具有需要编译时依赖：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's look at a simple example. To use the Java plugin, add the following to your build file:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T012442Z" creationid="95" creationdate="20170730T012442Z">
        <seg>让我们来看一个简单的例子。要使用Java插件，只需在构建脚本中添加如下代码：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's look at an example. To use the Groovy plugin, add the following to your build file:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T001642Z" creationid="huanghaohang" creationdate="20170909T001642Z">
        <seg>我们来看一个例子。要使用Groovy插件，请将以下内容添加到构建文件中：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's look at some dependency declarations. Here's a basic build script:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170907T161035Z" creationid="95" creationdate="20170907T161035Z">
        <seg>我们来看一下一些依赖声明。下面是一个基本的构建脚本：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Many ways to manage your dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T034041Z" creationid="95" creationdate="20170723T034041Z">
        <seg>多种方式去管理依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Most Java projects are pretty similar as far as the basics go: you need to compile your Java source files, run some unit tests, and create a JAR file containing your classes. It would be nice if you didn't have to code all this up for every project. Luckily, you don't have to. Gradle solves this problem through the use of &lt;e0&gt;plugins&lt;/e0&gt;. A plugin is an extension to Gradle which configures your project in some way, typically by adding some pre-configured tasks which together do something useful. Gradle ships with a number of plugins, and you can easily write your own and share them with others. One such plugin is the &lt;e1&gt;Java plugin&lt;/e1&gt;. This plugin adds some tasks to your project which will compile and unit test your Java source code, and bundle it into a JAR file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T011617Z" creationid="95" creationdate="20170730T010800Z">
        <seg>大部分的Java项目的基本流程都是类似的：编译Java源文件，运行单元测试，创建一个Jar包。 如果可以不用为每个项目都去编写这些流程那就好了。在实际上，我们确实不用。Gradle通过 &lt;e0&gt;插件&lt;/e0&gt;来解决这一问题。插件就是Gradle的扩展，可以让你以某种方式来配置你的项目，通常通过添加一些预先配置的任务来共同做一些有用的事情。Gradle内置了许多插件，并且你也可以轻松地编写你自己的插件和分享自己的插件。&lt;e1&gt;Java plugin&lt;/e1&gt;是其中之一，这一插件向项目添加一些编译和测试Java源代码，并打包成JAR包的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Most of the examples in this user guide are run with the &lt;c0&gt;-q&lt;/c0&gt; command-line option. This suppresses Gradle's log messages, so that only the output of the tasks is shown. This keeps the example output in this user guide a little clearer. You don't need to use this option if you don't want. See &lt;a1&gt;Chapter 18, &lt;i2&gt;Logging&lt;/i2&gt;&lt;/a1&gt; for more details about the command-line options which affect Gradle's output.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T145756Z" creationid="95" creationdate="20170724T145756Z">
        <seg>本用户指南中的很多例子都用了 &lt;c0&gt;-q&lt;/c0&gt;参数运行，这个参数是用于抑制Gradle的日志消息，以便只显示任务的输出结果，这样会使得在本用户指南里的文档的输出更清晰一点。如果你不想要的话，你可以不加上这个参数。如果想了解更多影响Gradle的输出的命令参数，请参阅&lt;a1&gt;第十八章， &lt;i2&gt;日志&lt;/i2&gt;&lt;/a1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Most projects are not completely self-contained. They need files built by other projects in order to be compiled or tested and so on. For example, in order to use Hibernate in my project, I need to include some Hibernate jars in the classpath when I compile my source. To run my tests, I might also need to include some additional jars in the test classpath, such as a particular JDBC driver or the Ehcache jars.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170905T150016Z" creationid="95" creationdate="20170905T150016Z">
        <seg>大部分项目都不是完全独立的，它们需要其他项目所构建的一些文件来编译或测试等等。例如，如果我想在我的项目中使用Hibernate，我需要在编译代码时把一些Hibernate的jar文件包含到类路径中。如果要运行测试，可能还需要把一些其他的jar包包含到测试类路径中，比如特定的JDBC驱动或者是Ehcache jar文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Multi-project builds</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170722T042054Z" creationid="95" creationdate="20170722T042054Z">
        <seg>多项目构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Notice that our sample applies the Java plugin to each subproject. This means the tasks and configuration properties we have seen in the previous section are available in each subproject. So, you can compile, test, and JAR all the projects by running &lt;s0&gt;&lt;c1&gt;gradle build&lt;/c1&gt;&lt;/s0&gt; from the root project directory.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T124825Z" creationid="95" creationdate="20170803T124431Z">
        <seg>注意，我们的例子对每一个子项目都应用了Java插件。这意味着，在前一节我们所看到的任务和配置，在每一个子项目中都是可用的。因此，你可以通过在根项目目录中运行&lt;s0&gt;&lt;c1&gt;gradle build&lt;/c1&gt;&lt;/s0&gt;，对所有的项目编译，测试并打成JAR包。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now execute &lt;s0&gt;&lt;c1&gt;gradle eclipse&lt;/c1&gt;&lt;/s0&gt; command to generate Eclipse project files. More on Eclipse task can be found in &lt;a2&gt;Chapter 38, &lt;i3&gt;The Eclipse Plugin&lt;/i3&gt;&lt;/a2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T153936Z" creationid="95" creationdate="20170731T153936Z">
        <seg>现在执行&lt;s0&gt;&lt;c1&gt;gradle eclipse&lt;/c1&gt;&lt;/s0&gt; 命令将生成Eclipse的项目文件。有关Eclipse插件的更多信息请参阅《&lt;a2&gt;第三十八章，&lt;i3&gt;Eclipse插件&lt;/i3&gt;&lt;/a2&gt;》。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now let's look at a typical multi-project build. Below is the layout for the project:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T154408Z" creationid="95" creationdate="20170731T154408Z">
        <seg>现在让我们来看一个典型的多项目构建。以下是这个项目的布局：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now, when you run &lt;s0&gt;&lt;c1&gt;gradle uploadArchives&lt;/c1&gt;&lt;/s0&gt;, Gradle will build and upload your Jar. Gradle will also generate and upload an &lt;c2&gt;ivy.xml&lt;/c2&gt; as well.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T050749Z" creationid="huanghaohang" creationdate="20170908T050503Z">
        <seg>现在，当你运行&lt;s0&gt;&lt;c1&gt;gradle uploadArchives&lt;/c1&gt;&lt;/s0&gt;，Gradle将会构建你的Jar包，以及生成&lt;c2&gt;ivy.xml&lt;/c2&gt;并且一起上传。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Often, the dependencies of a project will themselves have dependencies. For example, Hibernate core requires several other libraries to be present on the classpath with it runs. So, when Gradle runs the tests for your project, it also needs to find these dependencies and make them available. We call these &lt;e0&gt;transitive dependencies&lt;/e0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170905T152538Z" creationid="95" creationdate="20170905T152151Z">
        <seg>通常一个项目的依赖还会有它们自己本身的依赖。例如Hibernate 核心类库在运行的时候就依赖于一些其他的类库。因此，当Gradle运行你的项目的测试用例时，它也需要找到这些依赖并使其可用。我们把这个过程称为 &lt;e0&gt;传递依赖&lt;/e0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Once tasks are created they can be accessed via an &lt;s0&gt;&lt;e1&gt;API&lt;/e1&gt;&lt;/s0&gt;. This is different to Ant. For example you can create additional dependencies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T132935Z" creationid="95" creationdate="20170727T132814Z">
        <seg>与Ant不同，一旦任务被创建了，就可以通过一个 &lt;s0&gt;&lt;e1&gt;API&lt;/e1&gt;&lt;/s0&gt;去访问它。例如，你可以去给它们添加其他的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Or a remote Ivy repository:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T044905Z" creationid="huanghaohang" creationdate="20170908T044905Z">
        <seg>或者是一个远程的Ivy仓库：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Or a remote Maven repository:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T044814Z" creationid="huanghaohang" creationdate="20170908T044814Z">
        <seg>或其他远程Maven仓库：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Or you can add behavior to an existing task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T133059Z" creationid="95" creationdate="20170727T133059Z">
        <seg>或者，你也可以对已经存在的任务添加行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Otherwise, continue on to &lt;a0&gt;Chapter 8, &lt;i1&gt;Dependency Management Basics&lt;/i1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T130404Z" creationid="95" creationdate="20170803T130404Z">
        <seg>另外，下一章是《&lt;a0&gt;第八章，&lt;i1&gt;依赖管理基础&lt;/i1&gt;&lt;/a0&gt;》。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Otherwise, continue on to some of the other &lt;a0&gt;tutorials&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T051624Z" creationid="huanghaohang" creationdate="20170908T051624Z">
        <seg>另外，继续其他&lt;a0&gt;教程&lt;/a0&gt;吧。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Otherwise, continue on to the tutorials in &lt;a0&gt;Chapter 7, &lt;i1&gt;Java Quickstart&lt;/i1&gt;&lt;/a0&gt; and &lt;a2&gt;Chapter 8, &lt;i3&gt;Dependency Management Basics&lt;/i3&gt;&lt;/a2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T030938Z" creationid="95" creationdate="20170729T030914Z">
        <seg>另外，本教程接下来是 《&lt;a0&gt;第七章， &lt;i1&gt;Java 快速入门&lt;/i1&gt;&lt;/a0&gt;》 以及《&lt;a2&gt;第八章， &lt;i3&gt;依赖管理基础&lt;/i3&gt;&lt;/a2&gt;》。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q -b subdir/myproject.gradle hello&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T114023Z" creationid="huanghaohang" creationdate="20170909T114023Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q -b subdir/myproject.gradle hello&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q -p subdir hello&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T114306Z" creationid="huanghaohang" creationdate="20170909T114306Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q -p subdir hello&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q api:dependencies --configuration testCompile&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T021702Z" creationid="huanghaohang" creationdate="20170910T021702Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q api:dependencies --configuration testCompile&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q api:properties&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T023445Z" creationid="huanghaohang" creationdate="20170910T023445Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q api:properties&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q count&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155907Z" creationid="95" creationdate="20170726T155907Z">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q count&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q dependencies api:dependencies webapp:dependencies&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T014135Z" creationid="huanghaohang" creationdate="20170910T014135Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q dependencies api:dependencies webapp:dependencies&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q distribution&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T025320Z" creationid="95" creationdate="20170729T025320Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q distribution&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q hello&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T145842Z" creationid="95" creationdate="20170724T145842Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q hello&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q help --task libs&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T012839Z" creationid="huanghaohang" creationdate="20170910T012839Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q help --task libs&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q intro&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T160129Z" creationid="95" creationdate="20170726T160129Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q intro&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q loadfile&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170728T153828Z" creationid="95" creationdate="20170728T153828Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q loadfile&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q printTaskProperties&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T142009Z" creationid="95" creationdate="20170727T142009Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q printTaskProperties&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q projects&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T011128Z" creationid="huanghaohang" creationdate="20170910T011128Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q projects&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q release&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T025327Z" creationid="95" creationdate="20170729T025327Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q release&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q task0&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T133037Z" creationid="95" creationdate="20170727T133037Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q task0&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q task1&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T132756Z" creationid="95" creationdate="20170727T132730Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q task1&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q taskX&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T160358Z" creationid="95" creationdate="20170726T160358Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q taskX&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q tasks --all&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T012324Z" creationid="huanghaohang" creationdate="20170910T012324Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q tasks --all&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q tasks&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T011710Z" creationid="huanghaohang" creationdate="20170910T011710Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q tasks&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q upper&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155839Z" creationid="95" creationdate="20170726T155839Z">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q upper&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q webapp:dependencyInsight --dependency groovy --configuration compile&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T022158Z" creationid="huanghaohang" creationdate="20170910T022158Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q webapp:dependencyInsight --dependency groovy --configuration compile&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle -q&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T023926Z" creationid="95" creationdate="20170729T023916Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle -q&lt;/c1&gt;&lt;/s0&gt;的构建结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle build&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T014304Z" creationid="95" creationdate="20170730T014304Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle build&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle cT&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T113259Z" creationid="huanghaohang" creationdate="20170909T113259Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle cT&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle di&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T112846Z" creationid="huanghaohang" creationdate="20170909T112846Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle di&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle dist -x test&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T032028Z" creationid="huanghaohang" creationdate="20170909T032028Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle dist -x test&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Output of &lt;s0&gt;&lt;c1&gt;gradle dist test&lt;/c1&gt;&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T031159Z" creationid="huanghaohang" creationdate="20170909T031159Z">
        <seg>&lt;s0&gt;&lt;c1&gt;gradle dist test&lt;/c1&gt;&lt;/s0&gt;的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Overview</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072443Z" creationid="haohang" creationdate="20170720T072443Z">
        <seg>概述</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Please notice that you can't use shortcut notation (see &lt;a0&gt;Section 6.8, “Shortcut notations”&lt;/a0&gt;) when referring to a task that is not yet defined.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T132502Z" creationid="95" creationdate="20170727T132113Z">
        <seg>请注意，当一个任务还没有被定义的时候，不能使用快捷符号（见 &lt;a0&gt;第6.8节，“快捷标记”&lt;/a0&gt;）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Running &lt;s0&gt;&lt;c1&gt;gradle build&lt;/c1&gt;&lt;/s0&gt; will compile, test and JAR your project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T002921Z" creationid="huanghaohang" creationdate="20170909T002921Z">
        <seg>运行 &lt;s0&gt;&lt;c1&gt;gradle build&lt;/c1&gt;&lt;/s0&gt;将会对你的项目进行编译，测试并打包成jar。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Running &lt;s0&gt;&lt;c1&gt;gradle dependencies&lt;/c1&gt;&lt;/s0&gt; gives you a list of the dependencies of the selected project, broken down by configuration. For each configuration, the direct and transitive dependencies of that configuration are shown in a tree. Below is an example of this report:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T014029Z" creationid="huanghaohang" creationdate="20170910T014029Z">
        <seg>运行&lt;s0&gt;&lt;c1&gt;gradle dependencies&lt;/c1&gt;&lt;/s0&gt;会为你列出所选项目的依赖关系，这些依赖会根据配置的任务细分。对于每个配置，它的直接和传递依赖会按树型结构展示出来。如下例：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Running &lt;s0&gt;&lt;c1&gt;gradle dependencyInsight&lt;/c1&gt;&lt;/s0&gt; gives you an insight into a particular dependency (or dependencies) that match specified input. Below is an example of this report:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T022130Z" creationid="huanghaohang" creationdate="20170910T022130Z">
        <seg>运行&lt;s0&gt;&lt;c1&gt;gradle dependencyInsight&lt;/c1&gt;&lt;/s0&gt;会让你深入了解与指定的输入内容相匹配的特定依赖（或多个依赖）。示例如下：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Running &lt;s0&gt;&lt;c1&gt;gradle help --task someTask&lt;/c1&gt;&lt;/s0&gt; gives you detailed information about a specific task or multiple tasks matching the given task name in your multiproject build. Below is an example of this detailed information:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T012802Z" creationid="huanghaohang" creationdate="20170910T012752Z">
        <seg>运行&lt;s0&gt;&lt;c1&gt;gradle help --task someTask&lt;/c1&gt;&lt;/s0&gt;可以向你提供有关指定任务或是在多项目构建中与所指定的任务名称相匹配的所有任务的详细信息。如下所示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Running &lt;s0&gt;&lt;c1&gt;gradle projects&lt;/c1&gt;&lt;/s0&gt; gives you a list of the sub-projects of the selected project, displayed in a hierarchy. Here is an example:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T011056Z" creationid="huanghaohang" creationdate="20170910T011056Z">
        <seg>运行&lt;s0&gt;&lt;c1&gt;gradle projects&lt;/c1&gt;&lt;/s0&gt;会为你按子项目的层次结构显示出项目列表，如下所示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Running &lt;s0&gt;&lt;c1&gt;gradle properties&lt;/c1&gt;&lt;/s0&gt; gives you a list of the properties of the selected project. This is a snippet from the output:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T023417Z" creationid="huanghaohang" creationdate="20170910T023258Z">
        <seg>运行&lt;s0&gt;&lt;c1&gt;gradle properties&lt;/c1&gt;&lt;/s0&gt;会向你列出所选项目的属性。如下例：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Running &lt;s0&gt;&lt;c1&gt;gradle tasks&lt;/c1&gt;&lt;/s0&gt; gives you a list of the main tasks of the selected project. This report shows the default tasks for the project, if any, and a description for each task. Below is an example of this report:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T011644Z" creationid="huanghaohang" creationdate="20170910T011644Z">
        <seg>运行&lt;s0&gt;&lt;c1&gt;gradle tasks&lt;/c1&gt;&lt;/s0&gt;会为你列出所选项目的主要任务。报告会显示项目的默认任务（如果有配置默认任务的话），以及每个任务的说明。以下是关于该报告的示例：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See &lt;a0&gt;Section 56.7.1, “Disabling the build of dependency projects”&lt;/a0&gt; for how to disable this functionality.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T125439Z" creationid="95" creationdate="20170803T125335Z">
        <seg>参阅 &lt;a0&gt;第56.7.1节,“禁用项目依赖”&lt;/a0&gt; 来了解如何停用该功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Shows how to start using Gradle's build-by-convention support for Java projects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T080750Z" creationid="95" creationdate="20170723T080750Z">
        <seg>说明了对于Java项目如何使用Gradle的基于约定的构建支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Shows how to start using Gradle's dependency management.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T080835Z" creationid="95" creationdate="20170723T080835Z">
        <seg>介绍了如何开始使用Gradle的依赖管理。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Since a dependency report can get large, it can be useful to restrict the report to a particular configuration. This is achieved with the optional &lt;s0&gt;&lt;c1&gt;--configuration&lt;/c1&gt;&lt;/s0&gt; parameter:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T021631Z" creationid="huanghaohang" creationdate="20170910T014140Z">
        <seg>由于一份依赖报告可能会很长，因此只显示指定配置的报告会很有用，它通过可选的&lt;s0&gt;&lt;c1&gt;--configuration&lt;/c1&gt;&lt;/s0&gt;参数来实现：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Some other useful tasks are:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T014332Z" creationid="95" creationdate="20170730T014332Z">
        <seg>其他一些有用的任务是：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sometimes you are interested in which tasks are executed in which order for a given set of tasks specified on the command line, but you don't want the tasks to be executed. You can use the &lt;c0&gt;-m&lt;/c0&gt; option for this. For example &lt;s1&gt;&lt;c2&gt;gradle -m clean compile&lt;/c2&gt;&lt;/s1&gt; shows you all tasks to be executed as part of the &lt;c3&gt;clean&lt;/c3&gt; and &lt;c4&gt;compile&lt;/c4&gt; tasks. This is complementary to the &lt;c5&gt;tasks&lt;/c5&gt; task, which shows you the tasks which are available for execution.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T031744Z" creationid="huanghaohang" creationdate="20170910T031431Z">
        <seg>有时候你可能想知道，以命令行指定的给定一组任务会以怎样的顺序去执行，但你不希望任务被真的执行，就可以使用&lt;c0&gt;-m&lt;/c0&gt;这个选项。例如&lt;s1&gt;&lt;c2&gt;gradle -m clean compile&lt;/c2&gt;&lt;/s1&gt;会显示所有要执行的任务，如&lt;c3&gt;clean&lt;/c3&gt;和&lt;c4&gt;compile&lt;/c4&gt;任务。这是对&lt;c5&gt;tasks&lt;/c5&gt;任务的补充，用于显示可以执行的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>String someString = &lt;s0&gt;'mY_nAmE'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155825Z" creationid="95" creationdate="20170726T155825Z">
        <seg>String someString = &lt;s0&gt;'mY_nAmE'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Structure your build</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170722T021853Z" creationid="95" creationdate="20170722T021853Z">
        <seg>构建结构化</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Support for transitive dependency management without the need for remote repositories or &lt;c0&gt;pom.xml&lt;/c0&gt; and &lt;c1&gt;ivy.xml&lt;/c1&gt; files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T140613Z" creationid="95" creationdate="20170721T135929Z">
        <seg>支持传递性依赖管理，而不需要远程仓库或是 &lt;c0&gt;pom.xml&lt;/c0&gt; 以及 &lt;c1&gt;ivy.xml&lt;/c1&gt; 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Switchable, build-by-convention frameworks a la Maven.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T134507Z" creationid="95" creationdate="20170721T134507Z">
        <seg>可切换的，按Maven的方式的基于约定的框架。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Switchable, build-by-convention frameworks a la Maven. But we never lock you in!</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T135705Z" creationid="95" creationdate="20170721T135705Z">
        <seg>按Maven的方式的基于约定的框架。但我们从不会去限定你，它是可切换的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>TODO: which url, configure port, uses source files in place and can edit your files and reload.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T010058Z" creationid="huanghaohang" creationdate="20170909T010058Z">
        <seg>TODO：使用哪个url，配置端口，在适当的位置使用源文件，并且可以编辑你的文件和重新加载。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table of Contents</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072346Z" creationid="haohang" creationdate="20170720T072346Z">
        <seg>目录</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Table 23.5. Java plugin - dependency configurations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T032346Z" creationid="huanghaohang" creationdate="20170908T032346Z">
        <seg>表23.5. Java插件 ​​- 依赖配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Task (org.gradle.api.Task)

Description</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T012846Z" creationid="huanghaohang" creationdate="20170910T012846Z">
        <seg>Task (org.gradle.api.Task)

Description</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Task dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T031058Z" creationid="huanghaohang" creationdate="20170909T031058Z">
        <seg>任务依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;s0&gt;&lt;c1&gt;--profile&lt;/c1&gt;&lt;/s0&gt; command line option will record some useful timing information while your build is running and write a report to the &lt;c2&gt;build/reports/profile&lt;/c2&gt; directory. The report will be named using the time when the build was run.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T030624Z" creationid="huanghaohang" creationdate="20170910T023504Z">
        <seg>使用&lt;s0&gt;&lt;c1&gt;--profile&lt;/c1&gt;&lt;/s0&gt;命令行选项会在运行构建时记录一些有用的计时信息，并以运行构建时的时间命名，把报告保存到&lt;c2&gt;build/reports/profile&lt;/c2&gt;目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The API documentation (Javadoc and Groovydoc).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T114544Z" creationid="95" creationdate="20170723T114544Z">
        <seg>API文档（包括Javadoc和Groovydoc）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The DSL reference guide.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T114530Z" creationid="95" creationdate="20170723T114530Z">
        <seg>DSL参考指南。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Gradle Wrapper allows you to execute Gradle builds on machines where Gradle is not installed. This is useful for example for some continuous integration servers. It is also useful for an open source project to keep the barrier low for building it. The wrapper is also very interesting for the enterprise. It is a zero administration approach for the client machines. It also enforces the usage of a particular Gradle version thus minimizing support issues.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T065536Z" creationid="95" creationdate="20170723T065536Z">
        <seg>Gradle 包装器允许您能够在没有安装Gradle的机器上执行Gradle构建。这对于一些持续集成服务器来说是很有用的。对于开源项目来说，它也是有用的，可以降低项目构建的障碍。包装器对于企业来说也同样友好。对于客户端机器来说，它是一种零管理方法。它还强制了指定的Gradle版本的使用，以最大限度地减少支持问题。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Gradle binaries.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T114505Z" creationid="95" creationdate="20170723T114505Z">
        <seg>Gradle可执行文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Gradle distribution comes packaged as a ZIP. The full distribution contains:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T114456Z" creationid="95" creationdate="20170723T114456Z">
        <seg>Gradle的发行包是一个ZIP文件。完整的发行包包含以下内容：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Gradle wrapper</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T063605Z" creationid="95" creationdate="20170723T063605Z">
        <seg>Gradle 包装器</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java plugin adds a number of properties to your project. These properties have default values which are usually sufficient to get started. It's easy to change these values if they don't suit. Let's look at this for our sample. Here we will specify the version number for our Java project, along with the Java version our source is written in. We also add some attributes to the JAR manifest.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T132650Z" creationid="95" creationdate="20170730T130552Z">
        <seg>Java插件向你的项目添加了许多属性。这些属性都具有默认值，足以让项目快速开始。如果不符合要求，修改这些值也很简单。让我们在例子中来看。这里，我们会指定我们的Java项目的版本号，以及我们的源码所使用Java版本。我们也会向JAR包的清单文件中添加一些属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java plugin adds quite a few tasks to your project. However, there are only a handful of tasks that you will need to use to build the project. The most commonly used task is the &lt;c0&gt;build&lt;/c0&gt; task, which does a full build of the project. When you run &lt;s1&gt;&lt;c2&gt;gradle build&lt;/c2&gt;&lt;/s1&gt;, Gradle will compile and test your code, and create a JAR file containing your main classes and resources:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T014234Z" creationid="95" creationdate="20170730T013856Z">
        <seg>Java插件向你的项目中添加了不少的任务。但是，在构建项目时只有其中的一部分任务才使用到。最常用的是这个 &lt;c0&gt;build&lt;/c0&gt; 任务，它会对项目做一次完整的构建。当运行 &lt;s1&gt;&lt;c2&gt;gradle build&lt;/c2&gt;&lt;/s1&gt;时，Gradle会编译并执行测试，然后将你的主要类文件和资源文件打成JAR包。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java plugin defines a number of standard configurations. These configurations represent the classpaths that the Java plugin uses. Some are listed below, and you can find more details in &lt;a0&gt;Table 23.5, “Java plugin - dependency configurations”&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T032544Z" creationid="huanghaohang" creationdate="20170908T032544Z">
        <seg>Java插件定义了许多标准配置。这些配置代表了Java插件使用的类路径。有些列在下面，你也可以在&lt;a0&gt;表23.5，“Java插件 - 依赖配置”&lt;/a0&gt;了解到更多详细内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Java plugin is convention based. This means that the plugin defines default values for many aspects of the project, such as where the Java source files are located. If you follow the convention in your project, you generally don't need to do much in your build script to get a useful build. Gradle allows you to customize your project if you don't want to or cannot follow the convention in some way. In fact, because support for Java projects is implemented as a plugin, you don't have to use the plugin at all to build a Java project, if you don't want to.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T012100Z" creationid="95" creationdate="20170730T012100Z">
        <seg>这个Java插件是基于约定的。这也意味着它为项目的很多个方面都定义了一些默认值，比如Java源文件的位置。如果你遵循这些约定，那么你就不用在构建脚本中再去做太多的事情。如果你不想或无法遵循约定，Gradle也允许你进行自定义。实际上，由于对Java项目的支持是以插件的形式来实现的，你甚至可以完全不用这个构建来构建Java项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The binary sources. This is for reference only. If you want to build Gradle you need to download the source distribution or checkout the sources from the source repository. See the &lt;a0&gt;Gradle web site&lt;/a0&gt; for details.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T115048Z" creationid="95" creationdate="20170723T115048Z">
        <seg>源代码。这些源代码仅供参考。如果您想要自己来编译Gradle，您需要去下载源码发行包，或者是从源码仓库里检出代码。具体请参阅&lt;a0&gt;Gradle官方网站&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The built-in dependencyInsight task is a part of the 'Help' tasks group. The task needs to configured with the dependency and the configuration. The report looks for the dependencies that match the specified dependency spec in the specified configuration. If java related plugin is applied, the dependencyInsight task is pre-configured with 'compile' configuration because typically it's the compile dependencies we are interested in. You should specify the dependency you are interested in via the command line '--dependency' option. If you don't like the defaults you may select the configuration via '--configuration' option. For more information see &lt;a0&gt;&lt;c1&gt;DependencyInsightReportTask&lt;/c1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T023244Z" creationid="huanghaohang" creationdate="20170910T022607Z">
        <seg>内置的dependencyInsight任务是“Help”任务组的一部分。该任务需要使用依赖和配置信息来配置。报告将在指定的配置中查找与指定依赖说明相匹配的依赖项。例如，如果应用了java相关的插件，那么dependencyInsight任务是通过“compile”配置进行预配置的，因为通常来说，我们感兴趣的是编译的依赖。如果你想要指定所感兴趣的依赖，可以使用命令行“--configurastion”选项。如果您不想要默认的配置，也可以通过“--configuration”选项来选择配置。更多信息请参阅&lt;a0&gt;&lt;c1&gt;DependencyInsightReportTask&lt;/c1&gt;&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The calls &lt;c0&gt;doFirst&lt;/c0&gt; and &lt;c1&gt;doLast&lt;/c1&gt; can be executed multiple times. They add an action to the beginning or the end of the task's actions list. When the task executes, the actions in the action list are executed in order. The &lt;c2&gt;&lt;&lt;&lt;/c2&gt; operator is simply an alias for &lt;c3&gt;doLast&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T133618Z" creationid="95" creationdate="20170727T133133Z">
        <seg>&lt;c0&gt;doFirst&lt;/c0&gt;和&lt;c1&gt;doLast&lt;/c1&gt; 可以被多次调用，它们分别是向任务的动作列表的开头或结尾添加一个动作。当任务执行的时候，动作列表的这些动作会依次执行。&lt;c2&gt;&lt;&lt;&lt;/c2&gt; 操作只是 &lt;c3&gt;doLast&lt;/c3&gt;的别名。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The declarative language lies on top of a general purpose task graph, which you can fully leverage in your builds. It provides utmost flexibility to adapt Gradle to your unique needs.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170722T021842Z" creationid="95" creationdate="20170722T021842Z">
        <seg>声明性语言位于通用任务图的顶部，您可以在构建中充分利用它。它提供了极大的灵活性，使Gradle满足您的独特需求。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The dependencies required by the production classes at runtime. By default, also includes the compile time dependencies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T035002Z" creationid="huanghaohang" creationdate="20170908T034919Z">
        <seg>运行时生产类所需的依赖。默认情况下，也包括了编译时依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The dependencies required to compile the production source of the project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T034923Z" creationid="huanghaohang" creationdate="20170908T032913Z">
        <seg>编译项目的生产源码所需的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The dependencies required to compile the test source of the project. By default, also includes the compiled production classes and the compile time dependencies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T035059Z" creationid="huanghaohang" creationdate="20170908T035059Z">
        <seg>编译项目测试源码所需的依赖。默认情况下，还包括了所编译的生产类和编译时依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The dependencies required to run the tests. By default, also includes the compile, runtime and test compile dependencies.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T035430Z" creationid="huanghaohang" creationdate="20170908T035316Z">
        <seg>运行测试所需的依赖。默认情况下，还包括编译，运行时及测试编译的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The dependency of &lt;c0&gt;taskX&lt;/c0&gt; to &lt;c1&gt;taskY&lt;/c1&gt; is declared before &lt;c2&gt;taskY&lt;/c2&gt; is defined. This is very important for multi-project builds. Task dependencies are discussed in more detail in &lt;a3&gt;Section 15.4, “Adding dependencies to a task”&lt;/a3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T132109Z" creationid="95" creationdate="20170726T160408Z">
        <seg>&lt;c0&gt;taskX&lt;/c0&gt; 依赖 &lt;c1&gt;taskY&lt;/c1&gt; 是在 &lt;c2&gt;taskY&lt;/c2&gt; 之前定义的。这点在多项目构建中非常有用。有关任务依赖的更多信息，可以参阅 &lt;a3&gt;第15.4节，“给任务添加依赖”&lt;/a3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following tutorials introduce some of the basics of Gradle, to help you get started.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T072551Z" creationid="95" creationdate="20170723T072551Z">
        <seg>以下是Gradle的一些基础的教程介绍，来帮助你快速入门。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The important thing is that &lt;c0&gt;whenReady&lt;/c0&gt; affects the release task &lt;s1&gt;&lt;e2&gt;before&lt;/e2&gt;&lt;/s1&gt; the release task is executed. This works even when the release task is not the &lt;s3&gt;&lt;e4&gt;primary&lt;/e4&gt;&lt;/s3&gt; task (i.e., the task passed to the &lt;s5&gt;&lt;s6&gt;gradle&lt;/s6&gt;&lt;/s5&gt; command).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T030619Z" creationid="95" creationdate="20170729T030619Z">
        <seg>在这里，很重要的一点是，&lt;c0&gt;whenReady&lt;/c0&gt; 会在发布任务执行&lt;s1&gt;&lt;e2&gt;之前&lt;/e2&gt;&lt;/s1&gt;影响到它。即使这个发布任务不是 &lt;s3&gt;&lt;e4&gt;主要的&lt;/e4&gt;&lt;/s3&gt; （即传给 &lt;s5&gt;&lt;s6&gt;gradle&lt;/s6&gt;&lt;/s5&gt; 命令行的任务），这一点也同样有效。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The main purpose of most projects is to build some files that are to be used outside the project. For example, if your project produces a java library, you need to build a jar, and maybe a source jar and some documentation, and publish them somewhere.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170907T154213Z" creationid="95" creationdate="20170905T152539Z">
        <seg>大多数项目的主要目的是构建一些在项目之外使用的文件。例如，如果你的项目是要生成一个Java库，你需要构建出一个jar文件，可能还需要一个源文件jar包，以及文档等，然后把它们发布出去。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The place to go for help with Gradle is &lt;a0&gt;http://forums.gradle.org&lt;/a0&gt;. The Gradle Forums is the place where you can report problems and ask questions to the Gradle developers and other community members.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T121738Z" creationid="95" creationdate="20170723T121738Z">
        <seg>您可以到Gradle的官方论坛 &lt;a0&gt;http://forums.gradle.org&lt;/a0&gt;来寻求一些帮助。在这里，您可以向Gradle的开发者和其他的社区成员报告您的问题或者是进行提问。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The plugins do a pretty good job of defining the artifacts of a project, so you usually don't need to do anything special to tell Gradle what needs to be published. However, you do need to tell Gradle where to publish the artifacts. You do this by attaching repositories to the &lt;c0&gt;uploadArchives&lt;/c0&gt; task. Here's an example of publishing to a remote Ivy repository:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T050425Z" creationid="huanghaohang" creationdate="20170908T050425Z">
        <seg>插件对定义项目的构件提供了非常好的支持，所以通常无需再做其他事情来告诉Gradle需要发布什么。但是，你需要告诉Gradle发布到哪里。这就需要在&lt;c0&gt;uploadArchives&lt;/c0&gt;任务中添加一个仓库。以下是发布到远程Ivy存储库的示例：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The power of Groovy can be used for more than defining what a task does. For example, you can also use it to dynamically create tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T132702Z" creationid="95" creationdate="20170727T132702Z">
        <seg>Groovy的强大之处，不仅仅是用在定义一个任务做什么的时候。例如，你也可以使用它来动态地创建一些任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The report shows the description of each project, if specified. You can provide a description for a project by setting the &lt;c0&gt;description&lt;/c0&gt; property:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T011401Z" creationid="huanghaohang" creationdate="20170910T011134Z">
        <seg>这个报告显示了每一个项目的描述信息（如果你有配置这个项目的描述信息的话）。你可以通过设置&lt;c0&gt;description&lt;/c0&gt;属性来提供项目的描述信息：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The suppleness and richness of Gradle finally allows you to apply common design principles to your build. For example, it is very easy to compose your build from reusable pieces of build logic. Inline stuff where unnecessary indirections would be inappropriate. Don't be forced to tear apart what belongs together (e.g. in your project hierarchy). Thus avoiding smells like shotgun changes or divergent change that turn your build into a maintenance nightmare. At last you can create a well structured, easily maintained, comprehensible build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170722T022659Z" creationid="95" creationdate="20170722T022659Z">
        <seg>Gradle的灵活性和丰富性最终允许您将常见的设计原则应用于您的构建。 例如，通过可重用的构建逻辑来组织构建是非常容易的。 把不必要而没有直接联系的内容内联在一起是不适合的。 不要强制拆分原本一起的东西（例如在你的项目层次结构中）。 因此，避免出现分散式的变化而使您的建设的维护变成噩梦。 最后，您可以创建一个结构良好、易于维护、易于理解的构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The tasks which the Java plugin adds are regular tasks, exactly the same as if they were declared in the build file. This means you can use any of the mechanisms shown in earlier chapters to customize these tasks. For example, you can set the properties of a task, add behaviour to a task, change the dependencies of a task, or replace a task entirely. In our sample, we will configure the &lt;c0&gt;test&lt;/c0&gt; task, which is of type &lt;a1&gt;&lt;c2&gt;Test&lt;/c2&gt;&lt;/a1&gt;, to add a system property when the tests are executed:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T150104Z" creationid="95" creationdate="20170730T132805Z">
        <seg>Java插件所添加的任务都是一些普通任务，与在构建文件里声明的完全一样。这也就是说，你可以利用前面的章节所说的任何机制来自定义这些任务。比如你可以设置一个任务的属性，给它添加一些行为，修改一个任务的依赖，或者是完全地替换掉一个任务。在下面的例子中，我们会配置一个&lt;a1&gt;&lt;c2&gt;Test&lt;/c2&gt;&lt;/a1&gt;类型的 &lt;c0&gt;test&lt;/c0&gt; 任务，使得当执行测试的时候添加一个系统属性：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The user guide (HTML and PDF).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T114522Z" creationid="95" creationdate="20170723T114522Z">
        <seg>用户指南（HTML和PDF两种版本）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are various types of dependencies that you can declare. One such type is an &lt;e0&gt;external dependency&lt;/e0&gt;. This a dependency on some files built outside the current build, and stored in a repository of some kind, such as Maven central, or a corporate Maven or Ivy repository, or a directory in the local file system.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T043125Z" creationid="huanghaohang" creationdate="20170908T043125Z">
        <seg>你可以声明多种类型的依赖。其中一种这样的类型叫&lt;e0&gt;外部依赖&lt;/e0&gt;，它是依赖于在当前构建之外所生成的一些文件，并存储在某种存储库中，例如Maven Central，Maven私服，Ivy存储库，或者是本地文件系统中的某个目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is a shortcut form for declaring external dependencies, which uses a string of the form &lt;c0&gt;"&lt;e1&gt;&lt;c2&gt;group&lt;/c2&gt;&lt;/e1&gt;:&lt;e3&gt;&lt;c4&gt;name&lt;/c4&gt;&lt;/e3&gt;:&lt;e5&gt;&lt;c6&gt;version&lt;/c6&gt;&lt;/e5&gt;"&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T043854Z" creationid="huanghaohang" creationdate="20170908T043854Z">
        <seg>这里还有一种更加简洁的方式来声明外部依赖，它使用一个&lt;c0&gt;"&lt;e1&gt;&lt;c2&gt;group&lt;/c2&gt;&lt;/e1&gt;:&lt;e3&gt;&lt;c4&gt;name&lt;/c4&gt;&lt;/e3&gt;:&lt;e5&gt;&lt;c6&gt;version&lt;/c6&gt;&lt;/e5&gt;"&lt;/c0&gt;形式的字符串。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is a shorthand way to define a task like our &lt;c0&gt;hello&lt;/c0&gt; task above, which is more concise.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155226Z" creationid="95" creationdate="20170726T155226Z">
        <seg>有一种简单的方法可以定义像上面我们的这类&lt;c0&gt;hello&lt;/c0&gt; 任务，它看起来更简洁。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is lots more you can do with Ant in your build scripts. You can find out more in &lt;a0&gt;Chapter 17, &lt;i1&gt;Using Ant from Gradle&lt;/i1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170728T154458Z" creationid="95" creationdate="20170728T153845Z">
        <seg>在构建脚本中您可以利用Ant做更多的事情，更多细节请参阅 &lt;a0&gt;第十七章，&lt;i1&gt;在Gradle中使用Ant&lt;/i1&gt;&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These incoming files form the dependencies of the project. Gradle allows you to tell it what the dependencies of your project are, so that it can take care of finding these dependencies, and making them available in your build. The dependencies might need to be downloaded from a remote Maven or Ivy repository, or located in a local directory, or may need to be built by another project in the same multi-project build. We call this process &lt;e0&gt;dependency resolution&lt;/e0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170905T152131Z" creationid="95" creationdate="20170905T151718Z">
        <seg>这些传入的文件构成了这个项目的依赖。Gradle可以让你告诉它你项目的依赖是什么，以便它处理查找这些依赖，以及把它们加入构建。这些依赖可能需要从远程的Maven或Ivy仓库中下载，或者位于本地目录中，或是需要由同一个多项目构建的其他子项目来构建。这个过程我们称之为 &lt;e0&gt;依赖解析&lt;/e0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These outgoing files form the publications of the project. Gradle also takes care of this important work for you. You declare the publications of your project, and Gradle take care of building them and publishing them somewhere. Exactly what "publishing" means depends on what you want to do. You might want to copy the files to a local directory, or upload them to a remote Maven or Ivy repository. Or you might use the files in another project in the same multi-project build. We call this process &lt;e0&gt;publication&lt;/e0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170907T154859Z" creationid="95" creationdate="20170907T154301Z">
        <seg>这些输出文件构成了项目的发布内容。Gradle也会为你处理这个重要的事情。你声明项目的发布内容，Gradle就会负责构建它们并把它们发布到某个地方。“发布”的确切含义取决于你想做什么。你可能想把一些文件拷贝到一个本地的目录，把它们上传到一个远程的Maven或Ivy仓库，或是在同一个多项目构建的另一个子项目中使用这些文件。这个过程，我们称之为&lt;e0&gt;发布&lt;/e0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This also applies the Java plugin to your project. Running &lt;s0&gt;&lt;c1&gt;gradle build&lt;/c1&gt;&lt;/s0&gt; will compile, test and WAR your project. Gradle will look for the source files to include in the WAR file in &lt;c2&gt;src/main/webapp&lt;/c2&gt;. Your compiled classes, and their runtime dependencies are also included in the WAR file.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T005149Z" creationid="huanghaohang" creationdate="20170909T004741Z">
        <seg>以上操作也会将Java插件应用到项目中。运行&lt;s0&gt;&lt;c1&gt;gradle build&lt;/c1&gt;&lt;/s0&gt;将对你的项目进行编译，测试和并打成WAR包。 Gradle将查找在&lt;c2&gt;src/main/webapp&lt;/c2&gt;目录中的源文件，并与所编译出来的类文件，及其运行时依赖关系一起包含到WAR文件中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This also applies the War plugin to your project. Running &lt;s0&gt;&lt;c1&gt;gradle jettyRun&lt;/c1&gt;&lt;/s0&gt; will run your web application in an embedded Jetty web container. Running &lt;s2&gt;&lt;c3&gt;gradle jettyRunWar&lt;/c3&gt;&lt;/s2&gt; will build the WAR file, and then run it in an embedded web container.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T005825Z" creationid="huanghaohang" creationdate="20170909T005825Z">
        <seg>以上操作也会将War插件应用到你的项目中。运行&lt;s0&gt;&lt;c1&gt;gradle jettyRun&lt;/c1&gt;&lt;/s0&gt;，将在嵌入式Jetty Web容器中运行你的Web应用程序。运行&lt;s2&gt;&lt;c3&gt;gradle jettyRunWar&lt;/c3&gt;&lt;/s2&gt;将先构建出WAR文件，然后在嵌入式Web容器中运行它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This chapter describes a very simple Groovy project. Usually, a real project will require more than this. Because a Groovy project &lt;s0&gt;&lt;e1&gt;is&lt;/e1&gt;&lt;/s0&gt; a Java project, whatever you can do with a Java project, you can also do with a Groovy project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T003349Z" creationid="huanghaohang" creationdate="20170909T003349Z">
        <seg>本章介绍了一个非常简单的Groovy项目。通常情况下，一个真实的项目所需要的不止于此。因为Groovy项目&lt;s0&gt;&lt;e1&gt;也是&lt;/e1&gt;&lt;/s0&gt;一个Java项目，无论你如何使用Java项目，Groovy项目也可以被这样使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This chapter gives some advice for troubleshooting problems and explains how to get help with your problems.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T120955Z" creationid="95" creationdate="20170723T120955Z">
        <seg>本章节给出了一些解决问题的建议，并解释了如何获取帮助。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This chapter introduces some of the Gradle's support for web applications. Gradle provides two plugins for web application development: the War plugin and the Jetty plugin. The War plugin extends the Java plugin to build a WAR file for your project. The Jetty plugin extends the War plugin to allow you to deploy your web application to an embedded Jetty web container.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T004545Z" creationid="huanghaohang" creationdate="20170909T004331Z">
        <seg>本章介绍了Gradle对Web应用程序的相关支持。Gradle提供了两个用于Web应用开发的插件：War和Jetty。 War插件扩展了Java插件，可以用来构建WAR文件。 Jetty插件扩展了War插件，能将Web应用程序部署到嵌入式Jetty Web容器中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This chapter introduces some of the basics of dependency management in Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T130521Z" creationid="95" creationdate="20170803T130521Z">
        <seg>本章主要介绍 Gradle 依赖管理的一些基础知识。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This chapter introduces the basics of the Gradle command-line. You run a build using the &lt;s0&gt;&lt;s1&gt;gradle&lt;/s1&gt;&lt;/s0&gt; command, which you have already seen in action in previous chapters.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T030310Z" creationid="huanghaohang" creationdate="20170909T030310Z">
        <seg>本章介绍了Gradle命令行的基础知识，正如你在前面章节所看到的使用&lt;s0&gt;&lt;s1&gt;gradle&lt;/s1&gt;&lt;/s0&gt;命令来运行构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This chapter is a work in progress.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T004357Z" creationid="huanghaohang" creationdate="20170909T004309Z">
        <seg>本章还在完善中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This chapter is currently a work in progress.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T120352Z" creationid="95" creationdate="20170723T120352Z">
        <seg>本章节目前还在完善中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This enables very readable code, especially when using the out of the box tasks provided by the plugins (e.g. &lt;c0&gt;compile&lt;/c0&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T141645Z" creationid="95" creationdate="20170727T141349Z">
        <seg>这使得代码很易于阅读，尤其是当使用插件所提供的任务时（例如 &lt;c0&gt;compile&lt;/c0&gt;）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This information includes the full task path, the task type, possible commandline options and the description of the given task.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T013043Z" creationid="huanghaohang" creationdate="20170910T012852Z">
        <seg>该信息包括完整的任务路径，任务类型，可用的命令行选项以及任务的描述信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is all you need to define a Java project. This will apply the Java plugin to your project, which adds a number of tasks to your project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T012839Z" creationid="95" creationdate="20170730T012607Z">
        <seg>定义一个Java项目只需要这些就够了。它将会向你的项目应用Java插件，从而添加一些任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is equivalent to running &lt;s0&gt;&lt;c1&gt;gradle clean run&lt;/c1&gt;&lt;/s0&gt;. In a multi-project build every subproject can have its own specific default tasks. If a subproject does not specify default tasks, the default tasks of the parent project are used (if defined).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T024222Z" creationid="95" creationdate="20170729T023929Z">
        <seg>这与运行 &lt;s0&gt;&lt;c1&gt;gradle clean run&lt;/c1&gt;&lt;/s0&gt;的结果是一样的。在多项目构建中，每一个子项目都可以有它自己的指定的默认任务。如果一个子项目没有指定默认任务，而父项目定义了的话，那么将会使用父项目的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This report lists summary times and details for both the configuration phase and task execution. The times for configuration and task execution are sorted with the most expensive operations first. The task execution results also indicate if any tasks were skipped (and the reason) or if tasks that were not skipped did no work.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T030945Z" creationid="huanghaohang" creationdate="20170910T030945Z">
        <seg>该报告列出了配置阶段和任务执行的总体时间和详细信息。配置和任务执行的时间会先从大到小排序。任务执行的结果还表明是否有任务被跳过（及跳过原因），或者是否有任务什么都没做却没被跳过。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This task is extremely useful for investigating the dependency resolution, finding out where certain dependencies are coming from and why certain versions are selected. For more information please see &lt;a0&gt;&lt;c1&gt;DependencyInsightReportTask&lt;/c1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T022455Z" creationid="huanghaohang" creationdate="20170910T022209Z">
        <seg>这一任务对于调查依赖解析非常有用，它可以找出某些依赖关系来自于哪，以及为什么选择这些版本。有关更多信息，请参阅&lt;a0&gt;&lt;c1&gt;DependencyInsightReportTask&lt;/c1&gt;&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This user guide, like Gradle itself, is under very active development. Some parts of Gradle aren't documented as completely as they need to be. Some of the content presented won't be entirely clear or will assume that you know more about Gradle than you do. We need your help to improve this user guide. You can find out more about contributing to the documentation at the &lt;a0&gt;Gradle web site&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T165849Z" creationid="95" creationdate="20170721T162658Z">
        <seg>与Gradle一样，本指南也在不断地更新。一些Gradle的内容并未完全进行描述。有些内容并未完整描述，或者是假定了您对Gradle有一定的了解。我们需要您来帮助一起提供本指南。有关如何参与贡献文档的信息，可以在 &lt;a0&gt;Gradle 官方网站&lt;/a0&gt;上找到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This will also apply the Java plugin to the project, if it has not already been applied. The Groovy plugin extends the &lt;c0&gt;compile&lt;/c0&gt; task to look for source files in directory &lt;c1&gt;src/main/groovy&lt;/c1&gt;, and the &lt;c2&gt;compileTest&lt;/c2&gt; task to look for test source files in directory &lt;c3&gt;src/test/groovy&lt;/c3&gt;. The compile tasks use joint compilation for these directories, which means they can contain a mixture of java and groovy source files.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T002355Z" creationid="huanghaohang" creationdate="20170909T002355Z">
        <seg>如果还没有应用Java插件，那么Java插件也会被应用到项目中。 Groovy插件分别扩展了&lt;c0&gt;compile&lt;/c0&gt;任务，以在&lt;c1&gt;src/main/groovy&lt;/c1&gt;目录中查找源文件；以及&lt;c2&gt;compileTest&lt;/c2&gt;任务，以在&lt;c3&gt;src/test/groovy&lt;/c3&gt;目录中查找测试源文件。编译任务会把这些目录加到编译中，因此也意味着可以在项目里混合编译java和groovy。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To add a dependency, the corresponding task does not need to exist.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T160246Z" creationid="95" creationdate="20170726T160246Z">
        <seg>在添加依赖时，对应的任务不一定要存在。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To build a Groovy project, you use the &lt;e0&gt;Groovy plugin&lt;/e0&gt;. This plugin extends the Java plugin to add Groovy compilation capabilities to your project. Your project can contain Groovy source code, Java source code, or a mix of the two. In every other respect, a Groovy project is identical to a Java project, which we have already seen in &lt;a1&gt;Chapter 7, &lt;i2&gt;Java Quickstart&lt;/i2&gt;&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T001546Z" creationid="huanghaohang" creationdate="20170908T052108Z">
        <seg>要构建一个Groovy项目，你可以使用&lt;e0&gt;Groovy插件&lt;/e0&gt;。此插件继承了Java插件，以便将Groovy的编译功能添加到项目中。你的Groovy项目可以包含Groovy源代码，Java源代码，或者两者都有。在其他各方面，Groovy项目与我们之前在《&lt;a1&gt;第七章，&lt;i2&gt;Java快速入门&lt;/i2&gt;&lt;/a1&gt;》所看到的都是相同的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To build a WAR file, you apply the War plugin to your project:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T004607Z" creationid="huanghaohang" creationdate="20170909T004607Z">
        <seg>要构建一个WAR文件，你需要在你的项目当中应用War插件：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To define a multi-project build, you need to create a &lt;e0&gt;settings file&lt;/e0&gt;. The settings file lives in the root directory of the source tree, and specifies which projects to include in the build. It must be called &lt;c1&gt;settings.gradle&lt;/c1&gt;. For this example, we are using a simple hierarchical layout. Here is the corresponding settings file:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T123519Z" creationid="95" creationdate="20170803T123149Z">
        <seg>定义一个多项目构建，需要在源码树的根目录下创建一个&lt;e0&gt;设置文件&lt;/e0&gt;。这个设置文件的名字必须是&lt;c1&gt;settings.gradle&lt;/c1&gt;，它会指定要包含哪些项目。在这个例子中，我们会使用一个简单的层次布局，以下是对应的设置文件：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To define an external dependency, you add it to a dependency configuration:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T043233Z" creationid="huanghaohang" creationdate="20170908T043233Z">
        <seg>要定义外部依赖，你需要把一个依赖添加到依赖配置中：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To find out more about defining and working with dependencies, have a look at &lt;a0&gt;Section 50.4, “How to declare your dependencies”&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T044045Z" creationid="huanghaohang" creationdate="20170908T044045Z">
        <seg>要了解有关定义和使用依赖的更多信息，请查看&lt;a0&gt;第50.4节，“如何声明你的依赖”&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To find out more about defining and working with repositories, have a look at &lt;a0&gt;Section 50.6, “Repositories”&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T050015Z" creationid="huanghaohang" creationdate="20170908T050015Z">
        <seg>要了解有关定义和使用仓库的更多信息，请查看&lt;a0&gt;第50.6节，“仓库”&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To find out more about publication, have a look at &lt;a0&gt;Chapter 51, &lt;i1&gt;Publishing artifacts&lt;/i1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T051110Z" creationid="huanghaohang" creationdate="20170908T051110Z">
        <seg>要了解有关发布的更多信息，请查看《&lt;a0&gt;第五十一章，&lt;i1&gt;发布构件&lt;/i1&gt;&lt;/a0&gt;》。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To import your project into Eclipse, you need to add another plugin to your build file:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T153823Z" creationid="95" creationdate="20170731T153823Z">
        <seg>要想导入项目到Eclipse中，你需要在你的构建文件中添加另一个插件：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To publish the JAR file, run &lt;s0&gt;&lt;c1&gt;gradle uploadArchives&lt;/c1&gt;&lt;/s0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T153732Z" creationid="95" creationdate="20170731T153732Z">
        <seg>执行 &lt;s0&gt;&lt;c1&gt;gradle uploadArchives&lt;/c1&gt;&lt;/s0&gt;以发布JAR文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To run your web application, you apply the Jetty plugin to your project:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T005544Z" creationid="huanghaohang" creationdate="20170909T005544Z">
        <seg>要运行 web 应用程序，需要将 Jetty 插件应用于项目中：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To try this out, create the following build script named &lt;c0&gt;build.gradle&lt;/c0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T144931Z" creationid="95" creationdate="20170724T144931Z">
        <seg>试着创建一个叫 &lt;c0&gt;build.gradle&lt;/c0&gt;的构建脚本，如下所示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To use the groovy compilation tasks, you must also declare the Groovy version to use and where to find the Groovy libraries. You do this by adding a dependency to the &lt;c0&gt;groovy&lt;/c0&gt; configuration. The &lt;c1&gt;compile&lt;/c1&gt; configuration inherits this dependency, so the groovy libraries will be included in classpath when compiling Groovy and Java source. For our sample, we will use Groovy 2.2.0 from the public Maven repository:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T002702Z" creationid="huanghaohang" creationdate="20170909T002407Z">
        <seg>要使用groovy编译任务，还必须声明使用的Groovy版本以及可以在哪里找到Groovy库。你可以通过在&lt;c0&gt;groovy&lt;/c0&gt;配置中添加依赖来实现。&lt;c1&gt;compile&lt;/c1&gt;配置会继承于它，因此当编译Groovy和Java源码时，groovy库会被包含在类路径中。以下例子，我们将使用公共Maven仓库中的Groovy 2.2.0版本：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tutorials</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170801T014535Z" creationid="haohang" creationdate="20170801T014535Z">
        <seg>教程</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using Gradle's build-by-convention support for Groovy projects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T080954Z" creationid="95" creationdate="20170723T080954Z">
        <seg>使用Gradle对于Groovy项目的基于约定的构建的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using Gradle's build-by-convention support for Web applications.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T081041Z" creationid="95" creationdate="20170723T081029Z">
        <seg>使用Gradle对于Web应用的基于约定的构建的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usually the JAR file needs to be published somewhere. To do this, you need to tell Gradle where to publish the JAR file. In Gradle, artifacts such as JAR files are published to repositories. In our sample, we will publish to a local directory. You can also publish to a remote location, or multiple locations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T153654Z" creationid="95" creationdate="20170731T150129Z">
        <seg>通常，JAR文件都需要发布到某个地方。为此，你需要告诉Gradle要把JAR文件发布到哪里。在Gradle里，诸如JAR文件这样的工件会被发布到仓库中。在我们的示例中，将发布到一个本地仓库里。当然，你也可以发布到一个远程的位置，或者是多个位置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Usually, a Java project will have some dependencies on external JAR files. To reference these JAR files in the project, you need to tell Gradle where to find them. In Gradle, artifacts such as JAR files, are located in a &lt;e0&gt;repository&lt;/e0&gt;. A repository can be used for fetching the dependencies of a project, or for publishing the artifacts of a project, or both. For this example, we will use the public Maven repository:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T124317Z" creationid="95" creationdate="20170730T124317Z">
        <seg>通常一个Java项目都会依赖一些外部JAR文件。如果想在项目里引用这些JAR文件，你需要告诉Gradle如何找到这们。在Gradle中，像JAR文件这样的工件都存在于 &lt;e0&gt;仓库&lt;/e0&gt;。仓库可以用于获取项目中的依赖，或是发布项目的工件。在下面的例子中，我们将使用公共的Maven仓库：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Various plugins add further standard configurations. You can also define your own custom configurations to use in your build. Please see &lt;a0&gt;Section 50.3, “Dependency configurations”&lt;/a0&gt; for the details of defining and customizing dependency configurations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T042917Z" creationid="huanghaohang" creationdate="20170908T042917Z">
        <seg>各种插件添加了更多的标准配置。你也可以定义一些自定义配置以在构建中使用。有关定义和定制依赖配置的详细内容，请参见&lt;a0&gt;第50.3节，“依赖配置”&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Version 2.0</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072300Z" creationid="haohang" creationdate="20170720T072300Z">
        <seg>版本 2.0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Very powerful dependency management (based on Apache Ivy).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T135756Z" creationid="95" creationdate="20170721T135756Z">
        <seg>（基于Apache Ivy的）非常强大的依赖管理。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Very powerful support for multi-project builds.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T135728Z" creationid="95" creationdate="20170721T135728Z">
        <seg>非常强大的多项目构建支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Very roughly, dependency management is made up of two pieces. Firstly, Gradle needs to know about the things that your project needs to build or run, in order to find them. We call these incoming files the &lt;e0&gt;dependencies&lt;/e0&gt; of the project. Secondly, Gradle needs to build and upload the things that your project produces. We call these outgoing files the &lt;e1&gt;publications&lt;/e1&gt; of the project. Let's look at these two pieces in more detail:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170905T145223Z" creationid="95" creationdate="20170803T130530Z">
        <seg>通俗来讲，依赖管理由两部分组成。首先，Gradle需要知道构建或运行你的项目所需要的东西，才能找到它们。 我们把这些传入的文件称为这个项目的 &lt;e0&gt;依赖&lt;/e0&gt;。其次，Gradle需要构建并且上传你的项目所产生的东西，我们把这些输出的文件称为项目的 &lt;e1&gt;发布&lt;/e1&gt;。下面详细介绍这两部分：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We also add a distribution, that gets shipped to the client:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T125649Z" creationid="95" creationdate="20170803T125649Z">
        <seg>在下面的例子中，我们创建了一个分发，来发送给客户端：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We have in-depth coverage with many examples about the Java plugin, dependency management and multi-project builds in later chapters. In this chapter we want to give you an initial idea of how to use the Java plugin to build a Java project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T012344Z" creationid="95" creationdate="20170730T012101Z">
        <seg>在后续章节中，我们有深入介绍与Java插件，依赖管理以及多项目构建的相关的许多例子。在本章里，我们还是先了解一下使用Java插件来构建Java项目的基本用法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We think the advantages of an internal DSL (based on a dynamic language) over XML are tremendous in case of &lt;s0&gt;&lt;e1&gt;build scripts&lt;/e1&gt;&lt;/s0&gt;. There are a couple of dynamic languages out there. Why Groovy? The answer lies in the context Gradle is operating in. Although Gradle is a general purpose build tool at its core, its main focus are Java projects. In such projects obviously the team members know Java. We think a build should be as transparent as possible to &lt;s2&gt;&lt;e3&gt;all&lt;/e3&gt;&lt;/s2&gt; team members.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T070852Z" creationid="95" creationdate="20170723T065620Z">
        <seg>我们认为在 &lt;s0&gt;&lt;e1&gt;构建脚本&lt;/e1&gt;&lt;/s0&gt;这种情况中，比起使用XML，（基于一种动态语言的）一种内部DSL会有很大的优点。 那么，有那么多的动态语言，我们为什么要使用Groovy？答案在于Gradle的操作环境。尽管Gradle的核心是成为一个通用的构建工具，但是它的主要重点还是Java项目。这样的项目的团队成员都知道Java。我们认为 ，构建应尽可能对 &lt;s2&gt;&lt;e3&gt;所有&lt;/e3&gt;&lt;/s2&gt; 的团队成员透明。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We would like to introduce Gradle to you, a build system that we think is a quantum leap for build technology in the Java (JVM) world.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T133736Z" creationid="95" creationdate="20170721T133736Z">
        <seg>我们很高兴向大家介绍Gradle，一个我们认为在Java（JVM）世界的构建技术上富有突破性的构建系统。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We would like to introduce Gradle to you, a build system that we think is a quantum leap for build technology in the Java (JVM) world. Gradle provides:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T135513Z" creationid="95" creationdate="20170721T135513Z">
        <seg>我们很高兴向大家介绍Gradle，一个我们认为在Java（JVM）世界的构建技术上富有突破性的构建系统。它提供了：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What does &lt;c0&gt;-q&lt;/c0&gt; do?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T145132Z" creationid="95" creationdate="20170724T145132Z">
        <seg> &lt;c0&gt;-q&lt;/c0&gt; 参数的作用是什么？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What properties are available?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T132614Z" creationid="95" creationdate="20170730T132614Z">
        <seg>有哪些属性可用？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What tasks are available?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T012911Z" creationid="95" creationdate="20170730T012911Z">
        <seg>有哪些任务可用？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What's going on here? This build script defines a single task, called &lt;c0&gt;hello&lt;/c0&gt;, and adds an action to it. When you run &lt;s1&gt;&lt;c2&gt;gradle hello&lt;/c2&gt;&lt;/s1&gt;, Gradle executes the &lt;c3&gt;hello&lt;/c3&gt; task, which in turn executes the action you've provided. The action is simply a closure containing some Groovy code to execute.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T150523Z" creationid="95" creationdate="20170724T145851Z">
        <seg>我们来看看这个脚本做了些什么。它定义了一个叫做 &lt;c0&gt;hello&lt;/c0&gt;的任务，并且给它加了一个动作。当你执行&lt;s1&gt;&lt;c2&gt;gradle hello&lt;/c2&gt;&lt;/s1&gt;的时候，Gradle会执行这个&lt;c3&gt;hello&lt;/c3&gt;任务，而这个任务又会执行您所提供的动作。这个动作只是一个包含了一些要执行的Groovy代码的闭包。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What's going on here? This build script says a few things about the project. Firstly, it states that Hibernate core 3.6.7.Final is required to compile the project's production source. By implication, Hibernate core and its dependencies are also required at runtime. The build script also states that any junit &gt;= 4.0 is required to compile the project's tests. It also tells Gradle to look in the Maven central repository for any dependencies that are required. The following sections go into the details.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T024330Z" creationid="haohang" creationdate="20170908T013315Z">
        <seg>这里做了些什么？这个构建脚本说明了关于项目的一些事情。首先，它指出，Hibernate core 3.6.7.Final是编项目的生产源代码所必需的。同时也暗指了，运行时还需要使用Hibernate core及其依赖。构建脚本还指出，编译项目的测试时需要4.0或以上的junit。它还告诉Gradle在Maven中央存储库中查找所需的任何依赖。以下各节内容会进行详细介绍。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When executed with &lt;c0&gt;--continue&lt;/c0&gt;, Gradle will execute &lt;s1&gt;&lt;e2&gt;every&lt;/e2&gt;&lt;/s1&gt; task to be executed where all of the dependencies for that task completed without failure, instead of stopping as soon as the first failure is encountered. Each of the encountered failures will be reported at the end of the build.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T074848Z" creationid="huanghaohang" creationdate="20170909T074105Z">
        <seg>当带上&lt;c0&gt;--continue&lt;/c0&gt;参数执行时，Gradle将执行&lt;s1&gt;&lt;e2&gt;所有&lt;/e2&gt;&lt;/s1&gt;要执行的任务，即该任务的所有依赖任务都会完成执行，而不是一出现错误就停止。所有失败的信息将在构建结束时报告出来。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When using Gradle (or any software package), you can run into problems. You may not understand how to use a particular feature, or you may encounter a defect. Or, you may have a general question about Gradle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T120847Z" creationid="95" creationdate="20170723T120847Z">
        <seg>当使用Gradle（或者是其他软件包）的时候，或多或少都会遇到一些问题。或许是您无法驾驭的新特性，或许是正好遇到了缺陷，也可能是关于Gradle的一些常见问题。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you run the &lt;s0&gt;&lt;s1&gt;gradle&lt;/s1&gt;&lt;/s0&gt; command, it looks for a build file in the current directory. You can use the &lt;c2&gt;-b&lt;/c2&gt; option to select another build file. If you use &lt;c3&gt;-b&lt;/c3&gt; option then &lt;c4&gt;settings.gradle&lt;/c4&gt; file is not used. Example:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T113705Z" creationid="huanghaohang" creationdate="20170909T113421Z">
        <seg>当你运行&lt;s0&gt;&lt;s1&gt;gradle&lt;/s1&gt;&lt;/s0&gt;这个命令时，它会在当前目录中查找一个构建文件。你也可以使用&lt;c2&gt;-b&lt;/c2&gt;选项来选择另一个构建文件。如果你使用&lt;c3&gt;-b&lt;/c3&gt;选项，那么Gradle就不会去用到&lt;c4&gt;settings.gradle&lt;/c4&gt;文件。例：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you specify tasks on the command-line, you don't have to provide the full name of the task. You only need to provide enough of the task name to uniquely identify the task. For example, in the sample build above, you can execute task &lt;c0&gt;dist&lt;/c0&gt; by running &lt;s1&gt;&lt;c2&gt;gradle d&lt;/c2&gt;&lt;/s1&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T112734Z" creationid="huanghaohang" creationdate="20170909T112734Z">
        <seg>在命令行中指定任务时，可以不输入任务的全名，只需要提供可以足够唯一标识任务的任务名。例如，在上面的示例构建中，你可以通过运行&lt;s1&gt;&lt;c2&gt;gradle d&lt;/c2&gt;&lt;/s1&gt;来执行&lt;c0&gt;dist&lt;/c0&gt;任务：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Why Groovy?</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072502Z" creationid="haohang" creationdate="20170720T072502Z">
        <seg>为什么使用 Groovy?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can add dependencies between projects in the same build, so that, for example, the JAR file of one project is used to compile another project. In the &lt;c0&gt;api&lt;/c0&gt; build file we will add a dependency on the JAR produced by the &lt;c1&gt;shared&lt;/c1&gt; project. Due to this dependency, Gradle will ensure that project &lt;c2&gt;shared&lt;/c2&gt; always gets built before project &lt;c3&gt;api&lt;/c3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T125305Z" creationid="95" creationdate="20170803T125256Z">
        <seg>你可以向同一个构建的项目之间添加依赖关系，这样，某个项目中的 JAR 文件就能用于编译另一个项目了。在 &lt;c0&gt;api&lt;/c0&gt;项目的构建文件里，我们让它依赖 &lt;c1&gt;shared&lt;/c1&gt; 项目所生成的JAR文件。由于这个依赖关系，Gradle会确保 &lt;c2&gt;shared&lt;/c2&gt;项目总是在 &lt;c3&gt;api&lt;/c3&gt;项目之前构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can add your own properties to a task. To add a property named &lt;c0&gt;myProperty&lt;/c0&gt;, set &lt;c1&gt;ext.myProperty&lt;/c1&gt; to an initial value. From that point on, the property can be read and set like a predefined task property.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T141932Z" creationid="95" creationdate="20170727T141635Z">
        <seg>您可以把您自己的属性添加到一个任务中。譬如如果要添加一个 &lt;c0&gt;myProperty&lt;/c0&gt;属性，可以为 &lt;c1&gt;ext.myProperty&lt;/c1&gt;设置一个初始值，然后您就可以像使用预定义的任务属性一样对它进行读取或设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also abbreviate each word in a camel case task name. For example, you can execute task &lt;c0&gt;compileTest&lt;/c0&gt; by running &lt;s1&gt;&lt;c2&gt;gradle compTest&lt;/c2&gt;&lt;/s1&gt; or even &lt;s3&gt;&lt;c4&gt;gradle cT&lt;/c4&gt;&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T113153Z" creationid="huanghaohang" creationdate="20170909T112920Z">
        <seg>你也可以对驼峰命名的任务名称的每一个单词进行缩写。例如，你可以通过运行&lt;s1&gt;&lt;c2&gt;gradle compTest&lt;/c2&gt;&lt;/s1&gt;或&lt;s3&gt;&lt;c4&gt;gradle cT&lt;/c4&gt;&lt;/s3&gt;执行&lt;c0&gt;compileTest&lt;/c0&gt;任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also have repositories on the local file system. This works for both Maven and Ivy repositories.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T045140Z" creationid="huanghaohang" creationdate="20170908T045119Z">
        <seg>你还可以在本地文件系统上部署一个仓库，它对于Maven和Ivy仓库都支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also publish to Maven repositories. The syntax is slightly different.&lt;s0&gt;[&lt;a1&gt;4&lt;/a1&gt;]&lt;/s0&gt; Note that you also need to apply the Maven plugin in order to publish to a Maven repository. In this instance, Gradle will generate and upload a &lt;c2&gt;pom.xml&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T050945Z" creationid="huanghaohang" creationdate="20170908T050945Z">
        <seg>当然，你也可以发布到Maven仓库。语法略有不同。&lt;s0&gt;[&lt;a1&gt;4&lt;/a1&gt;]&lt;/s0&gt;请注意，你需要应用Maven插件才能发布到Maven存储库。在这种情况下，Gradle也会生成&lt;c2&gt;pom.xml&lt;/c2&gt;并上传。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can also use these abbreviations with the &lt;c0&gt;-x&lt;/c0&gt; command-line option.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T113349Z" creationid="huanghaohang" creationdate="20170909T113349Z">
        <seg>在使用&lt;c0&gt;-x&lt;/c0&gt;命令行选项时，依然可以使用这些缩写。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can combine multiple plugins in a single project, so you can use the War and Groovy plugins together to build a Groovy based web application. The appropriate groovy libraries will be added to the WAR file for you.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T005441Z" creationid="huanghaohang" creationdate="20170909T005441Z">
        <seg>你可以在单个project中组合多个插件，因此你可以将War和Groovy插件一起使用，构建一个基于Groovy的web应用程序。相应的groovy库也会被加入到WAR文件中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can download one of the Gradle distributions from the &lt;a0&gt;Gradle web site&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T114403Z" creationid="95" creationdate="20170723T114319Z">
        <seg>您可以从&lt;a0&gt;Gradle 官方网站&lt;/a0&gt;上下载Gradle的发行包。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can exclude a task from being executed using the &lt;c0&gt;-x&lt;/c0&gt; command-line option and providing the name of the task to exclude. Let's try this with the sample build file above.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T031945Z" creationid="huanghaohang" creationdate="20170909T031945Z">
        <seg>你可以使用&lt;c0&gt;-x&lt;/c0&gt;命令行选项加上任务名称来排除某些会被执行的任务。让我们用上面的例子来演示一下。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can execute multiple tasks in a single build by listing each of the tasks on the command-line. For example, the command &lt;s0&gt;&lt;c1&gt;gradle compile test&lt;/c1&gt;&lt;/s0&gt; will execute the &lt;c2&gt;compile&lt;/c2&gt; and &lt;c3&gt;test&lt;/c3&gt; tasks. Gradle will execute the tasks in the order that they are listed on the command-line, and will also execute the dependencies for each task. Each task is executed once only, regardless of how it came to be included in the build: whether it was specified on the command-line, or it a dependency of another task, or both. Let's look at an example.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T030834Z" creationid="huanghaohang" creationdate="20170909T030834Z">
        <seg>你可以通过在命令行中列出每个任务来在单个构建中执行多个任务。例如，&lt;s0&gt;&lt;c1&gt;gradle compile test&lt;/c1&gt;&lt;/s0&gt;命令将执行&lt;c2&gt;compile&lt;/c2&gt;和&lt;c3&gt;test&lt;/c3&gt;任务。 Gradle将按照命令行中的顺序依次执行这些任务以及每一个任务所依赖的其他任务。每个任务只会被执行一次，无论它们是如何被包含在构建中的：即无论是在命令行中指定的，还是另一个任务的依赖，抑或两者都有。来看下面的例子。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can find out more about the Groovy plugin in &lt;a0&gt;Chapter 24, &lt;i1&gt;The Groovy Plugin&lt;/i1&gt;&lt;/a0&gt;, and you can find more sample Groovy projects in the &lt;c2&gt;samples/groovy&lt;/c2&gt; directory in the Gradle distribution.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T003542Z" creationid="huanghaohang" creationdate="20170909T003402Z">
        <seg>你可以在《&lt;a0&gt;第二十四章， &lt;i1&gt;Groovy插件&lt;/i1&gt;&lt;/a0&gt;》中了解更多关于Groovy 插件的内容，或在Gradle的 &lt;c2&gt;samples/groovy&lt;/c2&gt;目录中找到更多Groovy 项目示例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can find out more about the War plugin in &lt;a0&gt;Chapter 26, &lt;i1&gt;The War Plugin&lt;/i1&gt;&lt;/a0&gt; and the Jetty plugin in &lt;a2&gt;Chapter 28, &lt;i3&gt;The Jetty Plugin&lt;/i3&gt;&lt;/a2&gt;. You can find more sample Java projects in the &lt;c4&gt;samples/webApplication&lt;/c4&gt; directory in the Gradle distribution.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T010714Z" creationid="huanghaohang" creationdate="20170909T010632Z">
        <seg>你可以在《&lt;a0&gt;第二十六章， &lt;i1&gt;War插件&lt;/i1&gt;&lt;/a0&gt;》在《&lt;a2&gt;第二十八章，&lt;i3&gt;Jetty 插件&lt;/i3&gt;&lt;/a2&gt;》中分别了解更多关于War 及Jetty 插件的内容。并且可以在Gradle的发行包中的&lt;c4&gt;samples/webApplication&lt;/c4&gt;目录中找到更多Java 项目示例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can find out more about the settings file in &lt;a0&gt;Chapter 56, &lt;i1&gt;Multi-project Builds&lt;/i1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T123753Z" creationid="95" creationdate="20170803T123550Z">
        <seg>更多的信息可参阅《&lt;a0&gt;第五十六章，&lt;i1&gt;多项目构建&lt;/i1&gt;&lt;/a0&gt;》。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can find out more in &lt;a0&gt;Chapter 8, &lt;i1&gt;Dependency Management Basics&lt;/i1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T124802Z" creationid="95" creationdate="20170730T124802Z">
        <seg>更多的信息请参阅《&lt;a0&gt;第八章，&lt;i1&gt;依赖管理基础&lt;/i1&gt;&lt;/a0&gt;》</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can obtain more information in the task listing using the &lt;c0&gt;--all&lt;/c0&gt; option. With this option, the task report lists all tasks in the project, grouped by main task, and the dependencies for each task. Here is an example:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T012254Z" creationid="huanghaohang" creationdate="20170910T012010Z">
        <seg>当然你也可以使用&lt;c0&gt;--all&lt;/c0&gt;选项，来获取更多的任务信息。使用此选项时，任务报告将按主要任务以及每一个任务的依赖进行分组，来列出项目中的所有任务。例子如下：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can see from the output of this example, that the &lt;c0&gt;test&lt;/c0&gt; task is not executed, even though it is a dependency of the &lt;c1&gt;dist&lt;/c1&gt; task. You will also notice that the &lt;c2&gt;test&lt;/c2&gt; task's dependencies, such as &lt;c3&gt;compileTest&lt;/c3&gt; are not executed either. Those dependencies of &lt;c4&gt;test&lt;/c4&gt; that are required by another task, such as &lt;c5&gt;compile&lt;/c5&gt;, are still executed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T073608Z" creationid="huanghaohang" creationdate="20170909T073608Z">
        <seg>你可以本例的输出中看出&lt;c0&gt;test&lt;/c0&gt;任务并不执行，即使它被&lt;c1&gt;dist&lt;/c1&gt;任务所依赖。你也可能同时注意到&lt;c2&gt;test&lt;/c2&gt;任务所依赖的任务，如&lt;c3&gt;compileTest&lt;/c3&gt;也一样没有执行。而&lt;c4&gt;test&lt;/c4&gt;所依赖的同时也是另一个任务所需要的任务，如&lt;c5&gt;compile&lt;/c5&gt;，则仍然执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use &lt;s0&gt;&lt;c1&gt;gradle properties&lt;/c1&gt;&lt;/s0&gt; to list the properties of a project. This will allow you to see the properties added by the Java plugin, and their default values.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T132758Z" creationid="95" creationdate="20170730T132619Z">
        <seg>你可以使用 &lt;s0&gt;&lt;c1&gt;gradle properties&lt;/c1&gt;&lt;/s0&gt;来列出一个项目的属性。这个命令会让你看到Java插件所添加的属性以及它们的默认值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can use &lt;s0&gt;&lt;c1&gt;gradle tasks&lt;/c1&gt;&lt;/s0&gt; to list the tasks of a project. This will let you see the tasks that the Java plugin has added to your project.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T013040Z" creationid="95" creationdate="20170730T013011Z">
        <seg>你可以使用 &lt;s0&gt;&lt;c1&gt;gradle tasks&lt;/c1&gt;&lt;/s0&gt; 来列出一个项目的任务，这样就会看到Java插件向项目添加了哪些项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You might argue why not using Java then as the language for build scripts. We think this is a valid question. It would have the highest transparency for your team and the lowest learning curve. But due to limitations of Java such a build language would not be as nice, expressive and powerful as it could be. &lt;s0&gt;[&lt;a1&gt;1&lt;/a1&gt;]&lt;/s0&gt; Languages like Python, Groovy or Ruby do a much better job here. We have chosen Groovy as it offers by far the greatest transparency for Java people. Its base syntax is the same as Java's as well as its type system, its package structure and other things. Groovy builds a lot on top of that. But on a common ground with Java.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T071727Z" creationid="95" creationdate="20170723T070855Z">
        <seg>您可能会想问，为什么不使用Java来作为构建脚本的语言。这确实是一个很好的问题，它的团队透明度最高，并且学习曲线最低。但是由于Java的局限性，这样的一门构建语言就不会像现在的那样好、丰富而强大。&lt;s0&gt;[&lt;a1&gt;1&lt;/a1&gt;]&lt;/s0&gt; 像Python，Groovy或是Ruby这样的语言能够比它更好。我们之所以选择Groovy，是因为它为Java程序员提供了最大的透明度，它的基本语法，类型系统，包结构等都与Java相同。Groovy的底层是与Java相同的，只是在其之上做了许多工作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You run Gradle via the &lt;s0&gt;&lt;s1&gt;gradle&lt;/s1&gt;&lt;/s0&gt; command. To check if Gradle is properly installed just type &lt;s2&gt;&lt;s3&gt;gradle -v&lt;/s3&gt;&lt;/s2&gt;. The output shows Gradle version and also local environment configuration (groovy and JVM version, etc.). The displayed Gradle version should match the distribution you have downloaded.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T115559Z" creationid="95" creationdate="20170723T115238Z">
        <seg>您可以通过&lt;s0&gt;&lt;s1&gt;gradle&lt;/s1&gt;&lt;/s0&gt;命令来运行Gradle。输入&lt;s2&gt;&lt;s3&gt;gradle -v&lt;/s3&gt;&lt;/s2&gt;就可以检查Gradle是否被正确安装。该命令会输出Gradle的版本，以及本地环境的配置（groovy和JVM版本等等）。所显示的Gradle版本应该与您已经安装的发行包相匹配。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You run a Gradle build using the &lt;s0&gt;&lt;s1&gt;gradle&lt;/s1&gt;&lt;/s0&gt; command. The &lt;s2&gt;&lt;s3&gt;gradle&lt;/s3&gt;&lt;/s2&gt; command looks for a file called &lt;c4&gt;build.gradle&lt;/c4&gt; in the current directory. &lt;s5&gt;[&lt;a6&gt;2&lt;/a6&gt;]&lt;/s5&gt; We call this &lt;c7&gt;build.gradle&lt;/c7&gt; file a &lt;e8&gt;build script&lt;/e8&gt;, although strictly speaking it is a build configuration script, as we will see later. The build script defines a project and its tasks.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T144635Z" creationid="95" creationdate="20170724T143923Z">
        <seg>您可以使用 &lt;s0&gt;&lt;s1&gt;gradle&lt;/s1&gt;&lt;/s0&gt; 命令来运行Gradle构建。 &lt;s2&gt;&lt;s3&gt;gradle&lt;/s3&gt;&lt;/s2&gt;命令会在当前目录下查找一个 &lt;c4&gt;build.gradle&lt;/c4&gt; 文件。 &lt;s5&gt;[&lt;a6&gt;2&lt;/a6&gt;]&lt;/s5&gt; 我们把这个 &lt;c7&gt;build.gradle&lt;/c7&gt; 文件称为是一个 &lt;e8&gt;构建脚本&lt;/e8&gt;，尽管严格上来讲，它只是一个构建的配置脚本，我们将会在后面看到。这个构建脚本定义了一个项目和它的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>\--- compile</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T022201Z" creationid="huanghaohang" creationdate="20170910T022201Z">
        <seg>\--- compile</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>\--- org.hamcrest:hamcrest-core:1.3</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T021705Z" creationid="huanghaohang" creationdate="20170910T021705Z">
        <seg>\--- org.hamcrest:hamcrest-core:1.3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>\--- org.hamcrest:hamcrest-core:1.3

------------------------------------------------------------
Project :webapp - The Web application implementation
------------------------------------------------------------

compile
+--- project :api
|    \--- org.codehaus.groovy:groovy-all:2.3.3
\--- commons-io:commons-io:1.2

testCompile
No dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T014138Z" creationid="huanghaohang" creationdate="20170910T014138Z">
        <seg>\--- org.hamcrest:hamcrest-core:1.3

------------------------------------------------------------
Project :webapp - The Web application implementation
------------------------------------------------------------

compile
+--- project :api
|    \--- org.codehaus.groovy:groovy-all:2.3.3
\--- commons-io:commons-io:1.2

testCompile
No dependencies</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ant.checksum(file: file, property: &lt;s1&gt;"cs_$file.name"&lt;/s1&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T023458Z" creationid="95" creationdate="20170729T023458Z">
        <seg>ant.checksum(file: file, property: &lt;s1&gt;"cs_$file.name"&lt;/s1&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ant.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170728T153837Z" creationid="95" creationdate="20170728T153837Z">
        <seg>ant.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ant.loadfile(srcFile: file, property: file.name)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170728T153801Z" creationid="95" creationdate="20170728T153801Z">
        <seg>ant.loadfile(srcFile: file, property: file.name)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>api/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T154455Z" creationid="95" creationdate="20170731T154455Z">
        <seg>api/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>api/build.gradle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T125322Z" creationid="95" creationdate="20170803T125322Z">
        <seg>api/build.gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>api:compile - Compiles the source files
webapp:libs - Builds the JAR [api:libs]</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T012329Z" creationid="huanghaohang" creationdate="20170910T012329Z">
        <seg>api:compile - Compiles the source files
webapp:libs - Builds the JAR [api:libs]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'eclipse'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T153832Z" creationid="95" creationdate="20170731T153832Z">
        <seg>apply plugin: &lt;s0&gt;'eclipse'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'eclipse'&lt;/s0&gt;
apply plugin: &lt;s1&gt;'groovy'&lt;/s1&gt;

repositories {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T002848Z" creationid="huanghaohang" creationdate="20170909T002848Z">
        <seg>apply plugin: &lt;s0&gt;'eclipse'&lt;/s0&gt;
apply plugin: &lt;s1&gt;'groovy'&lt;/s1&gt;

repositories {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'groovy'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T001700Z" creationid="huanghaohang" creationdate="20170909T001700Z">
        <seg>apply plugin: &lt;s0&gt;'groovy'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'java'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T012452Z" creationid="95" creationdate="20170730T012452Z">
        <seg>apply plugin: &lt;s0&gt;'java'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'java'&lt;/s0&gt;

repositories {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170908T013229Z" creationid="haohang" creationdate="20170908T013229Z">
        <seg>apply plugin: &lt;s0&gt;'java'&lt;/s0&gt;

repositories {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'java'&lt;/s0&gt;
apply plugin: &lt;s1&gt;'eclipse'&lt;/s1&gt;

sourceCompatibility = &lt;s2&gt;1.5&lt;/s2&gt;
version = &lt;s3&gt;'1.0'&lt;/s3&gt;
jar {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T154051Z" creationid="95" creationdate="20170731T154051Z">
        <seg>apply plugin: &lt;s0&gt;'java'&lt;/s0&gt;
apply plugin: &lt;s1&gt;'eclipse'&lt;/s1&gt;

sourceCompatibility = &lt;s2&gt;1.5&lt;/s2&gt;
version = &lt;s3&gt;'1.0'&lt;/s3&gt;
jar {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'jetty'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T005600Z" creationid="huanghaohang" creationdate="20170909T005600Z">
        <seg>apply plugin: &lt;s0&gt;'jetty'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'maven'&lt;/s0&gt;

uploadArchives {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T051003Z" creationid="huanghaohang" creationdate="20170908T051003Z">
        <seg>apply plugin: &lt;s0&gt;'maven'&lt;/s0&gt;

uploadArchives {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s0&gt;'war'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T004620Z" creationid="huanghaohang" creationdate="20170909T004620Z">
        <seg>apply plugin: &lt;s0&gt;'war'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>apply plugin: &lt;s1&gt;'eclipse-wtp'&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T124424Z" creationid="95" creationdate="20170803T124424Z">
        <seg>apply plugin: &lt;s1&gt;'eclipse-wtp'&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>archives dist
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T125724Z" creationid="95" creationdate="20170803T125724Z">
        <seg>archives dist
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>artifact_dependencies_tutorial.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T080751Z" creationid="95" creationdate="20170723T080751Z">
        <seg>artifact_dependencies_tutorial.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>artifact_management.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T051025Z" creationid="huanghaohang" creationdate="20170908T051025Z">
        <seg>artifact_management.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>assemble</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T014424Z" creationid="95" creationdate="20170730T014424Z">
        <seg>assemble</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>attributes &lt;s2&gt;'Implementation-Title'&lt;/s2&gt;: &lt;s3&gt;'Gradle Quickstart'&lt;/s3&gt;, &lt;s4&gt;'Implementation-Version'&lt;/s4&gt;: version</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T132607Z" creationid="95" creationdate="20170730T132607Z">
        <seg>attributes &lt;s2&gt;'Implementation-Title'&lt;/s2&gt;: &lt;s3&gt;'Gradle Quickstart'&lt;/s3&gt;, &lt;s4&gt;'Implementation-Version'&lt;/s4&gt;: version</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>attributes &lt;s4&gt;'Implementation-Title'&lt;/s4&gt;: &lt;s5&gt;'Gradle Quickstart'&lt;/s5&gt;, &lt;s6&gt;'Implementation-Version'&lt;/s6&gt;: version</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T154055Z" creationid="95" creationdate="20170731T154055Z">
        <seg>attributes &lt;s4&gt;'Implementation-Title'&lt;/s4&gt;: &lt;s5&gt;'Gradle Quickstart'&lt;/s5&gt;, &lt;s6&gt;'Implementation-Version'&lt;/s6&gt;: version</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>base.css</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072245Z" creationid="haohang" creationdate="20170720T072245Z">
        <seg>base.css</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>build.gradle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T144943Z" creationid="95" creationdate="20170724T144943Z">
        <seg>build.gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>build_lifecycle.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T024253Z" creationid="95" creationdate="20170729T024253Z">
        <seg>build_lifecycle.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>check</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T014613Z" creationid="95" creationdate="20170730T014613Z">
        <seg>check</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>clean</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T014334Z" creationid="95" creationdate="20170730T014334Z">
        <seg>clean</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compile</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T032551Z" creationid="huanghaohang" creationdate="20170908T032551Z">
        <seg>compile</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compile &lt;s0&gt;'org.codehaus.groovy:groovy-all:2.3.3'&lt;/s0&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T002755Z" creationid="huanghaohang" creationdate="20170909T002755Z">
        <seg>compile &lt;s0&gt;'org.codehaus.groovy:groovy-all:2.3.3'&lt;/s0&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compile &lt;s0&gt;'org.hibernate:hibernate-core:3.6.7.Final'&lt;/s0&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T043910Z" creationid="huanghaohang" creationdate="20170908T043910Z">
        <seg>compile &lt;s0&gt;'org.hibernate:hibernate-core:3.6.7.Final'&lt;/s0&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compile &lt;s2&gt;'org.codehaus.groovy:groovy-all:2.3.3'&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T002852Z" creationid="huanghaohang" creationdate="20170909T002852Z">
        <seg>compile &lt;s2&gt;'org.codehaus.groovy:groovy-all:2.3.3'&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compile group: &lt;s0&gt;'commons-collections'&lt;/s0&gt;, name: &lt;s1&gt;'commons-collections'&lt;/s1&gt;, version: &lt;s2&gt;'3.2'&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T124733Z" creationid="95" creationdate="20170730T124733Z">
        <seg>compile group: &lt;s0&gt;'commons-collections'&lt;/s0&gt;, name: &lt;s1&gt;'commons-collections'&lt;/s1&gt;, version: &lt;s2&gt;'3.2'&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compile group: &lt;s0&gt;'org.hibernate'&lt;/s0&gt;, name: &lt;s1&gt;'hibernate-core'&lt;/s1&gt;, version: &lt;s2&gt;'3.6.7.Final'&lt;/s2&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T043324Z" creationid="huanghaohang" creationdate="20170908T043324Z">
        <seg>compile group: &lt;s0&gt;'org.hibernate'&lt;/s0&gt;, name: &lt;s1&gt;'hibernate-core'&lt;/s1&gt;, version: &lt;s2&gt;'3.6.7.Final'&lt;/s2&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compile group: &lt;s1&gt;'org.hibernate'&lt;/s1&gt;, name: &lt;s2&gt;'hibernate-core'&lt;/s2&gt;, version: &lt;s3&gt;'3.6.7.Final'&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170908T013231Z" creationid="haohang" creationdate="20170908T013231Z">
        <seg>compile group: &lt;s1&gt;'org.hibernate'&lt;/s1&gt;, name: &lt;s2&gt;'hibernate-core'&lt;/s2&gt;, version: &lt;s3&gt;'3.6.7.Final'&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compile group: &lt;s7&gt;'commons-collections'&lt;/s7&gt;, name: &lt;s8&gt;'commons-collections'&lt;/s8&gt;, version: &lt;s9&gt;'3.2'&lt;/s9&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T154113Z" creationid="95" creationdate="20170731T154113Z">
        <seg>compile group: &lt;s7&gt;'commons-collections'&lt;/s7&gt;, name: &lt;s8&gt;'commons-collections'&lt;/s8&gt;, version: &lt;s9&gt;'3.2'&lt;/s9&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>compile project(&lt;s0&gt;':shared'&lt;/s0&gt;)
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T125332Z" creationid="95" creationdate="20170803T125332Z">
        <seg>compile project(&lt;s0&gt;':shared'&lt;/s0&gt;)
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>credentials {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T050447Z" creationid="huanghaohang" creationdate="20170908T050447Z">
        <seg>credentials {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>def files = file(&lt;s0&gt;'../antLoadfileResources'&lt;/s0&gt;).listFiles().sort()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170728T153757Z" creationid="95" creationdate="20170728T153757Z">
        <seg>def files = file(&lt;s0&gt;'../antLoadfileResources'&lt;/s0&gt;).listFiles().sort()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>defaultTasks &lt;s0&gt;'clean'&lt;/s0&gt;, &lt;s1&gt;'run'&lt;/s1&gt;

task clean &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T023908Z" creationid="95" creationdate="20170729T023908Z">
        <seg>defaultTasks &lt;s0&gt;'clean'&lt;/s0&gt;, &lt;s1&gt;'run'&lt;/s1&gt;

task clean &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependencies {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T124732Z" creationid="95" creationdate="20170730T124732Z">
        <seg>dependencies {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependency_management.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T051123Z" creationid="huanghaohang" creationdate="20170908T051123Z">
        <seg>dependency_management.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependency_management.html#sec:how_to_declare_your_dependencies</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T043915Z" creationid="huanghaohang" creationdate="20170908T043915Z">
        <seg>dependency_management.html#sec:how_to_declare_your_dependencies</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependency_management.html#sec:repositories</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T045955Z" creationid="huanghaohang" creationdate="20170908T045955Z">
        <seg>dependency_management.html#sec:repositories</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependency_management.html#sub:configurations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T042746Z" creationid="huanghaohang" creationdate="20170908T042746Z">
        <seg>dependency_management.html#sub:configurations</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dependsOn spiJar</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T125717Z" creationid="95" creationdate="20170803T125717Z">
        <seg>dependsOn spiJar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>description = &lt;s0&gt;'Builds the distribution'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T012005Z" creationid="huanghaohang" creationdate="20170910T012005Z">
        <seg>description = &lt;s0&gt;'Builds the distribution'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>description = &lt;s0&gt;'The shared API for the application'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T011419Z" creationid="huanghaohang" creationdate="20170910T011419Z">
        <seg>description = &lt;s0&gt;'The shared API for the application'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dirs &lt;s0&gt;'repos'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T153709Z" creationid="95" creationdate="20170731T153709Z">
        <seg>dirs &lt;s0&gt;'repos'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dirs &lt;s15&gt;'repos'&lt;/s15&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T154119Z" creationid="95" creationdate="20170731T154119Z">
        <seg>dirs &lt;s15&gt;'repos'&lt;/s15&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>distributions {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170728T012114Z" creationid="haohang" creationdate="20170728T012114Z">
        <seg>distributions {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>dists {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T012004Z" creationid="huanghaohang" creationdate="20170910T012004Z">
        <seg>dists {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>doLast {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T144949Z" creationid="95" creationdate="20170724T144949Z">
        <seg>doLast {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>docs - Builds the documentation
api:libs - Builds the JAR</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T012328Z" creationid="huanghaohang" creationdate="20170910T012328Z">
        <seg>docs - Builds the documentation
api:libs - Builds the JAR</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>docs.css</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072245Z" creationid="haohang" creationdate="20170720T072245Z">
        <seg>docs.css</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>eclipse_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T153833Z" creationid="95" creationdate="20170731T153833Z">
        <seg>eclipse_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ext.myProperty = &lt;s0&gt;"myValue"&lt;/s0&gt;
}

task printTaskProperties &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T141959Z" creationid="95" creationdate="20170727T141959Z">
        <seg>ext.myProperty = &lt;s0&gt;"myValue"&lt;/s0&gt;
}

task printTaskProperties &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>file(dir).listFiles({file -&gt; file.isFile() } as FileFilter).sort()
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T023513Z" creationid="95" creationdate="20170729T023513Z">
        <seg>file(dir).listFiles({file -&gt; file.isFile() } as FileFilter).sort()
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>fileList(&lt;s0&gt;'../antLoadfileResources'&lt;/s0&gt;).each {File file -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T023457Z" creationid="95" creationdate="20170729T023457Z">
        <seg>fileList(&lt;s0&gt;'../antLoadfileResources'&lt;/s0&gt;).each {File file -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>fileList(&lt;s4&gt;'../antLoadfileResources'&lt;/s4&gt;).each {File file -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T023509Z" creationid="95" creationdate="20170729T023509Z">
        <seg>fileList(&lt;s4&gt;'../antLoadfileResources'&lt;/s4&gt;).each {File file -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>files.each { File file -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170728T153759Z" creationid="95" creationdate="20170728T153759Z">
        <seg>files.each { File file -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>flatDir {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T153706Z" creationid="95" creationdate="20170731T153706Z">
        <seg>flatDir {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from &lt;s0&gt;'src/dist'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T125718Z" creationid="95" creationdate="20170803T125718Z">
        <seg>from &lt;s0&gt;'src/dist'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from configurations.runtime</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T125721Z" creationid="95" creationdate="20170803T125721Z">
        <seg>from configurations.runtime</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>from spiJar.archivePath</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T125720Z" creationid="95" creationdate="20170803T125720Z">
        <seg>from spiJar.archivePath</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>gradle_command_line.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T030916Z" creationid="95" creationdate="20170729T030916Z">
        <seg>gradle_command_line.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>gradle_daemon.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T121208Z" creationid="95" creationdate="20170723T121208Z">
        <seg>gradle_daemon.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>groovy_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T003353Z" creationid="huanghaohang" creationdate="20170909T003353Z">
        <seg>groovy_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>group = &lt;s1&gt;'build'&lt;/s1&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T012009Z" creationid="huanghaohang" creationdate="20170910T012009Z">
        <seg>group = &lt;s1&gt;'build'&lt;/s1&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://forums.gradle.org</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T121536Z" creationid="95" creationdate="20170723T121536Z">
        <seg>http://forums.gradle.org</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.defmacro.org/ramblings/lisp.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T072133Z" creationid="95" creationdate="20170723T072133Z">
        <seg>http://www.defmacro.org/ramblings/lisp.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.gradle.org/contribute</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T142045Z" creationid="95" creationdate="20170721T142045Z">
        <seg>http://www.gradle.org/contribute</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.gradle.org/development</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T114844Z" creationid="95" creationdate="20170723T114844Z">
        <seg>http://www.gradle.org/development</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.gradle.org/downloads</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T114310Z" creationid="95" creationdate="20170723T114310Z">
        <seg>http://www.gradle.org/downloads</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>http://www.gradle.org/license</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T065552Z" creationid="95" creationdate="20170723T065552Z">
        <seg>http://www.gradle.org/license</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>img/commandLineTutorialTasks.png</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T031101Z" creationid="huanghaohang" creationdate="20170909T031101Z">
        <seg>img/commandLineTutorialTasks.png</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>img/profile.png</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T031314Z" creationid="huanghaohang" creationdate="20170910T031314Z">
        <seg>img/profile.png</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>include &lt;s0&gt;"shared"&lt;/s0&gt;, &lt;s1&gt;"api"&lt;/s1&gt;, &lt;s2&gt;"services:webservice"&lt;/s2&gt;, &lt;s3&gt;"services:shared"&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T123539Z" creationid="95" creationdate="20170803T123539Z">
        <seg>include &lt;s0&gt;"shared"&lt;/s0&gt;, &lt;s1&gt;"api"&lt;/s1&gt;, &lt;s2&gt;"services:webservice"&lt;/s2&gt;, &lt;s3&gt;"services:shared"&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>installation.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T072426Z" creationid="95" creationdate="20170723T072426Z">
        <seg>installation.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>into(&lt;s1&gt;'libs'&lt;/s1&gt;) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T125719Z" creationid="95" creationdate="20170803T125719Z">
        <seg>into(&lt;s1&gt;'libs'&lt;/s1&gt;) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>introduction.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072249Z" creationid="haohang" creationdate="20170720T072249Z">
        <seg>introduction.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>introduction.html#N10048</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072433Z" creationid="haohang" creationdate="20170720T072433Z">
        <seg>introduction.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ivy {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T044949Z" creationid="huanghaohang" creationdate="20170908T044949Z">
        <seg>ivy {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>jar {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T124429Z" creationid="95" creationdate="20170803T124429Z">
        <seg>jar {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>java_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T130000Z" creationid="95" creationdate="20170803T130000Z">
        <seg>java_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>java_plugin.html#tab:configurations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T032333Z" creationid="huanghaohang" creationdate="20170908T032333Z">
        <seg>java_plugin.html#tab:configurations</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>jetty_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T010149Z" creationid="huanghaohang" creationdate="20170909T010149Z">
        <seg>jetty_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>logging.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T145142Z" creationid="95" creationdate="20170724T145142Z">
        <seg>logging.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>manifest {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T132604Z" creationid="95" creationdate="20170730T132604Z">
        <seg>manifest {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>manifest.attributes provider: &lt;s4&gt;'gradle'&lt;/s4&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T124430Z" creationid="95" creationdate="20170803T124430Z">
        <seg>manifest.attributes provider: &lt;s4&gt;'gradle'&lt;/s4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>manufactured viewport for HTML img</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T031313Z" creationid="huanghaohang" creationdate="20170910T031313Z">
        <seg>为HTML img制作的viewport</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>maven {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T044839Z" creationid="huanghaohang" creationdate="20170908T044839Z">
        <seg>maven {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>mavenCentral()</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T124426Z" creationid="95" creationdate="20170803T124426Z">
        <seg>mavenCentral()
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>mavenCentral()
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T124333Z" creationid="95" creationdate="20170730T124333Z">
        <seg>mavenCentral()
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>mavenCentral()
}

dependencies {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T154112Z" creationid="95" creationdate="20170731T154112Z">
        <seg>mavenCentral()
}

dependencies {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>mavenDeployer {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T051008Z" creationid="huanghaohang" creationdate="20170908T051008Z">
        <seg>mavenDeployer {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>more_about_tasks.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T030624Z" creationid="95" creationdate="20170729T030624Z">
        <seg>more_about_tasks.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>more_about_tasks.html#sec:adding_dependencies_to_tasks</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T160405Z" creationid="95" creationdate="20170726T160405Z">
        <seg>more_about_tasks.html#sec:adding_dependencies_to_tasks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>multi_project_builds.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T123549Z" creationid="95" creationdate="20170803T123549Z">
        <seg>multi_project_builds.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>multi_project_builds.html#disable_dependency_projects</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T125334Z" creationid="95" creationdate="20170803T125334Z">
        <seg>multi_project_builds.html#disable_dependency_projects</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>multiproject/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T154455Z" creationid="95" creationdate="20170731T154455Z">
        <seg>multiproject/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>or</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155848Z" creationid="95" creationdate="20170726T155848Z">
        <seg>或者</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>organizing_build_logic.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T023517Z" creationid="95" creationdate="20170729T023517Z">
        <seg>organizing_build_logic.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>overview.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072441Z" creationid="haohang" creationdate="20170720T072441Z">
        <seg>overview.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>overview.html#sec:special_feature_of_gradle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072444Z" creationid="haohang" creationdate="20170720T072444Z">
        <seg>overview.html#sec:special_feature_of_gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>overview.html#sec:why_groovy</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072449Z" creationid="haohang" creationdate="20170720T072449Z">
        <seg>overview.html#sec:why_groovy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>password &lt;s1&gt;"pw"&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T050453Z" creationid="huanghaohang" creationdate="20170908T050453Z">
        <seg>password &lt;s1&gt;"pw"&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>pmd_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T135423Z" creationid="95" creationdate="20170721T135423Z">
        <seg>-pmd_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s0&gt;"We build the zip with version=$version"&lt;/s0&gt;
}

task release(dependsOn: &lt;s1&gt;'distribution'&lt;/s1&gt;) &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T025304Z" creationid="95" creationdate="20170729T025304Z">
        <seg>println &lt;s0&gt;"We build the zip with version=$version"&lt;/s0&gt;
}

task release(dependsOn: &lt;s1&gt;'distribution'&lt;/s1&gt;) &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s0&gt;"using build file '$buildFile.name' in '$buildFile.parentFile.name'."&lt;/s0&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T114014Z" creationid="huanghaohang" creationdate="20170909T114014Z">
        <seg>println &lt;s0&gt;"using build file '$buildFile.name' in '$buildFile.parentFile.name'."&lt;/s0&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s0&gt;'Hello Earth'&lt;/s0&gt;
}
hello.doFirst {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T133109Z" creationid="95" creationdate="20170727T133109Z">
        <seg>println &lt;s0&gt;'Hello Earth'&lt;/s0&gt;
}
hello.doFirst {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s0&gt;'Hello world!'&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T144950Z" creationid="95" creationdate="20170724T144950Z">
        <seg>println &lt;s0&gt;'Hello world!'&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s0&gt;'Hello world!'&lt;/s0&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155317Z" creationid="95" creationdate="20170726T155317Z">
        <seg>println &lt;s0&gt;'Hello world!'&lt;/s0&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s0&gt;'Hello world!'&lt;/s0&gt;
}
hello.doLast {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T141337Z" creationid="95" creationdate="20170727T141337Z">
        <seg>println &lt;s0&gt;'Hello world!'&lt;/s0&gt;
}
hello.doLast {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s0&gt;'Hello world!'&lt;/s0&gt;
}
task intro(dependsOn: hello) &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T160117Z" creationid="95" creationdate="20170726T160117Z">
        <seg>println &lt;s0&gt;'Hello world!'&lt;/s0&gt;
}
task intro(dependsOn: hello) &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s0&gt;'compiling source'&lt;/s0&gt;
}

task compileTest(dependsOn: compile) &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T031126Z" creationid="huanghaohang" creationdate="20170909T031126Z">
        <seg>println &lt;s0&gt;'compiling source'&lt;/s0&gt;
}

task compileTest(dependsOn: compile) &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s1&gt;"Greetings from the $hello.name task."&lt;/s1&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T141341Z" creationid="95" creationdate="20170727T141341Z">
        <seg>println &lt;s1&gt;"Greetings from the $hello.name task."&lt;/s1&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s1&gt;"I'm Gradle"&lt;/s1&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T160119Z" creationid="95" creationdate="20170726T160119Z">
        <seg>println &lt;s1&gt;"I'm Gradle"&lt;/s1&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s1&gt;"I'm task number $counter"&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T132726Z" creationid="95" creationdate="20170727T132726Z">
        <seg>println &lt;s1&gt;"I'm task number $counter"&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s1&gt;"Original: "&lt;/s1&gt; + someString</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155826Z" creationid="95" creationdate="20170726T155826Z">
        <seg>println &lt;s1&gt;"Original: "&lt;/s1&gt; + someString</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s1&gt;'Hello Venus'&lt;/s1&gt;
}
hello.doLast {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T133111Z" creationid="95" creationdate="20170727T133111Z">
        <seg>println &lt;s1&gt;'Hello Venus'&lt;/s1&gt;
}
hello.doLast {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s1&gt;'compiling unit tests'&lt;/s1&gt;
}

task test(dependsOn: [compile, compileTest]) &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T031134Z" creationid="huanghaohang" creationdate="20170909T031134Z">
        <seg>println &lt;s1&gt;'compiling unit tests'&lt;/s1&gt;
}

task test(dependsOn: [compile, compileTest]) &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s1&gt;'taskX'&lt;/s1&gt;
}
task taskY &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T160344Z" creationid="95" creationdate="20170726T160344Z">
        <seg>println &lt;s1&gt;'taskX'&lt;/s1&gt;
}
task taskY &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s2&gt;" *** $file.name ***"&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170728T153803Z" creationid="95" creationdate="20170728T153803Z">
        <seg>println &lt;s2&gt;" *** $file.name ***"&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s2&gt;"$file.name Checksum: ${ant.properties["&lt;/s2&gt;cs_$file.name&lt;s3&gt;"]}"&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T023459Z" creationid="95" creationdate="20170729T023459Z">
        <seg>println &lt;s2&gt;"$file.name Checksum: ${ant.properties["&lt;/s2&gt;cs_$file.name&lt;s3&gt;"]}"&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s2&gt;"Upper case: "&lt;/s2&gt; + someString.toUpperCase()
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155827Z" creationid="95" creationdate="20170726T155827Z">
        <seg>println &lt;s2&gt;"Upper case: "&lt;/s2&gt; + someString.toUpperCase()
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s2&gt;'Default Cleaning!'&lt;/s2&gt;
}

task run &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T023909Z" creationid="95" creationdate="20170729T023909Z">
        <seg>println &lt;s2&gt;'Default Cleaning!'&lt;/s2&gt;
}

task run &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s2&gt;'Hello Mars'&lt;/s2&gt;
}
hello &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T133111Z" creationid="95" creationdate="20170727T133111Z">
        <seg>println &lt;s2&gt;'Hello Mars'&lt;/s2&gt;
}
hello &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s2&gt;'We release now'&lt;/s2&gt;
}

gradle.taskGraph.whenReady {taskGraph -&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T025305Z" creationid="95" creationdate="20170729T025305Z">
        <seg>println &lt;s2&gt;'We release now'&lt;/s2&gt;
}

gradle.taskGraph.whenReady {taskGraph -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s2&gt;'running unit tests'&lt;/s2&gt;
}

task dist(dependsOn: [compile, test]) &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T031144Z" creationid="huanghaohang" creationdate="20170909T031144Z">
        <seg>println &lt;s2&gt;'running unit tests'&lt;/s2&gt;
}

task dist(dependsOn: [compile, test]) &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s2&gt;'taskY'&lt;/s2&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T160347Z" creationid="95" creationdate="20170726T160347Z">
        <seg>println &lt;s2&gt;'taskY'&lt;/s2&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s3&gt;"${ant.properties[file.name]}"&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170728T153804Z" creationid="95" creationdate="20170728T153804Z">
        <seg>println &lt;s3&gt;"${ant.properties[file.name]}"&lt;/s3&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s3&gt;'Default Running!'&lt;/s3&gt;
}

task other &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T023910Z" creationid="95" creationdate="20170729T023910Z">
        <seg>println &lt;s3&gt;'Default Running!'&lt;/s3&gt;
}

task other &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s3&gt;'Hello Jupiter'&lt;/s3&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T133114Z" creationid="95" creationdate="20170727T133114Z">
        <seg>println &lt;s3&gt;'Hello Jupiter'&lt;/s3&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s3&gt;'building the distribution'&lt;/s3&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T031146Z" creationid="huanghaohang" creationdate="20170909T031146Z">
        <seg>println &lt;s3&gt;'building the distribution'&lt;/s3&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s4&gt;"I'm not a default task!"&lt;/s4&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T023912Z" creationid="95" creationdate="20170729T023912Z">
        <seg>println &lt;s4&gt;"I'm not a default task!"&lt;/s4&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println &lt;s5&gt;"I'm fond of $file.name"&lt;/s5&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T023512Z" creationid="95" creationdate="20170729T023512Z">
        <seg>println &lt;s5&gt;"I'm fond of $file.name"&lt;/s5&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>println myTask.myProperty
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T142000Z" creationid="95" creationdate="20170727T142000Z">
        <seg>println myTask.myProperty
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>project_reports_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T010752Z" creationid="huanghaohang" creationdate="20170910T010752Z">
        <seg>project_reports_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>repositories {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T124331Z" creationid="95" creationdate="20170730T124331Z">
        <seg>repositories {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>repository(url: &lt;s1&gt;"file://localhost/tmp/myRepo/"&lt;/s1&gt;)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T051022Z" creationid="huanghaohang" creationdate="20170908T051022Z">
        <seg>repository(url: &lt;s1&gt;"file://localhost/tmp/myRepo/"&lt;/s1&gt;)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>runtime</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T032917Z" creationid="huanghaohang" creationdate="20170908T032917Z">
        <seg>runtime</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>services/webservice/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T154456Z" creationid="95" creationdate="20170731T154456Z">
        <seg>services/webservice/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>settings.gradle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T123538Z" creationid="95" creationdate="20170803T123538Z">
        <seg>settings.gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>shared/</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T154458Z" creationid="95" creationdate="20170731T154458Z">
        <seg>shared/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>sourceCompatibility = &lt;s0&gt;1.5&lt;/s0&gt;
version = &lt;s1&gt;'1.0'&lt;/s1&gt;
jar {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T132603Z" creationid="95" creationdate="20170730T132603Z">
        <seg>sourceCompatibility = &lt;s0&gt;1.5&lt;/s0&gt;
version = &lt;s1&gt;'1.0'&lt;/s1&gt;
jar {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>subdir/myproject.gradle</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T114013Z" creationid="huanghaohang" creationdate="20170909T114013Z">
        <seg>subdir/myproject.gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>subprojects {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T124423Z" creationid="95" creationdate="20170803T124423Z">
        <seg>subprojects {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>systemProperties &lt;s0&gt;'property'&lt;/s0&gt;: &lt;s1&gt;'value'&lt;/s1&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T150120Z" creationid="95" creationdate="20170731T150120Z">
        <seg>systemProperties &lt;s0&gt;'property'&lt;/s0&gt;: &lt;s1&gt;'value'&lt;/s1&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>systemProperties &lt;s13&gt;'property'&lt;/s13&gt;: &lt;s14&gt;'value'&lt;/s14&gt;
}

uploadArchives {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T154116Z" creationid="95" creationdate="20170731T154116Z">
        <seg>systemProperties &lt;s13&gt;'property'&lt;/s13&gt;: &lt;s14&gt;'value'&lt;/s14&gt;
}

uploadArchives {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task &lt;s0&gt;"task$counter"&lt;/s0&gt; &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T132725Z" creationid="95" creationdate="20170727T132725Z">
        <seg>task &lt;s0&gt;"task$counter"&lt;/s0&gt; &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task checksum &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T023456Z" creationid="95" creationdate="20170729T023456Z">
        <seg>task checksum &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task compile &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T031121Z" creationid="huanghaohang" creationdate="20170909T031121Z">
        <seg>task compile &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task count &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155856Z" creationid="95" creationdate="20170726T155856Z">
        <seg>task count &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task dist(type: Zip) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T125717Z" creationid="95" creationdate="20170803T125717Z">
        <seg>task dist(type: Zip) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task distribution &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T025303Z" creationid="95" creationdate="20170729T025303Z">
        <seg>task distribution &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task hello &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155315Z" creationid="95" creationdate="20170726T155315Z">
        <seg>task hello &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task hello {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T144945Z" creationid="95" creationdate="20170724T144945Z">
        <seg>task hello {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task loadfile &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170728T153755Z" creationid="95" creationdate="20170728T153755Z">
        <seg>task loadfile &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task myTask {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T141958Z" creationid="95" creationdate="20170727T141958Z">
        <seg>task myTask {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task taskX(dependsOn: &lt;s0&gt;'taskY'&lt;/s0&gt;) &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T160338Z" creationid="95" creationdate="20170726T160338Z">
        <seg>task taskX(dependsOn: &lt;s0&gt;'taskY'&lt;/s0&gt;) &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>task upper &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170726T155757Z" creationid="95" creationdate="20170726T155757Z">
        <seg>task upper &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>test {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T150115Z" creationid="95" creationdate="20170731T150115Z">
        <seg>test {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>testCompile</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T035005Z" creationid="huanghaohang" creationdate="20170908T035005Z">
        <seg>testCompile</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>testCompile &lt;s2&gt;'junit:junit:4.11'&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T124427Z" creationid="95" creationdate="20170803T124427Z">
        <seg>testCompile &lt;s0&gt;'junit:junit:4.11'&lt;/s0&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>testCompile &lt;s3&gt;'junit:junit:4.11'&lt;/s3&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T002855Z" creationid="huanghaohang" creationdate="20170909T002855Z">
        <seg>testCompile &lt;s3&gt;'junit:junit:4.11'&lt;/s3&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>testCompile group: &lt;s10&gt;'junit'&lt;/s10&gt;, name: &lt;s11&gt;'junit'&lt;/s11&gt;, version: &lt;s12&gt;'4.+'&lt;/s12&gt;
}

test {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T154115Z" creationid="95" creationdate="20170731T154115Z">
        <seg>testCompile group: &lt;s10&gt;'junit'&lt;/s10&gt;, name: &lt;s11&gt;'junit'&lt;/s11&gt;, version: &lt;s12&gt;'4.+'&lt;/s12&gt;
}

test {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>testCompile group: &lt;s3&gt;'junit'&lt;/s3&gt;, name: &lt;s4&gt;'junit'&lt;/s4&gt;, version: &lt;s5&gt;'4.+'&lt;/s5&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170730T124734Z" creationid="95" creationdate="20170730T124734Z">
        <seg>testCompile group: &lt;s3&gt;'junit'&lt;/s3&gt;, name: &lt;s4&gt;'junit'&lt;/s4&gt;, version: &lt;s5&gt;'4.+'&lt;/s5&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>testCompile group: &lt;s4&gt;'junit'&lt;/s4&gt;, name: &lt;s5&gt;'junit'&lt;/s5&gt;, version: &lt;s6&gt;'4.+'&lt;/s6&gt;
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170908T013235Z" creationid="haohang" creationdate="20170908T013235Z">
        <seg>testCompile group: &lt;s4&gt;'junit'&lt;/s4&gt;, name: &lt;s5&gt;'junit'&lt;/s5&gt;, version: &lt;s6&gt;'4.+'&lt;/s6&gt;
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>testRuntime</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T035202Z" creationid="huanghaohang" creationdate="20170908T035202Z">
        <seg>testRuntime</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>troubleshooting.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T081148Z" creationid="95" creationdate="20170723T081148Z">
        <seg>troubleshooting.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_gradle_command_line.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T004254Z" creationid="huanghaohang" creationdate="20170909T004254Z">
        <seg>tutorial_gradle_command_line.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_gradle_gui.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T030122Z" creationid="huanghaohang" creationdate="20170909T030122Z">
        <seg>tutorial_gradle_gui.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_groovy_projects.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T080836Z" creationid="95" creationdate="20170723T080836Z">
        <seg>tutorial_groovy_projects.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_java_projects.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T072818Z" creationid="95" creationdate="20170723T072818Z">
        <seg>tutorial_java_projects.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_using_tasks.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T072622Z" creationid="95" creationdate="20170723T072622Z">
        <seg>tutorial_using_tasks.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorial_using_tasks.html#sec:shortcut_notations</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T132111Z" creationid="95" creationdate="20170727T132111Z">
        <seg>tutorial_using_tasks.html#sec:shortcut_notations</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorials.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170721T141647Z" creationid="95" creationdate="20170721T141647Z">
        <seg>tutorials.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>tutorials.html#N100CE</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170801T014537Z" creationid="haohang" creationdate="20170801T014537Z">
        <seg>tutorials.html#N100CE</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>uploadArchives {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T153705Z" creationid="95" creationdate="20170731T153705Z">
        <seg>uploadArchives {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>url &lt;s0&gt;"http://repo.mycompany.com/maven2"&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T044841Z" creationid="huanghaohang" creationdate="20170908T044841Z">
        <seg>url &lt;s0&gt;"http://repo.mycompany.com/maven2"&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>url &lt;s0&gt;"http://repo.mycompany.com/repo"&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T044954Z" creationid="huanghaohang" creationdate="20170908T044954Z">
        <seg>url &lt;s0&gt;"http://repo.mycompany.com/repo"&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>url &lt;s1&gt;"../local-repo"&lt;/s1&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T045148Z" creationid="huanghaohang" creationdate="20170908T045148Z">
        <seg>url &lt;s1&gt;"../local-repo"&lt;/s1&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>url &lt;s2&gt;"http://repo.mycompany.com"&lt;/s2&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T050456Z" creationid="huanghaohang" creationdate="20170908T050456Z">
        <seg>url &lt;s2&gt;"http://repo.mycompany.com"&lt;/s2&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>userguide.css</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072246Z" creationid="haohang" creationdate="20170720T072246Z">
        <seg>userguide.css</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>userguide.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="haohang" changedate="20170720T072248Z" creationid="haohang" creationdate="20170720T072248Z">
        <seg>userguide.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>username &lt;s0&gt;"username"&lt;/s0&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170908T050451Z" creationid="huanghaohang" creationdate="20170908T050451Z">
        <seg>username &lt;s0&gt;"username"&lt;/s0&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>version = &lt;s3&gt;'1.0'&lt;/s3&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T124428Z" creationid="95" creationdate="20170803T124428Z">
        <seg>version = &lt;s4&gt;'1.0'&lt;/s4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>version = &lt;s4&gt;'1.0'&lt;/s4&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T025308Z" creationid="95" creationdate="20170729T025308Z">
        <seg>version = &lt;s4&gt;'1.0'&lt;/s4&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>version = &lt;s6&gt;'1.0-SNAPSHOT'&lt;/s6&gt;</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T025311Z" creationid="95" creationdate="20170729T025311Z">
        <seg>version = &lt;s6&gt;'1.0-SNAPSHOT'&lt;/s6&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>war_plugin.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170909T010147Z" creationid="huanghaohang" creationdate="20170909T010147Z">
        <seg>war_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>web_project_tutorial.html</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170723T080955Z" creationid="95" creationdate="20170723T080955Z">
        <seg>web_project_tutorial.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>webapp:compile - Compiles the source files

Build Setup tasks
-----------------
init - Initializes a new Gradle build. [incubating]
wrapper - Generates Gradle wrapper files. [incubating]

Help tasks
----------
dependencies - Displays all dependencies declared in root project 'projectReports'.
api:dependencies - Displays all dependencies declared in project ':api'.
webapp:dependencies - Displays all dependencies declared in project ':webapp'.
dependencyInsight - Displays the insight into a specific dependency in root project 'projectReports'.
api:dependencyInsight - Displays the insight into a specific dependency in project ':api'.
webapp:dependencyInsight - Displays the insight into a specific dependency in project ':webapp'.
help - Displays a help message
api:help - Displays a help message
webapp:help - Displays a help message
projects - Displays the sub-projects of root project 'projectReports'.
api:projects - Displays the sub-projects of project ':api'.
webapp:projects - Displays the sub-projects of project ':webapp'.
properties - Displays the properties of root project 'projectReports'.
api:properties - Displays the properties of project ':api'.
webapp:properties - Displays the properties of project ':webapp'.
tasks - Displays the tasks runnable from root project 'projectReports' (some of the displayed tasks may belong to subprojects).
api:tasks - Displays the tasks runnable from project ':api'.
webapp:tasks - Displays the tasks runnable from project ':webapp'.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="huanghaohang" changedate="20170910T012331Z" creationid="huanghaohang" creationdate="20170910T012331Z">
        <seg>webapp:compile - Compiles the source files

Build Setup tasks
-----------------
init - Initializes a new Gradle build. [incubating]
wrapper - Generates Gradle wrapper files. [incubating]

Help tasks
----------
dependencies - Displays all dependencies declared in root project 'projectReports'.
api:dependencies - Displays all dependencies declared in project ':api'.
webapp:dependencies - Displays all dependencies declared in project ':webapp'.
dependencyInsight - Displays the insight into a specific dependency in root project 'projectReports'.
api:dependencyInsight - Displays the insight into a specific dependency in project ':api'.
webapp:dependencyInsight - Displays the insight into a specific dependency in project ':webapp'.
help - Displays a help message
api:help - Displays a help message
webapp:help - Displays a help message
projects - Displays the sub-projects of root project 'projectReports'.
api:projects - Displays the sub-projects of project ':api'.
webapp:projects - Displays the sub-projects of project ':webapp'.
properties - Displays the properties of root project 'projectReports'.
api:properties - Displays the properties of project ':api'.
webapp:properties - Displays the properties of project ':webapp'.
tasks - Displays the tasks runnable from root project 'projectReports' (some of the displayed tasks may belong to subprojects).
api:tasks - Displays the tasks runnable from project ':api'.
webapp:tasks - Displays the tasks runnable from project ':webapp'.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>writing_build_scripts.html#sec:extra_properties</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T142011Z" creationid="95" creationdate="20170727T142011Z">
        <seg>writing_build_scripts.html#sec:extra_properties</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170728T153819Z" creationid="95" creationdate="20170728T153819Z">
        <seg>}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}
}</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170724T144952Z" creationid="95" creationdate="20170724T144952Z">
        <seg>}
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}
}

File[] fileList(String dir) {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T023512Z" creationid="95" creationdate="20170729T023512Z">
        <seg>}
}

File[] fileList(String dir) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}
}

artifacts {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170803T125722Z" creationid="95" creationdate="20170803T125722Z">
        <seg>}
}

artifacts {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}
}

repositories {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170731T154103Z" creationid="95" creationdate="20170731T154103Z">
        <seg>}
}

repositories {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}
}

task loadfile &lt;&lt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T023508Z" creationid="95" creationdate="20170729T023501Z">
        <seg>}
}

task loadfile &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>}
}
task0.dependsOn task2, task3</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170727T133026Z" creationid="95" creationdate="20170727T133026Z">
        <seg>}
}
task0.dependsOn task2, task3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>} &lt;s5&gt;else&lt;/s5&gt; {</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="95" changedate="20170729T025309Z" creationid="95" creationdate="20170729T025309Z">
        <seg>} &lt;s5&gt;else&lt;/s5&gt; {</seg>
      </tuv>
    </tu>
<!-- Alternative translations -->
  </body>
</tmx>
