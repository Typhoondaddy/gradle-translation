<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE tmx SYSTEM "tmx14.dtd">
<tmx version="1.4">
  <header creationtool="OmegaT" o-tmf="OmegaT TMX" adminlang="EN-US" datatype="plaintext" creationtoolversion="OmegaT-3.6.0" segtype="sentence" srclang="EN-US"/>
  <body>
<!-- Default translations -->
    <tu>
      <tuv xml:lang="EN-US">
        <seg>"$project.buildDir/sonar"</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T065250Z" creationid="msdx" creationdate="20150513T065250Z">
        <seg>"$project.buildDir/sonar"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>"$project.group:$project.name" (for root project of analysed hierarchy; left to Sonar Runner otherwise)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T065559Z" creationid="msdx" creationdate="20150513T065246Z">
        <seg>"$project.group:$project.name" （所分析的层次结构的根项目，否则留给 Sonar Runner 处理）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>"<bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>$buildDir<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/reports/jacoco"</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T131630Z" creationid="msdx" creationdate="20150506T131630Z">
        <seg>"<bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>$buildDir<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/reports/jacoco"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>"reuseReports"</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T065250Z" creationid="msdx" creationdate="20150513T065250Z">
        <seg>"reuseReports"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#N10048</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141127T141002Z" creationid="msdx" creationdate="20141127T141002Z">
        <seg>#N10048</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#N100CE</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141127T141010Z" creationid="msdx" creationdate="20141127T141010Z">
        <seg>#N100CE</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#N10116</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141127T141012Z" creationid="msdx" creationdate="20141127T141012Z">
        <seg>#N10116</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#N10123</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141127T141013Z" creationid="msdx" creationdate="20141127T141013Z">
        <seg>#N10123</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#N1012C</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141127T141018Z" creationid="msdx" creationdate="20141127T141018Z">
        <seg>#N1012C</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#N10148</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141127T141018Z" creationid="msdx" creationdate="20141127T141018Z">
        <seg>#N10148</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#N10155</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141127T141019Z" creationid="msdx" creationdate="20141127T141019Z">
        <seg>#N10155</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#N10160</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141127T141020Z" creationid="msdx" creationdate="20141127T141020Z">
        <seg>#N10160</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#N10187</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141127T141022Z" creationid="msdx" creationdate="20141127T141022Z">
        <seg>#N10187</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#N10194</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141127T141023Z" creationid="msdx" creationdate="20141127T141023Z">
        <seg>#N10194</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#N101A5</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141127T141024Z" creationid="msdx" creationdate="20141127T141024Z">
        <seg>#N101A5</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#N101BC</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141127T141025Z" creationid="msdx" creationdate="20141127T141025Z">
        <seg>#N101BC</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#N10222</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141127T141026Z" creationid="msdx" creationdate="20141127T141026Z">
        <seg>#N10222</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#N10239</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141127T141026Z" creationid="msdx" creationdate="20141127T141026Z">
        <seg>#N10239</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#N10C0B</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T153807Z" creationid="msdx" creationdate="20141109T153807Z">
        <seg>#N10C0B</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#N10EFC</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T124042Z" creationid="msdx" creationdate="20141111T124042Z">
        <seg>#N10EFC</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#N113E2</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T063028Z" creationid="msdx" creationdate="20141116T063028Z">
        <seg>#N113E2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#N128A7</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T151601Z" creationid="msdx" creationdate="20150428T151601Z">
        <seg>#N128A7</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#N128BD</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T151624Z" creationid="msdx" creationdate="20150428T151624Z">
        <seg>#N128BD</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#N12A9E</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T094736Z" creationid="msdx" creationdate="20150429T094736Z">
        <seg>#N12A9E</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#N12E35</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T082243Z" creationid="msdx" creationdate="20150503T082243Z">
        <seg>#N12E35</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#N130DF</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T093826Z" creationid="msdx" creationdate="20150503T093826Z">
        <seg>#N130DF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#N14D3A</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151201T070342Z" creationid="haohang" creationdate="20151201T070342Z">
        <seg>#N14D3A</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#N14D58</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151201T070429Z" creationid="haohang" creationdate="20151201T070429Z">
        <seg>#N14D58</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#N150EB</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151201T070437Z" creationid="haohang" creationdate="20151201T070437Z">
        <seg>#N150EB</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#N15329</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151201T070524Z" creationid="haohang" creationdate="20151201T070524Z">
        <seg>#N15329</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#N15387</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151227T160747Z" creationid="95" creationdate="20151227T160747Z">
        <seg>#N15387</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#N15521</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T145717Z" creationid="95" creationdate="20160106T145717Z">
        <seg>#N15521</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#N15DE5</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T140256Z" creationid="95" creationdate="20160521T140256Z">
        <seg>#N15DE5</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#N162AF</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160727T054321Z" creationid="haohang" creationdate="20160727T054321Z">
        <seg>#N162AF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#N16335</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160727T055013Z" creationid="haohang" creationdate="20160727T055013Z">
        <seg>#N16335</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#N16351</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160727T055143Z" creationid="haohang" creationdate="20160727T055143Z">
        <seg>#N16351</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#N16459</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160727T055236Z" creationid="haohang" creationdate="20160727T055236Z">
        <seg>#N16459</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#N167C1</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161213T153825Z" creationid="95" creationdate="20161213T153825Z">
        <seg>#N167C1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#N168F8</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161213T154135Z" creationid="95" creationdate="20161213T154135Z">
        <seg>#N168F8</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#ftn.N10B28</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T054401Z" creationid="msdx" creationdate="20141108T054401Z">
        <seg>#ftn.N10B28</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#ftn.N10C0B</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T141100Z" creationid="msdx" creationdate="20141109T141100Z">
        <seg>#ftn.N10C0B</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#ftn.N10EFC</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T055305Z" creationid="msdx" creationdate="20141111T055305Z">
        <seg>#ftn.N10EFC</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#ftn.N113E2</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141114T141737Z" creationid="msdx" creationdate="20141114T141737Z">
        <seg>#ftn.N113E2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#ftn.N128A7</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T082400Z" creationid="msdx" creationdate="20150428T082400Z">
        <seg>#ftn.N128A7</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#ftn.N128BD</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T082905Z" creationid="msdx" creationdate="20150428T082905Z">
        <seg>#ftn.N128BD</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#ftn.N12A9E</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T071822Z" creationid="msdx" creationdate="20150429T071822Z">
        <seg>#ftn.N12A9E</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#ftn.N12E35</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T152740Z" creationid="msdx" creationdate="20150429T152740Z">
        <seg>#ftn.N12E35</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#ftn.N130DF</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T092354Z" creationid="msdx" creationdate="20150503T092354Z">
        <seg>#ftn.N130DF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#ftn.N14D3A</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150730T040315Z" creationid="haohang" creationdate="20150730T040315Z">
        <seg>#ftn.N14D3A</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#ftn.N14D58</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150731T035215Z" creationid="haohang" creationdate="20150731T035215Z">
        <seg>#ftn.N14D58</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#ftn.N150EB</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T134258Z" creationid="95" creationdate="20151006T134258Z">
        <seg>#ftn.N150EB</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#ftn.N15329</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151130T051153Z" creationid="haohang" creationdate="20151130T051153Z">
        <seg>#ftn.N15329</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#ftn.N15387</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151220T123617Z" creationid="95" creationdate="20151220T123617Z">
        <seg>#ftn.N15387</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#ftn.N15521</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160104T154654Z" creationid="95" creationdate="20160104T154654Z">
        <seg>#ftn.N15521</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#ftn.N15DE5</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T070549Z" creationid="haohang" creationdate="20160519T070549Z">
        <seg>#ftn.N15DE5</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#ftn.N162AF</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160722T090413Z" creationid="haohang" creationdate="20160722T090413Z">
        <seg>#ftn.N162AF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#ftn.N16335</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T083548Z" creationid="haohang" creationdate="20160726T083548Z">
        <seg>#ftn.N16335</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#ftn.N16351</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T083853Z" creationid="haohang" creationdate="20160726T083853Z">
        <seg>#ftn.N16351</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#ftn.N16459</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160727T053550Z" creationid="haohang" creationdate="20160727T053550Z">
        <seg>#ftn.N16459</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#ftn.N167C1</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T020937Z" creationid="95" creationdate="20161211T020937Z">
        <seg>#ftn.N167C1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#ftn.N168F8</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161212T154922Z" creationid="95" creationdate="20161212T154922Z">
        <seg>#ftn.N168F8</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#include &lt;CUnit/Basic.h&gt;
#include "gradle_cunit_register.h"
#include "test_operators.h"

int suite_init(void) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160504T150239Z" creationid="95" creationdate="20160504T150239Z">
        <seg>#include &lt;CUnit/Basic.h&gt;
#include "gradle_cunit_register.h"
#include "test_operators.h"

int suite_init(void) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#installation</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141127T141011Z" creationid="msdx" creationdate="20141127T141011Z">
        <seg>#installation</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#introduction</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141127T141001Z" creationid="msdx" creationdate="20141127T141001Z">
        <seg>#introduction</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#overview</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141127T141003Z" creationid="msdx" creationdate="20141127T141003Z">
        <seg>#overview</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#sec:special_feature_of_gradle</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141127T141005Z" creationid="msdx" creationdate="20141127T141005Z">
        <seg>#sec:special_feature_of_gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#sec:task_dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141127T141027Z" creationid="msdx" creationdate="20141127T141027Z">
        <seg>#sec:task_dependencies</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#sec:why_groovy</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141127T141008Z" creationid="msdx" creationdate="20141127T141008Z">
        <seg>#sec:why_groovy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#troubleshooting</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141127T141022Z" creationid="msdx" creationdate="20141127T141022Z">
        <seg>#troubleshooting</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#tutorial_using_tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141127T141024Z" creationid="msdx" creationdate="20141127T141024Z">
        <seg>#tutorial_using_tasks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>#tutorials</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141127T141009Z" creationid="msdx" creationdate="20141127T141009Z">
        <seg>#tutorials</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>'build' never runs before 'clean'.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T144040Z" creationid="msdx" creationdate="20141110T144040Z">
        <seg>'build' 永远不会在 'clean' 前面执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>(But, once you've migrated, it might be a good idea to move away from a .classpath file and use Gradle's dependency management features directly.)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150716T045300Z" creationid="haohang" creationdate="20150716T045250Z">
        <seg>（但是，一旦你已经迁移，远离 .classpath 文件，直接使用 Gradle 的依赖管理功能会是一个好主意。）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>(In the case of dependency entries, this is also the default behavior.) Other sections of the <bpt i="1" x="1">&lt;c1&gt;</bpt>.classpath<ept i="1">&lt;/c1&gt;</ept> file will be either left as-is or merged.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T065611Z" creationid="haohang" creationdate="20150625T065611Z">
        <seg>(对于依赖项，这也是默认行为。)其他部分的<bpt i="1" x="1">&lt;c1&gt;</bpt>.classpath<ept i="1">&lt;/c1&gt;</ept>文件将会被合并或者保留。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>(In the case of dependency entries, this is also the default behavior.) Other sections of the module file will be either left as-is or merged.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T074004Z" creationid="haohang" creationdate="20150625T074004Z">
        <seg>(对于依赖项，这也是默认行为。)其他部分的模块文件将会被保留或合并。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>(It does detect changes to the compile class path itself.) This makes it less suitable for multi-project builds.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150430T155541Z" creationid="msdx" creationdate="20150430T155541Z">
        <seg>(它本身不会去检测编译类路径的更改。）这使得它不太适合于多项目的构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>(See <bpt i="0" x="0">&lt;a0&gt;</bpt>Section 13.4.2, “Extra properties”<ept i="0">&lt;/a0&gt;</ept> for more information on extra properties.)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160530T144340Z" creationid="95" creationdate="20160530T144340Z">
        <seg>（有关额外属性的更多信息，请参见<bpt i="0" x="0">&lt;a0&gt;</bpt>第 13.4.2 节，“额外属性”<ept i="0">&lt;/a0&gt;</ept>。）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>(The Cygwin runtime is not yet modelled as part of the Platform, but will be in the future.)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T092524Z" creationid="haohang" creationdate="20160408T092404Z">
        <seg>（Cywgin运行时还不能模拟为Platform的一部分，但以后将会实现。）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T102847Z" creationid="haohang" creationdate="20150722T102847Z">
        <seg>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>-</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141126T120903Z" creationid="msdx" creationdate="20141126T120903Z">
        <seg>-</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>- I love to spend time in the arctic waters.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160530T144441Z" creationid="95" creationdate="20160530T144441Z">
        <seg>- I love to spend time in the arctic waters.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>- I'm the largest animal that has ever lived on this planet.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160527T163833Z" creationid="95" creationdate="20160527T163833Z">
        <seg>- I'm the largest animal that has ever lived on this planet.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>- The weight of my species in summer is twice as heavy as all human beings.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160527T163841Z" creationid="95" creationdate="20160527T163841Z">
        <seg>- The weight of my species in summer is twice as heavy as all human beings.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.DefaultTask.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T145323Z" creationid="95" creationdate="20160814T145323Z">
        <seg>../dsl/org.gradle.api.DefaultTask.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.Project.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T040006Z" creationid="msdx" creationdate="20141108T040006Z">
        <seg>../dsl/org.gradle.api.Project.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:apply(java.util.Map)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141122T161837Z" creationid="msdx" creationdate="20141122T161837Z">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:apply(java.util.Map)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:container(java.lang.Class)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T015258Z" creationid="95" creationdate="20161211T015258Z">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:container(java.lang.Class)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:copy(groovy.lang.Closure)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T131125Z" creationid="msdx" creationdate="20141113T131125Z">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:copy(groovy.lang.Closure)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:copySpec(groovy.lang.Closure)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T160721Z" creationid="msdx" creationdate="20141113T160721Z">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:copySpec(groovy.lang.Closure)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:file(java.lang.Object)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T043529Z" creationid="msdx" creationdate="20141112T043529Z">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:file(java.lang.Object)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:fileTree(java.util.Map)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T101623Z" creationid="msdx" creationdate="20141113T101623Z">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:fileTree(java.util.Map)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:files(java.lang.Object...)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T145251Z" creationid="msdx" creationdate="20141112T145251Z">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:files(java.lang.Object...)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:group</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20170217T083052Z" creationid="haohang" creationdate="20170217T083052Z">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:group</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:name</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20170217T083053Z" creationid="haohang" creationdate="20170217T083053Z">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:name</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:status</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20170217T083055Z" creationid="haohang" creationdate="20170217T083055Z">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:status</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:tarTree(java.lang.Object)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T120412Z" creationid="msdx" creationdate="20141113T120412Z">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:tarTree(java.lang.Object)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:version</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20170217T083054Z" creationid="haohang" creationdate="20170217T083054Z">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:version</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:zipTree(java.lang.Object)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T120411Z" creationid="msdx" creationdate="20141113T120411Z">
        <seg>../dsl/org.gradle.api.Project.html#org.gradle.api.Project:zipTree(java.lang.Object)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.Script.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T044531Z" creationid="msdx" creationdate="20141108T044531Z">
        <seg>../dsl/org.gradle.api.Script.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.Task.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T123909Z" creationid="msdx" creationdate="20141110T123909Z">
        <seg>../dsl/org.gradle.api.Task.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.Task.html#org.gradle.api.Task:dependsOn(java.lang.Object...)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T013526Z" creationid="msdx" creationdate="20141111T013526Z">
        <seg>../dsl/org.gradle.api.Task.html#org.gradle.api.Task:dependsOn(java.lang.Object...)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.Task.html#org.gradle.api.Task:finalizedBy(java.lang.Object...)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T123038Z" creationid="msdx" creationdate="20141111T123038Z">
        <seg>../dsl/org.gradle.api.Task.html#org.gradle.api.Task:finalizedBy(java.lang.Object...)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.Task.html#org.gradle.api.Task:mustRunAfter(java.lang.Object...)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T013523Z" creationid="msdx" creationdate="20141111T013523Z">
        <seg>../dsl/org.gradle.api.Task.html#org.gradle.api.Task:mustRunAfter(java.lang.Object...)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.artifacts.Configuration.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T094950Z" creationid="haohang" creationdate="20150801T094950Z">
        <seg>../dsl/org.gradle.api.artifacts.Configuration.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.artifacts.ConfigurationContainer.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T075618Z" creationid="haohang" creationdate="20150722T075618Z">
        <seg>../dsl/org.gradle.api.artifacts.ConfigurationContainer.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.artifacts.ResolutionStrategy.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150721T061625Z" creationid="haohang" creationdate="20150721T061625Z">
        <seg>../dsl/org.gradle.api.artifacts.ResolutionStrategy.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.artifacts.dsl.DependencyHandler.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150721T083840Z" creationid="haohang" creationdate="20150721T083840Z">
        <seg>../dsl/org.gradle.api.artifacts.dsl.DependencyHandler.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.artifacts.dsl.DependencyHandler.html#org.gradle.api.artifacts.dsl.DependencyHandler:gradleApi()</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T094515Z" creationid="haohang" creationdate="20150801T094515Z">
        <seg>../dsl/org.gradle.api.artifacts.dsl.DependencyHandler.html#org.gradle.api.artifacts.dsl.DependencyHandler:gradleApi()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.artifacts.dsl.DependencyHandler.html#org.gradle.api.artifacts.dsl.DependencyHandler:localGroovy()</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T094707Z" creationid="haohang" creationdate="20150801T094707Z">
        <seg>../dsl/org.gradle.api.artifacts.dsl.DependencyHandler.html#org.gradle.api.artifacts.dsl.DependencyHandler:localGroovy()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.artifacts.dsl.RepositoryHandler.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170304T033931Z" creationid="95" creationdate="20170304T033931Z">
        <seg>../dsl/org.gradle.api.artifacts.dsl.RepositoryHandler.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.artifacts.repositories.IvyArtifactRepository.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T110444Z" creationid="95" creationdate="20151006T110444Z">
        <seg>../dsl/org.gradle.api.artifacts.repositories.IvyArtifactRepository.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.artifacts.repositories.MavenArtifactRepository.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170412T152515Z" creationid="95" creationdate="20170412T152515Z">
        <seg>../dsl/org.gradle.api.artifacts.repositories.MavenArtifactRepository.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.distribution.DistributionContainer.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150701T025859Z" creationid="haohang" creationdate="20150701T025859Z">
        <seg>../dsl/org.gradle.api.distribution.DistributionContainer.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.initialization.Settings.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T025439Z" creationid="haohang" creationdate="20160519T025439Z">
        <seg>../dsl/org.gradle.api.initialization.Settings.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.invocation.Gradle.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T132221Z" creationid="95" creationdate="20160521T132221Z">
        <seg>../dsl/org.gradle.api.invocation.Gradle.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.invocation.Gradle.html#org.gradle.api.invocation.Gradle:useLogger(java.lang.Object)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T152843Z" creationid="msdx" creationdate="20141116T152843Z">
        <seg>../dsl/org.gradle.api.invocation.Gradle.html#org.gradle.api.invocation.Gradle:useLogger(java.lang.Object)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.plugins.BasePluginConvention.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083247Z" creationid="msdx" creationdate="20150428T083247Z">
        <seg>../dsl/org.gradle.api.plugins.BasePluginConvention.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.plugins.ExtraPropertiesExtension.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T055333Z" creationid="msdx" creationdate="20141108T055333Z">
        <seg>../dsl/org.gradle.api.plugins.ExtraPropertiesExtension.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.plugins.JavaPluginConvention.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083246Z" creationid="msdx" creationdate="20150428T083246Z">
        <seg>../dsl/org.gradle.api.plugins.JavaPluginConvention.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.plugins.MavenPluginConvention.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151228T153151Z" creationid="95" creationdate="20151228T153151Z">
        <seg>../dsl/org.gradle.api.plugins.MavenPluginConvention.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.plugins.ProjectReportsPluginConvention.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T062250Z" creationid="haohang" creationdate="20150628T062250Z">
        <seg>../dsl/org.gradle.api.plugins.ProjectReportsPluginConvention.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.plugins.ReportingBasePluginConvention.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083247Z" creationid="msdx" creationdate="20150428T083247Z">
        <seg>../dsl/org.gradle.api.plugins.ReportingBasePluginConvention.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.plugins.WarPluginConvention.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T092327Z" creationid="msdx" creationdate="20150503T092327Z">
        <seg>../dsl/org.gradle.api.plugins.WarPluginConvention.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.plugins.announce.AnnouncePluginExtension.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T090948Z" creationid="haohang" creationdate="20150628T090948Z">
        <seg>../dsl/org.gradle.api.plugins.announce.AnnouncePluginExtension.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.plugins.antlr.AntlrTask.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T094930Z" creationid="haohang" creationdate="20150625T094930Z">
        <seg>../dsl/org.gradle.api.plugins.antlr.AntlrTask.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.plugins.buildcomparison.gradle.CompareGradleBuilds.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161228T150247Z" creationid="95" creationdate="20161228T150247Z">
        <seg>../dsl/org.gradle.api.plugins.buildcomparison.gradle.CompareGradleBuilds.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.plugins.jetty.JettyPluginConvention.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T151348Z" creationid="msdx" creationdate="20150504T151348Z">
        <seg>../dsl/org.gradle.api.plugins.jetty.JettyPluginConvention.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.plugins.jetty.JettyRun.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T150216Z" creationid="msdx" creationdate="20150504T150216Z">
        <seg>../dsl/org.gradle.api.plugins.jetty.JettyRun.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.plugins.jetty.JettyRunWar.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T150421Z" creationid="msdx" creationdate="20150504T150421Z">
        <seg>../dsl/org.gradle.api.plugins.jetty.JettyRunWar.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.plugins.jetty.JettyStop.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T150446Z" creationid="msdx" creationdate="20150504T150446Z">
        <seg>../dsl/org.gradle.api.plugins.jetty.JettyStop.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.plugins.osgi.OsgiPluginConvention.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150526T004507Z" creationid="haohang" creationdate="20150526T004507Z">
        <seg>../dsl/org.gradle.api.plugins.osgi.OsgiPluginConvention.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.plugins.quality.Checkstyle.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T024701Z" creationid="msdx" creationdate="20150505T024701Z">
        <seg>../dsl/org.gradle.api.plugins.quality.Checkstyle.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.plugins.quality.CheckstyleExtension.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T132837Z" creationid="msdx" creationdate="20150505T132837Z">
        <seg>../dsl/org.gradle.api.plugins.quality.CheckstyleExtension.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.plugins.quality.CodeNarc.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T133151Z" creationid="msdx" creationdate="20150505T133151Z">
        <seg>../dsl/org.gradle.api.plugins.quality.CodeNarc.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.plugins.quality.CodeNarcExtension.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T133513Z" creationid="msdx" creationdate="20150505T133513Z">
        <seg>../dsl/org.gradle.api.plugins.quality.CodeNarcExtension.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.plugins.quality.FindBugs.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T133646Z" creationid="msdx" creationdate="20150505T133646Z">
        <seg>../dsl/org.gradle.api.plugins.quality.FindBugs.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.plugins.quality.FindBugsExtension.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T133856Z" creationid="msdx" creationdate="20150505T133856Z">
        <seg>../dsl/org.gradle.api.plugins.quality.FindBugsExtension.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.plugins.quality.JDepend.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T134230Z" creationid="msdx" creationdate="20150505T134230Z">
        <seg>../dsl/org.gradle.api.plugins.quality.JDepend.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.plugins.quality.JDependExtension.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T134502Z" creationid="msdx" creationdate="20150505T134502Z">
        <seg>../dsl/org.gradle.api.plugins.quality.JDependExtension.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.plugins.quality.Pmd.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T135544Z" creationid="msdx" creationdate="20150505T135544Z">
        <seg>../dsl/org.gradle.api.plugins.quality.Pmd.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.plugins.quality.PmdExtension.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T135724Z" creationid="msdx" creationdate="20150505T135724Z">
        <seg>../dsl/org.gradle.api.plugins.quality.PmdExtension.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.plugins.sonar.SonarAnalyze.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T054214Z" creationid="msdx" creationdate="20150513T054214Z">
        <seg>../dsl/org.gradle.api.plugins.sonar.SonarAnalyze.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.publish.PublishingExtension.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170211T022603Z" creationid="95" creationdate="20170211T022603Z">
        <seg>../dsl/org.gradle.api.publish.PublishingExtension.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.publish.PublishingExtension.html#org.gradle.api.publish.PublishingExtension:publications</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170211T134922Z" creationid="95" creationdate="20170211T134922Z">
        <seg>../dsl/org.gradle.api.publish.PublishingExtension.html#org.gradle.api.publish.PublishingExtension:publications</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.publish.PublishingExtension.html#org.gradle.api.publish.PublishingExtension:repositories</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170304T033551Z" creationid="95" creationdate="20170304T033551Z">
        <seg>../dsl/org.gradle.api.publish.PublishingExtension.html#org.gradle.api.publish.PublishingExtension:repositories</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.publish.ivy.IvyModuleDescriptor.html#org.gradle.api.publish.ivy.IvyModuleDescriptor:withXml(org.gradle.api.Action)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170304T031813Z" creationid="95" creationdate="20170304T031813Z">
        <seg>../dsl/org.gradle.api.publish.ivy.IvyModuleDescriptor.html#org.gradle.api.publish.ivy.IvyModuleDescriptor:withXml(org.gradle.api.Action)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.publish.ivy.IvyPublication.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170211T025615Z" creationid="95" creationdate="20170211T025615Z">
        <seg>../dsl/org.gradle.api.publish.ivy.IvyPublication.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.publish.ivy.tasks.GenerateIvyDescriptor.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170211T025614Z" creationid="95" creationdate="20170211T025614Z">
        <seg>../dsl/org.gradle.api.publish.ivy.tasks.GenerateIvyDescriptor.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.publish.ivy.tasks.PublishToIvyRepository.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170211T025808Z" creationid="95" creationdate="20170211T025808Z">
        <seg>../dsl/org.gradle.api.publish.ivy.tasks.PublishToIvyRepository.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.publish.maven.MavenPom.html#org.gradle.api.publish.maven.MavenPom:withXml(org.gradle.api.Action)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T062432Z" creationid="95" creationdate="20170416T062432Z">
        <seg>../dsl/org.gradle.api.publish.maven.MavenPom.html#org.gradle.api.publish.maven.MavenPom:withXml(org.gradle.api.Action)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.publish.maven.MavenPublication.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170412T152514Z" creationid="95" creationdate="20170412T152514Z">
        <seg>../dsl/org.gradle.api.publish.maven.MavenPublication.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.publish.maven.tasks.GenerateMavenPom.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170412T152804Z" creationid="95" creationdate="20170412T152804Z">
        <seg>../dsl/org.gradle.api.publish.maven.tasks.GenerateMavenPom.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.publish.maven.tasks.PublishToMavenRepository.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170412T152841Z" creationid="95" creationdate="20170412T152841Z">
        <seg>../dsl/org.gradle.api.publish.maven.tasks.PublishToMavenRepository.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.reporting.GenerateBuildDashboard.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150713T100312Z" creationid="haohang" creationdate="20150713T100312Z">
        <seg>../dsl/org.gradle.api.reporting.GenerateBuildDashboard.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.reporting.Reporting.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T131640Z" creationid="msdx" creationdate="20150506T131640Z">
        <seg>../dsl/org.gradle.api.reporting.Reporting.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.reporting.ReportingExtension.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150713T100450Z" creationid="haohang" creationdate="20150713T100450Z">
        <seg>../dsl/org.gradle.api.reporting.ReportingExtension.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.reporting.dependencies.HtmlDependencyReportTask.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T061236Z" creationid="haohang" creationdate="20150628T061236Z">
        <seg>../dsl/org.gradle.api.reporting.dependencies.HtmlDependencyReportTask.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.Copy.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T090224Z" creationid="msdx" creationdate="20141110T090224Z">
        <seg>../dsl/org.gradle.api.tasks.Copy.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.Delete.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083222Z" creationid="msdx" creationdate="20150428T083222Z">
        <seg>../dsl/org.gradle.api.tasks.Delete.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.GroovySourceSet.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T093602Z" creationid="msdx" creationdate="20150429T093602Z">
        <seg>../dsl/org.gradle.api.tasks.GroovySourceSet.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.JavaExec.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150702T105010Z" creationid="haohang" creationdate="20150702T105010Z">
        <seg>../dsl/org.gradle.api.tasks.JavaExec.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.ScalaSourceSet.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150430T154908Z" creationid="msdx" creationdate="20150430T154908Z">
        <seg>../dsl/org.gradle.api.tasks.ScalaSourceSet.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.SourceSet.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141121T142848Z" creationid="msdx" creationdate="20141121T142848Z">
        <seg>../dsl/org.gradle.api.tasks.SourceSet.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.SourceSetOutput.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083250Z" creationid="msdx" creationdate="20150428T083250Z">
        <seg>../dsl/org.gradle.api.tasks.SourceSetOutput.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.Sync.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T143959Z" creationid="msdx" creationdate="20141113T143959Z">
        <seg>../dsl/org.gradle.api.tasks.Sync.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.Upload.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083218Z" creationid="msdx" creationdate="20150428T083218Z">
        <seg>../dsl/org.gradle.api.tasks.Upload.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.application.CreateStartScripts.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150702T105016Z" creationid="haohang" creationdate="20150702T105016Z">
        <seg>../dsl/org.gradle.api.tasks.application.CreateStartScripts.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.bundling.AbstractArchiveTask.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104929Z" creationid="msdx" creationdate="20150428T104929Z">
        <seg>../dsl/org.gradle.api.tasks.bundling.AbstractArchiveTask.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.bundling.Jar.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T145509Z" creationid="msdx" creationdate="20141113T145509Z">
        <seg>../dsl/org.gradle.api.tasks.bundling.Jar.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.bundling.Tar.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T145509Z" creationid="msdx" creationdate="20141113T145509Z">
        <seg>../dsl/org.gradle.api.tasks.bundling.Tar.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.bundling.War.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T145509Z" creationid="msdx" creationdate="20141113T145509Z">
        <seg>../dsl/org.gradle.api.tasks.bundling.War.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.bundling.Zip.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T145508Z" creationid="msdx" creationdate="20141113T145508Z">
        <seg>../dsl/org.gradle.api.tasks.bundling.Zip.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.compile.GroovyCompile.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T071352Z" creationid="msdx" creationdate="20150429T071352Z">
        <seg>../dsl/org.gradle.api.tasks.compile.GroovyCompile.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.compile.JavaCompile.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T122857Z" creationid="msdx" creationdate="20141113T122857Z">
        <seg>../dsl/org.gradle.api.tasks.compile.JavaCompile.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.diagnostics.DependencyReportTask.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T061214Z" creationid="haohang" creationdate="20150628T061214Z">
        <seg>../dsl/org.gradle.api.tasks.diagnostics.DependencyReportTask.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.diagnostics.PropertyReportTask.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T061522Z" creationid="haohang" creationdate="20150628T061522Z">
        <seg>../dsl/org.gradle.api.tasks.diagnostics.PropertyReportTask.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.diagnostics.TaskReportTask.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T061527Z" creationid="haohang" creationdate="20150628T061527Z">
        <seg>../dsl/org.gradle.api.tasks.diagnostics.TaskReportTask.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.incremental.IncrementalTaskInputs.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160816T144344Z" creationid="95" creationdate="20160816T144344Z">
        <seg>../dsl/org.gradle.api.tasks.incremental.IncrementalTaskInputs.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.incremental.IncrementalTaskInputs.html#org.gradle.api.tasks.incremental.IncrementalTaskInputs:incremental</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160817T145005Z" creationid="95" creationdate="20160817T145005Z">
        <seg>../dsl/org.gradle.api.tasks.incremental.IncrementalTaskInputs.html#org.gradle.api.tasks.incremental.IncrementalTaskInputs:incremental</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.incremental.IncrementalTaskInputs.html#org.gradle.api.tasks.incremental.IncrementalTaskInputs:outOfDate(org.gradle.api.Action)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160816T144628Z" creationid="95" creationdate="20160816T144628Z">
        <seg>../dsl/org.gradle.api.tasks.incremental.IncrementalTaskInputs.html#org.gradle.api.tasks.incremental.IncrementalTaskInputs:outOfDate(org.gradle.api.Action)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.incremental.IncrementalTaskInputs.html#org.gradle.api.tasks.incremental.IncrementalTaskInputs:removed(org.gradle.api.Action)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160816T144629Z" creationid="95" creationdate="20160816T144629Z">
        <seg>../dsl/org.gradle.api.tasks.incremental.IncrementalTaskInputs.html#org.gradle.api.tasks.incremental.IncrementalTaskInputs:removed(org.gradle.api.Action)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.javadoc.Groovydoc.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T071455Z" creationid="msdx" creationdate="20150429T071455Z">
        <seg>../dsl/org.gradle.api.tasks.javadoc.Groovydoc.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.javadoc.Javadoc.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083216Z" creationid="msdx" creationdate="20150428T083216Z">
        <seg>../dsl/org.gradle.api.tasks.javadoc.Javadoc.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.scala.ScalaCompile.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T145448Z" creationid="msdx" creationdate="20150429T145448Z">
        <seg>../dsl/org.gradle.api.tasks.scala.ScalaCompile.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.scala.ScalaDoc.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T145512Z" creationid="msdx" creationdate="20150429T145512Z">
        <seg>../dsl/org.gradle.api.tasks.scala.ScalaDoc.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.testing.Test.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083217Z" creationid="msdx" creationdate="20150428T083217Z">
        <seg>../dsl/org.gradle.api.tasks.testing.Test.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.testing.Test.html#org.gradle.api.tasks.testing.Test:debug</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083450Z" creationid="msdx" creationdate="20150428T083450Z">
        <seg>../dsl/org.gradle.api.tasks.testing.Test.html#org.gradle.api.tasks.testing.Test:debug</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.testing.TestReport.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T142153Z" creationid="msdx" creationdate="20150428T142153Z">
        <seg>../dsl/org.gradle.api.tasks.testing.TestReport.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.testing.logging.TestLoggingContainer.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083449Z" creationid="msdx" creationdate="20150428T083449Z">
        <seg>../dsl/org.gradle.api.tasks.testing.logging.TestLoggingContainer.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.api.tasks.wrapper.Wrapper.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104928Z" creationid="msdx" creationdate="20150428T104928Z">
        <seg>../dsl/org.gradle.api.tasks.wrapper.Wrapper.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.buildinit.tasks.InitBuild.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T071554Z" creationid="haohang" creationdate="20150707T071554Z">
        <seg>../dsl/org.gradle.buildinit.tasks.InitBuild.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.ide.visualstudio.VisualStudioExtension.html#org.gradle.ide.visualstudio.VisualStudioExtension:projects</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T095432Z" creationid="haohang" creationdate="20160408T095432Z">
        <seg>../dsl/org.gradle.ide.visualstudio.VisualStudioExtension.html#org.gradle.ide.visualstudio.VisualStudioExtension:projects</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.ide.visualstudio.VisualStudioExtension.html#org.gradle.ide.visualstudio.VisualStudioExtension:solutions</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T095432Z" creationid="haohang" creationdate="20160408T095432Z">
        <seg>../dsl/org.gradle.ide.visualstudio.VisualStudioExtension.html#org.gradle.ide.visualstudio.VisualStudioExtension:solutions</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.language.assembler.AssemblerSourceSet.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160313T053832Z" creationid="95" creationdate="20160313T053832Z">
        <seg>../dsl/org.gradle.language.assembler.AssemblerSourceSet.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.language.c.CSourceSet.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160225T090444Z" creationid="haohang" creationdate="20160225T090444Z">
        <seg>../dsl/org.gradle.language.c.CSourceSet.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.language.cpp.CppSourceSet.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160219T082845Z" creationid="haohang" creationdate="20160219T082845Z">
        <seg>../dsl/org.gradle.language.cpp.CppSourceSet.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.language.objectivec.ObjectiveCSourceSet.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160319T115139Z" creationid="95" creationdate="20160319T115139Z">
        <seg>../dsl/org.gradle.language.objectivec.ObjectiveCSourceSet.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.language.objectivecpp.ObjectiveCppSourceSet.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160319T115450Z" creationid="95" creationdate="20160319T115450Z">
        <seg>../dsl/org.gradle.language.objectivecpp.ObjectiveCppSourceSet.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.language.rc.WindowsResourceSet.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160324T153250Z" creationid="95" creationdate="20160324T153250Z">
        <seg>../dsl/org.gradle.language.rc.WindowsResourceSet.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.nativebinaries.Executable.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160128T153603Z" creationid="95" creationdate="20160128T153603Z">
        <seg>../dsl/org.gradle.nativebinaries.Executable.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.nativebinaries.ExecutableBinary.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160219T072229Z" creationid="haohang" creationdate="20160219T072229Z">
        <seg>../dsl/org.gradle.nativebinaries.ExecutableBinary.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.nativebinaries.Library.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160128T153603Z" creationid="95" creationdate="20160128T153603Z">
        <seg>../dsl/org.gradle.nativebinaries.Library.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.nativebinaries.NativeBinary.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160128T153604Z" creationid="95" creationdate="20160128T153604Z">
        <seg>../dsl/org.gradle.nativebinaries.NativeBinary.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.nativebinaries.ProjectNativeBinary.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160504T150552Z" creationid="95" creationdate="20160504T150552Z">
        <seg>../dsl/org.gradle.nativebinaries.ProjectNativeBinary.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.nativebinaries.SharedLibraryBinary.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160219T064959Z" creationid="haohang" creationdate="20160219T064959Z">
        <seg>../dsl/org.gradle.nativebinaries.SharedLibraryBinary.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.nativebinaries.StaticLibraryBinary.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160219T065000Z" creationid="haohang" creationdate="20160219T065000Z">
        <seg>../dsl/org.gradle.nativebinaries.StaticLibraryBinary.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.nativebinaries.TargetedNativeComponent.html#org.gradle.nativebinaries.TargetedNativeComponent:targetBuildTypes(java.lang.String...)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T083048Z" creationid="haohang" creationdate="20160408T083048Z">
        <seg>../dsl/org.gradle.nativebinaries.TargetedNativeComponent.html#org.gradle.nativebinaries.TargetedNativeComponent:targetBuildTypes(java.lang.String...)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.nativebinaries.TargetedNativeComponent.html#org.gradle.nativebinaries.TargetedNativeComponent:targetFlavors(java.lang.String...)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T083049Z" creationid="haohang" creationdate="20160408T083049Z">
        <seg>../dsl/org.gradle.nativebinaries.TargetedNativeComponent.html#org.gradle.nativebinaries.TargetedNativeComponent:targetFlavors(java.lang.String...)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.nativebinaries.TargetedNativeComponent.html#org.gradle.nativebinaries.TargetedNativeComponent:targetPlatforms(java.lang.String...)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T082931Z" creationid="haohang" creationdate="20160408T082931Z">
        <seg>../dsl/org.gradle.nativebinaries.TargetedNativeComponent.html#org.gradle.nativebinaries.TargetedNativeComponent:targetPlatforms(java.lang.String...)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.nativebinaries.language.PreprocessingTool.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160325T023109Z" creationid="haohang" creationdate="20160325T023109Z">
        <seg>../dsl/org.gradle.nativebinaries.language.PreprocessingTool.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.nativebinaries.platform.Platform.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160401T091008Z" creationid="haohang" creationdate="20160401T091008Z">
        <seg>../dsl/org.gradle.nativebinaries.platform.Platform.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.nativebinaries.test.cunit.CUnitTestSuite.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160504T144035Z" creationid="95" creationdate="20160504T144035Z">
        <seg>../dsl/org.gradle.nativebinaries.test.cunit.CUnitTestSuite.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.nativebinaries.toolchain.Clang.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T091210Z" creationid="haohang" creationdate="20160408T091210Z">
        <seg>../dsl/org.gradle.nativebinaries.toolchain.Clang.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.nativebinaries.toolchain.Gcc.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T091206Z" creationid="haohang" creationdate="20160408T091206Z">
        <seg>../dsl/org.gradle.nativebinaries.toolchain.Gcc.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.nativebinaries.toolchain.PlatformConfigurableToolChain.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T092742Z" creationid="haohang" creationdate="20160408T092742Z">
        <seg>../dsl/org.gradle.nativebinaries.toolchain.PlatformConfigurableToolChain.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.nativebinaries.toolchain.ToolChain.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160324T151803Z" creationid="95" creationdate="20160324T151803Z">
        <seg>../dsl/org.gradle.nativebinaries.toolchain.ToolChain.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.nativebinaries.toolchain.VisualCpp.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160324T153130Z" creationid="95" creationdate="20160324T153130Z">
        <seg>../dsl/org.gradle.nativebinaries.toolchain.VisualCpp.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.plugins.ear.Ear.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T145510Z" creationid="msdx" creationdate="20141113T145510Z">
        <seg>../dsl/org.gradle.plugins.ear.Ear.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.plugins.ear.EarPluginConvention.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T142436Z" creationid="msdx" creationdate="20150504T142436Z">
        <seg>../dsl/org.gradle.plugins.ear.EarPluginConvention.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.plugins.ide.eclipse.GenerateEclipseClasspath.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T004450Z" creationid="haohang" creationdate="20150603T004450Z">
        <seg>../dsl/org.gradle.plugins.ide.eclipse.GenerateEclipseClasspath.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.plugins.ide.eclipse.GenerateEclipseJdt.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T004502Z" creationid="haohang" creationdate="20150603T004502Z">
        <seg>../dsl/org.gradle.plugins.ide.eclipse.GenerateEclipseJdt.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.plugins.ide.eclipse.GenerateEclipseProject.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T004432Z" creationid="haohang" creationdate="20150603T004432Z">
        <seg>../dsl/org.gradle.plugins.ide.eclipse.GenerateEclipseProject.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.plugins.ide.eclipse.GenerateEclipseWtpComponent.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T004510Z" creationid="haohang" creationdate="20150603T004510Z">
        <seg>../dsl/org.gradle.plugins.ide.eclipse.GenerateEclipseWtpComponent.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.plugins.ide.eclipse.GenerateEclipseWtpFacet.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T004539Z" creationid="haohang" creationdate="20150603T004539Z">
        <seg>../dsl/org.gradle.plugins.ide.eclipse.GenerateEclipseWtpFacet.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.plugins.ide.eclipse.model.EclipseClasspath.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T022411Z" creationid="haohang" creationdate="20150624T022411Z">
        <seg>../dsl/org.gradle.plugins.ide.eclipse.model.EclipseClasspath.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.plugins.ide.eclipse.model.EclipseJdt.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T022423Z" creationid="haohang" creationdate="20150624T022423Z">
        <seg>../dsl/org.gradle.plugins.ide.eclipse.model.EclipseJdt.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.plugins.ide.eclipse.model.EclipseModel.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T004645Z" creationid="haohang" creationdate="20150603T004645Z">
        <seg>../dsl/org.gradle.plugins.ide.eclipse.model.EclipseModel.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.plugins.ide.eclipse.model.EclipseProject.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T022122Z" creationid="haohang" creationdate="20150624T022122Z">
        <seg>../dsl/org.gradle.plugins.ide.eclipse.model.EclipseProject.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T022452Z" creationid="haohang" creationdate="20150624T022452Z">
        <seg>../dsl/org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.plugins.ide.eclipse.model.EclipseWtpFacet.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T022523Z" creationid="haohang" creationdate="20150624T022523Z">
        <seg>../dsl/org.gradle.plugins.ide.eclipse.model.EclipseWtpFacet.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.plugins.ide.idea.GenerateIdeaModule.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T072554Z" creationid="haohang" creationdate="20150625T072554Z">
        <seg>../dsl/org.gradle.plugins.ide.idea.GenerateIdeaModule.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.plugins.ide.idea.GenerateIdeaProject.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T072517Z" creationid="haohang" creationdate="20150625T072517Z">
        <seg>../dsl/org.gradle.plugins.ide.idea.GenerateIdeaProject.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.plugins.ide.idea.GenerateIdeaWorkspace.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T072603Z" creationid="haohang" creationdate="20150625T072603Z">
        <seg>../dsl/org.gradle.plugins.ide.idea.GenerateIdeaWorkspace.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.plugins.ide.idea.model.IdeaModel.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T072640Z" creationid="haohang" creationdate="20150625T072640Z">
        <seg>../dsl/org.gradle.plugins.ide.idea.model.IdeaModel.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.plugins.ide.idea.model.IdeaModule.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T072705Z" creationid="haohang" creationdate="20150625T072705Z">
        <seg>../dsl/org.gradle.plugins.ide.idea.model.IdeaModule.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.plugins.ide.idea.model.IdeaProject.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T072658Z" creationid="haohang" creationdate="20150625T072658Z">
        <seg>../dsl/org.gradle.plugins.ide.idea.model.IdeaProject.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.plugins.ide.idea.model.IdeaWorkspace.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T072713Z" creationid="haohang" creationdate="20150625T072713Z">
        <seg>../dsl/org.gradle.plugins.ide.idea.model.IdeaWorkspace.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.plugins.signing.Sign.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160109T072234Z" creationid="95" creationdate="20160109T072234Z">
        <seg>../dsl/org.gradle.plugins.signing.Sign.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.plugins.signing.SigningExtension.html#org.gradle.plugins.signing.SigningExtension:signPom(org.gradle.api.artifacts.maven.MavenDeployment, groovy.lang.Closure)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160126T144649Z" creationid="95" creationdate="20160126T144649Z">
        <seg>../dsl/org.gradle.plugins.signing.SigningExtension.html#org.gradle.plugins.signing.SigningExtension:signPom(org.gradle.api.artifacts.maven.MavenDeployment, groovy.lang.Closure)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.testing.jacoco.plugins.JacocoPluginExtension.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T130435Z" creationid="msdx" creationdate="20150506T130435Z">
        <seg>../dsl/org.gradle.testing.jacoco.plugins.JacocoPluginExtension.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.testing.jacoco.plugins.JacocoTaskExtension.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T132017Z" creationid="msdx" creationdate="20150506T132017Z">
        <seg>../dsl/org.gradle.testing.jacoco.plugins.JacocoTaskExtension.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../dsl/org.gradle.testing.jacoco.tasks.JacocoReport.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T131639Z" creationid="msdx" creationdate="20150506T131639Z">
        <seg>../dsl/org.gradle.testing.jacoco.tasks.JacocoReport.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../groovydoc/org/gradle/api/plugins/sonar/model/SonarDatabase.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150510T143858Z" creationid="msdx" creationdate="20150510T143858Z">
        <seg>../groovydoc/org/gradle/api/plugins/sonar/model/SonarRootModel.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../groovydoc/org/gradle/api/plugins/sonar/model/SonarProject.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150510T143859Z" creationid="msdx" creationdate="20150510T143859Z">
        <seg>../groovydoc/org/gradle/api/plugins/sonar/model/SonarRootModel.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../groovydoc/org/gradle/api/plugins/sonar/model/SonarProjectModel.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T091356Z" creationid="msdx" creationdate="20150512T091356Z">
        <seg>../groovydoc/org/gradle/api/plugins/sonar/model/SonarRootModel.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../groovydoc/org/gradle/api/plugins/sonar/model/SonarProperty.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T092754Z" creationid="msdx" creationdate="20150512T092754Z">
        <seg>../groovydoc/org/gradle/api/plugins/sonar/model/SonarRootModel.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../groovydoc/org/gradle/api/plugins/sonar/model/SonarRootModel.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150510T143857Z" creationid="msdx" creationdate="20150510T143857Z">
        <seg>../groovydoc/org/gradle/api/plugins/sonar/model/SonarRootModel.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../groovydoc/org/gradle/api/plugins/sonar/model/SonarServer.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150510T143858Z" creationid="msdx" creationdate="20150510T143858Z">
        <seg>../groovydoc/org/gradle/api/plugins/sonar/model/SonarRootModel.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../groovydoc/org/gradle/api/sonar/runner/SonarRunner.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T062400Z" creationid="msdx" creationdate="20150513T062400Z">
        <seg>../groovydoc/org/gradle/api/sonar/runner/SonarRunner.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../groovydoc/org/gradle/plugins/ide/eclipse/model/Classpath.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T105327Z" creationid="haohang" creationdate="20150624T105257Z">
        <seg>../groovydoc/org/gradle/plugins/ide/eclipse/model/Classpath.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../groovydoc/org/gradle/plugins/ide/eclipse/model/Project.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T105252Z" creationid="haohang" creationdate="20150624T105252Z">
        <seg>../groovydoc/org/gradle/plugins/ide/eclipse/model/Project.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../groovydoc/org/gradle/plugins/ide/eclipse/model/WtpComponent.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T105355Z" creationid="haohang" creationdate="20150624T105349Z">
        <seg>../groovydoc/org/gradle/plugins/ide/eclipse/model/WtpComponent.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../groovydoc/org/gradle/plugins/ide/eclipse/model/WtpFacet.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T105405Z" creationid="haohang" creationdate="20150624T105405Z">
        <seg>../groovydoc/org/gradle/plugins/ide/eclipse/model/WtpFacet.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../groovydoc/org/gradle/plugins/ide/idea/model/Module.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T073731Z" creationid="haohang" creationdate="20150625T073731Z">
        <seg>../groovydoc/org/gradle/plugins/ide/idea/model/Module.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../groovydoc/org/gradle/plugins/ide/idea/model/Project.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T073723Z" creationid="haohang" creationdate="20150625T073723Z">
        <seg>../groovydoc/org/gradle/plugins/ide/idea/model/Project.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../groovydoc/org/gradle/plugins/ide/idea/model/Workspace.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T073754Z" creationid="haohang" creationdate="20150625T073754Z">
        <seg>../groovydoc/org/gradle/plugins/ide/idea/model/Workspace.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../groovydoc/org/gradle/plugins/signing/SigningExtension.html#setRequired(java.lang.Object)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160126T141412Z" creationid="95" creationdate="20160126T141412Z">
        <seg>../groovydoc/org/gradle/plugins/signing/SigningExtension.html#setRequired(java.lang.Object)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/BuildListener.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T155216Z" creationid="msdx" creationdate="20141116T155216Z">
        <seg>../javadoc/org/gradle/BuildListener.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/GradleLauncher.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T154818Z" creationid="95" creationdate="20161218T154818Z">
        <seg>../javadoc/org/gradle/GradleLauncher.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/api/Action.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T135114Z" creationid="95" creationdate="20160521T135110Z">
        <seg>../javadoc/org/gradle/api/Action.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/api/AntBuilder.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T044455Z" creationid="msdx" creationdate="20141108T044455Z">
        <seg>../javadoc/org/gradle/api/AntBuilder.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/api/JavaVersion.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083245Z" creationid="msdx" creationdate="20150428T083245Z">
        <seg>../javadoc/org/gradle/api/JavaVersion.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/api/NamedDomainObjectContainer.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T015302Z" creationid="95" creationdate="20161211T015302Z">
        <seg>../javadoc/org/gradle/api/NamedDomainObjectContainer.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/api/Plugin.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141122T162842Z" creationid="msdx" creationdate="20141122T162842Z">
        <seg>../javadoc/org/gradle/api/Plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/api/Plugin.html#apply(T)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160818T151632Z" creationid="95" creationdate="20160818T151632Z">
        <seg>../javadoc/org/gradle/api/Plugin.html#apply(T)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/api/ProjectEvaluationListener.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T155218Z" creationid="msdx" creationdate="20141116T155218Z">
        <seg>../javadoc/org/gradle/api/ProjectEvaluationListener.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/api/Task.html#shouldRunAfter(java.lang.Object...)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T013525Z" creationid="msdx" creationdate="20141111T013525Z">
        <seg>../javadoc/org/gradle/api/Task.html#shouldRunAfter(java.lang.Object...)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/api/XmlProvider.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T105323Z" creationid="haohang" creationdate="20150624T105253Z">
        <seg>../javadoc/org/gradle/api/XmlProvider.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/api/artifacts/ClientModule.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T091430Z" creationid="haohang" creationdate="20150801T091430Z">
        <seg>../javadoc/org/gradle/api/artifacts/ClientModule.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/api/artifacts/Dependency.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T094948Z" creationid="haohang" creationdate="20150801T094948Z">
        <seg>../javadoc/org/gradle/api/artifacts/Dependency.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/api/artifacts/ExternalModuleDependency.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T102909Z" creationid="haohang" creationdate="20150722T102909Z">
        <seg>../javadoc/org/gradle/api/artifacts/ExternalModuleDependency.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/api/artifacts/ModuleDependency.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T102952Z" creationid="haohang" creationdate="20150801T102952Z">
        <seg>../javadoc/org/gradle/api/artifacts/ModuleDependency.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/api/artifacts/ProjectDependency.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T092525Z" creationid="haohang" creationdate="20150801T092525Z">
        <seg>../javadoc/org/gradle/api/artifacts/ProjectDependency.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/api/artifacts/ResolvableDependencies.html#getResolutionResult()</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T033056Z" creationid="haohang" creationdate="20150807T033056Z">
        <seg>../javadoc/org/gradle/api/artifacts/ResolvableDependencies.html#getResolutionResult()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/api/artifacts/maven/Conf2ScopeMappingContainer.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151228T152758Z" creationid="95" creationdate="20151228T152758Z">
        <seg>../javadoc/org/gradle/api/artifacts/maven/Conf2ScopeMappingContainer.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/api/artifacts/maven/MavenDeployer.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T141855Z" creationid="95" creationdate="20160105T141855Z">
        <seg>../javadoc/org/gradle/api/artifacts/maven/MavenDeployer.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/api/artifacts/maven/MavenPom.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160104T152823Z" creationid="95" creationdate="20160104T152823Z">
        <seg>../javadoc/org/gradle/api/artifacts/maven/MavenPom.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/api/artifacts/maven/PomFilterContainer.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T144236Z" creationid="95" creationdate="20160106T144236Z">
        <seg>../javadoc/org/gradle/api/artifacts/maven/PomFilterContainer.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/api/artifacts/result/ResolutionResult.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T033058Z" creationid="haohang" creationdate="20150807T033058Z">
        <seg>../javadoc/org/gradle/api/artifacts/result/ResolutionResult.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/api/component/SoftwareComponent.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170211T140246Z" creationid="95" creationdate="20170211T140246Z">
        <seg>../javadoc/org/gradle/api/component/SoftwareComponent.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/api/distribution/Distribution.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150701T031650Z" creationid="haohang" creationdate="20150701T031650Z">
        <seg>../javadoc/org/gradle/api/distribution/Distribution.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/api/execution/TaskActionListener.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T155223Z" creationid="msdx" creationdate="20141116T155223Z">
        <seg>../javadoc/org/gradle/api/execution/TaskActionListener.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/api/execution/TaskExecutionGraph.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T135652Z" creationid="95" creationdate="20160521T135652Z">
        <seg>../javadoc/org/gradle/api/execution/TaskExecutionGraph.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/api/execution/TaskExecutionGraphListener.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T155220Z" creationid="msdx" creationdate="20141116T155220Z">
        <seg>../javadoc/org/gradle/api/execution/TaskExecutionGraphListener.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/api/execution/TaskExecutionListener.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T155222Z" creationid="msdx" creationdate="20141116T155222Z">
        <seg>../javadoc/org/gradle/api/execution/TaskExecutionListener.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/api/file/CopySpec.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T123855Z" creationid="msdx" creationdate="20141113T123855Z">
        <seg>../javadoc/org/gradle/api/file/CopySpec.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/api/file/CopySpec.html#from(java.lang.Object...)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T123855Z" creationid="msdx" creationdate="20141113T123855Z">
        <seg>../javadoc/org/gradle/api/file/CopySpec.html#from(java.lang.Object...)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/api/file/CopySpec.html#into(java.lang.Object)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T123858Z" creationid="msdx" creationdate="20141113T123858Z">
        <seg>../javadoc/org/gradle/api/file/CopySpec.html#into(java.lang.Object)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/api/file/FileCollection.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T144830Z" creationid="msdx" creationdate="20141112T144830Z">
        <seg>../javadoc/org/gradle/api/file/FileCollection.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/api/file/FileTree.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T161530Z" creationid="msdx" creationdate="20141112T161530Z">
        <seg>../javadoc/org/gradle/api/file/FileTree.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/api/file/SourceDirectorySet.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083343Z" creationid="msdx" creationdate="20150428T083343Z">
        <seg>../javadoc/org/gradle/api/file/SourceDirectorySet.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/api/initialization/ProjectDescriptor.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T070501Z" creationid="haohang" creationdate="20160519T070501Z">
        <seg>../javadoc/org/gradle/api/initialization/ProjectDescriptor.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/api/initialization/dsl/ScriptHandler.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161212T153753Z" creationid="95" creationdate="20161212T153753Z">
        <seg>../javadoc/org/gradle/api/initialization/dsl/ScriptHandler.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/api/java/archives/Manifest.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083246Z" creationid="msdx" creationdate="20150428T083246Z">
        <seg>../javadoc/org/gradle/api/java/archives/Manifest.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/api/java/archives/ManifestMergeDetails.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T145619Z" creationid="msdx" creationdate="20150428T145619Z">
        <seg>../javadoc/org/gradle/api/java/archives/ManifestMergeDetails.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/api/logging/Logger.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T122541Z" creationid="msdx" creationdate="20141116T122541Z">
        <seg>../javadoc/org/gradle/api/logging/Logger.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/api/logging/LoggingManager.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T131052Z" creationid="msdx" creationdate="20141116T131052Z">
        <seg>../javadoc/org/gradle/api/logging/LoggingManager.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/api/plugins/ExtensionContainer.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T124016Z" creationid="95" creationdate="20160820T124016Z">
        <seg>../javadoc/org/gradle/api/plugins/ExtensionContainer.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/api/plugins/JavaPlugin.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141122T162033Z" creationid="msdx" creationdate="20141122T162033Z">
        <seg>../javadoc/org/gradle/api/plugins/JavaPlugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/api/plugins/osgi/OsgiManifest.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150526T003756Z" creationid="haohang" creationdate="20150526T003756Z">
        <seg>../javadoc/org/gradle/api/plugins/osgi/OsgiManifest.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/api/publish/maven/tasks/PublishToMavenLocal.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170412T153402Z" creationid="95" creationdate="20170412T153402Z">
        <seg>../javadoc/org/gradle/api/publish/maven/tasks/PublishToMavenLocal.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/api/tasks/JavaExec.html#setDebug(boolean)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150702T103936Z" creationid="haohang" creationdate="20150702T103936Z">
        <seg>../javadoc/org/gradle/api/tasks/JavaExec.html#setDebug(boolean)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/api/tasks/SourceSetContainer.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083244Z" creationid="msdx" creationdate="20150428T083244Z">
        <seg>../javadoc/org/gradle/api/tasks/SourceSetContainer.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/api/tasks/StopExecutionException.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T021050Z" creationid="msdx" creationdate="20141111T021050Z">
        <seg>../javadoc/org/gradle/api/tasks/StopExecutionException.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/api/tasks/TaskAction.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T145409Z" creationid="95" creationdate="20160814T145409Z">
        <seg>../javadoc/org/gradle/api/tasks/TaskAction.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/api/tasks/TaskContainer.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T023141Z" creationid="msdx" creationdate="20141110T023141Z">
        <seg>../javadoc/org/gradle/api/tasks/TaskContainer.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/api/tasks/TaskInputs.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T061359Z" creationid="msdx" creationdate="20141111T061359Z">
        <seg>../javadoc/org/gradle/api/tasks/TaskInputs.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/api/tasks/TaskOutputs.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T061401Z" creationid="msdx" creationdate="20141111T061401Z">
        <seg>../javadoc/org/gradle/api/tasks/TaskOutputs.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/api/tasks/TaskOutputs.html#upToDateWhen(groovy.lang.Closure)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T061518Z" creationid="msdx" creationdate="20141111T061518Z">
        <seg>../javadoc/org/gradle/api/tasks/TaskOutputs.html#upToDateWhen(groovy.lang.Closure)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/api/tasks/testing/Test.html#setMaxParallelForks(int)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T085948Z" creationid="haohang" creationdate="20160726T085948Z">
        <seg>../javadoc/org/gradle/api/tasks/testing/Test.html#setMaxParallelForks(int)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/api/tasks/testing/Test.html#setTestReport(boolean)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T142025Z" creationid="msdx" creationdate="20150428T142025Z">
        <seg>../javadoc/org/gradle/api/tasks/testing/Test.html#setTestReport(boolean)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/api/tasks/testing/TestFilter.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083456Z" creationid="msdx" creationdate="20150428T083456Z">
        <seg>../javadoc/org/gradle/api/tasks/testing/TestFilter.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/external/javadoc/CoreJavadocOptions.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083435Z" creationid="msdx" creationdate="20150428T083435Z">
        <seg>../javadoc/org/gradle/external/javadoc/CoreJavadocOptions.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/external/javadoc/StandardJavadocDocletOptions.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083436Z" creationid="msdx" creationdate="20150428T083436Z">
        <seg>../javadoc/org/gradle/external/javadoc/StandardJavadocDocletOptions.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/language/base/FunctionalSourceSet.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160128T153606Z" creationid="95" creationdate="20160128T153606Z">
        <seg>../javadoc/org/gradle/language/base/FunctionalSourceSet.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/nativebinaries/test/TestSuiteExecutableBinary.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160504T150553Z" creationid="95" creationdate="20160504T150553Z">
        <seg>../javadoc/org/gradle/nativebinaries/test/TestSuiteExecutableBinary.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/nativebinaries/toolchain/TargetPlatformConfiguration.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T092744Z" creationid="haohang" creationdate="20160408T092744Z">
        <seg>../javadoc/org/gradle/nativebinaries/toolchain/TargetPlatformConfiguration.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/plugins/ide/eclipse/model/Jdt.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T105305Z" creationid="haohang" creationdate="20150624T105305Z">
        <seg>../javadoc/org/gradle/plugins/ide/eclipse/model/Jdt.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/process/JavaForkOptions.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T132326Z" creationid="msdx" creationdate="20150506T132326Z">
        <seg>../javadoc/org/gradle/process/JavaForkOptions.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/testfixtures/ProjectBuilder.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160815T145953Z" creationid="95" creationdate="20160815T145953Z">
        <seg>../javadoc/org/gradle/testfixtures/ProjectBuilder.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/testing/jacoco/tasks/JacocoReportsContainer.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T131641Z" creationid="msdx" creationdate="20150506T131641Z">
        <seg>../javadoc/org/gradle/testing/jacoco/tasks/JacocoReportsContainer.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>../javadoc/org/gradle/tooling/GradleConnector.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T155450Z" creationid="95" creationdate="20161218T155450Z">
        <seg>../javadoc/org/gradle/tooling/GradleConnector.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>// Maven2 layout (if a repository is marked as Maven2 compatible, the organization (group) is split into subfolders according to the dots.)
someroot/[organisation]/[module]/[revision]/[module]-[revision].[ext]

// Typical layout for an Ivy repository (the organization is not split into subfolder)
someroot/[organisation]/[module]/[revision]/[type]s/[artifact].[ext]

// Simple layout (the organization is not used, no nested folders.)
someroot/[artifact]-[revision].[ext]</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T134609Z" creationid="95" creationdate="20151006T134609Z">
        <seg>// Maven2 layout (if a repository is marked as Maven2 compatible, the organization (group) is split into subfolders according to the dots.)
someroot/[organisation]/[module]/[revision]/[module]-[revision].[ext]

// Typical layout for an Ivy repository (the organization is not split into subfolder)
someroot/[organisation]/[module]/[revision]/[type]s/[artifact].[ext]

// Simple layout (the organization is not used, no nested folders.)
someroot/[artifact]-[revision].[ext]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>// Use Java 6's console to read from the console (no good for a CI environment)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160108T152904Z" creationid="95" creationdate="20160108T152904Z">
        <seg>// Use Java 6's console to read from the console (no good for a CI environment)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>/home/user/gradle/samples/native-binaries/cunit/src/operatorsTest/cunit/test_plus.c:6  - plus(0, -2) == -2</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160504T151530Z" creationid="95" creationdate="20160504T151530Z">
        <seg>/home/user/gradle/samples/native-binaries/cunit/src/operatorsTest/cunit/test_plus.c:6  - plus(0, -2) == -2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>/home/user/gradle/samples/native-binaries/cunit/src/operatorsTest/cunit/test_plus.c:7  - plus(2, 2) == 4

:runFailingOperatorsTestCUnitExe FAILED

BUILD FAILED

Total time: 1 secs</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160504T151534Z" creationid="95" creationdate="20160504T151534Z">
        <seg>/home/user/gradle/samples/native-binaries/cunit/src/operatorsTest/cunit/test_plus.c:7  - plus(2, 2) == 4

:runFailingOperatorsTestCUnitExe FAILED

BUILD FAILED

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T161837Z" creationid="msdx" creationdate="20141109T161837Z">
        <seg>1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>1.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T161843Z" creationid="msdx" creationdate="20141109T161843Z">
        <seg>1.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>1.txt</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160817T145710Z" creationid="95" creationdate="20160817T145710Z">
        <seg>1.txt</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>10.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163736Z" creationid="msdx" creationdate="20141109T163736Z">
        <seg>10.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>10.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163746Z" creationid="msdx" creationdate="20141109T163746Z">
        <seg>10.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>10.1. Building a WAR file</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T084909Z" creationid="msdx" creationdate="20141030T084909Z">
        <seg>10.1. 构建一个WAR文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>10.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163758Z" creationid="msdx" creationdate="20141109T163758Z">
        <seg>10.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>10.2. Running your web application</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T091033Z" creationid="msdx" creationdate="20141030T091033Z">
        <seg>10.2.运行您的 web 应用程序</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>10.3.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163811Z" creationid="msdx" creationdate="20141109T163811Z">
        <seg>10.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>10.3. Summary</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T123416Z" creationid="msdx" creationdate="20141030T095653Z">
        <seg>10.3.总结</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>11.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163813Z" creationid="msdx" creationdate="20141109T163813Z">
        <seg>11.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>11.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163826Z" creationid="msdx" creationdate="20141109T163826Z">
        <seg>11.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>11.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163832Z" creationid="msdx" creationdate="20141109T163832Z">
        <seg>11.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>11.3.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163847Z" creationid="msdx" creationdate="20141109T163847Z">
        <seg>11.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>11.4.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163857Z" creationid="msdx" creationdate="20141109T163857Z">
        <seg>11.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>11.5.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163908Z" creationid="msdx" creationdate="20141109T163908Z">
        <seg>11.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>11.6.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163922Z" creationid="msdx" creationdate="20141109T163922Z">
        <seg>11.6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>11.7.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163937Z" creationid="msdx" creationdate="20141109T163937Z">
        <seg>11.7.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>11.8.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T164818Z" creationid="msdx" creationdate="20141109T164818Z">
        <seg>11.8.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>12.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T164820Z" creationid="msdx" creationdate="20141109T164820Z">
        <seg>12.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>12.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T031056Z" creationid="msdx" creationdate="20141108T031056Z">
        <seg>12.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>12.1. Task Tree</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T150950Z" creationid="msdx" creationdate="20141105T150950Z">
        <seg>12.1. 任务树</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>12.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T164822Z" creationid="msdx" creationdate="20141109T164822Z">
        <seg>12.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>12.2. Favorites</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T154402Z" creationid="msdx" creationdate="20141105T154402Z">
        <seg>12.2. 收藏夹</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>12.3.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T164823Z" creationid="msdx" creationdate="20141109T164823Z">
        <seg>12.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>12.3. Command Line</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T160003Z" creationid="msdx" creationdate="20141105T160003Z">
        <seg>12.3. 命令行</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>12.4.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T164826Z" creationid="msdx" creationdate="20141109T164826Z">
        <seg>12.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>12.4. Setup</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T160611Z" creationid="msdx" creationdate="20141105T160611Z">
        <seg>12.4. 设置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>13.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T164828Z" creationid="msdx" creationdate="20141109T164828Z">
        <seg>13.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>13.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T164831Z" creationid="msdx" creationdate="20141109T164831Z">
        <seg>13.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>13.1. The Gradle build language</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T161444Z" creationid="msdx" creationdate="20141108T034611Z">
        <seg>13.1. Gradle 构建语言</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>13.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T164841Z" creationid="msdx" creationdate="20141109T164841Z">
        <seg>13.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>13.2.1. Standard project properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T043844Z" creationid="msdx" creationdate="20141108T043844Z">
        <seg>13.2.1. 标准project属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>13.2. The Project API</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T040425Z" creationid="msdx" creationdate="20141108T035914Z">
        <seg>13.2. Project API</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>13.3.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T164850Z" creationid="msdx" creationdate="20141109T164850Z">
        <seg>13.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>13.3. The Script API</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T044523Z" creationid="msdx" creationdate="20141108T044523Z">
        <seg>13.3.  Script API</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>13.4.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T164854Z" creationid="msdx" creationdate="20141109T164854Z">
        <seg>13.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>13.4.1. Local variables</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T045137Z" creationid="msdx" creationdate="20141108T044841Z">
        <seg>13.4.1. 局部变量局部</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>13.4.2. Extra properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T050415Z" creationid="msdx" creationdate="20141108T045233Z">
        <seg>13.4.2. 额外属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>13.4. Declaring variables</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T044747Z" creationid="msdx" creationdate="20141108T044743Z">
        <seg>13.4. 声明变量</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>13.5.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T164859Z" creationid="msdx" creationdate="20141109T164859Z">
        <seg>13.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>13.5.1. Groovy JDK</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T061009Z" creationid="msdx" creationdate="20141108T061009Z">
        <seg>13.5.1. Groovy JDK</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>13.5.2. Property accessors</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T061433Z" creationid="msdx" creationdate="20141108T061429Z">
        <seg>13.5.2. 属性访问器</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>13.5.3. Optional parentheses on method calls</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T062539Z" creationid="msdx" creationdate="20141108T061841Z">
        <seg>13.5.3 括号可选的方法调用</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>13.5.4. List and map literals</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T062739Z" creationid="msdx" creationdate="20141108T062739Z">
        <seg>13.5.4. List 和 Map </seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>13.5.5. Closures as the last parameter in a method</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T063201Z" creationid="msdx" creationdate="20141108T063201Z">
        <seg>13.5.5.作为方法最后一个参数的闭包</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>13.5.6. Closure delegate</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T063606Z" creationid="msdx" creationdate="20141108T063425Z">
        <seg>13.5.6. 闭包委托（delegate）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>13.5. Some Groovy basics</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T055511Z" creationid="msdx" creationdate="20141108T055511Z">
        <seg>13.5.一些 Groovy 的基础知识</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>14.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T164909Z" creationid="msdx" creationdate="20141109T164909Z">
        <seg>14.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>14.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T164919Z" creationid="msdx" creationdate="20141109T164919Z">
        <seg>14.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>14.1. Directory creation</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T072428Z" creationid="msdx" creationdate="20141109T072428Z">
        <seg>14.1. 创建目录</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>14.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T164926Z" creationid="msdx" creationdate="20141109T164926Z">
        <seg>14.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>14.2.1. Checking for project properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T151230Z" creationid="msdx" creationdate="20141109T151230Z">
        <seg>14.2.1.检查项目的属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>14.2. Gradle properties and system properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T073712Z" creationid="msdx" creationdate="20141109T073712Z">
        <seg>14.2. Gradle 属性和系统属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>14.3.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T164934Z" creationid="msdx" creationdate="20141109T164934Z">
        <seg>14.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>14.3. Configuring the project using an external build script</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T152047Z" creationid="msdx" creationdate="20141109T152047Z">
        <seg>14.3. 使用外部构建脚本配置项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>14.4.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T164944Z" creationid="msdx" creationdate="20141109T164944Z">
        <seg>14.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>14.4. Configuring arbitrary objects</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T152513Z" creationid="msdx" creationdate="20141109T152513Z">
        <seg>14.4. 配置任意对象</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>14.5.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T164951Z" creationid="msdx" creationdate="20141109T164951Z">
        <seg>14.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>14.5. Configuring arbitrary objects using an external script</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T152919Z" creationid="msdx" creationdate="20141109T152851Z">
        <seg>14.5. 使用外部脚本配置任意对象</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>14.6.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T165000Z" creationid="msdx" creationdate="20141109T165000Z">
        <seg>14.6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>14.6. Caching</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T153053Z" creationid="msdx" creationdate="20141109T153053Z">
        <seg>14.6. 缓存</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>15.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T165003Z" creationid="msdx" creationdate="20141109T165003Z">
        <seg>15.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>15.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T030352Z" creationid="msdx" creationdate="20150501T030352Z">
        <seg>15.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>15.1. Defining tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T160804Z" creationid="msdx" creationdate="20141109T160804Z">
        <seg>15.1. 定义任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>15.10.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T030358Z" creationid="msdx" creationdate="20150501T030358Z">
        <seg>15.10.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>15.10. Task rules</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T064203Z" creationid="msdx" creationdate="20141111T064203Z">
        <seg>15.10. 任务规则</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>15.11.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T030358Z" creationid="msdx" creationdate="20150501T030358Z">
        <seg>15.11.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>15.11. Finalizer tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T070408Z" creationid="msdx" creationdate="20141111T065725Z">
        <seg>15.11. 析构器任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>15.12.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T030359Z" creationid="msdx" creationdate="20150501T030359Z">
        <seg>15.12.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>15.12. Summary</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T123436Z" creationid="msdx" creationdate="20141111T123221Z">
        <seg>15.12. 总结</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>15.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T030352Z" creationid="msdx" creationdate="20150501T030352Z">
        <seg>15.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>15.2. Locating tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150330T150943Z" creationid="msdx" creationdate="20141110T023434Z">
        <seg>15.2. 查找任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>15.3.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T030353Z" creationid="msdx" creationdate="20150501T030353Z">
        <seg>15.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>15.3. Configuring tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T090054Z" creationid="msdx" creationdate="20141110T090054Z">
        <seg>15.3. .配置任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>15.4.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T030354Z" creationid="msdx" creationdate="20150501T030354Z">
        <seg>15.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>15.4. Adding dependencies to a task</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150330T141639Z" creationid="msdx" creationdate="20141110T100017Z">
        <seg>15.4. 向任务添加依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>15.5.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T030355Z" creationid="msdx" creationdate="20150501T030355Z">
        <seg>15.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>15.5. Ordering tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T124019Z" creationid="msdx" creationdate="20141110T124019Z">
        <seg>15.5. 任务排序</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>15.6.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T030356Z" creationid="msdx" creationdate="20150501T030356Z">
        <seg>15.6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>15.6. Adding a description to a task</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T015007Z" creationid="msdx" creationdate="20141111T015007Z">
        <seg>15.6. 向任务添加描述</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>15.7.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T030356Z" creationid="msdx" creationdate="20150501T030356Z">
        <seg>15.7.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>15.7. Replacing tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T015829Z" creationid="msdx" creationdate="20141111T015531Z">
        <seg>15.7. 替换任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>15.8.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T030357Z" creationid="msdx" creationdate="20150501T030357Z">
        <seg>15.8.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>15.8.1. Using a predicate</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T020334Z" creationid="msdx" creationdate="20141111T020304Z">
        <seg>15.8.1. 使用断言</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>15.8.2. Using StopExecutionException</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T021045Z" creationid="msdx" creationdate="20141111T021045Z">
        <seg>15.8.2. 使用 StopExecutionException</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>15.8.3. Enabling and disabling tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T055510Z" creationid="msdx" creationdate="20141111T055510Z">
        <seg>15.8.3. 启用和禁用任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>15.8. Skipping tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T020253Z" creationid="msdx" creationdate="20141111T020253Z">
        <seg>15.8. 跳过任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>15.9.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T030357Z" creationid="msdx" creationdate="20150501T030357Z">
        <seg>15.9.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>15.9.1. Declaring a task's inputs and outputs</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T060227Z" creationid="msdx" creationdate="20141111T060205Z">
        <seg>15.9.1. 声明一个任务的输入和输出</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>15.9.2. How does it work?</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T063038Z" creationid="msdx" creationdate="20141111T063038Z">
        <seg>15.9.2. 它是怎么实现的？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>15.9. Skipping tasks that are up-to-date</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T055840Z" creationid="msdx" creationdate="20141111T055840Z">
        <seg>15.9.  跳过处于最新状态的任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>16.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T030359Z" creationid="msdx" creationdate="20150501T030359Z">
        <seg>16.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>16.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T030359Z" creationid="msdx" creationdate="20150501T030359Z">
        <seg>16.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>16.1. Locating files</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T125316Z" creationid="msdx" creationdate="20141111T125316Z">
        <seg>16.1. 定位文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>16.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T030359Z" creationid="msdx" creationdate="20150501T030359Z">
        <seg>16.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>16.2. File collections</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150330T141559Z" creationid="msdx" creationdate="20141112T144829Z">
        <seg>16.2. 文件集合</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>16.3.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T030400Z" creationid="msdx" creationdate="20150501T030400Z">
        <seg>16.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>16.3. File trees</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T161530Z" creationid="msdx" creationdate="20141112T161530Z">
        <seg>16.3. 文件树</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>16.4.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T030401Z" creationid="msdx" creationdate="20150501T030401Z">
        <seg>16.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>16.4. Using the contents of an archive as a file tree</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T120410Z" creationid="msdx" creationdate="20141113T120410Z">
        <seg>16.4. 使用归档文件的内容作为文件树</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>16.5.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T030401Z" creationid="msdx" creationdate="20150501T030401Z">
        <seg>16.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>16.5. Specifying a set of input files</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T122856Z" creationid="msdx" creationdate="20141113T122856Z">
        <seg>16.5. 指定一组输入文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>16.6.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T030402Z" creationid="msdx" creationdate="20150501T030402Z">
        <seg>16.6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>16.6.1. Renaming files</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T140648Z" creationid="msdx" creationdate="20141113T140648Z">
        <seg>16.6.1. 重命名文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>16.6.2. Filtering files</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T140725Z" creationid="msdx" creationdate="20141113T140725Z">
        <seg>16.6. 过滤文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>16.6.3. Using the <bpt i="0" x="0">&lt;c0&gt;</bpt>CopySpec<ept i="0">&lt;/c0&gt;</ept> class</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T140910Z" creationid="msdx" creationdate="20141113T140910Z">
        <seg>16.6.3. 使用<bpt i="0" x="0">&lt;c0&gt;</bpt>CopySpec<ept i="0">&lt;/c0&gt;</ept>类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>16.6. Copying files</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T123643Z" creationid="msdx" creationdate="20141113T123643Z">
        <seg>16.6. 复制文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>16.7.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T030402Z" creationid="msdx" creationdate="20150501T030402Z">
        <seg>16.7.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>16.7. Using the <bpt i="0" x="0">&lt;c0&gt;</bpt>Sync<ept i="0">&lt;/c0&gt;</ept> task</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T143943Z" creationid="msdx" creationdate="20141113T143943Z">
        <seg>16.7. 使用<bpt i="0" x="0">&lt;c0&gt;</bpt>Sync<ept i="0">&lt;/c0&gt;</ept>任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>16.8.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T030403Z" creationid="msdx" creationdate="20150501T030403Z">
        <seg>16.8.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>16.8.1. Archive naming</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T154626Z" creationid="msdx" creationdate="20141113T154626Z">
        <seg>16.8.1. 归档命名</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>16.8.2. Sharing content between multiple archives</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T160721Z" creationid="msdx" creationdate="20141113T160721Z">
        <seg>16.8.2. 共享多个归档之间的内容</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>16.8. Creating archives</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T145507Z" creationid="msdx" creationdate="20141113T145507Z">
        <seg>16.8. 创建归档文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>17.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T030403Z" creationid="msdx" creationdate="20150501T030403Z">
        <seg>17.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>17.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T030405Z" creationid="msdx" creationdate="20150501T030405Z">
        <seg>17.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>17.1.1. Using custom Ant tasks in your build</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T011536Z" creationid="msdx" creationdate="20141116T011536Z">
        <seg>17.1.1. 在您的构建中使用自定义 Ant 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>17.1. Using Ant tasks and types in your build</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141114T143250Z" creationid="msdx" creationdate="20141114T143250Z">
        <seg>17.1. 在构建中使用 Ant 任务和类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>17.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T030405Z" creationid="msdx" creationdate="20150501T030405Z">
        <seg>17.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>17.2. Importing an Ant build</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T060645Z" creationid="msdx" creationdate="20141116T060645Z">
        <seg>17.2. 导入 Ant 构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>17.3.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T030406Z" creationid="msdx" creationdate="20150501T030406Z">
        <seg>17.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>17.3. Ant properties and references</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T061157Z" creationid="msdx" creationdate="20141116T061157Z">
        <seg>17.3. Ant 属性和引用</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>17.4.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T030407Z" creationid="msdx" creationdate="20150501T030407Z">
        <seg>17.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>17.4. API</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T062723Z" creationid="msdx" creationdate="20141116T062723Z">
        <seg>17.4. API</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>18.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T030407Z" creationid="msdx" creationdate="20150501T030407Z">
        <seg>18.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>18.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T030408Z" creationid="msdx" creationdate="20150501T030408Z">
        <seg>18.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>18.1. Choosing a log level</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T070958Z" creationid="msdx" creationdate="20141116T070958Z">
        <seg>18.1. 选择一个日志级别</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>18.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T030409Z" creationid="msdx" creationdate="20150501T030409Z">
        <seg>18.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>18.2. Writing your own log messages</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T113137Z" creationid="msdx" creationdate="20141116T113137Z">
        <seg>18.2. 编写自己的日志消息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>18.3.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T030410Z" creationid="msdx" creationdate="20150501T030410Z">
        <seg>18.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>18.3. Logging from external tools and libraries</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T034124Z" creationid="msdx" creationdate="20141116T130627Z">
        <seg>18.3. 使用外部的工具和类库来记录日志</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>18.4.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T030413Z" creationid="msdx" creationdate="20150501T030413Z">
        <seg>18.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>18.4. Changing what Gradle logs</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T152843Z" creationid="msdx" creationdate="20141116T152843Z">
        <seg>18.4. 改变 Gradle 日志</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>19.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T030433Z" creationid="msdx" creationdate="20150501T030433Z">
        <seg>19.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>19.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150508T131739Z" creationid="msdx" creationdate="20150508T131739Z">
        <seg>19.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>19.1. Enter the daemon</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141117T131818Z" creationid="msdx" creationdate="20141117T123824Z">
        <seg>19.1. 走进守护进程</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>19.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150508T131746Z" creationid="msdx" creationdate="20150508T131746Z">
        <seg>19.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>19.2. Reusing and expiration of daemons</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141117T151322Z" creationid="msdx" creationdate="20141117T151322Z">
        <seg>19.2. 重用和失效的守护程序</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>19.3.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150508T131756Z" creationid="msdx" creationdate="20150508T131756Z">
        <seg>19.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>19.3. Usage and troubleshooting</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141118T095701Z" creationid="msdx" creationdate="20141118T095701Z">
        <seg>19.3. 用法和故障排除</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>19.4.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150508T131802Z" creationid="msdx" creationdate="20150508T131802Z">
        <seg>19.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>19.4. Configuring the daemon</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141119T030840Z" creationid="msdx" creationdate="20141119T030840Z">
        <seg>19.4. 配置守护进程</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T161850Z" creationid="msdx" creationdate="20141109T161850Z">
        <seg>2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>2.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T161854Z" creationid="msdx" creationdate="20141109T161854Z">
        <seg>2.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>2.1. Features</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141101T034425Z" creationid="msdx" creationdate="20141101T034417Z">
        <seg>2.1. 特性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>2.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T161959Z" creationid="msdx" creationdate="20141109T161959Z">
        <seg>2.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>2.txt</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160817T145712Z" creationid="95" creationdate="20160817T145712Z">
        <seg>2.txt</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>20.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150508T131810Z" creationid="msdx" creationdate="20150508T131810Z">
        <seg>20.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>20.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150508T131814Z" creationid="msdx" creationdate="20150508T131814Z">
        <seg>20.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>20.1.1. Forked java processes</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141120T053834Z" creationid="msdx" creationdate="20141120T053834Z">
        <seg>20.1.1. Forked java 进程</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>20.1. Configuring the build environment via gradle.properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141119T031610Z" creationid="msdx" creationdate="20141119T031610Z">
        <seg>20.1. 通过 gradle.properties 配置构建环境</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>20.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150508T131820Z" creationid="msdx" creationdate="20150508T131820Z">
        <seg>20.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>20.2.1. NTLM Authentication</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141121T142419Z" creationid="msdx" creationdate="20141121T142408Z">
        <seg>20.2.1. NTLM 身份验证</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>20.2. Accessing the web via a proxy</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141121T141218Z" creationid="msdx" creationdate="20141121T141218Z">
        <seg>20.2. 通过代理访问网站</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>21.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150508T131829Z" creationid="msdx" creationdate="20150508T131829Z">
        <seg>21.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>21.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131415Z" creationid="msdx" creationdate="20150509T131415Z">
        <seg>21.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>21.1. Applying plugins</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141122T161836Z" creationid="msdx" creationdate="20141122T161836Z">
        <seg>21.1. 应用插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>21.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131421Z" creationid="msdx" creationdate="20150509T131421Z">
        <seg>21.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>21.2. What plugins do</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141123T150732Z" creationid="msdx" creationdate="20141123T150732Z">
        <seg>21.2. 插件都做了什么</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>21.3.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131429Z" creationid="msdx" creationdate="20150509T131429Z">
        <seg>21.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>21.3. Conventions</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141123T151310Z" creationid="msdx" creationdate="20141123T151310Z">
        <seg>21.3. 约定</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>21.4.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131514Z" creationid="msdx" creationdate="20150509T131514Z">
        <seg>21.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>21.4. More on plugins</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141124T095258Z" creationid="msdx" creationdate="20141124T095258Z">
        <seg>21.4. 更多关于插件的内容</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>22.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131520Z" creationid="msdx" creationdate="20150509T131520Z">
        <seg>22.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>22.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131529Z" creationid="msdx" creationdate="20150509T131529Z">
        <seg>22.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>22.1. Language plugins</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141126T120655Z" creationid="msdx" creationdate="20141126T120655Z">
        <seg>22.1. 语言插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>22.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131534Z" creationid="msdx" creationdate="20150509T131534Z">
        <seg>22.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>22.2. Incubating language plugins</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141209T073715Z" creationid="msdx" creationdate="20141209T073546Z">
        <seg>22.2. 正在孵化的语言插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>22.3.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131541Z" creationid="msdx" creationdate="20150509T131541Z">
        <seg>22.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>22.3. Integration plugins</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141209T074424Z" creationid="msdx" creationdate="20141209T074424Z">
        <seg>22.3. 集成插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>22.4.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131547Z" creationid="msdx" creationdate="20150509T131547Z">
        <seg>22.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>22.4. Incubating integration plugins</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T031727Z" creationid="Administrator" creationdate="20150425T031727Z">
        <seg>22.4. 孵化中的集成插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>22.5.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131551Z" creationid="msdx" creationdate="20150509T131551Z">
        <seg>22.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>22.5. Software development plugins</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T032321Z" creationid="Administrator" creationdate="20150425T032321Z">
        <seg>22.5. 软件开发插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>22.6.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131555Z" creationid="msdx" creationdate="20150509T131555Z">
        <seg>22.6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>22.6. Incubating software development plugins</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T035832Z" creationid="Administrator" creationdate="20150425T035832Z">
        <seg>22.6. 孵化中的软件开发插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>22.7.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131558Z" creationid="msdx" creationdate="20150509T131558Z">
        <seg>22.7.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>22.7. Base plugins</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T040539Z" creationid="Administrator" creationdate="20150425T040539Z">
        <seg>22.7. 基本插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>22.8.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131602Z" creationid="msdx" creationdate="20150509T131602Z">
        <seg>22.8.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>22.8. Third party plugins</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T072519Z" creationid="Administrator" creationdate="20150425T072519Z">
        <seg>22.8. 第三方插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>23.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131605Z" creationid="msdx" creationdate="20150509T131605Z">
        <seg>23.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>23.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131609Z" creationid="msdx" creationdate="20150509T131609Z">
        <seg>23.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>23.1. Usage</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T073543Z" creationid="Administrator" creationdate="20150425T073543Z">
        <seg>23.1. 用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>23.10.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131754Z" creationid="msdx" creationdate="20150509T131754Z">
        <seg>23.10.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>23.10. Resources</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T134512Z" creationid="Administrator" creationdate="20150427T134512Z">
        <seg>23.10. 资源</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>23.11.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131803Z" creationid="msdx" creationdate="20150509T131803Z">
        <seg>23.11.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>23.11. CompileJava</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T134842Z" creationid="Administrator" creationdate="20150427T134842Z">
        <seg>23.11. CompileJava</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>23.12.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131810Z" creationid="msdx" creationdate="20150509T131810Z">
        <seg>23.12.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>23.12.1. Test execution</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T140352Z" creationid="Administrator" creationdate="20150427T140352Z">
        <seg>23.12.1. 测试执行</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>23.12.2. Debugging</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T015418Z" creationid="Administrator" creationdate="20150428T015418Z">
        <seg>23.12.2. 调试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>23.12.3. Test filtering</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T021658Z" creationid="Administrator" creationdate="20150428T015805Z">
        <seg>23.12.3. 测试过滤</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>23.12.4. Single test execution via System Properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T035202Z" creationid="Administrator" creationdate="20150428T035202Z">
        <seg>23.12.4. 通过系统属性执行单一的测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>23.12.5. Test detection</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T040258Z" creationid="Administrator" creationdate="20150428T040258Z">
        <seg>23.12.5. 测试检测</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>23.12.6. Test grouping</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T082059Z" creationid="Administrator" creationdate="20150428T082059Z">
        <seg>23.12.6. 测试分组</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>23.12.7.1. TestNG parameterized methods and reporting</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T143801Z" creationid="msdx" creationdate="20150428T143801Z">
        <seg>23.12.7.1. TestNG 参数化方法和报告</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>23.12.7. Test reporting</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083208Z" creationid="msdx" creationdate="20150428T083208Z">
        <seg>23.12.7. 测试报告</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>23.12.8. Convention values</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T144333Z" creationid="msdx" creationdate="20150428T144333Z">
        <seg>23.12.8. 常规值</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>23.12. Test</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083448Z" creationid="msdx" creationdate="20150428T083448Z">
        <seg>23.12. Test</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>23.13.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131827Z" creationid="msdx" creationdate="20150509T131827Z">
        <seg>23.13.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>23.13.1. Manifest</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T145132Z" creationid="msdx" creationdate="20150428T145020Z">
        <seg>23.13.1. Manifest</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>23.13. Jar</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T144402Z" creationid="msdx" creationdate="20150428T144402Z">
        <seg>23.13. Jar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>23.14.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131829Z" creationid="msdx" creationdate="20150509T131829Z">
        <seg>23.14.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>23.14. Uploading</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T151512Z" creationid="msdx" creationdate="20150428T151512Z">
        <seg>23.14. 上传</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>23.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131615Z" creationid="msdx" creationdate="20150509T131615Z">
        <seg>23.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>23.2. Source sets</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T073944Z" creationid="Administrator" creationdate="20150425T073900Z">
        <seg>23.2 源集</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>23.3.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131627Z" creationid="msdx" creationdate="20150509T131627Z">
        <seg>23.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>23.3. Tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T173937Z" creationid="Administrator" creationdate="20150425T173937Z">
        <seg>23.3. 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>23.4.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131636Z" creationid="msdx" creationdate="20150509T131636Z">
        <seg>23.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>23.4.1. Changing the project layout</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T083534Z" creationid="Administrator" creationdate="20150426T083534Z">
        <seg>23.4.1. 更改项目布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>23.4. Project layout</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T082958Z" creationid="Administrator" creationdate="20150426T082958Z">
        <seg>23.4. 项目布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>23.5.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131641Z" creationid="msdx" creationdate="20150509T131641Z">
        <seg>23.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>23.5. Dependency management</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T083835Z" creationid="Administrator" creationdate="20150426T083835Z">
        <seg>23.5. 依赖管理</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>23.6.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131645Z" creationid="msdx" creationdate="20150509T131645Z">
        <seg>23.6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>23.6. Convention properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T085556Z" creationid="Administrator" creationdate="20150426T085239Z">
        <seg>23.6. 常规属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>23.7.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131651Z" creationid="msdx" creationdate="20150509T131651Z">
        <seg>23.7.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>23.7.1. Source set properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T051128Z" creationid="Administrator" creationdate="20150427T051128Z">
        <seg>23.7.1. 源集属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>23.7.2. Defining new source sets</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T053301Z" creationid="Administrator" creationdate="20150427T053301Z">
        <seg>23.7.2. 定义新的源集</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>23.7.3. Some source set examples</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T133254Z" creationid="Administrator" creationdate="20150427T133246Z">
        <seg>23.7.3. 一些源集的范例</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>23.7. Working with source sets</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T050419Z" creationid="Administrator" creationdate="20150427T050419Z">
        <seg>23.7. 使用源集</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>23.8.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131701Z" creationid="msdx" creationdate="20150509T131701Z">
        <seg>23.8.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>23.8. Javadoc</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083434Z" creationid="msdx" creationdate="20150428T083434Z">
        <seg>23.8. Javadoc</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>23.9.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131703Z" creationid="msdx" creationdate="20150509T131703Z">
        <seg>23.9.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>23.9. Clean</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T134505Z" creationid="Administrator" creationdate="20150427T134154Z">
        <seg>23.9. 清理</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>24.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131834Z" creationid="msdx" creationdate="20150509T131834Z">
        <seg>24.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>24.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131845Z" creationid="msdx" creationdate="20150509T131845Z">
        <seg>24.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>24.1. Usage</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T071245Z" creationid="msdx" creationdate="20150429T071245Z">
        <seg>24.1. 用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>24.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131846Z" creationid="msdx" creationdate="20150509T131846Z">
        <seg>24.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>24.2. Tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T071321Z" creationid="msdx" creationdate="20150429T071321Z">
        <seg>24.2. 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>24.3.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131848Z" creationid="msdx" creationdate="20150509T131848Z">
        <seg>24.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>24.3.1. Changing the project layout</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T075208Z" creationid="msdx" creationdate="20150429T075208Z">
        <seg>24.3.1. 更改项目布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>24.3. Project layout</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T071810Z" creationid="msdx" creationdate="20150429T071757Z">
        <seg>24.3. 项目布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>24.4.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131854Z" creationid="msdx" creationdate="20150509T131854Z">
        <seg>24.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>24.4. Dependency management</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T075404Z" creationid="msdx" creationdate="20150429T075404Z">
        <seg>24.4. 依赖管理</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>24.5.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131859Z" creationid="msdx" creationdate="20150509T131859Z">
        <seg>24.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>24.5. Automatic configuration of groovyClasspath</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T081052Z" creationid="msdx" creationdate="20150429T080916Z">
        <seg>24.5. groovyClasspath 的自动配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>24.6.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131910Z" creationid="msdx" creationdate="20150509T131910Z">
        <seg>24.6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>24.6. Convention properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T092304Z" creationid="msdx" creationdate="20150429T092304Z">
        <seg>24.6. 常规属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>24.7.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131925Z" creationid="msdx" creationdate="20150509T131925Z">
        <seg>24.7.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>24.7. Source set properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T092345Z" creationid="msdx" creationdate="20150429T092345Z">
        <seg>24.7. source set 属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>24.8.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131938Z" creationid="msdx" creationdate="20150509T131938Z">
        <seg>24.8.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>24.8. GroovyCompile</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T094143Z" creationid="msdx" creationdate="20150429T094143Z">
        <seg>24.8. GroovyCompile</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>25.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131939Z" creationid="msdx" creationdate="20150509T131939Z">
        <seg>25.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>25.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131949Z" creationid="msdx" creationdate="20150509T131949Z">
        <seg>25.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>25.1. Usage</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T145008Z" creationid="msdx" creationdate="20150429T145008Z">
        <seg>25.1. 用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>25.10.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T132105Z" creationid="msdx" creationdate="20150509T132105Z">
        <seg>25.10.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>25.10. Incremental compilation</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150430T160101Z" creationid="msdx" creationdate="20150430T160101Z">
        <seg>25.10. 增量编译</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>25.11.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T132111Z" creationid="msdx" creationdate="20150509T132111Z">
        <seg>25.11.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>25.11. Eclipse Integration</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T081849Z" creationid="msdx" creationdate="20150503T081849Z">
        <seg>25.11. eclipse 集成</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>25.12.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T132122Z" creationid="msdx" creationdate="20150509T132122Z">
        <seg>25.12.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>25.12. IntelliJ IDEA Integration</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T082050Z" creationid="msdx" creationdate="20150503T082050Z">
        <seg>25.12. IntelliJ 集成</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>25.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131952Z" creationid="msdx" creationdate="20150509T131952Z">
        <seg>25.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>25.2. Tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T145412Z" creationid="msdx" creationdate="20150429T145341Z">
        <seg>25.2. 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>25.3.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131954Z" creationid="msdx" creationdate="20150509T131954Z">
        <seg>25.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>25.3.1. Changing the project layout</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T152651Z" creationid="msdx" creationdate="20150429T152651Z">
        <seg>25.3.1. 更改项目布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>25.3. Project layout</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T152451Z" creationid="msdx" creationdate="20150429T152451Z">
        <seg>25.3. 项目布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>25.4.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131956Z" creationid="msdx" creationdate="20150509T131956Z">
        <seg>25.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>25.4. Dependency management</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T152740Z" creationid="msdx" creationdate="20150429T152740Z">
        <seg>25.4. 依赖管理</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>25.5.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131958Z" creationid="msdx" creationdate="20150509T131958Z">
        <seg>25.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>25.5. Automatic configuration of scalaClasspath</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T153855Z" creationid="msdx" creationdate="20150429T153855Z">
        <seg>25.5. scalaClasspath 的自动配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>25.6.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T132006Z" creationid="msdx" creationdate="20150509T132006Z">
        <seg>25.6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>25.6. Convention properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150430T154655Z" creationid="msdx" creationdate="20150430T154655Z">
        <seg>25.6. 公约属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>25.7.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T132009Z" creationid="msdx" creationdate="20150509T132009Z">
        <seg>25.7.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>25.7. Source set properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150430T154720Z" creationid="msdx" creationdate="20150430T154720Z">
        <seg>25.7. source set 属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>25.8.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T132011Z" creationid="msdx" creationdate="20150509T132011Z">
        <seg>25.8.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>25.8. Fast Scala Compiler</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150430T155122Z" creationid="msdx" creationdate="20150430T155004Z">
        <seg>25.8. Fast Scala Compiler</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>25.9.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T132030Z" creationid="msdx" creationdate="20150509T132030Z">
        <seg>25.9.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>25.9. Compiling in external process</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150430T155557Z" creationid="msdx" creationdate="20150430T155557Z">
        <seg>25.9. 在外部进程中编译</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>26.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T132137Z" creationid="msdx" creationdate="20150509T132137Z">
        <seg>26.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>26.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T132200Z" creationid="msdx" creationdate="20150509T132200Z">
        <seg>26.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>26.1. Usage</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T085841Z" creationid="msdx" creationdate="20150503T085841Z">
        <seg>26.1. 用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>26.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T132202Z" creationid="msdx" creationdate="20150509T132202Z">
        <seg>26.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>26.2. Tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T085909Z" creationid="msdx" creationdate="20150503T085909Z">
        <seg>26.2. 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>26.3.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T132204Z" creationid="msdx" creationdate="20150509T132204Z">
        <seg>26.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>26.3. Project layout</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T090117Z" creationid="msdx" creationdate="20150503T090106Z">
        <seg>26.3. 项目布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>26.4.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T132206Z" creationid="msdx" creationdate="20150509T132206Z">
        <seg>26.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>26.4. Dependency management</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T090147Z" creationid="msdx" creationdate="20150503T090147Z">
        <seg>26.4. 依赖管理</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>26.5.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T132211Z" creationid="msdx" creationdate="20150509T132211Z">
        <seg>26.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>26.5. Convention properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T092115Z" creationid="msdx" creationdate="20150503T092115Z">
        <seg>26.5. 公约属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>26.6.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T132214Z" creationid="msdx" creationdate="20150509T132214Z">
        <seg>26.6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>26.6. War</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T092353Z" creationid="msdx" creationdate="20150503T092353Z">
        <seg>26.6. War</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>26.7.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T132218Z" creationid="msdx" creationdate="20150509T132218Z">
        <seg>26.7.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>26.7. Customizing</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T093641Z" creationid="msdx" creationdate="20150503T093551Z">
        <seg>26.7. 自定义</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>27.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T132223Z" creationid="msdx" creationdate="20150509T132223Z">
        <seg>27.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>27.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T132234Z" creationid="msdx" creationdate="20150509T132234Z">
        <seg>27.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>27.1. Usage</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T094429Z" creationid="msdx" creationdate="20150503T094429Z">
        <seg>27.1. 用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>27.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T132238Z" creationid="msdx" creationdate="20150509T132238Z">
        <seg>27.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>27.2. Tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T094459Z" creationid="msdx" creationdate="20150503T094459Z">
        <seg>27.2. Tasks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>27.3.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T132241Z" creationid="msdx" creationdate="20150509T132241Z">
        <seg>27.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>27.3. Project layout</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T095215Z" creationid="msdx" creationdate="20150503T095215Z">
        <seg>27.3. 项目布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>27.4.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T132243Z" creationid="msdx" creationdate="20150509T132243Z">
        <seg>27.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>27.4. Dependency management</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T095243Z" creationid="msdx" creationdate="20150503T095243Z">
        <seg>27.4. 依赖管理</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>27.5.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T132246Z" creationid="msdx" creationdate="20150509T132246Z">
        <seg>27.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>27.5. Convention properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T141328Z" creationid="msdx" creationdate="20150504T141328Z">
        <seg>27.5. 公约属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>27.6.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T132257Z" creationid="msdx" creationdate="20150509T132257Z">
        <seg>27.6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>27.6. Ear</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T142456Z" creationid="msdx" creationdate="20150504T142456Z">
        <seg>27.6. Ear</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>27.7.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150514T151803Z" creationid="msdx" creationdate="20150514T151803Z">
        <seg>27.7.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>27.7. Customizing</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T142829Z" creationid="msdx" creationdate="20150504T142829Z">
        <seg>27.7. 自定义</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>27.8.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150514T151808Z" creationid="msdx" creationdate="20150514T151808Z">
        <seg>27.8.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>27.8. Using custom descriptor file</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T143326Z" creationid="msdx" creationdate="20150504T143326Z">
        <seg>27.8. 使用自定义的描述符文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>28.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150514T151814Z" creationid="msdx" creationdate="20150514T151814Z">
        <seg>28.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>28.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150514T151825Z" creationid="msdx" creationdate="20150514T151825Z">
        <seg>28.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>28.1. Usage</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T150127Z" creationid="msdx" creationdate="20150504T150127Z">
        <seg>28.1. 用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>28.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150514T151828Z" creationid="msdx" creationdate="20150514T151828Z">
        <seg>28.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>28.2. Tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T150155Z" creationid="msdx" creationdate="20150504T150155Z">
        <seg>28.2. 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>28.3.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150514T151831Z" creationid="msdx" creationdate="20150514T151831Z">
        <seg>28.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>28.3. Project layout</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T150547Z" creationid="msdx" creationdate="20150504T150547Z">
        <seg>28.3. 项目布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>28.4.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150514T151834Z" creationid="msdx" creationdate="20150514T151834Z">
        <seg>28.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>28.4. Dependency management</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T150922Z" creationid="msdx" creationdate="20150504T150922Z">
        <seg>28.4. 依赖管理</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>28.5.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150514T151837Z" creationid="msdx" creationdate="20150514T151837Z">
        <seg>28.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>28.5. Convention properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T150954Z" creationid="msdx" creationdate="20150504T150954Z">
        <seg>28.5. 公约属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>29.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150514T151838Z" creationid="msdx" creationdate="20150514T151838Z">
        <seg>29.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>29.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150514T151853Z" creationid="msdx" creationdate="20150514T151853Z">
        <seg>29.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>29.1. Usage</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T151735Z" creationid="msdx" creationdate="20150504T151735Z">
        <seg>29.1. 用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>29.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150514T151900Z" creationid="msdx" creationdate="20150514T151900Z">
        <seg>29.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>29.2. Tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T024625Z" creationid="msdx" creationdate="20150505T024625Z">
        <seg>29.2. Tasks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>29.3.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150514T151904Z" creationid="msdx" creationdate="20150514T151904Z">
        <seg>29.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>29.3. Project layout</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T132539Z" creationid="msdx" creationdate="20150505T132539Z">
        <seg>29.3. 项目布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>29.4.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150514T151909Z" creationid="msdx" creationdate="20150514T151909Z">
        <seg>29.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>29.4. Dependency management</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T132642Z" creationid="msdx" creationdate="20150505T132642Z">
        <seg>29.4. 依赖管理</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>29.5.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150514T151913Z" creationid="msdx" creationdate="20150514T151913Z">
        <seg>29.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>29.5. Configuration</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T132836Z" creationid="msdx" creationdate="20150505T132836Z">
        <seg>29.5. 配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>3.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162018Z" creationid="msdx" creationdate="20141109T162018Z">
        <seg>3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>3.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162022Z" creationid="msdx" creationdate="20141109T162022Z">
        <seg>3.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>3.txt</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160817T145717Z" creationid="95" creationdate="20160817T145717Z">
        <seg>3.txt</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>30.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150514T151916Z" creationid="msdx" creationdate="20150514T151916Z">
        <seg>30.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>30.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150514T151932Z" creationid="msdx" creationdate="20150514T151932Z">
        <seg>30.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>30.1. Usage</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T133043Z" creationid="msdx" creationdate="20150505T133043Z">
        <seg>30.1. 用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>30.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065348Z" creationid="95" creationdate="20170416T065348Z">
        <seg>30.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>30.2. Tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T133124Z" creationid="msdx" creationdate="20150505T133109Z">
        <seg>30.2. 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>30.3.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065351Z" creationid="95" creationdate="20170416T065351Z">
        <seg>30.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>30.3. Project layout</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T133402Z" creationid="msdx" creationdate="20150505T133402Z">
        <seg>30.3. 项目布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>30.4.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065357Z" creationid="95" creationdate="20170416T065357Z">
        <seg>30.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>30.4. Dependency management</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T133432Z" creationid="msdx" creationdate="20150505T133425Z">
        <seg>30.4. 依赖管理</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>30.5.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065359Z" creationid="95" creationdate="20170416T065359Z">
        <seg>30.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>30.5. Configuration</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T133512Z" creationid="msdx" creationdate="20150505T133512Z">
        <seg>30.5. 配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>31.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065401Z" creationid="95" creationdate="20170416T065401Z">
        <seg>31.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>31.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065409Z" creationid="95" creationdate="20170416T065409Z">
        <seg>31.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>31.1. Usage</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T133608Z" creationid="msdx" creationdate="20150505T133608Z">
        <seg>31.1. 用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>31.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065426Z" creationid="95" creationdate="20170416T065426Z">
        <seg>31.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>31.2. Tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T133626Z" creationid="msdx" creationdate="20150505T133626Z">
        <seg>31.2. 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>31.3.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065430Z" creationid="95" creationdate="20170416T065430Z">
        <seg>31.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>31.3. Dependency management</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T133813Z" creationid="msdx" creationdate="20150505T133813Z">
        <seg>31.3. 依赖管理</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>31.4.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065433Z" creationid="95" creationdate="20170416T065433Z">
        <seg>31.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>31.4. Configuration</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T133856Z" creationid="msdx" creationdate="20150505T133856Z">
        <seg>31.4. 配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>32.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065434Z" creationid="95" creationdate="20170416T065434Z">
        <seg>32.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>32.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065440Z" creationid="95" creationdate="20170416T065440Z">
        <seg>32.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>32.1. Usage</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T134155Z" creationid="msdx" creationdate="20150505T134123Z">
        <seg>32.1. 用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>32.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065441Z" creationid="95" creationdate="20170416T065441Z">
        <seg>32.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>32.2. Tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T134212Z" creationid="msdx" creationdate="20150505T134212Z">
        <seg>32.2. 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>32.3.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065443Z" creationid="95" creationdate="20170416T065443Z">
        <seg>32.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>32.3. Dependency management</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T134436Z" creationid="msdx" creationdate="20150505T134436Z">
        <seg>32.3. 依赖管理</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>32.4.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065445Z" creationid="95" creationdate="20170416T065445Z">
        <seg>32.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>32.4. Configuration</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T134501Z" creationid="msdx" creationdate="20150505T134501Z">
        <seg>32.4. 配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>33.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065446Z" creationid="95" creationdate="20170416T065446Z">
        <seg>33.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>33.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065453Z" creationid="95" creationdate="20170416T065453Z">
        <seg>33.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>33.1. Usage</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T135450Z" creationid="msdx" creationdate="20150505T135450Z">
        <seg>33.1. 用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>33.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065454Z" creationid="95" creationdate="20170416T065454Z">
        <seg>33.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>33.2. Tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T135528Z" creationid="msdx" creationdate="20150505T135528Z">
        <seg>33.2. 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>33.3.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065456Z" creationid="95" creationdate="20170416T065456Z">
        <seg>33.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>33.3. Dependency management</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T135654Z" creationid="msdx" creationdate="20150505T135654Z">
        <seg>33.3. 依赖管理</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>33.4.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065458Z" creationid="95" creationdate="20170416T065458Z">
        <seg>33.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>33.4. Configuration</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T135723Z" creationid="msdx" creationdate="20150505T135723Z">
        <seg>33.4. 配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>34.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065459Z" creationid="95" creationdate="20170416T065459Z">
        <seg>34.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>34.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065507Z" creationid="95" creationdate="20170416T065507Z">
        <seg>34.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>34.1. Getting Started</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T130018Z" creationid="msdx" creationdate="20150506T130018Z">
        <seg>34.1. 入门</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>34.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065510Z" creationid="95" creationdate="20170416T065510Z">
        <seg>34.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>34.2. Configuring the JaCoCo Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T130434Z" creationid="msdx" creationdate="20150506T130434Z">
        <seg>34.2.  配置 JaCoCo 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>34.3.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065518Z" creationid="95" creationdate="20170416T065518Z">
        <seg>34.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>34.3. JaCoCo Report configuration</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T131638Z" creationid="msdx" creationdate="20150506T131638Z">
        <seg>34.3. JaCoCo 报告配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>34.4.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065527Z" creationid="95" creationdate="20170416T065527Z">
        <seg>34.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>34.4. JaCoCo specific task configuration</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T132017Z" creationid="msdx" creationdate="20150506T132017Z">
        <seg>34.4. JaCoCo 的特定任务配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>34.5.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065553Z" creationid="95" creationdate="20170416T065553Z">
        <seg>34.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>34.5. Tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T135841Z" creationid="msdx" creationdate="20150506T135833Z">
        <seg>34.5. 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>34.6.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065556Z" creationid="95" creationdate="20170416T065556Z">
        <seg>34.6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>34.6. Dependency management</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T135939Z" creationid="msdx" creationdate="20150506T135939Z">
        <seg>34.6. 依赖管理</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>35.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065557Z" creationid="95" creationdate="20170416T065557Z">
        <seg>35.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>35.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065605Z" creationid="95" creationdate="20170416T065605Z">
        <seg>35.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>35.1. Usage</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150510T143237Z" creationid="msdx" creationdate="20150510T143237Z">
        <seg>35.1. 用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>35.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065607Z" creationid="95" creationdate="20170416T065607Z">
        <seg>35.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>35.2. Analyzing Multi-Project Builds</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150510T144131Z" creationid="msdx" creationdate="20150510T144131Z">
        <seg>35.2. 分析多项目构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>35.3.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065615Z" creationid="95" creationdate="20170416T065615Z">
        <seg>35.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>35.3. Analyzing Custom Source Sets</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T092233Z" creationid="msdx" creationdate="20150512T092233Z">
        <seg>35.3. 分析自定义的Source Sets</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>35.4.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065625Z" creationid="95" creationdate="20170416T065625Z">
        <seg>35.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>35.4. Analyzing languages other than Java</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T092545Z" creationid="msdx" creationdate="20150512T092545Z">
        <seg>35.4. 分析非 Java 语言</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>35.5.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065631Z" creationid="95" creationdate="20170416T065631Z">
        <seg>35.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>35.5. Setting Custom Sonar Properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T092753Z" creationid="msdx" creationdate="20150512T092753Z">
        <seg>35.5. 设置自定义的 Sonar 属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>35.6.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065634Z" creationid="95" creationdate="20170416T065634Z">
        <seg>35.6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>35.6. Configuring Sonar Settings from the Command Line</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T102148Z" creationid="msdx" creationdate="20150512T102058Z">
        <seg>35.6. 从命令行配置 Sonar 的设置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>35.7.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065644Z" creationid="95" creationdate="20170416T065644Z">
        <seg>35.7.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>35.7. Tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T054151Z" creationid="msdx" creationdate="20150513T054151Z">
        <seg>35.7. 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>36.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065645Z" creationid="95" creationdate="20170416T065645Z">
        <seg>36.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>36.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065656Z" creationid="95" creationdate="20170416T065656Z">
        <seg>36.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>36.1. Plugin Status and Compatibility</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T060220Z" creationid="msdx" creationdate="20150513T060220Z">
        <seg>36.1. 插件状态和兼容性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>36.10.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065737Z" creationid="95" creationdate="20170416T065737Z">
        <seg>36.10.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>36.10. Tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150525T234936Z" creationid="haohang" creationdate="20150525T234936Z">
        <seg>36.10. 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>36.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065703Z" creationid="95" creationdate="20170416T065703Z">
        <seg>36.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>36.2. Getting Started</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T060619Z" creationid="msdx" creationdate="20150513T060619Z">
        <seg>36.2. 入门</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>36.3.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065705Z" creationid="95" creationdate="20170416T065705Z">
        <seg>36.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>36.3. Configuring the Sonar Runner</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T062347Z" creationid="msdx" creationdate="20150513T062347Z">
        <seg>36.3. 配置 Sonar Runner</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>36.4.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065714Z" creationid="95" creationdate="20170416T065714Z">
        <seg>36.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>36.4. Analyzing Multi-Project Builds</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150514T152059Z" creationid="msdx" creationdate="20150514T152048Z">
        <seg>36.4. 分析多项目构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>36.5.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065716Z" creationid="95" creationdate="20170416T065716Z">
        <seg>36.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>36.5. Analyzing Custom Source Sets</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150519T124746Z" creationid="msdx" creationdate="20150519T124746Z">
        <seg>36.5. 分析自定义的Source Sets</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>36.6.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065718Z" creationid="95" creationdate="20170416T065718Z">
        <seg>36.6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>36.6. Analyzing languages other than Java</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150520T143123Z" creationid="msdx" creationdate="20150520T143123Z">
        <seg>36.6. 分析非 Java 语言</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>36.7.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065719Z" creationid="95" creationdate="20170416T065719Z">
        <seg>36.7.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>36.7. More on configuring Sonar properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150710T010849Z" creationid="msdx" creationdate="20150520T143237Z">
        <seg>36.7. 更多关于配置 Sonar 的属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>36.8.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065725Z" creationid="95" creationdate="20170416T065725Z">
        <seg>36.8.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>36.8. Setting Sonar Properties from the Command Line</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150525T233253Z" creationid="haohang" creationdate="20150525T233253Z">
        <seg>36.8. 从命令行设置 Sonar 属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>36.9.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065732Z" creationid="95" creationdate="20170416T065732Z">
        <seg>36.9.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>36.9. Executing Sonar Runner in a separate process</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150525T234409Z" creationid="haohang" creationdate="20150525T234409Z">
        <seg>36.9. 在一个单独的进程中执行 Sonar Runner</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>37.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065738Z" creationid="95" creationdate="20170416T065738Z">
        <seg>37.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>37.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065746Z" creationid="95" creationdate="20170416T065746Z">
        <seg>37.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>37.1. Usage</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150526T004241Z" creationid="haohang" creationdate="20150526T004241Z">
        <seg>37.1. 用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>37.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065748Z" creationid="95" creationdate="20170416T065748Z">
        <seg>37.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>37.2. Implicitly applied plugins</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150526T004326Z" creationid="haohang" creationdate="20150526T004305Z">
        <seg>37.2. 隐式应用插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>37.3.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065756Z" creationid="95" creationdate="20170416T065756Z">
        <seg>37.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>37.3. Tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150526T004426Z" creationid="haohang" creationdate="20150526T004426Z">
        <seg>37.3. 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>37.4.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065758Z" creationid="95" creationdate="20170416T065758Z">
        <seg>37.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>37.4. Dependency management</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150526T004451Z" creationid="haohang" creationdate="20150526T004451Z">
        <seg>37.4. 依赖管理</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>37.5.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065759Z" creationid="95" creationdate="20170416T065759Z">
        <seg>37.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>37.5.1. Convention properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150526T004549Z" creationid="haohang" creationdate="20150526T004549Z">
        <seg>37.5.1. 约定属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>37.5.2. Convention methods</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150526T004607Z" creationid="haohang" creationdate="20150526T004607Z">
        <seg>37.5.2. 约定方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>37.5. Convention object</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150526T004505Z" creationid="haohang" creationdate="20150526T004505Z">
        <seg>37.5. 约定对象</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>37.6.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065805Z" creationid="95" creationdate="20170416T065805Z">
        <seg>37.6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>38.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065806Z" creationid="95" creationdate="20170416T065806Z">
        <seg>38.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>38.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065815Z" creationid="95" creationdate="20170416T065815Z">
        <seg>38.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>38.1. Usage</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T004107Z" creationid="haohang" creationdate="20150603T004107Z">
        <seg>38.1. 用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>38.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065818Z" creationid="95" creationdate="20170416T065818Z">
        <seg>38.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>38.2. Tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T004252Z" creationid="haohang" creationdate="20150603T004252Z">
        <seg>38.2. 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>38.3.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065820Z" creationid="95" creationdate="20170416T065820Z">
        <seg>38.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>38.3. Configuration</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T004615Z" creationid="haohang" creationdate="20150603T004615Z">
        <seg>38.3. 配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>38.4.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065822Z" creationid="95" creationdate="20170416T065822Z">
        <seg>38.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>38.4.1.1. Disabling merging with a complete overwrite</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T103221Z" creationid="haohang" creationdate="20150624T103221Z">
        <seg>38.4.1.1. 禁用完全覆盖的合并</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>38.4.1. Merging</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T101125Z" creationid="haohang" creationdate="20150624T101125Z">
        <seg>38.4.1. 合并</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>38.4.2.1. Partial overwrite of existing content</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T105433Z" creationid="haohang" creationdate="20150624T105433Z">
        <seg>38.4.2.1. 部分重写现有内容</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>38.4.2.2. Modifying the fully populated domain objects</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T065838Z" creationid="haohang" creationdate="20150625T065838Z">
        <seg>38.4.2.2. 修改完全填充的域对象</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>38.4.2.3. Modifying the XML representation</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T070010Z" creationid="haohang" creationdate="20150625T070010Z">
        <seg>38.4.2.3. 修改 XML 的表示形式</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>38.4.2. Hooking into the generation lifecycle</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T103508Z" creationid="haohang" creationdate="20150624T103508Z">
        <seg>38.4.2. Hooking到生成的生命周期中</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>38.4. Customizing the generated files</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T022608Z" creationid="haohang" creationdate="20150624T022608Z">
        <seg>38.4. 自定义生成的文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>39.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065828Z" creationid="95" creationdate="20170416T065828Z">
        <seg>39.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>39.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065834Z" creationid="95" creationdate="20170416T065834Z">
        <seg>39.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>39.1. Usage</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T071709Z" creationid="haohang" creationdate="20150625T071709Z">
        <seg>39.1. 用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>39.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065836Z" creationid="95" creationdate="20170416T065836Z">
        <seg>39.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>39.2. Tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T071835Z" creationid="haohang" creationdate="20150625T071835Z">
        <seg>39.2. 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>39.3.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065838Z" creationid="95" creationdate="20170416T065838Z">
        <seg>39.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>39.3. Configuration</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T072617Z" creationid="haohang" creationdate="20150625T072617Z">
        <seg>39.3. 配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>39.4.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065841Z" creationid="95" creationdate="20170416T065841Z">
        <seg>39.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>39.4.1.1. Disabling merging with a complete overwrite</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T073353Z" creationid="haohang" creationdate="20150625T073353Z">
        <seg>39.4.1.1. 禁用完整覆盖的合并</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>39.4.1. Merging</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T073330Z" creationid="haohang" creationdate="20150625T073330Z">
        <seg>39.4.1. 合并</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>39.4.2.1. Partial overwrite of existing content</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T073807Z" creationid="haohang" creationdate="20150625T073807Z">
        <seg>39.4.2.1. 部分重写现有内容</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>39.4.2.2. Modifying the fully populated domain objects</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T074126Z" creationid="haohang" creationdate="20150625T074126Z">
        <seg>39.4.2.2. 修改完全填充的域对象</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>39.4.2.3. Modifying the XML representation</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T074617Z" creationid="haohang" creationdate="20150625T074617Z">
        <seg>39.4.2.3. 修改 XML 的表示形式</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>39.4.2. Hooking into the generation lifecycle</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T073550Z" creationid="haohang" creationdate="20150625T073550Z">
        <seg>39.4.2. Hooking到生成的生命周期中</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>39.4. Customizing the generated files</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T072734Z" creationid="haohang" creationdate="20150625T072734Z">
        <seg>39.4. 自定义生成的文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>39.5.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065843Z" creationid="95" creationdate="20170416T065843Z">
        <seg>39.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>39.5. Further things to consider</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T074641Z" creationid="haohang" creationdate="20150625T074641Z">
        <seg>39.5. 进一步要考虑的事项</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>4.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162027Z" creationid="msdx" creationdate="20141109T162027Z">
        <seg>4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>4.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162033Z" creationid="msdx" creationdate="20141109T162033Z">
        <seg>4.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>4.1. Prerequisites</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161215T153602Z" creationid="95" creationdate="20161215T153602Z">
        <seg>4.1. 系统要求</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>4.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162125Z" creationid="msdx" creationdate="20141109T162125Z">
        <seg>4.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>4.3.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162128Z" creationid="msdx" creationdate="20141109T162128Z">
        <seg>4.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>4.4.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162137Z" creationid="msdx" creationdate="20141109T162137Z">
        <seg>4.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>4.5.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162143Z" creationid="msdx" creationdate="20141109T162143Z">
        <seg>4.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>4.6.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162150Z" creationid="msdx" creationdate="20141109T162150Z">
        <seg>4.6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>40.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065848Z" creationid="95" creationdate="20170416T065848Z">
        <seg>40.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>40.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065855Z" creationid="95" creationdate="20170416T065855Z">
        <seg>40.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>40.1. Usage</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T094847Z" creationid="haohang" creationdate="20150625T094847Z">
        <seg>40.1. 用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>40.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065857Z" creationid="95" creationdate="20170416T065857Z">
        <seg>40.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>40.2. Tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T094910Z" creationid="haohang" creationdate="20150625T094910Z">
        <seg>40.2. 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>40.3.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065859Z" creationid="95" creationdate="20170416T065859Z">
        <seg>40.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>40.3. Project layout</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T095117Z" creationid="haohang" creationdate="20150625T095117Z">
        <seg>40.3. 项目布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>40.4.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065900Z" creationid="95" creationdate="20170416T065900Z">
        <seg>40.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>40.4. Dependency management</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T095233Z" creationid="haohang" creationdate="20150625T095233Z">
        <seg>40.4. 依赖管理</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>40.5.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065902Z" creationid="95" creationdate="20170416T065902Z">
        <seg>40.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>40.5. Convention properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T095748Z" creationid="haohang" creationdate="20150625T095748Z">
        <seg>40.5. 约定属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>40.6.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065903Z" creationid="95" creationdate="20170416T065903Z">
        <seg>40.6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>40.6. Source set properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T102700Z" creationid="haohang" creationdate="20150625T102700Z">
        <seg>40.6. Source set 属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>41.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065905Z" creationid="95" creationdate="20170416T065905Z">
        <seg>41.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>41.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065913Z" creationid="95" creationdate="20170416T065913Z">
        <seg>41.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>41.1. Usage</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150626T100318Z" creationid="haohang" creationdate="20150626T100318Z">
        <seg>41.1. 用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>41.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065915Z" creationid="95" creationdate="20170416T065915Z">
        <seg>41.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>41.2. Tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T061106Z" creationid="haohang" creationdate="20150628T061106Z">
        <seg>41.2. 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>41.3.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065917Z" creationid="95" creationdate="20170416T065917Z">
        <seg>41.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>41.3. Project layout</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T061544Z" creationid="haohang" creationdate="20150628T061544Z">
        <seg>41.3. 项目布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>41.4.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065918Z" creationid="95" creationdate="20170416T065918Z">
        <seg>41.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>41.4. Dependency management</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T061557Z" creationid="haohang" creationdate="20150628T061557Z">
        <seg>41.4. 依赖管理</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>41.5.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065919Z" creationid="95" creationdate="20170416T065919Z">
        <seg>41.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>41.5. Convention properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T061655Z" creationid="haohang" creationdate="20150628T061655Z">
        <seg>41.5. 约定属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>42.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065920Z" creationid="95" creationdate="20170416T065920Z">
        <seg>42.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>42.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065926Z" creationid="95" creationdate="20170416T065926Z">
        <seg>42.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>42.1. Usage</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T062812Z" creationid="haohang" creationdate="20150628T062812Z">
        <seg>42.1. 用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>42.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065928Z" creationid="95" creationdate="20170416T065928Z">
        <seg>42.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>42.2. Configuration</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T090946Z" creationid="haohang" creationdate="20150628T090946Z">
        <seg>42.2. 配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>43.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065929Z" creationid="95" creationdate="20170416T065929Z">
        <seg>43.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>43.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065937Z" creationid="95" creationdate="20170416T065937Z">
        <seg>43.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>43.1. Usage</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T091558Z" creationid="haohang" creationdate="20150628T091558Z">
        <seg>43.1. 用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>44.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065938Z" creationid="95" creationdate="20170416T065938Z">
        <seg>44.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>44.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065943Z" creationid="95" creationdate="20170416T065943Z">
        <seg>44.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>44.1. Usage</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150701T025826Z" creationid="haohang" creationdate="20150701T025826Z">
        <seg>44.1. 用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>44.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065944Z" creationid="95" creationdate="20170416T065944Z">
        <seg>44.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>44.2. Tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150701T030753Z" creationid="haohang" creationdate="20150701T030753Z">
        <seg>44.2. 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>44.3.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065945Z" creationid="95" creationdate="20170416T065945Z">
        <seg>44.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>44.3. Distribution contents</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150701T031649Z" creationid="haohang" creationdate="20150701T031649Z">
        <seg>44.3. 分发内容</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>45.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065949Z" creationid="95" creationdate="20170416T065949Z">
        <seg>45.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>45.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065955Z" creationid="95" creationdate="20170416T065955Z">
        <seg>45.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>45.1. Usage</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150701T035525Z" creationid="haohang" creationdate="20150701T035525Z">
        <seg>45.1. 用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>45.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065956Z" creationid="95" creationdate="20170416T065956Z">
        <seg>45.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>45.2. Tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150702T104919Z" creationid="haohang" creationdate="20150702T104919Z">
        <seg>45.2. 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>45.3.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065957Z" creationid="95" creationdate="20170416T065957Z">
        <seg>45.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>45.3. Convention properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150702T105200Z" creationid="haohang" creationdate="20150702T105200Z">
        <seg>45.3. 约定属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>45.4.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065958Z" creationid="95" creationdate="20170416T065958Z">
        <seg>45.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>45.4. Including other resources in the distribution</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150702T105321Z" creationid="haohang" creationdate="20150702T105321Z">
        <seg>45.4. 在 distribution 中包含其他资源</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>46.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070002Z" creationid="95" creationdate="20170416T070002Z">
        <seg>46.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>46.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070015Z" creationid="95" creationdate="20170416T070015Z">
        <seg>46.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>46.1. Usage</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150705T084511Z" creationid="haohang" creationdate="20150705T084511Z">
        <seg>46.1. 用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>46.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070017Z" creationid="95" creationdate="20170416T070017Z">
        <seg>46.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>46.2. Tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T070259Z" creationid="haohang" creationdate="20150707T070259Z">
        <seg>46.2. 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>46.3.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070018Z" creationid="95" creationdate="20170416T070018Z">
        <seg>46.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>46.3. Including other resources in the distribution</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T070404Z" creationid="haohang" creationdate="20150707T070404Z">
        <seg>46.3. 在 distribution 中包含其他资源</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>47.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070018Z" creationid="95" creationdate="20170416T070018Z">
        <seg>47.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>47.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070025Z" creationid="95" creationdate="20170416T070025Z">
        <seg>47.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>47.1. Tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T071518Z" creationid="haohang" creationdate="20150707T071518Z">
        <seg>47.1. 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>47.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070026Z" creationid="95" creationdate="20170416T070026Z">
        <seg>47.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>47.2. What to set up</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T071622Z" creationid="haohang" creationdate="20150707T071622Z">
        <seg>47.2. 要设置什么</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>47.3.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070031Z" creationid="95" creationdate="20170416T070031Z">
        <seg>47.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>47.3.1. "<bpt i="0" x="0">&lt;c0&gt;</bpt>pom<ept i="0">&lt;/c0&gt;</ept>" (Maven conversion)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T074923Z" creationid="haohang" creationdate="20150707T074923Z">
        <seg>47.3.1. “<bpt i="0" x="0">&lt;c0&gt;</bpt>pom<ept i="0">&lt;/c0&gt;</ept>”（Maven 转换）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>47.3.2. "<bpt i="0" x="0">&lt;c0&gt;</bpt>java-library<ept i="0">&lt;/c0&gt;</ept>"</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T094044Z" creationid="haohang" creationdate="20150707T094044Z">
        <seg>47.3.2. “<bpt i="0" x="0">&lt;c0&gt;</bpt>java-library<ept i="0">&lt;/c0&gt;</ept>”</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>47.3.3. "<bpt i="0" x="0">&lt;c0&gt;</bpt>scala-library<ept i="0">&lt;/c0&gt;</ept>"</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T094320Z" creationid="haohang" creationdate="20150707T094320Z">
        <seg>47.3.3. “<bpt i="0" x="0">&lt;c0&gt;</bpt>scala-library<ept i="0">&lt;/c0&gt;</ept>”</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>47.3.4. "<bpt i="0" x="0">&lt;c0&gt;</bpt>groovy-library<ept i="0">&lt;/c0&gt;</ept>"</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T094533Z" creationid="haohang" creationdate="20150707T094533Z">
        <seg>47.3.4. “<bpt i="0" x="0">&lt;c0&gt;</bpt>groovy-library<ept i="0">&lt;/c0&gt;</ept>”</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>47.3.5. "basic"</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T094802Z" creationid="haohang" creationdate="20150707T094802Z">
        <seg>47.3.5. “basic”</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>47.3. Build init types</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T074825Z" creationid="haohang" creationdate="20150707T074734Z">
        <seg>47.3. 构建初始化的类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>48.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070041Z" creationid="95" creationdate="20170416T070041Z">
        <seg>48.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>48.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070046Z" creationid="95" creationdate="20170416T070046Z">
        <seg>48.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>48.1. Usage</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150710T012639Z" creationid="haohang" creationdate="20150710T012639Z">
        <seg>48.1. 用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>48.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070047Z" creationid="95" creationdate="20170416T070047Z">
        <seg>48.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>48.2. Tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150710T012905Z" creationid="haohang" creationdate="20150710T012905Z">
        <seg>48.2. 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>49.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070047Z" creationid="95" creationdate="20170416T070047Z">
        <seg>49.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>49.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070103Z" creationid="95" creationdate="20170416T070103Z">
        <seg>49.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>49.1. Usage</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150713T095144Z" creationid="haohang" creationdate="20150713T095144Z">
        <seg>49.1. 用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>49.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070104Z" creationid="95" creationdate="20170416T070104Z">
        <seg>49.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>49.2. Tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150713T100235Z" creationid="haohang" creationdate="20150713T100235Z">
        <seg>49.2. 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>49.3.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070105Z" creationid="95" creationdate="20170416T070105Z">
        <seg>49.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>49.3. Project layout</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150713T100337Z" creationid="haohang" creationdate="20150713T100337Z">
        <seg>49.3. 项目布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>49.4.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070106Z" creationid="95" creationdate="20170416T070106Z">
        <seg>49.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>49.4. Dependency management</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150713T100430Z" creationid="haohang" creationdate="20150713T100430Z">
        <seg>49.4. 依赖管理</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>49.5.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070107Z" creationid="95" creationdate="20170416T070107Z">
        <seg>49.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>49.5. Configuration</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150713T100449Z" creationid="haohang" creationdate="20150713T100443Z">
        <seg>49.5. 配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>5.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162153Z" creationid="msdx" creationdate="20141109T162153Z">
        <seg>5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>5.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162212Z" creationid="msdx" creationdate="20141109T162212Z">
        <seg>5.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>5.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162243Z" creationid="msdx" creationdate="20141109T162243Z">
        <seg>5.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070107Z" creationid="95" creationdate="20170416T070107Z">
        <seg>50.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070112Z" creationid="95" creationdate="20170416T070112Z">
        <seg>50.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.1.1. Flexible dependency management for migrations</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150716T035935Z" creationid="haohang" creationdate="20150716T035850Z">
        <seg>50.1.1. 为了迁移的灵活的依赖管理</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.1.2. Dependency management and Java</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150716T045309Z" creationid="haohang" creationdate="20150716T045309Z">
        <seg>50.1.2. 依赖管理和 Java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.1. Introduction</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150714T015848Z" creationid="haohang" creationdate="20150714T015848Z">
        <seg>50.1. 介绍</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.10.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070208Z" creationid="95" creationdate="20170416T070208Z">
        <seg>50.10.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.10.1. Implicit transitive dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151201T063844Z" creationid="haohang" creationdate="20151201T063844Z">
        <seg>50.10.1. 隐式传递依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.10. Strategies for transitive dependency management</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151130T032658Z" creationid="haohang" creationdate="20151130T032658Z">
        <seg>50.10. 传递依赖管理的策略</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070116Z" creationid="95" creationdate="20170416T070116Z">
        <seg>50.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.2.1. Put the Version in the Filename (Version the jar)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150716T092139Z" creationid="haohang" creationdate="20150716T092139Z">
        <seg>50.2.1. 在文件名中包含版本号（版本化 jar 文件）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.2.2. Manage transitive dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150716T094057Z" creationid="haohang" creationdate="20150716T094034Z">
        <seg>50.2.2. 管理传递依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.2.3. Resolve version conflicts</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150721T054138Z" creationid="haohang" creationdate="20150721T054138Z">
        <seg>50.2.3. 解决版本冲突的问题</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.2.4. Use Dynamic Versions and Changing Modules</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T010309Z" creationid="haohang" creationdate="20150722T010309Z">
        <seg>50.2.4. 使用动态版本和变化的模块</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.2. Dependency Management Best Practices</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150716T083446Z" creationid="haohang" creationdate="20150716T083446Z">
        <seg>50.2. 依赖管理的最佳实践</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.3.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070124Z" creationid="95" creationdate="20170416T070124Z">
        <seg>50.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.3. Dependency configurations</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T075056Z" creationid="haohang" creationdate="20150722T075056Z">
        <seg>50.3. 依赖配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.4.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070128Z" creationid="95" creationdate="20170416T070128Z">
        <seg>50.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.4.1.1. Depending on modules with multiple artifacts</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150724T035708Z" creationid="haohang" creationdate="20150724T035636Z">
        <seg>50.4.1.1. 依赖有多个 artifacts 的模块</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.4.1.2. Artifact only notation</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150730T035751Z" creationid="haohang" creationdate="20150730T035751Z">
        <seg>50.4.1.2. Artifact only notation</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.4.1.3. Classifiers</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150731T035214Z" creationid="haohang" creationdate="20150731T035214Z">
        <seg>50.4.1.3. Classifiers</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.4.1. External module dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T080837Z" creationid="haohang" creationdate="20150722T080837Z">
        <seg>50.4.1. 外部模块依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.4.10. Dependency reports</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T032810Z" creationid="haohang" creationdate="20150807T032810Z">
        <seg>50.4.10. 依赖报告</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.4.2. Client module dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T091230Z" creationid="haohang" creationdate="20150801T091230Z">
        <seg>50.4.2. 客户端模块依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.4.3. Project dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T092017Z" creationid="haohang" creationdate="20150801T092017Z">
        <seg>50.4.3. 项目依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.4.4. File dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T092619Z" creationid="haohang" creationdate="20150801T092619Z">
        <seg>50.4.4. 文件依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.4.5. Gradle API Dependency</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T094514Z" creationid="haohang" creationdate="20150801T094514Z">
        <seg>50.4.5. Gradle API 依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.4.6. Local Groovy Dependency</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T094706Z" creationid="haohang" creationdate="20150801T094706Z">
        <seg>50.4.6. 本地 Groovy 依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.4.7. Excluding transitive dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T094852Z" creationid="haohang" creationdate="20150801T094852Z">
        <seg>50.4.7. 排除传递依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.4.8. Optional attributes</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T103051Z" creationid="haohang" creationdate="20150801T103051Z">
        <seg>50.4.8. 可选属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.4.9. Dependency configurations</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T103725Z" creationid="haohang" creationdate="20150801T103725Z">
        <seg>50.4.9. 依赖配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.4. How to declare your dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T075957Z" creationid="haohang" creationdate="20150722T075957Z">
        <seg>50.4. 如何声明依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.5.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070136Z" creationid="95" creationdate="20170416T070136Z">
        <seg>50.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.5. Working with dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T034203Z" creationid="haohang" creationdate="20150807T034203Z">
        <seg>50.5. 使用依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.6.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070140Z" creationid="95" creationdate="20170416T070140Z">
        <seg>50.6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.6.1. Maven central repository</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T095740Z" creationid="haohang" creationdate="20150807T095740Z">
        <seg>50.6.1. Maven 中央仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.6.2. Maven JCenter repository</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T095935Z" creationid="haohang" creationdate="20150807T095935Z">
        <seg>50.6.2. Maven JCenter 仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.6.3. Local Maven repository</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T100904Z" creationid="haohang" creationdate="20150807T100904Z">
        <seg>50.6.3. 本地 Maven 仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.6.4.1. Accessing password protected Maven repositories</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150909T053258Z" creationid="haohang" creationdate="20150909T053258Z">
        <seg>50.6.4.1. 访问密码保护的 Maven 仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.6.4. Maven repositories</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150909T052845Z" creationid="haohang" creationdate="20150909T052845Z">
        <seg>50.6.4. Maven 仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.6.5. Flat directory repository</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150910T011839Z" creationid="haohang" creationdate="20150910T011749Z">
        <seg>50.6.5. 平面的目录仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.6.6.1. Defining custom patterns for an Ivy repository</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T110538Z" creationid="95" creationdate="20151006T110538Z">
        <seg>50.6.6.1. 为一个 Ivy 存储库定义自定义的模式</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.6.6.2. Ivy repository with Maven compatible layout</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T110709Z" creationid="95" creationdate="20151006T110709Z">
        <seg>50.6.6.2. 使用 Maven 兼容布局的 Ivy 仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.6.6.3. Defining different artifact and Ivy file locations for an Ivy repository</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T111142Z" creationid="95" creationdate="20151006T111142Z">
        <seg>50.6.6.3. 为一个 Ivy 仓库定义不同的 artifact 和 Ivy 文件位置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.6.6.4. Accessing password protected Ivy repositories</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T133214Z" creationid="95" creationdate="20151006T133214Z">
        <seg>50.6.6.4. 访问密码保护的 Ivy 仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.6.6. Ivy repositories</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T110337Z" creationid="95" creationdate="20151006T110337Z">
        <seg>50.6.6. Ivy 存储库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.6.7. Working with repositories</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T133349Z" creationid="95" creationdate="20151006T133349Z">
        <seg>50.6.7. 使用仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.6.8. More about Ivy resolvers</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T133747Z" creationid="95" creationdate="20151006T133747Z">
        <seg>50.6.8. 更多关于 Ivy 解析器的信息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.6. Repositories</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T091333Z" creationid="haohang" creationdate="20150807T091333Z">
        <seg>50.6. 仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.7.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070143Z" creationid="95" creationdate="20170416T070143Z">
        <seg>50.7.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.7. How dependency resolution works</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151007T022618Z" creationid="95" creationdate="20151007T022618Z">
        <seg>50.7. 依赖解析的工作原理</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.8.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070158Z" creationid="95" creationdate="20170416T070158Z">
        <seg>50.8.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.8.1. Forcing a particular module version</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T054038Z" creationid="95" creationdate="20151115T054038Z">
        <seg>50.8.1. 强制一个特定模块的版本</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.8.2.1. Modelling releaseable units</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T060424Z" creationid="95" creationdate="20151115T060424Z">
        <seg>50.8.2.1. 模块化可发布的单位</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.8.2.2. Implement a custom versioning scheme</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T061610Z" creationid="95" creationdate="20151115T061610Z">
        <seg>50.8.2.2. 实现一个自定义的版本方案</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.8.2.3. Blacklisting a particular version with a replacement</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T070725Z" creationid="95" creationdate="20151115T055649Z">
        <seg>50.8.2.3. 黑名单替换特定版本</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.8.2.4. Substituting a dependency module with a compatible replacement</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T090008Z" creationid="95" creationdate="20151115T090008Z">
        <seg>50.8.2.4. 使用一个兼容模块替换一个依赖模块</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.8.2. Using dependency resolve rules</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T055311Z" creationid="95" creationdate="20151115T055311Z">
        <seg>50.8.2. 使用依赖解析规则</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.8.3. Enabling Ivy dynamic resolve mode</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T055635Z" creationid="95" creationdate="20151115T055635Z">
        <seg>50.8.3. 启用 Ivy 动态解析模式</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.8.4. Component metadata rules</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T091523Z" creationid="95" creationdate="20151115T091523Z">
        <seg>50.8.4. 组件元数据规则</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.8. Fine-tuning the dependency resolution process</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T053827Z" creationid="95" creationdate="20151115T053827Z">
        <seg>50.8. 微调依赖解析过程</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.9.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070204Z" creationid="95" creationdate="20170416T070204Z">
        <seg>50.9.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.9.1.1. Separate metadata cache</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T043934Z" creationid="95" creationdate="20151129T043905Z">
        <seg>50.9.1.1. 单独的元数据缓存</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.9.1.2. Repository caches are independent</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T045617Z" creationid="95" creationdate="20151129T045617Z">
        <seg>50.9.1.2. 仓库缓存是独立的</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.9.1.3. Artifact reuse</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T151039Z" creationid="95" creationdate="20151129T151039Z">
        <seg>50.9.1.3. 构件重用</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.9.1.4. Checksum based storage</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T152935Z" creationid="95" creationdate="20151129T152353Z">
        <seg>50.9.1.4. 基于校验和的存储</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.9.1.5. Cache Locking</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T153329Z" creationid="95" creationdate="20151129T153314Z">
        <seg>50.9.1.5. 缓存锁</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.9.1. Key features of the Gradle dependency cache</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T043918Z" creationid="95" creationdate="20151129T043901Z">
        <seg>50.9.1. Gradle 依赖缓存的主要特点</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.9.2.1. Offline</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T153605Z" creationid="95" creationdate="20151129T153605Z">
        <seg>50.9.2.1. 离线</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.9.2.2. Refresh</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T153839Z" creationid="95" creationdate="20151129T153839Z">
        <seg>50.9.2.2. 刷新</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.9.2. Command line options to override caching</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T153600Z" creationid="95" creationdate="20151129T153600Z">
        <seg>50.9.2. 重写缓存的命令行选项</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.9.3. Fine-tuned control over dependency caching</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T154725Z" creationid="95" creationdate="20151129T154725Z">
        <seg>50.9.3. 依赖缓存的微调控制</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>50.9. The dependency cache</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T041856Z" creationid="95" creationdate="20151129T041856Z">
        <seg>50.9. 依赖缓存</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>51.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070230Z" creationid="95" creationdate="20170416T070230Z">
        <seg>51.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>51.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070232Z" creationid="95" creationdate="20170416T070232Z">
        <seg>51.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>51.1. Introduction</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151220T120806Z" creationid="95" creationdate="20151220T120806Z">
        <seg>51.1. 介绍</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>51.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070234Z" creationid="95" creationdate="20170416T070234Z">
        <seg>51.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>51.2. Artifacts and configurations</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151220T123509Z" creationid="95" creationdate="20151220T123509Z">
        <seg>51.2. 构件和配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>51.3.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070240Z" creationid="95" creationdate="20170416T070240Z">
        <seg>51.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>51.3.1. Archive task artifacts</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151226T090810Z" creationid="95" creationdate="20151226T085533Z">
        <seg>51.3.1. Archive task artifacts</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>51.3.2. File artifacts</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151226T091026Z" creationid="95" creationdate="20151226T091026Z">
        <seg>51.3.2. 文件构件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>51.3. Declaring artifacts</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151226T085505Z" creationid="95" creationdate="20151226T085505Z">
        <seg>51.3. 声明构件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>51.4.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070246Z" creationid="95" creationdate="20170416T070246Z">
        <seg>51.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>51.4. Publishing artifacts</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151226T091522Z" creationid="95" creationdate="20151226T091522Z">
        <seg>51.4 发布构件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>51.5.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070249Z" creationid="95" creationdate="20170416T070249Z">
        <seg>51.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>51.5. More about project libraries</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151226T093131Z" creationid="95" creationdate="20151226T093131Z">
        <seg>51.5. 更多关于项目库的内容</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>52.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070254Z" creationid="95" creationdate="20170416T070254Z">
        <seg>52.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>52.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070300Z" creationid="95" creationdate="20170416T070300Z">
        <seg>52.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>52.1. Usage</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151228T151847Z" creationid="95" creationdate="20151228T151847Z">
        <seg>52.1. 用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>52.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070301Z" creationid="95" creationdate="20170416T070301Z">
        <seg>52.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>52.2. Tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151228T151907Z" creationid="95" creationdate="20151228T151907Z">
        <seg>52.2. 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>52.3.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070302Z" creationid="95" creationdate="20170416T070302Z">
        <seg>52.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>52.3. Dependency management</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151228T152435Z" creationid="95" creationdate="20151228T152435Z">
        <seg>52.3. 依赖管理</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>52.4.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070303Z" creationid="95" creationdate="20170416T070303Z">
        <seg>52.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>52.4. Convention properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151228T152452Z" creationid="95" creationdate="20151228T152452Z">
        <seg>52.4. 约定属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>52.5.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070304Z" creationid="95" creationdate="20170416T070304Z">
        <seg>52.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>52.5. Convention methods</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151228T153219Z" creationid="95" creationdate="20151228T153219Z">
        <seg>52.5. 约定方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>52.6.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070308Z" creationid="95" creationdate="20170416T070308Z">
        <seg>52.6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>52.6.1. Introduction</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160104T153158Z" creationid="95" creationdate="20160104T153158Z">
        <seg>52.6.1. 介绍</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>52.6.2. Deploying to a Maven repository</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160104T154111Z" creationid="95" creationdate="20160104T154111Z">
        <seg>52.6.2. 部署到 Maven 仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>52.6.3. Installing to the local repository</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T142718Z" creationid="95" creationdate="20160105T141921Z">
        <seg>52.6.3. 安装到本地仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>52.6.4.1. Multiple artifacts per project</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T143550Z" creationid="95" creationdate="20160106T143523Z">
        <seg>52.6.4.1. 一个项目多个构件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>52.6.4.2. Dependency mapping</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T144506Z" creationid="95" creationdate="20160106T144506Z">
        <seg>52.6.4.2. 依赖映射</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>52.6.4. Maven POM generation</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T143555Z" creationid="95" creationdate="20160105T143555Z">
        <seg>52.6.4. Maven POM 生成</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>52.6. Interacting with Maven repositories</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160104T153147Z" creationid="95" creationdate="20160104T153147Z">
        <seg>52.6. 与 Maven 仓库的交互</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>53.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070313Z" creationid="95" creationdate="20170416T070313Z">
        <seg>53.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>53.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070323Z" creationid="95" creationdate="20170416T070323Z">
        <seg>53.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>53.1. Usage</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160108T151044Z" creationid="95" creationdate="20160108T151044Z">
        <seg>53.1. 用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>53.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070325Z" creationid="95" creationdate="20170416T070325Z">
        <seg>53.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>53.2. Signatory credentials</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160108T151155Z" creationid="95" creationdate="20160108T151155Z">
        <seg>53.2. 签名凭证</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>53.3.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070329Z" creationid="95" creationdate="20170416T070329Z">
        <seg>53.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>53.3.1. Signing Configurations</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160108T153449Z" creationid="95" creationdate="20160108T153449Z">
        <seg>53.3.1. 签名配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>53.3.2. Signing Tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160109T072608Z" creationid="95" creationdate="20160109T072608Z">
        <seg>53.3.2. 签名任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>53.3.3. Conditional Signing</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160126T141149Z" creationid="95" creationdate="20160126T141025Z">
        <seg>53.3.3. 有条件的签名</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>53.3. Specifying what to sign</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160108T152956Z" creationid="95" creationdate="20160108T152925Z">
        <seg>53.3. 指定要签名的内容</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>53.4.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070335Z" creationid="95" creationdate="20170416T070335Z">
        <seg>53.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>53.4. Publishing the signatures</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160126T143736Z" creationid="95" creationdate="20160126T143736Z">
        <seg>53.4. 发布签名</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>53.5.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070340Z" creationid="95" creationdate="20170416T070340Z">
        <seg>53.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>53.5. Signing POM files</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160126T144649Z" creationid="95" creationdate="20160126T144649Z">
        <seg>53.5. 签名 POM 文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>54.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070344Z" creationid="95" creationdate="20170416T070344Z">
        <seg>54.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>54.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070353Z" creationid="95" creationdate="20170416T070353Z">
        <seg>54.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>54.1. Tool chain support</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160128T152548Z" creationid="95" creationdate="20160128T152548Z">
        <seg>54.1. 工具链支持</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>54.10.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070505Z" creationid="95" creationdate="20170416T070505Z">
        <seg>54.10.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>54.10. Visual Studio IDE integration</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T094807Z" creationid="haohang" creationdate="20160408T094807Z">
        <seg>54.10. Visual Studio IDE 集成</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>54.11.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070510Z" creationid="95" creationdate="20170416T070510Z">
        <seg>54.11.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>54.11.1. CUnit sources</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160504T144341Z" creationid="95" creationdate="20160504T144341Z">
        <seg>54.11.1. CUnit 源码</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>54.11.2. Building CUnit executables</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160504T150551Z" creationid="95" creationdate="20160504T150551Z">
        <seg>54.11.2. 构建 CUnit 可执行文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>54.11.3. Running CUnit tests</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160504T151249Z" creationid="95" creationdate="20160504T151226Z">
        <seg>54.11.3. 运行 CUnit 测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>54.11. CUnit support</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T095635Z" creationid="haohang" creationdate="20160408T095635Z">
        <seg>54.11. CUnit 支持</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>54.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070357Z" creationid="95" creationdate="20170416T070357Z">
        <seg>54.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>54.2. Component model</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160128T153602Z" creationid="95" creationdate="20160128T153602Z">
        <seg>54.2. 组件模型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>54.3.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070403Z" creationid="95" creationdate="20170416T070403Z">
        <seg>54.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>54.3.1. Working with shared libraries</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160219T072317Z" creationid="haohang" creationdate="20160219T072317Z">
        <seg>54.3.1. 使用共享库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>54.3. Tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160219T070039Z" creationid="haohang" creationdate="20160219T070039Z">
        <seg>54.3. 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>54.4.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070404Z" creationid="95" creationdate="20170416T070404Z">
        <seg>54.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>54.4.1. C++ sources</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160219T082800Z" creationid="haohang" creationdate="20160219T082800Z">
        <seg>54.4.1. C++ 源代码</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>54.4.2. C sources</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160225T090421Z" creationid="haohang" creationdate="20160225T090421Z">
        <seg>54.4.2. C 源代码</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>54.4.3. Assembler sources</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160313T053703Z" creationid="95" creationdate="20160313T053625Z">
        <seg>54.4.3. 汇编代码</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>54.4.4. Objective-C sources</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160319T115055Z" creationid="95" creationdate="20160319T115055Z">
        <seg>54.4.4. Objective-C 源码</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>54.4.5. Objective-C++ sources</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160319T115355Z" creationid="95" creationdate="20160319T115355Z">
        <seg>54.4.5. Objective-C++ 源码</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>54.4. Core language support: C, C++, Assembler, Objective-C and Objective-C++</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160219T081305Z" creationid="haohang" creationdate="20160219T081305Z">
        <seg>544.核心语言支持: C、C++、汇编，Objective-C和Objective-C++</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>54.5.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070416Z" creationid="95" creationdate="20170416T070416Z">
        <seg>54.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>54.5. Configuring the compiler, assembler and linker</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160319T115547Z" creationid="95" creationdate="20160319T115547Z">
        <seg>54.5. 配置编译器，汇编器和连接器</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>54.6.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070421Z" creationid="95" creationdate="20170416T070421Z">
        <seg>54.6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>54.6. Windows Resources</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160324T153152Z" creationid="95" creationdate="20160324T153117Z">
        <seg>54.6. Windows Resource</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>54.7.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070445Z" creationid="95" creationdate="20170416T070445Z">
        <seg>54.7.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>54.7.1. Dependencies within the same project</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160325T025640Z" creationid="haohang" creationdate="20160325T025640Z">
        <seg>54.7.1. 同一项目的依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>54.7.2. Project Dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160325T033147Z" creationid="haohang" creationdate="20160325T033147Z">
        <seg>54.7.2. 项目依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>54.7. Library Dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160325T025508Z" creationid="haohang" creationdate="20160325T025508Z">
        <seg>54.7. 库依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>54.8.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070449Z" creationid="95" creationdate="20170416T070449Z">
        <seg>54.8.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>54.8.1. Build types</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160401T090003Z" creationid="haohang" creationdate="20160401T090003Z">
        <seg>54.8.1. 构建类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>54.8.2. Platform</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160401T091010Z" creationid="haohang" creationdate="20160401T091006Z">
        <seg>54.8.2. 平台</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>54.8.3. Flavor</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T080655Z" creationid="haohang" creationdate="20160405T034222Z">
        <seg>54.8.3. Flavor</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>54.8.4. Selecting the build types, platforms and flavors for a component</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T081619Z" creationid="haohang" creationdate="20160408T081619Z">
        <seg>54.8.4. 为一个组件选择构建类型，平台和flavor</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>54.8.5. Building all possible variants</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T083118Z" creationid="haohang" creationdate="20160408T083118Z">
        <seg>54.8.5. 构建所有可能的变种</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>54.8. Native Binary Variants</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160325T033517Z" creationid="haohang" creationdate="20160325T033517Z">
        <seg>54.8. 本地二进制变种</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>54.9.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070454Z" creationid="95" creationdate="20170416T070454Z">
        <seg>54.9.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>54.9.1. Defining tool chains</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T091158Z" creationid="haohang" creationdate="20160408T091158Z">
        <seg>54.9.1. 定义工具链</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>54.9.2. Using tool chains</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T091355Z" creationid="haohang" creationdate="20160408T091355Z">
        <seg>54.9.2. 使用工具链</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>54.9.3. Cross-compiling with GCC</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T092741Z" creationid="haohang" creationdate="20160408T092741Z">
        <seg>54.9.3. 使用GCC进行交叉编译</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>54.9. Tool chains</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T084725Z" creationid="haohang" creationdate="20160408T084725Z">
        <seg>54.9. 工具链</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>55.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070513Z" creationid="95" creationdate="20170416T070513Z">
        <seg>55.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>55.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070519Z" creationid="95" creationdate="20170416T070519Z">
        <seg>55.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>55.1. Build phases</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160518T032514Z" creationid="haohang" creationdate="20160518T032514Z">
        <seg>55.1. 构建阶段</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>55.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070524Z" creationid="95" creationdate="20170416T070524Z">
        <seg>55.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>55.2. Settings file</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T024517Z" creationid="haohang" creationdate="20160519T024517Z">
        <seg>55.2. 设置文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>55.3.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070534Z" creationid="95" creationdate="20170416T070534Z">
        <seg>55.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>55.3.1. Project locations</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T030455Z" creationid="haohang" creationdate="20160519T030455Z">
        <seg>55.3.1. 项目位置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>55.3.2.1. Hierarchical layouts</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T041314Z" creationid="haohang" creationdate="20160519T041314Z">
        <seg>55.3.2.1. 分层布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>55.3.2.2. Flat layouts</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T041850Z" creationid="haohang" creationdate="20160519T041850Z">
        <seg>55.3.2.2. 平面布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>55.3.2. Building the tree</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T041148Z" creationid="haohang" creationdate="20160519T041148Z">
        <seg>55.3.2. 生成树</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>55.3.3. Modifying elements of the project tree</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T070226Z" creationid="haohang" creationdate="20160519T063923Z">
        <seg>55.3.3. 修改项目树元素</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>55.3. Multi-project builds</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T030007Z" creationid="haohang" creationdate="20160519T030007Z">
        <seg>55.3. 多项目构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>55.4.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070539Z" creationid="95" creationdate="20170416T070539Z">
        <seg>55.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>55.4. Initialization</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T070548Z" creationid="haohang" creationdate="20160519T070548Z">
        <seg>55.4. 初始化</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>55.5.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070541Z" creationid="95" creationdate="20170416T070541Z">
        <seg>55.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>55.5. Configuration and execution of a single project build</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T080718Z" creationid="haohang" creationdate="20160519T080718Z">
        <seg>55.5. 配置和执行单个项目构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>55.6.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070545Z" creationid="95" creationdate="20170416T070545Z">
        <seg>55.6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>55.6.1. Project evaluation</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T124833Z" creationid="95" creationdate="20160521T124833Z">
        <seg>55.6.1. 项目评估</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>55.6.2. Task creation</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T134036Z" creationid="95" creationdate="20160521T134036Z">
        <seg>55.6.2. 任务创建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>55.6.3. Task execution graph ready</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T135250Z" creationid="95" creationdate="20160521T135250Z">
        <seg>55.6.3. 任务执行图准备</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>55.6.4. Task execution</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T135738Z" creationid="95" creationdate="20160521T135738Z">
        <seg>55.6.4. 任务执行</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>55.6. Responding to the lifecycle in the build script</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160520T124246Z" creationid="95" creationdate="20160520T124246Z">
        <seg>55.6. 构建脚本生命周期的响应</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>56.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070548Z" creationid="95" creationdate="20170416T070548Z">
        <seg>56.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>56.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070550Z" creationid="95" creationdate="20170416T070550Z">
        <seg>56.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>56.1.1.1. Configuration on demand</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160522T120416Z" creationid="95" creationdate="20160522T120416Z">
        <seg>56.1.1.1. 按需配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>56.1.1. Configuration and execution</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160522T025001Z" creationid="95" creationdate="20160522T025001Z">
        <seg>56.1.1. 配置和执行</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>56.1.2. Defining common behavior</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160522T125126Z" creationid="95" creationdate="20160522T125126Z">
        <seg>56.1.2. 定义共同行为</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>56.1. Cross project configuration</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160522T024630Z" creationid="95" creationdate="20160522T024630Z">
        <seg>56.1. 跨项目配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>56.10.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070640Z" creationid="95" creationdate="20170416T070640Z">
        <seg>56.10.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>56.10. Multi-Project Building and Testing</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T094512Z" creationid="haohang" creationdate="20160726T094512Z">
        <seg>56.10. 多项目构建和测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>56.11.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070644Z" creationid="95" creationdate="20170416T070644Z">
        <seg>56.11.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>56.11. Property and method inheritance</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160727T052904Z" creationid="haohang" creationdate="20160727T052904Z">
        <seg>56.11. 属性和方法的继承</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>56.12.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070650Z" creationid="95" creationdate="20170416T070650Z">
        <seg>56.12.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>56.12. Summary</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160727T053549Z" creationid="haohang" creationdate="20160727T053549Z">
        <seg>56.12. 总结</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>56.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070554Z" creationid="95" creationdate="20170416T070554Z">
        <seg>56.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>56.2.1. Defining common behavior</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160527T162233Z" creationid="95" creationdate="20160527T162233Z">
        <seg>56.2.1. 定义共同行为</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>56.2.2. Adding specific behavior</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160527T162408Z" creationid="95" creationdate="20160527T162408Z">
        <seg>56.2.2. 添加特定的行为</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>56.2.3.1. Filtering by name</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160527T163747Z" creationid="95" creationdate="20160527T163747Z">
        <seg>56.2.3.1. 按名称过滤</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>56.2.3.2. Filtering by properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160530T144247Z" creationid="95" creationdate="20160530T144113Z">
        <seg>56.2.3.2. 通过属性筛选</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>56.2.3. Project filtering</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160527T163329Z" creationid="95" creationdate="20160527T163329Z">
        <seg>56.2.3. 项目筛选</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>56.2. Subproject configuration</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160527T162137Z" creationid="95" creationdate="20160527T162137Z">
        <seg>56.2. 子项目配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>56.3.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070559Z" creationid="95" creationdate="20170416T070559Z">
        <seg>56.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>56.3. Execution rules for multi-project builds</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160530T151540Z" creationid="95" creationdate="20160530T151540Z">
        <seg>56.3. 多项目构建的执行规则</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>56.4.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070602Z" creationid="95" creationdate="20170416T070602Z">
        <seg>56.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>56.4. Running tasks by their absolute path</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160715T091059Z" creationid="haohang" creationdate="20160715T091059Z">
        <seg>56.4. 按绝对路径运行任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>56.5.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070605Z" creationid="95" creationdate="20170416T070605Z">
        <seg>56.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>56.5. Project and task paths</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160715T092100Z" creationid="haohang" creationdate="20160715T092100Z">
        <seg>56.5. 项目和任务路径</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>56.6.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070608Z" creationid="95" creationdate="20170416T070608Z">
        <seg>56.6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>56.6.1.1. Dependencies and execution order</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T062236Z" creationid="haohang" creationdate="20160718T062236Z">
        <seg>56.6.1.1. 依赖和执行顺序</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>56.6.1.2. Declaring dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T071005Z" creationid="haohang" creationdate="20160718T071005Z">
        <seg>56.6.1.2. 声明依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>56.6.1.3. The nature of cross project task dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T071943Z" creationid="haohang" creationdate="20160718T071943Z">
        <seg>56.6.1.3. 跨项目任务依赖的本质</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>56.6.1. Execution dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T062229Z" creationid="haohang" creationdate="20160718T062229Z">
        <seg>56.6.1. 执行依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>56.6.2. Configuration time dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T072106Z" creationid="haohang" creationdate="20160718T072106Z">
        <seg>56.6.2. 配置时依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>56.6.3. Real life examples</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160722T090411Z" creationid="haohang" creationdate="20160722T090411Z">
        <seg>56.6.3. 实际生活中的例子</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>56.6. Dependencies - Which dependencies?</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T061913Z" creationid="haohang" creationdate="20160718T061913Z">
        <seg>56.6. 依赖-哪些依赖？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>56.7.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070615Z" creationid="95" creationdate="20170416T070615Z">
        <seg>56.7.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>56.7.1. Disabling the build of dependency projects</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T085308Z" creationid="haohang" creationdate="20160726T085308Z">
        <seg>56.7.1. 禁止依赖项目的构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>56.7. Project lib dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T083211Z" creationid="haohang" creationdate="20160726T083211Z">
        <seg>56.7. 项目库依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>56.8.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070621Z" creationid="95" creationdate="20170416T070621Z">
        <seg>56.8.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>56.8. Parallel project execution</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T085423Z" creationid="haohang" creationdate="20160726T085423Z">
        <seg>56.8. 并行项目执行</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>56.9.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070636Z" creationid="95" creationdate="20170416T070636Z">
        <seg>56.9.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>56.9. Decoupled Projects</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T092128Z" creationid="haohang" creationdate="20160726T092128Z">
        <seg>56.9. 解耦的项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>57.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070650Z" creationid="95" creationdate="20170416T070650Z">
        <seg>57.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>57.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070656Z" creationid="95" creationdate="20170416T070656Z">
        <seg>57.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>57.1. Packaging a task class</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T143847Z" creationid="95" creationdate="20160814T143847Z">
        <seg>57.1. 封装一个任务类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>57.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070702Z" creationid="95" creationdate="20170416T070702Z">
        <seg>57.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>57.2. Writing a simple task class</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T145322Z" creationid="95" creationdate="20160814T145322Z">
        <seg>57.2. 编写一个简单的任务类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>57.3.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070706Z" creationid="95" creationdate="20170416T070706Z">
        <seg>57.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>57.3.1. Using your task class in another project</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160815T145309Z" creationid="95" creationdate="20160815T145309Z">
        <seg>57.3.1. 在另一个项目中使用你的任务类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>57.3.2. Writing tests for your task class</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160815T145952Z" creationid="95" creationdate="20160815T145952Z">
        <seg>57.3.2. 编写你的任务类的测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>57.3. A standalone project</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T151631Z" creationid="95" creationdate="20160814T151631Z">
        <seg>57.3. 一个独立项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>57.4.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070711Z" creationid="95" creationdate="20170416T070711Z">
        <seg>57.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>57.4.1. Implementing an incremental task</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160816T144344Z" creationid="95" creationdate="20160815T152923Z">
        <seg>57.4.1. 实现增量任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>57.4.2. Which inputs are considered out of date?</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160816T145443Z" creationid="95" creationdate="20160816T145443Z">
        <seg>57.4.2. 哪些输入是被视为out-of-date的？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>57.4.3. An incremental task in action</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160817T145155Z" creationid="95" creationdate="20160817T145155Z">
        <seg>57.4.3. 一个增量任务的操作</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>57.4. Incremental tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160815T150143Z" creationid="95" creationdate="20160815T150134Z">
        <seg>57.4. 增量任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>58.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070715Z" creationid="95" creationdate="20170416T070715Z">
        <seg>58.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>58.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070723Z" creationid="95" creationdate="20170416T070723Z">
        <seg>58.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>58.1. Packaging a plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160818T151216Z" creationid="95" creationdate="20160818T151216Z">
        <seg>58.1. 打包插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>58.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070731Z" creationid="95" creationdate="20170416T070731Z">
        <seg>58.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>58.2. Writing a simple plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160818T151630Z" creationid="95" creationdate="20160818T151630Z">
        <seg>58.2. 编写一个简单的插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>58.3.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070736Z" creationid="95" creationdate="20170416T070736Z">
        <seg>58.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>58.3. Getting input from the build</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T124013Z" creationid="95" creationdate="20160820T124013Z">
        <seg>58.3. 从构建中获取输入</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>58.4.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070742Z" creationid="95" creationdate="20170416T070742Z">
        <seg>58.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>58.4. Working with files in custom tasks and plugins</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T131946Z" creationid="95" creationdate="20160820T131946Z">
        <seg>58.4. 在自定义任务和插件中使用文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>58.5.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070747Z" creationid="95" creationdate="20170416T070747Z">
        <seg>58.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>58.5.1. Using your plugin in another project</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T013230Z" creationid="95" creationdate="20161211T013230Z">
        <seg>58.5.1. 在另一个项目中使用你的插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>58.5.2. Writing tests for your plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T014613Z" creationid="95" creationdate="20161211T014613Z">
        <seg>58.5.2. 为你的插件编写测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>58.5. A standalone project</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160828T132711Z" creationid="95" creationdate="20160828T132711Z">
        <seg>58.5. 一个独立项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>58.6.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070749Z" creationid="95" creationdate="20170416T070749Z">
        <seg>58.6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>58.6. Maintaining multiple domain objects</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T014944Z" creationid="95" creationdate="20161211T014944Z">
        <seg>58.6. 维护多个域对象</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>59.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070753Z" creationid="95" creationdate="20170416T070753Z">
        <seg>59.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>59.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070817Z" creationid="95" creationdate="20170416T070817Z">
        <seg>59.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>59.1. Inherited properties and methods</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T044730Z" creationid="95" creationdate="20161211T044730Z">
        <seg>59.1. 继承的属性和方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>59.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070826Z" creationid="95" creationdate="20170416T070826Z">
        <seg>59.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>59.2. Injected configuration</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T045004Z" creationid="95" creationdate="20161211T045004Z">
        <seg>59.2. 注入配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>59.3.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070830Z" creationid="95" creationdate="20170416T070830Z">
        <seg>59.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>59.3. Build sources in the <bpt i="0" x="0">&lt;c0&gt;</bpt>buildSrc<ept i="0">&lt;/c0&gt;</ept> project</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T051135Z" creationid="95" creationdate="20161211T051135Z">
        <seg>59.3. 在<bpt i="0" x="0">&lt;c0&gt;</bpt>buildSrc<ept i="0">&lt;/c0&gt;</ept> 项目中的构建源代码</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>59.4.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070834Z" creationid="95" creationdate="20170416T070834Z">
        <seg>59.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>59.4. Running another Gradle build from a build</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161212T152747Z" creationid="95" creationdate="20161212T152747Z">
        <seg>59.4. 从一个构建中运行另一个Gradle构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>59.5.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070838Z" creationid="95" creationdate="20170416T070838Z">
        <seg>59.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>59.5. External dependencies for the build script</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161212T153614Z" creationid="95" creationdate="20161212T153557Z">
        <seg>59.5. 构建脚本的外部依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>59.6.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070844Z" creationid="95" creationdate="20170416T070844Z">
        <seg>59.6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>59.6. Ant optional dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161212T154921Z" creationid="95" creationdate="20161212T154921Z">
        <seg>59.6. Ant 可选依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>59.7.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070848Z" creationid="95" creationdate="20170416T070848Z">
        <seg>59.7.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>59.7. Summary</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161212T155847Z" creationid="95" creationdate="20161212T155847Z">
        <seg>59.7. 总结</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>6.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162246Z" creationid="msdx" creationdate="20141109T162246Z">
        <seg>6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>6.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162302Z" creationid="msdx" creationdate="20141109T162302Z">
        <seg>6.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>6.1. Projects and tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T154138Z" creationid="msdx" creationdate="20141109T154138Z">
        <seg>6.1. Projects and tasks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>6.10.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163250Z" creationid="msdx" creationdate="20141109T163250Z">
        <seg>6.10.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>6.11.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163310Z" creationid="msdx" creationdate="20141109T163310Z">
        <seg>6.11.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>6.12.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163340Z" creationid="msdx" creationdate="20141109T163340Z">
        <seg>6.12.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>6.13.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163349Z" creationid="msdx" creationdate="20141109T163349Z">
        <seg>6.13.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>6.14.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163409Z" creationid="msdx" creationdate="20141109T163409Z">
        <seg>6.14.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>6.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162324Z" creationid="msdx" creationdate="20141109T162324Z">
        <seg>6.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>6.3.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162330Z" creationid="msdx" creationdate="20141109T162330Z">
        <seg>6.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>6.4.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162413Z" creationid="msdx" creationdate="20141109T162413Z">
        <seg>6.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>6.5.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T164805Z" creationid="msdx" creationdate="20141109T164805Z">
        <seg>6.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>6.6.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162455Z" creationid="msdx" creationdate="20141109T162455Z">
        <seg>6.6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>6.7.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162459Z" creationid="msdx" creationdate="20141109T162459Z">
        <seg>6.7.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>6.8.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162515Z" creationid="msdx" creationdate="20141109T162515Z">
        <seg>6.8.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>6.9.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163236Z" creationid="msdx" creationdate="20141109T163236Z">
        <seg>6.9.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>60.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070849Z" creationid="95" creationdate="20170416T070849Z">
        <seg>60.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>60.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070913Z" creationid="95" creationdate="20170416T070913Z">
        <seg>60.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>60.1. Basic usage</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161214T142331Z" creationid="95" creationdate="20161214T142331Z">
        <seg>60.1. 基本用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>60.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070918Z" creationid="95" creationdate="20170416T070918Z">
        <seg>60.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>60.2. Using an init script</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161214T143355Z" creationid="95" creationdate="20161214T143341Z">
        <seg>60.2. 使用 init 脚本</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>60.3.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070923Z" creationid="95" creationdate="20170416T070923Z">
        <seg>60.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>60.3.1. Configuring projects from an init script</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161214T155724Z" creationid="95" creationdate="20161214T155724Z">
        <seg>60.3.1. 从一个初始化脚本中配置项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>60.3. Writing an init script</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161214T154159Z" creationid="95" creationdate="20161214T154159Z">
        <seg>60.3. 写一个 init 脚本</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>60.4.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070926Z" creationid="95" creationdate="20170416T070926Z">
        <seg>60.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>60.4. External dependencies for the init script</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161215T143439Z" creationid="95" creationdate="20161215T143439Z">
        <seg>60.4. init 脚本的外部依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>60.5.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070931Z" creationid="95" creationdate="20170416T070931Z">
        <seg>60.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>60.5. Init script plugins</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161215T144128Z" creationid="95" creationdate="20161215T144128Z">
        <seg>60.5. Init 脚本插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>61.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070935Z" creationid="95" creationdate="20170416T070935Z">
        <seg>61.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>61.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070942Z" creationid="95" creationdate="20170416T070942Z">
        <seg>61.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>61.1. Configuration</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161217T161033Z" creationid="95" creationdate="20161217T161033Z">
        <seg>61.1. 配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>61.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070943Z" creationid="95" creationdate="20170416T070943Z">
        <seg>61.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>61.2. Unix file permissions</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T040709Z" creationid="95" creationdate="20161218T040709Z">
        <seg>61.2. Unix 文件权限</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>62.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070948Z" creationid="95" creationdate="20170416T070948Z">
        <seg>62.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>62.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070957Z" creationid="95" creationdate="20170416T070957Z">
        <seg>62.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>62.1. Introduction to the Tooling API</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T041801Z" creationid="95" creationdate="20161218T041055Z">
        <seg>62.1.Tooling API 简介</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>62.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T071009Z" creationid="95" creationdate="20170416T071009Z">
        <seg>62.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>62.2. Tooling API and the Gradle Build Daemon</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T154540Z" creationid="95" creationdate="20161218T154509Z">
        <seg>62.2. Tooling API 及 Gradle 构建守护进程</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>62.3.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T071013Z" creationid="95" creationdate="20170416T071013Z">
        <seg>62.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>62.3. Quickstart</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T155448Z" creationid="95" creationdate="20161218T155448Z">
        <seg>62.3. 快速入门</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>63.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T071020Z" creationid="95" creationdate="20170416T071020Z">
        <seg>63.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>63.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T071024Z" creationid="95" creationdate="20170416T071024Z">
        <seg>63.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>63.1. Definition of terms</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161219T151222Z" creationid="95" creationdate="20161219T151222Z">
        <seg>63.1. 术语定义</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>63.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T071028Z" creationid="95" creationdate="20170416T071028Z">
        <seg>63.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>63.2.1. Supported builds</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161228T145349Z" creationid="95" creationdate="20161228T145349Z">
        <seg>63.2.1. 支持的构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>63.2.2. Supported build outcomes</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161228T145932Z" creationid="95" creationdate="20161228T145919Z">
        <seg>63.2.2. 支持的构建结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>63.2. Current Capabilities</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161228T145156Z" creationid="95" creationdate="20161228T145156Z">
        <seg>63.2. 目前的能力</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>63.3.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T071039Z" creationid="95" creationdate="20170416T071039Z">
        <seg>63.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>63.3.1. Trying Gradle upgrades</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170109T125259Z" creationid="95" creationdate="20170109T125259Z">
        <seg>63.3.1. 尝试 Gradle 升级</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>63.3.2. The comparison “result”</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170109T125645Z" creationid="95" creationdate="20170109T125645Z">
        <seg>63.3.2. 比较“结果”</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>63.3.3. Which archives are compared?</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170109T130117Z" creationid="95" creationdate="20170109T130033Z">
        <seg>63.3.3. 哪些归档文件会进行比较？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>63.3. Comparing Gradle Builds</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161228T150246Z" creationid="95" creationdate="20161228T150246Z">
        <seg>63.3. 比较Gradle构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>64.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T071042Z" creationid="95" creationdate="20170416T071042Z">
        <seg>64.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>64.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T071050Z" creationid="95" creationdate="20170416T071050Z">
        <seg>64.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>64.1. The “<bpt i="0" x="0">&lt;c0&gt;</bpt>ivy-publish<ept i="0">&lt;/c0&gt;</ept>” Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170211T013011Z" creationid="95" creationdate="20170211T013011Z">
        <seg>64.1. “<bpt i="0" x="0">&lt;c0&gt;</bpt>ivy-publish<ept i="0">&lt;/c0&gt;</ept>”插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>64.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T071058Z" creationid="95" creationdate="20170416T071058Z">
        <seg>64.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>64.2.1. Publishing a Software Component</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170211T140244Z" creationid="95" creationdate="20170211T140244Z">
        <seg>64.2.1. 发布软件组件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>64.2.2. Publishing custom artifacts</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170211T140828Z" creationid="95" creationdate="20170211T140828Z">
        <seg>64.2.2. 发布自定义构件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>64.2.3. Identity values for the published project</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20170217T083018Z" creationid="haohang" creationdate="20170217T083018Z">
        <seg>64.2.3. 已发布的项目的标识值</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>64.2.4. Modifying the generated module descriptor</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170304T030247Z" creationid="95" creationdate="20170304T030247Z">
        <seg>64.2.4. 修改生成的模块描述</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>64.2.5. Publishing multiple modules</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170304T032812Z" creationid="95" creationdate="20170304T032812Z">
        <seg>64.2.5. 发布多个模块</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>64.2. Publications</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170211T134747Z" creationid="95" creationdate="20170211T134747Z">
        <seg>64.2. 发布</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>64.3.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T071100Z" creationid="95" creationdate="20170416T071100Z">
        <seg>64.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>64.3. Repositories</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170304T033550Z" creationid="95" creationdate="20170304T033550Z">
        <seg>64.3. 仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>64.4.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T071113Z" creationid="95" creationdate="20170416T071113Z">
        <seg>64.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>64.4.1. The “<bpt i="0" x="0">&lt;c0&gt;</bpt>publish<ept i="0">&lt;/c0&gt;</ept>” lifecycle task</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170326T075122Z" creationid="95" creationdate="20170326T075122Z">
        <seg>64.4.1.  “<bpt i="0" x="0">&lt;c0&gt;</bpt>publish<ept i="0">&lt;/c0&gt;</ept>” 生命周期任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>64.4. Performing a publish</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170326T073723Z" creationid="95" creationdate="20170326T073723Z">
        <seg>64.4. 执行发布</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>64.5.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T071118Z" creationid="95" creationdate="20170416T071118Z">
        <seg>64.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>64.5. Generating the Ivy module descriptor file without publishing</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170326T084157Z" creationid="95" creationdate="20170326T080526Z">
        <seg>64.5. 不发布的情况下生成Ivy模块的描述符文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>64.6.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T071124Z" creationid="95" creationdate="20170416T071124Z">
        <seg>64.6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>64.6. Complete example</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T144944Z" creationid="95" creationdate="20170330T144944Z">
        <seg>64.6. 完整的示例</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>64.7.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T071129Z" creationid="95" creationdate="20170416T071129Z">
        <seg>64.7.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>64.7. Future features</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T154259Z" creationid="95" creationdate="20170330T154259Z">
        <seg>64.7. 未来特性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>65.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T071132Z" creationid="95" creationdate="20170416T071132Z">
        <seg>65.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>65.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T071138Z" creationid="95" creationdate="20170416T071138Z">
        <seg>65.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>65.1. The “<bpt i="0" x="0">&lt;c0&gt;</bpt>maven-publish<ept i="0">&lt;/c0&gt;</ept>” Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170412T152428Z" creationid="95" creationdate="20170412T152428Z">
        <seg>65.1.  “<bpt i="0" x="0">&lt;c0&gt;</bpt>maven-publish<ept i="0">&lt;/c0&gt;</ept>” 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>65.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T071145Z" creationid="95" creationdate="20170416T071145Z">
        <seg>65.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>65.2.1. Publishing a Software Component</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170412T154307Z" creationid="95" creationdate="20170412T154307Z">
        <seg>65.2.1. 发布软件组件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>65.2.2. Publishing custom artifacts</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170412T154515Z" creationid="95" creationdate="20170412T154515Z">
        <seg>65.2.2. 发布自定义构件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>65.2.3. Identity values in the generated POM</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T032107Z" creationid="95" creationdate="20170412T154922Z">
        <seg>64.2.3. 生成的POM中的标识值</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>65.2.4. Modifying the generated POM</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T033032Z" creationid="95" creationdate="20170416T033032Z">
        <seg>65.2.4. 修改生成的 POM</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>65.2.5. Publishing multiple modules</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T062557Z" creationid="95" creationdate="20170416T062557Z">
        <seg>65.2.5. 发布多个模块</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>65.2. Publications</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170412T153434Z" creationid="95" creationdate="20170412T153434Z">
        <seg>65.2. 发布</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>65.3.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T071148Z" creationid="95" creationdate="20170416T071148Z">
        <seg>65.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>65.3. Repositories</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T062618Z" creationid="95" creationdate="20170416T062618Z">
        <seg>65.3. 仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>65.4.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T071150Z" creationid="95" creationdate="20170416T071150Z">
        <seg>65.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>65.4. Performing a publish</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T063014Z" creationid="95" creationdate="20170416T063014Z">
        <seg>65.4. 执行发布</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>65.5.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T071152Z" creationid="95" creationdate="20170416T071152Z">
        <seg>65.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>65.5. Publishing to Maven Local</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T063555Z" creationid="95" creationdate="20170416T063555Z">
        <seg>65.5. 发布到Maven本地库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>65.6.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T071156Z" creationid="95" creationdate="20170416T071156Z">
        <seg>65.6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>65.6. Generating the POM file without publishing</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T064348Z" creationid="95" creationdate="20170416T064348Z">
        <seg>65.6. 不发布的情况下生成POM文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>7.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163423Z" creationid="msdx" creationdate="20141109T163423Z">
        <seg>7.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>7.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163427Z" creationid="msdx" creationdate="20141109T163427Z">
        <seg>7.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>7.1. The Java plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104749Z" creationid="msdx" creationdate="20150428T104749Z">
        <seg>7.1. Java 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>7.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163432Z" creationid="msdx" creationdate="20141109T163432Z">
        <seg>7.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>7.3.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163438Z" creationid="msdx" creationdate="20141109T163438Z">
        <seg>7.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>7.4.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163504Z" creationid="msdx" creationdate="20141109T163504Z">
        <seg>7.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>8.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163509Z" creationid="msdx" creationdate="20141109T163509Z">
        <seg>8.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>8.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163518Z" creationid="msdx" creationdate="20141109T163518Z">
        <seg>8.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>8.1. What is dependency management?</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150703T100752Z" creationid="haohang" creationdate="20150703T100752Z">
        <seg>8.1. 什么是依赖管理？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>8.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163536Z" creationid="msdx" creationdate="20141109T163536Z">
        <seg>8.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>8.3.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163601Z" creationid="msdx" creationdate="20141109T163601Z">
        <seg>8.3.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>8.4.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163610Z" creationid="msdx" creationdate="20141109T163610Z">
        <seg>8.4.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>8.5.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163621Z" creationid="msdx" creationdate="20141109T163621Z">
        <seg>8.5.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>8.6.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163640Z" creationid="msdx" creationdate="20141109T163640Z">
        <seg>8.6.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>8.7.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163651Z" creationid="msdx" creationdate="20141109T163651Z">
        <seg>8.7.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>8080</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T151123Z" creationid="msdx" creationdate="20150504T151123Z">
        <seg>8080</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>9.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163652Z" creationid="msdx" creationdate="20141109T163652Z">
        <seg>9.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>9.1.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163700Z" creationid="msdx" creationdate="20141109T163700Z">
        <seg>9.1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>9.1. A basic Groovy project</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T062227Z" creationid="msdx" creationdate="20141030T061526Z">
        <seg>9.1. 一个基本的Groovy project</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>9.2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163729Z" creationid="msdx" creationdate="20141109T163729Z">
        <seg>9.2.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>9.2. Summary</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T123354Z" creationid="msdx" creationdate="20141030T065520Z">
        <seg>9.2. 总结</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>:test
This is executed during the execution phase.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T025437Z" creationid="haohang" creationdate="20160519T025437Z">
        <seg>:test
This is executed during the execution phase.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>FileTree<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> (read-only)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T093522Z" creationid="msdx" creationdate="20150429T093522Z">
        <seg><bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>FileTree<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> (read-only)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>FileTree<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083439Z" creationid="msdx" creationdate="20150428T083439Z">
        <seg><bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>FileTree<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>JavaVersion<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083245Z" creationid="msdx" creationdate="20150428T083245Z">
        <seg><bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>JavaVersion<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>SourceDirectorySet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> (read-only)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083417Z" creationid="msdx" creationdate="20150428T083417Z">
        <seg><bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>SourceDirectorySet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> (read-only)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>SourceSetContainer<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> (read-only)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083244Z" creationid="msdx" creationdate="20150428T083244Z">
        <seg><bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>SourceSetContainer<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> (read-only)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>SourceSetOutput<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> (read-only)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083250Z" creationid="msdx" creationdate="20150428T083250Z">
        <seg><bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>SourceSetOutput<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> (read-only)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>buildSrc<ept i="1">&lt;/c1&gt;</ept> project<ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T044032Z" creationid="95" creationdate="20161211T044032Z">
        <seg><bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>buildSrc<ept i="1">&lt;/c1&gt;</ept> 项目<ept i="0">&lt;/a0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;a0&gt;</bpt>Bintray<ept i="0">&lt;/a0&gt;</ept>'s JCenter is an up-to-date collection of all popular Maven OSS artifacts, including artifacts published directly to Bintray.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T100434Z" creationid="haohang" creationdate="20150807T100434Z">
        <seg><bpt i="0" x="0">&lt;a0&gt;</bpt>Bintray<ept i="0">&lt;/a0&gt;</ept>JCenter 是所有流行的 Maven OSS artifacts 的up-to-date 集合，包括直接发布到 Bintray 的 artifacts。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;a0&gt;</bpt>Configuration injection<ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T043929Z" creationid="95" creationdate="20161211T043929Z">
        <seg><bpt i="0" x="0">&lt;a0&gt;</bpt>配置注入<ept i="0">&lt;/a0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;a0&gt;</bpt>Custom plugins<ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T044323Z" creationid="95" creationdate="20161211T044323Z">
        <seg><bpt i="0" x="0">&lt;a0&gt;</bpt>自定义插件<ept i="0">&lt;/a0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;a0&gt;</bpt>Custom tasks<ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T044245Z" creationid="95" creationdate="20161211T044245Z">
        <seg><bpt i="0" x="0">&lt;a0&gt;</bpt>自定义任务<ept i="0">&lt;/a0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;a0&gt;</bpt>Execute an external build<ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T044641Z" creationid="95" creationdate="20161211T044641Z">
        <seg><bpt i="0" x="0">&lt;a0&gt;</bpt>执行一个外部构建<ept i="0">&lt;/a0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;a0&gt;</bpt>External libraries<ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T044704Z" creationid="95" creationdate="20161211T044704Z">
        <seg><bpt i="0" x="0">&lt;a0&gt;</bpt>外部 libraries<ept i="0">&lt;/a0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;a0&gt;</bpt>Growl<ept i="0">&lt;/a0&gt;</ept> (Mac OS X)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T062807Z" creationid="haohang" creationdate="20150628T062807Z">
        <seg><bpt i="0" x="0">&lt;a0&gt;</bpt>Growl<ept i="0">&lt;/a0&gt;</ept> (Mac OS X)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;a0&gt;</bpt>Inherited properties and methods<ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T043849Z" creationid="95" creationdate="20161211T043849Z">
        <seg><bpt i="0" x="0">&lt;a0&gt;</bpt>继承的属性和方法<ept i="0">&lt;/a0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;a0&gt;</bpt>Previous<ept i="0">&lt;/a0&gt;</ept><bpt i="1" x="1">&lt;s1&gt;</bpt>|<ept i="1">&lt;/s1&gt;</ept><bpt i="2" x="2">&lt;a2&gt;</bpt>Contents<ept i="2">&lt;/a2&gt;</ept><bpt i="3" x="3">&lt;s3&gt;</bpt>|<ept i="3">&lt;/s3&gt;</ept><bpt i="4" x="4">&lt;a4&gt;</bpt>Next<ept i="4">&lt;/a4&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T040034Z" creationid="msdx" creationdate="20141030T040034Z">
        <seg><bpt i="0" x="0">&lt;a0&gt;</bpt>上一章<ept i="0">&lt;/a0&gt;</ept><bpt i="1" x="1">&lt;s1&gt;</bpt>|<ept i="1">&lt;/s1&gt;</ept><bpt i="2" x="2">&lt;a2&gt;</bpt>目录<ept i="2">&lt;/a2&gt;</ept><bpt i="3" x="3">&lt;s3&gt;</bpt>|<ept i="3">&lt;/s3&gt;</ept><bpt i="4" x="4">&lt;a4&gt;</bpt>下一章<ept i="4">&lt;/a4&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;a0&gt;</bpt>Section 55.1, “Build phases”<ept i="0">&lt;/a0&gt;</ept> describes the phases of every Gradle build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160522T025129Z" creationid="95" creationdate="20160522T025129Z">
        <seg><bpt i="0" x="0">&lt;a0&gt;</bpt>第 55.1 节，“构建阶段”<ept i="0">&lt;/a0&gt;</ept>描述了每个 Gradle 构建阶段。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;a0&gt;</bpt>Section 56.1.1.1, “Configuration on demand”<ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T090554Z" creationid="haohang" creationdate="20160726T090554Z">
        <seg><bpt i="0" x="0">&lt;a0&gt;</bpt>第 56.1.1.1 节，“按需配置”<ept i="0">&lt;/a0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;a0&gt;</bpt>Shared scripts<ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T044129Z" creationid="95" creationdate="20161211T044129Z">
        <seg><bpt i="0" x="0">&lt;a0&gt;</bpt>共享脚本<ept i="0">&lt;/a0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;a0&gt;</bpt>Snarl<ept i="0">&lt;/a0&gt;</ept> (Windows)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T062804Z" creationid="haohang" creationdate="20150628T062804Z">
        <seg><bpt i="0" x="0">&lt;a0&gt;</bpt>Snarl<ept i="0">&lt;/a0&gt;</ept> (Windows)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;a0&gt;</bpt>notify-send<ept i="0">&lt;/a0&gt;</ept> (Ubuntu)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T062802Z" creationid="haohang" creationdate="20150628T062802Z">
        <seg><bpt i="0" x="0">&lt;a0&gt;</bpt>notify-send<ept i="0">&lt;/a0&gt;</ept> (Ubuntu)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="2" x="2">&lt;a2&gt;</bpt>Chapter 19, <bpt i="3" x="3">&lt;i3&gt;</bpt>The Gradle Daemon<ept i="3">&lt;/i3&gt;</ept><ept i="2">&lt;/a2&gt;</ept> contains more details about the daemon, specifically information on situations when new daemons are forked.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T155437Z" creationid="95" creationdate="20161218T155304Z">
        <seg><bpt i="2" x="2">&lt;a2&gt;</bpt>第十九章，<bpt i="3" x="3">&lt;i3&gt;</bpt>Gradle守护进程<ept i="3">&lt;/i3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>包含了关于守护进程的更多细节内容，特别是当新进行被fork时的信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="4" x="4">&lt;a4&gt;</bpt>Table 52.4, “Configuration elements of the MavenDeployer”<ept i="4">&lt;/a4&gt;</ept> lists the available bean elements and a link to the javadoc of the corresponding class.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T135608Z" creationid="95" creationdate="20160105T135608Z">
        <seg><bpt i="4" x="4">&lt;a4&gt;</bpt>表 52.4，"MavenDeployer 的配置元素"<ept i="4">&lt;/a4&gt;</ept>列出了可用的 bean 元素，以及 javadoc 中相应类的链接。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>-S<ept i="0">&lt;/c0&gt;</ept> or <bpt i="1" x="1">&lt;c1&gt;</bpt>--full-stacktrace<ept i="1">&lt;/c1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T113103Z" creationid="msdx" creationdate="20141116T113103Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>-S<ept i="0">&lt;/c0&gt;</ept> or <bpt i="1" x="1">&lt;c1&gt;</bpt>--full-stacktrace<ept i="1">&lt;/c1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>-d<ept i="0">&lt;/c0&gt;</ept> or <bpt i="1" x="1">&lt;c1&gt;</bpt>--debug<ept i="1">&lt;/c1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T103030Z" creationid="msdx" creationdate="20141116T103030Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>-d<ept i="0">&lt;/c0&gt;</ept> or <bpt i="1" x="1">&lt;c1&gt;</bpt>--debug<ept i="1">&lt;/c1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>-i<ept i="0">&lt;/c0&gt;</ept> or <bpt i="1" x="1">&lt;c1&gt;</bpt>--info<ept i="1">&lt;/c1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T103024Z" creationid="msdx" creationdate="20141116T103024Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>-i<ept i="0">&lt;/c0&gt;</ept> or <bpt i="1" x="1">&lt;c1&gt;</bpt>--info<ept i="1">&lt;/c1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>-q<ept i="0">&lt;/c0&gt;</ept> or <bpt i="1" x="1">&lt;c1&gt;</bpt>--quiet<ept i="1">&lt;/c1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T102927Z" creationid="msdx" creationdate="20141116T102927Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>-q<ept i="0">&lt;/c0&gt;</ept> or <bpt i="1" x="1">&lt;c1&gt;</bpt>--quiet<ept i="1">&lt;/c1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>-s<ept i="0">&lt;/c0&gt;</ept> or <bpt i="1" x="1">&lt;c1&gt;</bpt>--stacktrace<ept i="1">&lt;/c1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T104046Z" creationid="msdx" creationdate="20141116T104046Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>-s<ept i="0">&lt;/c0&gt;</ept> or <bpt i="1" x="1">&lt;c1&gt;</bpt>--stacktrace<ept i="1">&lt;/c1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>File<ept i="0">&lt;/c0&gt;</ept> (read-only)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083236Z" creationid="msdx" creationdate="20150428T083236Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>File<ept i="0">&lt;/c0&gt;</ept> (read-only)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>File<ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083444Z" creationid="msdx" creationdate="20150428T083444Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>File<ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>GroovyCompile<ept i="0">&lt;/c0&gt;</ept> and <bpt i="1" x="1">&lt;c1&gt;</bpt>Groovydoc<ept i="1">&lt;/c1&gt;</ept> tasks consume Groovy in two ways: on their <bpt i="2" x="2">&lt;c2&gt;</bpt>classpath<ept i="2">&lt;/c2&gt;</ept>, and on their <bpt i="3" x="3">&lt;c3&gt;</bpt>groovyClasspath<ept i="3">&lt;/c3&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T090738Z" creationid="msdx" creationdate="20150429T081055Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>GroovyCompile<ept i="0">&lt;/c0&gt;</ept>和<bpt i="1" x="1">&lt;c1&gt;</bpt>Groovydoc<ept i="1">&lt;/c1&gt;</ept> tasks 会以两种方式使用 Groovy： 在它们的<bpt i="2" x="2">&lt;c2&gt;</bpt>classpath<ept i="2">&lt;/c2&gt;</ept>以及它们的<bpt i="3" x="3">&lt;c3&gt;</bpt>groovyClasspath<ept i="3">&lt;/c3&gt;</ept>上。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>Object<ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083443Z" creationid="msdx" creationdate="20150428T083443Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>Object<ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>ScalaCompile<ept i="0">&lt;/c0&gt;</ept> and <bpt i="1" x="1">&lt;c1&gt;</bpt>ScalaDoc<ept i="1">&lt;/c1&gt;</ept> tasks consume Scala in two ways: on their <bpt i="2" x="2">&lt;c2&gt;</bpt>classpath<ept i="2">&lt;/c2&gt;</ept>, and on their <bpt i="3" x="3">&lt;c3&gt;</bpt>scalaClasspath<ept i="3">&lt;/c3&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150430T020720Z" creationid="msdx" creationdate="20150430T020555Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>ScalaCompile<ept i="0">&lt;/c0&gt;</ept>和<bpt i="1" x="1">&lt;c1&gt;</bpt>ScalaDoc<ept i="1">&lt;/c1&gt;</ept> tasks 会以两种方式使用 Scala： 在它们的<bpt i="2" x="2">&lt;c2&gt;</bpt>classpath<ept i="2">&lt;/c2&gt;</ept>以及<bpt i="3" x="3">&lt;c3&gt;</bpt>scalaClasspath<ept i="3">&lt;/c3&gt;</ept>上。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>Set&lt;File&gt;<ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083418Z" creationid="msdx" creationdate="20150428T083418Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>Set&lt;File&gt;<ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>String<ept i="0">&lt;/c0&gt;</ept> (read-only)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083250Z" creationid="msdx" creationdate="20150428T083250Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>String<ept i="0">&lt;/c0&gt;</ept> (read-only)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>artifactId<ept i="0">&lt;/c0&gt;</ept> - <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>Project.getName()<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T032339Z" creationid="95" creationdate="20170416T032339Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>artifactId<ept i="0">&lt;/c0&gt;</ept> - <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>Project.getName()<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>beforeMerged { arg -&gt; }<ept i="0">&lt;/c0&gt;</ept> argument type</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T105229Z" creationid="haohang" creationdate="20150624T105229Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>beforeMerged { arg -&gt; }<ept i="0">&lt;/c0&gt;</ept> 参数类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>build<ept i="0">&lt;/c0&gt;</ept> and <bpt i="1" x="1">&lt;c1&gt;</bpt>build<ept i="1">&lt;/c1&gt;</ept> tasks in all project lib dependencies of the <bpt i="2" x="2">&lt;c2&gt;</bpt>testRuntime<ept i="2">&lt;/c2&gt;</ept> configuration.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T011353Z" creationid="Administrator" creationdate="20150426T011353Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>build<ept i="0">&lt;/c0&gt;</ept>任务，以及在<bpt i="2" x="2">&lt;c2&gt;</bpt>testRuntime<ept i="2">&lt;/c2&gt;</ept>配置的所有项目库依赖项的<bpt i="1" x="1">&lt;c1&gt;</bpt>build<ept i="1">&lt;/c1&gt;</ept>任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>build<ept i="0">&lt;/c0&gt;</ept> and <bpt i="1" x="1">&lt;c1&gt;</bpt>build<ept i="1">&lt;/c1&gt;</ept> tasks in all projects with a project lib dependency on this project in a <bpt i="2" x="2">&lt;c2&gt;</bpt>testRuntime<ept i="2">&lt;/c2&gt;</ept> configuration.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T011640Z" creationid="Administrator" creationdate="20150426T011640Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>build<ept i="0">&lt;/c0&gt;</ept>任务，以及在<bpt i="2" x="2">&lt;c2&gt;</bpt>testRuntime<ept i="2">&lt;/c2&gt;</ept>配置中对此项目有库依赖的所有项目的<bpt i="1" x="1">&lt;c1&gt;</bpt>build<ept i="1">&lt;/c1&gt;</ept>任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>buildSrc<ept i="0">&lt;/c0&gt;</ept> project</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T144151Z" creationid="95" creationdate="20160814T144151Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>buildSrc<ept i="0">&lt;/c0&gt;</ept> 项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>check<ept i="0">&lt;/c0&gt;</ept> and <bpt i="1" x="1">&lt;c1&gt;</bpt>assemble<ept i="1">&lt;/c1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T010459Z" creationid="Administrator" creationdate="20150426T010459Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>check<ept i="0">&lt;/c0&gt;</ept> 和 <bpt i="1" x="1">&lt;c1&gt;</bpt>assemble<ept i="1">&lt;/c1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>cleanEclipseProject<ept i="0">&lt;/c0&gt;</ept>, <bpt i="1" x="1">&lt;c1&gt;</bpt>cleanEclipseClasspath<ept i="1">&lt;/c1&gt;</ept>, <bpt i="2" x="2">&lt;c2&gt;</bpt>cleanEclipseJdt<ept i="2">&lt;/c2&gt;</ept>, <bpt i="3" x="3">&lt;c3&gt;</bpt>cleanEclipseWtpComponent<ept i="3">&lt;/c3&gt;</ept>, <bpt i="4" x="4">&lt;c4&gt;</bpt>cleanEclipseWtpFacet<ept i="4">&lt;/c4&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T004402Z" creationid="haohang" creationdate="20150603T004402Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>cleanEclipseProject<ept i="0">&lt;/c0&gt;</ept>, <bpt i="1" x="1">&lt;c1&gt;</bpt>cleanEclipseClasspath<ept i="1">&lt;/c1&gt;</ept>, <bpt i="2" x="2">&lt;c2&gt;</bpt>cleanEclipseJdt<ept i="2">&lt;/c2&gt;</ept>, <bpt i="3" x="3">&lt;c3&gt;</bpt>cleanEclipseWtpComponent<ept i="3">&lt;/c3&gt;</ept>, <bpt i="4" x="4">&lt;c4&gt;</bpt>cleanEclipseWtpFacet<ept i="4">&lt;/c4&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>cleanIdeaProject<ept i="0">&lt;/c0&gt;</ept>, <bpt i="1" x="1">&lt;c1&gt;</bpt>cleanIdeaModule<ept i="1">&lt;/c1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T072338Z" creationid="haohang" creationdate="20150625T072338Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>cleanIdeaProject<ept i="0">&lt;/c0&gt;</ept>, <bpt i="1" x="1">&lt;c1&gt;</bpt>cleanIdeaModule<ept i="1">&lt;/c1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>compile<ept i="0">&lt;/c0&gt;</ept> (only if the Java plugin is also applied)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T094605Z" creationid="msdx" creationdate="20150503T094605Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>compile<ept i="0">&lt;/c0&gt;</ept>（仅在也配置了使用 Java 插件的时候）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>compile<ept i="0">&lt;/c0&gt;</ept>, <bpt i="1" x="1">&lt;c1&gt;</bpt>compileTest<ept i="1">&lt;/c1&gt;</ept>, plus all tasks which produce the test runtime classpath.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T004821Z" creationid="Administrator" creationdate="20150426T004821Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>compile<ept i="0">&lt;/c0&gt;</ept>， <bpt i="1" x="1">&lt;c1&gt;</bpt>compileTest<ept i="1">&lt;/c1&gt;</ept>，再加上所有产生测试运行时类路径的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>compile<ept i="0">&lt;/c0&gt;</ept>, plus all tasks which produce the test compile classpath.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T004358Z" creationid="Administrator" creationdate="20150426T004358Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>compile<ept i="0">&lt;/c0&gt;</ept>，再加上所有能产生测试编译类路径的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>compile<bpt i="1" x="1">&lt;e1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>SourceSet<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> configuration.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083410Z" creationid="msdx" creationdate="20150428T083252Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>compile<bpt i="1" x="1">&lt;e1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>SourceSet<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> 配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>compile<bpt i="1" x="1">&lt;e1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>SourceSet<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/e1&gt;</ept>Java<ept i="0">&lt;/c0&gt;</ept> and <bpt i="3" x="3">&lt;c3&gt;</bpt>process<bpt i="4" x="4">&lt;e4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>SourceSet<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/e4&gt;</ept>Resources<ept i="3">&lt;/c3&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T005858Z" creationid="Administrator" creationdate="20150426T005858Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>compile<bpt i="1" x="1">&lt;e1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>SourceSet<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/e1&gt;</ept>Java<ept i="0">&lt;/c0&gt;</ept> 和 <bpt i="3" x="3">&lt;c3&gt;</bpt>process<bpt i="4" x="4">&lt;e4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>SourceSet<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/e4&gt;</ept>Resources<ept i="3">&lt;/c3&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>compileJava<ept i="0">&lt;/c0&gt;</ept> and <bpt i="1" x="1">&lt;c1&gt;</bpt>processResources<ept i="1">&lt;/c1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T174735Z" creationid="Administrator" creationdate="20150425T174735Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>compileJava<ept i="0">&lt;/c0&gt;</ept>和<bpt i="1" x="1">&lt;c1&gt;</bpt>processResources<ept i="1">&lt;/c1&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>compileTestJava<ept i="0">&lt;/c0&gt;</ept> and <bpt i="1" x="1">&lt;c1&gt;</bpt>processTestResources<ept i="1">&lt;/c1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T004531Z" creationid="Administrator" creationdate="20150426T004531Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>compileTestJava<ept i="0">&lt;/c0&gt;</ept>和<bpt i="1" x="1">&lt;c1&gt;</bpt>processTestResources<ept i="1">&lt;/c1&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>dependencies<ept i="0">&lt;/c0&gt;</ept> returns only the dependencies belonging explicitly to the configuration.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T034507Z" creationid="haohang" creationdate="20150807T034422Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>dependencies<ept i="0">&lt;/c0&gt;</ept>返回只明确属于配置的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>dependencyReport<ept i="0">&lt;/c0&gt;</ept>, <bpt i="1" x="1">&lt;c1&gt;</bpt>propertyReport<ept i="1">&lt;/c1&gt;</ept>, <bpt i="2" x="2">&lt;c2&gt;</bpt>taskReport<ept i="2">&lt;/c2&gt;</ept>, <bpt i="3" x="3">&lt;c3&gt;</bpt>htmlDependencyReport<ept i="3">&lt;/c3&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T061534Z" creationid="haohang" creationdate="20150628T061534Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>dependencyReport<ept i="0">&lt;/c0&gt;</ept>, <bpt i="1" x="1">&lt;c1&gt;</bpt>propertyReport<ept i="1">&lt;/c1&gt;</ept>, <bpt i="2" x="2">&lt;c2&gt;</bpt>taskReport<ept i="2">&lt;/c2&gt;</ept>, <bpt i="3" x="3">&lt;c3&gt;</bpt>htmlDependencyReport<ept i="3">&lt;/c3&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>ear<ept i="0">&lt;/c0&gt;</ept>, <bpt i="1" x="1">&lt;c1&gt;</bpt>war<ept i="1">&lt;/c1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104849Z" creationid="msdx" creationdate="20150428T104849Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>ear<ept i="0">&lt;/c0&gt;</ept>，<bpt i="1" x="1">&lt;c1&gt;</bpt>war<ept i="1">&lt;/c1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>eclipseProject<ept i="0">&lt;/c0&gt;</ept>, <bpt i="1" x="1">&lt;c1&gt;</bpt>eclipseClasspath<ept i="1">&lt;/c1&gt;</ept>, <bpt i="2" x="2">&lt;c2&gt;</bpt>eclipseJdt<ept i="2">&lt;/c2&gt;</ept>, <bpt i="3" x="3">&lt;c3&gt;</bpt>eclipseWtpComponent<ept i="3">&lt;/c3&gt;</ept>, <bpt i="4" x="4">&lt;c4&gt;</bpt>cleanEclipseWtpFacet<ept i="4">&lt;/c4&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T004339Z" creationid="haohang" creationdate="20150603T004339Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>eclipseProject<ept i="0">&lt;/c0&gt;</ept>, <bpt i="1" x="1">&lt;c1&gt;</bpt>eclipseClasspath<ept i="1">&lt;/c1&gt;</ept>, <bpt i="2" x="2">&lt;c2&gt;</bpt>eclipseJdt<ept i="2">&lt;/c2&gt;</ept>, <bpt i="3" x="3">&lt;c3&gt;</bpt>eclipseWtpComponent<ept i="3">&lt;/c3&gt;</ept>, <bpt i="4" x="4">&lt;c4&gt;</bpt>cleanEclipseWtpFacet<ept i="4">&lt;/c4&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>groovy<ept i="0">&lt;/c0&gt;</ept> configuration if non-empty; Groovy library found on <bpt i="1" x="1">&lt;c1&gt;</bpt>classpath<ept i="1">&lt;/c1&gt;</ept> otherwise</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T094735Z" creationid="msdx" creationdate="20150429T094548Z">
        <seg>如果<bpt i="0" x="0">&lt;c0&gt;</bpt>groovy<ept i="0">&lt;/c0&gt;</ept> 配置不为空，则为该配置；否则为 <bpt i="1" x="1">&lt;c1&gt;</bpt>classpath<ept i="1">&lt;/c1&gt;</ept> 中找到的 Groovy 库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>groupId<ept i="0">&lt;/c0&gt;</ept> - <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>Project.getGroup()<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T032335Z" creationid="95" creationdate="20170416T032335Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>groupId<ept i="0">&lt;/c0&gt;</ept> - <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>Project.getGroup()<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>ideaProject<ept i="0">&lt;/c0&gt;</ept>, <bpt i="1" x="1">&lt;c1&gt;</bpt>ideaModule<ept i="1">&lt;/c1&gt;</ept>, <bpt i="2" x="2">&lt;c2&gt;</bpt>ideaWorkspace<ept i="2">&lt;/c2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T072246Z" creationid="haohang" creationdate="20150625T072246Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>ideaProject<ept i="0">&lt;/c0&gt;</ept>, <bpt i="1" x="1">&lt;c1&gt;</bpt>ideaModule<ept i="1">&lt;/c1&gt;</ept>, <bpt i="2" x="2">&lt;c2&gt;</bpt>ideaWorkspace<ept i="2">&lt;/c2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>jar<ept i="0">&lt;/c0&gt;</ept>, <bpt i="1" x="1">&lt;c1&gt;</bpt>startScripts<ept i="1">&lt;/c1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150702T105053Z" creationid="haohang" creationdate="20150702T105053Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>jar<ept i="0">&lt;/c0&gt;</ept>, <bpt i="1" x="1">&lt;c1&gt;</bpt>startScripts<ept i="1">&lt;/c1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>java<ept i="0">&lt;/c0&gt;</ept>, <bpt i="1" x="1">&lt;c1&gt;</bpt>distribution<ept i="1">&lt;/c1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104801Z" creationid="msdx" creationdate="20150428T104801Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>java<ept i="0">&lt;/c0&gt;</ept>, <bpt i="1" x="1">&lt;c1&gt;</bpt>distribution<ept i="1">&lt;/c1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>java<ept i="0">&lt;/c0&gt;</ept>, <bpt i="1" x="1">&lt;c1&gt;</bpt>groovy-base<ept i="1">&lt;/c1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141126T121042Z" creationid="msdx" creationdate="20141126T121042Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>java<ept i="0">&lt;/c0&gt;</ept>, <bpt i="1" x="1">&lt;c1&gt;</bpt>groovy-base<ept i="1">&lt;/c1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>java<ept i="0">&lt;/c0&gt;</ept>, <bpt i="1" x="1">&lt;c1&gt;</bpt>scala-base<ept i="1">&lt;/c1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141126T121122Z" creationid="msdx" creationdate="20141126T121122Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>java<ept i="0">&lt;/c0&gt;</ept>, <bpt i="1" x="1">&lt;c1&gt;</bpt>scala-base<ept i="1">&lt;/c1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>java<ept i="0">&lt;/c0&gt;</ept>, <bpt i="1" x="1">&lt;c1&gt;</bpt>war<ept i="1">&lt;/c1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104758Z" creationid="msdx" creationdate="20150428T104758Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>java<ept i="0">&lt;/c0&gt;</ept>, <bpt i="1" x="1">&lt;c1&gt;</bpt>war<ept i="1">&lt;/c1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>java<ept i="0">&lt;/c0&gt;</ept>,<bpt i="1" x="1">&lt;c1&gt;</bpt>groovy<ept i="1">&lt;/c1&gt;</ept>, <bpt i="2" x="2">&lt;c2&gt;</bpt>scala<ept i="2">&lt;/c2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104807Z" creationid="msdx" creationdate="20150428T104807Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>java<ept i="0">&lt;/c0&gt;</ept>,<bpt i="1" x="1">&lt;c1&gt;</bpt>groovy<ept i="1">&lt;/c1&gt;</ept>, <bpt i="2" x="2">&lt;c2&gt;</bpt>scala<ept i="2">&lt;/c2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>module-a<ept i="0">&lt;/c0&gt;</ept> depends on <bpt i="1" x="1">&lt;c1&gt;</bpt>releasable-unit:part-one:1.0<ept i="1">&lt;/c1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T061022Z" creationid="95" creationdate="20151115T061022Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>module-a<ept i="0">&lt;/c0&gt;</ept> 依赖于 <bpt i="1" x="1">&lt;c1&gt;</bpt>releasable-unit:part-one:1.0<ept i="1">&lt;/c1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>module-b<ept i="0">&lt;/c0&gt;</ept> depends on <bpt i="1" x="1">&lt;c1&gt;</bpt>releasable-unit:part-two:1.1<ept i="1">&lt;/c1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T061101Z" creationid="95" creationdate="20151115T061101Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>module-a<ept i="0">&lt;/c0&gt;</ept> 依赖于 <bpt i="1" x="1">&lt;c1&gt;</bpt>releasable-unit:part-one:1.0<ept i="1">&lt;/c1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>module<ept i="0">&lt;/c0&gt;</ept> - <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>Project.getName()<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20170217T083054Z" creationid="haohang" creationdate="20170217T083054Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>module<ept i="0">&lt;/c0&gt;</ept> - <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>Project.getName()<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>organisation<ept i="0">&lt;/c0&gt;</ept> - <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>Project.getGroup()<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20170217T083053Z" creationid="haohang" creationdate="20170217T083053Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>organisation<ept i="0">&lt;/c0&gt;</ept> - <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>Project.getGroup()<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>output<ept i="0">&lt;/c0&gt;</ept> + <bpt i="1" x="1">&lt;c1&gt;</bpt>runtime<bpt i="2" x="2">&lt;e2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>SourceSet<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/e2&gt;</ept><ept i="1">&lt;/c1&gt;</ept> configuration.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083416Z" creationid="msdx" creationdate="20150428T083257Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>output<ept i="0">&lt;/c0&gt;</ept> + <bpt i="1" x="1">&lt;c1&gt;</bpt>runtime<bpt i="2" x="2">&lt;e2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>SourceSet<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/e2&gt;</ept><ept i="1">&lt;/c1&gt;</ept> 配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>revision<ept i="0">&lt;/c0&gt;</ept> - <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>Project.getVersion()<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20170217T083055Z" creationid="haohang" creationdate="20170217T083055Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>revision<ept i="0">&lt;/c0&gt;</ept> - <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>Project.getVersion()<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>status<ept i="0">&lt;/c0&gt;</ept> - <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>Project.getStatus()<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20170217T083056Z" creationid="haohang" creationdate="20170217T083056Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>status<ept i="0">&lt;/c0&gt;</ept> - <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>Project.getStatus()<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>version<ept i="0">&lt;/c0&gt;</ept> - <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>Project.getVersion()<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T032350Z" creationid="95" creationdate="20170416T032350Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>version<ept i="0">&lt;/c0&gt;</ept> - <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>Project.getVersion()<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>whenMerged { arg -&gt; }<ept i="0">&lt;/c0&gt;</ept> argument type</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T105235Z" creationid="haohang" creationdate="20150624T105235Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>whenMerged { arg -&gt; }<ept i="0">&lt;/c0&gt;</ept> 参数类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>withXml { arg -&gt; }<ept i="0">&lt;/c0&gt;</ept> argument type</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T105249Z" creationid="haohang" creationdate="20150624T105249Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>withXml { arg -&gt; }<ept i="0">&lt;/c0&gt;</ept> 参数类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="11" x="11">&lt;c11&gt;</bpt>webDist<ept i="11">&lt;/c11&gt;</ept> has a <bpt i="12" x="12">&lt;s12&gt;</bpt><bpt i="13" x="13">&lt;e13&gt;</bpt>configuration<ept i="13">&lt;/e13&gt;</ept><ept i="12">&lt;/s12&gt;</ept> dependency on <bpt i="14" x="14">&lt;c14&gt;</bpt>date<ept i="14">&lt;/c14&gt;</ept> and <bpt i="15" x="15">&lt;c15&gt;</bpt>hello<ept i="15">&lt;/c15&gt;</ept> because it needs to know the <bpt i="16" x="16">&lt;c16&gt;</bpt>archivePath<ept i="16">&lt;/c16&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T082617Z" creationid="haohang" creationdate="20160726T082617Z">
        <seg><bpt i="11" x="11">&lt;c11&gt;</bpt>webDist<ept i="11">&lt;/c11&gt;</ept>有一个<bpt i="12" x="12">&lt;s12&gt;</bpt><bpt i="13" x="13">&lt;e13&gt;</bpt>配置<ept i="13">&lt;/e13&gt;</ept><ept i="12">&lt;/s12&gt;</ept> 依赖于 <bpt i="14" x="14">&lt;c14&gt;</bpt>date<ept i="14">&lt;/c14&gt;</ept> 和 <bpt i="15" x="15">&lt;c15&gt;</bpt>hello<ept i="15">&lt;/c15&gt;</ept>，因为它需要知道 <bpt i="16" x="16">&lt;c16&gt;</bpt>archivePath<ept i="16">&lt;/c16&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="1" x="1">&lt;c1&gt;</bpt>allDependencies<ept i="1">&lt;/c1&gt;</ept> includes the dependencies from extended configurations.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T034532Z" creationid="haohang" creationdate="20150807T034532Z">
        <seg><bpt i="1" x="1">&lt;c1&gt;</bpt>allDependencies<ept i="1">&lt;/c1&gt;</ept>包括了扩展配置的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="1" x="1">&lt;c1&gt;</bpt>fsc<ept i="1">&lt;/c1&gt;</ept> runs in a separate daemon process and can speed up compilation significantly.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150430T155155Z" creationid="msdx" creationdate="20150430T155155Z">
        <seg><bpt i="1" x="1">&lt;c1&gt;</bpt>fsc<ept i="1">&lt;/c1&gt;</ept>运行在一个单独的进程中，并且可以显著地提高编译速度。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="2" x="2">&lt;c2&gt;</bpt>OsgiManifest<ept i="2">&lt;/c2&gt;</ept> extends <bpt i="3" x="3">&lt;a3&gt;</bpt><bpt i="4" x="4">&lt;c4&gt;</bpt>Manifest<ept i="4">&lt;/c4&gt;</ept><ept i="3">&lt;/a3&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150526T003902Z" creationid="haohang" creationdate="20150526T003902Z">
        <seg><bpt i="2" x="2">&lt;c2&gt;</bpt>OsgiManifest<ept i="2">&lt;/c2&gt;</ept> 继承自 <bpt i="3" x="3">&lt;a3&gt;</bpt><bpt i="4" x="4">&lt;c4&gt;</bpt>Manifest<ept i="4">&lt;/c4&gt;</ept><ept i="3">&lt;/a3&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="3" x="3">&lt;c3&gt;</bpt>personService<ept i="3">&lt;/c3&gt;</ept> has a lib dependency on the other two projects.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T083703Z" creationid="haohang" creationdate="20160726T083703Z">
        <seg><bpt i="3" x="3">&lt;c3&gt;</bpt>personService<ept i="3">&lt;/c3&gt;</ept> 对其他两个项目有一个库依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="4" x="4">&lt;c4&gt;</bpt>api<ept i="4">&lt;/c4&gt;</ept> has a lib dependency on <bpt i="5" x="5">&lt;c5&gt;</bpt>shared<ept i="5">&lt;/c5&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T083718Z" creationid="haohang" creationdate="20160726T083718Z">
        <seg><bpt i="4" x="4">&lt;c4&gt;</bpt>api<ept i="4">&lt;/c4&gt;</ept> 对 <bpt i="5" x="5">&lt;c5&gt;</bpt>shared<ept i="5">&lt;/c5&gt;</ept>有一个库依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="4" x="4">&lt;c4&gt;</bpt>archiveTask.baseName<ept i="4">&lt;/c4&gt;</ept> defaults to <bpt i="5" x="5">&lt;c5&gt;</bpt>project.archivesBaseName<ept i="5">&lt;/c5&gt;</ept> which in turn defaults to <bpt i="6" x="6">&lt;c6&gt;</bpt>project.name<ept i="6">&lt;/c6&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T141949Z" creationid="95" creationdate="20160106T141949Z">
        <seg><bpt i="4" x="4">&lt;c4&gt;</bpt>archiveTask.baseName<ept i="4">&lt;/c4&gt;</ept>默认为<bpt i="5" x="5">&lt;c5&gt;</bpt>project.archivesBaseName<ept i="5">&lt;/c5&gt;</ept>，后者默认为<bpt i="6" x="6">&lt;c6&gt;</bpt>project.name<ept i="6">&lt;/c6&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>$buildDir<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/binaries/<bpt i="2" x="2">&lt;e2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>$binary.name<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/e2&gt;</ept>/<bpt i="4" x="4">&lt;e4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>$component.name<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/e4&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160219T072249Z" creationid="haohang" creationdate="20160219T072249Z">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>$buildDir<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/binaries/<bpt i="2" x="2">&lt;e2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>$binary.name<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/e2&gt;</ept>/<bpt i="4" x="4">&lt;e4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>$component.name<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/e4&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>$buildDir<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/binaries/<bpt i="2" x="2">&lt;e2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>$binary.name<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/e2&gt;</ept>/<bpt i="4" x="4">&lt;e4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>$component.name<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/e4&gt;</ept>.a</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160219T072306Z" creationid="haohang" creationdate="20160219T072306Z">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>$buildDir<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/binaries/<bpt i="2" x="2">&lt;e2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>$binary.name<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/e2&gt;</ept>/<bpt i="4" x="4">&lt;e4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>$component.name<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/e4&gt;</ept>.a</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>$buildDir<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/binaries/<bpt i="2" x="2">&lt;e2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>$binary.name<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/e2&gt;</ept>/lib<bpt i="4" x="4">&lt;e4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>$component.name<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/e4&gt;</ept>.so</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160219T072259Z" creationid="haohang" creationdate="20160219T072259Z">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>$buildDir<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/binaries/<bpt i="2" x="2">&lt;e2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>$binary.name<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/e2&gt;</ept>/lib<bpt i="4" x="4">&lt;e4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>$component.name<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/e4&gt;</ept>.so</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>$buildDir<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/jacoco</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T132307Z" creationid="msdx" creationdate="20150506T132307Z">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>$buildDir<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/jacoco</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>$component.name<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>Executable</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160219T072236Z" creationid="haohang" creationdate="20160219T072236Z">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>$component.name<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>Executable</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>$component.name<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>SharedLibrary</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160219T072253Z" creationid="haohang" creationdate="20160219T072253Z">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>$component.name<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>SharedLibrary</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>$component.name<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>StaticLibrary</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160219T072300Z" creationid="haohang" creationdate="20160219T072300Z">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>$component.name<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>StaticLibrary</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>${distribution.name}<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>DistTar</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150701T031227Z" creationid="haohang" creationdate="20150701T031227Z">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>${distribution.name}<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>DistTar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>${distribution.name}<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>DistZip</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150701T031219Z" creationid="haohang" creationdate="20150701T031219Z">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>${distribution.name}<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>DistZip</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>baseName<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>-<bpt i="2" x="2">&lt;e2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>appendix<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/e2&gt;</ept>-<bpt i="4" x="4">&lt;e4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>version<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/e4&gt;</ept>-<bpt i="6" x="6">&lt;e6&gt;</bpt><bpt i="7" x="7">&lt;c7&gt;</bpt>classifier<ept i="7">&lt;/c7&gt;</ept><ept i="6">&lt;/e6&gt;</ept>.<bpt i="8" x="8">&lt;e8&gt;</bpt><bpt i="9" x="9">&lt;c9&gt;</bpt>extension<ept i="9">&lt;/c9&gt;</ept><ept i="8">&lt;/e8&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T155825Z" creationid="msdx" creationdate="20141113T155825Z">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>baseName<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>-<bpt i="2" x="2">&lt;e2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>appendix<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/e2&gt;</ept>-<bpt i="4" x="4">&lt;e4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>version<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/e4&gt;</ept>-<bpt i="6" x="6">&lt;e6&gt;</bpt><bpt i="7" x="7">&lt;c7&gt;</bpt>classifier<ept i="7">&lt;/c7&gt;</ept><ept i="6">&lt;/e6&gt;</ept>.<bpt i="8" x="8">&lt;e8&gt;</bpt><bpt i="9" x="9">&lt;c9&gt;</bpt>extension<ept i="9">&lt;/c9&gt;</ept><ept i="8">&lt;/e8&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>buildDir<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/<bpt i="2" x="2">&lt;e2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>dependencyCacheDirName<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/e2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083244Z" creationid="msdx" creationdate="20150428T083244Z">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>buildDir<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/<bpt i="2" x="2">&lt;e2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>dependencyCacheDirName<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/e2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>buildDir<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/<bpt i="2" x="2">&lt;e2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>distsDirName<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/e2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083242Z" creationid="msdx" creationdate="20150428T083242Z">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>buildDir<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/<bpt i="2" x="2">&lt;e2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>distsDirName<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/e2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>buildDir<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/<bpt i="2" x="2">&lt;e2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>docsDirName<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/e2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083243Z" creationid="msdx" creationdate="20150428T083243Z">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>buildDir<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/<bpt i="2" x="2">&lt;e2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>docsDirName<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/e2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>buildDir<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/<bpt i="2" x="2">&lt;e2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>libsDirName<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/e2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083241Z" creationid="msdx" creationdate="20150428T083241Z">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>buildDir<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/<bpt i="2" x="2">&lt;e2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>libsDirName<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/e2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>buildDir<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/<bpt i="2" x="2">&lt;e2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>pomDirName<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/e2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151228T152724Z" creationid="95" creationdate="20151228T152724Z">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>buildDir<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/<bpt i="2" x="2">&lt;e2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>pomDirName<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/e2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>buildDir<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/<bpt i="2" x="2">&lt;e2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>reportsDirName<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/e2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083236Z" creationid="msdx" creationdate="20150428T083236Z">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>buildDir<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/<bpt i="2" x="2">&lt;e2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>reportsDirName<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/e2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>buildDir<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/<bpt i="2" x="2">&lt;e2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>testResultsDirName<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/e2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083238Z" creationid="msdx" creationdate="20150428T083238Z">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>buildDir<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/<bpt i="2" x="2">&lt;e2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>testResultsDirName<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/e2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>buildDir<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/classes/<bpt i="2" x="2">&lt;e2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>name<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/e2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083251Z" creationid="msdx" creationdate="20150428T083251Z">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>buildDir<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/classes/<bpt i="2" x="2">&lt;e2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>name<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/e2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>buildDir<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/resources/<bpt i="2" x="2">&lt;e2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>name<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/e2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083252Z" creationid="msdx" creationdate="20150428T083252Z">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>buildDir<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/resources/<bpt i="2" x="2">&lt;e2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>name<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/e2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>destinationDir<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/<bpt i="2" x="2">&lt;e2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>archiveName<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/e2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T155931Z" creationid="msdx" creationdate="20141113T155931Z">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>destinationDir<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/<bpt i="2" x="2">&lt;e2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>archiveName<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/e2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>docsDir<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/javadoc</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083440Z" creationid="msdx" creationdate="20150428T083440Z">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>docsDir<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/javadoc</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>projectDir<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/<bpt i="2" x="2">&lt;e2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>webAppDirName<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/e2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T092315Z" creationid="msdx" creationdate="20150503T092315Z">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>projectDir<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/<bpt i="2" x="2">&lt;e2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>webAppDirName<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/e2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>projectDir<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/build</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T044426Z" creationid="msdx" creationdate="20141108T044426Z">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>projectDir<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/build</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>reportsDir<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/<bpt i="2" x="2">&lt;c2&gt;</bpt>testReportDirName<ept i="2">&lt;/c2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083239Z" creationid="msdx" creationdate="20150428T083239Z">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>reportsDir<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/<bpt i="2" x="2">&lt;c2&gt;</bpt>testReportDirName<ept i="2">&lt;/c2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>reportsDir<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/<bpt i="2" x="2">&lt;e2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>projectReportDirName<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/e2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T062025Z" creationid="haohang" creationdate="20150628T062025Z">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>reportsDir<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/<bpt i="2" x="2">&lt;e2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>projectReportDirName<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/e2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>sourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>.compileClasspath</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083445Z" creationid="msdx" creationdate="20150428T083445Z">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>sourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>.compileClasspath</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>sourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>.groovy</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T094544Z" creationid="msdx" creationdate="20150429T094544Z">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>sourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>.groovy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>sourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>.java</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083447Z" creationid="msdx" creationdate="20150428T083447Z">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>sourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>sourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>.output.classesDir</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083447Z" creationid="msdx" creationdate="20150428T083447Z">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>sourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>.output.classesDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>sourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>.output.resourcesDir</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083445Z" creationid="msdx" creationdate="20150428T083445Z">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>sourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>.output.resourcesDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>sourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>.resources</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083443Z" creationid="msdx" creationdate="20150428T083443Z">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>sourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>.resources</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>sourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>Classes</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083225Z" creationid="msdx" creationdate="20150428T083225Z">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>sourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>Classes</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>sourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>Compile</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083233Z" creationid="msdx" creationdate="20150428T083233Z">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>sourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>Compile</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>sourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>Runtime</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083233Z" creationid="msdx" creationdate="20150428T083233Z">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>sourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>Runtime</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt>init scripts<ept i="0">&lt;/e0&gt;</ept>) are similar to other scripts in Gradle.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161214T142434Z" creationid="95" creationdate="20161214T142434Z">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt>init scripts<ept i="0">&lt;/e0&gt;</ept>和Gradle的其他脚本类似。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>// Add some source directories use String paths<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T123632Z" creationid="msdx" creationdate="20141113T123632Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>// Add some source directories use String paths<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>// Can enable dynamic resolve mode when you define the repository<ept i="0">&lt;/s0&gt;</ept>
repositories {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T091450Z" creationid="95" creationdate="20151115T091450Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>// Can enable dynamic resolve mode when you define the repository<ept i="0">&lt;/s0&gt;</ept>
repositories {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>// Copy everything under src/main/webapp<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T130948Z" creationid="msdx" creationdate="20141113T130948Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>// Copy everything under src/main/webapp<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>// Create a ZIP file tree using path<ept i="0">&lt;/s0&gt;</ept>
FileTree zip = zipTree(<bpt i="1" x="1">&lt;s1&gt;</bpt>'someFile.zip'<ept i="1">&lt;/s1&gt;</ept>)

<bpt i="2" x="2">&lt;s2&gt;</bpt>// Create a TAR file tree using path<ept i="2">&lt;/s2&gt;</ept>
FileTree tar = tarTree(<bpt i="3" x="3">&lt;s3&gt;</bpt>'someFile.tar'<ept i="3">&lt;/s3&gt;</ept>)

<bpt i="4" x="4">&lt;s4&gt;</bpt>//tar tree attempts to guess the compression based on the file extension<ept i="4">&lt;/s4&gt;</ept>
<bpt i="5" x="5">&lt;s5&gt;</bpt>//however if you must specify the compression explicitly you can:<ept i="5">&lt;/s5&gt;</ept>
FileTree someTar = tarTree(resources.gzip(<bpt i="6" x="6">&lt;s6&gt;</bpt>'someTar.ext'<ept i="6">&lt;/s6&gt;</ept>))</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T122848Z" creationid="msdx" creationdate="20141113T122848Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>// Create a ZIP file tree using path<ept i="0">&lt;/s0&gt;</ept>
FileTree zip = zipTree(<bpt i="1" x="1">&lt;s1&gt;</bpt>'someFile.zip'<ept i="1">&lt;/s1&gt;</ept>)

<bpt i="2" x="2">&lt;s2&gt;</bpt>// Create a TAR file tree using path<ept i="2">&lt;/s2&gt;</ept>
FileTree tar = tarTree(<bpt i="3" x="3">&lt;s3&gt;</bpt>'someFile.tar'<ept i="3">&lt;/s3&gt;</ept>)

<bpt i="4" x="4">&lt;s4&gt;</bpt>//tar tree attempts to guess the compression based on the file extension<ept i="4">&lt;/s4&gt;</ept>
<bpt i="5" x="5">&lt;s5&gt;</bpt>//however if you must specify the compression explicitly you can:<ept i="5">&lt;/s5&gt;</ept>
FileTree someTar = tarTree(resources.gzip(<bpt i="6" x="6">&lt;s6&gt;</bpt>'someTar.ext'<ept i="6">&lt;/s6&gt;</ept>))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>// Create a file collection using a closure<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T160737Z" creationid="msdx" creationdate="20141112T160737Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>// Create a file collection using a closure<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>// Create a file tree with a base directory<ept i="0">&lt;/s0&gt;</ept>
FileTree tree = fileTree(dir: <bpt i="1" x="1">&lt;s1&gt;</bpt>'src/main'<ept i="1">&lt;/s1&gt;</ept>)

<bpt i="2" x="2">&lt;s2&gt;</bpt>// Add include and exclude patterns to the tree<ept i="2">&lt;/s2&gt;</ept>
tree.include <bpt i="3" x="3">&lt;s3&gt;</bpt>'**/*.java'<ept i="3">&lt;/s3&gt;</ept>
tree.exclude <bpt i="4" x="4">&lt;s4&gt;</bpt>'**/Abstract*'<ept i="4">&lt;/s4&gt;</ept>

<bpt i="5" x="5">&lt;s5&gt;</bpt>// Create a tree using path<ept i="5">&lt;/s5&gt;</ept>
tree = fileTree(<bpt i="6" x="6">&lt;s6&gt;</bpt>'src'<ept i="6">&lt;/s6&gt;</ept>).include(<bpt i="7" x="7">&lt;s7&gt;</bpt>'**/*.java'<ept i="7">&lt;/s7&gt;</ept>)

<bpt i="8" x="8">&lt;s8&gt;</bpt>// Create a tree using closure<ept i="8">&lt;/s8&gt;</ept>
tree = fileTree(<bpt i="9" x="9">&lt;s9&gt;</bpt>'src'<ept i="9">&lt;/s9&gt;</ept>) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T120221Z" creationid="msdx" creationdate="20141113T120221Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>// Create a file tree with a base directory<ept i="0">&lt;/s0&gt;</ept>
FileTree tree = fileTree(dir: <bpt i="1" x="1">&lt;s1&gt;</bpt>'src/main'<ept i="1">&lt;/s1&gt;</ept>)

<bpt i="2" x="2">&lt;s2&gt;</bpt>// Add include and exclude patterns to the tree<ept i="2">&lt;/s2&gt;</ept>
tree.include <bpt i="3" x="3">&lt;s3&gt;</bpt>'**/*.java'<ept i="3">&lt;/s3&gt;</ept>
tree.exclude <bpt i="4" x="4">&lt;s4&gt;</bpt>'**/Abstract*'<ept i="4">&lt;/s4&gt;</ept>

<bpt i="5" x="5">&lt;s5&gt;</bpt>// Create a tree using path<ept i="5">&lt;/s5&gt;</ept>
tree = fileTree(<bpt i="6" x="6">&lt;s6&gt;</bpt>'src'<ept i="6">&lt;/s6&gt;</ept>).include(<bpt i="7" x="7">&lt;s7&gt;</bpt>'**/*.java'<ept i="7">&lt;/s7&gt;</ept>)

<bpt i="8" x="8">&lt;s8&gt;</bpt>// Create a tree using closure<ept i="8">&lt;/s8&gt;</ept>
tree = fileTree(<bpt i="9" x="9">&lt;s9&gt;</bpt>'src'<ept i="9">&lt;/s9&gt;</ept>) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>// Define a preprocessor macro for every binary<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160324T151754Z" creationid="95" creationdate="20160324T151754Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>// Define a preprocessor macro for every binary<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>// Define a preprocessor macro that only applies to shared libraries<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160324T153107Z" creationid="95" creationdate="20160324T153107Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>// Define a preprocessor macro that only applies to shared libraries<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>// Each executable binary produced uses the 'hello' static library binary<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160325T033131Z" creationid="haohang" creationdate="20160325T033131Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>// Each executable binary produced uses the 'hello' static library binary<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>// For any shared library binaries built with Visual C++, define the DLL_EXPORT macro<ept i="0">&lt;/s0&gt;</ept>
binaries.withType(SharedLibraryBinary) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160324T152305Z" creationid="95" creationdate="20160324T152305Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>// For any shared library binaries built with Visual C++, define the DLL_EXPORT macro<ept i="0">&lt;/s0&gt;</ept>
binaries.withType(SharedLibraryBinary) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>// Inject a property and method<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T051003Z" creationid="95" creationdate="20161211T051003Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>// Inject a property and method<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>// Iterable gets an each() method<ept i="0">&lt;/s0&gt;</ept>
configurations.runtime.each { File f -&gt; println f }</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T061357Z" creationid="msdx" creationdate="20141108T061357Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>// Iterable gets an each() method<ept i="0">&lt;/s0&gt;</ept>
configurations.runtime.each { File f -&gt; println f }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>// Iterate over the contents of a tree<ept i="0">&lt;/s0&gt;</ept>
tree.each {File file -&gt;</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T120357Z" creationid="msdx" creationdate="20141113T120357Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>// Iterate over the contents of a tree<ept i="0">&lt;/s0&gt;</ept>
tree.each {File file -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>// Iterate over the files in the collection<ept i="0">&lt;/s0&gt;</ept>
collection.each {File file -&gt;</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T155846Z" creationid="msdx" creationdate="20141112T155846Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>// Iterate over the files in the collection<ept i="0">&lt;/s0&gt;</ept>
collection.each {File file -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>// Look for POMs and artifacts, such as JARs, here<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150909T053115Z" creationid="haohang" creationdate="20150909T053115Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>// Look for POMs and artifacts, such as JARs, here<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>// Specify the installDir if Visual Studio cannot be located by default<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T091222Z" creationid="haohang" creationdate="20160408T091222Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>// Specify the installDir if Visual Studio cannot be located by default<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>// Use a File object to specify the source directory<ept i="0">&lt;/s0&gt;</ept>
compile {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T123333Z" creationid="msdx" creationdate="20141113T123333Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>// Use a File object to specify the source directory<ept i="0">&lt;/s0&gt;</ept>
compile {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>// Use inherited property<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T044946Z" creationid="95" creationdate="20161211T044946Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>// Use inherited property<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><it pos="begin" x="0">&lt;s0&gt;</it>// Use injected property and method.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T051047Z" creationid="95" creationdate="20161211T051047Z">
        <seg><it pos="begin" x="0">&lt;s0&gt;</it>// Use injected property and method.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>// Use the default greeting<ept i="0">&lt;/s0&gt;</ept>
task hello(type: GreetingTask)

<bpt i="1" x="1">&lt;s1&gt;</bpt>// Customize the greeting<ept i="1">&lt;/s1&gt;</ept>
task greeting(type: GreetingTask) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T151531Z" creationid="95" creationdate="20160814T151531Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>// Use the default greeting<ept i="0">&lt;/s0&gt;</ept>
task hello(type: GreetingTask)

<bpt i="1" x="1">&lt;s1&gt;</bpt>// Customize the greeting<ept i="1">&lt;/s1&gt;</ept>
task greeting(type: GreetingTask) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>// Using a relative path<ept i="0">&lt;/s0&gt;</ept>
File configFile = file(<bpt i="1" x="1">&lt;s1&gt;</bpt>'src/config.xml'<ept i="1">&lt;/s1&gt;</ept>)

<bpt i="2" x="2">&lt;s2&gt;</bpt>// Using an absolute path<ept i="2">&lt;/s2&gt;</ept>
configFile = file(configFile.absolutePath)

<bpt i="3" x="3">&lt;s3&gt;</bpt>// Using a File object with a relative path<ept i="3">&lt;/s3&gt;</ept>
configFile = file(<bpt i="4" x="4">&lt;s4&gt;</bpt>new<ept i="4">&lt;/s4&gt;</ept> File(<bpt i="5" x="5">&lt;s5&gt;</bpt>'src/config.xml'<ept i="5">&lt;/s5&gt;</ept>))</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T043524Z" creationid="msdx" creationdate="20141112T043524Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>// Using a relative path<ept i="0">&lt;/s0&gt;</ept>
File configFile = file(<bpt i="1" x="1">&lt;s1&gt;</bpt>'src/config.xml'<ept i="1">&lt;/s1&gt;</ept>)

<bpt i="2" x="2">&lt;s2&gt;</bpt>// Using an absolute path<ept i="2">&lt;/s2&gt;</ept>
configFile = file(configFile.absolutePath)

<bpt i="3" x="3">&lt;s3&gt;</bpt>// Using a File object with a relative path<ept i="3">&lt;/s3&gt;</ept>
configFile = file(<bpt i="4" x="4">&lt;s4&gt;</bpt>new<ept i="4">&lt;/s4&gt;</ept> File(<bpt i="5" x="5">&lt;s5&gt;</bpt>'src/config.xml'<ept i="5">&lt;/s5&gt;</ept>))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>// Various ways to access the main source set<ept i="0">&lt;/s0&gt;</ept>
println sourceSets.main.output.classesDir
println sourceSets[<bpt i="1" x="1">&lt;s1&gt;</bpt>'main'<ept i="1">&lt;/s1&gt;</ept>].output.classesDir
sourceSets {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083248Z" creationid="msdx" creationdate="20150428T083248Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>// Various ways to access the main source set<ept i="0">&lt;/s0&gt;</ept>
println sourceSets.main.output.classesDir
println sourceSets[<bpt i="1" x="1">&lt;s1&gt;</bpt>'main'<ept i="1">&lt;/s1&gt;</ept>].output.classesDir
sourceSets {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>// optionally specify host and port of the daemon:<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150430T155214Z" creationid="msdx" creationdate="20150430T155214Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>// optionally specify host and port of the daemon:<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>//include specific method in any of the tests<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083452Z" creationid="msdx" creationdate="20150428T083452Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>//include specific method in any of the tests<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>&lt;?xml version="1.0" encoding="UTF-8"?&gt;<ept i="0">&lt;/s0&gt;</ept>
<bpt i="1" x="1">&lt;s1&gt;</bpt>&lt;ivy-module<ept i="1">&lt;/s1&gt;</ept> <bpt i="2" x="2">&lt;s2&gt;</bpt>version<ept i="2">&lt;/s2&gt;</ept>=<bpt i="3" x="3">&lt;s3&gt;</bpt>"2.0"<ept i="3">&lt;/s3&gt;</ept><bpt i="4" x="4">&lt;s4&gt;</bpt>&gt;<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T154221Z" creationid="95" creationdate="20170330T154221Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>&lt;?xml version="1.0" encoding="UTF-8"?&gt;<ept i="0">&lt;/s0&gt;</ept>
<bpt i="1" x="1">&lt;s1&gt;</bpt>&lt;ivy-module<ept i="1">&lt;/s1&gt;</ept> <bpt i="2" x="2">&lt;s2&gt;</bpt>version<ept i="2">&lt;/s2&gt;</ept>=<bpt i="3" x="3">&lt;s3&gt;</bpt>"2.0"<ept i="3">&lt;/s3&gt;</ept><bpt i="4" x="4">&lt;s4&gt;</bpt>&gt;<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>A fully customizable approach to Dependency Resolution<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>: Gradle provides you with the ability to customize resolution rules making dependency substitution easy.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150715T034218Z" creationid="haohang" creationdate="20150715T034218Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>一个完全可自定义的依赖解析的方法<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>：Gradle 为你提供了自定义解析规则的能力，让你可以轻松替换依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>Fail<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>: A version conflict results in a build failure.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150721T061654Z" creationid="haohang" creationdate="20150721T061654Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>Fail<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>：一个版本冲突将导致构建失败。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>Full Compatibility with Maven and Ivy<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>: If you have defined dependencies in a Maven POM or an Ivy file, Gradle provide seamless integration with a range of popular build tools.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150716T021629Z" creationid="haohang" creationdate="20150716T021629Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>完全兼容 Maven 和 Ivy <ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>：如果你已经在 Maven POM 文件或 Ivy 文件中定义了依赖，Gradle 提供了一系列受欢迎的构建工具可以进行无缝集成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>If you think version conflicts don't happen to you, think again.<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> It is very common for different first-level dependencies to rely on a range of different overlapping versions for other dependencies, and the JVM doesn't yet offer an easy way to have different versions of the same jar in the classpath (see <bpt i="2" x="2">&lt;a2&gt;</bpt>Section 50.1.2, “Dependency management and Java”<ept i="2">&lt;/a2&gt;</ept>).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150721T061329Z" creationid="haohang" creationdate="20150721T060735Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>如果你觉得你不会发生版本冲突，再想想。<ept i="1">&lt;/e1&gt;</ept> <ept i="0">&lt;/s0&gt;</ept>不同的第一级依赖，依赖于一系列不同的重叠版本的其他依赖，这种情况是很常见的，而 JVM 还不能提供简单的方法，使得能在类路径中让相同的 jar 包可以有不同的版本（请参阅<bpt i="2" x="2">&lt;a2&gt;</bpt>第 50.1.2 节，“依赖管理和 Java”<ept i="2">&lt;/a2&gt;</ept>）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>Integration with existing dependency management infrastructure<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>: Gradle is compatible with both Maven and Ivy repositories.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150716T021716Z" creationid="haohang" creationdate="20150716T021716Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>与现有依赖管理基础结构的集成<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>：Gradle 兼容 Maven 和 Ivy 仓库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>NOTE:<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>In one project, we found a mystery, LDAP related jar in the classpath.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150721T053441Z" creationid="haohang" creationdate="20150721T012725Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>注：<ept i="1">&lt;/e1&gt;</ept> <ept i="0">&lt;/s0&gt;</ept>在一个项目中，我们发现在类路径中有一个神秘、LDAP 相关的 jar 包。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>Newest<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>: The newest version of the dependency is used.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150721T061449Z" creationid="haohang" creationdate="20150721T061430Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>Newest<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>：使用最新版本的依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>Note:<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> The code for this example can be found at <bpt i="2" x="2">&lt;c2&gt;</bpt>samples/customPlugin/plugin<ept i="2">&lt;/c2&gt;</ept> which is in both the binary and source distributions of Gradle.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160815T145048Z" creationid="95" creationdate="20160815T145048Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>注意：<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> 此例子的代码可以在Gradle的二进制文件或源码中的 <bpt i="2" x="2">&lt;c2&gt;</bpt>samples/customPlugin/plugin<ept i="2">&lt;/c2&gt;</ept> 里看到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>Note:<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> The code for this example can be found at <bpt i="2" x="2">&lt;c2&gt;</bpt>samples/groovy/quickstart<ept i="2">&lt;/c2&gt;</ept> which is in both the binary and source distributions of Gradle.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T063505Z" creationid="msdx" creationdate="20141030T061718Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>注意：<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> 此例子的代码可以在Gradle的二进制文件或源码中的 <bpt i="2" x="2">&lt;c2&gt;</bpt>samples/groovy/quickstart<ept i="2">&lt;/c2&gt;</ept> 里看到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>Note:<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> The code for this example can be found at <bpt i="2" x="2">&lt;c2&gt;</bpt>samples/multiProjectBuildSrc<ept i="2">&lt;/c2&gt;</ept> which is in both the binary and source distributions of Gradle.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161212T152726Z" creationid="95" creationdate="20161212T152726Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>注意：<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> 此例子的代码可以在Gradle的二进制文件或源码中的 <bpt i="2" x="2">&lt;c2&gt;</bpt>samples/multiProjectBuildSrc<ept i="2">&lt;/c2&gt;</ept> 里看到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>Note:<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> The code for this example can be found at <bpt i="2" x="2">&lt;c2&gt;</bpt>samples/native-binaries/cunit<ept i="2">&lt;/c2&gt;</ept> which is in both the binary and source distributions of Gradle.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160504T151528Z" creationid="95" creationdate="20160504T151528Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>注意︰<ept i="1">&lt;/e1&gt;</ept> <ept i="0">&lt;/s0&gt;</ept>此示例的代码可以在Gradle 的 binary 或 source 分发包的<bpt i="2" x="2">&lt;c2&gt;</bpt>samples/native-binaries/cunit<ept i="2">&lt;/c2&gt;</ept>中找到。。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>Note:<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> The code for this example can be found at <bpt i="2" x="2">&lt;c2&gt;</bpt>samples/testing/jacoco/application<ept i="2">&lt;/c2&gt;</ept> which is in both the binary and source distributions of Gradle.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T135747Z" creationid="msdx" creationdate="20150506T135606Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>注:<ept i="1">&lt;/e1&gt;</ept> <ept i="0">&lt;/s0&gt;</ept>此示例中的代码可以在Gradle 的二进制分发包及源代码分发包中的<bpt i="2" x="2">&lt;c2&gt;</bpt>samples/testing/jacoco/application<ept i="2">&lt;/c2&gt;</ept>中找到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>Note:<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> The code for this example can be found at <bpt i="2" x="2">&lt;c2&gt;</bpt>samples/userguide/multiproject/addKrill/water<ept i="2">&lt;/c2&gt;</ept> which is in both the binary and source distributions of Gradle.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160526T155344Z" creationid="95" creationdate="20160526T155344Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>注︰<ept i="1">&lt;/e1&gt;</ept> <ept i="0">&lt;/s0&gt;</ept>此示例的代码可以在Gradle 的二进制及源码分发包的<bpt i="2" x="2">&lt;c2&gt;</bpt>samples/userguide/multiproject/addKrill/water<ept i="2">&lt;/c2&gt;</ept>中找到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>Note:<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> The code for this example can be found at <bpt i="2" x="2">&lt;c2&gt;</bpt>samples/userguide/multiproject/addTropical/water<ept i="2">&lt;/c2&gt;</ept> which is in both the binary and source distributions of Gradle.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160527T163818Z" creationid="95" creationdate="20160527T163818Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>注︰<ept i="1">&lt;/e1&gt;</ept> <ept i="0">&lt;/s0&gt;</ept>此示例的代码可以在Gradle 的二进制及源码分发包的<bpt i="2" x="2">&lt;c2&gt;</bpt>samples/userguide/multiproject/addTropical/water<ept i="2">&lt;/c2&gt;</ept>中找到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>Note:<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> The code for this example can be found at <bpt i="2" x="2">&lt;c2&gt;</bpt>samples/userguide/multiproject/dependencies/firstMessages/messages<ept i="2">&lt;/c2&gt;</ept> which is in both the binary and source distributions of Gradle.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T062355Z" creationid="haohang" creationdate="20160718T062355Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>注︰<ept i="1">&lt;/e1&gt;</ept> <ept i="0">&lt;/s0&gt;</ept>此示例的代码可以在 Gradle 二进制和源码分发包的<bpt i="2" x="2">&lt;c2&gt;</bpt>samples/userguide/multiproject/dependencies/firstMessages/messages<ept i="2">&lt;/c2&gt;</ept>中找到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>Note:<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> The code for this example can be found at <bpt i="2" x="2">&lt;c2&gt;</bpt>samples/userguide/multiproject/dependencies/java<ept i="2">&lt;/c2&gt;</ept> which is in both the binary and source distributions of Gradle.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T083547Z" creationid="haohang" creationdate="20160726T083547Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>注︰<ept i="1">&lt;/e1&gt;</ept> <ept i="0">&lt;/s0&gt;</ept>此示例的代码可以在 Gradle 二进制和源码分发包的<bpt i="2" x="2">&lt;c2&gt;</bpt>samples/userguide/multiproject/dependencies/java/messages<ept i="2">&lt;/c2&gt;</ept>中找到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>Note:<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> The code for this example can be found at <bpt i="2" x="2">&lt;c2&gt;</bpt>samples/userguide/multiproject/dependencies/messagesWithDependencies/messages<ept i="2">&lt;/c2&gt;</ept> which is in both the binary and source distributions of Gradle.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T071034Z" creationid="haohang" creationdate="20160718T071034Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>注︰<ept i="1">&lt;/e1&gt;</ept> <ept i="0">&lt;/s0&gt;</ept>此示例的代码可以在 Gradle 二进制和源码分发包的<bpt i="2" x="2">&lt;c2&gt;</bpt>samples/userguide/multiproject/dependencies/messagesWithDependencies/messages<ept i="2">&lt;/c2&gt;</ept>中找到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>Note:<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> The code for this example can be found at <bpt i="2" x="2">&lt;c2&gt;</bpt>samples/userguide/multiproject/dependencies/webDist<ept i="2">&lt;/c2&gt;</ept> which is in both the binary and source distributions of Gradle.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160722T091234Z" creationid="haohang" creationdate="20160722T091214Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>注︰<ept i="1">&lt;/e1&gt;</ept> <ept i="0">&lt;/s0&gt;</ept>此示例的代码可以在 Gradle 二进制和源码分发包的<bpt i="2" x="2">&lt;c2&gt;</bpt>samples/userguide/multiproject/dependencies/webDist/messages<ept i="2">&lt;/c2&gt;</ept>中找到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>Note:<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> The code for this example can be found at <bpt i="2" x="2">&lt;c2&gt;</bpt>samples/userguide/multiproject/firstExample/water<ept i="2">&lt;/c2&gt;</ept> which is in both the binary and source distributions of Gradle.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160526T155348Z" creationid="95" creationdate="20160522T125534Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>注︰<ept i="1">&lt;/e1&gt;</ept> <ept i="0">&lt;/s0&gt;</ept>此示例的代码可以在Gradle 的二进制及源码分发包的<bpt i="2" x="2">&lt;c2&gt;</bpt>samples/userguide/multiproject/firstExample/water<ept i="2">&lt;/c2&gt;</ept>中找到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>Note:<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> The code for this example can be found at <bpt i="2" x="2">&lt;c2&gt;</bpt>samples/userguide/multiproject/spreadSpecifics/water<ept i="2">&lt;/c2&gt;</ept> which is in both the binary and source distributions of Gradle.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160527T163301Z" creationid="95" creationdate="20160527T163301Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>注︰<ept i="1">&lt;/e1&gt;</ept> <ept i="0">&lt;/s0&gt;</ept>此示例的代码可以在Gradle 的二进制及源码分发包的<bpt i="2" x="2">&lt;c2&gt;</bpt>samples/userguide/multiproject/spreadSpecifics/water<ept i="2">&lt;/c2&gt;</ept>中找到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>Note:<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> The code for this example can be found at <bpt i="2" x="2">&lt;c2&gt;</bpt>samples/userguide/multiproject/tropicalWithProperties/water<ept i="2">&lt;/c2&gt;</ept> which is in both the binary and source distributions of Gradle.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160530T144406Z" creationid="95" creationdate="20160530T144406Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>注︰<ept i="1">&lt;/e1&gt;</ept> <ept i="0">&lt;/s0&gt;</ept>此示例的代码可以在Gradle 的二进制及源码分发包的<bpt i="2" x="2">&lt;c2&gt;</bpt>samples/userguide/multiproject/tropicalWithProperties/water<ept i="2">&lt;/c2&gt;</ept>中找到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>Note:<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> The code for this example can be found at <bpt i="2" x="2">&lt;c2&gt;</bpt>samples/userguide/tasks/incrementalTask<ept i="2">&lt;/c2&gt;</ept> which is in both the binary and source distributions of Gradle.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160816T145222Z" creationid="95" creationdate="20160816T145048Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>注︰<ept i="1">&lt;/e1&gt;</ept> <ept i="0">&lt;/s0&gt;</ept>此示例的代码可以在Gradle 的二进制及源码分发包的<bpt i="2" x="2">&lt;c2&gt;</bpt>samples/userguide/tasks/incrementalTask<ept i="2">&lt;/c2&gt;</ept>中找到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>Note:<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> The code for this example can be found at <bpt i="2" x="2">&lt;c2&gt;</bpt>samples/webApplication/quickstart<ept i="2">&lt;/c2&gt;</ept> which is in both the binary and source distributions of Gradle.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T085559Z" creationid="msdx" creationdate="20141030T085447Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>注：<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>此例子代码可以在Gradle的二进制文件或源码当中的<bpt i="2" x="2">&lt;c2&gt;</bpt>samples/webApplication/quickstart<ept i="2">&lt;/c2&gt;</ept>里找到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>Support for custom dependency definitions.<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>: Gradle's Module Dependencies give you the ability to describe the dependency hierarchy in the build script.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150715T030916Z" creationid="haohang" creationdate="20150714T083007Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>支持依赖定义的自定义<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>：Gradle 的模块依赖给你在构建脚本中描述依赖项层次结构的能力。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>Support for non-managed dependencies<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>: If your dependencies are simply files in version control or a shared drive, Gradle provides powerful functionality to support this.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150714T082913Z" creationid="haohang" creationdate="20150714T082913Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>对非管理依赖的支持<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>：如果你的依赖只是版本控制下或共享的驱动器中的文件，Gradle 也提供了强大的功能以支持这种情况。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>The Gradle daemon<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> (sometimes referred as <bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;e3&gt;</bpt>the build daemon<ept i="3">&lt;/e3&gt;</ept><ept i="2">&lt;/s2&gt;</ept>) aims to improve the startup and execution time of Gradle.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141117T132006Z" creationid="msdx" creationdate="20141117T130746Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt> <bpt i="1" x="1">&lt;e1&gt;</bpt>Gradle 守护进程<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>（有时也称为<bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;e3&gt;</bpt>构建守护进程<ept i="3">&lt;/e3&gt;</ept><ept i="2">&lt;/s2&gt;</ept>） 的目的是改善 Gradle 的启动和执行时间。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>Transitive dependency management<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>: Gradle gives you full control of your project's dependency tree.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150714T080810Z" creationid="haohang" creationdate="20150714T080810Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>依赖管理传递<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>： Gradle 赋予你对你的项目依赖项树的完全控制。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>&lt;echo&gt;<ept i="0">&lt;/s0&gt;</ept>buildDir = ${buildDir}<bpt i="1" x="1">&lt;s1&gt;</bpt>&lt;/echo&gt;<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T062047Z" creationid="msdx" creationdate="20141116T062047Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>&lt;echo&gt;<ept i="0">&lt;/s0&gt;</ept>buildDir = ${buildDir}<bpt i="1" x="1">&lt;s1&gt;</bpt>&lt;/echo&gt;<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>&lt;path<ept i="0">&lt;/s0&gt;</ept> <bpt i="1" x="1">&lt;s1&gt;</bpt>id<ept i="1">&lt;/s1&gt;</ept>=<bpt i="2" x="2">&lt;s2&gt;</bpt>"antPath"<ept i="2">&lt;/s2&gt;</ept> <bpt i="3" x="3">&lt;s3&gt;</bpt>location<ept i="3">&lt;/s3&gt;</ept>=<bpt i="4" x="4">&lt;s4&gt;</bpt>"libs"<ept i="4">&lt;/s4&gt;</ept><bpt i="5" x="5">&lt;s5&gt;</bpt>/&gt;<ept i="5">&lt;/s5&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T062719Z" creationid="msdx" creationdate="20141116T062719Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>&lt;path<ept i="0">&lt;/s0&gt;</ept> <bpt i="1" x="1">&lt;s1&gt;</bpt>id<ept i="1">&lt;/s1&gt;</ept>=<bpt i="2" x="2">&lt;s2&gt;</bpt>"antPath"<ept i="2">&lt;/s2&gt;</ept> <bpt i="3" x="3">&lt;s3&gt;</bpt>location<ept i="3">&lt;/s3&gt;</ept>=<bpt i="4" x="4">&lt;s4&gt;</bpt>"libs"<ept i="4">&lt;/s4&gt;</ept><bpt i="5" x="5">&lt;s5&gt;</bpt>/&gt;<ept i="5">&lt;/s5&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>&lt;path<ept i="0">&lt;/s0&gt;</ept> <bpt i="1" x="1">&lt;s1&gt;</bpt>refid<ept i="1">&lt;/s1&gt;</ept>=<bpt i="2" x="2">&lt;s2&gt;</bpt>"classpath"<ept i="2">&lt;/s2&gt;</ept><bpt i="3" x="3">&lt;s3&gt;</bpt>/&gt;<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T062651Z" creationid="msdx" creationdate="20141116T062651Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>&lt;path<ept i="0">&lt;/s0&gt;</ept> <bpt i="1" x="1">&lt;s1&gt;</bpt>refid<ept i="1">&lt;/s1&gt;</ept>=<bpt i="2" x="2">&lt;s2&gt;</bpt>"classpath"<ept i="2">&lt;/s2&gt;</ept><bpt i="3" x="3">&lt;s3&gt;</bpt>/&gt;<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>&lt;project&gt;<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T060915Z" creationid="msdx" creationdate="20141116T060915Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>&lt;project&gt;<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>&lt;property<ept i="0">&lt;/s0&gt;</ept> <bpt i="1" x="1">&lt;s1&gt;</bpt>name<ept i="1">&lt;/s1&gt;</ept>=<bpt i="2" x="2">&lt;s2&gt;</bpt>"antProp"<ept i="2">&lt;/s2&gt;</ept> <bpt i="3" x="3">&lt;s3&gt;</bpt>value<ept i="3">&lt;/s3&gt;</ept>=<bpt i="4" x="4">&lt;s4&gt;</bpt>"a property defined in an Ant build"<ept i="4">&lt;/s4&gt;</ept><bpt i="5" x="5">&lt;s5&gt;</bpt>/&gt;<ept i="5">&lt;/s5&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T062232Z" creationid="msdx" creationdate="20141116T062232Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>&lt;property<ept i="0">&lt;/s0&gt;</ept> <bpt i="1" x="1">&lt;s1&gt;</bpt>name<ept i="1">&lt;/s1&gt;</ept>=<bpt i="2" x="2">&lt;s2&gt;</bpt>"antProp"<ept i="2">&lt;/s2&gt;</ept> <bpt i="3" x="3">&lt;s3&gt;</bpt>value<ept i="3">&lt;/s3&gt;</ept>=<bpt i="4" x="4">&lt;s4&gt;</bpt>"a property defined in an Ant build"<ept i="4">&lt;/s4&gt;</ept><bpt i="5" x="5">&lt;s5&gt;</bpt>/&gt;<ept i="5">&lt;/s5&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>10<ept i="1">&lt;/a1&gt;</ept>] <ept i="0">&lt;/s0&gt;</ept>The TestNG documentation contains more details about test groups: <bpt i="2" x="2">&lt;a2&gt;</bpt>http://testng.org/doc/documentation-main.html#test-groups<ept i="2">&lt;/a2&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T151644Z" creationid="msdx" creationdate="20150428T151644Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>10<ept i="1">&lt;/a1&gt;</ept>] <ept i="0">&lt;/s0&gt;</ept>TestNG 文档包含了有关测试组的更多详细信息： <bpt i="2" x="2">&lt;a2&gt;</bpt>http://testng.org/doc/documentation-main.html#test-groups<ept i="2">&lt;/a2&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>10<ept i="1">&lt;/a1&gt;</ept>]<ept i="0">&lt;/s0&gt;</ept> The test groups that should be included or excluded from the test execution can be configured in the test task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083121Z" creationid="msdx" creationdate="20150428T083121Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>10<ept i="1">&lt;/a1&gt;</ept>]<ept i="0">&lt;/s0&gt;</ept>应从测试执行中include或exclude的测试组，可以在test任务中配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>11<ept i="1">&lt;/a1&gt;</ept>] <ept i="0">&lt;/s0&gt;</ept>We are using the same conventions as introduced by Russel Winder's Gant tool (<bpt i="2" x="2">&lt;a2&gt;</bpt>http://gant.codehaus.org<ept i="2">&lt;/a2&gt;</ept>).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T094850Z" creationid="msdx" creationdate="20150429T094850Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>11<ept i="1">&lt;/a1&gt;</ept>] <ept i="0">&lt;/s0&gt;</ept>我们使用和 Russel Winder 的 Gant 工具同样的约定（<bpt i="2" x="2">&lt;a2&gt;</bpt>http://gant.codehaus.org<ept i="2">&lt;/a2&gt;</ept>）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>12<ept i="1">&lt;/a1&gt;</ept>] <ept i="0">&lt;/s0&gt;</ept>See <bpt i="2" x="2">&lt;a2&gt;</bpt>Section 25.5, “Automatic configuration of scalaClasspath”<ept i="2">&lt;/a2&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T082312Z" creationid="msdx" creationdate="20150503T082312Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>12<ept i="1">&lt;/a1&gt;</ept>]<ept i="0">&lt;/s0&gt;</ept>参阅<bpt i="2" x="2">&lt;a2&gt;</bpt>第 25.5 节，“scalaClasspath 的自动配置”<ept i="2">&lt;/a2&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>13<ept i="1">&lt;/a1&gt;</ept>] <ept i="0">&lt;/s0&gt;</ept>The <bpt i="2" x="2">&lt;c2&gt;</bpt>runtime<ept i="2">&lt;/c2&gt;</ept> configuration extends the <bpt i="3" x="3">&lt;c3&gt;</bpt>compile<ept i="3">&lt;/c3&gt;</ept> configuration.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T094036Z" creationid="msdx" creationdate="20150503T094036Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>13<ept i="1">&lt;/a1&gt;</ept>]<ept i="0">&lt;/s0&gt;</ept><bpt i="2" x="2">&lt;c2&gt;</bpt>runtime<ept i="2">&lt;/c2&gt;</ept>配置继承自<bpt i="3" x="3">&lt;c3&gt;</bpt>compile<ept i="3">&lt;/c3&gt;</ept>配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>14<ept i="1">&lt;/a1&gt;</ept>] <ept i="0">&lt;/s0&gt;</ept>Gradle supports partial multiproject builds (see <bpt i="2" x="2">&lt;a2&gt;</bpt>Chapter 56, <bpt i="3" x="3">&lt;i3&gt;</bpt>Multi-project Builds<ept i="3">&lt;/i3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151201T070428Z" creationid="haohang" creationdate="20151201T070428Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>14<ept i="1">&lt;/a1&gt;</ept>] <ept i="0">&lt;/s0&gt;</ept>Gradle 支持部分多项目构建（参见 <bpt i="2" x="2">&lt;a2&gt;</bpt>第 56 章， <bpt i="3" x="3">&lt;i3&gt;</bpt>多项目构建<ept i="3">&lt;/i3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>14<ept i="1">&lt;/a1&gt;</ept>]<ept i="0">&lt;/s0&gt;</ept> And sometimes you want to download a zip from a repository, that does not have module descriptors.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150731T033810Z" creationid="haohang" creationdate="20150731T033810Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>14<ept i="1">&lt;/a1&gt;</ept>]<ept i="0">&lt;/s0&gt;</ept> 而有时候你想要从一个仓库中下载一个 zip，而它没有模块描述符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>15<ept i="1">&lt;/a1&gt;</ept>] <ept i="0">&lt;/s0&gt;</ept> <bpt i="2" x="2">&lt;a2&gt;</bpt>http://books.sonatype.com/mvnref-book/reference/pom-relationships-sect-project-relationships.html<ept i="2">&lt;/a2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151201T070436Z" creationid="haohang" creationdate="20151201T070436Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>15<ept i="1">&lt;/a1&gt;</ept>] <ept i="0">&lt;/s0&gt;</ept> <bpt i="2" x="2">&lt;a2&gt;</bpt>http://books.sonatype.com/mvnref-book/reference/pom-relationships-sect-project-relationships.html<ept i="2">&lt;/a2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>15<ept i="1">&lt;/a1&gt;</ept>]<ept i="0">&lt;/s0&gt;</ept> Gradle supports this.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150731T100752Z" creationid="haohang" creationdate="20150731T100752Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>15<ept i="1">&lt;/a1&gt;</ept>]<ept i="0">&lt;/s0&gt;</ept> 而 Gradle 支持这一点。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>16<ept i="1">&lt;/a1&gt;</ept>] <ept i="0">&lt;/s0&gt;</ept>At <bpt i="2" x="2">&lt;a2&gt;</bpt>http://ant.apache.org/ivy/history/latest-milestone/concept.html<ept i="2">&lt;/a2&gt;</ept> you can learn more about ivy patterns.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151201T070524Z" creationid="haohang" creationdate="20151201T070524Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>16<ept i="1">&lt;/a1&gt;</ept>] <ept i="0">&lt;/s0&gt;</ept>在<bpt i="2" x="2">&lt;a2&gt;</bpt>http://ant.apache.org/ivy/history/latest-milestone/concept.html<ept i="2">&lt;/a2&gt;</ept>，你可以了解到更多关于 ivy 模式的内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>17<ept i="1">&lt;/a1&gt;</ept>] <ept i="0">&lt;/s0&gt;</ept>If you want to shield your project from the downtimes of Maven Central things get more complicated.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151201T070804Z" creationid="haohang" creationdate="20151201T070804Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>17<ept i="1">&lt;/a1&gt;</ept>] <ept i="0">&lt;/s0&gt;</ept>如果你想要从 Maven 中央仓库停机保护你的项目不变得更加复杂时，</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>17<ept i="1">&lt;/a1&gt;</ept>]<ept i="0">&lt;/s0&gt;</ept> But it can be tedious, to keep it up to date.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151130T051455Z" creationid="haohang" creationdate="20151130T051455Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>17<ept i="1">&lt;/a1&gt;</ept>]<ept i="0">&lt;/s0&gt;</ept>但想让这个仓库保持最新的状态，可能会很乏味。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>18<ept i="1">&lt;/a1&gt;</ept>] <ept i="0">&lt;/s0&gt;</ept>To be exact, the Base plugin provides those tasks.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151227T160810Z" creationid="95" creationdate="20151227T160810Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>18<ept i="1">&lt;/a1&gt;</ept>] <ept i="0">&lt;/s0&gt;</ept>确切地说，Base插件提供了这些任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>19<ept i="1">&lt;/a1&gt;</ept>] <ept i="0">&lt;/s0&gt;</ept>It is planned for a future release to provide out-of-the-box support for this</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T145842Z" creationid="95" creationdate="20160106T145842Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>19<ept i="1">&lt;/a1&gt;</ept>] <ept i="0">&lt;/s0&gt;</ept>已经计划在将来的发行版中为其提供开箱即用的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>20<ept i="1">&lt;/a1&gt;</ept>] <ept i="0">&lt;/s0&gt;</ept>Gradle supports partial multiproject builds (see <bpt i="2" x="2">&lt;a2&gt;</bpt>Chapter 56, <bpt i="3" x="3">&lt;i3&gt;</bpt>Multi-project Builds<ept i="3">&lt;/i3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T140327Z" creationid="95" creationdate="20160521T140327Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>20<ept i="1">&lt;/a1&gt;</ept>] <ept i="0">&lt;/s0&gt;</ept>Gradle 支持部分多项目构建（参见 <bpt i="2" x="2">&lt;a2&gt;</bpt>第 56 章， <bpt i="3" x="3">&lt;i3&gt;</bpt>多项目建<ept i="3">&lt;/i3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>20<ept i="1">&lt;/a1&gt;</ept>]<ept i="0">&lt;/s0&gt;</ept> If you execute Gradle from within a project that has no <bpt i="2" x="2">&lt;c2&gt;</bpt>settings.gradle<ept i="2">&lt;/c2&gt;</ept> file, Gradle does the following:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T070939Z" creationid="haohang" creationdate="20160519T070833Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>20<ept i="1">&lt;/a1&gt;</ept>]<ept i="0">&lt;/s0&gt;</ept>如果你在没有<bpt i="2" x="2">&lt;c2&gt;</bpt>settings.gradle<ept i="2">&lt;/c2&gt;</ept>文件的项目中执行从 Gradle，Gradle 将执行以下操作︰</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>21<ept i="1">&lt;/a1&gt;</ept>] <ept i="0">&lt;/s0&gt;</ept>The real use case we had, was using <bpt i="2" x="2">&lt;a2&gt;</bpt>http://lucene.apache.org/solr<ept i="2">&lt;/a2&gt;</ept>, where you need a separate war for each index you are accessing.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160727T054637Z" creationid="haohang" creationdate="20160727T054637Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>21<ept i="1">&lt;/a1&gt;</ept>] <ept i="0">&lt;/s0&gt;</ept>我们真正的使用情况，正使用<bpt i="2" x="2">&lt;a2&gt;</bpt>http://lucene.apache.org/solr<ept i="2">&lt;/a2&gt;</ept>，在上面你所访问的每一个索引你都需要一个单独的war。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>21<ept i="1">&lt;/a1&gt;</ept>]<ept i="0">&lt;/s0&gt;</ept> For the example we use only one build script and do <bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;e3&gt;</bpt>cross project configuration<ept i="3">&lt;/e3&gt;</ept><ept i="2">&lt;/s2&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160722T091139Z" creationid="haohang" creationdate="20160722T091139Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>21<ept i="1">&lt;/a1&gt;</ept>]<ept i="0">&lt;/s0&gt;</ept> 对于这个例子，我们仅使用了一个构建脚本，并且进行了<bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;e3&gt;</bpt>跨项目的配置<ept i="3">&lt;/e3&gt;</ept><ept i="2">&lt;/s2&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>22<ept i="1">&lt;/a1&gt;</ept>] <ept i="0">&lt;/s0&gt;</ept> <bpt i="2" x="2">&lt;c2&gt;</bpt>services<ept i="2">&lt;/c2&gt;</ept> is also a project, but we use it just as a container.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160727T055049Z" creationid="haohang" creationdate="20160727T055049Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>22<ept i="1">&lt;/a1&gt;</ept>] <ept i="0">&lt;/s0&gt;</ept> <bpt i="2" x="2">&lt;c2&gt;</bpt>services<ept i="2">&lt;/c2&gt;</ept> 也是一个项目，但我们只是把它用作一个容器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>23<ept i="1">&lt;/a1&gt;</ept>] <ept i="0">&lt;/s0&gt;</ept>We do this here, as it makes the layout a bit easier.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160727T055210Z" creationid="haohang" creationdate="20160727T055210Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>23<ept i="1">&lt;/a1&gt;</ept>] <ept i="0">&lt;/s0&gt;</ept>我们在这里实现，因为它可以使布局更容易。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>24<ept i="1">&lt;/a1&gt;</ept>] <ept i="0">&lt;/s0&gt;</ept>So we are well in the range of the <bpt i="2" x="2">&lt;a2&gt;</bpt>7 plus 2 Rule <ept i="2">&lt;/a2&gt;</ept> :)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160727T055522Z" creationid="haohang" creationdate="20160727T055522Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>24<ept i="1">&lt;/a1&gt;</ept>] <ept i="0">&lt;/s0&gt;</ept>因为在 <bpt i="2" x="2">&lt;a2&gt;</bpt>7 plus 2 Rule <ept i="2">&lt;/a2&gt;</ept> 的范围内我们做得很好:)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>25<ept i="1">&lt;/a1&gt;</ept>] <ept i="0">&lt;/s0&gt;</ept>Which might range from a single class to something very complex.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161213T154134Z" creationid="95" creationdate="20161213T153929Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>25<ept i="1">&lt;/a1&gt;</ept>] <ept i="0">&lt;/s0&gt;</ept>这范围可能是从一个类到一些非常复杂的东西。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>25<ept i="1">&lt;/a1&gt;</ept>]<ept i="0">&lt;/s0&gt;</ept> Gradle makes this very easy.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T043235Z" creationid="95" creationdate="20161211T043235Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>25<ept i="1">&lt;/a1&gt;</ept>]<ept i="0">&lt;/s0&gt;</ept> 这对Gradle来说很简单。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>26<ept i="1">&lt;/a1&gt;</ept>] <ept i="0">&lt;/s0&gt;</ept>In fact, we think this is anyway the nicer solution.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161213T154333Z" creationid="95" creationdate="20161213T154333Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>26<ept i="1">&lt;/a1&gt;</ept>] <ept i="0">&lt;/s0&gt;</ept>事实上，我们认为这是更好的解决方案。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>26<ept i="1">&lt;/a1&gt;</ept>]<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161212T155050Z" creationid="95" creationdate="20161212T155050Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>26<ept i="1">&lt;/a1&gt;</ept>]<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>5<ept i="1">&lt;/a1&gt;</ept>] <ept i="0">&lt;/s0&gt;</ept>As of Gradle 1.0-milestone-9, using <bpt i="2" x="2">&lt;c2&gt;</bpt>ext<ept i="2">&lt;/c2&gt;</ept> to add extra properties is strongly encouraged but not yet enforced.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T065302Z" creationid="msdx" creationdate="20141108T065302Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>5<ept i="1">&lt;/a1&gt;</ept>] <ept i="0">&lt;/s0&gt;</ept>截至 Gradle 1.0-milestone-9版本，我们鼓励但不强制要求使用 <bpt i="2" x="2">&lt;c2&gt;</bpt>ext<ept i="2">&lt;/c2&gt;</ept> 来添加额外属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>5<ept i="1">&lt;/a1&gt;</ept>]<ept i="0">&lt;/s0&gt;</ept> Extra properties can be accessed from anywhere their owning object can be accessed, giving them a wider scope than local variables.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T061222Z" creationid="msdx" creationdate="20141108T055139Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>5<ept i="1">&lt;/a1&gt;</ept>]<ept i="0">&lt;/s0&gt;</ept>额外属性在任何能够访问它们所属的对象的地方都可以被访问，这使它们有着比局部变量更广泛的作用域。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>6<ept i="1">&lt;/a1&gt;</ept>] <ept i="0">&lt;/s0&gt;</ept> <bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;e3&gt;</bpt>Teamcity<ept i="3">&lt;/e3&gt;</ept><ept i="2">&lt;/s2&gt;</ept> or <bpt i="4" x="4">&lt;s4&gt;</bpt><bpt i="5" x="5">&lt;e5&gt;</bpt>Bamboo<ept i="5">&lt;/e5&gt;</ept><ept i="4">&lt;/s4&gt;</ept> are for example CI servers which offer this functionality.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T154043Z" creationid="msdx" creationdate="20141109T153810Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>6<ept i="1">&lt;/a1&gt;</ept>]<ept i="0">&lt;/s0&gt;</ept> <bpt i="2" x="2">&lt;s2&gt;</bpt> <bpt i="3" x="3">&lt;e3&gt;</bpt>Teamcity<ept i="3">&lt;/e3&gt;</ept><ept i="2">&lt;/s2&gt;</ept>或<bpt i="4" x="4">&lt;s4&gt;</bpt><bpt i="5" x="5">&lt;e5&gt;</bpt>Bamboo<ept i="5">&lt;/e5&gt;</ept><ept i="4">&lt;/s4&gt;</ept>就是提供这个功能的 CI 服务器的例子。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>7<ept i="1">&lt;/a1&gt;</ept>] <ept i="0">&lt;/s0&gt;</ept>You might be wondering why there is neither an import for the <bpt i="2" x="2">&lt;c2&gt;</bpt>StopExecutionException<ept i="2">&lt;/c2&gt;</ept> nor do we access it via its fully qualified name.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T124203Z" creationid="msdx" creationdate="20141111T124203Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>7<ept i="1">&lt;/a1&gt;</ept>]<ept i="0">&lt;/s0&gt;</ept>你可能会想，为什么既不导入<bpt i="2" x="2">&lt;c2&gt;</bpt>StopExecutionException<ept i="2">&lt;/c2&gt;</ept>也没有通过其完全限定名来访问它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>8<ept i="1">&lt;/a1&gt;</ept>] <ept i="0">&lt;/s0&gt;</ept>In Groovy you can execute Strings.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T063211Z" creationid="msdx" creationdate="20141116T063203Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>8<ept i="1">&lt;/a1&gt;</ept>] <ept i="0">&lt;/s0&gt;</ept>In Groovy you can execute 字符串表示的命令。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>9<ept i="1">&lt;/a1&gt;</ept>] <ept i="0">&lt;/s0&gt;</ept>The JUnit wiki contains a detailed description on how to work with JUnit categories: <bpt i="2" x="2">&lt;a2&gt;</bpt>https://github.com/junit-team/junit/wiki/Categories<ept i="2">&lt;/a2&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T151623Z" creationid="msdx" creationdate="20150428T151623Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>9<ept i="1">&lt;/a1&gt;</ept>] <ept i="0">&lt;/s0&gt;</ept>JUnit wiki 包含了有关如何使用 JUnit 类别的详细说明： <bpt i="2" x="2">&lt;a2&gt;</bpt>https://github.com/junit-team/junit/wiki/Categories<ept i="2">&lt;/a2&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>9<ept i="1">&lt;/a1&gt;</ept>]<ept i="0">&lt;/s0&gt;</ept> The <bpt i="2" x="2">&lt;c2&gt;</bpt>test<ept i="2">&lt;/c2&gt;</ept> task allows the specification of the JUnit categories you want to include and exclude.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T082846Z" creationid="msdx" creationdate="20150428T082401Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>[<bpt i="1" x="1">&lt;a1&gt;</bpt>9<ept i="1">&lt;/a1&gt;</ept>]<ept i="0">&lt;/s0&gt;</ept> <bpt i="2" x="2">&lt;c2&gt;</bpt>test<ept i="2">&lt;/c2&gt;</ept>任务可以实现一个规范，让你include和exclude 想要的 JUnit 类别。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>class<ept i="0">&lt;/s0&gt;</ept> GreetingPluginTest {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T014930Z" creationid="95" creationdate="20161211T014930Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>class<ept i="0">&lt;/s0&gt;</ept> GreetingPluginTest {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>class<ept i="0">&lt;/s0&gt;</ept> GreetingTask <bpt i="1" x="1">&lt;s1&gt;</bpt>extends<ept i="1">&lt;/s1&gt;</ept> DefaultTask {
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T145405Z" creationid="95" creationdate="20160814T145405Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>class<ept i="0">&lt;/s0&gt;</ept> GreetingTask <bpt i="1" x="1">&lt;s1&gt;</bpt>extends<ept i="1">&lt;/s1&gt;</ept> DefaultTask {
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>class<ept i="0">&lt;/s0&gt;</ept> GreetingTaskTest {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160815T150127Z" creationid="95" creationdate="20160815T150127Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>class<ept i="0">&lt;/s0&gt;</ept> GreetingTaskTest {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>class<ept i="0">&lt;/s0&gt;</ept> GreetingToFileTask <bpt i="1" x="1">&lt;s1&gt;</bpt>extends<ept i="1">&lt;/s1&gt;</ept> DefaultTask {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T132300Z" creationid="95" creationdate="20160820T132300Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>class<ept i="0">&lt;/s0&gt;</ept> GreetingToFileTask <bpt i="1" x="1">&lt;s1&gt;</bpt>extends<ept i="1">&lt;/s1&gt;</ept> DefaultTask {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>class<ept i="0">&lt;/s0&gt;</ept> IncrementalReverseTask <bpt i="1" x="1">&lt;s1&gt;</bpt>extends<ept i="1">&lt;/s1&gt;</ept> DefaultTask {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160816T144958Z" creationid="95" creationdate="20160816T144958Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>class<ept i="0">&lt;/s0&gt;</ept> IncrementalReverseTask <bpt i="1" x="1">&lt;s1&gt;</bpt>extends<ept i="1">&lt;/s1&gt;</ept> DefaultTask {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>if<ept i="0">&lt;/s0&gt;</ept> (details.requested.group == <bpt i="1" x="1">&lt;s1&gt;</bpt>'org.gradle'<ept i="1">&lt;/s1&gt;</ept>) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T061533Z" creationid="95" creationdate="20151115T061533Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>if<ept i="0">&lt;/s0&gt;</ept> (details.requested.group == <bpt i="1" x="1">&lt;s1&gt;</bpt>'org.gradle'<ept i="1">&lt;/s1&gt;</ept>) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>if<ept i="0">&lt;/s0&gt;</ept> (details.requested.group == <bpt i="1" x="1">&lt;s1&gt;</bpt>'org.software'<ept i="1">&lt;/s1&gt;</ept> &amp;&amp; details.requested.name == <bpt i="2" x="2">&lt;s2&gt;</bpt>'some-library'<ept i="2">&lt;/s2&gt;</ept> &amp;&amp; details.requested.version == <bpt i="3" x="3">&lt;s3&gt;</bpt>'1.2'<ept i="3">&lt;/s3&gt;</ept>) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T085801Z" creationid="95" creationdate="20151115T085801Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>if<ept i="0">&lt;/s0&gt;</ept> (details.requested.group == <bpt i="1" x="1">&lt;s1&gt;</bpt>'org.software'<ept i="1">&lt;/s1&gt;</ept> &amp;&amp; details.requested.name == <bpt i="2" x="2">&lt;s2&gt;</bpt>'some-library'<ept i="2">&lt;/s2&gt;</ept> &amp;&amp; details.requested.version == <bpt i="3" x="3">&lt;s3&gt;</bpt>'1.2'<ept i="3">&lt;/s3&gt;</ept>) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>if<ept i="0">&lt;/s0&gt;</ept> (details.requested.name == <bpt i="1" x="1">&lt;s1&gt;</bpt>'groovy-all'<ept i="1">&lt;/s1&gt;</ept>) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T090640Z" creationid="95" creationdate="20151115T090640Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>if<ept i="0">&lt;/s0&gt;</ept> (details.requested.name == <bpt i="1" x="1">&lt;s1&gt;</bpt>'groovy-all'<ept i="1">&lt;/s1&gt;</ept>) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>if<ept i="0">&lt;/s0&gt;</ept> (details.requested.version == <bpt i="1" x="1">&lt;s1&gt;</bpt>'default'<ept i="1">&lt;/s1&gt;</ept>) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T070652Z" creationid="95" creationdate="20151115T070652Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>if<ept i="0">&lt;/s0&gt;</ept> (details.requested.version == <bpt i="1" x="1">&lt;s1&gt;</bpt>'default'<ept i="1">&lt;/s1&gt;</ept>) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>if<ept i="0">&lt;/s0&gt;</ept> (flavor == flavors.french) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T081120Z" creationid="haohang" creationdate="20160408T081120Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>if<ept i="0">&lt;/s0&gt;</ept> (flavor == flavors.french) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>if<ept i="0">&lt;/s0&gt;</ept> (project.hasTests) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T125503Z" creationid="95" creationdate="20160521T125503Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>if<ept i="0">&lt;/s0&gt;</ept> (project.hasTests) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>if<ept i="0">&lt;/s0&gt;</ept> (projectState.failure) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T132216Z" creationid="95" creationdate="20160521T132216Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>if<ept i="0">&lt;/s0&gt;</ept> (projectState.failure) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>if<ept i="0">&lt;/s0&gt;</ept> (toolChain in Gcc &amp;&amp; buildType == buildTypes.debug) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160401T090611Z" creationid="haohang" creationdate="20160401T090611Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>if<ept i="0">&lt;/s0&gt;</ept> (toolChain in Gcc &amp;&amp; buildType == buildTypes.debug) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>if<ept i="0">&lt;/s0&gt;</ept> (toolChain in VisualCpp) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160324T152624Z" creationid="95" creationdate="20160324T152624Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>if<ept i="0">&lt;/s0&gt;</ept> (toolChain in VisualCpp) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>import<ept i="0">&lt;/s0&gt;</ept> org.apache.commons.codec.binary.Base6<bpt i="1" x="1">&lt;s1&gt;</bpt>4<ept i="1">&lt;/s1&gt;</ept>

buildscript {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161212T154656Z" creationid="95" creationdate="20161212T154656Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>import<ept i="0">&lt;/s0&gt;</ept> org.apache.commons.codec.binary.Base6<bpt i="1" x="1">&lt;s1&gt;</bpt>4<ept i="1">&lt;/s1&gt;</ept>

buildscript {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>import<ept i="0">&lt;/s0&gt;</ept> org.apache.commons.math.fraction.Fraction

initscript {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161215T144052Z" creationid="95" creationdate="20161215T144052Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>import<ept i="0">&lt;/s0&gt;</ept> org.apache.commons.math.fraction.Fraction

initscript {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>import<ept i="0">&lt;/s0&gt;</ept> org.apache.tools.ant.filters.FixCrLfFilter
<bpt i="1" x="1">&lt;s1&gt;</bpt>import<ept i="1">&lt;/s1&gt;</ept> org.apache.tools.ant.filters.ReplaceTokens

task filter(type: Copy) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T140842Z" creationid="msdx" creationdate="20141113T140842Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>import<ept i="0">&lt;/s0&gt;</ept> org.apache.tools.ant.filters.FixCrLfFilter
<bpt i="1" x="1">&lt;s1&gt;</bpt>import<ept i="1">&lt;/s1&gt;</ept> org.apache.tools.ant.filters.ReplaceTokens

task filter(type: Copy) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>import<ept i="0">&lt;/s0&gt;</ept> org.slf4j.Logger
<bpt i="1" x="1">&lt;s1&gt;</bpt>import<ept i="1">&lt;/s1&gt;</ept> org.slf4j.LoggerFactory

Logger slf4jLogger = LoggerFactory.getLogger(<bpt i="2" x="2">&lt;s2&gt;</bpt>'some-logger'<ept i="2">&lt;/s2&gt;</ept>)
slf4jLogger.info(<bpt i="3" x="3">&lt;s3&gt;</bpt>'An info log message logged using SLF4j'<ept i="3">&lt;/s3&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T130534Z" creationid="msdx" creationdate="20141116T130534Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>import<ept i="0">&lt;/s0&gt;</ept> org.slf4j.Logger
<bpt i="1" x="1">&lt;s1&gt;</bpt>import<ept i="1">&lt;/s1&gt;</ept> org.slf4j.LoggerFactory

Logger slf4jLogger = LoggerFactory.getLogger(<bpt i="2" x="2">&lt;s2&gt;</bpt>'some-logger'<ept i="2">&lt;/s2&gt;</ept>)
slf4jLogger.info(<bpt i="3" x="3">&lt;s3&gt;</bpt>'An info log message logged using SLF4j'<ept i="3">&lt;/s3&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>package<ept i="0">&lt;/s0&gt;</ept> org.gradle

<bpt i="1" x="1">&lt;s1&gt;</bpt>import<ept i="1">&lt;/s1&gt;</ept> org.gradle.api.DefaultTask
<bpt i="2" x="2">&lt;s2&gt;</bpt>import<ept i="2">&lt;/s2&gt;</ept> org.gradle.api.tasks.TaskAction

<bpt i="3" x="3">&lt;s3&gt;</bpt>class<ept i="3">&lt;/s3&gt;</ept> GreetingTask <bpt i="4" x="4">&lt;s4&gt;</bpt>extends<ept i="4">&lt;/s4&gt;</ept> DefaultTask {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160815T145232Z" creationid="95" creationdate="20160815T145232Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>package<ept i="0">&lt;/s0&gt;</ept> org.gradle

<bpt i="1" x="1">&lt;s1&gt;</bpt>import<ept i="1">&lt;/s1&gt;</ept> org.gradle.api.DefaultTask
<bpt i="2" x="2">&lt;s2&gt;</bpt>import<ept i="2">&lt;/s2&gt;</ept> org.gradle.api.tasks.TaskAction

<bpt i="3" x="3">&lt;s3&gt;</bpt>class<ept i="3">&lt;/s3&gt;</ept> GreetingTask <bpt i="4" x="4">&lt;s4&gt;</bpt>extends<ept i="4">&lt;/s4&gt;</ept> DefaultTask {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>throw<ept i="0">&lt;/s0&gt;</ept> <bpt i="1" x="1">&lt;s1&gt;</bpt>new<ept i="1">&lt;/s1&gt;</ept> RuntimeException(<bpt i="2" x="2">&lt;s2&gt;</bpt>'broken'<ept i="2">&lt;/s2&gt;</ept>)
}

gradle.taskGraph.beforeTask { Task task -&gt;</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T140114Z" creationid="95" creationdate="20160521T140114Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt>throw<ept i="0">&lt;/s0&gt;</ept> <bpt i="1" x="1">&lt;s1&gt;</bpt>new<ept i="1">&lt;/s1&gt;</ept> RuntimeException(<bpt i="2" x="2">&lt;s2&gt;</bpt>'broken'<ept i="2">&lt;/s2&gt;</ept>)
}

gradle.taskGraph.beforeTask { Task task -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="10" x="10">&lt;s10&gt;</bpt>// Use a closure to filter each line<ept i="10">&lt;/s10&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T140853Z" creationid="msdx" creationdate="20141113T140853Z">
        <seg><bpt i="10" x="10">&lt;s10&gt;</bpt>// Use a closure to filter each line<ept i="10">&lt;/s10&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="11" x="11">&lt;s11&gt;</bpt>"[$line]"<ept i="11">&lt;/s11&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T140854Z" creationid="msdx" creationdate="20141113T140854Z">
        <seg><bpt i="11" x="11">&lt;s11&gt;</bpt>"[$line]"<ept i="11">&lt;/s11&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="11" x="11">&lt;s11&gt;</bpt>// Use the contents of each zip file in the src dir<ept i="11">&lt;/s11&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T123339Z" creationid="msdx" creationdate="20141113T123339Z">
        <seg><bpt i="11" x="11">&lt;s11&gt;</bpt>// Use the contents of each zip file in the src dir<ept i="11">&lt;/s11&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="11" x="11">&lt;s11&gt;</bpt>// add the enterprise repository<ept i="11">&lt;/s11&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161215T144241Z" creationid="95" creationdate="20161215T144241Z">
        <seg><bpt i="11" x="11">&lt;s11&gt;</bpt>// add the enterprise repository<ept i="11">&lt;/s11&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="12" x="12">&lt;s12&gt;</bpt>if<ept i="12">&lt;/s12&gt;</ept> (result.failure != null) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T154820Z" creationid="msdx" creationdate="20141116T154820Z">
        <seg><bpt i="12" x="12">&lt;s12&gt;</bpt>if<ept i="12">&lt;/s12&gt;</ept> (result.failure != null) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="13" x="13">&lt;s13&gt;</bpt>// also modify the generated deployment descriptor accordingly<ept i="13">&lt;/s13&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T142900Z" creationid="msdx" creationdate="20150504T142900Z">
        <seg><bpt i="13" x="13">&lt;s13&gt;</bpt>// also modify the generated deployment descriptor accordingly<ept i="13">&lt;/s13&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="17" x="17">&lt;s17&gt;</bpt>&lt;description&gt;<ept i="17">&lt;/s17&gt;</ept>The first project<bpt i="18" x="18">&lt;s18&gt;</bpt>&lt;/description&gt;<ept i="18">&lt;/s18&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T154223Z" creationid="95" creationdate="20170330T154223Z">
        <seg><bpt i="17" x="17">&lt;s17&gt;</bpt>&lt;description&gt;<ept i="17">&lt;/s17&gt;</ept>The first project<bpt i="18" x="18">&lt;s18&gt;</bpt>&lt;/description&gt;<ept i="18">&lt;/s18&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="19" x="19">&lt;s19&gt;</bpt>&lt;/info&gt;<ept i="19">&lt;/s19&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T154226Z" creationid="95" creationdate="20170330T154226Z">
        <seg><bpt i="19" x="19">&lt;s19&gt;</bpt>&lt;/info&gt;<ept i="19">&lt;/s19&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="1" x="1">&lt;s1&gt;</bpt>"commons-cli:commons-cli:1.0@jar"<ept i="1">&lt;/s1&gt;</ept>,</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T103703Z" creationid="haohang" creationdate="20150801T103703Z">
        <seg><bpt i="1" x="1">&lt;s1&gt;</bpt>"commons-cli:commons-cli:1.0@jar"<ept i="1">&lt;/s1&gt;</ept>,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="1" x="1">&lt;s1&gt;</bpt>// Disable the test report for the individual test task<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083546Z" creationid="msdx" creationdate="20150428T083546Z">
        <seg><bpt i="1" x="1">&lt;s1&gt;</bpt>// Disable the test report for the individual test task<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><it pos="begin" x="1">&lt;s1&gt;</it>// Here you would put arbitrary conditions in real life.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T054823Z" creationid="msdx" creationdate="20141111T054823Z">
        <seg><it pos="begin" x="1">&lt;s1&gt;</it>// Here you would put arbitrary conditions in real life.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="1" x="1">&lt;s1&gt;</bpt>// installDir "C:/Apps/Microsoft Visual Studio 10.0"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T091223Z" creationid="haohang" creationdate="20160408T091223Z">
        <seg><bpt i="1" x="1">&lt;s1&gt;</bpt>// installDir "C:/Apps/Microsoft Visual Studio 10.0"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="1" x="1">&lt;s1&gt;</bpt>&lt;target<ept i="1">&lt;/s1&gt;</ept> <bpt i="2" x="2">&lt;s2&gt;</bpt>name<ept i="2">&lt;/s2&gt;</ept>=<bpt i="3" x="3">&lt;s3&gt;</bpt>"hello"<ept i="3">&lt;/s3&gt;</ept> <bpt i="4" x="4">&lt;s4&gt;</bpt>depends<ept i="4">&lt;/s4&gt;</ept>=<bpt i="5" x="5">&lt;s5&gt;</bpt>"intro"<ept i="5">&lt;/s5&gt;</ept><bpt i="6" x="6">&lt;s6&gt;</bpt>&gt;<ept i="6">&lt;/s6&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T061143Z" creationid="msdx" creationdate="20141116T061143Z">
        <seg><bpt i="1" x="1">&lt;s1&gt;</bpt>&lt;target<ept i="1">&lt;/s1&gt;</ept> <bpt i="2" x="2">&lt;s2&gt;</bpt>name<ept i="2">&lt;/s2&gt;</ept>=<bpt i="3" x="3">&lt;s3&gt;</bpt>"hello"<ept i="3">&lt;/s3&gt;</ept> <bpt i="4" x="4">&lt;s4&gt;</bpt>depends<ept i="4">&lt;/s4&gt;</ept>=<bpt i="5" x="5">&lt;s5&gt;</bpt>"intro"<ept i="5">&lt;/s5&gt;</ept><bpt i="6" x="6">&lt;s6&gt;</bpt>&gt;<ept i="6">&lt;/s6&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="1" x="1">&lt;s1&gt;</bpt>&lt;target<ept i="1">&lt;/s1&gt;</ept> <bpt i="2" x="2">&lt;s2&gt;</bpt>name<ept i="2">&lt;/s2&gt;</ept>=<bpt i="3" x="3">&lt;s3&gt;</bpt>"hello"<ept i="3">&lt;/s3&gt;</ept><bpt i="4" x="4">&lt;s4&gt;</bpt>&gt;<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T060915Z" creationid="msdx" creationdate="20141116T060915Z">
        <seg><bpt i="1" x="1">&lt;s1&gt;</bpt>&lt;target<ept i="1">&lt;/s1&gt;</ept> <bpt i="2" x="2">&lt;s2&gt;</bpt>name<ept i="2">&lt;/s2&gt;</ept>=<bpt i="3" x="3">&lt;s3&gt;</bpt>"hello"<ept i="3">&lt;/s3&gt;</ept><bpt i="4" x="4">&lt;s4&gt;</bpt>&gt;<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="1" x="1">&lt;s1&gt;</bpt>@Test<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160815T150130Z" creationid="95" creationdate="20160815T150130Z">
        <seg><bpt i="1" x="1">&lt;s1&gt;</bpt>@Test<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="1" x="1">&lt;s1&gt;</bpt>[<bpt i="2" x="2">&lt;a2&gt;</bpt>12<ept i="2">&lt;/a2&gt;</ept>]<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T152831Z" creationid="msdx" creationdate="20150429T152831Z">
        <seg><bpt i="1" x="1">&lt;s1&gt;</bpt>[<bpt i="2" x="2">&lt;a2&gt;</bpt>12<ept i="2">&lt;/a2&gt;</ept>]<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="1" x="1">&lt;s1&gt;</bpt>[<bpt i="2" x="2">&lt;a2&gt;</bpt>23<ept i="2">&lt;/a2&gt;</ept>]<ept i="1">&lt;/s1&gt;</ept> A <bpt i="3" x="3">&lt;s3&gt;</bpt><bpt i="4" x="4">&lt;e4&gt;</bpt>lib<ept i="4">&lt;/e4&gt;</ept><ept i="3">&lt;/s3&gt;</ept> dependency is a special form of an execution dependency.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T084005Z" creationid="haohang" creationdate="20160726T084005Z">
        <seg><bpt i="1" x="1">&lt;s1&gt;</bpt>[<bpt i="2" x="2">&lt;a2&gt;</bpt>23<ept i="2">&lt;/a2&gt;</ept>]<ept i="1">&lt;/s1&gt;</ept> 一个 <bpt i="3" x="3">&lt;s3&gt;</bpt><bpt i="4" x="4">&lt;e4&gt;</bpt>lib<ept i="4">&lt;/e4&gt;</ept><ept i="3">&lt;/s3&gt;</ept> 依赖是一种特殊形式的执行依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="1" x="1">&lt;s1&gt;</bpt>[<bpt i="2" x="2">&lt;a2&gt;</bpt>8<ept i="2">&lt;/a2&gt;</ept>]<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141114T142101Z" creationid="msdx" creationdate="20141114T142101Z">
        <seg><bpt i="1" x="1">&lt;s1&gt;</bpt>[<bpt i="2" x="2">&lt;a2&gt;</bpt>8<ept i="2">&lt;/a2&gt;</ept>]<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="1" x="1">&lt;s1&gt;</bpt>if<ept i="1">&lt;/s1&gt;</ept> (details.id.group == <bpt i="2" x="2">&lt;s2&gt;</bpt>"air.birds"<ept i="2">&lt;/s2&gt;</ept>) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T041820Z" creationid="95" creationdate="20151129T041820Z">
        <seg><bpt i="1" x="1">&lt;s1&gt;</bpt>if<ept i="1">&lt;/s1&gt;</ept> (details.id.group == <bpt i="2" x="2">&lt;s2&gt;</bpt>"air.birds"<ept i="2">&lt;/s2&gt;</ept>) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="1" x="1">&lt;s1&gt;</bpt>if<ept i="1">&lt;/s1&gt;</ept> (taskName.startsWith(<bpt i="2" x="2">&lt;s2&gt;</bpt>"ping"<ept i="2">&lt;/s2&gt;</ept>)) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T064959Z" creationid="msdx" creationdate="20141111T064959Z">
        <seg><bpt i="1" x="1">&lt;s1&gt;</bpt>if<ept i="1">&lt;/s1&gt;</ept> (taskName.startsWith(<bpt i="2" x="2">&lt;s2&gt;</bpt>"ping"<ept i="2">&lt;/s2&gt;</ept>)) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="1" x="1">&lt;s1&gt;</bpt>if<ept i="1">&lt;/s1&gt;</ept> (toolChain in VisualCpp) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160324T152307Z" creationid="95" creationdate="20160324T152307Z">
        <seg><bpt i="1" x="1">&lt;s1&gt;</bpt>if<ept i="1">&lt;/s1&gt;</ept> (toolChain in VisualCpp) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="1" x="1">&lt;s1&gt;</bpt>new<ept i="1">&lt;/s1&gt;</ept> File(docs, <bpt i="2" x="2">&lt;s2&gt;</bpt>"readme.txt"<ept i="2">&lt;/s2&gt;</ept>).write(<bpt i="3" x="3">&lt;s3&gt;</bpt>"Read me!"<ept i="3">&lt;/s3&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150703T100427Z" creationid="haohang" creationdate="20150703T100427Z">
        <seg><bpt i="1" x="1">&lt;s1&gt;</bpt>new<ept i="1">&lt;/s1&gt;</ept> File(docs, <bpt i="2" x="2">&lt;s2&gt;</bpt>"readme.txt"<ept i="2">&lt;/s2&gt;</ept>).write(<bpt i="3" x="3">&lt;s3&gt;</bpt>"Read me!"<ept i="3">&lt;/s3&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="1" x="1">&lt;s1&gt;</bpt>return<ept i="1">&lt;/s1&gt;</ept> project.file(srcDirName)
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T044944Z" creationid="95" creationdate="20161211T044944Z">
        <seg><bpt i="1" x="1">&lt;s1&gt;</bpt>return<ept i="1">&lt;/s1&gt;</ept> project.file(srcDirName)
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="1" x="1">&lt;s1&gt;</bpt>throw<ept i="1">&lt;/s1&gt;</ept> <bpt i="2" x="2">&lt;s2&gt;</bpt>new<ept i="2">&lt;/s2&gt;</ept> RuntimeException()
}
task taskY &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T070352Z" creationid="msdx" creationdate="20141111T070352Z">
        <seg><bpt i="1" x="1">&lt;s1&gt;</bpt>throw<ept i="1">&lt;/s1&gt;</ept> <bpt i="2" x="2">&lt;s2&gt;</bpt>new<ept i="2">&lt;/s2&gt;</ept> RuntimeException()
}
task taskY &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="20" x="20">&lt;s20&gt;</bpt>&lt;configurations&gt;<ept i="20">&lt;/s20&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T154227Z" creationid="95" creationdate="20170330T154227Z">
        <seg><bpt i="20" x="20">&lt;s20&gt;</bpt>&lt;configurations&gt;<ept i="20">&lt;/s20&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="21" x="21">&lt;s21&gt;</bpt>&lt;conf<ept i="21">&lt;/s21&gt;</ept> <bpt i="22" x="22">&lt;s22&gt;</bpt>name<ept i="22">&lt;/s22&gt;</ept>=<bpt i="23" x="23">&lt;s23&gt;</bpt>"default"<ept i="23">&lt;/s23&gt;</ept> <bpt i="24" x="24">&lt;s24&gt;</bpt>visibility<ept i="24">&lt;/s24&gt;</ept>=<bpt i="25" x="25">&lt;s25&gt;</bpt>"public"<ept i="25">&lt;/s25&gt;</ept> <bpt i="26" x="26">&lt;s26&gt;</bpt>extends<ept i="26">&lt;/s26&gt;</ept>=<bpt i="27" x="27">&lt;s27&gt;</bpt>"runtime"<ept i="27">&lt;/s27&gt;</ept><bpt i="28" x="28">&lt;s28&gt;</bpt>/&gt;<ept i="28">&lt;/s28&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T154228Z" creationid="95" creationdate="20170330T154228Z">
        <seg><bpt i="21" x="21">&lt;s21&gt;</bpt>&lt;conf<ept i="21">&lt;/s21&gt;</ept> <bpt i="22" x="22">&lt;s22&gt;</bpt>name<ept i="22">&lt;/s22&gt;</ept>=<bpt i="23" x="23">&lt;s23&gt;</bpt>"default"<ept i="23">&lt;/s23&gt;</ept> <bpt i="24" x="24">&lt;s24&gt;</bpt>visibility<ept i="24">&lt;/s24&gt;</ept>=<bpt i="25" x="25">&lt;s25&gt;</bpt>"public"<ept i="25">&lt;/s25&gt;</ept> <bpt i="26" x="26">&lt;s26&gt;</bpt>extends<ept i="26">&lt;/s26&gt;</ept>=<bpt i="27" x="27">&lt;s27&gt;</bpt>"runtime"<ept i="27">&lt;/s27&gt;</ept><bpt i="28" x="28">&lt;s28&gt;</bpt>/&gt;<ept i="28">&lt;/s28&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="29" x="29">&lt;s29&gt;</bpt>&lt;conf<ept i="29">&lt;/s29&gt;</ept> <bpt i="30" x="30">&lt;s30&gt;</bpt>name<ept i="30">&lt;/s30&gt;</ept>=<bpt i="31" x="31">&lt;s31&gt;</bpt>"runtime"<ept i="31">&lt;/s31&gt;</ept> <bpt i="32" x="32">&lt;s32&gt;</bpt>visibility<ept i="32">&lt;/s32&gt;</ept>=<bpt i="33" x="33">&lt;s33&gt;</bpt>"public"<ept i="33">&lt;/s33&gt;</ept><bpt i="34" x="34">&lt;s34&gt;</bpt>/&gt;<ept i="34">&lt;/s34&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T154228Z" creationid="95" creationdate="20170330T154228Z">
        <seg><bpt i="29" x="29">&lt;s29&gt;</bpt>&lt;conf<ept i="29">&lt;/s29&gt;</ept> <bpt i="30" x="30">&lt;s30&gt;</bpt>name<ept i="30">&lt;/s30&gt;</ept>=<bpt i="31" x="31">&lt;s31&gt;</bpt>"runtime"<ept i="31">&lt;/s31&gt;</ept> <bpt i="32" x="32">&lt;s32&gt;</bpt>visibility<ept i="32">&lt;/s32&gt;</ept>=<bpt i="33" x="33">&lt;s33&gt;</bpt>"public"<ept i="33">&lt;/s33&gt;</ept><bpt i="34" x="34">&lt;s34&gt;</bpt>/&gt;<ept i="34">&lt;/s34&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="2" x="2">&lt;s2&gt;</bpt>"org.apache.ant:ant:1.9.3@jar"<ept i="2">&lt;/s2&gt;</ept>]
List hibernate = [<bpt i="3" x="3">&lt;s3&gt;</bpt>'org.hibernate:hibernate:3.0.5@jar'<ept i="3">&lt;/s3&gt;</ept>, <bpt i="4" x="4">&lt;s4&gt;</bpt>'somegroup:someorg:1.0@jar'<ept i="4">&lt;/s4&gt;</ept>]
dependencies {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T103704Z" creationid="haohang" creationdate="20150801T103704Z">
        <seg><bpt i="2" x="2">&lt;s2&gt;</bpt>"org.apache.ant:ant:1.9.3@jar"<ept i="2">&lt;/s2&gt;</ept>]
List hibernate = [<bpt i="3" x="3">&lt;s3&gt;</bpt>'org.hibernate:hibernate:3.0.5@jar'<ept i="3">&lt;/s3&gt;</ept>, <bpt i="4" x="4">&lt;s4&gt;</bpt>'somegroup:someorg:1.0@jar'<ept i="4">&lt;/s4&gt;</ept>]
dependencies {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="2" x="2">&lt;s2&gt;</bpt>// Apply the script<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T153043Z" creationid="msdx" creationdate="20141109T153043Z">
        <seg><bpt i="2" x="2">&lt;s2&gt;</bpt>// Apply the script<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="2" x="2">&lt;s2&gt;</bpt>// Copy a single file<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T130949Z" creationid="msdx" creationdate="20141113T130949Z">
        <seg><bpt i="2" x="2">&lt;s2&gt;</bpt>// Copy a single file<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="2" x="2">&lt;s2&gt;</bpt>// Define toolchain-specific compiler and linker options<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160324T151757Z" creationid="95" creationdate="20160324T151757Z">
        <seg><bpt i="2" x="2">&lt;s2&gt;</bpt>// Define toolchain-specific compiler and linker options<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="2" x="2">&lt;s2&gt;</bpt>// Inject a task<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T051005Z" creationid="95" creationdate="20161211T051005Z">
        <seg><bpt i="2" x="2">&lt;s2&gt;</bpt>// Inject a task<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="2" x="2">&lt;s2&gt;</bpt>// Look for artifacts here if not found at the above location<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150909T053117Z" creationid="haohang" creationdate="20150909T053117Z">
        <seg><bpt i="2" x="2">&lt;s2&gt;</bpt>// Look for artifacts here if not found at the above location<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="2" x="2">&lt;s2&gt;</bpt>// Uncomment to use a GCC install that is not in the PATH<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T091224Z" creationid="haohang" creationdate="20160408T091224Z">
        <seg><bpt i="2" x="2">&lt;s2&gt;</bpt>// Uncomment to use a GCC install that is not in the PATH<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="2" x="2">&lt;s2&gt;</bpt>// Use a closure to map the file name<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T140712Z" creationid="msdx" creationdate="20141113T140712Z">
        <seg><bpt i="2" x="2">&lt;s2&gt;</bpt>// Use a closure to map the file name<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="2" x="2">&lt;s2&gt;</bpt>// Use inherited method<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T044947Z" creationid="95" creationdate="20161211T044947Z">
        <seg><bpt i="2" x="2">&lt;s2&gt;</bpt>// Use inherited method<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="2" x="2">&lt;s2&gt;</bpt>// do something<ept i="2">&lt;/s2&gt;</ept>
}
task compile(dependsOn: <bpt i="3" x="3">&lt;s3&gt;</bpt>'resources'<ept i="3">&lt;/s3&gt;</ept>) &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T093715Z" creationid="msdx" creationdate="20141109T093715Z">
        <seg><bpt i="2" x="2">&lt;s2&gt;</bpt>// do something<ept i="2">&lt;/s2&gt;</ept>
}
task compile(dependsOn: <bpt i="3" x="3">&lt;s3&gt;</bpt>'resources'<ept i="3">&lt;/s3&gt;</ept>) &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="2" x="2">&lt;s2&gt;</bpt>// non-String values are automatically converted to Strings<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T101339Z" creationid="msdx" creationdate="20150512T101339Z">
        <seg><bpt i="2" x="2">&lt;s2&gt;</bpt>// non-String values are automatically converted to Strings<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="2" x="2">&lt;s2&gt;</bpt>//following dependencies will become the ear modules and placed in the ear root<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T142849Z" creationid="msdx" creationdate="20150504T142849Z">
        <seg><bpt i="2" x="2">&lt;s2&gt;</bpt>//following dependencies will become the ear modules and placed in the ear root<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="2" x="2">&lt;s2&gt;</bpt>//include all tests from package<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083455Z" creationid="msdx" creationdate="20150428T083455Z">
        <seg><bpt i="2" x="2">&lt;s2&gt;</bpt>//include all tests from package<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="2" x="2">&lt;s2&gt;</bpt>//prefer 'groovy' over 'groovy-all':<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T090641Z" creationid="95" creationdate="20151115T090641Z">
        <seg><bpt i="2" x="2">&lt;s2&gt;</bpt>//prefer 'groovy' over 'groovy-all':<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="2" x="2">&lt;s2&gt;</bpt>//some custom logic that resolves the default version into a specific version<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T070656Z" creationid="95" creationdate="20151115T070656Z">
        <seg><bpt i="2" x="2">&lt;s2&gt;</bpt>//some custom logic that resolves the default version into a specific version<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="2" x="2">&lt;s2&gt;</bpt>@InputDirectory<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160816T144959Z" creationid="95" creationdate="20160816T144959Z">
        <seg><bpt i="2" x="2">&lt;s2&gt;</bpt>@InputDirectory<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="2" x="2">&lt;s2&gt;</bpt>@TaskAction<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T145741Z" creationid="95" creationdate="20160814T145741Z">
        <seg><bpt i="2" x="2">&lt;s2&gt;</bpt>@TaskAction<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="2" x="2">&lt;s2&gt;</bpt>[<bpt i="3" x="3">&lt;a3&gt;</bpt>19<ept i="3">&lt;/a3&gt;</ept>]<ept i="2">&lt;/s2&gt;</ept> For example to use the ssh protocol you can do:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T134836Z" creationid="95" creationdate="20160105T134836Z">
        <seg><bpt i="2" x="2">&lt;s2&gt;</bpt>[<bpt i="3" x="3">&lt;a3&gt;</bpt>19<ept i="3">&lt;/a3&gt;</ept>]<ept i="2">&lt;/s2&gt;</ept> 举个例子，要使用ssh协议，你可以：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="2" x="2">&lt;s2&gt;</bpt>[<bpt i="3" x="3">&lt;a3&gt;</bpt>7<ept i="3">&lt;/a3&gt;</ept>]<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T055457Z" creationid="msdx" creationdate="20141111T055457Z">
        <seg><bpt i="2" x="2">&lt;s2&gt;</bpt>[<bpt i="3" x="3">&lt;a3&gt;</bpt>7<ept i="3">&lt;/a3&gt;</ept>]<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="2" x="2">&lt;s2&gt;</bpt>if<ept i="2">&lt;/s2&gt;</ept> (flavor == flavors.failing) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160504T151037Z" creationid="95" creationdate="20160504T151037Z">
        <seg><bpt i="2" x="2">&lt;s2&gt;</bpt>if<ept i="2">&lt;/s2&gt;</ept> (flavor == flavors.failing) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="2" x="2">&lt;s2&gt;</bpt>if<ept i="2">&lt;/s2&gt;</ept> (project.arctic) { doLast {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160530T144431Z" creationid="95" creationdate="20160530T144431Z">
        <seg><bpt i="2" x="2">&lt;s2&gt;</bpt>if<ept i="2">&lt;/s2&gt;</ept> (project.arctic) { doLast {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="2" x="2">&lt;s2&gt;</bpt>if<ept i="2">&lt;/s2&gt;</ept> (toolChain in VisualCpp &amp;&amp; buildType == buildTypes.debug) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160401T090618Z" creationid="haohang" creationdate="20160401T090618Z">
        <seg><bpt i="2" x="2">&lt;s2&gt;</bpt>if<ept i="2">&lt;/s2&gt;</ept> (toolChain in VisualCpp &amp;&amp; buildType == buildTypes.debug) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="2" x="2">&lt;s2&gt;</bpt>if<ept i="2">&lt;/s2&gt;</ept> (true) { <bpt i="3" x="3">&lt;s3&gt;</bpt>throw<ept i="3">&lt;/s3&gt;</ept> <bpt i="4" x="4">&lt;s4&gt;</bpt>new<ept i="4">&lt;/s4&gt;</ept> StopExecutionException() }
}
task myTask(dependsOn: <bpt i="5" x="5">&lt;s5&gt;</bpt>'compile'<ept i="5">&lt;/s5&gt;</ept>) &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T055252Z" creationid="msdx" creationdate="20141111T055252Z">
        <seg><bpt i="2" x="2">&lt;s2&gt;</bpt>if<ept i="2">&lt;/s2&gt;</ept> (true) { <bpt i="3" x="3">&lt;s3&gt;</bpt>throw<ept i="3">&lt;/s3&gt;</ept> <bpt i="4" x="4">&lt;s4&gt;</bpt>new<ept i="4">&lt;/s4&gt;</ept> StopExecutionException() }
}
task myTask(dependsOn: <bpt i="5" x="5">&lt;s5&gt;</bpt>'compile'<ept i="5">&lt;/s5&gt;</ept>) &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="2" x="2">&lt;s2&gt;</bpt>private<ept i="2">&lt;/s2&gt;</ept> <bpt i="3" x="3">&lt;s3&gt;</bpt>static<ept i="3">&lt;/s3&gt;</ept> String ENTERPRISE_REPOSITORY_URL = <bpt i="4" x="4">&lt;s4&gt;</bpt>"http://repo.gradle.org/gradle/repo"<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161215T144232Z" creationid="95" creationdate="20161215T144232Z">
        <seg><bpt i="2" x="2">&lt;s2&gt;</bpt>private<ept i="2">&lt;/s2&gt;</ept> <bpt i="3" x="3">&lt;s3&gt;</bpt>static<ept i="3">&lt;/s3&gt;</ept> String ENTERPRISE_REPOSITORY_URL = <bpt i="4" x="4">&lt;s4&gt;</bpt>"http://repo.gradle.org/gradle/repo"<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="2" x="2">&lt;s2&gt;</bpt>public<ept i="2">&lt;/s2&gt;</ept> <bpt i="3" x="3">&lt;s3&gt;</bpt>void<ept i="3">&lt;/s3&gt;</ept> canAddTaskToProject() {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160815T150131Z" creationid="95" creationdate="20160815T150131Z">
        <seg><bpt i="2" x="2">&lt;s2&gt;</bpt>public<ept i="2">&lt;/s2&gt;</ept> <bpt i="3" x="3">&lt;s3&gt;</bpt>void<ept i="3">&lt;/s3&gt;</ept> canAddTaskToProject() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="2" x="2">&lt;s2&gt;</bpt>public<ept i="2">&lt;/s2&gt;</ept> <bpt i="3" x="3">&lt;s3&gt;</bpt>void<ept i="3">&lt;/s3&gt;</ept> greeterPluginAddsGreetingTaskToProject() {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T014931Z" creationid="95" creationdate="20161211T014931Z">
        <seg><bpt i="2" x="2">&lt;s2&gt;</bpt>public<ept i="2">&lt;/s2&gt;</ept> <bpt i="3" x="3">&lt;s3&gt;</bpt>void<ept i="3">&lt;/s3&gt;</ept> greeterPluginAddsGreetingTaskToProject() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="2" x="2">&lt;s2&gt;</bpt>void<ept i="2">&lt;/s2&gt;</ept> apply(Project project) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T123818Z" creationid="95" creationdate="20160820T123818Z">
        <seg><bpt i="2" x="2">&lt;s2&gt;</bpt>void<ept i="2">&lt;/s2&gt;</ept> apply(Project project) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="35" x="35">&lt;s35&gt;</bpt>&lt;/configurations&gt;<ept i="35">&lt;/s35&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T154230Z" creationid="95" creationdate="20170330T154230Z">
        <seg><bpt i="35" x="35">&lt;s35&gt;</bpt>&lt;/configurations&gt;<ept i="35">&lt;/s35&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="36" x="36">&lt;s36&gt;</bpt>&lt;publications&gt;<ept i="36">&lt;/s36&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T154233Z" creationid="95" creationdate="20170330T154233Z">
        <seg><bpt i="36" x="36">&lt;s36&gt;</bpt>&lt;publications&gt;<ept i="36">&lt;/s36&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="37" x="37">&lt;s37&gt;</bpt>&lt;artifact<ept i="37">&lt;/s37&gt;</ept> <bpt i="38" x="38">&lt;s38&gt;</bpt>name<ept i="38">&lt;/s38&gt;</ept>=<bpt i="39" x="39">&lt;s39&gt;</bpt>"project1"<ept i="39">&lt;/s39&gt;</ept> <bpt i="40" x="40">&lt;s40&gt;</bpt>type<ept i="40">&lt;/s40&gt;</ept>=<bpt i="41" x="41">&lt;s41&gt;</bpt>"jar"<ept i="41">&lt;/s41&gt;</ept> <bpt i="42" x="42">&lt;s42&gt;</bpt>ext<ept i="42">&lt;/s42&gt;</ept>=<bpt i="43" x="43">&lt;s43&gt;</bpt>"jar"<ept i="43">&lt;/s43&gt;</ept> <bpt i="44" x="44">&lt;s44&gt;</bpt>conf<ept i="44">&lt;/s44&gt;</ept>=<bpt i="45" x="45">&lt;s45&gt;</bpt>"runtime"<ept i="45">&lt;/s45&gt;</ept><bpt i="46" x="46">&lt;s46&gt;</bpt>/&gt;<ept i="46">&lt;/s46&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T154234Z" creationid="95" creationdate="20170330T154234Z">
        <seg><bpt i="37" x="37">&lt;s37&gt;</bpt>&lt;artifact<ept i="37">&lt;/s37&gt;</ept> <bpt i="38" x="38">&lt;s38&gt;</bpt>name<ept i="38">&lt;/s38&gt;</ept>=<bpt i="39" x="39">&lt;s39&gt;</bpt>"project1"<ept i="39">&lt;/s39&gt;</ept> <bpt i="40" x="40">&lt;s40&gt;</bpt>type<ept i="40">&lt;/s40&gt;</ept>=<bpt i="41" x="41">&lt;s41&gt;</bpt>"jar"<ept i="41">&lt;/s41&gt;</ept> <bpt i="42" x="42">&lt;s42&gt;</bpt>ext<ept i="42">&lt;/s42&gt;</ept>=<bpt i="43" x="43">&lt;s43&gt;</bpt>"jar"<ept i="43">&lt;/s43&gt;</ept> <bpt i="44" x="44">&lt;s44&gt;</bpt>conf<ept i="44">&lt;/s44&gt;</ept>=<bpt i="45" x="45">&lt;s45&gt;</bpt>"runtime"<ept i="45">&lt;/s45&gt;</ept><bpt i="46" x="46">&lt;s46&gt;</bpt>/&gt;<ept i="46">&lt;/s46&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="3" x="3">&lt;s3&gt;</bpt>"1.0"<ept i="3">&lt;/s3&gt;</ept>
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T070658Z" creationid="95" creationdate="20151115T070658Z">
        <seg><bpt i="3" x="3">&lt;s3&gt;</bpt>"1.0"<ept i="3">&lt;/s3&gt;</ept>
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="3" x="3">&lt;s3&gt;</bpt>'org.mycomp.package1'<ept i="3">&lt;/s3&gt;</ept>,</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150526T064441Z" creationid="haohang" creationdate="20150526T064441Z">
        <seg><bpt i="3" x="3">&lt;s3&gt;</bpt>'org.mycomp.package1'<ept i="3">&lt;/s3&gt;</ept>,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="3" x="3">&lt;s3&gt;</bpt>// Add a source directory using a File object<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T123633Z" creationid="msdx" creationdate="20141113T123633Z">
        <seg><bpt i="3" x="3">&lt;s3&gt;</bpt>// Add a source directory using a File object<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="3" x="3">&lt;s3&gt;</bpt>// Copy the output of copyTask<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T134202Z" creationid="msdx" creationdate="20141113T134202Z">
        <seg><bpt i="3" x="3">&lt;s3&gt;</bpt>// Copy the output of copyTask<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="3" x="3">&lt;s3&gt;</bpt>// Include the results from the `test` task in all subprojects<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T142811Z" creationid="msdx" creationdate="20150428T142811Z">
        <seg><bpt i="3" x="3">&lt;s3&gt;</bpt>// Include the results from the `test` task in all subprojects<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="3" x="3">&lt;s3&gt;</bpt>// path "/usr/bin/gcc"<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T091225Z" creationid="haohang" creationdate="20160408T091225Z">
        <seg><bpt i="3" x="3">&lt;s3&gt;</bpt>// path "/usr/bin/gcc"<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="3" x="3">&lt;s3&gt;</bpt>@OutputDirectory<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160816T145000Z" creationid="95" creationdate="20160816T145000Z">
        <seg><bpt i="3" x="3">&lt;s3&gt;</bpt>@OutputDirectory<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="3" x="3">&lt;s3&gt;</bpt>[<bpt i="4" x="4">&lt;a4&gt;</bpt>11<ept i="4">&lt;/a4&gt;</ept>]<ept i="3">&lt;/s3&gt;</ept> None of these directories need to exist or have anything in them; the Groovy plugin will simply compile whatever it finds.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T075101Z" creationid="msdx" creationdate="20150429T074832Z">
        <seg><bpt i="3" x="3">&lt;s3&gt;</bpt>[<bpt i="4" x="4">&lt;a4&gt;</bpt>11<ept i="4">&lt;/a4&gt;</ept>]<ept i="3">&lt;/s3&gt;</ept>这些目录不一定得存在或是里面包含有什么内容；Groovy 的插件只会进行编译，而不管它发现什么。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="3" x="3">&lt;s3&gt;</bpt>if<ept i="3">&lt;/s3&gt;</ept> (toolChain in Gcc) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160324T151758Z" creationid="95" creationdate="20160324T151758Z">
        <seg><bpt i="3" x="3">&lt;s3&gt;</bpt>if<ept i="3">&lt;/s3&gt;</ept> (toolChain in Gcc) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="3" x="3">&lt;s3&gt;</bpt>void<ept i="3">&lt;/s3&gt;</ept> apply(Project project) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T130730Z" creationid="95" creationdate="20160820T130730Z">
        <seg><bpt i="3" x="3">&lt;s3&gt;</bpt>void<ept i="3">&lt;/s3&gt;</ept> apply(Project project) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="47" x="47">&lt;s47&gt;</bpt>&lt;artifact<ept i="47">&lt;/s47&gt;</ept> <bpt i="48" x="48">&lt;s48&gt;</bpt>name<ept i="48">&lt;/s48&gt;</ept>=<bpt i="49" x="49">&lt;s49&gt;</bpt>"project1"<ept i="49">&lt;/s49&gt;</ept> <bpt i="50" x="50">&lt;s50&gt;</bpt>type<ept i="50">&lt;/s50&gt;</ept>=<bpt i="51" x="51">&lt;s51&gt;</bpt>"source"<ept i="51">&lt;/s51&gt;</ept> <bpt i="52" x="52">&lt;s52&gt;</bpt>ext<ept i="52">&lt;/s52&gt;</ept>=<bpt i="53" x="53">&lt;s53&gt;</bpt>"jar"<ept i="53">&lt;/s53&gt;</ept> <bpt i="54" x="54">&lt;s54&gt;</bpt>conf<ept i="54">&lt;/s54&gt;</ept>=<bpt i="55" x="55">&lt;s55&gt;</bpt>"runtime"<ept i="55">&lt;/s55&gt;</ept> <bpt i="56" x="56">&lt;s56&gt;</bpt>m:classifier<ept i="56">&lt;/s56&gt;</ept>=<bpt i="57" x="57">&lt;s57&gt;</bpt>"source"<ept i="57">&lt;/s57&gt;</ept> <bpt i="58" x="58">&lt;s58&gt;</bpt>xmlns:m<ept i="58">&lt;/s58&gt;</ept>=<bpt i="59" x="59">&lt;s59&gt;</bpt>"http://ant.apache.org/ivy/maven"<ept i="59">&lt;/s59&gt;</ept><bpt i="60" x="60">&lt;s60&gt;</bpt>/&gt;<ept i="60">&lt;/s60&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T154236Z" creationid="95" creationdate="20170330T154236Z">
        <seg><bpt i="47" x="47">&lt;s47&gt;</bpt>&lt;artifact<ept i="47">&lt;/s47&gt;</ept> <bpt i="48" x="48">&lt;s48&gt;</bpt>name<ept i="48">&lt;/s48&gt;</ept>=<bpt i="49" x="49">&lt;s49&gt;</bpt>"project1"<ept i="49">&lt;/s49&gt;</ept> <bpt i="50" x="50">&lt;s50&gt;</bpt>type<ept i="50">&lt;/s50&gt;</ept>=<bpt i="51" x="51">&lt;s51&gt;</bpt>"source"<ept i="51">&lt;/s51&gt;</ept> <bpt i="52" x="52">&lt;s52&gt;</bpt>ext<ept i="52">&lt;/s52&gt;</ept>=<bpt i="53" x="53">&lt;s53&gt;</bpt>"jar"<ept i="53">&lt;/s53&gt;</ept> <bpt i="54" x="54">&lt;s54&gt;</bpt>conf<ept i="54">&lt;/s54&gt;</ept>=<bpt i="55" x="55">&lt;s55&gt;</bpt>"runtime"<ept i="55">&lt;/s55&gt;</ept> <bpt i="56" x="56">&lt;s56&gt;</bpt>m:classifier<ept i="56">&lt;/s56&gt;</ept>=<bpt i="57" x="57">&lt;s57&gt;</bpt>"source"<ept i="57">&lt;/s57&gt;</ept> <bpt i="58" x="58">&lt;s58&gt;</bpt>xmlns:m<ept i="58">&lt;/s58&gt;</ept>=<bpt i="59" x="59">&lt;s59&gt;</bpt>"http://ant.apache.org/ivy/maven"<ept i="59">&lt;/s59&gt;</ept><bpt i="60" x="60">&lt;s60&gt;</bpt>/&gt;<ept i="60">&lt;/s60&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="4" x="4">&lt;s4&gt;</bpt>'org.mycomp.package2'<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150526T064442Z" creationid="haohang" creationdate="20150526T064442Z">
        <seg><bpt i="4" x="4">&lt;s4&gt;</bpt>'org.mycomp.package2'<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="4" x="4">&lt;s4&gt;</bpt>// Add the 'greeting' extension object<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T130731Z" creationid="95" creationdate="20160820T130731Z">
        <seg><bpt i="4" x="4">&lt;s4&gt;</bpt>// Add the 'greeting' extension object<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="4" x="4">&lt;s4&gt;</bpt>// Copy the output of a task<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T130951Z" creationid="msdx" creationdate="20141113T130951Z">
        <seg><bpt i="4" x="4">&lt;s4&gt;</bpt>// Copy the output of a task<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="4" x="4">&lt;s4&gt;</bpt>// Substitute property references in files<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T140844Z" creationid="msdx" creationdate="20141113T140844Z">
        <seg><bpt i="4" x="4">&lt;s4&gt;</bpt>// Substitute property references in files<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="4" x="4">&lt;s4&gt;</bpt>//following dependencies will become ear libs and placed in a dir configured via libDirName property<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T142850Z" creationid="msdx" creationdate="20150504T142850Z">
        <seg><bpt i="4" x="4">&lt;s4&gt;</bpt>//following dependencies will become ear libs and placed in a dir configured via libDirName property<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="4" x="4">&lt;s4&gt;</bpt>//include all integration tests<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083455Z" creationid="msdx" creationdate="20150428T083455Z">
        <seg><bpt i="4" x="4">&lt;s4&gt;</bpt>//include all integration tests<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="4" x="4">&lt;s4&gt;</bpt>//prefer different version which contains some necessary fixes<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T085802Z" creationid="95" creationdate="20151115T085802Z">
        <seg><bpt i="4" x="4">&lt;s4&gt;</bpt>//prefer different version which contains some necessary fixes<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="4" x="4">&lt;s4&gt;</bpt>@Input<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160816T145001Z" creationid="95" creationdate="20160816T145001Z">
        <seg><bpt i="4" x="4">&lt;s4&gt;</bpt>@Input<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="4" x="4">&lt;s4&gt;</bpt>if<ept i="4">&lt;/s4&gt;</ept> (classesDir.isDirectory()) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T093716Z" creationid="msdx" creationdate="20141109T093716Z">
        <seg><bpt i="4" x="4">&lt;s4&gt;</bpt>if<ept i="4">&lt;/s4&gt;</ept> (classesDir.isDirectory()) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="4" x="4">&lt;s4&gt;</bpt>if<ept i="4">&lt;/s4&gt;</ept> (details.baseValue != details.mergeValue) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T145617Z" creationid="msdx" creationdate="20150428T145617Z">
        <seg><bpt i="4" x="4">&lt;s4&gt;</bpt>if<ept i="4">&lt;/s4&gt;</ept> (details.baseValue != details.mergeValue) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="4" x="4">&lt;s4&gt;</bpt>if<ept i="4">&lt;/s4&gt;</ept> (details.requested.name == <bpt i="5" x="5">&lt;s5&gt;</bpt>'log4j'<ept i="5">&lt;/s5&gt;</ept>) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T090643Z" creationid="95" creationdate="20151115T090643Z">
        <seg><bpt i="4" x="4">&lt;s4&gt;</bpt>if<ept i="4">&lt;/s4&gt;</ept> (details.requested.name == <bpt i="5" x="5">&lt;s5&gt;</bpt>'log4j'<ept i="5">&lt;/s5&gt;</ept>) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="4" x="4">&lt;s4&gt;</bpt>if<ept i="4">&lt;/s4&gt;</ept> (state.failure) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T140116Z" creationid="95" creationdate="20160521T140116Z">
        <seg><bpt i="4" x="4">&lt;s4&gt;</bpt>if<ept i="4">&lt;/s4&gt;</ept> (state.failure) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="4" x="4">&lt;s4&gt;</bpt>public<ept i="4">&lt;/s4&gt;</ept> <bpt i="5" x="5">&lt;s5&gt;</bpt>void<ept i="5">&lt;/s5&gt;</ept> beforeExecute(Task task) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T154816Z" creationid="msdx" creationdate="20141116T154816Z">
        <seg><bpt i="4" x="4">&lt;s4&gt;</bpt>public<ept i="4">&lt;/s4&gt;</ept> <bpt i="5" x="5">&lt;s5&gt;</bpt>void<ept i="5">&lt;/s5&gt;</ept> beforeExecute(Task task) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="4" x="4">&lt;s4&gt;</bpt>void<ept i="4">&lt;/s4&gt;</ept> apply(Project project) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T131400Z" creationid="95" creationdate="20160820T131400Z">
        <seg><bpt i="4" x="4">&lt;s4&gt;</bpt>void<ept i="4">&lt;/s4&gt;</ept> apply(Project project) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="5" x="5">&lt;s5&gt;</bpt>// Add some source directories using a closure<ept i="5">&lt;/s5&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T123634Z" creationid="msdx" creationdate="20141113T123634Z">
        <seg><bpt i="5" x="5">&lt;s5&gt;</bpt>// Add some source directories using a closure<ept i="5">&lt;/s5&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="5" x="5">&lt;s5&gt;</bpt>// Copy the output of a task using Task outputs explicitly.<ept i="5">&lt;/s5&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T130953Z" creationid="msdx" creationdate="20141113T130953Z">
        <seg><bpt i="5" x="5">&lt;s5&gt;</bpt>// Copy the output of a task using Task outputs explicitly.<ept i="5">&lt;/s5&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="5" x="5">&lt;s5&gt;</bpt>// Use a regular expression to map the file name<ept i="5">&lt;/s5&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T140714Z" creationid="msdx" creationdate="20141113T140714Z">
        <seg><bpt i="5" x="5">&lt;s5&gt;</bpt>// Use a regular expression to map the file name<ept i="5">&lt;/s5&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="5" x="5">&lt;s5&gt;</bpt>&lt;echo&gt;<ept i="5">&lt;/s5&gt;</ept>Hello, from Ant<bpt i="6" x="6">&lt;s6&gt;</bpt>&lt;/echo&gt;<ept i="6">&lt;/s6&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T060916Z" creationid="msdx" creationdate="20141116T060916Z">
        <seg><bpt i="5" x="5">&lt;s5&gt;</bpt>&lt;echo&gt;<ept i="5">&lt;/s5&gt;</ept>Hello, from Ant<bpt i="6" x="6">&lt;s6&gt;</bpt>&lt;/echo&gt;<ept i="6">&lt;/s6&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="5" x="5">&lt;s5&gt;</bpt>&lt;info<ept i="5">&lt;/s5&gt;</ept> <bpt i="6" x="6">&lt;s6&gt;</bpt>organisation<ept i="6">&lt;/s6&gt;</ept>=<bpt i="7" x="7">&lt;s7&gt;</bpt>"org.gradle.sample"<ept i="7">&lt;/s7&gt;</ept> <bpt i="8" x="8">&lt;s8&gt;</bpt>module<ept i="8">&lt;/s8&gt;</ept>=<bpt i="9" x="9">&lt;s9&gt;</bpt>"project1"<ept i="9">&lt;/s9&gt;</ept> <bpt i="10" x="10">&lt;s10&gt;</bpt>revision<ept i="10">&lt;/s10&gt;</ept>=<bpt i="11" x="11">&lt;s11&gt;</bpt>"1.0"<ept i="11">&lt;/s11&gt;</ept> <bpt i="12" x="12">&lt;s12&gt;</bpt>status<ept i="12">&lt;/s12&gt;</ept>=<bpt i="13" x="13">&lt;s13&gt;</bpt>"integration"<ept i="13">&lt;/s13&gt;</ept> <bpt i="14" x="14">&lt;s14&gt;</bpt>publication<ept i="14">&lt;/s14&gt;</ept>=<bpt i="15" x="15">&lt;s15&gt;</bpt>"«PUBLICATION-TIME-STAMP»"<ept i="15">&lt;/s15&gt;</ept><bpt i="16" x="16">&lt;s16&gt;</bpt>&gt;<ept i="16">&lt;/s16&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T154222Z" creationid="95" creationdate="20170330T154222Z">
        <seg><bpt i="5" x="5">&lt;s5&gt;</bpt>&lt;info<ept i="5">&lt;/s5&gt;</ept> <bpt i="6" x="6">&lt;s6&gt;</bpt>organisation<ept i="6">&lt;/s6&gt;</ept>=<bpt i="7" x="7">&lt;s7&gt;</bpt>"org.gradle.sample"<ept i="7">&lt;/s7&gt;</ept> <bpt i="8" x="8">&lt;s8&gt;</bpt>module<ept i="8">&lt;/s8&gt;</ept>=<bpt i="9" x="9">&lt;s9&gt;</bpt>"project1"<ept i="9">&lt;/s9&gt;</ept> <bpt i="10" x="10">&lt;s10&gt;</bpt>revision<ept i="10">&lt;/s10&gt;</ept>=<bpt i="11" x="11">&lt;s11&gt;</bpt>"1.0"<ept i="11">&lt;/s11&gt;</ept> <bpt i="12" x="12">&lt;s12&gt;</bpt>status<ept i="12">&lt;/s12&gt;</ept>=<bpt i="13" x="13">&lt;s13&gt;</bpt>"integration"<ept i="13">&lt;/s13&gt;</ept> <bpt i="14" x="14">&lt;s14&gt;</bpt>publication<ept i="14">&lt;/s14&gt;</ept>=<bpt i="15" x="15">&lt;s15&gt;</bpt>"«PUBLICATION-TIME-STAMP»"<ept i="15">&lt;/s15&gt;</ept><bpt i="16" x="16">&lt;s16&gt;</bpt>&gt;<ept i="16">&lt;/s16&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="5" x="5">&lt;s5&gt;</bpt>@TaskAction<ept i="5">&lt;/s5&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160816T145006Z" creationid="95" creationdate="20160816T145002Z">
        <seg><bpt i="5" x="5">&lt;s5&gt;</bpt>@TaskAction<ept i="5">&lt;/s5&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="5" x="5">&lt;s5&gt;</bpt>if<ept i="5">&lt;/s5&gt;</ept> (details.key == <bpt i="6" x="6">&lt;s6&gt;</bpt>'foo'<ept i="6">&lt;/s6&gt;</ept>) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T145618Z" creationid="msdx" creationdate="20150428T145618Z">
        <seg><bpt i="5" x="5">&lt;s5&gt;</bpt>if<ept i="5">&lt;/s5&gt;</ept> (details.key == <bpt i="6" x="6">&lt;s6&gt;</bpt>'foo'<ept i="6">&lt;/s6&gt;</ept>) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="5" x="5">&lt;s5&gt;</bpt>void<ept i="5">&lt;/s5&gt;</ept> apply(Gradle gradle) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161215T144233Z" creationid="95" creationdate="20161215T144233Z">
        <seg><bpt i="5" x="5">&lt;s5&gt;</bpt>void<ept i="5">&lt;/s5&gt;</ept> apply(Gradle gradle) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="61" x="61">&lt;s61&gt;</bpt>&lt;/publications&gt;<ept i="61">&lt;/s61&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T154238Z" creationid="95" creationdate="20170330T154238Z">
        <seg><bpt i="61" x="61">&lt;s61&gt;</bpt>&lt;/publications&gt;<ept i="61">&lt;/s61&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="62" x="62">&lt;s62&gt;</bpt>&lt;dependencies&gt;<ept i="62">&lt;/s62&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T154239Z" creationid="95" creationdate="20170330T154239Z">
        <seg><bpt i="62" x="62">&lt;s62&gt;</bpt>&lt;dependencies&gt;<ept i="62">&lt;/s62&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="63" x="63">&lt;s63&gt;</bpt>&lt;dependency<ept i="63">&lt;/s63&gt;</ept> <bpt i="64" x="64">&lt;s64&gt;</bpt>org<ept i="64">&lt;/s64&gt;</ept>=<bpt i="65" x="65">&lt;s65&gt;</bpt>"junit"<ept i="65">&lt;/s65&gt;</ept> <bpt i="66" x="66">&lt;s66&gt;</bpt>name<ept i="66">&lt;/s66&gt;</ept>=<bpt i="67" x="67">&lt;s67&gt;</bpt>"junit"<ept i="67">&lt;/s67&gt;</ept> <bpt i="68" x="68">&lt;s68&gt;</bpt>rev<ept i="68">&lt;/s68&gt;</ept>=<bpt i="69" x="69">&lt;s69&gt;</bpt>"4.11"<ept i="69">&lt;/s69&gt;</ept> <bpt i="70" x="70">&lt;s70&gt;</bpt>conf<ept i="70">&lt;/s70&gt;</ept>=<bpt i="71" x="71">&lt;s71&gt;</bpt>"runtime-&amp;gt;default"<ept i="71">&lt;/s71&gt;</ept><bpt i="72" x="72">&lt;s72&gt;</bpt>/&gt;<ept i="72">&lt;/s72&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T154242Z" creationid="95" creationdate="20170330T154242Z">
        <seg><bpt i="63" x="63">&lt;s63&gt;</bpt>&lt;dependency<ept i="63">&lt;/s63&gt;</ept> <bpt i="64" x="64">&lt;s64&gt;</bpt>org<ept i="64">&lt;/s64&gt;</ept>=<bpt i="65" x="65">&lt;s65&gt;</bpt>"junit"<ept i="65">&lt;/s65&gt;</ept> <bpt i="66" x="66">&lt;s66&gt;</bpt>name<ept i="66">&lt;/s66&gt;</ept>=<bpt i="67" x="67">&lt;s67&gt;</bpt>"junit"<ept i="67">&lt;/s67&gt;</ept> <bpt i="68" x="68">&lt;s68&gt;</bpt>rev<ept i="68">&lt;/s68&gt;</ept>=<bpt i="69" x="69">&lt;s69&gt;</bpt>"4.11"<ept i="69">&lt;/s69&gt;</ept> <bpt i="70" x="70">&lt;s70&gt;</bpt>conf<ept i="70">&lt;/s70&gt;</ept>=<bpt i="71" x="71">&lt;s71&gt;</bpt>"runtime-&amp;gt;default"<ept i="71">&lt;/s71&gt;</ept><bpt i="72" x="72">&lt;s72&gt;</bpt>/&gt;<ept i="72">&lt;/s72&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="6" x="6">&lt;s6&gt;</bpt>// Add a task that uses the configuration<ept i="6">&lt;/s6&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T130733Z" creationid="95" creationdate="20160820T130733Z">
        <seg><bpt i="6" x="6">&lt;s6&gt;</bpt>// Add a task that uses the configuration<ept i="6">&lt;/s6&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="6" x="6">&lt;s6&gt;</bpt>// Copy the contents of a Zip file<ept i="6">&lt;/s6&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T130955Z" creationid="msdx" creationdate="20141113T130955Z">
        <seg><bpt i="6" x="6">&lt;s6&gt;</bpt>// Copy the contents of a Zip file<ept i="6">&lt;/s6&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="6" x="6">&lt;s6&gt;</bpt>// ONLY USE ENTERPRISE REPO FOR DEPENDENCIES<ept i="6">&lt;/s6&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161215T144233Z" creationid="95" creationdate="20161215T144233Z">
        <seg><bpt i="6" x="6">&lt;s6&gt;</bpt>// ONLY USE ENTERPRISE REPO FOR DEPENDENCIES<ept i="6">&lt;/s6&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="6" x="6">&lt;s6&gt;</bpt>// do something<ept i="6">&lt;/s6&gt;</ept>
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T093722Z" creationid="msdx" creationdate="20141109T093722Z">
        <seg><bpt i="6" x="6">&lt;s6&gt;</bpt>// do something<ept i="6">&lt;/s6&gt;</ept>
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="6" x="6">&lt;s6&gt;</bpt>//prefer 'log4j-over-slf4j' over 'log4j', with fixed version:<ept i="6">&lt;/s6&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T090644Z" creationid="95" creationdate="20151115T090644Z">
        <seg><bpt i="6" x="6">&lt;s6&gt;</bpt>//prefer 'log4j-over-slf4j' over 'log4j', with fixed version:<ept i="6">&lt;/s6&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="6" x="6">&lt;s6&gt;</bpt>@TaskAction<ept i="6">&lt;/s6&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T151535Z" creationid="95" creationdate="20160814T151535Z">
        <seg><bpt i="6" x="6">&lt;s6&gt;</bpt>@TaskAction<ept i="6">&lt;/s6&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="6" x="6">&lt;s6&gt;</bpt>[<bpt i="7" x="7">&lt;a7&gt;</bpt>18<ept i="7">&lt;/a7&gt;</ept>]<ept i="6">&lt;/s6&gt;</ept> Execution of these tasks will build or upload the artifacts belonging to the respective configuration.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151221T141633Z" creationid="95" creationdate="20151221T141633Z">
        <seg><bpt i="6" x="6">&lt;s6&gt;</bpt>[<bpt i="7" x="7">&lt;a7&gt;</bpt>18<ept i="7">&lt;/a7&gt;</ept>]<ept i="6">&lt;/s6&gt;</ept>这些任务的执行将会构建或上传属于各自配置的构件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="6" x="6">&lt;s6&gt;</bpt>[<bpt i="7" x="7">&lt;a7&gt;</bpt>22<ept i="7">&lt;/a7&gt;</ept>]<ept i="6">&lt;/s6&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T083719Z" creationid="haohang" creationdate="20160726T083719Z">
        <seg><bpt i="6" x="6">&lt;s6&gt;</bpt>[<bpt i="7" x="7">&lt;a7&gt;</bpt>22<ept i="7">&lt;/a7&gt;</ept>]<ept i="6">&lt;/s6&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="6" x="6">&lt;s6&gt;</bpt>[<bpt i="7" x="7">&lt;a7&gt;</bpt>24<ept i="7">&lt;/a7&gt;</ept>]<ept i="6">&lt;/s6&gt;</ept> With those elements, and keeping in mind that Gradle has a distinct configuration and execution phase, you have already a lot of flexibility.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160727T054011Z" creationid="haohang" creationdate="20160727T053929Z">
        <seg><bpt i="6" x="6">&lt;s6&gt;</bpt>[<bpt i="7" x="7">&lt;a7&gt;</bpt>24<ept i="7">&lt;/a7&gt;</ept>]<ept i="6">&lt;/s6&gt;</ept> 使用这些元素，并记住 Gradle 具有不同的配置和执行阶段，你就已经可以很灵活地使用它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="6" x="6">&lt;s6&gt;</bpt>[<bpt i="7" x="7">&lt;a7&gt;</bpt>6<ept i="7">&lt;/a7&gt;</ept>]<ept i="6">&lt;/s6&gt;</ept> If the environment property follows the pattern <bpt i="8" x="8">&lt;c8&gt;</bpt>ORG_GRADLE_PROJECT_<bpt i="9" x="9">&lt;e9&gt;</bpt><bpt i="10" x="10">&lt;c10&gt;</bpt>propertyName<ept i="10">&lt;/c10&gt;</ept><ept i="9">&lt;/e9&gt;</ept>=somevalue<ept i="8">&lt;/c8&gt;</ept>, <bpt i="11" x="11">&lt;c11&gt;</bpt>propertyName<ept i="11">&lt;/c11&gt;</ept> is added to your project object.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T145631Z" creationid="msdx" creationdate="20141109T141951Z">
        <seg><bpt i="6" x="6">&lt;s6&gt;</bpt>[<bpt i="7" x="7">&lt;a7&gt;</bpt>6<ept i="7">&lt;/a7&gt;</ept>]<ept i="6">&lt;/s6&gt;</ept>如果环境属性遵循<bpt i="8" x="8">&lt;c8&gt;</bpt>ORG_GRADLE_PROJECT_<bpt i="9" x="9">&lt;e9&gt;</bpt><bpt i="10" x="10">&lt;c10&gt;</bpt>propertyName<ept i="10">&lt;/c10&gt;</ept><ept i="9">&lt;/e9&gt;</ept>= somevalue<ept i="8">&lt;/c8&gt;</ept>的模式，这里的<bpt i="11" x="11">&lt;c11&gt;</bpt>propertyName<ept i="11">&lt;/c11&gt;</ept>会被添加到您的项目对象中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="6" x="6">&lt;s6&gt;</bpt>else<ept i="6">&lt;/s6&gt;</ept> {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T140119Z" creationid="95" creationdate="20160521T140119Z">
        <seg><bpt i="6" x="6">&lt;s6&gt;</bpt>else<ept i="6">&lt;/s6&gt;</ept> {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="6" x="6">&lt;s6&gt;</bpt>if<ept i="6">&lt;/s6&gt;</ept> (flavor == flavors.failing) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160504T151357Z" creationid="95" creationdate="20160504T151357Z">
        <seg><bpt i="6" x="6">&lt;s6&gt;</bpt>if<ept i="6">&lt;/s6&gt;</ept> (flavor == flavors.failing) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="6" x="6">&lt;s6&gt;</bpt>void<ept i="6">&lt;/s6&gt;</ept> execute(IncrementalTaskInputs inputs) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160816T145003Z" creationid="95" creationdate="20160816T145003Z">
        <seg><bpt i="6" x="6">&lt;s6&gt;</bpt>void<ept i="6">&lt;/s6&gt;</ept> execute(IncrementalTaskInputs inputs) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="73" x="73">&lt;s73&gt;</bpt>&lt;dependency<ept i="73">&lt;/s73&gt;</ept> <bpt i="74" x="74">&lt;s74&gt;</bpt>org<ept i="74">&lt;/s74&gt;</ept>=<bpt i="75" x="75">&lt;s75&gt;</bpt>"org.gradle.sample"<ept i="75">&lt;/s75&gt;</ept> <bpt i="76" x="76">&lt;s76&gt;</bpt>name<ept i="76">&lt;/s76&gt;</ept>=<bpt i="77" x="77">&lt;s77&gt;</bpt>"project2"<ept i="77">&lt;/s77&gt;</ept> <bpt i="78" x="78">&lt;s78&gt;</bpt>rev<ept i="78">&lt;/s78&gt;</ept>=<bpt i="79" x="79">&lt;s79&gt;</bpt>"1.0"<ept i="79">&lt;/s79&gt;</ept> <bpt i="80" x="80">&lt;s80&gt;</bpt>conf<ept i="80">&lt;/s80&gt;</ept>=<bpt i="81" x="81">&lt;s81&gt;</bpt>"runtime-&amp;gt;default"<ept i="81">&lt;/s81&gt;</ept><bpt i="82" x="82">&lt;s82&gt;</bpt>/&gt;<ept i="82">&lt;/s82&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T154243Z" creationid="95" creationdate="20170330T154243Z">
        <seg><bpt i="73" x="73">&lt;s73&gt;</bpt>&lt;dependency<ept i="73">&lt;/s73&gt;</ept> <bpt i="74" x="74">&lt;s74&gt;</bpt>org<ept i="74">&lt;/s74&gt;</ept>=<bpt i="75" x="75">&lt;s75&gt;</bpt>"org.gradle.sample"<ept i="75">&lt;/s75&gt;</ept> <bpt i="76" x="76">&lt;s76&gt;</bpt>name<ept i="76">&lt;/s76&gt;</ept>=<bpt i="77" x="77">&lt;s77&gt;</bpt>"project2"<ept i="77">&lt;/s77&gt;</ept> <bpt i="78" x="78">&lt;s78&gt;</bpt>rev<ept i="78">&lt;/s78&gt;</ept>=<bpt i="79" x="79">&lt;s79&gt;</bpt>"1.0"<ept i="79">&lt;/s79&gt;</ept> <bpt i="80" x="80">&lt;s80&gt;</bpt>conf<ept i="80">&lt;/s80&gt;</ept>=<bpt i="81" x="81">&lt;s81&gt;</bpt>"runtime-&amp;gt;default"<ept i="81">&lt;/s81&gt;</ept><bpt i="82" x="82">&lt;s82&gt;</bpt>/&gt;<ept i="82">&lt;/s82&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="7" x="7">&lt;s7&gt;</bpt>"CHANGED inputs considered out of date"<ept i="7">&lt;/s7&gt;</ept> : <bpt i="8" x="8">&lt;s8&gt;</bpt>"ALL inputs considered out of date"<ept i="8">&lt;/s8&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160816T145025Z" creationid="95" creationdate="20160816T145025Z">
        <seg><bpt i="7" x="7">&lt;s7&gt;</bpt>"CHANGED inputs considered out of date"<ept i="7">&lt;/s7&gt;</ept> : <bpt i="8" x="8">&lt;s8&gt;</bpt>"ALL inputs considered out of date"<ept i="8">&lt;/s8&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="7" x="7">&lt;s7&gt;</bpt>// Use some of the filters provided by Ant<ept i="7">&lt;/s7&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T140847Z" creationid="msdx" creationdate="20141113T140847Z">
        <seg><bpt i="7" x="7">&lt;s7&gt;</bpt>// Use some of the filters provided by Ant<ept i="7">&lt;/s7&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="7" x="7">&lt;s7&gt;</bpt>//remove all repositories not pointing to the enterprise repository url<ept i="7">&lt;/s7&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161215T144235Z" creationid="95" creationdate="20161215T144235Z">
        <seg><bpt i="7" x="7">&lt;s7&gt;</bpt>//remove all repositories not pointing to the enterprise repository url<ept i="7">&lt;/s7&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="7" x="7">&lt;s7&gt;</bpt>&lt;/target&gt;<ept i="7">&lt;/s7&gt;</ept>
<bpt i="8" x="8">&lt;s8&gt;</bpt>&lt;/project&gt;<ept i="8">&lt;/s8&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T060916Z" creationid="msdx" creationdate="20141116T060916Z">
        <seg><bpt i="7" x="7">&lt;s7&gt;</bpt>&lt;/target&gt;<ept i="7">&lt;/s7&gt;</ept>
<bpt i="8" x="8">&lt;s8&gt;</bpt>&lt;/project&gt;<ept i="8">&lt;/s8&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="7" x="7">&lt;s7&gt;</bpt>&lt;echo&gt;<ept i="7">&lt;/s7&gt;</ept>Hello, from Ant<bpt i="8" x="8">&lt;s8&gt;</bpt>&lt;/echo&gt;<ept i="8">&lt;/s8&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T061145Z" creationid="msdx" creationdate="20141116T061145Z">
        <seg><bpt i="7" x="7">&lt;s7&gt;</bpt>&lt;echo&gt;<ept i="7">&lt;/s7&gt;</ept>Hello, from Ant<bpt i="8" x="8">&lt;s8&gt;</bpt>&lt;/echo&gt;<ept i="8">&lt;/s8&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="7" x="7">&lt;s7&gt;</bpt>final<ept i="7">&lt;/s7&gt;</ept> String name</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T015246Z" creationid="95" creationdate="20161211T015246Z">
        <seg><bpt i="7" x="7">&lt;s7&gt;</bpt>final<ept i="7">&lt;/s7&gt;</ept> String name</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="7" x="7">&lt;s7&gt;</bpt>public<ept i="7">&lt;/s7&gt;</ept> <bpt i="8" x="8">&lt;s8&gt;</bpt>void<ept i="8">&lt;/s8&gt;</ept> afterExecute(Task task, TaskState state) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T154818Z" creationid="msdx" creationdate="20141116T154818Z">
        <seg><bpt i="7" x="7">&lt;s7&gt;</bpt>public<ept i="7">&lt;/s7&gt;</ept> <bpt i="8" x="8">&lt;s8&gt;</bpt>void<ept i="8">&lt;/s8&gt;</ept> afterExecute(Task task, TaskState state) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="83" x="83">&lt;s83&gt;</bpt>&lt;/dependencies&gt;<ept i="83">&lt;/s83&gt;</ept>
<bpt i="84" x="84">&lt;s84&gt;</bpt>&lt;/ivy-module&gt;<ept i="84">&lt;/s84&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T154244Z" creationid="95" creationdate="20170330T154244Z">
        <seg><bpt i="83" x="83">&lt;s83&gt;</bpt>&lt;/dependencies&gt;<ept i="83">&lt;/s83&gt;</ept>
<bpt i="84" x="84">&lt;s84&gt;</bpt>&lt;/ivy-module&gt;<ept i="84">&lt;/s84&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="8" x="8">&lt;s8&gt;</bpt>// Determine the destination directory later<ept i="8">&lt;/s8&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T130957Z" creationid="msdx" creationdate="20141113T130957Z">
        <seg><bpt i="8" x="8">&lt;s8&gt;</bpt>// Determine the destination directory later<ept i="8">&lt;/s8&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="8" x="8">&lt;s8&gt;</bpt>if<ept i="8">&lt;/s8&gt;</ept> (!(repo <bpt i="9" x="9">&lt;s9&gt;</bpt>instanceof<ept i="9">&lt;/s9&gt;</ept> MavenArtifactRepository) || repo.url.toString() != ENTERPRISE_REPOSITORY_URL) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161215T144237Z" creationid="95" creationdate="20161215T144237Z">
        <seg><bpt i="8" x="8">&lt;s8&gt;</bpt>if<ept i="8">&lt;/s8&gt;</ept> (!(repo <bpt i="9" x="9">&lt;s9&gt;</bpt>instanceof<ept i="9">&lt;/s9&gt;</ept> MavenArtifactRepository) || repo.url.toString() != ENTERPRISE_REPOSITORY_URL) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="8" x="8">&lt;s8&gt;</bpt>if<ept i="8">&lt;/s8&gt;</ept> (toolChain in VisualCpp) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160324T151800Z" creationid="95" creationdate="20160324T151800Z">
        <seg><bpt i="8" x="8">&lt;s8&gt;</bpt>if<ept i="8">&lt;/s8&gt;</ept> (toolChain in VisualCpp) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="8" x="8">&lt;s8&gt;</bpt>this<ept i="8">&lt;/s8&gt;</ept>.name = name</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T015249Z" creationid="95" creationdate="20161211T015249Z">
        <seg><bpt i="8" x="8">&lt;s8&gt;</bpt>this<ept i="8">&lt;/s8&gt;</ept>.name = name</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="9" x="9">&lt;s9&gt;</bpt>&lt;/target&gt;<ept i="9">&lt;/s9&gt;</ept>
<bpt i="10" x="10">&lt;s10&gt;</bpt>&lt;/project&gt;<ept i="10">&lt;/s10&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T061145Z" creationid="msdx" creationdate="20141116T061145Z">
        <seg><bpt i="9" x="9">&lt;s9&gt;</bpt>&lt;/target&gt;<ept i="9">&lt;/s9&gt;</ept>
<bpt i="10" x="10">&lt;s10&gt;</bpt>&lt;/project&gt;<ept i="10">&lt;/s10&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg><bpt i="9" x="9">&lt;s9&gt;</bpt>public<ept i="9">&lt;/s9&gt;</ept> <bpt i="10" x="10">&lt;s10&gt;</bpt>void<ept i="10">&lt;/s10&gt;</ept> buildFinished(BuildResult result) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T154819Z" creationid="msdx" creationdate="20141116T154819Z">
        <seg><bpt i="9" x="9">&lt;s9&gt;</bpt>public<ept i="9">&lt;/s9&gt;</ept> <bpt i="10" x="10">&lt;s10&gt;</bpt>void<ept i="10">&lt;/s10&gt;</ept> buildFinished(BuildResult result) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle --init-script init.gradle -q doNothing
2 / 5</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161215T144121Z" creationid="95" creationdate="20161215T144121Z">
        <seg>&gt; gradle --init-script init.gradle -q doNothing
2 / 5</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle --init-script init.gradle -q showRepos
All repos:
[MavenLocal, MavenRepo]</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161215T143428Z" creationid="95" creationdate="20161215T143428Z">
        <seg>&gt; gradle --init-script init.gradle -q showRepos
All repos:
[MavenLocal, MavenRepo]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -I init.gradle build
[compile]
compiling source

[testCompile]
compiling test source

[test]
running unit tests

[build]

build completed</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T154831Z" creationid="msdx" creationdate="20141116T154831Z">
        <seg>&gt; gradle -I init.gradle build
[compile]
compiling source

[testCompile]
compiling test source

[test]
running unit tests

[build]

build completed</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -a :api:build
:api:compileJava
:api:processResources
:api:classes
:api:jar
:api:assemble
:api:compileTestJava
:api:processTestResources
:api:testClasses
:api:test
:api:check
:api:build

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160727T051922Z" creationid="haohang" creationdate="20160727T051922Z">
        <seg>-&gt; gradle :api:build
:shared:compileJava
:shared:processResources
:shared:classes
:shared:jar
:api:compileJava
:api:processResources
:api:classes
:api:jar
:api:assemble
:api:compileTestJava
:api:processTestResources
:api:testClasses
:api:test
:api:check
:api:build

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q -I init.gradle showRepositories
repository: STANDARD_ENTERPRISE_REPO ('http://repo.gradle.org/gradle/repo')</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161215T144258Z" creationid="95" creationdate="20161215T144258Z">
        <seg>&gt; gradle -q -I init.gradle showRepositories
repository: STANDARD_ENTERPRISE_REPO ('http://repo.gradle.org/gradle/repo')</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q -PcommandLineProjectProp=commandLineProjectPropValue -Dorg.gradle.project.systemProjectProp=systemPropertyValue printProps
commandLineProjectPropValue
gradlePropertiesValue
systemPropertyValue
envPropertyValue
systemValue</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T151221Z" creationid="msdx" creationdate="20141109T151221Z">
        <seg>&gt; gradle -q -PcommandLineProjectProp=commandLineProjectPropValue -Dorg.gradle.project.systemProjectProp=systemPropertyValue printProps
commandLineProjectPropValue
gradlePropertiesValue
systemPropertyValue
envPropertyValue
systemValue</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q -PtaskInputProperty=changed incrementalReverse
ALL inputs considered out of date
out of date: 1.txt
out of date: 2.txt
out of date: 3.txt</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160817T150821Z" creationid="95" creationdate="20160817T150821Z">
        <seg>&gt; gradle -q -PtaskInputProperty=changed incrementalReverse
ALL inputs considered out of date
out of date: 1.txt
out of date: 2.txt
out of date: 3.txt</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q :hello :krill:hello hello
I'm water
I'm krill
- I depend on water
- The weight of my species in summer is twice as heavy as all human beings.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160715T091719Z" creationid="haohang" creationdate="20160715T091719Z">
        <seg>&gt; gradle -q :hello :krill:hello hello
I'm water
I'm krill
- I depend on water
- The weight of my species in summer is twice as heavy as all human beings.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q a
source dir is src/main/java</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T135109Z" creationid="95" creationdate="20160521T135109Z">
        <seg>&gt; gradle -q a
source dir is src/main/java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q action
Consuming message: null</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T070720Z" creationid="haohang" creationdate="20160718T070720Z">
        <seg>&gt; gradle -q action
Consuming message: null</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q action
Consuming message: null
Producing message:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T062416Z" creationid="haohang" creationdate="20160718T062416Z">
        <seg>&gt; gradle -q action
Consuming message: null
Producing message:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q action
Producing message:
Consuming message: Watch the order of execution.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T070218Z" creationid="haohang" creationdate="20160718T070218Z">
        <seg>&gt; gradle -q action
Producing message:
Consuming message: Watch the order of execution.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q allFiles
orca-1.0.jar
shark-1.0.jar
tuna-1.0.jar
herring-1.0.jar
seal-2.0.jar</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T034620Z" creationid="haohang" creationdate="20150807T034620Z">
        <seg>&gt; gradle -q allFiles
orca-1.0.jar
shark-1.0.jar
tuna-1.0.jar
herring-1.0.jar
seal-2.0.jar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q books
developerGuide -&gt; /home/user/gradle/samples/userguide/organizeBuildLogic/customPluginWithDomainObjectContainer/src/docs/developerGuide
quickStart -&gt; /home/user/gradle/samples/userguide/organizeBuildLogic/customPluginWithDomainObjectContainer/src/docs/quick-start
userGuide -&gt; /home/user/gradle/samples/userguide/organizeBuildLogic/customPluginWithDomainObjectContainer/src/docs/userGuide</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T015257Z" creationid="95" creationdate="20161211T015257Z">
        <seg>&gt; gradle -q books
developerGuide -&gt; /home/user/gradle/samples/userguide/organizeBuildLogic/customPluginWithDomainObjectContainer/src/docs/developerGuide
quickStart -&gt; /home/user/gradle/samples/userguide/organizeBuildLogic/customPluginWithDomainObjectContainer/src/docs/quick-start
userGuide -&gt; /home/user/gradle/samples/userguide/organizeBuildLogic/customPluginWithDomainObjectContainer/src/docs/userGuide</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q broken
executing task ':ok' ...
done
executing task ':broken' ...</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T140131Z" creationid="95" creationdate="20160521T140131Z">
        <seg>&gt; gradle -q broken
executing task ':ok' ...
done
executing task ':broken' ...</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q build
hello from the other build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161212T153550Z" creationid="95" creationdate="20161212T153550Z">
        <seg>&gt; gradle -q build
hello from the other build.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q check
projectApi
projectApi</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T043159Z" creationid="msdx" creationdate="20141108T043159Z">
        <seg>&gt; gradle -q check
projectApi
projectApi</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q compile
The class directory exists.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T093725Z" creationid="msdx" creationdate="20141109T093725Z">
        <seg>&gt; gradle -q compile
The class directory exists.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q configure
1
5</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T152822Z" creationid="msdx" creationdate="20141109T152822Z">
        <seg>&gt; gradle -q configure
1
5</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q consume
Consuming message: Watch the order of evaluation.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T075005Z" creationid="haohang" creationdate="20160718T075005Z">
        <seg>&gt; gradle -q consume
Consuming message: Watch the order of evaluation.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q consume
Consuming message: null</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T072800Z" creationid="haohang" creationdate="20160718T072800Z">
        <seg>&gt; gradle -q consume
Consuming message: null</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q consume
Producing message:
Consuming message: Watch the order of execution.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T072056Z" creationid="haohang" creationdate="20160718T072056Z">
        <seg>-&gt; gradle -q action
Producing message:
Consuming message: Watch the order of execution.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q copy
I am the new one.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T015907Z" creationid="msdx" creationdate="20141111T015907Z">
        <seg>&gt; gradle -q copy
I am the new one.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q copy
albatros
shark
tuna

albatros</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T040605Z" creationid="haohang" creationdate="20150807T040605Z">
        <seg>&gt; gradle -q copy
albatros
shark
tuna

albatros</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q copyVsFiles
orca-1.0.jar
seal-1.0.jar

orca-1.0.jar
seal-2.0.jar</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T041259Z" creationid="haohang" creationdate="20150807T041259Z">
        <seg>&gt; gradle -q copyVsFiles
orca-1.0.jar
seal-1.0.jar

orca-1.0.jar
seal-2.0.jar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q dependencies
albatros

albatros
orca
shark
tuna

albatros
shark
tuna</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T034419Z" creationid="haohang" creationdate="20150807T034419Z">
        <seg>&gt; gradle -q dependencies
albatros

albatros
orca
shark
tuna

albatros
shark
tuna</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q distanceToIceberg
20 nautical miles
5 nautical miles</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160715T080007Z" creationid="haohang" creationdate="20160715T080007Z">
        <seg>&gt; gradle -q distanceToIceberg
20 nautical miles
5 nautical miles</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q encode
aGVsbG8gd29ybGQK</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161212T154712Z" creationid="95" creationdate="20161212T154712Z">
        <seg>&gt; gradle -q encode
aGVsbG8gd29ybGQK</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q files
orca-1.0.jar
seal-2.0.jar</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T034750Z" creationid="haohang" creationdate="20150807T034750Z">
        <seg>&gt; gradle -q files
orca-1.0.jar
seal-2.0.jar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q groupPing
Pinging: Server1
Pinging: Server2</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T065657Z" creationid="msdx" creationdate="20141111T065657Z">
        <seg>&gt; gradle -q groupPing
Pinging: Server1
Pinging: Server2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q hello
:hello
:hello
:projectA:hello
:projectA:hello</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T082200Z" creationid="msdx" creationdate="20141110T082200Z">
        <seg>&gt; gradle -q hello
:hello
:hello
:projectA:hello
:projectA:hello</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q hello
Hello from the GreetingPlugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T123828Z" creationid="95" creationdate="20160820T123828Z">
        <seg>&gt; gradle -q hello
Hello from the GreetingPlugin</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q hello
Hi from Gradle</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T130742Z" creationid="95" creationdate="20160820T130742Z">
        <seg>&gt; gradle -q hello
Hi from Gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q hello
I'm bluewhale
- I depend on water
- I'm the largest animal that has ever lived on this planet.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160530T152047Z" creationid="95" creationdate="20160530T152047Z">
        <seg>&gt; gradle -q hello
I'm bluewhale
- I depend on water
- I'm the largest animal that has ever lived on this planet.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q hello
I'm water
I'm bluewhale</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160522T125912Z" creationid="95" creationdate="20160522T125912Z">
        <seg>&gt; gradle -q hello
I'm water
I'm bluewhale</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q hello
I'm water
I'm bluewhale
- I depend on water
- I love to spend time in the arctic waters.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160527T163822Z" creationid="95" creationdate="20160527T163822Z">
        <seg>&gt; gradle -q hello
I'm water
I'm bluewhale
- I depend on water
- I love to spend time in the arctic waters.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q hello
I'm water
I'm bluewhale
- I depend on water
- I'm the largest animal that has ever lived on this planet.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160527T162903Z" creationid="95" creationdate="20160527T162903Z">
        <seg>&gt; gradle -q hello
I'm water
I'm bluewhale
- I depend on water
- I'm the largest animal that has ever lived on this planet.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q hello
I'm water
I'm bluewhale
- I depend on water
I'm krill
- I depend on water</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160527T162359Z" creationid="95" creationdate="20160527T162359Z">
        <seg>&gt; gradle -q hello
I'm water
I'm bluewhale
- I depend on water
I'm krill
- I depend on water</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q hello
I'm water
I'm bluewhale
I'm krill</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160527T161033Z" creationid="95" creationdate="20160527T161033Z">
        <seg>&gt; gradle -q hello
I'm water
I'm bluewhale
I'm krill</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q hello
configuring root project 'configureProjectUsingScript'
hello from other script</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T152459Z" creationid="msdx" creationdate="20141109T152459Z">
        <seg>&gt; gradle -q hello
configuring root project 'configureProjectUsingScript'
hello from other script</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q hello
hello from GreetingTask</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T145747Z" creationid="95" creationdate="20160814T145747Z">
        <seg>&gt; gradle -q hello
hello from GreetingTask</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q hello greeting
hello from GreetingTask
greetings from GreetingTask</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T151606Z" creationid="95" creationdate="20160814T151606Z">
        <seg>&gt; gradle -q hello greeting
hello from GreetingTask
greetings from GreetingTask</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q incrementalReverse</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160817T145930Z" creationid="95" creationdate="20160817T145930Z">
        <seg>&gt; gradle -q incrementalReverse</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q incrementalReverse
ALL inputs considered out of date
out of date: 1.txt
out of date: 2.txt
out of date: 3.txt</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160817T145728Z" creationid="95" creationdate="20160817T145728Z">
        <seg>&gt; gradle -q incrementalReverse
ALL inputs considered out of date
out of date: 1.txt
out of date: 2.txt
out of date: 3.txt</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q list
Contents of src
src/dir1
src/file1.txt
Contents of src2
src2/dir1
src2/dir2</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T160903Z" creationid="msdx" creationdate="20141112T160903Z">
        <seg>&gt; gradle -q list
Contents of src
src/dir1
src/file1.txt
Contents of src2
src2/dir1
src2/dir2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q list
compiling classes
classpath = [classes]</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T094505Z" creationid="haohang" creationdate="20150801T094505Z">
        <seg>&gt; gradle -q list
compiling classes
classpath = [classes]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q listBirds
albatros-2.0.jar</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T041840Z" creationid="95" creationdate="20151129T041840Z">
        <seg>&gt; gradle -q listBirds
albatros-2.0.jar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q listFish
tuna-1.5.jar

tuna-1.4.jar</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T041654Z" creationid="95" creationdate="20151129T041654Z">
        <seg>&gt; gradle -q listFish
tuna-1.5.jar

tuna-1.4.jar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q listJars
hibernate-core-3.6.7.Final.jar
antlr-2.7.6.jar
commons-collections-3.1.jar
dom4j-1.6.1.jar
hibernate-commons-annotations-3.2.0.Final.jar
hibernate-jpa-2.0-api-1.0.1.Final.jar
jta-1.1.jar
slf4j-api-1.6.1.jar</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T091218Z" creationid="haohang" creationdate="20150801T091218Z">
        <seg>&gt; gradle -q listJars
hibernate-core-3.6.7.Final.jar
antlr-2.7.6.jar
commons-collections-3.1.jar
dom4j-1.6.1.jar
hibernate-commons-annotations-3.2.0.Final.jar
hibernate-jpa-2.0-api-1.0.1.Final.jar
jta-1.1.jar
slf4j-api-1.6.1.jar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q myTask
I am not affected</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T055304Z" creationid="msdx" creationdate="20141111T055304Z">
        <seg>&gt; gradle -q myTask
I am not affected</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q myZip
customName-1.0.zip</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T155548Z" creationid="msdx" creationdate="20141113T155548Z">
        <seg>&gt; gradle -q myZip
customName-1.0.zip</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q myZip
gradle-wrapper-1.0-src.zip</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T155804Z" creationid="msdx" creationdate="20141113T155804Z">
        <seg>&gt; gradle -q myZip
gradle-wrapper-1.0-src.zip</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q myZip
zipProject-1.0.zip
build/distributions
build/distributions/zipProject-1.0.zip</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T154747Z" creationid="msdx" creationdate="20141113T154747Z">
        <seg>&gt; gradle -q myZip
zipProject-1.0.zip
build/distributions
build/distributions/zipProject-1.0.zip</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q pingServer1
Pinging: Server1</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T065022Z" creationid="msdx" creationdate="20141111T065022Z">
        <seg>&gt; gradle -q pingServer1
Pinging: Server1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q printProperties
3.1.0.RELEASE
build@master.org
main
plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150710T012944Z" creationid="haohang" creationdate="20150710T012944Z">
        <seg>&gt; gradle -q printProperties
3.1.0.RELEASE
build@master.org
main
plugin</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q removeInput incrementalReverse
CHANGED inputs considered out of date
removed: 3.txt</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160817T150312Z" creationid="95" creationdate="20160817T150312Z">
        <seg>&gt; gradle -q removeInput incrementalReverse
CHANGED inputs considered out of date
removed: 3.txt</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q removeOutput incrementalReverse
ALL inputs considered out of date
out of date: 1.txt
out of date: 2.txt
out of date: 3.txt</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160817T150500Z" creationid="95" creationdate="20160817T150500Z">
        <seg>&gt; gradle -q removeOutput incrementalReverse
ALL inputs considered out of date
out of date: 1.txt
out of date: 2.txt
out of date: 3.txt</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q runFailingOperatorsTestCUnitExe

There were test failures:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160504T151528Z" creationid="95" creationdate="20160504T151528Z">
        <seg>&gt; gradle -q runFailingOperatorsTestCUnitExe

There were test failures:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q sayGreeting
Hello!</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T132307Z" creationid="95" creationdate="20160820T132307Z">
        <seg>&gt; gradle -q sayGreeting
Hello!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q show
build/classes/main
build/resources/main</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141123T151139Z" creationid="msdx" creationdate="20141123T151139Z">
        <seg>&gt; gradle -q show
build/classes/main
build/resources/main</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q show
build/output/classes</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141123T154213Z" creationid="msdx" creationdate="20141123T154213Z">
        <seg>&gt; gradle -q show
build/output/classes</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q show
project: :child1
srcDirName: java
srcDir: child1/java
project: :child2
srcDirName: src/java/legacy
srcDir: child2/src/java/legacy</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T051056Z" creationid="95" creationdate="20161211T051056Z">
        <seg>&gt; gradle -q show
project: :child1
srcDirName: java
srcDir: child1/java
project: :child2
srcDirName: src/java/legacy
srcDir: child2/src/java/legacy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q show
srcDirName: src/java
srcDir: child/src/java</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T044951Z" creationid="95" creationdate="20161211T044951Z">
        <seg>&gt; gradle -q show
srcDirName: src/java
srcDir: child/src/java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q taskX
lib1
lib2
taskX</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T123908Z" creationid="msdx" creationdate="20141110T123908Z">
        <seg>&gt; gradle -q taskX
lib1
lib2
taskX</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q taskX
taskX
taskY</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T070214Z" creationid="msdx" creationdate="20141111T070214Z">
        <seg>&gt; gradle -q taskX
taskX
taskY</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q taskX
taskY
taskX</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T122338Z" creationid="msdx" creationdate="20141110T122338Z">
        <seg>&gt; gradle -q taskX
taskY
taskX</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q taskX
taskZ
taskY
taskX</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T014956Z" creationid="msdx" creationdate="20141111T014956Z">
        <seg>&gt; gradle -q taskX
taskZ
taskY
taskX</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q taskY
taskY</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T013522Z" creationid="msdx" creationdate="20141111T013522Z">
        <seg>&gt; gradle -q taskY
taskY</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q taskY taskX
taskX
taskY</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T012848Z" creationid="msdx" creationdate="20141111T012848Z">
        <seg>&gt; gradle -q taskY taskX
taskX
taskY</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q test
Adding test task to project ':projectA'
Running tests for project ':projectA'</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T125725Z" creationid="95" creationdate="20160521T125725Z">
        <seg>&gt; gradle -q test
Adding test task to project ':projectA'
Running tests for project ':projectA'</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q test
Evaluation of root project 'buildProjectEvaluateEvents' succeeded
Evaluation of project ':projectA' succeeded
Evaluation of project ':projectB' FAILED</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T132220Z" creationid="95" creationdate="20160521T132220Z">
        <seg>&gt; gradle -q test
Evaluation of root project 'buildProjectEvaluateEvents' succeeded
Evaluation of project ':projectA' succeeded
Evaluation of project ':projectB' FAILED</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle -q updateInputs incrementalReverse
CHANGED inputs considered out of date
out of date: 1.txt
out of date: 4.txt</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160817T150209Z" creationid="95" creationdate="20160817T150209Z">
        <seg>&gt; gradle -q updateInputs incrementalReverse
CHANGED inputs considered out of date
out of date: 1.txt
out of date: 4.txt</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle :api:build
:shared:compileJava
:shared:processResources
:shared:classes
:shared:jar
:api:compileJava
:api:processResources
:api:classes
:api:jar
:api:assemble
:api:compileTestJava
:api:processTestResources
:api:testClasses
:api:test
:api:check
:api:build

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T095312Z" creationid="haohang" creationdate="20160726T095312Z">
        <seg>&gt; gradle :api:build
:shared:compileJava
:shared:processResources
:shared:classes
:shared:jar
:api:compileJava
:api:processResources
:api:classes
:api:jar
:api:assemble
:api:compileTestJava
:api:processTestResources
:api:testClasses
:api:test
:api:check
:api:build

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle :api:buildDependents
:shared:compileJava
:shared:processResources
:shared:classes
:shared:jar
:api:compileJava
:api:processResources
:api:classes
:api:jar
:api:assemble
:api:compileTestJava
:api:processTestResources
:api:testClasses
:api:test
:api:check
:api:build
:services:personService:compileJava
:services:personService:processResources
:services:personService:classes
:services:personService:jar
:services:personService:assemble
:services:personService:compileTestJava
:services:personService:processTestResources
:services:personService:testClasses
:services:personService:test
:services:personService:check
:services:personService:build
:services:personService:buildDependents
:api:buildDependents

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160727T052711Z" creationid="haohang" creationdate="20160727T052711Z">
        <seg>&gt; gradle :api:buildDependents
:shared:compileJava
:shared:processResources
:shared:classes
:shared:jar
:api:compileJava
:api:processResources
:api:classes
:api:jar
:api:assemble
:api:compileTestJava
:api:processTestResources
:api:testClasses
:api:test
:api:check
:api:build
:services:personService:compileJava
:services:personService:processResources
:services:personService:classes
:services:personService:jar
:services:personService:assemble
:services:personService:compileTestJava
:services:personService:processTestResources
:services:personService:testClasses
:services:personService:test
:services:personService:check
:services:personService:build
:services:personService:buildDependents
:api:buildDependents

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle :api:buildNeeded
:shared:compileJava
:shared:processResources
:shared:classes
:shared:jar
:api:compileJava
:api:processResources
:api:classes
:api:jar
:api:assemble
:api:compileTestJava
:api:processTestResources
:api:testClasses
:api:test
:api:check
:api:build
:shared:assemble
:shared:compileTestJava
:shared:processTestResources
:shared:testClasses
:shared:test
:shared:check
:shared:build
:shared:buildNeeded
:api:buildNeeded

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160727T052320Z" creationid="haohang" creationdate="20160727T052320Z">
        <seg>&gt; gradle :api:buildNeeded
:shared:compileJava
:shared:processResources
:shared:classes
:shared:jar
:api:compileJava
:api:processResources
:api:classes
:api:jar
:api:assemble
:api:compileTestJava
:api:processTestResources
:api:testClasses
:api:test
:api:check
:api:build
:shared:assemble
:shared:compileTestJava
:shared:processTestResources
:shared:testClasses
:shared:test
:shared:check
:shared:build
:shared:buildNeeded
:api:buildNeeded

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle disableMe
:disableMe SKIPPED

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T055753Z" creationid="msdx" creationdate="20141111T055753Z">
        <seg>&gt; gradle disableMe
:disableMe SKIPPED

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle distZip
:createDocs
:compileJava
:processResources UP-TO-DATE
:classes
:jar
:startScripts
:distZip

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150703T100713Z" creationid="haohang" creationdate="20150703T100713Z">
        <seg>&gt; gradle distZip
:createDocs
:compileJava
:processResources UP-TO-DATE
:classes
:jar
:startScripts
:distZip

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle distanceToIceberg
:bluewhale:distanceToIceberg
20 nautical miles
:krill:distanceToIceberg
5 nautical miles

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160715T080055Z" creationid="haohang" creationdate="20160715T080055Z">
        <seg>&gt; gradle distanceToIceberg
:bluewhale:distanceToIceberg
20 nautical miles
:krill:distanceToIceberg
5 nautical miles

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle generateDescriptorFileForIvyCustomPublication
:generateDescriptorFileForIvyCustomPublication

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T144016Z" creationid="95" creationdate="20170330T144016Z">
        <seg>&gt; gradle generateDescriptorFileForIvyCustomPublication
:generateDescriptorFileForIvyCustomPublication

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle generatePomFileForMavenCustomPublication
:generatePomFileForMavenCustomPublication

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T064818Z" creationid="95" creationdate="20170416T064818Z">
        <seg>&gt; gradle generatePomFileForMavenCustomPublication
:generatePomFileForMavenCustomPublication

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle hello
:hello
[ant:echo] Hello, from Ant

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T060919Z" creationid="msdx" creationdate="20141116T060919Z">
        <seg>&gt; gradle hello
:hello
[ant:echo] Hello, from Ant

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle hello
:hello
[ant:echo] Hello, from Ant
Hello, from Gradle

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T061047Z" creationid="msdx" creationdate="20141116T061047Z">
        <seg>&gt; gradle hello
:hello
[ant:echo] Hello, from Ant
Hello, from Gradle

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle hello
:hello
[ant:echo] hello from Ant

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141115T153419Z" creationid="msdx" creationdate="20141115T153419Z">
        <seg>&gt; gradle hello
:hello
[ant:echo] hello from Ant

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle hello
:intro
Hello, from Gradle
:hello
[ant:echo] Hello, from Ant

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T061147Z" creationid="msdx" creationdate="20141116T061147Z">
        <seg>&gt; gradle hello
:intro
Hello, from Gradle
:hello
[ant:echo] Hello, from Ant

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle hello -PskipHello
:hello SKIPPED

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T021034Z" creationid="msdx" creationdate="20141111T021034Z">
        <seg>&gt; gradle hello -PskipHello
:hello SKIPPED

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle intTestClasses
:compileIntTestJava
:processIntTestResources
:intTestClasses

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083426Z" creationid="msdx" creationdate="20150428T083426Z">
        <seg>&gt; gradle intTestClasses
:compileIntTestJava
:processIntTestResources
:intTestClasses

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle intro
:hello
[ant:echo] Hello, from Ant
:intro
Hello, from Gradle

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T061021Z" creationid="msdx" creationdate="20141116T061021Z">
        <seg>&gt; gradle intro
:hello
[ant:echo] Hello, from Ant
:intro
Hello, from Gradle

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle publish
:generateDescriptorFileForIvyJavaPublication
:compileJava UP-TO-DATE
:processResources UP-TO-DATE
:classes UP-TO-DATE
:jar
:publishIvyJavaPublicationToIvyRepository
:publish

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170326T080525Z" creationid="95" creationdate="20170326T080525Z">
        <seg>&gt; gradle publish
:generateDescriptorFileForIvyJavaPublication
:compileJava UP-TO-DATE
:processResources UP-TO-DATE
:classes UP-TO-DATE
:jar
:publishIvyJavaPublicationToIvyRepository
:publish

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle publish
:generatePomFileForMavenJavaPublication
:compileJava
:processResources UP-TO-DATE
:classes
:jar
:publishMavenJavaPublicationToMavenRepository
:publish

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T063219Z" creationid="95" creationdate="20170416T063219Z">
        <seg>&gt; gradle publish
:generatePomFileForMavenJavaPublication
:compileJava
:processResources UP-TO-DATE
:classes
:jar
:publishMavenJavaPublicationToMavenRepository
:publish

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle publishIvyJavaPublicationToIvyRepository
:generateDescriptorFileForIvyJavaPublication
:compileJava UP-TO-DATE
:processResources UP-TO-DATE
:classes UP-TO-DATE
:jar
:publishIvyJavaPublicationToIvyRepository

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170326T075110Z" creationid="95" creationdate="20170326T075110Z">
        <seg>&gt; gradle publishIvyJavaPublicationToIvyRepository
:generateDescriptorFileForIvyJavaPublication
:compileJava UP-TO-DATE
:processResources UP-TO-DATE
:classes UP-TO-DATE
:jar
:publishIvyJavaPublicationToIvyRepository

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle publishToMavenLocal
:generatePomFileForMavenJavaPublication
:compileJava
:processResources UP-TO-DATE
:classes
:jar
:publishMavenJavaPublicationToMavenLocal
:publishToMavenLocal

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T064125Z" creationid="95" creationdate="20170416T064125Z">
        <seg>-&gt; gradle publish
:generatePomFileForMavenJavaPublication
:compileJava
:processResources UP-TO-DATE
:classes
:jar
:publishMavenJavaPublicationToMavenRepository
:publish

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle signArchives
:compileJava
:processResources
:classes
:jar
:signArchives

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160109T072552Z" creationid="95" creationdate="20160109T072552Z">
        <seg>&gt; gradle signArchives
:compileJava
:processResources
:classes
:jar
:signArchives

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle signStuffZip
:stuffZip
:signStuffZip

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160126T140544Z" creationid="95" creationdate="20160126T140544Z">
        <seg>&gt; gradle signStuffZip
:stuffZip
:signStuffZip

BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle test
This is executed during the initialization phase.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T025352Z" creationid="haohang" creationdate="20160519T025352Z">
        <seg>&gt; gradle test
This is executed during the initialization phase.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle transform
:transform
Transforming source file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T060345Z" creationid="msdx" creationdate="20141111T060345Z">
        <seg>&gt; gradle transform
:transform
Transforming source file.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>&gt; gradle transform
:transform UP-TO-DATE</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T061316Z" creationid="msdx" creationdate="20141111T061316Z">
        <seg>&gt; gradle transform
:transform UP-TO-DATE</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>CUnitTestSuite<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> component has an associated <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>Executable<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept> or <bpt i="4" x="4">&lt;a4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>Library<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/a4&gt;</ept> component.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160504T150632Z" creationid="95" creationdate="20160504T150632Z">
        <seg>一个 <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>CUnitTestSuite<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> 组件会有一个相关联的 <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>Executable<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept> 或 <bpt i="4" x="4">&lt;a4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>Library<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/a4&gt;</ept> 组件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A <bpt i="0" x="0">&lt;a0&gt;</bpt>complete overwrite<ept i="0">&lt;/a0&gt;</ept> causes all existing content to be discarded, thereby losing any changes made directly in the IDE.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T064559Z" creationid="haohang" creationdate="20150625T064559Z">
        <seg>一个<bpt i="0" x="0">&lt;a0&gt;</bpt>完全覆盖<ept i="0">&lt;/a0&gt;</ept>会导致现有的所有内容被丢弃，从而丢失在 IDE 中直接做的任何修改。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A <bpt i="0" x="0">&lt;c0&gt;</bpt>build type<ept i="0">&lt;/c0&gt;</ept> determines various non-functional aspects of a binary, such as whether debug information is included, or what optimisation level the binary is compiled with.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160401T090147Z" creationid="haohang" creationdate="20160401T090147Z">
        <seg>一个 <bpt i="0" x="0">&lt;c0&gt;</bpt>build type<ept i="0">&lt;/c0&gt;</ept> 确定了一个二进制文件的各种非功能性方面，比如是否包含调试信息，或者使用什么样的优化级别来编译二进制文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A <bpt i="0" x="0">&lt;e0&gt;</bpt>file collection<ept i="0">&lt;/e0&gt;</ept> is simply a set of files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T145002Z" creationid="msdx" creationdate="20141112T144931Z">
        <seg>一个<bpt i="0" x="0">&lt;e0&gt;</bpt>文件集合<ept i="0">&lt;/e0&gt;</ept>只是表示一组文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A <bpt i="0" x="0">&lt;e0&gt;</bpt>file tree<ept i="0">&lt;/e0&gt;</ept> is a collection of files arranged in a hierarchy.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T161626Z" creationid="msdx" creationdate="20141112T161626Z">
        <seg><bpt i="0" x="0">&lt;e0&gt;</bpt>文件树<ept i="0">&lt;/e0&gt;</ept>是按层次结构排序的文件集合。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A Gradle build has three distinct phases.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160518T032550Z" creationid="haohang" creationdate="20160518T032516Z">
        <seg>一个 Gradle 构建具有三个明显的阶段。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A Gradle build with a build executed by another tool such as Apache Ant, Apache Maven or something else (i.e. migrating to Gradle).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161219T150054Z" creationid="95" creationdate="20161219T145845Z">
        <seg>由Apache Ant，Apache Maven 或其他工具执行的Gradle构建（即迁移到Gradle）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A Gradle dependency offers the <bpt i="0" x="0">&lt;c0&gt;</bpt>configuration<ept i="0">&lt;/c0&gt;</ept> property to declare this.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151227T155552Z" creationid="95" creationdate="20151227T155503Z">
        <seg>一个Gradle依赖提供了<bpt i="0" x="0">&lt;c0&gt;</bpt>configuration<ept i="0">&lt;/c0&gt;</ept> 属性来声明它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A Gradle plugin packages up reusable pieces of build logic, which can be used across many different projects and builds.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160818T150844Z" creationid="95" creationdate="20160817T151216Z">
        <seg>Gradle 插件打包了可以复用的构建逻辑块，这些逻辑可以在不同的项目和构建中使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A Maven repository.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T095629Z" creationid="haohang" creationdate="20150807T095629Z">
        <seg>一个 Maven 仓库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A Sonar property value set via a system property overrides any value set in a build script (for the same property).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150525T234241Z" creationid="haohang" creationdate="20150525T234241Z">
        <seg>通过一个系统属性设置的 Sonar 属性值将覆盖构建脚本中设置的任何值（同样的属性名称）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A basic Groovy project</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163716Z" creationid="msdx" creationdate="20141109T163711Z">
        <seg>一个基本的Groovy 项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A basic Java project</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163435Z" creationid="msdx" creationdate="20141109T163435Z">
        <seg>一个基本的 Java 项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A binary store of resolved module meta-data, including the results of resolving dynamic versions, module descriptors, and artifacts.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T042820Z" creationid="95" creationdate="20151129T042820Z">
        <seg>解析的模块元数据的二进制存储，包括解析动态版本、 模块描述符和构件的结果。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A build depending on both <bpt i="0" x="0">&lt;c0&gt;</bpt>module-a<ept i="0">&lt;/c0&gt;</ept> and <bpt i="1" x="1">&lt;c1&gt;</bpt>module-b<ept i="1">&lt;/c1&gt;</ept> will obtain different versions of libraries within the releasable unit.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T061243Z" creationid="95" creationdate="20151115T061243Z">
        <seg>一个依赖于<bpt i="0" x="0">&lt;c0&gt;</bpt>module-a<ept i="0">&lt;/c0&gt;</ept>和<bpt i="1" x="1">&lt;c1&gt;</bpt>module-b<ept i="1">&lt;/c1&gt;</ept>的构建，将在可发布单位内获得这个库的不同版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A build outcome is uncompared if a logical equivalent from the other build cannot be found (e.g. a build produces a zip file that the other build does not).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161228T144256Z" creationid="95" creationdate="20161228T143824Z">
        <seg>如果无法从其他构建中找到逻辑等价物（比如一个构建产生了一个zip文件，而其他的构建不会），那么构建结果就是未比较的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A build outcome that cannot be understood by the host build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161228T144151Z" creationid="95" creationdate="20161228T144133Z">
        <seg>主机构建不能理解的构建结果。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A build with a newer version of Gradle than it's currently using (i.e. upgrading the Gradle version).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161219T145843Z" creationid="95" creationdate="20161219T145843Z">
        <seg>比当前所使用的Gradle版本更新的版本的构建（即升级Gradle版本）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A collection of files with names like <bpt i="0" x="0">&lt;c0&gt;</bpt>commons-beanutils-1.3.jar<ept i="0">&lt;/c0&gt;</ept> or a collection of files with names like <bpt i="1" x="1">&lt;c1&gt;</bpt>spring.jar<ept i="1">&lt;/c1&gt;</ept>?</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150716T092438Z" creationid="haohang" creationdate="20150716T092438Z">
        <seg>一个文件命名为 <bpt i="0" x="0">&lt;c0&gt;</bpt>beanutils-beanutils-1.3.jar<ept i="0">&lt;/c0&gt;</ept> 的集合，还是文件命名为 <bpt i="1" x="1">&lt;c1&gt;</bpt>spring.jar<ept i="1">&lt;/c1&gt;</ept> 的集合？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A common example is a native executable component that uses functions provided by a separate native library component.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160325T032650Z" creationid="haohang" creationdate="20160325T032650Z">
        <seg>一个常见的例子是一个本地可执行组件，使用了由一个单独的本地库组件提供的功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A common usage pattern is to only sign build artifacts under certain conditions.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160126T141141Z" creationid="95" creationdate="20160126T141141Z">
        <seg>常见的使用模式是只在一定条件下签名构建的artifacts。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A copy spec inherits its destination path, include patterns, exclude patterns, copy actions, name mappings and filters.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T143851Z" creationid="msdx" creationdate="20141113T141351Z">
        <seg>一个复制规范继承其目标路径，包含模式，排除模式，复制操作，名称映射和过滤器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A copy spec is represented by the <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>CopySpec<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept> interface.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T124233Z" creationid="msdx" creationdate="20141113T124233Z">
        <seg>一个复制规范通过 <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>CopySpec<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept> 接口来表示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A couple of examples are shown below.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T091335Z" creationid="95" creationdate="20151115T091335Z">
        <seg>下面展示了几个例子。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A dependency of a first level dependency might also be a first level dependency itself, or it might be a transitive dependency of yet another first level dependency.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150721T011234Z" creationid="haohang" creationdate="20150721T011234Z">
        <seg>第一级依赖的依赖项也可能是第一级依赖本身，或者也可能是另一个第一级依赖的传递依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A dependency on a set of files on the local filesystem.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T080441Z" creationid="haohang" creationdate="20150722T080441Z">
        <seg>对本地文件系统中的一些文件的依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A dependency on an external module in some repository.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T080427Z" creationid="haohang" creationdate="20150722T080346Z">
        <seg>对一些仓库中的外部模块的依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A dependency on an external module, where the artifacts are located in some repository but the module meta-data is specified by the local build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T080603Z" creationid="haohang" creationdate="20150722T080603Z">
        <seg>对外部模块的依赖，该块部模块的 artifacts 存储于一些仓库中，但是模块的元数据由本地构建指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A dependency on another project in the same build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T080416Z" creationid="haohang" creationdate="20150722T080416Z">
        <seg>在同一个构建中对另一个项目的依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A dependency on the API of the current Gradle version.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T080646Z" creationid="haohang" creationdate="20150722T080646Z">
        <seg>对当前的 Gradle 版本的 API 的依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A dependency on the Groovy version used by the current Gradle version.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T080827Z" creationid="haohang" creationdate="20150722T080827Z">
        <seg>对当前的 Gradle 所使用的 Groovy 版本的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A dependency resolve rule is executed for each resolved dependency, and offers a powerful api for manipulating a requested dependency prior to that dependency being resolved.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T055618Z" creationid="95" creationdate="20151115T055618Z">
        <seg>一个依赖解析规则为每一个解析依赖执行，并提供功能强大的 api 用于在解析依赖之前处理这个依赖的请求。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A deployment descriptor with sensible defaults named <bpt i="0" x="0">&lt;c0&gt;</bpt>application.xml<ept i="0">&lt;/c0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T142107Z" creationid="msdx" creationdate="20150504T142107Z">
        <seg>部署描述符，它有一个合理的名为<bpt i="0" x="0">&lt;c0&gt;</bpt>application.xml<ept i="0">&lt;/c0&gt;</ept>的默认值</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A description for the project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T044345Z" creationid="msdx" creationdate="20141108T044345Z">
        <seg>项目的描述。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A dynamic version can be either a version range (e.g. <bpt i="2" x="2">&lt;c2&gt;</bpt>2.+<ept i="2">&lt;/c2&gt;</ept>) or it can be a placeholder for the latest version available (e.g. <bpt i="3" x="3">&lt;c3&gt;</bpt>latest.integration<ept i="3">&lt;/c3&gt;</ept>).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T011437Z" creationid="haohang" creationdate="20150722T011437Z">
        <seg>一个动态的版本可以是一个版本范围（例如<bpt i="2" x="2">&lt;c2&gt;</bpt>2.+<ept i="2">&lt;/c2&gt;</ept>），也可以是表示可用的最新版本的占位符（例如<bpt i="3" x="3">&lt;c3&gt;</bpt>latest.integration<ept i="3">&lt;/c3&gt;</ept>）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A file collection is iterable, and can be converted to a number of other types using the <bpt i="0" x="0">&lt;c0&gt;</bpt>as<ept i="0">&lt;/c0&gt;</ept> operator.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T155653Z" creationid="msdx" creationdate="20141112T155548Z">
        <seg>一个文件集合是可迭代的，并且可以使用<bpt i="0" x="0">&lt;c0&gt;</bpt>as<ept i="0">&lt;/c0&gt;</ept>操作符转换为其他类型的对象集合。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A file-based store of downloaded artifacts, including binaries like jars as well as raw downloaded meta-data like POM files and Ivy files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T042341Z" creationid="95" creationdate="20151129T042322Z">
        <seg>一个基于文件的下载构件存储，包括像jars这样的二进制文件，以及像 POM 文件以及 Ivy 文件这样的原始下载的元数据。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A fresh resolve will be performed against all configured repositories, with dynamic versions recalculated, modules refreshed, and artifacts downloaded.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T154300Z" creationid="95" creationdate="20151129T154300Z">
        <seg>对所有已配置的仓库执行新的解析，通过重新计算动态版本，模块刷新，以及下载构件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A fundamental characteristic of the tooling API is that it operates in a version independent way.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T151507Z" creationid="95" creationdate="20161218T151507Z">
        <seg>这个tooling API 的一个基本特征是它以一个版本独立的方式管理。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A list of available Sonar properties can be found in the <bpt i="0" x="0">&lt;a0&gt;</bpt>Sonar documentation<ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T101914Z" creationid="msdx" creationdate="20150512T101431Z">
        <seg>Sonar 的可用属性的列表可以在<bpt i="0" x="0">&lt;a0&gt;</bpt>Sonar 文档<ept i="0">&lt;/a0&gt;</ept>中找到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A module dependency has an API which allows for further configuration.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150724T034716Z" creationid="haohang" creationdate="20150724T034716Z">
        <seg>模块依赖有一个 API，用于进行进一步的配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A module published to a Maven repository can be consumed by Maven, Gradle (see <bpt i="1" x="1">&lt;a1&gt;</bpt>Chapter 50, <bpt i="2" x="2">&lt;i2&gt;</bpt>Dependency Management<ept i="2">&lt;/i2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>) and other tools that understand the Maven repository format.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170412T152419Z" creationid="95" creationdate="20170412T152419Z">
        <seg>一个发布到Maven 仓库的模块，可以在Gradle（参见 <bpt i="1" x="1">&lt;a1&gt;</bpt>第五十章， <bpt i="2" x="2">&lt;i2&gt;</bpt>依赖管理<ept i="2">&lt;/i2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>）或其他理解Maven仓库格式的工具中使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A module's status and status scheme are taken into consideration when a <bpt i="0" x="0">&lt;c0&gt;</bpt>latest<ept i="0">&lt;/c0&gt;</ept> version selector is resolved.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T013527Z" creationid="95" creationdate="20151129T013527Z">
        <seg>一个模块的状态以及状态模式，会在解析 <bpt i="0" x="0">&lt;c0&gt;</bpt>latest<ept i="0">&lt;/c0&gt;</ept> 版本选择器时考虑到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A multi-project build is a build where you build more than one project during a single execution of Gradle.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T030152Z" creationid="haohang" creationdate="20160519T030011Z">
        <seg>多项目构建是指在一次Gradle执行中，构建多个项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A multiproject build must have a <bpt i="0" x="0">&lt;c0&gt;</bpt>settings.gradle<ept i="0">&lt;/c0&gt;</ept> file in the root project of the multiproject hierarchy.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T024919Z" creationid="haohang" creationdate="20160519T024919Z">
        <seg>一个多项目的构建，必须在这个多项目的层次结构中的根目录下有一个<bpt i="0" x="0">&lt;c0&gt;</bpt>settings.gradle<ept i="0">&lt;/c0&gt;</ept> 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A native binary project defines a set of <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Executable<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> and <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>Library<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept> components, each of which Gradle maps to a number of <bpt i="4" x="4">&lt;a4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>NativeBinary<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/a4&gt;</ept> outputs.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160219T064641Z" creationid="95" creationdate="20160128T153607Z">
        <seg>一个原生二进制project定义了一组<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Executable<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>和<bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>Library<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>组件，每一个的 Gradle 都映射大量的<bpt i="4" x="4">&lt;a4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>NativeBinary<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/a4&gt;</ept>输出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A native binary project will contain one or more named <bpt i="0" x="0">&lt;c0&gt;</bpt>FunctionalSourceSet<ept i="0">&lt;/c0&gt;</ept> instances (eg 'main', 'test', etc), each of which can contain <bpt i="1" x="1">&lt;c1&gt;</bpt>LanguageSourceSet<ept i="1">&lt;/c1&gt;</ept>s containing C++, C, Assembler, Objective-C or Objective-C++ source files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160219T082804Z" creationid="haohang" creationdate="20160219T082747Z">
        <seg>一个原生二进制project 将包含一个或多个叫做<bpt i="0" x="0">&lt;c0&gt;</bpt>FunctionalSourceSet<ept i="0">&lt;/c0&gt;</ept>的实例（如"main"，"test"等），其中每一个都可以包含含有C++，C，Assembler，Objective-C或Objective-C++源代码的<bpt i="1" x="1">&lt;c1&gt;</bpt>LanguageSourceSet<ept i="1">&lt;/c1&gt;</ept>s。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A one element set with the project the plugin was applied to.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T061856Z" creationid="haohang" creationdate="20150628T061856Z">
        <seg>一个元素集合，用于保存将要应用该插件的project</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A plugin is simply any class that implements the <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Plugin<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> interface.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141123T134508Z" creationid="msdx" creationdate="20141122T162925Z">
        <seg>一个插件是任何实现了 <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Plugin<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> 接口的简单的类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A pre-configured repository that looks for dependencies in Bintray's JCenter.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T095555Z" creationid="haohang" creationdate="20150807T094212Z">
        <seg>一个会在 Bintray 的 Jcenter 查找依赖的预配置仓库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A pre-configured repository that looks for dependencies in Maven Central.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T094223Z" creationid="haohang" creationdate="20150807T094157Z">
        <seg>一个会在 Maven 中央仓中查找依赖的预配置仓库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A pre-configured repository that looks for dependencies in the local Maven repository.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T095616Z" creationid="haohang" creationdate="20150807T095616Z">
        <seg>一个会在本地 Maven 仓库中查找依赖的预配置仓库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A project can have as many as JAR archives as you want.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T145558Z" creationid="msdx" creationdate="20141113T145558Z">
        <seg>一个项目可以有你所想要的一样多的 JAR 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A project can publish as many artifacts as it wants.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151220T123450Z" creationid="95" creationdate="20151220T123423Z">
        <seg>一个项目可以发布为它想要的所有构件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A project has a path which denotes the position of the project in the multi-project build tree.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T040929Z" creationid="haohang" creationdate="20160519T040929Z">
        <seg>一个项目有一个路径，表示在多项目构建树中的位置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A project path has the following pattern: It starts always with a colon, which denotes the root project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160715T092127Z" creationid="haohang" creationdate="20160715T092127Z">
        <seg>一个项目路径有以下模式︰它总是始于一个冒号，表示根项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A project's configurations are managed by a <bpt i="0" x="0">&lt;c0&gt;</bpt>configurations<ept i="0">&lt;/c0&gt;</ept> object.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T075655Z" creationid="haohang" creationdate="20150722T075655Z">
        <seg>一个项目的配置被一个 <bpt i="0" x="0">&lt;c0&gt;</bpt>configurations<ept i="0">&lt;/c0&gt;</ept> 对象所管理。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A proper build system has to be designed to be flexible, and Gradle can handle any situation.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150716T035726Z" creationid="haohang" creationdate="20150716T035726Z">
        <seg>一个正确的构建系统必须被设计得很灵活，而 Gradle 可以应付任何情况。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A publication can be configured by adding components, customizing artifacts, and by modifying the generated POM file directly.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170412T154301Z" creationid="95" creationdate="20170412T154301Z">
        <seg>通过添加组件，自定义构件，以及直接修改生成的POM文件，可以配置一个publication。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A publication can be configured by adding components, customizing artifacts, and by modifying the generated module descriptor file directly.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170211T140235Z" creationid="95" creationdate="20170211T140126Z">
        <seg>通过添加组件，自定义构件，以及直接修改生成的模块描述文件，可以配置一个publication。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A published Ivy module can be consumed by Gradle (see <bpt i="0" x="0">&lt;a0&gt;</bpt>Chapter 50, <bpt i="1" x="1">&lt;i1&gt;</bpt>Dependency Management<ept i="1">&lt;/i1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>) and other tools that understand the Ivy format.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170211T012955Z" creationid="95" creationdate="20170211T012955Z">
        <seg>使用已发布的 Ivy 模块就可以在Gradle（参见 <bpt i="0" x="0">&lt;a0&gt;</bpt>第五十章， <bpt i="1" x="1">&lt;i1&gt;</bpt>依赖管理<ept i="1">&lt;/i1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>）或其他了解Ivy 格式的工具中使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A relative URL is supported - you can specify a distribution file relative to the location of <bpt i="2" x="2">&lt;c2&gt;</bpt>gradle-wrapper.properties<ept i="2">&lt;/c2&gt;</ept> file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T040619Z" creationid="95" creationdate="20161218T040619Z">
        <seg>它支持相对路径URL——你可以指定相对于<bpt i="2" x="2">&lt;c2&gt;</bpt>gradle wrapper.properties<ept i="2">&lt;/c2&gt;</ept>文件的位置的分发文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A repository is identified by its URL, type and layout.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T045721Z" creationid="95" creationdate="20151129T045704Z">
        <seg>一个仓库由它的 URL、类型和布局来区分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A set of sources may depend on header files provided by another binary component within the same project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160325T025747Z" creationid="haohang" creationdate="20160325T025747Z">
        <seg>一组源文件可能依赖于在同一个项目中由另一个二进制组件提供的头文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A shortcut task definition</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162411Z" creationid="msdx" creationdate="20141109T162355Z">
        <seg>快速任务定义</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A similar mechanism exists for selecting <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>TargetedNativeComponent.targetBuildTypes()<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> and <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>TargetedNativeComponent.targetFlavors()<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T083111Z" creationid="haohang" creationdate="20160408T083111Z">
        <seg>在选择 <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>TargetedNativeComponent.targetBuildTypes()<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> and和<bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>TargetedNativeComponent.targetFlavors()<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>上也有类似的机制。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A simple option for logging in your build file is to write messages to standard output.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T033750Z" creationid="msdx" creationdate="20141116T122326Z">
        <seg>在构建文件中打印日志的一个简单方法是把消息写到标准输出中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A simple repository on the local filesystem.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T095724Z" creationid="haohang" creationdate="20150807T095724Z">
        <seg>一个在本地文件系统上的简单的仓库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A single build may utilize different tool chains to build variants for different platforms.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T085038Z" creationid="haohang" creationdate="20160408T085038Z">
        <seg>一个构建可以使用不同的工具链来构建不同平台的变种。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A source set has an associated compile classpath, and runtime classpath.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T074343Z" creationid="Administrator" creationdate="20150425T074343Z">
        <seg>一个源集有一个相关联的编译类路径和运行时类路径。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A source set is simply a group of source files which are compiled and executed together.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T074131Z" creationid="Administrator" creationdate="20150425T074131Z">
        <seg>一个源集只是一组用于编译并一起执行的源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A standalone project</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070710Z" creationid="95" creationdate="20170416T070710Z">
        <seg>一个独立项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A task may only contain a single incremental task action.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160816T145427Z" creationid="95" creationdate="20160816T145427Z">
        <seg>一个任务可能只包含一个简单的增量任务操作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A task parameter will override any corresponding value set in the build script.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T053932Z" creationid="msdx" creationdate="20150513T053825Z">
        <seg>任务参数将覆盖任何在构建脚本中设置的相应值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A task that aggregates the results of all tasks of a particular type: eg.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T145334Z" creationid="msdx" creationdate="20141110T145038Z">
        <seg>一个任务聚合了某一特定类型的所有任务的结果：如，</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A task with no defined outputs will <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>never<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> be considered up-to-date.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T061602Z" creationid="msdx" creationdate="20141111T061602Z">
        <seg>一个没有定义输出的任务将<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>永远不会<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>被当作是最新的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A task with only outputs defined will be considered up-to-date if those outputs are unchanged since the previous build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T063025Z" creationid="msdx" creationdate="20141111T063025Z">
        <seg>一个只定义了输出的任务，如果自上一次构建以来它的输出没有改变，那么它会被判定为最新状态。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A typical base line configuration includes connection settings for the Sonar server and database.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T063329Z" creationid="msdx" creationdate="20150513T062624Z">
        <seg>一个典型的基线配置包括了Sonar 服务器和数据库的连接设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A very common way for projects to be coupled is by using configuration injection (<bpt i="0" x="0">&lt;a0&gt;</bpt>Section 56.1, “Cross project configuration”<ept i="0">&lt;/a0&gt;</ept>).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T093500Z" creationid="haohang" creationdate="20160726T093309Z">
        <seg>使项目之间耦合的一种很常的方式是使用配置注入（<bpt i="0" x="0">&lt;a0&gt;</bpt>第56.1节， “跨项目配置”<ept i="0">&lt;/a0&gt;</ept>）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>A very nice and expressive way to provide such tasks are task rules:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T064945Z" creationid="msdx" creationdate="20141111T064945Z">
        <seg>任务规则是提供此类任务的一个很好的表达方式：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ANTLR grammar files for the given source set.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T095202Z" creationid="haohang" creationdate="20150625T095202Z">
        <seg>对于给定的source set 的 ANTLR 语法文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>API</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T030407Z" creationid="msdx" creationdate="20150501T030407Z">
        <seg>17.4. API</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>About this user guide</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T161848Z" creationid="msdx" creationdate="20141109T161848Z">
        <seg>关于本用户指南</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Above copying the starting scripts to the <bpt i="5" x="5">&lt;c5&gt;</bpt>bin<ept i="5">&lt;/c5&gt;</ept> dir and necessary jars to <bpt i="6" x="6">&lt;c6&gt;</bpt>lib<ept i="6">&lt;/c6&gt;</ept> in the distribution, all of the files from the <bpt i="7" x="7">&lt;c7&gt;</bpt>src/dist<ept i="7">&lt;/c7&gt;</ept> directory are also copied.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150703T100214Z" creationid="haohang" creationdate="20150703T054702Z">
        <seg>以上在 distribution 中将启动脚本复制到<bpt i="5" x="5">&lt;c5&gt;</bpt>bin<ept i="5">&lt;/c5&gt;</ept>目录，并且将必要的 jar 文件复制到<bpt i="6" x="6">&lt;c6&gt;</bpt>lib<ept i="6">&lt;/c6&gt;</ept>目录，所有在<bpt i="7" x="7">&lt;c7&gt;</bpt>src/dist<ept i="7">&lt;/c7&gt;</ept>目录的文件也会被复制。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Accessing the web via a proxy</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150508T131824Z" creationid="msdx" creationdate="20150508T131824Z">
        <seg>通过代理访问网站</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Add dependency configurations to the project (see <bpt i="0" x="0">&lt;a0&gt;</bpt>Section 8.3, “Dependency configurations”<ept i="0">&lt;/a0&gt;</ept>).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141123T151026Z" creationid="msdx" creationdate="20141123T150952Z">
        <seg>向项目中添加依赖配置 （见<bpt i="0" x="0">&lt;a0&gt;</bpt>第 8.3 节，“依赖配置”<ept i="0">&lt;/a0&gt;</ept>）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Add new properties and methods to existing type via extensions.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141123T151114Z" creationid="msdx" creationdate="20141123T150958Z">
        <seg>通过扩展对现有类型添加新的属性和方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Add tasks to the favorites (see Favorites tab)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T154012Z" creationid="msdx" creationdate="20141105T154012Z">
        <seg>将任务添加到收藏夹（见收藏夹（Favourites）选项卡）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Add tasks to the project (e.g. compile, test)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141123T150901Z" creationid="msdx" creationdate="20141123T150901Z">
        <seg>将任务添加到项目 （如编译、 测试）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Add your own new language elements or enhance the existing ones.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141101T035422Z" creationid="msdx" creationdate="20141101T035422Z">
        <seg>你可以添加新的语言元素，或增强现有的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Added a new domain object type: <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>SourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141124T074017Z" creationid="msdx" creationdate="20141124T074017Z">
        <seg>添加了一个新的域对象类型： <bpt i="0" x="0">&lt;a0&gt;</bpt> <bpt i="1" x="1">&lt;c1&gt;</bpt>SourceSet<ept i="1">&lt;/c1&gt;</ept> <ept i="0">&lt;/a0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Adding a JAR containing the classes of a source set:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T133345Z" creationid="Administrator" creationdate="20150427T133345Z">
        <seg>添加一个包含了源集的类的JAR包</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Adding a description to a task</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150330T141030Z" creationid="Administrator" creationdate="20150330T141030Z">
        <seg>向任务中添加描述</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Adding a test suite to run the tests in a source set:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T133518Z" creationid="Administrator" creationdate="20150427T133518Z">
        <seg>添加一个测试套件以运行一个源集里的测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Adding dependencies to a task</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150330T141013Z" creationid="Administrator" creationdate="20150330T141013Z">
        <seg>向任务添加依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Adding the <bpt i="0" x="0">&lt;c0&gt;</bpt>-a<ept i="0">&lt;/c0&gt;</ept> option will cause Gradle to use cached jars to resolve any project lib dependencies and not try to re-build the depended on projects.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160727T051902Z" creationid="haohang" creationdate="20160727T051902Z">
        <seg>添加<bpt i="0" x="0">&lt;c0&gt;</bpt>-a<ept i="0">&lt;/c0&gt;</ept>选项会导致 Gradle 使用缓存的jar 来解决任何项目库依赖，并且不会尝试重新生构建所依赖的项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Additional dependencies for compiling tests.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T084246Z" creationid="Administrator" creationdate="20150426T084246Z">
        <seg>用于编译测试的其他依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Additional dependencies for running tests only.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T084313Z" creationid="Administrator" creationdate="20150426T084313Z">
        <seg>只用于运行测试的其他依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Additional source sets can be added as needed.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T092512Z" creationid="msdx" creationdate="20150512T092512Z">
        <seg>根据需要，可以添加额外的 source sets。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Additionally Gradle provides various convenience method to add pre-configured repositories.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T093616Z" creationid="haohang" creationdate="20150807T091546Z">
        <seg>另外，Gradle 提供了各种方便的方法来添加预配置的仓库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Additionally, a property named <bpt i="2" x="2">&lt;c2&gt;</bpt>purpose<ept i="2">&lt;/c2&gt;</ept> is added to each source set by setting <bpt i="3" x="3">&lt;c3&gt;</bpt>ext.purpose<ept i="3">&lt;/c3&gt;</ept> to <bpt i="4" x="4">&lt;c4&gt;</bpt>null<ept i="4">&lt;/c4&gt;</ept> (<bpt i="5" x="5">&lt;c5&gt;</bpt>null<ept i="5">&lt;/c5&gt;</ept> is a permissible value).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T054144Z" creationid="msdx" creationdate="20141108T054144Z">
        <seg>此外，通过将<bpt i="3" x="3">&lt;c3&gt;</bpt>ext.purpose<ept i="3">&lt;/c3&gt;</ept>设置为<bpt i="4" x="4">&lt;c4&gt;</bpt>null<ept i="4">&lt;/c4&gt;</ept>（<bpt i="5" x="5">&lt;c5&gt;</bpt>null<ept i="5">&lt;/c5&gt;</ept>是一个允许的值），一个名为<bpt i="2" x="2">&lt;c2&gt;</bpt>purpose<ept i="2">&lt;/c2&gt;</ept>的属性被添加到每个源码集（source set）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Adds C source compilation capabilities to a project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141209T074138Z" creationid="msdx" creationdate="20141209T074050Z">
        <seg>向项目添加 C语言源代码编译功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Adds C++ source compilation capabilities to a project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141209T074135Z" creationid="msdx" creationdate="20141209T074135Z">
        <seg>向项目添加 c++ 源代码编译功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Adds Groovy configuration to <bpt i="0" x="0">&lt;c0&gt;</bpt>.project<ept i="0">&lt;/c0&gt;</ept> file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T003813Z" creationid="haohang" creationdate="20150603T003813Z">
        <seg>将 Groovy 配置添加到<bpt i="0" x="0">&lt;c0&gt;</bpt>.project<ept i="0">&lt;/c0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Adds Java compilation, testing and bundling capabilities to a project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141126T120948Z" creationid="msdx" creationdate="20141126T120948Z">
        <seg>向一个项目添加 Java 编译、 测试和捆绑的能力。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Adds Java configuration to <bpt i="0" x="0">&lt;c0&gt;</bpt>.project<ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T003756Z" creationid="haohang" creationdate="20150603T003756Z">
        <seg>将 Java 配置添加到<bpt i="0" x="0">&lt;c0&gt;</bpt>.project<ept i="0">&lt;/c0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Adds Java configuration to the module and project files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T071551Z" creationid="haohang" creationdate="20150625T071551Z">
        <seg>将 Java 配置添加到模块和项目文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Adds Objective-C source compilation capabilities to a project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141209T074158Z" creationid="msdx" creationdate="20141209T074158Z">
        <seg>向项目中添加 Objective-C 源代码编译功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Adds Objective-C++ source compilation capabilities to a project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141209T074223Z" creationid="msdx" creationdate="20141209T074223Z">
        <seg>向项目中添加 Objective-C++ 源代码编译功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Adds Scala support to <bpt i="0" x="0">&lt;c0&gt;</bpt>.project<ept i="0">&lt;/c0&gt;</ept> and <bpt i="1" x="1">&lt;c1&gt;</bpt>.classpath<ept i="1">&lt;/c1&gt;</ept> files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T003830Z" creationid="haohang" creationdate="20150603T003830Z">
        <seg>添加 Scala 支持到<bpt i="0" x="0">&lt;c0&gt;</bpt>.project<ept i="0">&lt;/c0&gt;</ept>和<bpt i="1" x="1">&lt;c1&gt;</bpt>.classpath<ept i="1">&lt;/c1&gt;</ept>文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Adds a <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Wrapper<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> task for generating Gradle wrapper files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T040533Z" creationid="Administrator" creationdate="20150425T040533Z">
        <seg>添加一个用于生成 Gradle wrapper 文件的<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Wrapper<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Adds all <bpt i="0" x="0">&lt;c0&gt;</bpt>.java<ept i="0">&lt;/c0&gt;</ept> files found in the Groovy source directories.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T094123Z" creationid="msdx" creationdate="20150429T094037Z">
        <seg>添加在 Groovy 源目录中找到的所有<bpt i="0" x="0">&lt;c0&gt;</bpt>.java<ept i="0">&lt;/c0&gt;</ept>文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Adds all <bpt i="0" x="0">&lt;c0&gt;</bpt>.java<ept i="0">&lt;/c0&gt;</ept> files found in the Scala source directories.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150430T154946Z" creationid="msdx" creationdate="20150430T154946Z">
        <seg>添加在 Scala 源目录中找到的所有<bpt i="0" x="0">&lt;c0&gt;</bpt>.java<ept i="0">&lt;/c0&gt;</ept>文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Adds all source files found in the Groovy source directories.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T094141Z" creationid="msdx" creationdate="20150429T094056Z">
        <seg>添加在 Groovy 的源目录中找到的所有源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Adds all source files found in the Scala source directories.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150430T154952Z" creationid="msdx" creationdate="20150430T154952Z">
        <seg>添加在 Scala 的源目录中找到的所有源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Adds ear application support to <bpt i="0" x="0">&lt;c0&gt;</bpt>.project<ept i="0">&lt;/c0&gt;</ept> file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T003916Z" creationid="haohang" creationdate="20150603T003905Z">
        <seg>将 ear 应用程序支持添加到<bpt i="0" x="0">&lt;c0&gt;</bpt>.project<ept i="0">&lt;/c0&gt;</ept>文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Adds integration with Visual Studio.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T040454Z" creationid="Administrator" creationdate="20150425T040454Z">
        <seg>添加对 Visual Studio 的集成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Adds native assembly language capabilities to a project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141209T074100Z" creationid="msdx" creationdate="20141209T073748Z">
        <seg>向项目添加本机汇编语言的功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Adds some shared convention properties to the project, relating to report generation.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T072515Z" creationid="Administrator" creationdate="20150425T072515Z">
        <seg>将一些共享的公约属性添加到项目中，它们与报告的生成有关。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Adds support for assembling web application WAR files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T031701Z" creationid="Administrator" creationdate="20150425T031701Z">
        <seg>添加用于组装 web 应用程序的 WAR 文件的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Adds support for building Groovy projects.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141209T073650Z" creationid="msdx" creationdate="20141126T121056Z">
        <seg>添加对 Groovy 项目构建的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Adds support for building J2EE applications.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T031446Z" creationid="Administrator" creationdate="20150425T031446Z">
        <seg>添加用于构建 J2EE 应用程序的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Adds support for building OSGi bundles.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T031641Z" creationid="Administrator" creationdate="20150425T031641Z">
        <seg>添加构建 OSGi 捆绑包的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Adds support for building Scala projects.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141209T073656Z" creationid="msdx" creationdate="20141126T121125Z">
        <seg>添加对 Scala 项目构建的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Adds support for building ZIP and TAR distributions for a Java library.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T031930Z" creationid="Administrator" creationdate="20150425T031930Z">
        <seg>添加构建一个Java类库的 ZIP 和 TAR 分发包的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Adds support for building ZIP and TAR distributions.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T031814Z" creationid="Administrator" creationdate="20150425T031814Z">
        <seg>添加构建 ZIP 和 TAR 分发包的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Adds support for generating parsers using <bpt i="0" x="0">&lt;a0&gt;</bpt>Antlr<ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141209T073627Z" creationid="msdx" creationdate="20141209T073544Z">
        <seg>添加对使用<bpt i="0" x="0">&lt;a0&gt;</bpt>Antlr<ept i="0">&lt;/a0&gt;</ept>作为生成解析器的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Adds support for including Windows resources in native binaries.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141209T074414Z" creationid="msdx" creationdate="20141209T074414Z">
        <seg>添加对在本地bin文件中包含 Windows 资源的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Adds support for initializing a new Gradle build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T040119Z" creationid="Administrator" creationdate="20150425T040119Z">
        <seg>添加用于初始化一个新 Gradle 构建的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Adds support for publishing artifacts to Maven repositories.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T031622Z" creationid="Administrator" creationdate="20150425T031622Z">
        <seg>添加用于将项目发布到 Maven 仓库的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Adds support for running <bpt i="0" x="0">&lt;a0&gt;</bpt>CUnit<ept i="0">&lt;/a0&gt;</ept> tests.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T040302Z" creationid="Administrator" creationdate="20150425T040302Z">
        <seg>添加用于运行<bpt i="0" x="0">&lt;a0&gt;</bpt>CUnit<ept i="0">&lt;/a0&gt;</ept>测试的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Adds tasks for running and bundling a Java project as a command-line application.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T031425Z" creationid="Administrator" creationdate="20150425T031425Z">
        <seg>添加了一些任务，用于运行和捆绑一个Java项目作为命令行应用程序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Adds the Groovy source sets concept to the project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T073921Z" creationid="Administrator" creationdate="20150425T072049Z">
        <seg>向项目中添加Groovy 的源集概念。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Adds the Scala source sets concept to the project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T073933Z" creationid="Administrator" creationdate="20150425T072323Z">
        <seg>向项目中添加Scala 的源集概念。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Adds the ability to digitally sign built files and artifacts.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T035601Z" creationid="Administrator" creationdate="20150425T035601Z">
        <seg>添加对生成的文件或构件进行数字签名的功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Adds the source sets concept to the project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T073912Z" creationid="Administrator" creationdate="20150425T071951Z">
        <seg>对项目添加源集的概念。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Adds the standard lifecycle tasks and configures reasonable defaults for the archive tasks:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T041156Z" creationid="Administrator" creationdate="20150425T041156Z">
        <seg>添加标准的生命周期任务，并为归档任务默认进行合理的配置：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Adds web application support to <bpt i="0" x="0">&lt;c0&gt;</bpt>.project<ept i="0">&lt;/c0&gt;</ept> file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T003840Z" creationid="haohang" creationdate="20150603T003840Z">
        <seg>将 web 应用程序支持添加到<bpt i="0" x="0">&lt;c0&gt;</bpt>.project<ept i="0">&lt;/c0&gt;</ept>文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Adjusts java compiler settings</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T093736Z" creationid="haohang" creationdate="20150707T093736Z">
        <seg>调整 java 编译器设置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>After all Gradle is a general purpose build tool at its core, so the projects don't have to be java projects.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160522T024945Z" creationid="95" creationdate="20160522T024945Z">
        <seg>在全部 Gradle 的核心都是作为一个通用构建工具后，我们的项目并不一定得是个 java 项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>After importing to eclipse your war/ear projects should be configured to work with WTP.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T035147Z" creationid="Administrator" creationdate="20150425T035147Z">
        <seg>你的war/ear项目在导入eclipse 后，应配置为能在 WTP 中使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>After such an execution you find the following new or updated files in your project directory (in case the default configuration of the wrapper task is used).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161217T160524Z" creationid="95" creationdate="20161217T150933Z">
        <seg>在这样执行之后，你会在你的项目目录中发现以下新生成的或更新的文件（在所使用的wrapper任务为默认配置的情况下）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>After the sonarProperties block has been evaluated, values are converted to Strings as follows: Collection values are (recursively) converted to comma-separated Strings, and all other values are converted by calling their <bpt i="3" x="3">&lt;c3&gt;</bpt>toString()<ept i="3">&lt;/c3&gt;</ept> method.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150525T233042Z" creationid="haohang" creationdate="20150525T233042Z">
        <seg>SonarProperties 块在经过评估后，这些值值被转换为字符串，如下所示： 集合的值（递归） 转换为以逗号分隔的字符串，其他所有的值通过调用其<bpt i="3" x="3">&lt;c3&gt;</bpt>tostring ()<ept i="3">&lt;/c3&gt;</ept>方法进行转换。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>After these files have been added to the project, the project should then be built with the added <bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>gradlew<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/s2&gt;</ept> command.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161217T160818Z" creationid="95" creationdate="20161217T160604Z">
        <seg>在这些文件都已经被添加到项目中之后，这个项目以后应该使用所添加的 <bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>gradlew<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/s2&gt;</ept>命令进行构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Again, this method accepts any of the types supported by the <bpt i="0" x="0">&lt;a0&gt;</bpt>files()<ept i="0">&lt;/a0&gt;</ept> method.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T123615Z" creationid="msdx" creationdate="20141113T123615Z">
        <seg>再者，这个方法接受<bpt i="0" x="0">&lt;a0&gt;</bpt>files()<ept i="0">&lt;/a0&gt;</ept>方法所支持的任何类型的参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>All <bpt i="0" x="0">&lt;c0&gt;</bpt>.java<ept i="0">&lt;/c0&gt;</ept> files of this source set.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T052931Z" creationid="Administrator" creationdate="20150427T052931Z">
        <seg>该源集的所有<bpt i="0" x="0">&lt;c0&gt;</bpt>.java<ept i="0">&lt;/c0&gt;</ept> 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>All Checkstyle tasks, including <bpt i="0" x="0">&lt;c0&gt;</bpt>checkstyleMain<ept i="0">&lt;/c0&gt;</ept> and <bpt i="1" x="1">&lt;c1&gt;</bpt>checkstyleTest<ept i="1">&lt;/c1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T132536Z" creationid="msdx" creationdate="20150505T132536Z">
        <seg>所有 Checkstyle tasks，包括<bpt i="0" x="0">&lt;c0&gt;</bpt>checkstyleMain<ept i="0">&lt;/c0&gt;</ept>和<bpt i="1" x="1">&lt;c1&gt;</bpt>checkstyleTest<ept i="1">&lt;/c1&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>All CodeNarc tasks, including <bpt i="0" x="0">&lt;c0&gt;</bpt>codenarcMain<ept i="0">&lt;/c0&gt;</ept> and <bpt i="1" x="1">&lt;c1&gt;</bpt>codenarcTest<ept i="1">&lt;/c1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T133359Z" creationid="msdx" creationdate="20150505T133359Z">
        <seg>所有的 CodeNarc 任务，包括<bpt i="0" x="0">&lt;c0&gt;</bpt>codenarcMain<ept i="0">&lt;/c0&gt;</ept>和<bpt i="1" x="1">&lt;c1&gt;</bpt>codenarcTest<ept i="1">&lt;/c1&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>All FindBugs tasks, including <bpt i="0" x="0">&lt;c0&gt;</bpt>findbugsMain<ept i="0">&lt;/c0&gt;</ept> and <bpt i="1" x="1">&lt;c1&gt;</bpt>findbugsTest<ept i="1">&lt;/c1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T133809Z" creationid="msdx" creationdate="20150505T133809Z">
        <seg>所有 FindBugs 任务，包括<bpt i="0" x="0">&lt;c0&gt;</bpt>findbugsMain<ept i="0">&lt;/c0&gt;</ept>和<bpt i="1" x="1">&lt;c1&gt;</bpt>findbugsTest<ept i="1">&lt;/c1&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>All Groovy source files of this source set.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T093538Z" creationid="msdx" creationdate="20150429T093538Z">
        <seg>该source set 中的所有 Groovy 源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>All JDepend tasks, including <bpt i="0" x="0">&lt;c0&gt;</bpt>jdependMain<ept i="0">&lt;/c0&gt;</ept> and <bpt i="1" x="1">&lt;c1&gt;</bpt>jdependTest<ept i="1">&lt;/c1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T134431Z" creationid="msdx" creationdate="20150505T134431Z">
        <seg>所有 JDepend 任务，包括<bpt i="0" x="0">&lt;c0&gt;</bpt>jdependMain<ept i="0">&lt;/c0&gt;</ept>和<bpt i="1" x="1">&lt;c1&gt;</bpt>jdependTest<ept i="1">&lt;/c1&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>All PMD tasks, including <bpt i="0" x="0">&lt;c0&gt;</bpt>pmdMain<ept i="0">&lt;/c0&gt;</ept> and <bpt i="1" x="1">&lt;c1&gt;</bpt>pmdTest<ept i="1">&lt;/c1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T135651Z" creationid="msdx" creationdate="20150505T135651Z">
        <seg>所有的 PMD 任务，包括<bpt i="0" x="0">&lt;c0&gt;</bpt>pmdMain<ept i="0">&lt;/c0&gt;</ept>和<bpt i="1" x="1">&lt;c1&gt;</bpt>pmdTest<ept i="1">&lt;/c1&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>All Scala source files of this source set.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150430T154854Z" creationid="msdx" creationdate="20150430T154854Z">
        <seg>该source set 中的所有 Scala 源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>All archive tasks in the project, including <bpt i="0" x="0">&lt;c0&gt;</bpt>jar<ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T010127Z" creationid="Administrator" creationdate="20150426T010127Z">
        <seg>项目中的所有归档项目，包括<bpt i="0" x="0">&lt;c0&gt;</bpt>jar<ept i="0">&lt;/c0&gt;</ept>任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>All attributes for a dependency are optional, except the name.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T103457Z" creationid="haohang" creationdate="20150801T103114Z">
        <seg>一个依赖的所有属性都是可选的，除了 name。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>All build setup types include the setup of the Gradle Wrapper.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T074654Z" creationid="haohang" creationdate="20150707T074654Z">
        <seg>所有构建安装类型都包括 Gradle Wrapper 的安装。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>All dependencies in the <bpt i="2" x="2">&lt;c2&gt;</bpt>deploy<ept i="2">&lt;/c2&gt;</ept> configuration are placed in the root of the EAR archive, and are <bpt i="3" x="3">&lt;s3&gt;</bpt><bpt i="4" x="4">&lt;e4&gt;</bpt>not<ept i="4">&lt;/e4&gt;</ept><ept i="3">&lt;/s3&gt;</ept> transitive.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T141234Z" creationid="msdx" creationdate="20150503T095652Z">
        <seg>所有在<bpt i="2" x="2">&lt;c2&gt;</bpt>deploy<ept i="2">&lt;/c2&gt;</ept>配置中的依赖项都放在 EAR 文件的根目录中，并且是<bpt i="3" x="3">&lt;s3&gt;</bpt><bpt i="4" x="4">&lt;e4&gt;</bpt>不可<ept i="4">&lt;/e4&gt;</ept><ept i="3">&lt;/s3&gt;</ept>传递的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>All dependencies in the <bpt i="5" x="5">&lt;c5&gt;</bpt>earlib<ept i="5">&lt;/c5&gt;</ept> configuration are placed in the 'lib' directory in the EAR archive and <bpt i="6" x="6">&lt;s6&gt;</bpt><bpt i="7" x="7">&lt;e7&gt;</bpt>are<ept i="7">&lt;/e7&gt;</ept><ept i="6">&lt;/s6&gt;</ept> transitive.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T141319Z" creationid="msdx" creationdate="20150504T141319Z">
        <seg>所有在 <bpt i="5" x="5">&lt;c5&gt;</bpt>earlib<ept i="5">&lt;/c5&gt;</ept> 配置的依赖都放在 EAR 文件的“lib”目录中，并且是 <bpt i="6" x="6">&lt;s6&gt;</bpt><bpt i="7" x="7">&lt;e7&gt;</bpt>可<ept i="7">&lt;/e7&gt;</ept><ept i="6">&lt;/s6&gt;</ept> 传递的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>All details of the publishing model are still considered in POM generation, including <bpt i="0" x="0">&lt;c0&gt;</bpt>components<ept i="0">&lt;/c0&gt;</ept>`, custom <bpt i="1" x="1">&lt;c1&gt;</bpt>artifacts<ept i="1">&lt;/c1&gt;</ept>, and any modifications made via <bpt i="2" x="2">&lt;c2&gt;</bpt>pom.withXml<ept i="2">&lt;/c2&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065116Z" creationid="95" creationdate="20170416T064824Z">
        <seg>发布模型的所有细节仍然要在 POM 生成中考虑，包括<bpt i="0" x="0">&lt;c0&gt;</bpt>compon<ept i="0">&lt;/c0&gt;</ept>'，自定义<bpt i="1" x="1">&lt;c1&gt;</bpt>artifacts<ept i="1">&lt;/c1&gt;</ept>，以及通过<bpt i="2" x="2">&lt;c2&gt;</bpt>pom.withXml<ept i="2">&lt;/c2&gt;</ept>所做的任何修改。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>All enhanced objects in Gradle's domain model can hold extra user-defined properties.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T050420Z" creationid="msdx" creationdate="20141108T045410Z">
        <seg>Gradle 的域模型中，所有增强的对象都可以容纳用户定义的额外的属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>All files stored in <bpt i="0" x="0">&lt;c0&gt;</bpt>src/dist<ept i="0">&lt;/c0&gt;</ept> will be added to the root of the distribution.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150702T104440Z" creationid="haohang" creationdate="20150702T104348Z">
        <seg>所有存储在 <bpt i="0" x="0">&lt;c0&gt;</bpt>src/dist<ept i="0">&lt;/c0&gt;</ept> 的文件都将添加到 distribution 的根目录中</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>All in all, your build is less maintainable and reliable than it could be when using client modules.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151201T070323Z" creationid="haohang" creationdate="20151201T070323Z">
        <seg>总之，比起使用客户端模块，你的构建不再那么容易维护和可靠。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>All matching task names of the project hierarchy starting with the current dir are executed.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160715T091607Z" creationid="haohang" creationdate="20160715T091607Z">
        <seg>从当前目录开始的该项目层级里，所有名称匹配的任务会被执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>All of Gradle's scripting features can be leveraged to configure Sonar Runner as needed.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T055919Z" creationid="msdx" creationdate="20150513T055919Z">
        <seg>根据需要，可以利用 Gradle 脚本的所有特性去配置 Sonar Runner。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>All of Gradle's tasks share a common API and you can create dependencies between them.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T123916Z" creationid="msdx" creationdate="20141111T123916Z">
        <seg>Gradle 的所有任务共享一个公共 API，您可以创建它们之间的依赖性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>All of the Gradle build language is available in the external script.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T152336Z" creationid="msdx" creationdate="20141109T152336Z">
        <seg>Gradle 构建语言的所有内容在外部脚本中也可以使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>All of the artifacts for the module are then requested from the <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>same repository<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> that was chosen in the process above.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T053831Z" creationid="95" creationdate="20151115T053546Z">
        <seg>然后这个模块的所有artifact将从上面的过程所选择的 <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>同一个仓库<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> 中请求。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>All of the files from the <bpt i="0" x="0">&lt;c0&gt;</bpt>src/dist<ept i="0">&lt;/c0&gt;</ept> directory are copied.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T070424Z" creationid="haohang" creationdate="20150707T070424Z">
        <seg>所有在<bpt i="0" x="0">&lt;c0&gt;</bpt>src/dist<ept i="0">&lt;/c0&gt;</ept>目录中的文件都会被复制。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>All of the files in the "<bpt i="0" x="0">&lt;c0&gt;</bpt>src/<bpt i="1" x="1">&lt;e1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>$distribution.name<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/e1&gt;</ept>/dist<ept i="0">&lt;/c0&gt;</ept>" directory will automatically be included in the distribution.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150701T031747Z" creationid="haohang" creationdate="20150701T031747Z">
        <seg>所有在”<bpt i="0" x="0">&lt;c0&gt;</bpt>src/<bpt i="1" x="1">&lt;e1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>$distribution.name<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/e1&gt;</ept>/dist<ept i="0">&lt;/c0&gt;</ept>“目录中的文件都会被自动地包含在 distribution 中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>All of the publications of a project are defined in the <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>PublishingExtension.getPublications()<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> container.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170211T135823Z" creationid="95" creationdate="20170211T135808Z">
        <seg>一个项目的所有publications会在 <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>PublishingExtension.getPublications()<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> 容器中定义。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>All of the useful features, such as the ability to compile Java code for example, are added by <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>plugins<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141122T161403Z" creationid="msdx" creationdate="20141121T155803Z">
        <seg>所有有用的功能，例如以能够编译 Java 代码为例，都是通过<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>插件<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>进行添加的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>All of these files <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>should<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> be submitted to your version control system.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161217T160559Z" creationid="95" creationdate="20161217T160559Z">
        <seg>所有这些文件都<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>应该<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> 被提交到你的版本控制系统中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>All of this happened during the <bpt i="0" x="0">&lt;c0&gt;</bpt>apply plugin: "java"<ept i="0">&lt;/c0&gt;</ept> step.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141124T093017Z" creationid="msdx" creationdate="20141124T093017Z">
        <seg>所有这一切都发生在<bpt i="0" x="0">&lt;c0&gt;</bpt>apply plugin: "java"<ept i="0">&lt;/c0&gt;</ept>这一步过程中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>All source files of this source set.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T053018Z" creationid="Administrator" creationdate="20150427T053018Z">
        <seg>该源集的所有源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>All tasks that build the associated archives.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151228T152035Z" creationid="95" creationdate="20151228T152035Z">
        <seg>所有构建相关archives的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>All tasks which produce the compile classpath.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T174230Z" creationid="Administrator" creationdate="20150425T174230Z">
        <seg>产生编译类路径中的所有任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>All tasks which produce the source set's compile classpath.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T005749Z" creationid="Administrator" creationdate="20150426T005749Z">
        <seg>所有产生源集编译类路径的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>All the <bpt i="1" x="1">&lt;c1&gt;</bpt>hello<ept i="1">&lt;/c1&gt;</ept> tasks of the different projects were executed.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160530T151942Z" creationid="95" creationdate="20160530T151942Z">
        <seg>不同项目的所有<bpt i="1" x="1">&lt;c1&gt;</bpt>hello<ept i="1">&lt;/c1&gt;</ept>任务被都会被执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>All the Groovy source directories can contain Groovy <bpt i="1" x="1">&lt;s1&gt;</bpt><bpt i="2" x="2">&lt;e2&gt;</bpt>and<ept i="2">&lt;/e2&gt;</ept><ept i="1">&lt;/s1&gt;</ept> Java code.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T074837Z" creationid="msdx" creationdate="20150429T074749Z">
        <seg>所有 Groovy 的源目录都可以包含 Groovy<bpt i="1" x="1">&lt;s1&gt;</bpt><bpt i="2" x="2">&lt;e2&gt;</bpt>和<ept i="2">&lt;/e2&gt;</ept><ept i="1">&lt;/s1&gt;</ept>Java 代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>All the Scala source directories can contain Scala <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>and<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> Java code.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T152518Z" creationid="msdx" creationdate="20150429T152518Z">
        <seg>所有 Scala 的源目录都可以包含 Scala<bpt i="1" x="1">&lt;s1&gt;</bpt><bpt i="2" x="2">&lt;e2&gt;</bpt>和<ept i="2">&lt;/e2&gt;</ept><ept i="1">&lt;/s1&gt;</ept>Java 代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>All the build logic is in the <bpt i="0" x="0">&lt;c0&gt;</bpt>build.gradle<ept i="0">&lt;/c0&gt;</ept> of the root project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T083927Z" creationid="haohang" creationdate="20160726T083927Z">
        <seg>所有的构建逻辑都在根项目的<bpt i="0" x="0">&lt;c0&gt;</bpt>build.gradle<ept i="0">&lt;/c0&gt;</ept>中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>All the dependencies of the <bpt i="5" x="5">&lt;c5&gt;</bpt>runtime<ept i="5">&lt;/c5&gt;</ept> <bpt i="6" x="6">&lt;s6&gt;</bpt>[<bpt i="7" x="7">&lt;a7&gt;</bpt>13<ept i="7">&lt;/a7&gt;</ept>]<ept i="6">&lt;/s6&gt;</ept> configuration are copied to <bpt i="8" x="8">&lt;c8&gt;</bpt>WEB-INF/lib<ept i="8">&lt;/c8&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T093549Z" creationid="msdx" creationdate="20150503T093549Z">
        <seg>所有<bpt i="5" x="5">&lt;c5&gt;</bpt>runtime<ept i="5">&lt;/c5&gt;</ept> <bpt i="6" x="6">&lt;s6&gt;</bpt>[<bpt i="7" x="7">&lt;a7&gt;</bpt>13<ept i="7">&lt;/a7&gt;</ept>]<ept i="6">&lt;/s6&gt;</ept>配置的依赖被复制到<bpt i="8" x="8">&lt;c8&gt;</bpt>WEB-INF/lib<ept i="8">&lt;/c8&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>All the elements of this tree are Java beans.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T135104Z" creationid="95" creationdate="20160105T135104Z">
        <seg>这个配置树的所有元素都是 Java beans。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>All this is not really a big deal but in its sum it has an impact.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151201T060837Z" creationid="haohang" creationdate="20151201T060807Z">
        <seg>尽管这一切真的不是大问题，但累加起来就有影响了。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>All verification tasks in the project, including <bpt i="0" x="0">&lt;c0&gt;</bpt>test<ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T010446Z" creationid="Administrator" creationdate="20150426T010303Z">
        <seg>项目中的所有核查项目，包括<bpt i="0" x="0">&lt;c0&gt;</bpt>test<ept i="0">&lt;/c0&gt;</ept>任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Allow tests to be declared with javadoc-style annotations.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160504T151656Z" creationid="95" creationdate="20160504T151656Z">
        <seg>允许测试声明为 javadoc 风格的注解。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Allows configuring classpath information</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T022422Z" creationid="haohang" creationdate="20150624T022422Z">
        <seg>允许配置类路径信息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Allows configuring jdt information (source/target java compatibility)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T022452Z" creationid="haohang" creationdate="20150624T022452Z">
        <seg>允许配置 jdt 信息 (source/target java 兼容性)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Allows configuring module information</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T072712Z" creationid="haohang" creationdate="20150625T072712Z">
        <seg>允许配置模块信息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Allows configuring project information</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T022410Z" creationid="haohang" creationdate="20150624T022410Z">
        <seg>允许配置项目信息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Allows configuring the workspace XML</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T072727Z" creationid="haohang" creationdate="20150625T072727Z">
        <seg>允许配置工作区 XML</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Allows configuring wtp component information only if <bpt i="0" x="0">&lt;c0&gt;</bpt>eclipse-wtp<ept i="0">&lt;/c0&gt;</ept> plugin was applied.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T022521Z" creationid="haohang" creationdate="20150624T022521Z">
        <seg>仅当<bpt i="0" x="0">&lt;c0&gt;</bpt>eclipse-wtp<ept i="0">&lt;/c0&gt;</ept>插件被应用时，允许配置 wtp 组件信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Allows configuring wtp facet information only if <bpt i="0" x="0">&lt;c0&gt;</bpt>eclipse-wtp<ept i="0">&lt;/c0&gt;</ept> plugin was applied.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T022557Z" creationid="haohang" creationdate="20150624T022557Z">
        <seg>仅当<bpt i="0" x="0">&lt;c0&gt;</bpt>eclipse-wtp<ept i="0">&lt;/c0&gt;</ept>插件被应用时，允许配置 wtp 方面信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Also generates an IDEA project and workspace file if the project is the root project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T071516Z" creationid="haohang" creationdate="20150625T071516Z">
        <seg>如果该项目为根项目，同时生成一个 IDEA 项目和工作区文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Also have a look at <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Ear<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T142820Z" creationid="msdx" creationdate="20150504T142820Z">
        <seg>另请参阅 <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Ear<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Alternatively you can specify the fully qualified task name to be executed.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T040215Z" creationid="Administrator" creationdate="20150428T040215Z">
        <seg>或者你可以指定要执行的任务的完整限定名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Alternatively, Sonar properties can be set from the command line.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T064333Z" creationid="msdx" creationdate="20150513T064333Z">
        <seg>或者，可以从命令行设置 Sonar 属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Alternatively, a library dependency can be provided directly to the <bpt i="0" x="0">&lt;c0&gt;</bpt>ExecutableBinary<ept i="0">&lt;/c0&gt;</ept> for the <bpt i="1" x="1">&lt;c1&gt;</bpt>executable<ept i="1">&lt;/c1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160325T033113Z" creationid="haohang" creationdate="20160325T033028Z">
        <seg>另外，一个库依赖项可以直接提供给<bpt i="0" x="0">&lt;c0&gt;</bpt>ExecutableBinary<ept i="0">&lt;/c0&gt;</ept>的<bpt i="1" x="1">&lt;c1&gt;</bpt>executable<ept i="1">&lt;/c1&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Alternatively, an <bpt i="1" x="1">&lt;c1&gt;</bpt>ext<ept i="1">&lt;/c1&gt;</ept> block can be used to add multiple properties at once.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T050644Z" creationid="msdx" creationdate="20141108T050644Z">
        <seg>或者，可以使用<bpt i="1" x="1">&lt;c1&gt;</bpt>ext<ept i="1">&lt;/c1&gt;</ept>块同时添加多个属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Alternatively, some or all connection settings can be set from the command line (see <bpt i="0" x="0">&lt;a0&gt;</bpt>Section 35.6, “Configuring Sonar Settings from the Command Line”<ept i="0">&lt;/a0&gt;</ept>).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150510T143749Z" creationid="msdx" creationdate="20150510T143657Z">
        <seg>或者，可以从命令行设置某些或全部的连接设置 （见<bpt i="0" x="0">&lt;a0&gt;</bpt>第 35.6 节，“从命令行配置 Sonar 设置”<ept i="0">&lt;/a0&gt;</ept>）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Alternatively, sometimes the module you request can change over time, even for the same version.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T011515Z" creationid="haohang" creationdate="20150722T011515Z">
        <seg>另外，你请求的模块随着时间推移，即使是同一版本，有时也可能改变了。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Alternatively, the <bpt i="1" x="1">&lt;c1&gt;</bpt>beforeMerged<ept i="1">&lt;/c1&gt;</ept> hook makes it possible to overwrite just certain parts of the existing content.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T064649Z" creationid="haohang" creationdate="20150625T064649Z">
        <seg>另外， <bpt i="1" x="1">&lt;c1&gt;</bpt>beforeMerged<ept i="1">&lt;/c1&gt;</ept> hook 可以实现只覆盖现有的某些部分的内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Alternatively, the properties can be specified in a gradle.properties file, either in the build's root directory or in the Gradle home directory.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141121T141512Z" creationid="msdx" creationdate="20141121T141512Z">
        <seg>或者，可以在构建的根目录或 Gradle 主目录中的 gradle.properties 文件中指定这些属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Alternatively, you can configure the tool chains directly, as described in the `Native Binary Variants` section, below.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160128T153337Z" creationid="95" creationdate="20160128T153247Z">
        <seg>或者，你可以直接配置工具链，就如下面的“原生二进制变种”中描述的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Alternatively, you can specify the download URL of the Gradle distribution.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T040029Z" creationid="95" creationdate="20161218T040004Z">
        <seg>或者，你可以指定Gradle分发包的下载URL。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Although Gradle already offers parallel test execution via <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Test.setMaxParallelForks()<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> the feature described in this section is parallel execution at a project level.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T090149Z" creationid="haohang" creationdate="20160726T090149Z">
        <seg>虽然 Gradle 已经通过<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Test.setMaxParallelForks()<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>提供了并行执行，本节所描述的这个功能是在项目级别上的并行执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Although Groovy's XML support makes up for a lot, this approach is less convenient than manipulating the domain objects.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T070338Z" creationid="haohang" creationdate="20150625T070042Z">
        <seg>尽管 Groovy 的 XML 支持对其有很大作用，但这种方法比起操纵域对象依然不大方便 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Although module meta-data and module artifacts must be located in the same repository, it is possible to compose a single repository of multiple URLs, giving multiple locations to search for meta-data files and jar files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T094044Z" creationid="haohang" creationdate="20150807T094044Z">
        <seg>虽然模块的元数据和模块 artifacts 必须位于同一仓库，但也有可能单个仓库有多个 Url，给多个位置去搜索元数据文件和 jar 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Amongst other things, Gradle supports the same builder syntax as polyglot Maven.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160104T153058Z" creationid="95" creationdate="20160104T153058Z">
        <seg>除其他事项外，Gradle支持和polyglot Maven同样的生成器语法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>An <bpt i="0" x="0">&lt;c0&gt;</bpt>AntBuilder<ept i="0">&lt;/c0&gt;</ept> instance</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T044506Z" creationid="msdx" creationdate="20141108T044503Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>AntBuilder<ept i="0">&lt;/c0&gt;</ept>实例</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>An <bpt i="0" x="0">&lt;c0&gt;</bpt>upToDateWhen<ept i="0">&lt;/c0&gt;</ept> criteria added to the task returns <bpt i="1" x="1">&lt;c1&gt;</bpt>false<ept i="1">&lt;/c1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160817T144359Z" creationid="95" creationdate="20160816T150336Z">
        <seg>一个添加到任务的 <bpt i="0" x="0">&lt;c0&gt;</bpt>upToDateWhen<ept i="0">&lt;/c0&gt;</ept> 标准返回 <bpt i="1" x="1">&lt;c1&gt;</bpt>false<ept i="1">&lt;/c1&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>An HTML test report.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083941Z" creationid="msdx" creationdate="20150428T083941Z">
        <seg>一个 HTML 测试报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>An Ivy repository.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T095700Z" creationid="haohang" creationdate="20150807T095700Z">
        <seg>一个 Ivy 仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>An artifact only notation creates a module dependency which downloads only the artifact file with the specified extension.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150731T035208Z" creationid="haohang" creationdate="20150731T034643Z">
        <seg>一个 artifact only notation 创建了一个模块依赖，它只下载指定扩展名的 artifact 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>An example is publishing a separate API and implementation jar for your library.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170304T032955Z" creationid="95" creationdate="20170304T032955Z">
        <seg>一个例子是为您的library 分别发布一个单独的 API 和它的实现的 jar。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>An example of component flavors might differentiate between 'demo', 'paid' and 'enterprise' editions of the component, where the same set of sources is used to produce binaries with different functions.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T081101Z" creationid="haohang" creationdate="20160408T081101Z">
        <seg>一个关于组件flavor的例子是可以区分组件的“demo”，“paid”和“enterprise”版本，它们都用同样的源码来生成不同功能的二进制文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>An example of such resource is a web container started before an integration test task and which should be always shut down, even if some of the tests fail.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T123038Z" creationid="msdx" creationdate="20141111T123031Z">
        <seg>这样的资源的一个例子是，一个 web 容器会在集成测试任务前开始，并且在之后关闭，即使有些测试失败。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>An example of this type of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>changing module<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> is a Maven <bpt i="2" x="2">&lt;c2&gt;</bpt>SNAPSHOT<ept i="2">&lt;/c2&gt;</ept> module, which always points at the latest artifact published.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T012021Z" creationid="haohang" creationdate="20150722T011518Z">
        <seg>这种<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>变化模块<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>的类型的一个例子是 Maven<bpt i="2" x="2">&lt;c2&gt;</bpt>SNAPSHOT<ept i="2">&lt;/c2&gt;</ept>模块，它总是指向最新发布的构件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>An exception is thrown if no tests can be found for a particular subproject.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T035944Z" creationid="Administrator" creationdate="20150428T035944Z">
        <seg>如果在一个特定的子项目中，找不到测试用例，那么将会抛出异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>An executable or library can be built to run on different operating systems and cpu architectures, with a variant being produced for each platform.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160401T092141Z" creationid="haohang" creationdate="20160401T092141Z">
        <seg>通过为每个平台生成一个变种，能够使一个可执行文件或库构建为可以运行在不同的操作系统及CPU架构上。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>An input property has changed since the previous execution.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160817T144521Z" creationid="95" creationdate="20160817T144448Z">
        <seg>从前一次执行开始，一个输入属性已经被更改。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>An overview of which Resolvers are offered by Ivy and thus also by Gradle can be found <bpt i="0" x="0">&lt;a0&gt;</bpt>here<ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151007T022500Z" creationid="95" creationdate="20151007T022029Z">
        <seg>其中由 Ivy （也因此由 Gradle ）提供解析器的，它的概述可以在<bpt i="0" x="0">&lt;a0&gt;</bpt>这里<ept i="0">&lt;/a0&gt;</ept>找到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Analyzes a project hierarchy and stores the results in the Sonar database.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T054246Z" creationid="msdx" creationdate="20150513T054217Z">
        <seg>分析项目层次结构，并将结果存储在 Sonar 数据库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Analyzing Custom Source Sets</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065622Z" creationid="95" creationdate="20170416T065622Z">
        <seg>分析自定义的Source Sets</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Analyzing Multi-Project Builds</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065612Z" creationid="95" creationdate="20170416T065612Z">
        <seg>分析多项目构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Analyzing a project hierarchy also takes less time than analyzing each project separately.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150514T152303Z" creationid="msdx" creationdate="20150514T152303Z">
        <seg>分析一个项目的层次结果还可以比单独分析每个项目花费更省时间。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Analyzing languages other than Java</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065628Z" creationid="95" creationdate="20170416T065628Z">
        <seg>分析非 Java 语言</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>And how does this work?</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160527T161155Z" creationid="95" creationdate="20160527T161155Z">
        <seg>它是怎么实现的？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>And not just the jar but also the transitive dependencies of this jar?</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T083402Z" creationid="haohang" creationdate="20160726T083402Z">
        <seg>并且，不止是这个jar包，还包括了它的传递依赖？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>And the <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Project<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> interface is your starting point for accessing everything in the Gradle API.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T041035Z" creationid="msdx" creationdate="20141108T041035Z">
        <seg>并且<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Project<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>接口是您在 Gradle API 中访问一切 的入点。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>And this is actually the case.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T123723Z" creationid="msdx" creationdate="20141111T123723Z">
        <seg>实际上确实是这样子。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>And we like to offer our users a choice.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160727T053544Z" creationid="haohang" creationdate="20160727T053544Z">
        <seg>我们想为我们的用户提供一种选择。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>And where is the build script for the <bpt i="0" x="0">&lt;c0&gt;</bpt>bluewhale<ept i="0">&lt;/c0&gt;</ept> project?</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160522T125624Z" creationid="95" creationdate="20160522T125624Z">
        <seg>那么，<bpt i="0" x="0">&lt;c0&gt;</bpt>bluewhale<ept i="0">&lt;/c0&gt;</ept>项目的构建脚本在哪儿？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>And you don't gain anything.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151201T070341Z" creationid="haohang" creationdate="20151201T070341Z">
        <seg>而你不会有其他收获。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>And you have learned how to create dependencies between tasks.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T160304Z" creationid="msdx" creationdate="20141109T160233Z">
        <seg>并且你已经学会了如何创建任务之间的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>And your custom repository is another infrastructure element which might have downtimes and needs to be updated.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151201T060658Z" creationid="haohang" creationdate="20151130T051930Z">
        <seg>你的自定义存仓库是另一个基础结构元素，它可能有停机时间并且需要更新。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Another difference is that always all projects are configured, even when you start the build from a subproject.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T090222Z" creationid="haohang" creationdate="20160718T090222Z">
        <seg>另一个区别是，所有的项目都总是被配置，即使你是从子项目开始构建的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Another source of information you have to lookup.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151201T060812Z" creationid="haohang" creationdate="20151201T060804Z">
        <seg>你还要查找另外一个信息源。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Another typical per-project configuration is the programming language to be analyzed.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T092019Z" creationid="msdx" creationdate="20150512T091918Z">
        <seg>另一种典型的各个项目配置是配置要分析的编程语言。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Ant can be divided into two layers.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141114T135614Z" creationid="msdx" creationdate="20141114T071759Z">
        <seg>Ant 可以分为两层。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Ant optional dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070847Z" creationid="95" creationdate="20170416T070847Z">
        <seg>Ant 可选依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Ant properties and references</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150330T141252Z" creationid="Administrator" creationdate="20150330T141252Z">
        <seg>Ant 属性和引用</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>AntBuilder</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T044459Z" creationid="msdx" creationdate="20141108T044459Z">
        <seg>AntBuilder</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>AntlrTask</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T094931Z" creationid="haohang" creationdate="20150625T094931Z">
        <seg>AntlrTask</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Any</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T065608Z" creationid="haohang" creationdate="20150628T065608Z">
        <seg>任何</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Any Sonar properties set on the command line also apply to this project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150519T124351Z" creationid="msdx" creationdate="20150519T124351Z">
        <seg>在命令行上设置的任何 Sonar 属性也会应用到这个 project 中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Any log messages which your build classes write using these logging toolkits will be redirected to Gradle's logging system.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T034505Z" creationid="msdx" creationdate="20141116T152826Z">
        <seg>你所构建的类使用这些日志记录工具输出的任何日志消息，都将被重定向到 Gradle 的日志系统。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Any method or property defined in a project build script is also visible to all the sub-projects.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T044833Z" creationid="95" creationdate="20161211T044833Z">
        <seg>任何定义在一个项目的构建脚本中的属性和方法，对于它的所有子项目都是可见的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Any method you call in your build script, which <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>is not defined<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> in the build script, is delegated to the <bpt i="2" x="2">&lt;c2&gt;</bpt>Project<ept i="2">&lt;/c2&gt;</ept> object.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T063459Z" creationid="msdx" creationdate="20141108T041227Z">
        <seg>在构建脚本中，你所调用的任何一个方法，如果在构建脚本中<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>未定义<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>，它将被委托给<bpt i="2" x="2">&lt;c2&gt;</bpt>Project<ept i="2">&lt;/c2&gt;</ept>对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Any other form of project interaction (i.e. by modifying another project object or by reading a value from another project object) causes the projects to be coupled.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T093524Z" creationid="haohang" creationdate="20160726T093148Z">
        <seg>任何其他形式的项目交互（即通过修改另一个project对象或从另一个项目对象中读取值）将会导致项目的耦合。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Any property reference and method call in the init script will delegate to this <bpt i="2" x="2">&lt;c2&gt;</bpt>Gradle<ept i="2">&lt;/c2&gt;</ept> instance.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161214T155736Z" creationid="95" creationdate="20161214T155638Z">
        <seg>在这个init 脚本中调用的任何属性引用以及方法，都会委托给这个 <bpt i="2" x="2">&lt;c2&gt;</bpt>Gradle<ept i="2">&lt;/c2&gt;</ept> 实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Any property you access in your build script, which <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>is not defined<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> in the build script, is delegated to the <bpt i="2" x="2">&lt;c2&gt;</bpt>Project<ept i="2">&lt;/c2&gt;</ept> object.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T063505Z" creationid="msdx" creationdate="20141108T041242Z">
        <seg>在构建脚本中，你所访问的任何一个属性，如果在构建脚本里<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>未定义<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>，它也会被委托给<bpt i="2" x="2">&lt;c2&gt;</bpt>Project<ept i="2">&lt;/c2&gt;</ept>对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Any task you run in the root project folder will cause that same named task to be run on all the children.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160727T052827Z" creationid="haohang" creationdate="20160727T052732Z">
        <seg>你在根项目文件夹运行的任何项目，都会导致所有子项目的同名任务被运行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Apart from a status scheme, a module also has a (current) <bpt i="5" x="5">&lt;s5&gt;</bpt><bpt i="6" x="6">&lt;e6&gt;</bpt>status<ept i="6">&lt;/e6&gt;</ept><ept i="5">&lt;/s5&gt;</ept>, which must be one of the values in its status scheme.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T013218Z" creationid="95" creationdate="20151129T012639Z">
        <seg>除了状态模式以外，模块也有一个（当前） 的<bpt i="5" x="5">&lt;s5&gt;</bpt><bpt i="6" x="6">&lt;e6&gt;</bpt>状态<ept i="6">&lt;/e6&gt;</ept><ept i="5">&lt;/s5&gt;</ept>，这个状态必须是它的状态模式中的值之一。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Apart from source code, the task also analyzes class files and test result files (if available).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150510T143115Z" creationid="msdx" creationdate="20150510T143115Z">
        <seg>除了源代码之外，该 task 还分析了类文件和测试结果文件（如果有）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Appendix A. Gradle Samples</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170412T150645Z" creationid="95" creationdate="20170412T150645Z">
        <seg>附录 A. Gradle 示例</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Appendix B. Potential Traps</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141124T100509Z" creationid="msdx" creationdate="20141124T100509Z">
        <seg>Appendix B. Potential Traps</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Appendix D. Gradle Command Line</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T041029Z" creationid="95" creationdate="20161218T041029Z">
        <seg>Appendix D. Gradle Command Line</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Appendix E. Existing IDE Support and how to cope without it</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141101T034203Z" creationid="msdx" creationdate="20141101T034203Z">
        <seg>Appendix E. Existing IDE Support and how to cope without it</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Applies maven, java and war plugins (as needed)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T093511Z" creationid="haohang" creationdate="20150707T093511Z">
        <seg>应用maven，java 和 war 插件（如果需要）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Applies the Java base plugin.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150526T004421Z" creationid="haohang" creationdate="20150526T004318Z">
        <seg>适用于 Java 基础插件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Applies the “<bpt i="0" x="0">&lt;c0&gt;</bpt>publishing<ept i="0">&lt;/c0&gt;</ept>” plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170211T025613Z" creationid="95" creationdate="20170211T025613Z">
        <seg> 应用“<bpt i="0" x="0">&lt;c0&gt;</bpt>publishing<ept i="0">&lt;/c0&gt;</ept>”插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Applying a plugin to the project allows the plugin to extend the project's capabilities.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141123T150834Z" creationid="msdx" creationdate="20141123T150834Z">
        <seg>把插件应用到项目中可以让插件来扩展项目的功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Applying plugins</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131419Z" creationid="msdx" creationdate="20150509T131419Z">
        <seg>应用插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Applying the plugin adds the <bpt i="0" x="0">&lt;c0&gt;</bpt>buildDashboard<ept i="0">&lt;/c0&gt;</ept> task to your project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150713T095241Z" creationid="haohang" creationdate="20150713T095241Z">
        <seg>应用该插件将会添加 <bpt i="0" x="0">&lt;c0&gt;</bpt>buildDashboard<ept i="0">&lt;/c0&gt;</ept> 任务到你的 project 中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Applying the “<bpt i="0" x="0">&lt;c0&gt;</bpt>ivy-publish<ept i="0">&lt;/c0&gt;</ept>” plugin does the following:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170211T025603Z" creationid="95" creationdate="20170211T024801Z">
        <seg>应用“<bpt i="0" x="0">&lt;c0&gt;</bpt>ivy-publish<ept i="0">&lt;/c0&gt;</ept>”插件将会执行以下操作：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Applying the “<bpt i="0" x="0">&lt;c0&gt;</bpt>maven-publish<ept i="0">&lt;/c0&gt;</ept>” plugin does the following:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170412T152759Z" creationid="95" creationdate="20170412T152759Z">
        <seg>应用“<bpt i="0" x="0">&lt;c0&gt;</bpt>maven-publish<ept i="0">&lt;/c0&gt;</ept>”插件将会执行以下操作：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Architectures</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T092148Z" creationid="haohang" creationdate="20160408T092132Z">
        <seg>架构</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Archives are created using the various archive tasks: <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Zip<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>, <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>Tar<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>, <bpt i="4" x="4">&lt;a4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>Jar<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/a4&gt;</ept>, <bpt i="6" x="6">&lt;a6&gt;</bpt><bpt i="7" x="7">&lt;c7&gt;</bpt>War<ept i="7">&lt;/c7&gt;</ept><ept i="6">&lt;/a6&gt;</ept>, and <bpt i="8" x="8">&lt;a8&gt;</bpt><bpt i="9" x="9">&lt;c9&gt;</bpt>Ear<ept i="9">&lt;/c9&gt;</ept><ept i="8">&lt;/a8&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T145707Z" creationid="msdx" creationdate="20141113T145707Z">
        <seg>使用各种归档任务可以创建以下的归档文件： <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Zip<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>, <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>Tar<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>, <bpt i="4" x="4">&lt;a4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>Jar<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/a4&gt;</ept>, <bpt i="6" x="6">&lt;a6&gt;</bpt><bpt i="7" x="7">&lt;c7&gt;</bpt>War<ept i="7">&lt;/c7&gt;</ept><ept i="6">&lt;/a6&gt;</ept>, and <bpt i="8" x="8">&lt;a8&gt;</bpt><bpt i="9" x="9">&lt;c9&gt;</bpt>Ear<ept i="9">&lt;/c9&gt;</ept><ept i="8">&lt;/a8&gt;</ept>.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Artifacts</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170211T140518Z" creationid="95" creationdate="20170211T140518Z">
        <seg>构件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Artifacts (e.g. jars) produced by this project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T084331Z" creationid="Administrator" creationdate="20150426T084331Z">
        <seg>由本项目生产的构件（如jar包）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Artifacts and configurations</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070238Z" creationid="95" creationdate="20170416T070238Z">
        <seg>构件和配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Artifacts are commonly supplied as raw files, or as instances of <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>AbstractArchiveTask<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> (e.g. Jar, Zip).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170218T093924Z" creationid="95" creationdate="20170211T140929Z">
        <seg>这些构件通常是以原始数据文件，或者是 <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>AbstractArchiveTask<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>的实例（如Jar, Zip）的方式来提供。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>As already mentioned in <bpt i="0" x="0">&lt;a0&gt;</bpt>Section 50.4.3, “Project dependencies”<ept i="0">&lt;/a0&gt;</ept>, Gradle offers project lib dependencies for this.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T083450Z" creationid="haohang" creationdate="20160726T083450Z">
        <seg><bpt i="0" x="0">&lt;a0&gt;</bpt>第50.4.3节，“项目依赖”<ept i="0">&lt;/a0&gt;</ept>中已经提到，Gradle 为此提供了项目库依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>As an example, let's look at the <bpt i="0" x="0">&lt;c0&gt;</bpt>Copy<ept i="0">&lt;/c0&gt;</ept> task provided by Gradle.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T090128Z" creationid="msdx" creationdate="20141110T090128Z">
        <seg>作为一个例子，让我们看看由 Gradle 提供的<bpt i="0" x="0">&lt;c0&gt;</bpt>Copy<ept i="0">&lt;/c0&gt;</ept>任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>As can be seen in the first line above, classifiers can be used together with artifact only notation.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T091110Z" creationid="haohang" creationdate="20150731T100710Z">
        <seg>如上面的第一行所示，classifiers 可以与artifact only notation 一起使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>As described above, for each repository there is a separate metadata cache.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T045631Z" creationid="95" creationdate="20151129T045631Z">
        <seg>如上文所述，每个仓库是一个单独的元数据缓存。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>As described in <bpt i="0" x="0">&lt;a0&gt;</bpt>Section 50.6.8, “More about Ivy resolvers”<ept i="0">&lt;/a0&gt;</ept>, you can use all the Ivy resolvers suitable for the purpose of uploading.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151226T092644Z" creationid="95" creationdate="20151226T092644Z">
        <seg>如<bpt i="0" x="0">&lt;a0&gt;</bpt>50.6.8节，“更多关于Ivy解析器的信息”<ept i="0">&lt;/a0&gt;</ept>中所述，你可以使用符合上传的所有Ivy解析器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>As mentioned before 'should run after' ordering rule will be ignored if it introduces an ordering cycle:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T014850Z" creationid="msdx" creationdate="20141111T014850Z">
        <seg>如之前所述，如果“应该在之后运行”的排序规则引入了排序循环，那么它将会被忽略。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>As mentioned earlier, a Maven module has only one artifact.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150724T035733Z" creationid="haohang" creationdate="20150724T035733Z">
        <seg>正如前面提到的，一个 Maven 模块都只有一个 artifact。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>As of Sonar 3.4, only one language per project can be analyzed.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T092659Z" creationid="msdx" creationdate="20150512T092659Z">
        <seg>截至 Sonar 3.4，每个项目只可以分析一种语言。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>As said above, if no module descriptor file can be found, Gradle by default downloads a jar with the name of the module.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150730T040402Z" creationid="haohang" creationdate="20150730T040402Z">
        <seg>如上所述，如果找不到模块的描述符文件，默认情况下 Gradle 会下载一个与模块的名称相同的 jar 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>As such, if you are using the <bpt i="2" x="2">&lt;c2&gt;</bpt>copy()<ept i="2">&lt;/c2&gt;</ept> method as part of a task action, you must explicitly declare all inputs and outputs in order to get the correct behavior.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T134119Z" creationid="msdx" creationdate="20141113T134119Z">
        <seg>因此，如果您在任务的action里面使用<bpt i="2" x="2">&lt;c2&gt;</bpt>copy()<ept i="2">&lt;/c2&gt;</ept>方法，必须显式声明所有的输入和输出以得到正确的行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>As such, the API for this feature will almost certainly change in upcoming releases.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160815T151748Z" creationid="95" creationdate="20160815T151748Z">
        <seg>因此，这个功能的API几乎可以肯定将在即将推出的版本中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>As such, these plugins are not documented in the user guide.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T040945Z" creationid="Administrator" creationdate="20150425T040945Z">
        <seg>因此，这些插件都不在用户指南中记录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>As the build script executes, it configures this <bpt i="6" x="6">&lt;c6&gt;</bpt>Project<ept i="6">&lt;/c6&gt;</ept> object:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T040651Z" creationid="msdx" creationdate="20141108T040415Z">
        <seg>当构建脚本执行时，它会配置此<bpt i="6" x="6">&lt;c6&gt;</bpt>Project<ept i="6">&lt;/c6&gt;</ept>对象：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>As the property <bpt i="4" x="4">&lt;c4&gt;</bpt>arctic<ept i="4">&lt;/c4&gt;</ept> is set in those build scripts, we have to do it this way.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160530T151336Z" creationid="95" creationdate="20160530T151336Z">
        <seg>由于<bpt i="4" x="4">&lt;c4&gt;</bpt>arctic<ept i="4">&lt;/c4&gt;</ept>属性被设置在那些构建脚本中，我们不得不这样做。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>As this is an <bpt i="0" x="0">&lt;a0&gt;</bpt>incubating<ept i="0">&lt;/a0&gt;</ept> feature, a limited set of the eventual functionality has been implemented at this time.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161228T145338Z" creationid="95" creationdate="20161228T145129Z">
        <seg>由于它还是一个<bpt i="0" x="0">&lt;a0&gt;</bpt>孵化中的<ept i="0">&lt;/a0&gt;</ept>功能，目前只是实现了最终功能的一部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>As this plugin is currently <bpt i="0" x="0">&lt;a0&gt;</bpt>incubating<ept i="0">&lt;/a0&gt;</ept>, only 3 build init types are currently supported.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T074820Z" creationid="haohang" creationdate="20150707T074820Z">
        <seg>由于这个插件目前仍是<bpt i="0" x="0">&lt;a0&gt;</bpt>孵化<ept i="0">&lt;/a0&gt;</ept>状态，当前仅支持3个构建初始化类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>As we continue to develop the native binary support in Gradle, the concept of Platform will be extended to include things like C-runtime version, Windows SDK, ABI, etc.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160405T033647Z" creationid="haohang" creationdate="20160405T033647Z">
        <seg>随着我们继续开发 Gradle 的本地二进制支持，将扩展Platform的概念，包括 C-runtime版本，Windows SDK，ABI，等等。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>As we extend the concept of project decoupling and provide features that take advantage of decoupled projects, we will also introduce new features to help you to solve common use cases (like configuration injection) without causing your projects to be coupled.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T094504Z" creationid="haohang" creationdate="20160726T094504Z">
        <seg>当我们扩大项目解耦的概念，并提供利用了解耦项目的功能，我们也将引入新的功能来帮助你解决常见的情况（如配置注入）而不会导致你的项目耦合。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>As we have already seen in the examples, the <bpt i="1" x="1">&lt;c1&gt;</bpt>property()<ept i="1">&lt;/c1&gt;</ept> method allows to set new properties or override existing ones.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150525T232510Z" creationid="haohang" creationdate="20150525T232510Z">
        <seg>正如我们在示例中已经看到的， <bpt i="1" x="1">&lt;c1&gt;</bpt>property()<ept i="1">&lt;/c1&gt;</ept>方法允许设置新属性或重写现有的属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>As we have said, we usually prefer to put project specific behavior into the build script of this project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160527T163158Z" creationid="95" creationdate="20160527T162912Z">
        <seg>正如前面所说的，我们通常更愿意把项目的特定行为放到这个项目的构建脚本中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>As we have seen, you can run a multi-project build by entering any subproject dir and execute the build from there.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160715T091321Z" creationid="haohang" creationdate="20160715T091321Z">
        <seg>正如我们所看到的，你可以通过进入任何子项目的目录，运行多项目构建并在那里执行构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>As well as configuring how things are to be signed (i.e. the signatory configuration), you must also specify what is to be signed.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160108T153255Z" creationid="95" creationdate="20160108T153255Z">
        <seg>除了配置内容要如何签名（即签名配置），你还必须指定哪些文件要签名。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>As well as considering artifacts downloaded from a different repository, Gradle will also attempt to reuse artifacts found in the local Maven Repository.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T151548Z" creationid="95" creationdate="20151129T151548Z">
        <seg>同时考虑构件从不同的仓库下载，Gradle 还将试图重用本地 Maven 库中发现的构件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>As with dependencies, you can declare as many custom configurations as you like and assign artifacts to them.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151226T085457Z" creationid="95" creationdate="20151226T085457Z">
        <seg>作为依赖，你可以如你喜欢尽可能多地定义自定义配置，并把构件指向它们。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>As with other source types, you can configure the location of the windows resources that should in included in the binary.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160325T020936Z" creationid="haohang" creationdate="20160325T020631Z">
        <seg>与其他源文件类型一样，您可以配置把windows 资源的位置包含进二进制文件中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>As with the <bpt i="2" x="2">&lt;c2&gt;</bpt>Copy<ept i="2">&lt;/c2&gt;</ept> task, you specify the input files using the <bpt i="3" x="3">&lt;c3&gt;</bpt>from()<ept i="3">&lt;/c3&gt;</ept> method, and can optionally specify where they end up in the archive using the <bpt i="4" x="4">&lt;c4&gt;</bpt>into()<ept i="4">&lt;/c4&gt;</ept> method.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T154506Z" creationid="msdx" creationdate="20141113T150517Z">
        <seg>像使用<bpt i="2" x="2">&lt;c2&gt;</bpt>Copy<ept i="2">&lt;/c2&gt;</ept>任务一样，你需要使用<bpt i="3" x="3">&lt;c3&gt;</bpt>from() <ept i="3">&lt;/c3&gt;</ept>的方法指定输入的文件，并可以选择是否通过 <bpt i="4" x="4">&lt;c4&gt;</bpt>into()<ept i="4">&lt;/c4&gt;</ept> 方法指定最终在存档中的位置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>As you can see in the example, transitive dependencies are included.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T040209Z" creationid="haohang" creationdate="20150807T040209Z">
        <seg>正如你在示例中所看到的，传递依赖都被包括在内。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>As you can see, you can either use a reference to an existing repository or create a new repository.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151226T092542Z" creationid="95" creationdate="20151226T092101Z">
        <seg>正如你所见，你可以使用一个现有的仓库的引用，或者创建一个新的仓库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Assembler sources to be included in a native binary are provided via a <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>AssemblerSourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>, which defines a set of Assembler source files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160313T053926Z" creationid="95" creationdate="20160313T053926Z">
        <seg>把汇编源码包含到原生二进制文件中，是通过一个 <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>AssemblerSourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>来实现的，它定义了一个汇编源文件集。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Assembles all the archives in the project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T010236Z" creationid="Administrator" creationdate="20150426T010236Z">
        <seg>组装项目中所有的归类文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Assembles and uploads the artifacts in the specified configuration.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T082847Z" creationid="Administrator" creationdate="20150426T082847Z">
        <seg>组装并上传指定配置的构件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Assembles the JAR file</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T004711Z" creationid="Administrator" creationdate="20150426T004711Z">
        <seg>组装 JAR 文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Assembles the application EAR file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T094745Z" creationid="msdx" creationdate="20150503T094745Z">
        <seg>组装应用程序 EAR 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Assembles the application WAR file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T085958Z" creationid="msdx" creationdate="20150503T085942Z">
        <seg>组装应用程序 WAR 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Assembles the artifacts in the specified configuration.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T082706Z" creationid="Administrator" creationdate="20150426T082706Z">
        <seg>组装指定配置的构件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Assembles the distribution content and installs it on the current machine</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150701T030940Z" creationid="haohang" creationdate="20150701T030940Z">
        <seg>组装分发内容，并安装在当前计算机上</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Assembles the given source set's classes directory.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T005946Z" creationid="Administrator" creationdate="20150426T005946Z">
        <seg>组装给定源集的类目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Assembles the production classes directory.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T174951Z" creationid="Administrator" creationdate="20150425T174823Z">
        <seg>组装生产的类目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Assembles the test classes directory.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T004702Z" creationid="Administrator" creationdate="20150426T004702Z">
        <seg>组装测试的类目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Assembly language support is provided by means of the <bpt i="0" x="0">&lt;c0&gt;</bpt>'assembler'<ept i="0">&lt;/c0&gt;</ept> plugin.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160313T053829Z" creationid="95" creationdate="20160313T053829Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>“assembler”<ept i="0">&lt;/c0&gt;</ept> 插件提供了汇编语言的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Assume you are working on a single project, the :api project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T095002Z" creationid="haohang" creationdate="20160726T095002Z">
        <seg>假设你在 :api 这一个项目上。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Assuming a local Sonar server with out-of-the-box settings is up and running, no further mandatory configuration is required.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T061600Z" creationid="msdx" creationdate="20150513T060746Z">
        <seg>假设一个本地的 Sonar 服务使用开箱即用的设置启动和运行，则不需要进一步的强制性的配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>At a minimum, the Sonar plugin has to be applied to the project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150510T143407Z" creationid="msdx" creationdate="20150510T143407Z">
        <seg>最低要求是必须配置 Sonar 插件应用于该project。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>At least one of the builds in a comparison will be a Gradle build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161228T134457Z" creationid="95" creationdate="20161228T134457Z">
        <seg>至少有其中一个构建将是一个Gradle构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>At the heart of Gradle lies a rich extensible Domain Specific Language (DSL) based on Groovy.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141101T034940Z" creationid="msdx" creationdate="20141101T034940Z">
        <seg>Gradle 的核心在于基于Groovy的丰富而可扩展的域描述语言（DSL）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>At the moment daemon is coupled with particular version of Gradle.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141117T153412Z" creationid="msdx" creationdate="20141117T153412Z">
        <seg>在这一刻，守护进程会被加上 Gradle 的特定版本号。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>At the moment the default settings are pretty generous with regards to memory.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141120T052427Z" creationid="msdx" creationdate="20141120T052427Z">
        <seg>目前的内存上的默认设置很大方。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>At this stage, it is completely up to the build script to configure the relevant compiler/linker flags for each build type.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160401T090808Z" creationid="haohang" creationdate="20160401T090655Z">
        <seg>在这个阶段，它就完全符合构建脚本来为每个构建类型配置相关的编译器/链接器标志。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>At times a completely different module can serve as a replacement for a requested module dependency.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T090411Z" creationid="95" creationdate="20151115T090411Z">
        <seg>有时一个完全不同的模块可以作为请求的模块依赖的替代者。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>At times it is useful to generate a Maven POM file for a module without actually publishing.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T064435Z" creationid="95" creationdate="20170416T064435Z">
        <seg>有时候，我们会需要在实际 上不发布的情况下，生成一个模块的Maven POM文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>At times it is useful to generate the Ivy module descriptor file (normally <bpt i="0" x="0">&lt;c0&gt;</bpt>ivy.xml<ept i="0">&lt;/c0&gt;</ept>) without publishing your module to an Ivy repository.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170326T084203Z" creationid="95" creationdate="20170326T084056Z">
        <seg>有时候，我们会需要在不发布你的模块到Ivy仓库的情况下，生成Ivy模块描述符文件（通常是<bpt i="0" x="0">&lt;c0&gt;</bpt>ivy.xml<ept i="0">&lt;/c0&gt;</ept>）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>At times, the Gradle Dependency Cache can be out of sync with the actual state of the configured repositories.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T153855Z" creationid="95" creationdate="20151129T153855Z">
        <seg>有时，Gradle 依赖缓存可能与已配置的仓库的实际状态不同步。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>At times, the POM file generated from the project information will need to be tweaked before publishing.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T033043Z" creationid="95" creationdate="20170416T033043Z">
        <seg>有时候，从项目信息生成的POM文件可能需要在发布之前进行一些调整。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>At times, the module descriptor file generated from the project information will need to be tweaked before publishing.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170304T031038Z" creationid="95" creationdate="20170304T030332Z">
        <seg>有时候，从项目信息生成的模块描述文件可能需要在发布之前进行一些调整。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Automatic configuration of groovyClasspath</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131906Z" creationid="msdx" creationdate="20150509T131906Z">
        <seg>groovyClasspath 的自动配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Automatic configuration of scalaClasspath</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T132003Z" creationid="msdx" creationdate="20150509T132003Z">
        <seg>scalaClasspath 的自动配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Automatic provisioning of Sonar Runner</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T055530Z" creationid="msdx" creationdate="20150513T055530Z">
        <seg>自动配置 Sonar Runner</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Automatically applies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141126T120846Z" creationid="msdx" creationdate="20141126T120846Z">
        <seg>自动应用</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Automatically chooses between snarl, growl, and notify-send depending on the current operating system.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T090940Z" creationid="haohang" creationdate="20150628T090940Z">
        <seg>根据当前的操作系统自动选择 snarl，growl，以及notify-send。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Available tool chains are searched in the order defined.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160405T034203Z" creationid="haohang" creationdate="20160405T034203Z">
        <seg>可用的工具链将按照定义的顺序进行查找。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T025438Z" creationid="haohang" creationdate="20160519T025438Z">
        <seg>BUILD SUCCESSFUL

Total time: 1 secs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Base plugins</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131601Z" creationid="msdx" creationdate="20150509T131601Z">
        <seg>基本插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Based on this the <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>Import-Package<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> and the <bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;e3&gt;</bpt>Export-Package<ept i="3">&lt;/e3&gt;</ept><ept i="2">&lt;/s2&gt;</ept> values of the OSGi Manifest are calculated.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150526T064137Z" creationid="haohang" creationdate="20150526T064137Z">
        <seg>并基于此计算 OSGi Manifest 中<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>Import-Package<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>和<bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;e3&gt;</bpt>Export-Package<ept i="3">&lt;/e3&gt;</ept><ept i="2">&lt;/s2&gt;</ept>的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Basic usage</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070916Z" creationid="95" creationdate="20170416T070916Z">
        <seg>基本用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Basically, in most of the cases excluding the transitive dependency should be done per configuration.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T102115Z" creationid="haohang" creationdate="20150801T102115Z">
        <seg>基本上，在大多数情况下对每一个配置都是排除传递依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Bear in mind that for some of those use cases there are better solutions than exclusions!</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T101622Z" creationid="haohang" creationdate="20150801T101622Z">
        <seg>记住，对于其中一些用例，有着比排除更好的解决方案！</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Bear in mind that the alphabetical scheduling of decoupled tasks, known from the sequential execution, does not really work in parallel mode.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T092056Z" creationid="haohang" creationdate="20160726T091746Z">
        <seg>记住，解耦的任务按字母顺序调度，并且这个顺序执行，而不是真的在并行模式下执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Bear in mind that the tooling API is wrapper aware so you should not need to configure a Gradle distribution directly.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T153023Z" creationid="95" creationdate="20161218T153023Z">
        <seg>记住，tooling API 是有包装器感知的，因此你不需要直接 配置Gradle分发包。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Because Gradle's build language is based on Groovy, and parts of Gradle are implemented in Groovy, Gradle already ships with a Groovy library (1.8.6 as of Gradle 1.6).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T075636Z" creationid="msdx" creationdate="20150429T075405Z">
        <seg>由于 Gradle 的构建语言基于 Groovy 的，且部分的 Groovy 使用 Groovy 实现，因此 Gradle 已经带有了一个 Groovy 库 （截至 Gradle 1.6所带的 Groovy 库的版本是 1.8.6）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Because a Groovy project <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>is<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> a Java project, whatever you can do with a Java project, you can also do with a Groovy project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141210T061256Z" creationid="msdx" creationdate="20141030T065956Z">
        <seg>因为一个Groovy项目也 <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>是<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> 一个Java项目，你在 Java 项目里能做的事，在 Groovy 项目中也能做。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Because of Gradle's cross project configuration <bpt i="7" x="7">&lt;s7&gt;</bpt><bpt i="8" x="8">&lt;e8&gt;</bpt>every<ept i="8">&lt;/e8&gt;</ept><ept i="7">&lt;/s7&gt;</ept> project has to be evaluated before <bpt i="9" x="9">&lt;s9&gt;</bpt><bpt i="10" x="10">&lt;e10&gt;</bpt>any<ept i="10">&lt;/e10&gt;</ept><ept i="9">&lt;/s9&gt;</ept> task gets executed.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160715T075807Z" creationid="haohang" creationdate="20160715T075723Z">
        <seg>由于 Gradle 的跨项目配置<bpt i="7" x="7">&lt;s7&gt;</bpt><bpt i="8" x="8">&lt;e8&gt;</bpt>每一个<ept i="8">&lt;/e8&gt;</ept><ept i="7">&lt;/s7&gt;</ept>项目不得不在它们的<bpt i="9" x="9">&lt;s9&gt;</bpt><bpt i="10" x="10">&lt;e10&gt;</bpt>任何<ept i="10">&lt;/e10&gt;</ept><ept i="9">&lt;/s9&gt;</ept>任务执行之前，先对项目进行评估。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Because the <bpt i="0" x="0">&lt;c0&gt;</bpt>sonarProperties<ept i="0">&lt;/c0&gt;</ept> block is evaluated lazily, properties of Gradle's object model can be safely referenced from within the block, without having to fear that they have not yet been set.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150525T233206Z" creationid="haohang" creationdate="20150525T233206Z">
        <seg>因为<bpt i="0" x="0">&lt;c0&gt;</bpt>sonarProperties<ept i="0">&lt;/c0&gt;</ept>块的评估是惰性的，Gradle 的对象模型的属性可以在块中被安全地引用，而无需担心它们还没有被赋值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Because we are inspecting the task graph to determine if we are going to be publishing, we must set the <bpt i="0" x="0">&lt;c0&gt;</bpt>signing.required<ept i="0">&lt;/c0&gt;</ept> property to a closure to defer the evaluation.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160126T143638Z" creationid="95" creationdate="20160126T142639Z">
        <seg>由于我们正在检查任务图，以确定是否打算发布，我们必须将<bpt i="0" x="0">&lt;c0&gt;</bpt>signing.required<ept i="0">&lt;/c0&gt;</ept>属性设置为一个闭包以推迟evaluation。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Before a task is executed for the first time, Gradle takes a snapshot of the inputs.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T063108Z" creationid="msdx" creationdate="20141111T063103Z">
        <seg>在第一次执行任务之前，Gradle 对输入进行一次快照。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Before downloading an artifact, Gradle tries to determine the checksum of the required artifact by downloading the sha file associated with that artifact.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T151248Z" creationid="95" creationdate="20151129T151248Z">
        <seg>在下载构件前，Gradle 试图通过下载与该项目关联的sha文件以确定所需的构件的校验和。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Before executing the <bpt i="0" x="0">&lt;c0&gt;</bpt>sonarRunner<ept i="0">&lt;/c0&gt;</ept> task, all tasks producing output to be analysed by Sonar need to be executed.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T061900Z" creationid="msdx" creationdate="20150513T061900Z">
        <seg>在执行<bpt i="0" x="0">&lt;c0&gt;</bpt>sonarRunner<ept i="0">&lt;/c0&gt;</ept>任务前，所有产生输出以用于 Sonar 分析的需要都需要被执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Below are some examples of how to do this.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T061950Z" creationid="msdx" creationdate="20141116T061950Z">
        <seg>下面是一些如何做到这一点的例子。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Below are some examples.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T062221Z" creationid="msdx" creationdate="20141116T062215Z">
        <seg>下面是一些例子。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Below is a brief outline of how this process works.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151007T024354Z" creationid="95" creationdate="20151007T023128Z">
        <seg>下面是这个过程的工作原理的简要概述。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Below is an example init script which changes how task execution and build completion is logged.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T154805Z" creationid="msdx" creationdate="20141116T154618Z">
        <seg>下面是一个示例，在 init 脚本中修改任务执行和构建完成的日志打印。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Below is an example of how this is used in the build script:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T125902Z" creationid="msdx" creationdate="20141116T125902Z">
        <seg>下面是关于如何在构建脚本中使用它的示例：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Below is an example which adds a <bpt i="0" x="0">&lt;c0&gt;</bpt>test<ept i="0">&lt;/c0&gt;</ept> task to each project with the <bpt i="1" x="1">&lt;c1&gt;</bpt>hasTests<ept i="1">&lt;/c1&gt;</ept> property set to true.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T125434Z" creationid="95" creationdate="20160521T125356Z">
        <seg>下面是一个示例，将一个<bpt i="0" x="0">&lt;c0&gt;</bpt>test<ept i="0">&lt;/c0&gt;</ept>任务添加到每个<bpt i="1" x="1">&lt;c1&gt;</bpt>hasTests<ept i="1">&lt;/c1&gt;</ept>属性为 true 的project中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Below is an example which adds a dependency from <bpt i="1" x="1">&lt;c1&gt;</bpt>projectA:taskX<ept i="1">&lt;/c1&gt;</ept> to <bpt i="2" x="2">&lt;c2&gt;</bpt>projectB:taskY<ept i="2">&lt;/c2&gt;</ept>:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T122235Z" creationid="msdx" creationdate="20141110T122235Z">
        <seg>下面是一个示例，添加了从<bpt i="1" x="1">&lt;c1&gt;</bpt>projectA:taskX<ept i="1">&lt;/c1&gt;</ept>到<bpt i="2" x="2">&lt;c2&gt;</bpt>projectB:taskY<ept i="2">&lt;/c2&gt;</ept>的依赖关系：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Below is an example which executes the <bpt i="3" x="3">&lt;c3&gt;</bpt>echo<ept i="3">&lt;/c3&gt;</ept> task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141115T153329Z" creationid="msdx" creationdate="20141115T153256Z">
        <seg>下面是执行 <bpt i="3" x="3">&lt;c3&gt;</bpt>echo<ept i="3">&lt;/c3&gt;</ept> 任务的例子。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Below is an example.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T052158Z" creationid="95" creationdate="20161211T052158Z">
        <seg>下面是一个例子。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Below, we have changed our example to declare that it takes the source XML file as an input and produces output to a destination directory.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T061242Z" creationid="msdx" creationdate="20141111T061242Z">
        <seg>下面，我们修改了我们的示例，声明它将 XML 源文件作为输入，并产生输出到一个目标目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Beside the build script files, Gradle defines a settings file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T024557Z" creationid="haohang" creationdate="20160519T024541Z">
        <seg>在构建脚本文件旁边，Gradle 定义了一个设置文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Beside the explicit properties of the <bpt i="6" x="6">&lt;c6&gt;</bpt>OsgiManifest<ept i="6">&lt;/c6&gt;</ept> object you can add instructions.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150526T064534Z" creationid="haohang" creationdate="20150526T064345Z">
        <seg>在 <bpt i="6" x="6">&lt;c6&gt;</bpt>OsgiManifest<ept i="6">&lt;/c6&gt;</ept> 对象的显式属性旁边，你可以添加instructions。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Better progress monitoring and build cancellation.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T154701Z" creationid="95" creationdate="20161218T154701Z">
        <seg>更好的进度监控及可取消构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Binaries produced by Gradle can be differentiated on <bpt i="0" x="0">&lt;a0&gt;</bpt>build type<ept i="0">&lt;/a0&gt;</ept>, <bpt i="1" x="1">&lt;a1&gt;</bpt>platform<ept i="1">&lt;/a1&gt;</ept> and <bpt i="2" x="2">&lt;a2&gt;</bpt>flavor<ept i="2">&lt;/a2&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160401T085413Z" creationid="haohang" creationdate="20160401T085413Z">
        <seg>Gradle 产生的二进制文件可以区分 <bpt i="0" x="0">&lt;a0&gt;</bpt>构建类型<ept i="0">&lt;/a0&gt;</ept>， <bpt i="1" x="1">&lt;a1&gt;</bpt>平台<ept i="1">&lt;/a1&gt;</ept>以及 <bpt i="2" x="2">&lt;a2&gt;</bpt>flavor<ept i="2">&lt;/a2&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Binary variants are discussed in detail below.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160219T065922Z" creationid="haohang" creationdate="20160219T065922Z">
        <seg>下面将详细讨论二进制 variant。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Bintray also supports sharing approved artifacts though the <bpt i="3" x="3">&lt;a3&gt;</bpt>JCenter<ept i="3">&lt;/a3&gt;</ept> public repository to provide a single resolution address for all popular OSS java artifacts (see <bpt i="4" x="4">&lt;a4&gt;</bpt>Section 50.6.2, “Maven JCenter repository”<ept i="4">&lt;/a4&gt;</ept>).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151201T062326Z" creationid="haohang" creationdate="20151201T062326Z">
        <seg>Bintray 还支持共享经过他们审核的构件，通过<bpt i="3" x="3">&lt;a3&gt;</bpt>JCenter<ept i="3">&lt;/a3&gt;</ept>公共仓库，为所有普通的OSS java 构件提供一个单一的解析地址（见<bpt i="4" x="4">&lt;a4&gt;</bpt>第 50.6.2 节，“Maven JCenter 存储库”<ept i="4">&lt;/a4&gt;</ept>）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Book(String name) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T015248Z" creationid="95" creationdate="20161211T015248Z">
        <seg>Book(String name) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Both <bpt i="0" x="0">&lt;c0&gt;</bpt>println<ept i="0">&lt;/c0&gt;</ept> statements print out the same property.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T043208Z" creationid="msdx" creationdate="20141108T043208Z">
        <seg>这两个<bpt i="0" x="0">&lt;c0&gt;</bpt>println<ept i="0">&lt;/c0&gt;</ept>语句打印出相同的属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Both also use repositories where the actual jars are placed together with their descriptor files, and both offer resolution for conflicting jar versions in one form or the other.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150716T074535Z" creationid="haohang" creationdate="20150716T074355Z">
        <seg>这两者都使用了存储库，在存储库中实际的 jar 文件和它们的描述文件都放在一起，而且这两者通过窗口或其他的方式都提供了 jar 版本冲突的解决方案。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Both external dependencies (including associated source and javadoc files) and project dependencies are considered.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T003011Z" creationid="haohang" creationdate="20150603T003011Z">
        <seg>它考虑到了外部依赖项 （包括相关联的源文件和 javadoc 文件） 和项目依赖项。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Both have emerged as standards for solving dependency conflicts, and while Gradle originally used Ivy under the hood for its dependency management.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150716T081151Z" creationid="haohang" creationdate="20150716T075456Z">
        <seg>这两者都已成为解决依赖冲突的标准，而 Gradle 最初使用的是 Ivy 引擎的依赖管理。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Both have their own logging system.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T130719Z" creationid="msdx" creationdate="20141116T130719Z">
        <seg>它们都有自己的日志系统。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Both the CUnit sources provided by your project and the generated launcher require the core CUnit headers and libraries.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160504T151157Z" creationid="95" creationdate="20160504T151040Z">
        <seg>由你的项目和生成的启动器提供的两种 CUnit 源码，都需要核心 CUnit 头文件和库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Both tools rely on descriptor XML files, which contain information about the dependencies of a particular jar.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150716T074248Z" creationid="haohang" creationdate="20150716T074248Z">
        <seg>这两种工具都依赖于描述符 XML 文件，包含有关具体某个 jar 的依赖的信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Build Init Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070023Z" creationid="95" creationdate="20170416T070023Z">
        <seg>Build Init 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Build Script Basics</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162257Z" creationid="msdx" creationdate="20141109T162257Z">
        <seg>构建脚本基础知识</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Build comparison support is an <bpt i="0" x="0">&lt;a0&gt;</bpt>incubating<ept i="0">&lt;/a0&gt;</ept> feature.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161219T144024Z" creationid="95" creationdate="20161219T144024Z">
        <seg>构建比较支持是一个还在<bpt i="0" x="0">&lt;a0&gt;</bpt>孵化中的<ept i="0">&lt;/a0&gt;</ept> 功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Build init types</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070040Z" creationid="95" creationdate="20170416T070040Z">
        <seg>构建初始化的类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Build layout</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T135828Z" creationid="msdx" creationdate="20150506T135828Z">
        <seg>构建布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Build outcomes that are intended to be logically equivalent in the “source” and “target” builds, and are therefore meaningfully comparable.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161228T143847Z" creationid="95" creationdate="20161228T141641Z">
        <seg>构建结果原来的目的是成为在“源构建”和“目标构建”中的逻辑等价物，因此具有可比较性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Build phases</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070523Z" creationid="95" creationdate="20170416T070523Z">
        <seg>构建阶段</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Build script</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T143950Z" creationid="95" creationdate="20160814T143950Z">
        <seg>构建脚本</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Build scripts are code</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162442Z" creationid="msdx" creationdate="20141109T162429Z">
        <seg>构建脚本即代码</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Build sources in the <bpt i="0" x="0">&lt;c0&gt;</bpt>buildSrc<ept i="0">&lt;/c0&gt;</ept> project</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070834Z" creationid="95" creationdate="20170416T070834Z">
        <seg>在<bpt i="0" x="0">&lt;c0&gt;</bpt>buildSrc<ept i="0">&lt;/c0&gt;</ept> 项目中的构建源代码</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>BuildListener</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T155217Z" creationid="msdx" creationdate="20141116T155217Z">
        <seg>BuildListener</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Building 'projectA:projectB:someTask' causes configuration of projectB.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160522T124942Z" creationid="95" creationdate="20160522T124942Z">
        <seg>构建 “projectA:projectB:someTask”使项目B被配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Building a WAR file</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163754Z" creationid="msdx" creationdate="20141109T163754Z">
        <seg>生成一个 WAR 文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Building native binaries</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070352Z" creationid="95" creationdate="20170416T070352Z">
        <seg>构建原生二进制文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>But Gradle also allows you to execute the build from within any subproject taking part in the build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T070912Z" creationid="haohang" creationdate="20160519T070757Z">
        <seg>但 Gradle 也允许你在属于这个构建的任何子项目中去执行构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>But Gradle also offers to execute tasks by their absolute path (see also <bpt i="0" x="0">&lt;a0&gt;</bpt>Section 56.5, “Project and task paths”<ept i="0">&lt;/a0&gt;</ept>):</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160715T091650Z" creationid="haohang" creationdate="20160715T091650Z">
        <seg>但 Gradle 也提供了按绝对路径执行任务（见<bpt i="0" x="0">&lt;a0&gt;</bpt>第56.5节，“项目和任务路径”<ept i="0">&lt;/a0&gt;</ept>）︰</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>But Gradle does not look for an XML descriptor to figure them out but gets the information from the build file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T091626Z" creationid="haohang" creationdate="20150801T091626Z">
        <seg>但 Gradle 不会去查找一个 XML 描述符来找出它的依赖，而是从构建文件中获取信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>But Gradle needs to create the build configuration for the whole multiproject build (see <bpt i="0" x="0">&lt;a0&gt;</bpt>Chapter 56, <bpt i="1" x="1">&lt;i1&gt;</bpt>Multi-project Builds<ept i="1">&lt;/i1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T074602Z" creationid="haohang" creationdate="20160519T074602Z">
        <seg>但 Gradle 需要创建整个多项目构建的构建配置（见<bpt i="0" x="0">&lt;a0&gt;</bpt>第56章，<bpt i="1" x="1">&lt;i1&gt;</bpt>多项目生成<ept i="1">&lt;/i1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>But Gradle takes the concept of tasks further.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T160554Z" creationid="msdx" creationdate="20141109T160427Z">
        <seg>但 Gradle 让任务的概念更深远。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>But Gradle uses configuration injection as the usual way of defining common behavior.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160527T162045Z" creationid="95" creationdate="20160527T162045Z">
        <seg>但 Gradle 使用配置注入来作为定义共同行为的常用方式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>But as we have already seen, we don't have to do it this way.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160527T163144Z" creationid="95" creationdate="20160527T162707Z">
        <seg>但正如我们已经看到的，我们可以不这样做。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>But before you can do an upload, you have to configure the upload task and define where to publish the artifacts to.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151226T091639Z" creationid="95" creationdate="20151226T091639Z">
        <seg>但是在你可以上传之前，你必须配置上传任务，并定义发布这些构件的位置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>But even here the flexibility of Gradle can make your life easier.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151201T063110Z" creationid="haohang" creationdate="20151201T063110Z">
        <seg>但即使是这样， Gradle 的灵活性也可以使你的生活更轻松。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>But for example open source projects don't usually have a host for those products.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151201T061014Z" creationid="haohang" creationdate="20151201T061014Z">
        <seg>但是比如开源项目通常没有主机用于这些产品。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>But for such arbitrary layouts you need to execute the build from the directory where the settings file is located.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T075934Z" creationid="haohang" creationdate="20160519T075934Z">
        <seg>但对于这种任意的布局，你需要在设置文件所在的目录执行构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>But if there is for example an improvement in the gradle-wrapper functionality you need to regenerate the wrapper files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161217T161027Z" creationid="95" creationdate="20161217T160928Z">
        <seg>但如果有例如gradle包装器功能的提升的话，你还是需要重新生成包装器的文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>But it asks for this information at <bpt i="17" x="17">&lt;s17&gt;</bpt><bpt i="18" x="18">&lt;e18&gt;</bpt>execution time<ept i="18">&lt;/e18&gt;</ept><ept i="17">&lt;/s17&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T082638Z" creationid="haohang" creationdate="20160726T082638Z">
        <seg>但它在<bpt i="17" x="17">&lt;s17&gt;</bpt><bpt i="18" x="18">&lt;e18&gt;</bpt>执行时<ept i="18">&lt;/e18&gt;</ept><ept i="17">&lt;/s17&gt;</ept>才需要这些信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>But it is easy for transitive dependency resolution to violate this contract.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T061013Z" creationid="95" creationdate="20151115T060813Z">
        <seg>但传递依赖解析会很容易破坏这种协议。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>But sometimes, even if the repository contains module descriptors, you want to download only the artifact jar, without the dependencies.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150731T033712Z" creationid="haohang" creationdate="20150731T033712Z">
        <seg>但有时候，即使存储库包含了模块描述符，而你只是想下载 artifact jar而不下载它的依赖项。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>But the draw-back is, that for the Gradle dependency management all dependencies are considered first level dependencies.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151201T064755Z" creationid="haohang" creationdate="20151201T064755Z">
        <seg>但缺点是，对于 Gradle 依赖管理而言，所有的依赖都被认为是第一级依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>But this is kind of bloated.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T072948Z" creationid="msdx" creationdate="20141109T072925Z">
        <seg>但这是种臃肿的解决方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>But we think that the model of inheritance does not reflect the problem space of multi-project builds very well.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160727T053146Z" creationid="haohang" creationdate="20160727T053031Z">
        <seg>但我们认为，继承模型并不能好地反映多项目构建的问题。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>But we use this as an integration test, so we want defined behavior.<it pos="end" x="1">&lt;/s1&gt;</it></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T054912Z" creationid="msdx" creationdate="20141111T054912Z">
        <seg>But we use this as an integration test, so we want defined behavior.<it pos="end" x="1">&lt;/s1&gt;</it></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>But when you enter steep territory Gradle does not become an obstacle and usually accompanies and carries you to the top of the mountain.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160727T054320Z" creationid="haohang" creationdate="20160727T054320Z">
        <seg>当你进入一个陡峭的领域的时候，Gradle 不会成为你的障碍，并且通常会伴随着你并且带你到达峰顶。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>But you can easily do it in another way.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161212T155049Z" creationid="95" creationdate="20161212T155049Z">
        <seg>但是你可以很容易地通过另一种方法做到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>But you can of course still use Maven2 repo and your custom repository as a repository for <bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;e3&gt;</bpt>jars only<ept i="3">&lt;/e3&gt;</ept><ept i="2">&lt;/s2&gt;</ept> and still enjoy <bpt i="4" x="4">&lt;s4&gt;</bpt><bpt i="5" x="5">&lt;e5&gt;</bpt>transitive<ept i="5">&lt;/e5&gt;</ept><ept i="4">&lt;/s4&gt;</ept> dependency management.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151201T063725Z" creationid="haohang" creationdate="20151201T063725Z">
        <seg>但你当然也可以仍然使用 Maven2 仓库和你自定义的存储库，作为<bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;e3&gt;</bpt>只放 jars<ept i="3">&lt;/e3&gt;</ept><ept i="2">&lt;/s2&gt;</ept>和依然使用<bpt i="4" x="4">&lt;s4&gt;</bpt><bpt i="5" x="5">&lt;e5&gt;</bpt>传递<ept i="5">&lt;/e5&gt;</ept><ept i="4">&lt;/s4&gt;</ept>依赖管理的仓库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>But you can redefine the location of the root project in the settings file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T041137Z" creationid="haohang" creationdate="20160519T041137Z">
        <seg>但你可以在设置文件中重新定义根项目的位置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>By caching artifacts based on their SHA1 checksum, Gradle is able to maintain multiple versions of the same artifact.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T153007Z" creationid="95" creationdate="20151129T152920Z">
        <seg>通过基于其 SHA1 校验和缓存构件，Gradle 是能够保持同一构件的多个版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>By comparing builds in these scenarios you can make an informed decision about the Gradle upgrade, migration to Gradle or build change by understanding the differences in the outcomes.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161219T150950Z" creationid="95" creationdate="20161219T150139Z">
        <seg>通过比较这些场景的构建，你可以明智地决定是否要对Gradle升级，迁移到Gradle，或者是通过了解结果的差异来判断构建的更改。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>By compiling only classes whose source code has changed since the previous compilation, and classes affected by these changes, incremental compilation can significantly reduce Scala compilation time.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T153725Z" creationid="msdx" creationdate="20150430T160102Z">
        <seg>增量编译是只编译那些源代码在上一次编译之后有修改的类，及那些受这些修改影响到的类，它可以大大减少 Scala 的编译时间。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>By default it is assumed that the location of the settings file is also the location of the root project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T041109Z" creationid="haohang" creationdate="20160519T041109Z">
        <seg>默认情况下，它假设设置文件的位置也是根项目的位置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>By default it scans all <bpt i="1" x="1">&lt;c1&gt;</bpt>.class<ept i="1">&lt;/c1&gt;</ept> files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T040558Z" creationid="Administrator" creationdate="20150428T040558Z">
        <seg>默认情况下它会扫描所有的<bpt i="1" x="1">&lt;c1&gt;</bpt>.class<ept i="1">&lt;/c1&gt;</ept>文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>By default the install task is associated with the <bpt i="0" x="0">&lt;c0&gt;</bpt>archives<ept i="0">&lt;/c0&gt;</ept> configuration.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151228T152301Z" creationid="95" creationdate="20151228T152301Z">
        <seg>默认情况下 install 任务是与<bpt i="0" x="0">&lt;c0&gt;</bpt>archives<ept i="0">&lt;/c0&gt;</ept>配置相关联的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>By default this file is generated to <bpt i="1" x="1">&lt;c1&gt;</bpt>build/publications/«<bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;e3&gt;</bpt>NAME OF PUBLICATION<ept i="3">&lt;/e3&gt;</ept><ept i="2">&lt;/s2&gt;</ept>»/ivy.xml<ept i="1">&lt;/c1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T143945Z" creationid="95" creationdate="20170330T143945Z">
        <seg>默认情况下这个文件将会生成到<bpt i="1" x="1">&lt;c1&gt;</bpt>build/publications/«<bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;e3&gt;</bpt>发布名称<ept i="3">&lt;/e3&gt;</ept><ept i="2">&lt;/s2&gt;</ept>»/ivy.xml<ept i="1">&lt;/c1&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>By default, Gradle caches changing modules for 24 hours.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T155047Z" creationid="95" creationdate="20151129T155047Z">
        <seg>默认情况下，Gradle 的变化模块将缓存 24 小时。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>By default, Gradle caches dynamic versions and changing modules for 24 hours.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T012344Z" creationid="haohang" creationdate="20150722T012344Z">
        <seg>默认情况下，Gradle 对动态版本和变化模块的缓存时间是24小时。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>By default, Gradle caches dynamic versions for 24 hours.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T154836Z" creationid="95" creationdate="20151129T154836Z">
        <seg>默认情况下，Gradle 缓存动态版本的时间为 24 小时。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>By default, Gradle redirects standard output to the <bpt i="0" x="0">&lt;c0&gt;</bpt>QUIET<ept i="0">&lt;/c0&gt;</ept> log level and standard error to the <bpt i="1" x="1">&lt;c1&gt;</bpt>ERROR<ept i="1">&lt;/c1&gt;</ept> level.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T131153Z" creationid="msdx" creationdate="20141116T131153Z">
        <seg>默认情况下，Gradle 将标准输出重定向到<bpt i="0" x="0">&lt;c0&gt;</bpt>QUIET<ept i="0">&lt;/c0&gt;</ept>日志级别，把标准错误输出重写向到 <bpt i="1" x="1">&lt;c1&gt;</bpt>ERROR<ept i="1">&lt;/c1&gt;</ept> 级别。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>By default, Gradle will upload to the pattern defined by the <bpt i="0" x="0">&lt;c0&gt;</bpt>url<ept i="0">&lt;/c0&gt;</ept> parameter, combined with the optional <bpt i="1" x="1">&lt;c1&gt;</bpt>layout<ept i="1">&lt;/c1&gt;</ept> parameter.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151226T092842Z" creationid="95" creationdate="20151226T092842Z">
        <seg>默认情况下，Gradle 将上传到由<bpt i="0" x="0">&lt;c0&gt;</bpt>url<ept i="0">&lt;/c0&gt;</ept>参数以及可选的<bpt i="1" x="1">&lt;c1&gt;</bpt>layout<ept i="1">&lt;/c1&gt;</ept>参数所联合定义的模式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>By default, a HTML report is generated.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T130428Z" creationid="msdx" creationdate="20150506T130428Z">
        <seg>默认情况下，会生成一个 HTML 报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>By default, a concise message will be logged for every failed test.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T015248Z" creationid="Administrator" creationdate="20150428T015248Z">
        <seg>默认情况下，对于每个失败的测试都只会打印一个简洁的消息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>By default, all Java and Scala code under <bpt i="0" x="0">&lt;c0&gt;</bpt>src/main/scala<ept i="0">&lt;/c0&gt;</ept> will participate in joint compilation.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T155211Z" creationid="msdx" creationdate="20150501T155211Z">
        <seg>默认情况下，在<bpt i="0" x="0">&lt;c0&gt;</bpt>src/main/scala<ept i="0">&lt;/c0&gt;</ept> 下的所有 Java 和 Scala 代码都会进行联合编译。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>By default, for any named component the <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>AssemblerSourceSet<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept> contains <bpt i="4" x="4">&lt;c4&gt;</bpt>.s<ept i="4">&lt;/c4&gt;</ept> source files under <bpt i="5" x="5">&lt;c5&gt;</bpt>src/${name}/asm<ept i="5">&lt;/c5&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160319T115045Z" creationid="95" creationdate="20160319T115045Z">
        <seg>默认情况下，对于任何命名的组件，<bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>AssemblerSourceSet<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>包含了在<bpt i="5" x="5">&lt;c5&gt;</bpt>src/${name}/asm<ept i="5">&lt;/c5&gt;</ept>中的<bpt i="4" x="4">&lt;c4&gt;</bpt>.s<ept i="4">&lt;/c4&gt;</ept>源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>By default, for any named component the <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>CSourceSet<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept> contains <bpt i="4" x="4">&lt;c4&gt;</bpt>.c<ept i="4">&lt;/c4&gt;</ept> source files in <bpt i="5" x="5">&lt;c5&gt;</bpt>src/${name}/c<ept i="5">&lt;/c5&gt;</ept>, and header files in <bpt i="6" x="6">&lt;c6&gt;</bpt>src/${name}/headers<ept i="6">&lt;/c6&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160225T090527Z" creationid="haohang" creationdate="20160225T090527Z">
        <seg>默认情况下，对于任何命名的组件，<bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>CSourceSet<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>包含了在<bpt i="5" x="5">&lt;c5&gt;</bpt>src/${name}/c<ept i="5">&lt;/c5&gt;</ept>中的<bpt i="4" x="4">&lt;c4&gt;</bpt>.c<ept i="4">&lt;/c4&gt;</ept>源文件，和在<bpt i="6" x="6">&lt;c6&gt;</bpt>src/${name}/headers<ept i="6">&lt;/c6&gt;</ept>中的头文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>By default, for any named component the <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>CppSourceSet<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept> contains <bpt i="4" x="4">&lt;c4&gt;</bpt>.cpp<ept i="4">&lt;/c4&gt;</ept> source files in <bpt i="5" x="5">&lt;c5&gt;</bpt>src/${name}/cpp<ept i="5">&lt;/c5&gt;</ept>, and header files in <bpt i="6" x="6">&lt;c6&gt;</bpt>src/${name}/headers<ept i="6">&lt;/c6&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160225T084810Z" creationid="haohang" creationdate="20160225T084810Z">
        <seg>默认情况下，对于任何命名的组件，<bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>CppSourceSet<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>包含了在<bpt i="5" x="5">&lt;c5&gt;</bpt>src/${name}/cpp<ept i="5">&lt;/c5&gt;</ept>中的<bpt i="4" x="4">&lt;c4&gt;</bpt>.cpp<ept i="4">&lt;/c4&gt;</ept>源文件，和在<bpt i="6" x="6">&lt;c6&gt;</bpt>src/${name}/headers<ept i="6">&lt;/c6&gt;</ept>中的头文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>By default, for any named component the <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>ObjectiveCSourceSet<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept> contains <bpt i="4" x="4">&lt;c4&gt;</bpt>.m<ept i="4">&lt;/c4&gt;</ept> source files under <bpt i="5" x="5">&lt;c5&gt;</bpt>src/${name}/objectiveC<ept i="5">&lt;/c5&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160319T115342Z" creationid="95" creationdate="20160319T115342Z">
        <seg>默认情况下，对于任何命名的组件，<bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>ObjectiveCSourceSet<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>包含了在<bpt i="5" x="5">&lt;c5&gt;</bpt>src/${name}/objectiveC<ept i="5">&lt;/c5&gt;</ept>中的<bpt i="4" x="4">&lt;c4&gt;</bpt>.m<ept i="4">&lt;/c4&gt;</ept>源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>By default, for any named component the <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>ObjectiveCppSourceSet<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept> contains <bpt i="4" x="4">&lt;c4&gt;</bpt>.mm<ept i="4">&lt;/c4&gt;</ept> source files under <bpt i="5" x="5">&lt;c5&gt;</bpt>src/${name}/objectiveCpp<ept i="5">&lt;/c5&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160319T115520Z" creationid="95" creationdate="20160319T115520Z">
        <seg>默认情况下，对于任何命名的组件，<bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>ObjectiveCppSourceSet<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>包含了在<bpt i="5" x="5">&lt;c5&gt;</bpt>src/${name}/objectiveCpp<ept i="5">&lt;/c5&gt;</ept>中的<bpt i="4" x="4">&lt;c4&gt;</bpt>.mm<ept i="4">&lt;/c4&gt;</ept>源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>By default, for any named component the <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>WindowsResourceSet<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept> contains <bpt i="4" x="4">&lt;c4&gt;</bpt>.rc<ept i="4">&lt;/c4&gt;</ept> source files under <bpt i="5" x="5">&lt;c5&gt;</bpt>src/${name}/rc<ept i="5">&lt;/c5&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160325T020802Z" creationid="95" creationdate="20160324T153251Z">
        <seg>默认情况下，<bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>WindowsResourceSet<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>为所有的命名组件包含了在<bpt i="5" x="5">&lt;c5&gt;</bpt>src/${name}/rc<ept i="5">&lt;/c5&gt;</ept>下的<bpt i="4" x="4">&lt;c4&gt;</bpt>.rc<ept i="4">&lt;/c4&gt;</ept>源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>By default, it is configured to compare the current build with itself using the current Gradle version by executing the tasks: “<bpt i="4" x="4">&lt;c4&gt;</bpt>clean assemble<ept i="4">&lt;/c4&gt;</ept>”.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170109T124604Z" creationid="95" creationdate="20170109T124604Z">
        <seg>默认情况下，它被配置为对当前构建与本身使用的当前的 Gradle 版本所执行的任务：“<bpt i="4" x="4">&lt;c4&gt;</bpt>clean assemble<ept i="4">&lt;/c4&gt;</ept>”进行比较。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>By default, the Java compiler runs in the Gradle process.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T135535Z" creationid="Administrator" creationdate="20150427T135535Z">
        <seg>默认情况下，Java 编译器在 Gradle 过程中运行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>By default, the Sonar Runner plugin passes on the project's <bpt i="0" x="0">&lt;c0&gt;</bpt>main<ept i="0">&lt;/c0&gt;</ept> source set as production sources, and the project's <bpt i="1" x="1">&lt;c1&gt;</bpt>test<ept i="1">&lt;/c1&gt;</ept> source set as test sources.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150520T143012Z" creationid="msdx" creationdate="20150520T143012Z">
        <seg>默认情况下， Sonar Runner 插件传给project 的<bpt i="0" x="0">&lt;c0&gt;</bpt>main<ept i="0">&lt;/c0&gt;</ept> source set 将作为生产源文件，传给project 的<bpt i="1" x="1">&lt;c1&gt;</bpt>test<ept i="1">&lt;/c1&gt;</ept> source sets 将作为测试源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>By default, the Sonar plugin will analyze the production sources in the <bpt i="0" x="0">&lt;c0&gt;</bpt>main<ept i="0">&lt;/c0&gt;</ept> source set and the test sources in the <bpt i="1" x="1">&lt;c1&gt;</bpt>test<ept i="1">&lt;/c1&gt;</ept> source set.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T092351Z" creationid="msdx" creationdate="20150512T092351Z">
        <seg>默认情况下，Sonar 插件将分析<bpt i="0" x="0">&lt;c0&gt;</bpt>main<ept i="0">&lt;/c0&gt;</ept> source set 里的生产源文件，以及<bpt i="1" x="1">&lt;c1&gt;</bpt>test<ept i="1">&lt;/c1&gt;</ept> source sets 里的测试源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>By preconfiguring the Sonar Runner based on that information, the need for manual configuration is reduced significantly.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T060209Z" creationid="msdx" creationdate="20150513T060209Z">
        <seg>基于这些信息对 Sonar Runner 进行预配置，减少了许多手动配置的需要。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>By requiring special syntax for adding a property, Gradle can fail fast when an attempt is made to set a (predefined or extra) property but the property is misspelled or does not exist.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T054756Z" creationid="msdx" creationdate="20141108T054756Z">
        <seg>通过添加属性所要求特殊的语法，Gradle 可以在你试图设置 （预定义的或额外的） 的属性，但该属性拼写错误或不存在时 fail fast。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>By specifying that the distribution should include the task's output files (see <bpt i="0" x="0">&lt;a0&gt;</bpt>Section 15.9.1, “Declaring a task's inputs and outputs”<ept i="0">&lt;/a0&gt;</ept>), Gradle knows that the task that produces the files must be invoked before the distribution can be assembled and will take care of this for you.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150703T100647Z" creationid="haohang" creationdate="20150703T100440Z">
        <seg>通过指定分布包应包括的任务的输出文件 （见<bpt i="0" x="0">&lt;a0&gt;</bpt>15.9.1章，“声明任务的输入和输出”<ept i="0">&lt;/a0&gt;</ept>），Gradle 将知道在组装 distribution 前哪些生产文件的任务必须被调用，并且会为你处理好。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>By using 'must run after" ordering rule you can specify that <bpt i="0" x="0">&lt;c0&gt;</bpt>taskB<ept i="0">&lt;/c0&gt;</ept> must always run after <bpt i="1" x="1">&lt;c1&gt;</bpt>taskA<ept i="1">&lt;/c1&gt;</ept>, whenever both <bpt i="2" x="2">&lt;c2&gt;</bpt>taskA<ept i="2">&lt;/c2&gt;</ept> and <bpt i="3" x="3">&lt;c3&gt;</bpt>taskB<ept i="3">&lt;/c3&gt;</ept> are scheduled for execution.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T152231Z" creationid="msdx" creationdate="20141110T152003Z">
        <seg>通过使用 “ 必须在之后运行”的排序规则，您可以指定 <bpt i="0" x="0">&lt;c0&gt;</bpt>taskB<ept i="0">&lt;/c0&gt;</ept> 必须总是运行在 <bpt i="1" x="1">&lt;c1&gt;</bpt>taskA<ept i="1">&lt;/c1&gt;</ept> 之后，无论<bpt i="2" x="2">&lt;c2&gt;</bpt>taskA<ept i="2">&lt;/c2&gt;</ept>和<bpt i="3" x="3">&lt;c3&gt;</bpt>taskB<ept i="3">&lt;/c3&gt;</ept>这两个任务在什么时候被调度执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>C language support is provided by means of the <bpt i="0" x="0">&lt;c0&gt;</bpt>'c'<ept i="0">&lt;/c0&gt;</ept> plugin.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160225T090433Z" creationid="haohang" creationdate="20160225T090433Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>'c'<ept i="0">&lt;/c0&gt;</ept> 插件提供了C 语言的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>C sources to be included in a native binary are provided via a <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>CSourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>, which defines a set of C source files and optionally a set of exported header files (for a library).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160225T090503Z" creationid="haohang" creationdate="20160225T090503Z">
        <seg>把 C 源码包含到原生二进制文件中，是通过一个 <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>CSourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>来实现的，它定义了一个C源文件集以及（可选的）一个可导出的头文件（用于library）集</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>C++ language support is provided by means of the <bpt i="0" x="0">&lt;c0&gt;</bpt>'cpp'<ept i="0">&lt;/c0&gt;</ept> plugin.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160219T082834Z" creationid="haohang" creationdate="20160219T082834Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>'cpp'<ept i="0">&lt;/c0&gt;</ept> 插件提供了C++ 语言的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>C++ sources to be included in a native binary are provided via a <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>CppSourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>, which defines a set of C++ source files and optionally a set of exported header files (for a library).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160225T084555Z" creationid="haohang" creationdate="20160219T094016Z">
        <seg>把 C++ 源码包含到原生二进制文件中，是通过一个 <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>CppSourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>来实现的，它定义了一个C++源文件集以及（可选的）一个可导出的头文件（用于library）集</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>CU_add_test(pSuiteMath, "test_minus", test_minus);
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160504T150246Z" creationid="95" creationdate="20160504T150246Z">
        <seg>CU_add_test(pSuiteMath, "test_minus", test_minus);
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>CU_add_test(pSuiteMath, "test_plus", test_plus);</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160504T150244Z" creationid="95" creationdate="20160504T150244Z">
        <seg>CU_add_test(pSuiteMath, "test_plus", test_plus);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>CU_pSuite pSuiteMath = CU_add_suite("operator tests", suite_init, suite_clean);</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160504T150242Z" creationid="95" creationdate="20160504T150242Z">
        <seg>CU_pSuite pSuiteMath = CU_add_suite("operator tests", suite_init, suite_clean);</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>CUnit support</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070513Z" creationid="95" creationdate="20170416T070513Z">
        <seg>CUnit 支持</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Caching</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T165002Z" creationid="msdx" creationdate="20141109T165002Z">
        <seg>缓存</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Calling the <bpt i="0" x="0">&lt;c0&gt;</bpt>uploadArchives<ept i="0">&lt;/c0&gt;</ept> task will generate the POM and deploys the artifact and the POM to the specified repository.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160104T154620Z" creationid="95" creationdate="20160104T154521Z">
        <seg>调用<bpt i="0" x="0">&lt;c0&gt;</bpt>uploadArchives<ept i="0">&lt;/c0&gt;</ept>任务将生成 POM，并将部署构件和 POM 到指定的仓库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Can also set using a String or Number, e.g. <bpt i="2" x="2">&lt;c2&gt;</bpt>'1.5'<ept i="2">&lt;/c2&gt;</ept> or <bpt i="3" x="3">&lt;c3&gt;</bpt>1.5<ept i="3">&lt;/c3&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T045922Z" creationid="Administrator" creationdate="20150427T045922Z">
        <seg>可以使用字符串或数字来设置，例如<bpt i="2" x="2">&lt;c2&gt;</bpt>"1.5"<ept i="2">&lt;/c2&gt;</ept>或<bpt i="3" x="3">&lt;c3&gt;</bpt>1.5<ept i="3">&lt;/c3&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Can also set using a String or a Number, e.g. <bpt i="2" x="2">&lt;c2&gt;</bpt>'1.5'<ept i="2">&lt;/c2&gt;</ept> or <bpt i="3" x="3">&lt;c3&gt;</bpt>1.5<ept i="3">&lt;/c3&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T045758Z" creationid="Administrator" creationdate="20150427T045758Z">
        <seg>可以使用字符串或数字来设置，例如<bpt i="2" x="2">&lt;c2&gt;</bpt>"1.5"<ept i="2">&lt;/c2&gt;</ept>或<bpt i="3" x="3">&lt;c3&gt;</bpt>1.5<ept i="3">&lt;/c3&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Can be located on the local filesystem or at some remote location.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T095649Z" creationid="haohang" creationdate="20150807T095649Z">
        <seg>可以位于本地文件系统上，或在某个远程的位置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Can set using anything described in <bpt i="1" x="1">&lt;a1&gt;</bpt>Section 16.1, “Locating files”<ept i="1">&lt;/a1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T134811Z" creationid="Administrator" creationdate="20150427T134811Z">
        <seg>可以使用<bpt i="1" x="1">&lt;a1&gt;</bpt> 16.1 章节，“查找文件”<ept i="1">&lt;/a1&gt;</ept>中所讲到的任何一种方式来设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Can set using anything described in <bpt i="1" x="1">&lt;a1&gt;</bpt>Section 16.5, “Specifying a set of input files”<ept i="1">&lt;/a1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T052515Z" creationid="Administrator" creationdate="20150427T052515Z">
        <seg>可以使用<bpt i="1" x="1">&lt;a1&gt;</bpt> 16.5 章节，"指定一组输入文件"<ept i="1">&lt;/a1&gt;</ept>中所讲到的任何一个来设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Can set using anything described in <bpt i="2" x="2">&lt;a2&gt;</bpt>Section 16.5, “Specifying a set of input files”<ept i="2">&lt;/a2&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T134119Z" creationid="Administrator" creationdate="20150427T134119Z">
        <seg>可以使用<bpt i="2" x="2">&lt;a2&gt;</bpt> 16.5 章节，"指定一组输入文件"<ept i="2">&lt;/a2&gt;</ept>中所讲到的任何一种方式来设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Certain repositories are not able to handle all supported characters.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20170217T083258Z" creationid="haohang" creationdate="20170217T083157Z">
        <seg>某些存储库可能无法处理所有支持的字符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Certain repositories will not be able to handle all supported characters.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T032511Z" creationid="95" creationdate="20170416T032511Z">
        <seg>某些存储库可能无法处理所有支持的字符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Change</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T094053Z" creationid="msdx" creationdate="20150429T094028Z">
        <seg>修改的内容</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Changing its state or the state of one of its dependencies will cause an exception.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T091205Z" creationid="haohang" creationdate="20150807T091205Z">
        <seg>如果去修改它的状态，或者是它的某个依赖的状态，将会引发一个异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Changing what Gradle logs</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T030423Z" creationid="Administrator" creationdate="20150330T141513Z">
        <seg>更改 Gradle 日志</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 1. Introduction</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141101T034309Z" creationid="msdx" creationdate="20141101T034309Z">
        <seg>第一章. 介绍</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 10. Web Application Quickstart</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T071137Z" creationid="msdx" creationdate="20141030T071137Z">
        <seg>Chapter 10. Web 应用程序快速入门</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 11. Using the Gradle Command-Line</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T100128Z" creationid="msdx" creationdate="20141030T071206Z">
        <seg>第十一章. 使用Gradle命令行</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 12. Using the Gradle Graphical User Interface</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T145555Z" creationid="msdx" creationdate="20141030T100240Z">
        <seg>第十二章. 使用Gradle 图形用户界面</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 13. Writing Build Scripts</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T145318Z" creationid="msdx" creationdate="20141105T145318Z">
        <seg>第十三章 编写构建脚本</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 14. Tutorial - 'This and That'</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T141736Z" creationid="msdx" creationdate="20141108T032329Z">
        <seg>第十四章. 教程 - 杂七杂八</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 15. More about Tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T165034Z" creationid="msdx" creationdate="20141109T093516Z">
        <seg>第十五章. 任务详述</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 16. Working With Files</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T084847Z" creationid="msdx" creationdate="20141108T070137Z">
        <seg>第十六章. 使用文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 17. Using Ant from Gradle</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T161625Z" creationid="msdx" creationdate="20141030T034613Z">
        <seg>第十七章. 从 Gradle 中调用 Ant</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 18. Logging</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T063505Z" creationid="msdx" creationdate="20141113T161646Z">
        <seg>第十八章. 日志</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 19. The Gradle Daemon</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T063517Z" creationid="msdx" creationdate="20141116T063517Z">
        <seg>第十九章. Gradle 守护进程</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 2. Overview</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141101T034254Z" creationid="msdx" creationdate="20141101T034231Z">
        <seg>第二章. 概述</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 20. The Build Environment</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141117T123801Z" creationid="msdx" creationdate="20141117T123801Z">
        <seg>第二十章. 构建环境</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 21. Gradle Plugins</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141119T031538Z" creationid="msdx" creationdate="20141119T031538Z">
        <seg>第二十一章. Gradle 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 22. Standard Gradle plugins</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141121T142846Z" creationid="msdx" creationdate="20141121T142846Z">
        <seg>第二十二章. 标准的 Gradle 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 23, <bpt i="0" x="0">&lt;i0&gt;</bpt>The Java Plugin<ept i="0">&lt;/i0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170412T154417Z" creationid="95" creationdate="20170412T154417Z">
        <seg>第二十三章. <bpt i="0" x="0">&lt;i0&gt;</bpt>Java 插件<ept i="0">&lt;/i0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 23. The Java Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150430T020630Z" creationid="msdx" creationdate="20141124T100531Z">
        <seg>第 二十三章. Java 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 24. The Groovy Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150430T020642Z" creationid="msdx" creationdate="20141209T073309Z">
        <seg>第二十四章. Groovy 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 25. The Scala Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150430T020609Z" creationid="msdx" creationdate="20150428T151822Z">
        <seg>第二十五章. Scala 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 26, <bpt i="0" x="0">&lt;i0&gt;</bpt>The War Plugin<ept i="0">&lt;/i0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170412T154425Z" creationid="95" creationdate="20170412T154425Z">
        <seg>第二十六章. <bpt i="0" x="0">&lt;i0&gt;</bpt>War 插件<ept i="0">&lt;/i0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 26. The War Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T024601Z" creationid="msdx" creationdate="20150429T095035Z">
        <seg>第二十六章. War 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 27. The Ear Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T082700Z" creationid="msdx" creationdate="20150503T082700Z">
        <seg>第二十七章. Ear 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 28. The Jetty Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T094141Z" creationid="msdx" creationdate="20141030T035211Z">
        <seg>第二十八章. Jetty 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 29. The Checkstyle Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T143922Z" creationid="msdx" creationdate="20141105T145234Z">
        <seg>第二十九章. Checkstyle 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 3. Tutorials</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141101T034408Z" creationid="msdx" creationdate="20141101T034408Z">
        <seg>第三章. 教程说明</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 30. The CodeNarc Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T151535Z" creationid="msdx" creationdate="20141030T035043Z">
        <seg>第三十章. CodeNarc 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 31. The FindBugs Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T132927Z" creationid="msdx" creationdate="20150505T132927Z">
        <seg>第三十一章. FindBugs 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 32. The JDepend Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T134106Z" creationid="msdx" creationdate="20150504T151458Z">
        <seg>第三十二章. JDepend 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 33. The PMD Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T134120Z" creationid="msdx" creationdate="20141124T100250Z">
        <seg>第三十三章. PMD 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 34. The JaCoCo Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T134552Z" creationid="msdx" creationdate="20150505T134552Z">
        <seg>第三十四章. JaCoCo 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 35. The Sonar Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T135937Z" creationid="msdx" creationdate="20150505T135937Z">
        <seg>第三十五章. Sonar 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 36. The Sonar Runner Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T140341Z" creationid="msdx" creationdate="20150506T140341Z">
        <seg>第三十六章. Sonar Runner 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 37. The OSGi Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T054331Z" creationid="msdx" creationdate="20150513T054331Z">
        <seg>第三十七章. OSGi 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 38. The Eclipse Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150526T064902Z" creationid="msdx" creationdate="20141109T065325Z">
        <seg>第三十八章. Eclipse 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 39. The IDEA Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T063334Z" creationid="msdx" creationdate="20141116T063334Z">
        <seg>第三十九章. IDEA 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 4. Installing Gradle</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104933Z" creationid="msdx" creationdate="20150428T104933Z">
        <seg>Chapter 4. Installing Gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 40. The ANTLR Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T094705Z" creationid="msdx" creationdate="20141116T063310Z">
        <seg>第四十章. ANTLR 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 41. The Project Report Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150626T095137Z" creationid="msdx" creationdate="20141111T124430Z">
        <seg>第四十一章. 项目报告插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 42. The Announce Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T063231Z" creationid="msdx" creationdate="20141030T034804Z">
        <seg>第四十二章. Announce插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 43. The Build Announcements Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T091428Z" creationid="msdx" creationdate="20141030T032941Z">
        <seg>第四十三章. 构建公告插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 44. The Distribution Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T092215Z" creationid="haohang" creationdate="20150628T091133Z">
        <seg>第四十四章. 分发插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 45. The Application Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T092251Z" creationid="msdx" creationdate="20141030T034937Z">
        <seg>第四十五章. 应用程序插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 46. The Java Library Distribution Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T151718Z" creationid="msdx" creationdate="20150428T151718Z">
        <seg>第46章. Java 库发布插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 47. Build Init Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T073606Z" creationid="msdx" creationdate="20141105T145230Z">
        <seg>第四十七章. Build Init 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 48. Wrapper Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T070648Z" creationid="msdx" creationdate="20141113T160930Z">
        <seg>第四十八章. Wrapper 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 49. The Build Dashboard Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150713T095009Z" creationid="msdx" creationdate="20150503T094838Z">
        <seg>第四十九章. Build Dashboard 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 5. Troubleshooting</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T154102Z" creationid="msdx" creationdate="20141109T154102Z">
        <seg>第 5 章. 疑难解答</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 50. Dependency Management</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150710T013156Z" creationid="haohang" creationdate="20150710T013156Z">
        <seg>第五十章. 依赖管理</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 51. Publishing artifacts</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150714T015828Z" creationid="msdx" creationdate="20141101T034159Z">
        <seg>第五十一章. 发布构件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 52. The Maven Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151228T151805Z" creationid="msdx" creationdate="20141116T155227Z">
        <seg>第五十二章. Maven 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 53. The Signing Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T070531Z" creationid="haohang" creationdate="20150707T070531Z">
        <seg>第五十三章. 签名插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 54. Building native binaries</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151227T161036Z" creationid="95" creationdate="20151227T161036Z">
        <seg>第54章. 构建原生二进制文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 55. The Build Lifecycle</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T140736Z" creationid="msdx" creationdate="20141108T031022Z">
        <seg>第55章. 构建的生命周期</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 56. Multi-project Builds</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160727T055601Z" creationid="msdx" creationdate="20141111T124336Z">
        <seg>第五十六章. 多项目构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 57. Writing Custom Task Classes</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160727T055552Z" creationid="95" creationdate="20160521T140555Z">
        <seg>第五十七章. 编写自定义任务类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 58. Writing Custom Plugins</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160727T055632Z" creationid="haohang" creationdate="20160727T055632Z">
        <seg>第五十八章. 编写自定义插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 59. Organizing Build Logic</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070814Z" creationid="95" creationdate="20160504T151942Z">
        <seg>第五十九章. 组织构建逻辑</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 6. Build Script Basics</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T154050Z" creationid="msdx" creationdate="20141109T154050Z">
        <seg>Chapter 6. Build Script Basics</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 60. Initialization Scripts</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T020934Z" creationid="95" creationdate="20161211T020934Z">
        <seg>第六十章. 初始化脚本</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 61. The Gradle Wrapper</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161215T153827Z" creationid="msdx" creationdate="20141119T031220Z">
        <seg>第六十一章. Gradle包装器</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 62. Embedding Gradle</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T041054Z" creationid="haohang" creationdate="20150625T070519Z">
        <seg>第六十二章. 嵌入 Gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 63. Comparing Builds</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161219T142027Z" creationid="95" creationdate="20160521T140518Z">
        <seg>第六十三章. 构建比较</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 64. Ivy Publishing (new)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161219T142056Z" creationid="95" creationdate="20161219T142056Z">
        <seg>第六十四章. 发布到Ivy（新）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 65. Maven Publishing (new)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170412T150629Z" creationid="95" creationdate="20170109T130415Z">
        <seg>第六十五章. Maven 发布（新）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 7. Java Quickstart</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T154117Z" creationid="msdx" creationdate="20141109T154108Z">
        <seg>第 7 章. Java 快速入门</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 8. Dependency Management Basics</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T161500Z" creationid="msdx" creationdate="20141105T161456Z">
        <seg>Chapter 8. 依赖管理基础</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Chapter 9. Groovy Quickstart</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T041136Z" creationid="msdx" creationdate="20141030T035211Z">
        <seg>第九章. Groovy快速入门</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Checkstyle</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T024703Z" creationid="msdx" creationdate="20150505T024703Z">
        <seg>checkstyle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Checkstyle configuration file</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T132639Z" creationid="msdx" creationdate="20150505T132639Z">
        <seg>Checkstyle 配置文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Choosing a log level</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150330T141308Z" creationid="Administrator" creationdate="20150330T141308Z">
        <seg>选择一个日志级别</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Clang</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160128T153346Z" creationid="95" creationdate="20160128T153346Z">
        <seg>Clang</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Class or a super class contain a method annotated with <bpt i="0" x="0">&lt;c0&gt;</bpt>@Test<ept i="0">&lt;/c0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T041106Z" creationid="Administrator" creationdate="20150428T041106Z">
        <seg>类或超类含有一个带<bpt i="0" x="0">&lt;c0&gt;</bpt>@Test<ept i="0">&lt;/c0&gt;</ept>注解的方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Class or a super class extends <bpt i="0" x="0">&lt;c0&gt;</bpt>TestCase<ept i="0">&lt;/c0&gt;</ept> or <bpt i="1" x="1">&lt;c1&gt;</bpt>GroovyTestCase<ept i="1">&lt;/c1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T041022Z" creationid="Administrator" creationdate="20150428T041022Z">
        <seg>类或超类继承自<bpt i="0" x="0">&lt;c0&gt;</bpt>TestCase<ept i="0">&lt;/c0&gt;</ept>或<bpt i="1" x="1">&lt;c1&gt;</bpt>GroovyTestCase<ept i="1">&lt;/c1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Class or a super class is annotated with <bpt i="0" x="0">&lt;c0&gt;</bpt>@RunWith<ept i="0">&lt;/c0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T041044Z" creationid="Administrator" creationdate="20150428T041044Z">
        <seg>类或超类使用了<bpt i="0" x="0">&lt;c0&gt;</bpt>@RunWith<ept i="0">&lt;/c0&gt;</ept>进行注解</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Classpath</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T105330Z" creationid="haohang" creationdate="20150624T105302Z">
        <seg>Classpath</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Clean</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131753Z" creationid="msdx" creationdate="20150509T131753Z">
        <seg>Clean</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Client module dependencies allow to declare <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>transitive<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> dependencies directly in the build script.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T091314Z" creationid="haohang" creationdate="20150801T091314Z">
        <seg>客户端模块依赖允许直接在构建脚本中声明<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>传递<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Client module dependency</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T080449Z" creationid="haohang" creationdate="20150722T080449Z">
        <seg>客户端模块依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Closure cl = { task -&gt; println <bpt i="0" x="0">&lt;s0&gt;</bpt>"I'm $task.project.name"<ept i="0">&lt;/s0&gt;</ept> }
task hello &lt;&lt; cl
project(<bpt i="1" x="1">&lt;s1&gt;</bpt>':bluewhale'<ept i="1">&lt;/s1&gt;</ept>) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160522T125908Z" creationid="95" creationdate="20160522T125908Z">
        <seg>Closure cl = { task -&gt; println <bpt i="0" x="0">&lt;s0&gt;</bpt>"I'm $task.project.name"<ept i="0">&lt;/s0&gt;</ept> }
task hello &lt;&lt; cl
project(<bpt i="1" x="1">&lt;s1&gt;</bpt>':bluewhale'<ept i="1">&lt;/s1&gt;</ept>) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>CodeNarc</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T133152Z" creationid="msdx" creationdate="20150505T133152Z">
        <seg>codenarc</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>CodeNarc configuration file</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T133430Z" creationid="msdx" creationdate="20150505T133423Z">
        <seg>CodeNarc 配置文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Command Line</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T031133Z" creationid="msdx" creationdate="20141108T031133Z">
        <seg>命令行</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Command line option "--tests" is provided to conveniently set the test filter.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T023048Z" creationid="Administrator" creationdate="20150428T023048Z">
        <seg>提供了“--tests”的命令行选项，以方便地设置测试过滤器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Common values can be set from a parent build script.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T091319Z" creationid="msdx" creationdate="20150512T091319Z">
        <seg>共同的值可以在父构建脚本中进行设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Compared to using the standalone Sonar Runner, the Sonar Runner plugin offers the following benefits:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T055423Z" creationid="msdx" creationdate="20150513T055423Z">
        <seg>相比单独使用 Sonar Runner，Sonar Runner 插件提供了以下便利：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Comparing Builds</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20170720T061106Z" creationid="95" creationdate="20170416T071021Z">
        <seg>构建比较</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Comparing Gradle Builds</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T071042Z" creationid="95" creationdate="20170416T071042Z">
        <seg>比较Gradle构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Compile time dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T084154Z" creationid="Administrator" creationdate="20150426T084154Z">
        <seg>编译时依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Compile time dependencies for the given source set</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T084848Z" creationid="Administrator" creationdate="20150426T084848Z">
        <seg>给定源集的编译时依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>CompileJava</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131809Z" creationid="msdx" creationdate="20150509T131804Z">
        <seg>CompileJava</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Compiles production Groovy source files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T071418Z" creationid="msdx" creationdate="20150429T071418Z">
        <seg>编译production 的 Groovy 源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Compiles production Java source files using javac.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T174626Z" creationid="Administrator" creationdate="20150425T174626Z">
        <seg>使用 javac 编译产品中的 Java 源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Compiles production Scala source files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T145459Z" creationid="msdx" creationdate="20150429T145459Z">
        <seg>编译production 的 Scala 源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Compiles test Groovy source files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T071434Z" creationid="msdx" creationdate="20150429T071434Z">
        <seg>编译test 的 Groovy 的源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Compiles test Java source files using javac.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T004449Z" creationid="Administrator" creationdate="20150426T004449Z">
        <seg>使用 javac 编译 Java 的测试源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Compiles test Scala source files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T145505Z" creationid="msdx" creationdate="20150429T145505Z">
        <seg>编译test 的 Scala 的源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Compiles the given source set's Groovy source files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T071453Z" creationid="msdx" creationdate="20150429T071437Z">
        <seg>编译给定的source set 里的 Groovy 源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Compiles the given source set's Java source files using javac.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T005823Z" creationid="Administrator" creationdate="20150426T005823Z">
        <seg>使用 javac 编译给定的源集中的 Java 源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Compiles the given source set's Scala source files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T145511Z" creationid="msdx" creationdate="20150429T145511Z">
        <seg>编译给定的source set 里的 Scala 源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Compiling in external process</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T132103Z" creationid="msdx" creationdate="20150509T132103Z">
        <seg>在外部进程中编译</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Complete example</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T071127Z" creationid="95" creationdate="20170416T071127Z">
        <seg>完整的示例</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Complete overwrite works equally well for individual files, for example by executing <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt> gradle cleanEclipseClasspath eclipseClasspath<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T103416Z" creationid="haohang" creationdate="20150624T103416Z">
        <seg>完全覆盖同样可以用于个人文件，例如通过执行<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle cleanEclipseClasspath eclipseClasspath<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Complete overwrite works equally well for individual files, for example by executing <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt> gradle cleanIdeaModule ideaModule<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T073537Z" creationid="haohang" creationdate="20150625T073537Z">
        <seg>完整覆盖同样可以用于个人文件，例如通过执行<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle cleanIdeaModule ideaModule<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Component Type</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160219T072201Z" creationid="haohang" creationdate="20160219T072201Z">
        <seg>组件类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Component model</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070402Z" creationid="95" creationdate="20170416T070402Z">
        <seg>组件模型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Conf2ScopeMappingContainer</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151228T152800Z" creationid="95" creationdate="20151228T152800Z">
        <seg>Conf2ScopeMappingContainer</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Configuration</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150514T151915Z" creationid="msdx" creationdate="20150514T151915Z">
        <seg>配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Configuration Properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T065234Z" creationid="haohang" creationdate="20150628T065234Z">
        <seg>配置属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Configuration and execution of a single project build</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070545Z" creationid="95" creationdate="20170416T070545Z">
        <seg>配置和执行单个项目构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Configuration dependencies are between projects whereas execution dependencies are always resolved to task dependencies.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T090147Z" creationid="haohang" creationdate="20160718T090044Z">
        <seg>配置依赖是项目之间的，而执行依赖总是被解析为任务依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Configuration dependencies are very different to execution dependencies.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T090042Z" creationid="haohang" creationdate="20160718T090042Z">
        <seg>配置依赖与执行依赖有很大上的不同。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Configuration injection feature and access to the complete project model are possible because every project is configured before the execution phase.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160522T120610Z" creationid="95" creationdate="20160522T120610Z">
        <seg>由于每个项目都在执行阶段之前配置，所以也能做到配置注入功能以及访问整个项目模型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Configuration of projects in parallel.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T090740Z" creationid="haohang" creationdate="20160726T090621Z">
        <seg>并行的项目配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Configuration on demand mode attempts to configure only projects that are relevant for requested tasks.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160522T121724Z" creationid="95" creationdate="20160522T121440Z">
        <seg>按需配置模式尝试只配置所请求的任务相关的项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Configuration shared between subprojects can be configured in a <bpt i="0" x="0">&lt;c0&gt;</bpt>subprojects<ept i="0">&lt;/c0&gt;</ept> block.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150519T124447Z" creationid="msdx" creationdate="20150519T124447Z">
        <seg>在<bpt i="0" x="0">&lt;c0&gt;</bpt>subprojects<ept i="0">&lt;/c0&gt;</ept>块中，可以配置共享子项目之间的配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Configuration time of huge multi-project builds may become noticeable.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160522T120748Z" creationid="95" creationdate="20160522T120748Z">
        <seg>对于巨大的项目，这个配置时间就会变得非常可观。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Configurations have a name, a number of other properties, and they can extend each other.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T075213Z" creationid="haohang" creationdate="20150722T075213Z">
        <seg>配置有一个名字和许多属性，并且它们能够互相继承。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Configure by DAG</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163403Z" creationid="msdx" creationdate="20141109T163403Z">
        <seg>使用 DAG 配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Configure custom artifacts as follows:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20170216T072529Z" creationid="haohang" creationdate="20170216T072529Z">
        <seg>如下所示配置自定义构件︰</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Configured a <bpt i="0" x="0">&lt;c0&gt;</bpt>main<ept i="0">&lt;/c0&gt;</ept> source set with default (i.e. conventional) values for properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141124T074641Z" creationid="msdx" creationdate="20141124T074134Z">
        <seg>通过属性的默认（即常规）配置了 <bpt i="0" x="0">&lt;c0&gt;</bpt>main<ept i="0">&lt;/c0&gt;</ept> 源码集</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Configured supporting tasks to use these properties to perform work</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141124T074637Z" creationid="msdx" creationdate="20141124T074637Z">
        <seg>配置支持使用这些属性来执行工作的任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Configuring Sonar Settings from the Command Line</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065643Z" creationid="95" creationdate="20170416T065643Z">
        <seg>从命令行配置 Sonar 的设置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Configuring a first level dependency as <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>forced<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150721T090218Z" creationid="haohang" creationdate="20150721T083846Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>强制<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>配置第一级依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Configuring an HTTP proxy (for example for downloading dependencies) is done via standard JVM system properties.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141121T141253Z" creationid="msdx" creationdate="20141121T141253Z">
        <seg>配置 HTTP 代理服务器 （例如用于下载依赖） 是通过标准的 JVM 系统属性来做的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Configuring any dependency (transitive or not) as <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>forced<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150721T090653Z" creationid="haohang" creationdate="20150721T090653Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>强制<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>配置任何依赖项（不管是否可传递）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Configuring arbitrary objects</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T164949Z" creationid="msdx" creationdate="20141109T164949Z">
        <seg>配置任意对象</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Configuring arbitrary objects using an external script</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T164957Z" creationid="msdx" creationdate="20141109T164957Z">
        <seg>使用外部脚本配置任意对象</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Configuring tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150330T140954Z" creationid="Administrator" creationdate="20150330T140954Z">
        <seg>配置任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Configuring the JaCoCo Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065514Z" creationid="95" creationdate="20170416T065514Z">
        <seg>配置 JaCoCo 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Configuring the Sonar Runner</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065709Z" creationid="95" creationdate="20170416T065709Z">
        <seg>配置 Sonar Runner</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Configuring the build environment via gradle.properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150508T131819Z" creationid="msdx" creationdate="20150508T131819Z">
        <seg>通过 gradle.properties 配置构建环境</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Configuring the compiler, assembler and linker</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070419Z" creationid="95" creationdate="20170416T070419Z">
        <seg>配置编译器，汇编器和连接器</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Configuring the daemon</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150508T131808Z" creationid="msdx" creationdate="20150508T131808Z">
        <seg>配置守护进程</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Configuring the project using an external build script</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T164941Z" creationid="msdx" creationdate="20141109T164941Z">
        <seg>使用外部构建脚本配置项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Conflicting versions of the same jar should be detected and either resolved or cause an exception.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150721T054253Z" creationid="haohang" creationdate="20150721T054253Z">
        <seg>相同的 jar 包的冲突版本应该被检测到，并且要么解决，要么抛出异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Consider the Gradle project itself, while Gradle only has a few direct, first-level dependencies, when Gradle is compiled it needs more that one hundred dependencies on the classpath.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150720T061540Z" creationid="haohang" creationdate="20150720T061540Z">
        <seg>考虑 Gradle 项目本身，虽然 Gradle 仅有几个直接的第一级依赖，当 编译 Gradle 时在它的类路径上会需要超过一百个的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Consider the case where another task is to consume the classes files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141124T094429Z" creationid="msdx" creationdate="20141124T093931Z">
        <seg>考虑一下另一种消费类文件的任务的情况。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Console console = System.console()</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160108T152906Z" creationid="95" creationdate="20160108T152906Z">
        <seg>Console console = System.console()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Contains a sample class and unit test, if there are no existing source or test files</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T094311Z" creationid="haohang" creationdate="20150707T094311Z">
        <seg>如果不存在源文件或测试文件，会包含一个示例类和单元测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Contains a sample groovy class and an according Spock specification, if there are no existing source or test files</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T094754Z" creationid="haohang" creationdate="20150707T094641Z">
        <seg>如果不存在源文件或测试文件，会包含一个示例 groovy 类和一个相应的 Spock 规范</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Contains a sample scala class and an according ScalaTest test suite, if there are no existing source or test files</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T094525Z" creationid="haohang" creationdate="20150707T094525Z">
        <seg>如果不存在源文件或测试文件，会包含一个示例 scala 类和一个相应的 ScalaTest 测试套件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Contains all <bpt i="0" x="0">&lt;c0&gt;</bpt>.g<ept i="0">&lt;/c0&gt;</ept> found in the ANTLR source directories, and excludes all other types of files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T102848Z" creationid="haohang" creationdate="20150625T102848Z">
        <seg>包含在 ANTLR 源目录中找到的所有的<bpt i="0" x="0">&lt;c0&gt;</bpt>.g<ept i="0">&lt;/c0&gt;</ept>，并排除所有其他类型的文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Contains all <bpt i="0" x="0">&lt;c0&gt;</bpt>.groovy<ept i="0">&lt;/c0&gt;</ept> and <bpt i="1" x="1">&lt;c1&gt;</bpt>.java<ept i="1">&lt;/c1&gt;</ept> files found in the Groovy source directories, and excludes all other types of files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T093135Z" creationid="msdx" creationdate="20150429T093135Z">
        <seg>包含在 Groovy 源目录中找到的所有的<bpt i="0" x="0">&lt;c0&gt;</bpt>.groovy<ept i="0">&lt;/c0&gt;</ept>和<bpt i="1" x="1">&lt;c1&gt;</bpt>.java<ept i="1">&lt;/c1&gt;</ept>文件，并排除所有其他类型的文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Contains all <bpt i="0" x="0">&lt;c0&gt;</bpt>.scala<ept i="0">&lt;/c0&gt;</ept> and <bpt i="1" x="1">&lt;c1&gt;</bpt>.java<ept i="1">&lt;/c1&gt;</ept> files found in the Scala source directories, and excludes all other types of files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150430T154829Z" creationid="msdx" creationdate="20150430T154829Z">
        <seg>包含在 Scala 源目录中找到的所有的<bpt i="0" x="0">&lt;c0&gt;</bpt>.scala<ept i="0">&lt;/c0&gt;</ept>和<bpt i="1" x="1">&lt;c1&gt;</bpt>.java<ept i="1">&lt;/c1&gt;</ept>文件，并排除所有其他类型的文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Contains only <bpt i="0" x="0">&lt;c0&gt;</bpt>.java<ept i="0">&lt;/c0&gt;</ept> files found in the Java source directories, and excludes all other files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T052424Z" creationid="Administrator" creationdate="20150427T052424Z">
        <seg>仅包含Java源文件目录里的<bpt i="0" x="0">&lt;c0&gt;</bpt>.java<ept i="0">&lt;/c0&gt;</ept>文件，并排除其他所有文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Contains only resources, and excludes any <bpt i="0" x="0">&lt;c0&gt;</bpt>.java<ept i="0">&lt;/c0&gt;</ept> files found in the resource source directories.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T052729Z" creationid="Administrator" creationdate="20150427T052708Z">
        <seg>仅包含资源文件，并且排除在资源源目录中找到的所有 <bpt i="0" x="0">&lt;c0&gt;</bpt>.java<ept i="0">&lt;/c0&gt;</ept> 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Contains only the <bpt i="0" x="0">&lt;c0&gt;</bpt>.groovy<ept i="0">&lt;/c0&gt;</ept> files found in the Groovy source directories.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T093601Z" creationid="msdx" creationdate="20150429T093601Z">
        <seg>包含在 Groovy 源目录中找到的所有的<bpt i="0" x="0">&lt;c0&gt;</bpt>.groovy<ept i="0">&lt;/c0&gt;</ept>文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Contains only the <bpt i="0" x="0">&lt;c0&gt;</bpt>.scala<ept i="0">&lt;/c0&gt;</ept> files found in the Scala source directories.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150430T154907Z" creationid="msdx" creationdate="20150430T154907Z">
        <seg>包含在 Scala 源目录中找到的所有的<bpt i="0" x="0">&lt;c0&gt;</bpt>.scala<ept i="0">&lt;/c0&gt;</ept>文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Contains the artifacts and dependencies required by this project at runtime.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T084630Z" creationid="Administrator" creationdate="20150426T084630Z">
        <seg>包含本项目运行时所需要的构件和依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Contains the project's source sets.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T045731Z" creationid="Administrator" creationdate="20150427T045731Z">
        <seg>包含项目的源集。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Content assistance in the IDE</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141117T141836Z" creationid="msdx" creationdate="20141117T140235Z">
        <seg>在 IDE 中的内容帮助</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Continuing the build when a failure occurs</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163855Z" creationid="msdx" creationdate="20141109T163855Z">
        <seg>失败后继续执行</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Convenient customization of dependencies reported in <bpt i="0" x="0">&lt;c0&gt;</bpt>module descriptor<ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T154725Z" creationid="95" creationdate="20170330T154620Z">
        <seg>在<bpt i="0" x="0">&lt;c0&gt;</bpt>module descriptor<ept i="0">&lt;/c0&gt;</ept>中方便依赖报告的自定义。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Convenient customization of module attributes (<bpt i="0" x="0">&lt;c0&gt;</bpt>module<ept i="0">&lt;/c0&gt;</ept>, <bpt i="1" x="1">&lt;c1&gt;</bpt>organisation<ept i="1">&lt;/c1&gt;</ept> etc.)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T154618Z" creationid="95" creationdate="20170330T154618Z">
        <seg>方便定制的模块属性（<bpt i="0" x="0">&lt;c0&gt;</bpt>module<ept i="0">&lt;/c0&gt;</ept>、<bpt i="1" x="1">&lt;c1&gt;</bpt>organisation<ept i="1">&lt;/c1&gt;</ept>等）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Convention methods</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070307Z" creationid="95" creationdate="20170416T070307Z">
        <seg>约定方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Convention object</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065803Z" creationid="95" creationdate="20170416T065803Z">
        <seg>约定对象</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Convention properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131651Z" creationid="msdx" creationdate="20150509T131651Z">
        <seg>约定属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Conventions</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131512Z" creationid="msdx" creationdate="20150509T131512Z">
        <seg>约定</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Conversely, Gradle's direct compiler integration (see above) will reuse the same compiler process as much as possible.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T135927Z" creationid="Administrator" creationdate="20150427T135927Z">
        <seg>相反，Gradle 的直接编译器集成 （见上文） 将尽可能多地重用相同的编译器进程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Copies of this document may be made for your own use and for distribution to others, provided that you do not charge any fee for such copies and further provided that each copy contains this Copyright Notice, whether distributed in print or electronically.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T164334Z" creationid="msdx" creationdate="20141109T161737Z">
        <seg>本文件的副本，无论其分发是以印刷版本还是电子版本，也无论是您自用，还是分发给他人，均为免费形式，并且每一份副本均需带有版权声明。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Copies production resources into the production classes directory.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T175142Z" creationid="Administrator" creationdate="20150425T174719Z">
        <seg>把生产资源文件拷贝到生产的类目录中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Copies test resources into the test classes directory.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T004522Z" creationid="Administrator" creationdate="20150426T004522Z">
        <seg>把测试的资源文件拷贝到测试的类目录中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Copies the given source set's resources into the classes directory.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T005839Z" creationid="Administrator" creationdate="20150426T005839Z">
        <seg>把给定的源集的资源文件拷贝到类目录中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Copy</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083212Z" creationid="msdx" creationdate="20150428T083212Z">
        <seg>Copy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Copy myCopy = task(myCopy, type: Copy)
myCopy.from <bpt i="0" x="0">&lt;s0&gt;</bpt>'resources'<ept i="0">&lt;/s0&gt;</ept>
myCopy.into <bpt i="1" x="1">&lt;s1&gt;</bpt>'target'<ept i="1">&lt;/s1&gt;</ept>
myCopy.include(<bpt i="2" x="2">&lt;s2&gt;</bpt>'**/*.txt'<ept i="2">&lt;/s2&gt;</ept>, <bpt i="3" x="3">&lt;s3&gt;</bpt>'**/*.xml'<ept i="3">&lt;/s3&gt;</ept>, <bpt i="4" x="4">&lt;s4&gt;</bpt>'**/*.properties'<ept i="4">&lt;/s4&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T092016Z" creationid="msdx" creationdate="20141110T092016Z">
        <seg>Copy myCopy = task(myCopy, type: Copy)
myCopy.from <bpt i="0" x="0">&lt;s0&gt;</bpt>'resources'<ept i="0">&lt;/s0&gt;</ept>
myCopy.into <bpt i="1" x="1">&lt;s1&gt;</bpt>'target'<ept i="1">&lt;/s1&gt;</ept>
myCopy.include(<bpt i="2" x="2">&lt;s2&gt;</bpt>'**/*.txt'<ept i="2">&lt;/s2&gt;</ept>, <bpt i="3" x="3">&lt;s3&gt;</bpt>'**/*.xml'<ept i="3">&lt;/s3&gt;</ept>, <bpt i="4" x="4">&lt;s4&gt;</bpt>'**/*.properties'<ept i="4">&lt;/s4&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Copy specs form a hierarchy.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T141557Z" creationid="msdx" creationdate="20141113T141050Z">
        <seg>复制规范用来组织一个层次结构。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Copying files</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150330T141156Z" creationid="Administrator" creationdate="20150330T141156Z">
        <seg>复制文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Copyright © 2007-2012 Hans Dockter, Adam Murdoch</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T161621Z" creationid="msdx" creationdate="20141109T161621Z">
        <seg>版权所有 © 2007-2012 Hans Dockter, Adam Murdoch</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Core language support: C, C++, Assembler, Objective-C and Objective-C++</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070414Z" creationid="95" creationdate="20170416T070414Z">
        <seg>核心语言支持: C、C++、汇编，Objective-C和Objective-C++</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>CreateStartScripts</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150702T105019Z" creationid="haohang" creationdate="20150702T105019Z">
        <seg>CreateStartScripts</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Creates OS specific scripts to run the project as a JVM application.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150702T105051Z" creationid="haohang" creationdate="20150702T105051Z">
        <seg>创建操作系统特定的脚本来把该项目作为一个 JVM 应用程序运行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Creates a TAR archive of the distribution contents</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150701T031238Z" creationid="haohang" creationdate="20150701T031238Z">
        <seg>创建分发内容的 TAR 文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Creates a ZIP archive of the distribution contents</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150701T030851Z" creationid="haohang" creationdate="20150701T030851Z">
        <seg>创建分发内容的 ZIP 文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Creates a full distribution TAR archive including runtime libraries and OS specific scripts.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150702T105155Z" creationid="haohang" creationdate="20150702T105155Z">
        <seg>创建包含了运行时库和操作系统特定的脚本的完整分发 TAR 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Creates a full distribution ZIP archive including runtime libraries and OS specific scripts.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150702T105148Z" creationid="haohang" creationdate="20150702T105148Z">
        <seg>创建包含了运行时库和操作系统特定的脚本的完整分发 ZIP 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Creates a full distribution ZIP archive including runtime libraries.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T070356Z" creationid="haohang" creationdate="20150707T070356Z">
        <seg>创建包含运行时库的完整分发 ZIP 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Creating archives</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150330T141212Z" creationid="Administrator" creationdate="20150330T141212Z">
        <seg>创建归档文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Creation of advanced dependency reports tailored to your use case.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T034039Z" creationid="haohang" creationdate="20150807T034039Z">
        <seg>创建高级的依赖报告，以适应你的用例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Cross project configuration</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070554Z" creationid="95" creationdate="20170416T070554Z">
        <seg>跨项目配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Cross-compiling is possible with the <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Gcc<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> and <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>Clang<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept> tool chains, by programmatically adding support for additional target platforms.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T094652Z" creationid="haohang" creationdate="20160408T094417Z">
        <seg>使用 <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Gcc<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> 和 <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>Clang<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept> 工具链，通过 以编程方式添加附加的目标平台的支持，是可以做到交叉编译的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Current Capabilities</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T071037Z" creationid="95" creationdate="20170416T071037Z">
        <seg>目前的能力</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Current Directory</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T160817Z" creationid="msdx" creationdate="20141105T160817Z">
        <seg>当前目录</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Currently, Gradle does not use task history from a different version.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160816T150330Z" creationid="95" creationdate="20160816T150330Z">
        <seg>当前，Gradle没有使用来自不同版本的任务历史。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Customizing</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T132222Z" creationid="msdx" creationdate="20150509T132222Z">
        <seg>自定义</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Customizing the generated files</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065827Z" creationid="95" creationdate="20170416T065827Z">
        <seg>自定义生成的文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>DEBUG</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T070739Z" creationid="msdx" creationdate="20141116T070739Z">
        <seg>DEBUG</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>DEBUG and higher (that is, all log messages)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T103036Z" creationid="msdx" creationdate="20141116T103036Z">
        <seg>DEBUG 及更高</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>DateServlet.java</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160722T091209Z" creationid="haohang" creationdate="20160722T091209Z">
        <seg>DateServlet.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Debug messages</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T070744Z" creationid="msdx" creationdate="20141116T070744Z">
        <seg>调试消息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Declarative builds and build-by-convention</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141101T034420Z" creationid="msdx" creationdate="20141101T034420Z">
        <seg>Declarative builds and build-by-convention</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Declaring artifacts</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070244Z" creationid="95" creationdate="20170416T070244Z">
        <seg>声明构件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Declaring variables</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T164857Z" creationid="msdx" creationdate="20141109T164857Z">
        <seg>声明变量</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Declaring your dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163600Z" creationid="msdx" creationdate="20141109T163542Z">
        <seg>依赖声明</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Decoupled Projects</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070639Z" creationid="95" creationdate="20170416T070639Z">
        <seg>解耦的项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Decoupled projects may only interact in terms of declared dependencies: project dependencies (<bpt i="2" x="2">&lt;a2&gt;</bpt>Section 50.4.3, “Project dependencies”<ept i="2">&lt;/a2&gt;</ept>) and/or task dependencies (<bpt i="3" x="3">&lt;a3&gt;</bpt>Section 6.5, “Task dependencies”<ept i="3">&lt;/a3&gt;</ept>).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T093018Z" creationid="haohang" creationdate="20160726T093018Z">
        <seg>解耦的项目可能只在声明依赖方面会互相影响：项目依赖（<bpt i="2" x="2">&lt;a2&gt;</bpt>第 50.4.3节, “项目依赖”<ept i="2">&lt;/a2&gt;</ept>）， 或者是任务依赖（<bpt i="3" x="3">&lt;a3&gt;</bpt>第 6.5节, “任务依赖”<ept i="3">&lt;/a3&gt;</ept>）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Default Value</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T044211Z" creationid="msdx" creationdate="20141108T044211Z">
        <seg>默认值</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Default tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163347Z" creationid="msdx" creationdate="20141109T163347Z">
        <seg>默认任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Default value</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T155810Z" creationid="msdx" creationdate="20141113T155810Z">
        <seg>默认值</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Define machine specific details, such as where JDKs are installed.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161214T142810Z" creationid="95" creationdate="20161214T142734Z">
        <seg>定义机器的一些特定信息，比如JDK的安装位置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Defines the root directory of your Gradle project (typically where build.gradle is located).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T160914Z" creationid="msdx" creationdate="20141105T160914Z">
        <seg>定义了你的 Gradle 项目（通常是 build.gradle 所在的位置）的根目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Defining tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150330T140947Z" creationid="Administrator" creationdate="20150330T140947Z">
        <seg>定义任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Definition of terms</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T071027Z" creationid="95" creationdate="20170416T071027Z">
        <seg>术语定义</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Delete</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083223Z" creationid="msdx" creationdate="20150428T083223Z">
        <seg>Delete</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Deletes the output files produced by the specified task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T005222Z" creationid="Administrator" creationdate="20150426T005222Z">
        <seg>删除由指定的任务所产生的输出文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Deletes the project build directory.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T005151Z" creationid="Administrator" creationdate="20150426T005151Z">
        <seg>删除项目的build目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170211T140527Z" creationid="95" creationdate="20170211T140527Z">
        <seg>依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Dependencies - Which dependencies?</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070613Z" creationid="95" creationdate="20170416T070613Z">
        <seg>依赖-哪些依赖？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Dependencies for C++ projects are binary libraries that export header files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160325T025531Z" creationid="haohang" creationdate="20160325T025531Z">
        <seg>C++ 项目的依赖是导出头文件的二进制库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Dependencies from 'runtime' configuration</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170211T140602Z" creationid="95" creationdate="20170211T140602Z">
        <seg>“runtime”配置的依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Dependency Management</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070110Z" creationid="95" creationdate="20170416T070110Z">
        <seg>依赖管理</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Dependency Management Basics</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163516Z" creationid="msdx" creationdate="20141109T163515Z">
        <seg>依赖管理基础</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Dependency Management Best Practices</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070121Z" creationid="95" creationdate="20170416T070121Z">
        <seg>依赖管理的最佳实践</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Dependency configurations</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163609Z" creationid="msdx" creationdate="20141109T163609Z">
        <seg>依赖配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Dependency management</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131644Z" creationid="msdx" creationdate="20150509T131644Z">
        <seg>依赖管理</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Dependency management can be particularly challenging during a migration from one build system to another.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150716T035929Z" creationid="haohang" creationdate="20150716T035929Z">
        <seg>依赖管理在从一个构建系统迁移到另一个的过程中尤其具有挑战性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Dependency management is a critical feature of every build, and Gradle has placed an emphasis on offering first-class dependency management that is both easy-to-understand and compatible with a wide variety of approaches.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150714T080042Z" creationid="haohang" creationdate="20150714T080042Z">
        <seg>依赖管理是每个构建的关键特性，并且 Gradle 强调提供最好的依赖管理，容易理解以及使用各种各样的方法来兼容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Dependency resolution will fail if the required artifacts are not available in any repository specified by the build, regardless whether the local cache has retrieved this artifact from a different repository.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T150837Z" creationid="95" creationdate="20151129T150837Z">
        <seg>如果所需的构件，在构建所指定的任何仓库中都没有找到的话，依赖解析将会失败，无论本地缓存是否从一个其他的仓库中取回这个构件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Dependency resolve rules are an <bpt i="0" x="0">&lt;a0&gt;</bpt>incubating<ept i="0">&lt;/a0&gt;</ept> feature introduced in Gradle 1.4 which give you fine-grained control over the version selected for a particular dependency.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150721T092200Z" creationid="haohang" creationdate="20150721T092200Z">
        <seg>依赖解析规则是一个在 Gradle 1.4 引进的<bpt i="0" x="0">&lt;a0&gt;</bpt>孵化中<ept i="0">&lt;/a0&gt;</ept>的功能，让你可以对特定的依赖细粒度地控制所选定的版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Dependency resolve rules give you the power to enforce releasable units in your build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T061327Z" creationid="95" creationdate="20151115T061327Z">
        <seg>依赖解析规则使你能够在构建中强制指定可发布的单位。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Dependency resolve rules provide a mechanism for blacklisting a particular version of a dependency and providing a replacement version.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T055745Z" creationid="95" creationdate="20151115T055745Z">
        <seg>依赖解析规则提供了一个机制，用于把一个依赖的指定版本列入黑名单，并提供一个替代的版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Dependency resolve rules provide a neat implementation of this pattern:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T065317Z" creationid="95" creationdate="20151115T065317Z">
        <seg>依赖解析规则提供了这种模式的整洁的实现：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Dependency resolve rules provide a very powerful way to control the dependency resolution process, and can be used to implement all sorts of advanced patterns in dependency management.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T060210Z" creationid="95" creationdate="20151115T060059Z">
        <seg>依赖解析规则提供了一种非常强大的方式来控制依赖解析过程，并可以用于实现在依赖管理中各种高级模式的排序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>DependencyReportTask</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T061216Z" creationid="haohang" creationdate="20150628T061216Z">
        <seg>DependencyReportTask</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Depending on project size, the Sonar Runner may require a lot of memory.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150525T234427Z" creationid="haohang" creationdate="20150525T234427Z">
        <seg>根据项目大小，Sonar Runner 可能需要大量的内存。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Depending on the test framework used (JUnit / TestNG) the test class detection uses different criteria.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T040856Z" creationid="Administrator" creationdate="20150428T040856Z">
        <seg>根据所使用的测试框架 （JUnit 或 TestNG），会使用不同的标准进行测试类的检测。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Depends on</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T174047Z" creationid="Administrator" creationdate="20150425T174047Z">
        <seg>依赖于</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Depends on the archive type, and for TAR files, the compression type as well: <bpt i="0" x="0">&lt;c0&gt;</bpt>zip<ept i="0">&lt;/c0&gt;</ept>, <bpt i="1" x="1">&lt;c1&gt;</bpt>jar<ept i="1">&lt;/c1&gt;</ept>, <bpt i="2" x="2">&lt;c2&gt;</bpt>war<ept i="2">&lt;/c2&gt;</ept>, <bpt i="3" x="3">&lt;c3&gt;</bpt>tar<ept i="3">&lt;/c3&gt;</ept>, <bpt i="4" x="4">&lt;c4&gt;</bpt>tgz<ept i="4">&lt;/c4&gt;</ept> or <bpt i="5" x="5">&lt;c5&gt;</bpt>tbz2<ept i="5">&lt;/c5&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T160615Z" creationid="msdx" creationdate="20141113T160615Z">
        <seg>依赖于归档的类型，用于TAR文件，可以是以下压缩类型： <bpt i="0" x="0">&lt;c0&gt;</bpt>zip<ept i="0">&lt;/c0&gt;</ept>, <bpt i="1" x="1">&lt;c1&gt;</bpt>jar<ept i="1">&lt;/c1&gt;</ept>, <bpt i="2" x="2">&lt;c2&gt;</bpt>war<ept i="2">&lt;/c2&gt;</ept>, <bpt i="3" x="3">&lt;c3&gt;</bpt>tar<ept i="3">&lt;/c3&gt;</ept>, <bpt i="4" x="4">&lt;c4&gt;</bpt>tgz<ept i="4">&lt;/c4&gt;</ept> or <bpt i="5" x="5">&lt;c5&gt;</bpt>tbz2<ept i="5">&lt;/c5&gt;</ept>.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Depends on the archive type.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T160001Z" creationid="msdx" creationdate="20141113T160001Z">
        <seg>依赖于归档类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Deploying to a Maven repository is only half the fun if you don't have a POM. Fortunately Gradle can generate this POM for you using the dependency information it has.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160104T154047Z" creationid="95" creationdate="20160104T153501Z">
        <seg>如果你没有一个POM文件，部署到 Maven 仓库只有一半的乐趣。幸运的是 Gradle 可以使用它的依赖信息为你生成这个 POM。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Deploys your web application to a Jetty web container embedded in the build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T031550Z" creationid="Administrator" creationdate="20150425T031550Z">
        <seg>在构建中部署你的web程序到一个内嵌的Jetty web容器中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Description</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T155813Z" creationid="msdx" creationdate="20141113T155813Z">
        <seg>描述</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Despite this wide variation of requirements, the Gradle project recommends that all projects follow this set of core rules:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150716T091951Z" creationid="haohang" creationdate="20150716T091951Z">
        <seg>尽管这一要求变化很大，Gradle 项目建议所有项目都遵循这套核心规则：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Details about the Gradle Wrapper can be found in the according chapter <bpt i="2" x="2">&lt;a2&gt;</bpt>Chapter 61, <bpt i="3" x="3">&lt;i3&gt;</bpt>The Gradle Wrapper<ept i="3">&lt;/i3&gt;</ept><ept i="2">&lt;/a2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150710T012617Z" creationid="haohang" creationdate="20150710T012617Z">
        <seg>可以根据<bpt i="2" x="2">&lt;a2&gt;</bpt>第六十一章， <bpt i="3" x="3">&lt;i3&gt;</bpt>Gradle Wrapper<ept i="3">&lt;/i3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>这一章的内容中获取有关 Gradle Wrapper 的详细信息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Did we mention faster builds?</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141117T150610Z" creationid="msdx" creationdate="20141117T150610Z">
        <seg>我们提到了更快的构建吗？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Different configurations can be mapped to one or different scopes.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T145057Z" creationid="95" creationdate="20160106T145057Z">
        <seg>不同的configurations可以映射到一个或不同的scopes。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Directory</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T083244Z" creationid="Administrator" creationdate="20150426T083244Z">
        <seg>目录</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Directory creation</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T164922Z" creationid="msdx" creationdate="20141109T164922Z">
        <seg>创建目录</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Distribution archives typically contain then executable application and other supporting files, such as documentation.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150701T025817Z" creationid="haohang" creationdate="20150701T025817Z">
        <seg>分发 archives 通常包含可执行程序，和其他支持文件，比如文档。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Distribution contents</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065948Z" creationid="95" creationdate="20170416T065948Z">
        <seg>分发内容</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>DocBook XSL Stylesheets V1.75.2</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T071138Z" creationid="msdx" creationdate="20141030T071138Z">
        <seg>DocBook XSL Stylesheets V1.75.2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Does not add any particular source sets.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T073916Z" creationid="Administrator" creationdate="20150425T072006Z">
        <seg>不会添加任何特定的源集。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Does not support any meta-data formats.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T095729Z" creationid="haohang" creationdate="20150807T095729Z">
        <seg>不支持任何元数据格式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Does the same as the eclipse plugin plus generates eclipse WTP (Web Tools Platform) configuration files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T035010Z" creationid="Administrator" creationdate="20150425T035010Z">
        <seg>与 eclipse 插件一样，但它还生成 eclipse WTP （Web 工具平台） 的配置文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Don't forget that your build script is simply Groovy code that drives the Gradle API.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T040927Z" creationid="msdx" creationdate="20141108T040703Z">
        <seg>不要忘记您的构建脚本是简单的 Groovy 代码，并驱动着 Gradle API。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Double clicking a task executes it.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T151043Z" creationid="msdx" creationdate="20141105T151043Z">
        <seg>双击一个任务可以执行它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Download</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162126Z" creationid="msdx" creationdate="20141109T162126Z">
        <seg>下载</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Drop the source for your build classes into a certain directory and Gradle automatically compiles them and includes them in the classpath of your build script.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T044118Z" creationid="95" creationdate="20161211T044118Z">
        <seg>把你的构建的类的源码放到一个指定的目录中，然后Gradle会自动地编译它们，并把它们包含到你的构建脚本的classpath里。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Dry Run</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T164813Z" creationid="msdx" creationdate="20141109T163958Z">
        <seg>模拟运行</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Due to the overhead of dependency analysis, a clean compilation or a compilation after a larger code change may take longer than with the Ant based compiler.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T081116Z" creationid="msdx" creationdate="20150503T080600Z">
        <seg>由于依赖分析的系统开销，一次干净的编译或在代码有了较大的更改之后的编译，可能花费的时间要长于使用基于 Ant 的编译器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Due to this mechanism, your CUnit sources may not contain a <bpt i="0" x="0">&lt;c0&gt;</bpt>main<ept i="0">&lt;/c0&gt;</ept> method since this will clash with the method provided by Gradle.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160504T150525Z" creationid="95" creationdate="20160504T150525Z">
        <seg>由于这一机制，你的 CUnit 源碼可能不包含一个<bpt i="0" x="0">&lt;c0&gt;</bpt>main<ept i="0">&lt;/c0&gt;</ept>方法，因为这会与 Gradle 所提供的方法产生冲突。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>During the initialization phase, Gradle determines which projects are going to take part in the build, and creates a <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Project<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> instance for each of these projects.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160518T055922Z" creationid="haohang" creationdate="20160518T055922Z">
        <seg>在初始化阶段，Gradle 确定哪些项目是需要构建的，并为每个需要构建的项目创建一个<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Project<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>During this phase the project objects are configured.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160518T075352Z" creationid="haohang" creationdate="20160518T055927Z">
        <seg>在这一阶段，对project对象进行配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Dynamic configuration from Gradle build scripts</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T055834Z" creationid="msdx" creationdate="20150513T055834Z">
        <seg>通过 Gradle 构建脚本动态配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Dynamic tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162458Z" creationid="msdx" creationdate="20141109T162458Z">
        <seg>动态任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ERROR</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T070713Z" creationid="msdx" creationdate="20141116T070713Z">
        <seg>ERROR</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Each <bpt i="0" x="0">&lt;c0&gt;</bpt>artifact<ept i="0">&lt;/c0&gt;</ept> or <bpt i="1" x="1">&lt;c1&gt;</bpt>ivy<ept i="1">&lt;/c1&gt;</ept> specified for a repository adds an <bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;e3&gt;</bpt>additional<ept i="3">&lt;/e3&gt;</ept><ept i="2">&lt;/s2&gt;</ept> pattern to use.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T133103Z" creationid="95" creationdate="20151006T111402Z">
        <seg>每个<bpt i="0" x="0">&lt;c0&gt;</bpt>artifact<ept i="0">&lt;/c0&gt;</ept>或<bpt i="1" x="1">&lt;c1&gt;</bpt>ivy<ept i="1">&lt;/c1&gt;</ept>都指定了一个仓库，添加一个<bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;e3&gt;</bpt>额外的<ept i="3">&lt;/e3&gt;</ept><ept i="2">&lt;/s2&gt;</ept>的模式来使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Each <bpt i="3" x="3">&lt;c3&gt;</bpt>library<ept i="3">&lt;/c3&gt;</ept> component can produce at least one <bpt i="4" x="4">&lt;a4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>SharedLibraryBinary<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/a4&gt;</ept> and at least one <bpt i="6" x="6">&lt;a6&gt;</bpt><bpt i="7" x="7">&lt;c7&gt;</bpt>StaticLibraryBinary<ept i="7">&lt;/c7&gt;</ept><ept i="6">&lt;/a6&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160219T065306Z" creationid="haohang" creationdate="20160219T065306Z">
        <seg>每个<bpt i="3" x="3">&lt;c3&gt;</bpt>library<ept i="3">&lt;/c3&gt;</ept>组件可以产生至少一个<bpt i="4" x="4">&lt;a4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>SharedLibraryBinary<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/a4&gt;</ept>和至少一个<bpt i="6" x="6">&lt;a6&gt;</bpt><bpt i="7" x="7">&lt;c7&gt;</bpt>StaticLibraryBinary<ept i="7">&lt;/c7&gt;</ept><ept i="6">&lt;/a6&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Each added <bpt i="6" x="6">&lt;a6&gt;</bpt><bpt i="7" x="7">&lt;c7&gt;</bpt>TargetPlatformConfiguration<ept i="7">&lt;/c7&gt;</ept><ept i="6">&lt;/a6&gt;</ept> defines support for a particular target platform, and supplies additional tool arguments that are required to target this platform.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T094801Z" creationid="haohang" creationdate="20160408T094801Z">
        <seg>每个添加的 <bpt i="6" x="6">&lt;a6&gt;</bpt><bpt i="7" x="7">&lt;c7&gt;</bpt>TargetPlatformConfiguration<ept i="7">&lt;/c7&gt;</ept><ept i="6">&lt;/a6&gt;</ept> 定义了对一个特定的目标平台的支持，并且提供了针对该平台所需要的额外的工具参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Each artifact can have a different set of dependencies.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150724T035634Z" creationid="haohang" creationdate="20150724T035634Z">
        <seg>每个 artifact 可以有一组不同的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Each binary is associated with a particular <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>ToolChain<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>, allowing settings to be targeted based on this value.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160324T152216Z" creationid="95" creationdate="20160324T151850Z">
        <seg>每个二进制文件与特定的<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>ToolChain<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>关联，允许设置基于此值进行针对性的配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Each binary to be produced is associated with a set of compiler and linker settings, which include command-line arguments as well as macro definitions.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160324T151646Z" creationid="95" creationdate="20160324T151646Z">
        <seg>每一个产生的二进制文件都和一系列的编译器和链接器设置相关联，这些设置包含了命令行参数，以及宏定义。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Each closure has a <bpt i="0" x="0">&lt;c0&gt;</bpt>delegate<ept i="0">&lt;/c0&gt;</ept> object, which Groovy uses to look up variable and method references which are not local variables or parameters of the closure.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T065123Z" creationid="msdx" creationdate="20141108T063535Z">
        <seg>每个闭包都有一个<bpt i="0" x="0">&lt;c0&gt;</bpt>委托<ept i="0">&lt;/c0&gt;</ept>对象，Groovy 使用它来查找变量和方法的引用，而不是作为闭包的局部变量或参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Each component can have a set of named <bpt i="0" x="0">&lt;c0&gt;</bpt>flavors<ept i="0">&lt;/c0&gt;</ept>, and a separate binary variant can be produced for each flavor.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T080648Z" creationid="haohang" creationdate="20160405T034226Z">
        <seg>每个组件都可以有一组<bpt i="0" x="0">&lt;c0&gt;</bpt>flavors<ept i="0">&lt;/c0&gt;</ept>，并且能为每一个flavor生成一个单独的二进制变种。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Each element in the tree represents a project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T030603Z" creationid="haohang" creationdate="20160519T030603Z">
        <seg>树中的每个元素表示一个项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Each filter has a POM associated with it which you can configure.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T144438Z" creationid="95" creationdate="20160106T144438Z">
        <seg>每个过滤器都有一个你可以进行配置的POM与它关联。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Each init script also implements the <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Script<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> interface.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161214T155656Z" creationid="95" creationdate="20161214T155656Z">
        <seg>每一个初始化脚本也实现了 <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Script<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> 接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Each init script has a <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Gradle<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> instance associated with it.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161214T155730Z" creationid="95" creationdate="20161214T155605Z">
        <seg>每一个init 脚本都有一个 <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Gradle<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> 实例与其关联。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Each jar or war object has a <bpt i="0" x="0">&lt;c0&gt;</bpt>manifest<ept i="0">&lt;/c0&gt;</ept> property with a separate instance of <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>Manifest<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T145129Z" creationid="msdx" creationdate="20150428T145129Z">
        <seg>每个 jar 或war 对象都有一个单独的<bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>Manifest<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>实例的<bpt i="0" x="0">&lt;c0&gt;</bpt>manifest<ept i="0">&lt;/c0&gt;</ept>属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Each module (also called <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>component<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>) has metadata associated with it, such as its group, name, version, dependencies, and so on.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T091619Z" creationid="95" creationdate="20151115T091619Z">
        <seg>每个模块（也称为<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>组件<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>）都有相关的元数据上，像它的组，名称，版本，依赖，等等。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Each native binary produced for a component is referred to as <bpt i="0" x="0">&lt;c0&gt;</bpt>variant<ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160219T065859Z" creationid="haohang" creationdate="20160219T065819Z">
        <seg>组件所产生的每个原生二进制称为<bpt i="0" x="0">&lt;c0&gt;</bpt>variant<ept i="0">&lt;/c0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Each of these functional source sets will contain a language-specific source set for each of the languages supported by the project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160219T064958Z" creationid="haohang" creationdate="20160219T064958Z">
        <seg>这些功能源码集将为project所支持的每一种语言包含指定语言的源码集。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Each of these tasks is wired into the <bpt i="6" x="6">&lt;c6&gt;</bpt>publishToMavenLocal<ept i="6">&lt;/c6&gt;</ept> lifecycle task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T063848Z" creationid="95" creationdate="20170416T063848Z">
        <seg>所有这些任务都被连线到<bpt i="6" x="6">&lt;c6&gt;</bpt>publishToMavenLocal<ept i="6">&lt;/c6&gt;</ept>生命周期任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Each project in the hierarchy has its own project configuration.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T091256Z" creationid="msdx" creationdate="20150512T091256Z">
        <seg>层次结构中的每个项目都有其自身的项目配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Each project object has by default a name equals to the name of its top level directory.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T080620Z" creationid="haohang" creationdate="20160519T080620Z">
        <seg>每个project 对象都有和其顶层目录名称一样的默认名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Each project publishes a java component and a configured additional source artifact.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T145057Z" creationid="95" creationdate="20170330T145057Z">
        <seg>每个项目发布一个 java 组件，以及配置额外的源码构件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Each publication has a unique name within the project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170211T135817Z" creationid="95" creationdate="20170211T135817Z">
        <seg>每一个发布</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Each publication must be given a unique identity as described above.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170304T033544Z" creationid="95" creationdate="20170304T033544Z">
        <seg>如上文所述，每个发布的内容都必须给定一个唯一的标识。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Each repository can have its own layout.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T134257Z" creationid="95" creationdate="20151006T134257Z">
        <seg>每个仓库都可以有其自己的布局。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Each repository is inspected in order, searching first for a <bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;e3&gt;</bpt>module descriptor<ept i="3">&lt;/e3&gt;</ept><ept i="2">&lt;/s2&gt;</ept> file (POM or Ivy file) that indicates the presence of that module.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151007T023251Z" creationid="95" creationdate="20151007T023251Z">
        <seg>每个仓库按顺序进行检查，首先查找指示该模块存在的<bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;e3&gt;</bpt>模块描述符<ept i="3">&lt;/e3&gt;</ept><ept i="2">&lt;/s2&gt;</ept>文件（POM 或 Ivy 文件）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Each task has an <bpt i="0" x="0">&lt;c0&gt;</bpt>inputs<ept i="0">&lt;/c0&gt;</ept> and <bpt i="1" x="1">&lt;c1&gt;</bpt>outputs<ept i="1">&lt;/c1&gt;</ept> property, which you use to declare the inputs and outputs of the task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T061143Z" creationid="msdx" creationdate="20141111T061143Z">
        <seg>每个任务都有一个<bpt i="0" x="0">&lt;c0&gt;</bpt>inputs<ept i="0">&lt;/c0&gt;</ept>和<bpt i="1" x="1">&lt;c1&gt;</bpt>outputs<ept i="1">&lt;/c1&gt;</ept>的属性，用来声明任务的输入和输出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Each test process executes only a single test at a time, so you generally don't need to do anything special to your tests to take advantage of this.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T013445Z" creationid="Administrator" creationdate="20150427T141116Z">
        <seg>每个测试进程会依次执行一个单一的测试，所以你一般不需要对你的测试做任何的配置来利用这一点。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Each time after that, before the task is executed, Gradle takes a new snapshot of the inputs and outputs.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T063621Z" creationid="msdx" creationdate="20141111T063621Z">
        <seg>之后每一次，在执行任务之前，Gradle 会对输入和输出进行一次新的快照。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Each tool chain implementation allows for a certain degree of configuration (see the API documentation for more details).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T091347Z" creationid="haohang" creationdate="20160408T091347Z">
        <seg>每个工具链的实现都允许一定程度的配置（更多细节请参阅API文档）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Eager to try out this new feature?</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160522T124959Z" creationid="95" creationdate="20160522T124959Z">
        <seg>想尝试这一新功能？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Ear</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T094606Z" creationid="msdx" creationdate="20150503T094606Z">
        <seg>ear</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Ear resources, such as a META-INF directory</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T095238Z" creationid="msdx" creationdate="20150503T095238Z">
        <seg>Ear 资源，如 META-INF 目录</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Eclipse Integration</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T132119Z" creationid="msdx" creationdate="20150509T132119Z">
        <seg>Eclipse 集成</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>EclipseClasspath</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T022414Z" creationid="haohang" creationdate="20150624T022414Z">
        <seg>EclipseClasspath</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>EclipseJdt</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T022427Z" creationid="haohang" creationdate="20150624T022427Z">
        <seg>EclipseJdt</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>EclipseModel</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T004647Z" creationid="haohang" creationdate="20150603T004647Z">
        <seg>EclipseModel</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>EclipseProject</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T022401Z" creationid="haohang" creationdate="20150624T022401Z">
        <seg>EclipseProject</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>EclipseWtpComponent</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T022455Z" creationid="haohang" creationdate="20150624T022455Z">
        <seg>EclipseWtpComponent</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>EclipseWtpFacet</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T022525Z" creationid="haohang" creationdate="20150624T022525Z">
        <seg>EclipseWtpFacet</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Edit the build.gradle file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T154249Z" creationid="msdx" creationdate="20141105T154249Z">
        <seg>编辑 build.gradle 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Editing the filter allows you to configure which tasks and projects are shown.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T153643Z" creationid="msdx" creationdate="20141105T151459Z">
        <seg>通过编辑过滤器，你可以对哪些任务和项目要显示进行配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Element</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T141848Z" creationid="95" creationdate="20160105T141848Z">
        <seg>元素</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Embedding Gradle</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070955Z" creationid="95" creationdate="20170416T070955Z">
        <seg>嵌入Gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Enables new incubating mode that makes Gradle selective when configuring projects.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141120T052554Z" creationid="msdx" creationdate="20141120T052554Z">
        <seg>启用新的孵化模式，可以在配置项目时使得 Gradle 具有选择性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Enabling the build logic to make decisions based on the content of the dependency graph.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T034153Z" creationid="haohang" creationdate="20150807T034153Z">
        <seg>启用使构建逻辑基于依赖树的内容来决定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Enabling this option hides any output when a task is executed unless the build fails.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T161218Z" creationid="msdx" creationdate="20141105T161218Z">
        <seg>启用此选项将在任务执行时隐藏任何输出，除非构建失败。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Enforce sequential ordering of tasks: eg.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T144025Z" creationid="msdx" creationdate="20141110T143645Z">
        <seg>强制任务顺序执行： 如，</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Enter the daemon</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150508T131745Z" creationid="msdx" creationdate="20150508T131745Z">
        <seg>走进守护进程</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Entries in the <bpt i="0" x="0">&lt;c0&gt;</bpt>properties<ept i="0">&lt;/c0&gt;</ept> map can be read and written with the usual Groovy syntax.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150525T232743Z" creationid="haohang" creationdate="20150525T232743Z">
        <seg>在<bpt i="0" x="0">&lt;c0&gt;</bpt>properties<ept i="0">&lt;/c0&gt;</ept> map的条目可以使用常见的 Groovy 语法来读取和写入。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Environment variables</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162141Z" creationid="msdx" creationdate="20141109T162141Z">
        <seg>环境变量</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Error messages</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T070715Z" creationid="msdx" creationdate="20141116T070715Z">
        <seg>错误消息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Especially useful for the classic 'single test method execution' use case.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T023259Z" creationid="Administrator" creationdate="20150428T023259Z">
        <seg>这对“单一测试方法的执行”的经典用例特别有用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Establishes a rule to automatically create a <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>GenerateIvyDescriptor<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> task for each <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>IvyPublication<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept> added (see <bpt i="4" x="4">&lt;a4&gt;</bpt>Section 64.2, “Publications”<ept i="4">&lt;/a4&gt;</ept>).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170211T025807Z" creationid="95" creationdate="20170211T025807Z">
        <seg>建立一个规则来为每个添加的<bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>IvyPublication<ept i="3">&lt;/c3&gt;</ept> <ept i="2">&lt;/a2&gt;</ept>自动创建 <bpt i="0" x="0">&lt;a0&gt;</bpt> <bpt i="1" x="1">&lt;c1&gt;</bpt>GenerateIvyDescriptor<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>任务（见<bpt i="4" x="4">&lt;a4&gt;</bpt>第 64.2 节，“发布”<ept i="4">&lt;/a4&gt;</ept>）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Establishes a rule to automatically create a <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>GenerateMavenPom<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> task for each <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>MavenPublication<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept> added (see <bpt i="4" x="4">&lt;a4&gt;</bpt>Section 65.2, “Publications”<ept i="4">&lt;/a4&gt;</ept>).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170412T152840Z" creationid="95" creationdate="20170412T152840Z">
        <seg>建立一个规则来为每个添加的<bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>MavenPublication<ept i="3">&lt;/c3&gt;</ept> <ept i="2">&lt;/a2&gt;</ept>自动创建 <bpt i="0" x="0">&lt;a0&gt;</bpt> <bpt i="1" x="1">&lt;c1&gt;</bpt>GenerateMavenPom<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>任务（见<bpt i="4" x="4">&lt;a4&gt;</bpt>第 65.2 节，“发布”<ept i="4">&lt;/a4&gt;</ept>）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Establishes a rule to automatically create a <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>PublishToIvyRepository<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> task for the combination of each <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>IvyPublication<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept> added (see <bpt i="4" x="4">&lt;a4&gt;</bpt>Section 64.2, “Publications”<ept i="4">&lt;/a4&gt;</ept>), with each <bpt i="5" x="5">&lt;a5&gt;</bpt><bpt i="6" x="6">&lt;c6&gt;</bpt>IvyArtifactRepository<ept i="6">&lt;/c6&gt;</ept><ept i="5">&lt;/a5&gt;</ept> added (see <bpt i="7" x="7">&lt;a7&gt;</bpt>Section 64.3, “Repositories”<ept i="7">&lt;/a7&gt;</ept>).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170412T153354Z" creationid="95" creationdate="20170211T134011Z">
        <seg>建立一个规则来为添加的每一个<bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>IvyPublication<ept i="3">&lt;/c3&gt;</ept> <ept i="2">&lt;/a2&gt;</ept>（见<bpt i="4" x="4">&lt;a4&gt;</bpt>第 64.2 节，“发布”<ept i="4">&lt;/a4&gt;</ept>）和<bpt i="5" x="5">&lt;a5&gt;</bpt><bpt i="6" x="6">&lt;c6&gt;</bpt>IvyArtifactRepository<ept i="6">&lt;/c6&gt;</ept><ept i="5">&lt;/a5&gt;</ept>（见<bpt i="4" x="4">&lt;a4&gt;</bpt>第 64.3 节，“仓库”<ept i="4">&lt;/a4&gt;</ept>）的组件自动创建 <bpt i="0" x="0">&lt;a0&gt;</bpt> <bpt i="1" x="1">&lt;c1&gt;</bpt>PublishToIvyRepository<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Establishes a rule to automatically create a <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>PublishToMavenLocal<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> task for each <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>MavenPublication<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept> added (see<bpt i="4" x="4">&lt;a4&gt;</bpt>Section 65.2, “Publications”<ept i="4">&lt;/a4&gt;</ept>).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170412T153427Z" creationid="95" creationdate="20170412T153427Z">
        <seg>建立一个规则来为每个添加的<bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>MavenPublication<ept i="3">&lt;/c3&gt;</ept> <ept i="2">&lt;/a2&gt;</ept>自动创建 <bpt i="0" x="0">&lt;a0&gt;</bpt> <bpt i="1" x="1">&lt;c1&gt;</bpt>PublishToMavenLocal<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>任务（见<bpt i="4" x="4">&lt;a4&gt;</bpt>第 65.2 节，“发布”<ept i="4">&lt;/a4&gt;</ept>）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Establishes a rule to automatically create a <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>PublishToMavenRepository<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> task for the combination of each <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>MavenPublication<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept> added (see <bpt i="4" x="4">&lt;a4&gt;</bpt>Section 65.2, “Publications”<ept i="4">&lt;/a4&gt;</ept>), with each <bpt i="5" x="5">&lt;a5&gt;</bpt><bpt i="6" x="6">&lt;c6&gt;</bpt>MavenArtifactRepository<ept i="6">&lt;/c6&gt;</ept><ept i="5">&lt;/a5&gt;</ept> added (see <bpt i="7" x="7">&lt;a7&gt;</bpt>Section 65.3, “Repositories”<ept i="7">&lt;/a7&gt;</ept>).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170412T153235Z" creationid="95" creationdate="20170412T153235Z">
        <seg>建立一个规则，来为添加的每一个<bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>IvyPublication<ept i="3">&lt;/c3&gt;</ept> <ept i="2">&lt;/a2&gt;</ept>（见<bpt i="4" x="4">&lt;a4&gt;</bpt>第 65.2 节，“发布”<ept i="4">&lt;/a4&gt;</ept>）及 <bpt i="5" x="5">&lt;a5&gt;</bpt><bpt i="6" x="6">&lt;c6&gt;</bpt>MavenArtifactRepository<ept i="6">&lt;/c6&gt;</ept><ept i="5">&lt;/a5&gt;</ept> (见 <bpt i="7" x="7">&lt;a7&gt;</bpt>第 65.3 节， “仓库”<ept i="7">&lt;/a7&gt;</ept>）的组合自动创建 <bpt i="0" x="0">&lt;a0&gt;</bpt> <bpt i="1" x="1">&lt;c1&gt;</bpt>PublishToIvyRepository<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Even better, users of the build are guaranteed to use the version of Gradle that the build was designed to work with.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161217T143622Z" creationid="95" creationdate="20161217T143622Z">
        <seg>甚至还有更好的效果，能保证用户在构建中所使用的Gradle版本一致。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Even faster builds: preemptively evaluate projects, so that the model is ready when the user next invokes Gradle.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141117T144240Z" creationid="msdx" creationdate="20141117T144023Z">
        <seg>更快的构建： 预评估项目，这样当用户接下来调用 Gradle 时，模型就准备好了。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Even if your project is using a custom dependency management system or something like an Eclipse .classpath file as master data for dependency management, it is very easy to write a Gradle plugin to use this data in Gradle.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150716T045145Z" creationid="haohang" creationdate="20150716T045130Z">
        <seg>即使你的项目使用一个自定义的依赖管理系统，或者是一些像 Eclipse 作为依赖管理的主数据的 .classpath 文件，那么可以很容易地写一个 Gradle 插件在 Gradle 中使用此数据。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Even more, this declarative language is extensible.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141101T035250Z" creationid="msdx" creationdate="20141101T035250Z">
        <seg>并且，这种声明性的语言是可以扩展的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Eventually this new publishing support will replace publishing via the <bpt i="2" x="2">&lt;c2&gt;</bpt>Upload<ept i="2">&lt;/c2&gt;</ept> task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170211T005820Z" creationid="95" creationdate="20170211T005808Z">
        <seg>最终这个新的发布支持的发布功能将会取代<bpt i="2" x="2">&lt;c2&gt;</bpt>Upload<ept i="2">&lt;/c2&gt;</ept>任务的发布功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Eventually, most configuration is passed to the Sonar code analyzer in the form of key-value pairs known as Sonar properties.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T100238Z" creationid="msdx" creationdate="20150512T092757Z">
        <seg>最终，大多数配置都会以被称为 Sonar 属性的键-值对的形式传递给 Sonar 的代码分析器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Every entry in the metadata cache includes a record of the repository that provided the information as well as a timestamp that can be used for cache expiry.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T045601Z" creationid="95" creationdate="20151129T045443Z">
        <seg>每个元数据缓存中的条目包括了一条存储库中提供的信息，以及可用于缓存到期的时间戳的记录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Every parallel worker exclusively owns a given project while executing a task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T091300Z" creationid="haohang" creationdate="20160726T091300Z">
        <seg>当执行一个任务时，每一个并行的worker都仅拥有一个给定的项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Every project except the root project has a parent project and might have child projects.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T080654Z" creationid="haohang" creationdate="20160519T080621Z">
        <seg>除了根 project，每个project有一个父project，并且可能还有子projects。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Every task has also an <bpt i="0" x="0">&lt;c0&gt;</bpt>enabled<ept i="0">&lt;/c0&gt;</ept> flag which defaults to <bpt i="1" x="1">&lt;c1&gt;</bpt>true<ept i="1">&lt;/c1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T055546Z" creationid="msdx" creationdate="20141111T055546Z">
        <seg>每一项任务有一个默认值为<bpt i="1" x="1">&lt;c1&gt;</bpt>true<ept i="1">&lt;/c1&gt;</ept>的<bpt i="0" x="0">&lt;c0&gt;</bpt>enabled<ept i="0">&lt;/c0&gt;</ept>标记。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example: someTask.dependsOn(":someOtherProject:someOtherTask")</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160522T124727Z" creationid="95" creationdate="20160522T124727Z">
        <seg>示例：someTask.dependsOn(":someOtherProject:someOtherTask")</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Examples include using '<bpt i="0" x="0">&lt;c0&gt;</bpt>groovy<ept i="0">&lt;/c0&gt;</ept>' in place of '<bpt i="1" x="1">&lt;c1&gt;</bpt>groovy-all<ept i="1">&lt;/c1&gt;</ept>', or using '<bpt i="2" x="2">&lt;c2&gt;</bpt>log4j-over-slf4j<ept i="2">&lt;/c2&gt;</ept>' instead of '<bpt i="3" x="3">&lt;c3&gt;</bpt>log4j<ept i="3">&lt;/c3&gt;</ept>'.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T090504Z" creationid="95" creationdate="20151115T090504Z">
        <seg>示例包括，使用“<bpt i="0" x="0">&lt;c0&gt;</bpt>groovy<ept i="0">&lt;/c0&gt;</ept>”来代替“<bpt i="1" x="1">&lt;c1&gt;</bpt>groovy-all<ept i="1">&lt;/c1&gt;</ept>”，或者使用“<bpt i="2" x="2">&lt;c2&gt;</bpt>log4j-over-slf4j<ept i="2">&lt;/c2&gt;</ept>”来代替“<bpt i="3" x="3">&lt;c3&gt;</bpt>log4j<ept i="3">&lt;/c3&gt;</ept>”。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Examples include:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160816T150155Z" creationid="95" creationdate="20160816T150155Z">
        <seg>比如包括：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Examples of different variants include debug vs release binaries, 32-bit vs 64-bit binaries, and binaries produced with different custom preprocessor flags.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160401T064009Z" creationid="haohang" creationdate="20160401T064009Z">
        <seg>这样的例子包括debug及release的二进制文件，32位及64位的二进制文件，以及使用不同的自定义预处理标志生成的二进制文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Examples:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T040227Z" creationid="Administrator" creationdate="20150428T040227Z">
        <seg>示例：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 10.1. War plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T095559Z" creationid="msdx" creationdate="20150503T095559Z">
        <seg>示例 10.1. 使用War 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 10.2. Running web application with Jetty plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T094211Z" creationid="msdx" creationdate="20141030T094211Z">
        <seg>Example 10.2. Running web application with Jetty plugin</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 12.1. Launching the GUI</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T145759Z" creationid="msdx" creationdate="20141105T145759Z">
        <seg>Example 12.1. Launching the GUI</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 13.1. Accessing property of the Project object</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T043128Z" creationid="msdx" creationdate="20141108T043128Z">
        <seg>Example 13.1. 访问 Project 对象的属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 13.2. Using local variables</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T045039Z" creationid="msdx" creationdate="20141108T045039Z">
        <seg>示例 13.2. 使用局部变量</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 13.3. Using extra properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T050705Z" creationid="msdx" creationdate="20141108T050702Z">
        <seg>13.3 例子. 使用额外属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 13.4. Groovy JDK methods</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T061736Z" creationid="msdx" creationdate="20141108T061337Z">
        <seg>示例 13.4. Groovy JDK 的方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 13.5. Property accessors</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T061747Z" creationid="msdx" creationdate="20141108T061730Z">
        <seg>例子 13.5. 属性访问器</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 13.6. Method call without parentheses</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T062519Z" creationid="msdx" creationdate="20141108T062519Z">
        <seg>示例 13.6. 不带括号的方法调用</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 13.7. List and map literals</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T064428Z" creationid="msdx" creationdate="20141108T063118Z">
        <seg>Example 13.7. List and map</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 13.8. Closure as method parameter</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T064414Z" creationid="msdx" creationdate="20141108T064414Z">
        <seg>Example 13.8. 作为方法参数的闭包</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 13.9. Closure delegates</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T065046Z" creationid="msdx" creationdate="20141108T065046Z">
        <seg>Example 13.9. 闭包委托</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 14.1. Directory creation with mkdir</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T073242Z" creationid="msdx" creationdate="20141109T073242Z">
        <seg>示例 14.1.  使用 mkdir 创建目录</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 14.2. Setting properties with a gradle.properties file</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T151047Z" creationid="msdx" creationdate="20141109T151020Z">
        <seg>未例 14.2. 使用 gradle.properties 文件设置属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 14.3. Configuring the project using an external build script</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T152423Z" creationid="msdx" creationdate="20141109T152423Z">
        <seg>示例14.3. 使用外部构建脚本配置项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 14.4. Configuring arbitrary objects</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T152802Z" creationid="msdx" creationdate="20141109T152802Z">
        <seg>示例 14.4. 配置任意对象</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 14.5. Configuring arbitrary objects using a script</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T152957Z" creationid="msdx" creationdate="20141109T152944Z">
        <seg>示例14.5. 使用脚本配置任意对象</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 15.1. Defining tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T021253Z" creationid="msdx" creationdate="20141110T021253Z">
        <seg>示例 15.1. 定义任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 15.10. Defining a task with closure</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T100010Z" creationid="msdx" creationdate="20141110T100010Z">
        <seg>示例 15.10. 使用闭包定义任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 15.11. Adding dependency on task from another project</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T122304Z" creationid="msdx" creationdate="20141110T122247Z">
        <seg>示例 15.11. 从另一个项目的任务上添加依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 15.12. Adding dependency using task object</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T122605Z" creationid="msdx" creationdate="20141110T122605Z">
        <seg>示例 15.12. 使用 task 对象添加依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 15.13. Adding dependency using closure</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T123859Z" creationid="msdx" creationdate="20141110T123859Z">
        <seg>示例 15.13. 使用闭包添加依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 15.14. Adding a 'must run after' task ordering</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T012831Z" creationid="msdx" creationdate="20141111T012831Z">
        <seg>示例 15.14. 添加 '必须在之后运行 ' 的任务排序</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 15.15. Adding a 'should run after' task ordering</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T012912Z" creationid="msdx" creationdate="20141111T012903Z">
        <seg>示例 15.15. 添加 '应该在之后运行 ' 的任务排序</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 15.16. Task ordering does not imply task execution</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T013508Z" creationid="msdx" creationdate="20141111T013508Z">
        <seg>示例 15.16. 任务排序并不意味着任务执行</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 15.17. A 'should run after' task ordering is ignored if it introduces an ordering cycle</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T014951Z" creationid="msdx" creationdate="20141111T014951Z">
        <seg>示例 15.17. 当引入循环时，“应该在其之后运行”的任务排序会被忽略</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 15.18. Adding a description to a task</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T015506Z" creationid="msdx" creationdate="20141111T015506Z">
        <seg>示例 15.18. 向任务添加描述</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 15.19. Overwriting a task</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T015852Z" creationid="msdx" creationdate="20141111T015844Z">
        <seg>示例 15.19. 重写任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 15.2. Defining tasks - using strings for task names</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T022739Z" creationid="msdx" creationdate="20141110T022739Z">
        <seg>示例 15.2. 定义任务 — — 使用字符串作为任务名称</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 15.20. Skipping a task using a predicate</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T021013Z" creationid="msdx" creationdate="20141111T021013Z">
        <seg>示例 15.20. 使用断言跳过一个任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 15.21. Skipping tasks with StopExecutionException</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T054809Z" creationid="msdx" creationdate="20141111T054809Z">
        <seg>示例 15.21. 使用 StopExecutionException 跳过任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 15.22. Enabling and disabling tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T055741Z" creationid="msdx" creationdate="20141111T055741Z">
        <seg>示例 15.22. 启用和禁用任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 15.23. A generator task</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T060310Z" creationid="msdx" creationdate="20141111T060310Z">
        <seg>示例 15.23. 一个生成任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 15.24. Declaring the inputs and outputs of a task</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T061306Z" creationid="msdx" creationdate="20141111T061306Z">
        <seg>示例 15.24. 声明一个任务的输入和输出</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 15.25. Task rule</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T064956Z" creationid="msdx" creationdate="20141111T064956Z">
        <seg>示例 15.25. 任务规则</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 15.26. Dependency on rule based tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T065647Z" creationid="msdx" creationdate="20141111T065647Z">
        <seg>示例 15.26. 基于规则的任务依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 15.27. Adding a task finalizer</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T070152Z" creationid="msdx" creationdate="20141111T065933Z">
        <seg>示例 15.27. 添加一个析构器任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 15.28. Task finalizer for a failing task</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T070326Z" creationid="msdx" creationdate="20141111T070326Z">
        <seg>示例 15.28. 执行失败的任务的任务析构器</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 15.3. Defining tasks with alternative syntax</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T023135Z" creationid="msdx" creationdate="20141110T023135Z">
        <seg>示例 15.3. 使用替代语法定义任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 15.4. Accessing tasks as properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T081018Z" creationid="msdx" creationdate="20141110T080949Z">
        <seg>示例 15.4. 以属性方式访问任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 15.5. Accessing tasks via tasks collection</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T081113Z" creationid="msdx" creationdate="20141110T081023Z">
        <seg>示例 15.5. 通过tasks集合访问任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 15.6. Accessing tasks by path</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T082143Z" creationid="msdx" creationdate="20141110T082143Z">
        <seg>示例 15.6. 通过路径访问任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 15.7. Creating a copy task</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T090220Z" creationid="msdx" creationdate="20141110T090220Z">
        <seg>示例 15.7. 创建一个复制任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 15.8. Configuring a task - various ways</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T092005Z" creationid="msdx" creationdate="20141110T091953Z">
        <seg>示例 15.8. 配置任务的几种方式</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 15.9. Configuring a task - with closure</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T092503Z" creationid="msdx" creationdate="20141110T092503Z">
        <seg>示例 15.9. 配置任务-使用闭包</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 16.1. Locating files</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150330T151013Z" creationid="msdx" creationdate="20141111T160817Z">
        <seg>示例 16.1. 查找文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 16.10. Copying files using the copy task</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T124405Z" creationid="msdx" creationdate="20141113T124405Z">
        <seg>示例 16.10. 使用copy任务复制文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 16.11. Specifying copy task source files and destination directory</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T130946Z" creationid="msdx" creationdate="20141113T130946Z">
        <seg>示例 16.11. 指定复制任务的源文件和目标目录</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 16.12. Selecting the files to copy</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T131120Z" creationid="msdx" creationdate="20141113T131120Z">
        <seg>示例 16.12. 选择要复制的文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 16.13. Copying files using the copy() method without up-to-date check</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T131755Z" creationid="msdx" creationdate="20141113T131755Z">
        <seg>示例 16.13. 使用没有最新状态检查的 copy() 方法复制文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 16.14. Copying files using the copy() method with up-to-date check</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T134158Z" creationid="msdx" creationdate="20141113T134158Z">
        <seg>示例 16.14. 使用有最新状态检查的 copy() 方法复制文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 16.15. Renaming files as they are copied</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T140745Z" creationid="msdx" creationdate="20141113T140710Z">
        <seg>示例 16.15. 重命名复制的文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 16.16. Filtering files as they are copied</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T140841Z" creationid="msdx" creationdate="20141113T140734Z">
        <seg>示例 16.16. 过滤要复制的文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 16.17. Nested copy specs</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T141626Z" creationid="msdx" creationdate="20141113T141626Z">
        <seg>示例 16.17. 嵌套的复制规范</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 16.18. Using the Sync task to copy dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T145436Z" creationid="msdx" creationdate="20141113T145436Z">
        <seg>示例 16.18. 使用同步任务复制依赖项</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 16.19. Creating a ZIP archive</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T145755Z" creationid="msdx" creationdate="20141113T145755Z">
        <seg>示例 16.19. 创建一个 ZIP 文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 16.2. Creating a file collection</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T155005Z" creationid="msdx" creationdate="20141112T155005Z">
        <seg>示例 16.2. 创建一个文件集合</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 16.20. Creation of ZIP archive</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T154733Z" creationid="msdx" creationdate="20141113T154733Z">
        <seg>示例 16.20. 创建 ZIP 文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 16.21. Configuration of archive task - custom archive name</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T155544Z" creationid="msdx" creationdate="20141113T155544Z">
        <seg>示例 16.21. 配置归档任务-自定义归档名称</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 16.22. Configuration of archive task - appendix &amp; classifier</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T155754Z" creationid="msdx" creationdate="20141113T155600Z">
        <seg>示例 16.22. 配置归档任务 - appendix &amp; classifier</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 16.3. Using a file collection</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T155902Z" creationid="msdx" creationdate="20141111T160912Z">
        <seg>示例 16.3. 使用一个文件集合</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 16.4. Implementing a file collection</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T160730Z" creationid="msdx" creationdate="20141112T160730Z">
        <seg>示例 16.4. 实现一个文件集合</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 16.5. Creating a file tree</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T120219Z" creationid="msdx" creationdate="20141113T120219Z">
        <seg>示例 16.5. 创建一个文件树</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 16.6. Using a file tree</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T120355Z" creationid="msdx" creationdate="20141113T120355Z">
        <seg>示例 16.6. 使用文件树</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 16.7. Using an archive as a file tree</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T122843Z" creationid="msdx" creationdate="20141113T122843Z">
        <seg>示例 16.7. 使用归档文件作为文件树</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 16.8. Specifying a set of files</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T123307Z" creationid="msdx" creationdate="20141113T123307Z">
        <seg>示例 16.8. 指定一组文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 16.9. Specifying a set of files</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T123629Z" creationid="msdx" creationdate="20141113T123629Z">
        <seg>示例 16.9. 指定一组文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 17.1. Using an Ant task</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141115T153407Z" creationid="msdx" creationdate="20141115T153407Z">
        <seg>示例 17.1. 使用 Ant 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 17.10. Adding behaviour to an Ant target</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T061044Z" creationid="msdx" creationdate="20141116T061044Z">
        <seg>示例 17.10. 将行为添加到 Ant 目标</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 17.11. Ant target that depends on Gradle task</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T061142Z" creationid="msdx" creationdate="20141116T061142Z">
        <seg>示例 17.11. 依赖于 Gradle 任务的 Ant 目标</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 17.12. Setting an Ant property</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T062002Z" creationid="msdx" creationdate="20141116T062002Z">
        <seg>示例 17.12. Ant 属性设置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 17.13. Getting an Ant property</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T062231Z" creationid="msdx" creationdate="20141116T062218Z">
        <seg>示例 17.13. 获取 Ant 属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 17.14. Setting an Ant reference</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T062647Z" creationid="msdx" creationdate="20141116T062647Z">
        <seg>示例 17.14. Ant 引用设置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 17.15. Getting an Ant reference</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T062719Z" creationid="msdx" creationdate="20141116T062719Z">
        <seg>示例 17.15. 获取 Ant 引用</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 17.2. Passing nested text to an Ant task</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141115T154955Z" creationid="msdx" creationdate="20141115T154711Z">
        <seg>示例 17.2. 向 Ant 任务传入嵌套文本</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 17.3. Passing nested elements to an Ant task</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141115T162753Z" creationid="msdx" creationdate="20141115T162753Z">
        <seg>示例 17.3. 向 Ant 任务传入嵌套元素</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 17.4. Using an Ant type</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T011226Z" creationid="msdx" creationdate="20141116T011226Z">
        <seg>示例 17.4. 使用 Ant 类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 17.5. Using a custom Ant task</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T060205Z" creationid="msdx" creationdate="20141116T060205Z">
        <seg>示例 17.5. 使用自定义 Ant 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 17.6. Declaring the classpath for a custom Ant task</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T060528Z" creationid="msdx" creationdate="20141116T060528Z">
        <seg>示例 17.6. 声明用于自定义 Ant 任务的类路径</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 17.7. Using a custom Ant task and dependency management together</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T060631Z" creationid="msdx" creationdate="20141116T060621Z">
        <seg>示例 17.7. 同时使用自定义 Ant 任务和依赖管理</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 17.8. Importing an Ant build</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T060912Z" creationid="msdx" creationdate="20141116T060912Z">
        <seg>示例 17.8. 导入 Ant 构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 17.9. Task that depends on Ant target</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T061008Z" creationid="msdx" creationdate="20141116T061008Z">
        <seg>示例 17.9. 依赖于 Ant 目标的任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 18.1. Using stdout to write log messages</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T122537Z" creationid="msdx" creationdate="20141116T122537Z">
        <seg>示例18.1. 使用标准输出写日志</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 18.2. Writing your own log messages</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T125913Z" creationid="msdx" creationdate="20141116T125913Z">
        <seg>示例 18.2. 编写自己的日志消息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 18.3. Using SLF4J to write log messages</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T130533Z" creationid="msdx" creationdate="20141116T130533Z">
        <seg>示例 18.3. 使用 SLF4J 编写日志消息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 18.4. Configuring standard output capture</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T150300Z" creationid="msdx" creationdate="20141116T150300Z">
        <seg>示例 18.4. 配置标准输出捕获</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 18.5. Configuring standard output capture for a task</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T150933Z" creationid="msdx" creationdate="20141116T150933Z">
        <seg>示例 18.5. 对任务配置标准输出捕获</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 18.6. Customizing what Gradle logs</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T154814Z" creationid="msdx" creationdate="20141116T154814Z">
        <seg>示例 18.6 的例子. 自定义 Gradle 日志</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 20.1. Configuring an HTTP proxy</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141121T141740Z" creationid="msdx" creationdate="20141121T141740Z">
        <seg>示例 20.1. 配置 HTTP 代理服务器</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 20.2. Configuring an HTTPS proxy</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141121T141803Z" creationid="msdx" creationdate="20141121T141803Z">
        <seg>示例 20.2. 配置 HTTPS 代理服务器</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 21.1. Applying a plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141122T162030Z" creationid="msdx" creationdate="20141122T162030Z">
        <seg>示例 21.1. 应用插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 21.2. Applying a plugin by type</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141122T162339Z" creationid="msdx" creationdate="20141122T162339Z">
        <seg>示例 21.2. 通过类型应用插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 21.3. Applying a plugin by type</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141122T162533Z" creationid="msdx" creationdate="20141122T162533Z">
        <seg>示例 21.3. 通过类型应用插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 21.4. Tasks added by a plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141123T151128Z" creationid="msdx" creationdate="20141123T151128Z">
        <seg>示例 21.4. 通过插件添加任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 21.5. Changing plugin defaults</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141123T154207Z" creationid="msdx" creationdate="20141123T154207Z">
        <seg>示例 21.5. 更改插件的默认设置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 21.6. Plugin convention object</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141124T073952Z" creationid="msdx" creationdate="20141124T073952Z">
        <seg>示例 21.6. 插件中的约定对象</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 23.1. Using the Java plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T073724Z" creationid="Administrator" creationdate="20150425T073724Z">
        <seg>示例 23.1. 使用 Java 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 23.10. Running tests in a source set</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T133541Z" creationid="Administrator" creationdate="20150427T133541Z">
        <seg>示例 23.10. 运行源集里的测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 23.11. Filtering tests in the build script</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T023951Z" creationid="Administrator" creationdate="20150428T023951Z">
        <seg>示例 23.11. 在构建脚本中过滤测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 23.12. JUnit Categories</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T082901Z" creationid="msdx" creationdate="20150428T082901Z">
        <seg>示例 23.12. JUnit 类别</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 23.13. Grouping TestNG tests</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083148Z" creationid="msdx" creationdate="20150428T083148Z">
        <seg>示例 23.13. 对TestNG 测试分组</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 23.14. Creating a unit test report for subprojects</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T142808Z" creationid="msdx" creationdate="20150428T142808Z">
        <seg>示例 23.14. 为多个子项目创建一个单元测试报告</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 23.15. Customization of MANIFEST.MF</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T145223Z" creationid="msdx" creationdate="20150428T145223Z">
        <seg>示例 23.15. 自定义的MANIFEST.MF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 23.16. Creating a manifest object.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T145341Z" creationid="msdx" creationdate="20150428T145341Z">
        <seg>示例 23.16. 创建一个manifest 对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 23.17. Separate MANIFEST.MF for a particular archive</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T145615Z" creationid="msdx" creationdate="20150428T145615Z">
        <seg>示例 23.17. 指定archive的单独MANIFEST.MF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 23.18. Separate MANIFEST.MF for a particular archive</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T151507Z" creationid="msdx" creationdate="20150428T151507Z">
        <seg>示例 23.18. 指定archive的单独 MANIFEST.MF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 23.2. Custom Java source layout</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T083815Z" creationid="Administrator" creationdate="20150426T083815Z">
        <seg>示例 23.2. 自定义Java 源代码布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 23.3. Accessing a source set</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T050722Z" creationid="Administrator" creationdate="20150427T050722Z">
        <seg>示例 23.3. 访问源集</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 23.4. Configuring the source directories of a source set</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T051101Z" creationid="Administrator" creationdate="20150427T051101Z">
        <seg>示例 23.4. 配置源集的源代码目录</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 23.5. Defining a source set</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T053341Z" creationid="Administrator" creationdate="20150427T053341Z">
        <seg>示例 23.5. 定义一个源集</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 23.6. Defining source set dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T133011Z" creationid="Administrator" creationdate="20150427T133011Z">
        <seg>示例 23.6. 定义源集依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 23.7. Compiling a source set</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T133224Z" creationid="Administrator" creationdate="20150427T133224Z">
        <seg>示例 23.7. 编译源集</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 23.8. Assembling a JAR for a source set</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T133423Z" creationid="Administrator" creationdate="20150427T133423Z">
        <seg>示例 23.8. 为一个源集装配一个JAR文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 23.9. Generating the Javadoc for a source set</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T133446Z" creationid="Administrator" creationdate="20150427T133446Z">
        <seg>示例 23.9. 为一个源集生成 Javadoc：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 24.1. Using the Groovy plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T071317Z" creationid="msdx" creationdate="20150429T071317Z">
        <seg>示例 24.1. 使用 Groovy 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 24.2. Custom Groovy source layout</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T075353Z" creationid="msdx" creationdate="20150429T075353Z">
        <seg>示例 24.2. 自定义 Groovy 自定义源文件布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 24.3. Configuration of Groovy dependency</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T075939Z" creationid="msdx" creationdate="20150429T075939Z">
        <seg>示例 24.3. Groovy 的依赖配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 24.4. Configuration of Groovy test dependency</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T080015Z" creationid="msdx" creationdate="20150429T080015Z">
        <seg>示例 24.4. 配置Groovy 测试依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 24.5. Configuration of bundled Groovy dependency</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T080608Z" creationid="msdx" creationdate="20150429T080608Z">
        <seg>示例 24.5. 配置捆绑的 Groovy 依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 24.6. Configuration of Groovy file dependency</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T080909Z" creationid="msdx" creationdate="20150429T080909Z">
        <seg>示例 24.6. 配置Groovy 文件依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 25.1. Using the Scala plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T145324Z" creationid="msdx" creationdate="20150429T145324Z">
        <seg>示例 25.1. 使用 Scala 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 25.2. Custom Scala source layout</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T152728Z" creationid="msdx" creationdate="20150429T152728Z">
        <seg>示例 24.2. 自定义 Scala 源文件布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 25.3. Declaring a Scala dependency for production code</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T152944Z" creationid="msdx" creationdate="20150429T152944Z">
        <seg>示例 25.3. 为production 代码定义一个Scala 依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 25.4. Declaring a Scala dependency for test code</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T153035Z" creationid="msdx" creationdate="20150429T153035Z">
        <seg>示例 25.4. 为 test 代码定义一个Scala 依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 25.5. Enabling the Fast Scala Compiler</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150430T155213Z" creationid="msdx" creationdate="20150430T155213Z">
        <seg>示例 25.5. 启用 Fast Scala Compiler</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 25.6. Adjusting memory settings</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150430T160053Z" creationid="msdx" creationdate="20150430T160043Z">
        <seg>示例 25.6. 调整内存设置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 25.7. Activating the Zinc based compiler</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T154307Z" creationid="msdx" creationdate="20150501T154307Z">
        <seg>示例 25.7. 激活基于 Zinc 编译器</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 26.1. Using the War plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T085859Z" creationid="msdx" creationdate="20150503T085859Z">
        <seg>示例 26.1. 使用War 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 26.2. Customization of war plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T093816Z" creationid="msdx" creationdate="20150503T093816Z">
        <seg>示例 26.2. war 插件的自定义</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 27.1. Using the Ear plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T094445Z" creationid="msdx" creationdate="20150503T094445Z">
        <seg>示例 27.1. 使用 Ear 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 27.2. Customization of ear plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T142848Z" creationid="msdx" creationdate="20150504T142848Z">
        <seg>示例 26.2. ear 插件的自定义</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 28.1. Using the Jetty plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T150151Z" creationid="msdx" creationdate="20150504T150151Z">
        <seg>示例 28.1. 使用 Jetty 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 29.1. Using the Checkstyle plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T151750Z" creationid="msdx" creationdate="20150504T151750Z">
        <seg>示例 29.1. 使用 Checkstyle 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 30.1. Using the CodeNarc plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T133100Z" creationid="msdx" creationdate="20150505T133100Z">
        <seg>示例 30.1. 使用 CodeNarc 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 31.1. Using the FindBugs plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T133621Z" creationid="msdx" creationdate="20150505T133621Z">
        <seg>示例 31.1. 使用 FindBugs 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 32.1. Using the JDepend plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T134207Z" creationid="msdx" creationdate="20150505T134207Z">
        <seg>示例 32.1. 使用 JDepend 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 33.1. Using the PMD plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T135524Z" creationid="msdx" creationdate="20150505T135524Z">
        <seg>示例 33.1. 使用 PMD 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 34.1. Applying the JaCoCo plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T130227Z" creationid="msdx" creationdate="20150506T130227Z">
        <seg>示例 34.1. 应用 JaCoCo 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 34.2. Configuring JaCoCo plugin settings</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T131553Z" creationid="msdx" creationdate="20150506T131553Z">
        <seg>示例 34.2. 配置 JaCoCo 插件设置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 34.3. Configuring test task</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T131959Z" creationid="msdx" creationdate="20150506T131959Z">
        <seg>示例 34.3. 配置测试任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 34.4. Configuring test task</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T132253Z" creationid="msdx" creationdate="20150506T132253Z">
        <seg>示例 34.4. 配置测试任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 34.5. Using application plugin to generate code coverage data</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T135602Z" creationid="msdx" creationdate="20150506T135602Z">
        <seg>示例 34.5. 使用 application 插件来生成代码覆盖率数据</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 34.6. Coverage reports generated by applicationCodeCoverageReport</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T135807Z" creationid="msdx" creationdate="20150506T135807Z">
        <seg>示例 34.6. 由 applicationCodeCoverageReport 生成的覆盖率报告</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 35.1. Applying the Sonar plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150510T143421Z" creationid="msdx" creationdate="20150510T143421Z">
        <seg>示例 35.1. 配置使用 Sonar 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 35.10. Analyzing languages other than Java</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T092636Z" creationid="msdx" creationdate="20150512T092636Z">
        <seg>示例 35.10. 分析非 Java 语言</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 35.11. Setting custom global properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T101337Z" creationid="msdx" creationdate="20150512T101337Z">
        <seg>示例 35.11. 设置自定义的全局属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 35.12. Setting custom project properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T101426Z" creationid="msdx" creationdate="20150512T101426Z">
        <seg>示例 35.12. 设置自定义的项目属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 35.13. Implementing custom command line properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T054035Z" creationid="msdx" creationdate="20150513T054035Z">
        <seg>示例 35.13. 实现自定义命令行属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 35.2. Configuring Sonar connection settings</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150510T143648Z" creationid="msdx" creationdate="20150510T143648Z">
        <seg>示例 35.2. 配置 Sonar 连接设置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 35.3. Configuring Sonar project settings</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150510T143855Z" creationid="msdx" creationdate="20150510T143855Z">
        <seg>示例 35.3. 配置 Sonar project 设置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 35.4. Global configuration in a multi-project build</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T091237Z" creationid="msdx" creationdate="20150512T091237Z">
        <seg>示例 35.4. 在多项目构建中的全局配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 35.5. Common project configuration in a multi-project build</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T091354Z" creationid="msdx" creationdate="20150512T091354Z">
        <seg>示例 35.5. 多项目构建中的共同项目配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 35.6. Individual project configuration in a multi-project build</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T091737Z" creationid="msdx" creationdate="20150512T091737Z">
        <seg>示例 35.6. 多项目构建中的单独项目配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 35.7. Configuring the language to be analyzed</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T092002Z" creationid="msdx" creationdate="20150512T092002Z">
        <seg>示例 35.7. 配置语言分析</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 35.8. Using property syntax</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T092112Z" creationid="msdx" creationdate="20150512T092112Z">
        <seg>示例 35.8. 使用属性语法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 35.9. Analyzing custom source sets</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T092527Z" creationid="msdx" creationdate="20150512T092527Z">
        <seg>示例 35.9. 分析自定义的Source Sets</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 36.1. Applying the Sonar Runner plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T060744Z" creationid="msdx" creationdate="20150513T060744Z">
        <seg>示例 36.1. 配置使用 Sonar Runner 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 36.2. Configuring Sonar connection settings</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T063355Z" creationid="msdx" creationdate="20150513T063355Z">
        <seg>示例 36.2. 配置 Sonar 连接设置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 36.3. Global configuration settings</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150519T124401Z" creationid="msdx" creationdate="20150519T124401Z">
        <seg>示例 36.3. 全局配置设置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 36.4. Shared configuration settings</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150519T124456Z" creationid="msdx" creationdate="20150519T124456Z">
        <seg>示例 36.4. 共享的配置设置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 36.5. Individual configuration settings</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150519T124644Z" creationid="msdx" creationdate="20150519T124644Z">
        <seg>示例 36.5. 个别配置设置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 36.6. Skipping analysis of a project</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150519T124736Z" creationid="msdx" creationdate="20150519T124736Z">
        <seg>示例 36.6. 跳过项目分析</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 36.7. Analyzing custom source sets</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150520T143103Z" creationid="msdx" creationdate="20150520T143103Z">
        <seg>示例 36.7. 分析自定义的Source Sets</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 36.8. Analyzing languages other than Java</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150520T143131Z" creationid="msdx" creationdate="20150520T143131Z">
        <seg>示例 36.8. 分析非 Java 语言</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 37.1. Using the OSGi plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150526T004303Z" creationid="haohang" creationdate="20150526T004303Z">
        <seg>示例 37.1. 使用 OSGi 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 37.2. Configuration of OSGi MANIFEST.MF file</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150526T064436Z" creationid="haohang" creationdate="20150526T064436Z">
        <seg>示例 37.2. OSGi MANIFEST.MF 文件配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 38.1. Using the Eclipse plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T004131Z" creationid="haohang" creationdate="20150603T004131Z">
        <seg>示例 38.1. 使用 Eclipse 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 38.2. Partial Overwrite for Classpath</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T064924Z" creationid="haohang" creationdate="20150625T064842Z">
        <seg>示例 38.2. 部分覆盖 Classpath</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 38.3. Partial Overwrite for Project</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T065701Z" creationid="haohang" creationdate="20150625T065701Z">
        <seg>示例 38.3. 部分覆盖项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 38.4. Export Dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T065953Z" creationid="haohang" creationdate="20150625T065953Z">
        <seg>示例 38.4. 导出依赖项</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 38.5. Customizing the XML</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T070448Z" creationid="haohang" creationdate="20150625T070448Z">
        <seg>示例 38.5. 自定义 XML</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 39.1. Using the IDEA plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T071739Z" creationid="haohang" creationdate="20150625T071739Z">
        <seg>示例 39.1. 使用 IDEA 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 39.2. Partial Overwrite for Module</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T073919Z" creationid="haohang" creationdate="20150625T073919Z">
        <seg>示例 39.2. 部分覆盖模块</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 39.3. Partial Overwrite for Project</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T074116Z" creationid="haohang" creationdate="20150625T074116Z">
        <seg>示例 39.3. 部分覆盖项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 39.4. Export Dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T074611Z" creationid="haohang" creationdate="20150625T074611Z">
        <seg>示例 39.4. 导出依赖项</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 39.5. Customizing the XML</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T074623Z" creationid="haohang" creationdate="20150625T074623Z">
        <seg>示例 39.5. 自定义 XML</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 40.1. Using the ANTLR plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T094905Z" creationid="haohang" creationdate="20150625T094905Z">
        <seg>示例 40.1. 使用 ANTLR 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 40.2. Declare ANTLR version</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T095738Z" creationid="haohang" creationdate="20150625T095738Z">
        <seg>示例 40.2. 声明 ANTLR 版本</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 42.1. Using the announce plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T063407Z" creationid="haohang" creationdate="20150628T063022Z">
        <seg>示例 42.1. 使用 announce 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 42.2. Configure the announce plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T063403Z" creationid="haohang" creationdate="20150628T063115Z">
        <seg>示例 42.2. 配置 announce 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 42.3. Using the announce plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T063533Z" creationid="haohang" creationdate="20150628T063533Z">
        <seg>示例 42.3. 使用 announce 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 43.1. Using the build announcements plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T091628Z" creationid="haohang" creationdate="20150628T091628Z">
        <seg>示例 43.1. 使用构建公告插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 43.2. Using the build announcements plugin from an init script</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T091800Z" creationid="haohang" creationdate="20150628T091800Z">
        <seg>示例 43.2. 在 init 脚本中使用构建通知插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 44.1. Using the distribution plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150701T025858Z" creationid="haohang" creationdate="20150701T025858Z">
        <seg>示例 44.1. 使用分发插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 44.2. Adding extra distributions</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150701T031248Z" creationid="haohang" creationdate="20150701T031248Z">
        <seg>示例 44.2. 添加额外的分发</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 44.3. Configuring the main distribution</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150701T032437Z" creationid="haohang" creationdate="20150701T032437Z">
        <seg>示例 44.3. 配置 main distribution</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 45.1. Using the application plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150702T103847Z" creationid="haohang" creationdate="20150702T103847Z">
        <seg>示例 45.1. 使用应用程序插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 45.2. Configure the application main class</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150702T103934Z" creationid="haohang" creationdate="20150702T103934Z">
        <seg>示例 45.2. 配置应用程序的主类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 45.3. Configure default JVM settings</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150702T104913Z" creationid="haohang" creationdate="20150702T104913Z">
        <seg>示例 45.3. 配置默认 JVM 设置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 45.4. Include output from other tasks in the application distribution</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150703T100421Z" creationid="haohang" creationdate="20150703T100421Z">
        <seg>示例 45.4. 在应用程序的分发中包含其他任务的输出文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 45.5. Automatically creating files for distribution</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150703T100700Z" creationid="haohang" creationdate="20150703T100700Z">
        <seg>示例 45.5. 自动创建用于分发的文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 46.1. Using the java library distribution plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150705T084550Z" creationid="haohang" creationdate="20150705T084550Z">
        <seg>示例 46.1. 使用 Java 库分发插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 46.2. Configure the distribution name</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150705T084601Z" creationid="haohang" creationdate="20150705T084601Z">
        <seg>示例 46.2. 配置分发的名称</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 46.3. Include files in the distribution</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T070500Z" creationid="haohang" creationdate="20150707T070444Z">
        <seg>示例 46.3. 在分发包中包含文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 49.1. Using the Build Dashboard plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150713T095211Z" creationid="haohang" creationdate="20150713T095211Z">
        <seg>示例 49.1 使用 Build Dashboard 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 50.1. Definition of a configuration</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T075858Z" creationid="haohang" creationdate="20150722T075821Z">
        <seg>示例 50.1. 配置的定义</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 50.10. File dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T094145Z" creationid="haohang" creationdate="20150801T094145Z">
        <seg>示例 50.10. 文件依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 50.11. Generated file dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T094451Z" creationid="haohang" creationdate="20150801T094451Z">
        <seg>示例 50.11. 生成文件依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 50.12. Gradle API dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T094657Z" creationid="haohang" creationdate="20150801T094657Z">
        <seg>示例 50.12. Gradle API 依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 50.13. Gradle's Groovy dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T094842Z" creationid="haohang" creationdate="20150801T094842Z">
        <seg>示例 50.13. Gradle 的 Groovy 依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 50.14. Excluding transitive dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T094941Z" creationid="haohang" creationdate="20150801T094941Z">
        <seg>示例 50.14. 排除传递依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 50.15. Optional attributes of dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T103548Z" creationid="haohang" creationdate="20150801T103548Z">
        <seg>示例 50.15. 依赖的可选属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 50.16. Collections and arrays of dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T103700Z" creationid="haohang" creationdate="20150801T103700Z">
        <seg>示例 50.16. 依赖的集合和数组</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 50.17. Dependency configurations</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T032717Z" creationid="haohang" creationdate="20150807T032717Z">
        <seg>示例 50.17. 依赖配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 50.18. Dependency configurations for project</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T032800Z" creationid="haohang" creationdate="20150807T032754Z">
        <seg>示例 50.18. 项目的依赖配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 50.19. Configuration.copy</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T034238Z" creationid="haohang" creationdate="20150807T034238Z">
        <seg>示例 50.19. Configuration.copy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 50.2. Accessing a configuration</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T075909Z" creationid="haohang" creationdate="20150722T075909Z">
        <seg>示例 50.2. 访问配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 50.20. Accessing declared dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T034353Z" creationid="haohang" creationdate="20150807T034353Z">
        <seg>示例 50.20. 访问声明依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 50.21. Configuration.files</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T034606Z" creationid="haohang" creationdate="20150807T034606Z">
        <seg>示例 50.21. Configuration.files</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 50.22. Configuration.files with spec</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T034741Z" creationid="haohang" creationdate="20150807T034741Z">
        <seg>示例 50.22. 指定的 Configuration.files</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 50.23. Configuration.copy</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T040600Z" creationid="haohang" creationdate="20150807T040600Z">
        <seg>示例 50.23. Configuration.copy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 50.24. Configuration.copy vs. Configuration.files</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T041226Z" creationid="haohang" creationdate="20150807T041226Z">
        <seg>示例 50.24. Configuration.copy 与 Configuration.files</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 50.25. Adding central Maven repository</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T095900Z" creationid="haohang" creationdate="20150807T095900Z">
        <seg>示例 50.25. 添加 Maven 中央仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 50.26. Adding Bintray's JCenter Maven repository</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T100535Z" creationid="haohang" creationdate="20150807T100535Z">
        <seg>示例 50.26. 添加 Bintray Jcenter Maven 仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 50.27. Adding the local Maven cache as a repository</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T101037Z" creationid="haohang" creationdate="20150807T101037Z">
        <seg>示例 50.27. 添加本地 Maven 缓存作为仓库：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 50.28. Adding custom Maven repository</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150909T052925Z" creationid="haohang" creationdate="20150909T052925Z">
        <seg>示例 50.28. 添加一个自定义的 Maven 仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 50.29. Adding additional Maven repositories for JAR files</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150909T053107Z" creationid="haohang" creationdate="20150909T053107Z">
        <seg>示例 50.29. 为 JAR 文件添加额外的 Maven 仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 50.3. Configuration of a configuration</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T075929Z" creationid="haohang" creationdate="20150722T075929Z">
        <seg>示例 50.3. 配置一个配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 50.30. Accessing password protected Maven repository</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150909T053438Z" creationid="haohang" creationdate="20150909T053438Z">
        <seg>示例 50.30. 访问密码保护的 Maven 仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 50.31. Flat repository resolver</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150910T012110Z" creationid="haohang" creationdate="20150910T012110Z">
        <seg>示例 50.31. 平面仓库的解决</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 50.32. Ivy repository</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T110439Z" creationid="95" creationdate="20151006T110439Z">
        <seg>示例 50.32. Ivy存储库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 50.33. Ivy repository with pattern layout</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T110627Z" creationid="95" creationdate="20151006T110627Z">
        <seg>示例 50.33. Ivy 仓库模式布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 50.34. Ivy repository with Maven compatible layout</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T111051Z" creationid="95" creationdate="20151006T111051Z">
        <seg>示例50.34. 使用 Maven 兼容布局的 Ivy 仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 50.35. Ivy repository with custom patterns</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T111343Z" creationid="95" creationdate="20151006T111343Z">
        <seg>示例 50.35. 自定义模式的 Ivy 仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 50.36. Ivy repository</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T133230Z" creationid="95" creationdate="20151006T133230Z">
        <seg>示例 50.36. Ivy存储库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 50.37. Accessing a repository</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T133418Z" creationid="95" creationdate="20151006T133418Z">
        <seg>示例 50.37. 访问一个仓库：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 50.38. Configuration of a repository</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T133448Z" creationid="95" creationdate="20151006T133448Z">
        <seg>示例 50.38. 仓库配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 50.39. Definition of a custom repository</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T134736Z" creationid="95" creationdate="20151006T134705Z">
        <seg>示例 50.39. 自定义仓库的定义</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 50.4. Module dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T102829Z" creationid="haohang" creationdate="20150722T102829Z">
        <seg>示例 50.4. 模块依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 50.40. Forcing consistent version for a group of libraries</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T061530Z" creationid="95" creationdate="20151115T061530Z">
        <seg>示例 50.40. 强制一个组的所有库使用一致的版本</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 50.41. Using a custom versioning scheme</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T070651Z" creationid="95" creationdate="20151115T070651Z">
        <seg>示例 50.41. 使用自定义的版本方案</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 50.42. Blacklisting a version with a replacement</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T085759Z" creationid="95" creationdate="20151115T085759Z">
        <seg>示例 50.42. 黑名单替换特定版本</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 50.43. Changing dependency group and/or name at the resolution</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T090639Z" creationid="95" creationdate="20151115T090639Z">
        <seg>示例 50.43. 在解析中更改依赖组及名称</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 50.44. Enabling dynamic resolve mode</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T091449Z" creationid="95" creationdate="20151115T091449Z">
        <seg>示例 50.44. 启用动态解析模式</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 50.45. 'Latest' version selector</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T041616Z" creationid="95" creationdate="20151129T041531Z">
        <seg>示例 50.45，“Latest”版本选择器</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 50.46. Custom status scheme</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T041817Z" creationid="95" creationdate="20151129T041817Z">
        <seg>示例 50.46. 自定义状态模式</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 50.47. Dynamic version cache control</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T154959Z" creationid="95" creationdate="20151129T154948Z">
        <seg>示例 50.47. 动态版本缓存控制</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 50.48. Changing module cache control</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151130T032620Z" creationid="haohang" creationdate="20151130T032620Z">
        <seg>示例 50.48. 变化模块的缓存控制</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 50.5. Artifact only notation</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150731T034554Z" creationid="haohang" creationdate="20150731T034554Z">
        <seg>示例 505. Artifact only notation</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 50.6. Dependency with classifier</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150731T100858Z" creationid="haohang" creationdate="20150731T100858Z">
        <seg>示例 50.6. 使用 classifier 的依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 50.7. Iterating over a configuration</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T091157Z" creationid="haohang" creationdate="20150801T091157Z">
        <seg>示例 50.7. 遍历一个配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 50.8. Client module dependencies - transitive dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T091419Z" creationid="haohang" creationdate="20150801T091419Z">
        <seg>示例 50.8. 客户端模块依赖 - 传递依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 50.9. Project dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T092518Z" creationid="haohang" creationdate="20150801T092518Z">
        <seg>50.9. 项目依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 51.1. Defining an artifact using an archive task</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151226T090853Z" creationid="95" creationdate="20151226T090853Z">
        <seg>示例 51.1. 使用archive 任务定义一个构件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 51.2. Defining an artifact using a file</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151226T091050Z" creationid="95" creationdate="20151226T091050Z">
        <seg>示例 51.2. 使用文件定义构件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 51.3. Customizing an artifact</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151226T091156Z" creationid="95" creationdate="20151226T091156Z">
        <seg>示例 51.3. 自定义构件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 51.4. Map syntax for defining an artifact using a file</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151226T091503Z" creationid="95" creationdate="20151226T091437Z">
        <seg>示例 51.4. 基于map的语法定义一个文件构件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 51.5. Configuration of the upload task</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151226T092016Z" creationid="95" creationdate="20151226T092016Z">
        <seg>示例 51.5. 上传任务的配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 52.1. Using the Maven plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151228T151903Z" creationid="95" creationdate="20151228T151903Z">
        <seg>示例 52.1. 使用 Maven 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 52.10. Accessing a mapping configuration</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T145326Z" creationid="95" creationdate="20160106T145326Z">
        <seg>示例 52.10. 访问映射配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 52.2. Creating a stand alone pom.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160104T152809Z" creationid="95" creationdate="20160104T152809Z">
        <seg>示例 52.2. 创建一个单独的 pom。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 52.3. Upload of file to remote Maven repository</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160104T154205Z" creationid="95" creationdate="20160104T154205Z">
        <seg>示例 52.3. 上传文件到远程 Maven 仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 52.4. Upload of file via SSH</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T134847Z" creationid="95" creationdate="20160105T134847Z">
        <seg>示例 52.4. 通过 SSH 上传文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 52.5. Customization of pom</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T142711Z" creationid="95" creationdate="20160106T142711Z">
        <seg>示例 52.5. pom定制</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 52.6. Builder style customization of pom</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T143104Z" creationid="95" creationdate="20160106T143104Z">
        <seg>示例 52.6. pom 的生成器类型自定义</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 52.7. Modifying auto-generated content</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T143204Z" creationid="95" creationdate="20160106T143204Z">
        <seg>示例 52.7. 修改自动生成的内容</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 52.8. Customization of Maven installer</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T143448Z" creationid="95" creationdate="20160106T143448Z">
        <seg>示例 52.8. Maven installer 的自定义</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 52.9. Generation of multiple poms</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T144206Z" creationid="95" creationdate="20160106T144206Z">
        <seg>示例 52.9. 多个 poms 的生成</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 53.1. Using the Signing plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160108T151111Z" creationid="95" creationdate="20160108T151111Z">
        <seg>示例 53.1. 使用Signing插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 53.2. Signing a configuration</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160109T072230Z" creationid="95" creationdate="20160109T072230Z">
        <seg>53.3.2. 签名一个配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 53.3. Signing a configuration output</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160109T072533Z" creationid="95" creationdate="20160109T072533Z">
        <seg>示例 53.3. 签署一个配置的输出</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 53.4. Signing a task</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160109T073058Z" creationid="95" creationdate="20160109T073058Z">
        <seg>53.4. 签名一个任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 53.5. Signing a task output</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160126T140528Z" creationid="95" creationdate="20160126T140528Z">
        <seg>示例 53.5. 签名一个任务的输出</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 53.6. Conditional signing</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160126T141408Z" creationid="95" creationdate="20160126T141408Z">
        <seg>53.6. 有条件的签名</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 53.7. Signing a POM for deployment</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160126T145256Z" creationid="95" creationdate="20160126T145256Z">
        <seg>示例 53.7. 为部署签名 POM</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 54.1. Defining a library component</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160219T065328Z" creationid="haohang" creationdate="20160219T065316Z">
        <seg>示例 54.1. 定义一个库组件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 54.10. Settings that apply to all binaries</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160324T151752Z" creationid="95" creationdate="20160324T151752Z">
        <seg>示例 54.10. 应用于所有二进制文件的设置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 54.11. Settings that apply to all shared libraries</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160324T152304Z" creationid="95" creationdate="20160324T152304Z">
        <seg>示例 54.11. 应用于所有共享库的设置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 54.12. Settings that apply to all binaries produced for the 'main' executable component</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160324T152620Z" creationid="95" creationdate="20160324T152620Z">
        <seg>示例 54.12. 应用于“main”可执行组件所产生的所有二进制文件的设置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 54.13. Settings that apply only to shared libraries produced for the 'main' library component</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160324T153105Z" creationid="95" creationdate="20160324T153105Z">
        <seg>示例 54.13. 仅应用于“main”library组件所产生的共享库的设置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 54.14. The 'windows-resources' plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160324T153249Z" creationid="95" creationdate="20160324T153249Z">
        <seg>示例 54.14. 'windows-resources' 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 54.15. Configuring the location of Windows resource sources</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160325T020926Z" creationid="haohang" creationdate="20160325T020926Z">
        <seg>示例 54.15. 配置 Windows 资源源文件的位置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 54.16. Building a resource-only dll</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160325T023106Z" creationid="haohang" creationdate="20160325T023106Z">
        <seg>示例 54.16. 构建一个纯资源 dll</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 54.17. Providing a library dependency to the source set</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160325T032908Z" creationid="haohang" creationdate="20160325T032908Z">
        <seg>示例 54.17. 向source set提供库依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 54.18. Providing a library dependency to the binary</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160325T033130Z" creationid="haohang" creationdate="20160325T033130Z">
        <seg>示例 54.18. 向二进制文件提供库依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 54.19. Declaring project dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160325T033426Z" creationid="haohang" creationdate="20160325T033426Z">
        <seg>示例 54.19. 定义项目依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 54.2. Defining executable components</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160219T065424Z" creationid="haohang" creationdate="20160219T065424Z">
        <seg>示例 54.2. 定义可执行组件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 54.20. Defining build types</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160401T090255Z" creationid="haohang" creationdate="20160401T090255Z">
        <seg>示例 54.20. 定义构建类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 54.21. Configuring debug binaries</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160401T090609Z" creationid="haohang" creationdate="20160401T090609Z">
        <seg>示例 54.21. 配置debug二进制文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 54.22. Defining platforms</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160405T034019Z" creationid="haohang" creationdate="20160405T034019Z">
        <seg>示例 54.22. 定义platform</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 54.23. Defining flavors</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T081109Z" creationid="haohang" creationdate="20160408T081109Z">
        <seg>示例 54.23. 定义flavors</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 54.24. Targeting a component at particular platforms</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T082929Z" creationid="haohang" creationdate="20160408T082929Z">
        <seg>示例 54.24. 针对一个组件的特定平台</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 54.25. Building all possible variants</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T084718Z" creationid="haohang" creationdate="20160408T084718Z">
        <seg>示例 54.25. 构建所有可能的变种</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 54.26. Defining tool chains</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T091220Z" creationid="haohang" creationdate="20160408T091220Z">
        <seg>示例 54.26. 定义工具链</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 54.27. Registering CUnit tests</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160504T150233Z" creationid="95" creationdate="20160504T150233Z">
        <seg>示例 54.27. 注册 CUnit 测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 54.28. Registering CUnit tests</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160504T151035Z" creationid="95" creationdate="20160504T151035Z">
        <seg>示例 54.28. 注册 CUnit 测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 54.29. Running CUnit tests</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160504T151331Z" creationid="95" creationdate="20160504T151331Z">
        <seg>示例 54.29. 运行 CUnit 测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 54.3. The 'cpp' plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160219T082843Z" creationid="haohang" creationdate="20160219T082843Z">
        <seg>示例 54.3. cpp 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 54.4. C++ source set</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160225T085514Z" creationid="haohang" creationdate="20160225T085514Z">
        <seg>示例 54.4. C++ 源代码集</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 54.5. The 'c' plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160225T090442Z" creationid="haohang" creationdate="20160225T090442Z">
        <seg>示例 54.5. “C” 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 54.6. C source set</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160225T090543Z" creationid="haohang" creationdate="20160225T090543Z">
        <seg>示例 54.4. C 源代码集</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 54.7. The 'assembler' plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160313T053811Z" creationid="95" creationdate="20160313T053811Z">
        <seg>示例 54.3. assembler 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 54.8. The 'objective-c' plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160319T115137Z" creationid="95" creationdate="20160319T115137Z">
        <seg>示例 54.8. “objective-c”插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 54.9. The 'objective-cpp' plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160319T115442Z" creationid="95" creationdate="20160319T115442Z">
        <seg>示例 54.9. “objective-cpp” 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 55.1. Single project build</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T025258Z" creationid="haohang" creationdate="20160519T025258Z">
        <seg>示例 55.1. 单项目构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 55.2. Hierarchical layout</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T041327Z" creationid="haohang" creationdate="20160519T041327Z">
        <seg>示例 55.2. 分层布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 55.3. Flat layout</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T041857Z" creationid="haohang" creationdate="20160519T041857Z">
        <seg>示例 55.3. 平面布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 55.4. Modification of elements of the project tree</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T070348Z" creationid="haohang" creationdate="20160519T070348Z">
        <seg>示例 55.4. 修改项目树中的元素</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 55.5. Modification of elements of the project tree</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T070458Z" creationid="haohang" creationdate="20160519T070458Z">
        <seg>示例 55.5. 修改项目树中的元素</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 55.6. Adding of test task to each project which has certain property set</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T125501Z" creationid="95" creationdate="20160521T125413Z">
        <seg>示例 55.6. 向每个包含某些属性设置的project 添加测试任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 55.7. Notifications</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T132215Z" creationid="95" creationdate="20160521T132215Z">
        <seg>示例 55.7. 通知</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 55.8. Setting of certain property to all tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T135053Z" creationid="95" creationdate="20160521T135053Z">
        <seg>示例 55.8. 对所有的任务设置一些属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 55.9. Logging of start and end of each task execution</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T140112Z" creationid="95" creationdate="20160521T140112Z">
        <seg>示例55.9. 在每个任务执行的开始及结束时打印日志</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 56.1. Multi-project tree - water &amp; bluewhale projects</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160522T125255Z" creationid="95" creationdate="20160522T125255Z">
        <seg>示例 56.1. 多项目树- water &amp; bluewhale 项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 56.10. Running build from subproject</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160530T152024Z" creationid="95" creationdate="20160530T152024Z">
        <seg>示例 56.10. 从子项目的运行构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 56.11. Evaluation and execution of projects</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160715T075944Z" creationid="haohang" creationdate="20160715T075944Z">
        <seg>示例 56.11. 项目的评估和执行</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 56.12. Evaluation and execution of projects</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160715T080046Z" creationid="haohang" creationdate="20160715T080046Z">
        <seg>示例 56.12. 项目的评估和执行</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 56.13. Running tasks by their absolute path</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160715T091707Z" creationid="haohang" creationdate="20160715T091707Z">
        <seg>示例56.13. 按绝对路径运行任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 56.14. Dependencies and execution order</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T062253Z" creationid="haohang" creationdate="20160718T062253Z">
        <seg>示例 56.14. 依赖和执行顺序</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 56.15. Dependencies and execution order</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T070211Z" creationid="haohang" creationdate="20160718T070211Z">
        <seg>示例 56.15. 依赖和执行顺序</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 56.16. Dependencies and execution order</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T070719Z" creationid="haohang" creationdate="20160718T070719Z">
        <seg>示例 56.16. 依赖和执行顺序</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 56.17. Declaring dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T071015Z" creationid="haohang" creationdate="20160718T071015Z">
        <seg>示例 56.17. 声明依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 56.18. Declaring dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T071747Z" creationid="haohang" creationdate="20160718T071747Z">
        <seg>示例 56.18. 声明依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 56.19. Cross project task dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T072045Z" creationid="haohang" creationdate="20160718T072045Z">
        <seg>56.19. 跨项目任务依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 56.2. Build script of water (parent) project</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160522T125905Z" creationid="95" creationdate="20160522T125905Z">
        <seg>示例 56.2. water（父）项目的构建脚本</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 56.20. Configuration time dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T072755Z" creationid="haohang" creationdate="20160718T072755Z">
        <seg>示例 56.20. 配置时依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 56.21. Configuration time dependencies - evaluationDependsOn</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T074958Z" creationid="haohang" creationdate="20160718T074958Z">
        <seg>示例 56.21. 配置时依赖——evaluationDependsOn</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 56.22. Configuration time dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T085918Z" creationid="haohang" creationdate="20160718T085918Z">
        <seg>示例 56.22. 配置时依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 56.23. Dependencies - real life example - crossproject configuration</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160722T091201Z" creationid="haohang" creationdate="20160722T091201Z">
        <seg>示例 56.23. 依赖——真实生活中的例子——跨项目配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 56.24. Project lib dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T083500Z" creationid="haohang" creationdate="20160726T083500Z">
        <seg>56.24. 项目库依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 56.25. Project lib dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T083728Z" creationid="haohang" creationdate="20160726T083728Z">
        <seg>示例 56.25. 项目库依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 56.26. Fine grained control over dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T084511Z" creationid="haohang" creationdate="20160726T084511Z">
        <seg>示例 56.26. 对依赖的细粒度的控制</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 56.27. Build and Test Single Project</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T095304Z" creationid="haohang" creationdate="20160726T095304Z">
        <seg>示例 56.27. 构建和测试单个项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 56.28. Partial Build and Test Single Project</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160727T051916Z" creationid="haohang" creationdate="20160727T051916Z">
        <seg>示例 56.28. 部分构建和测试单个项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 56.29. Build and Test Depended On Projects</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160727T052655Z" creationid="haohang" creationdate="20160727T052259Z">
        <seg>示例 56.29. 构建和测试被依赖的项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 56.3. Multi-project tree - water, bluewhale &amp; krill projects</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160526T155319Z" creationid="95" creationdate="20160526T155319Z">
        <seg>示例 56.3. 多项目树- water &amp; bluewhale &amp; krill 项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 56.30. Build and Test Dependent Projects</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160727T052705Z" creationid="haohang" creationdate="20160727T052625Z">
        <seg>示例 56.30. 构建和测试依赖它的项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 56.4. Water project build script</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160527T161028Z" creationid="95" creationdate="20160527T161028Z">
        <seg>示例 56.4. Water项目构建脚本</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 56.5. Defining common behaviour of all projects and subprojects</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160527T162314Z" creationid="95" creationdate="20160527T162256Z">
        <seg>示例 56.5. 定义所有项目以及子项目的共同行为</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 56.6. Defining specific behaviour for particular project</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160527T163154Z" creationid="95" creationdate="20160527T162856Z">
        <seg>示例 56.6. 为特定项目定义特定行为</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 56.7. Defining specific behaviour for project krill</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160527T163233Z" creationid="95" creationdate="20160527T163233Z">
        <seg>示例 56.7. 为krill项目定义特定的行为</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 56.8. Adding custom behaviour to some projects (filtered by project name)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160527T163808Z" creationid="95" creationdate="20160527T163808Z">
        <seg>示例 56.8. 将自定义行为添加到某些项目中（按项目名称筛选）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 56.9. Adding custom behaviour to some projects (filtered by project properties)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160530T144356Z" creationid="95" creationdate="20160530T144356Z">
        <seg>示例 56.9. 将自定义行为添加到某些项目中（按项目属性筛选）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 57.1. Defining a custom task</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T145359Z" creationid="95" creationdate="20160814T145359Z">
        <seg>示例 57.1. 定义一个自定义任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 57.10. Running the incremental task with unchanged inputs</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160817T150250Z" creationid="95" creationdate="20160817T145929Z">
        <seg>示例 57.10. 在输入不变时运行增量任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 57.11. Running the incremental task with updated input files</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160817T150255Z" creationid="95" creationdate="20160817T150203Z">
        <seg>示例 57.11. 有输入文件更新时运行增量任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 57.12. Running the incremental task with an input file removed</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160817T150238Z" creationid="95" creationdate="20160817T150238Z">
        <seg>示例 57.12. 当一个输入文件被删除时运行增量任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 57.13. Running the incremental task with an output file removed</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160817T150445Z" creationid="95" creationdate="20160817T150445Z">
        <seg>示例 57.13. 当一个输出文件被删除时运行增量任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 57.14. Running the incremental task with an input property changed</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160817T150809Z" creationid="95" creationdate="20160817T150809Z">
        <seg>示例 57.14. 当一个输入属性被更改时运行增量任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 57.2. A hello world task</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T145738Z" creationid="95" creationdate="20160814T145738Z">
        <seg>示例 57.2. 一个hello world 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 57.3. A customizable hello world task</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T151530Z" creationid="95" creationdate="20160814T151530Z">
        <seg>示例 57.3. 一个自定义的hello world任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 57.4. A build for a custom task</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160815T145032Z" creationid="95" creationdate="20160815T145032Z">
        <seg>示例 57.4. 一个自定义任务的构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 57.5. A custom task</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160815T145217Z" creationid="95" creationdate="20160815T145217Z">
        <seg>示例 57.5. 一个自定义任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 57.6. Using a custom task in another project</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160815T145926Z" creationid="95" creationdate="20160815T145926Z">
        <seg>示例 57.6. 在另一个项目中使用一个自定义任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 57.7. Testing a custom task</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160815T150123Z" creationid="95" creationdate="20160815T150123Z">
        <seg>示例 57.7. 测试一个自定义任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 57.8. Defining an incremental task action</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160816T144957Z" creationid="95" creationdate="20160816T144957Z">
        <seg>示例 57.8. 定义增量任务操作</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 57.9. Running the incremental task for the first time</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160817T145701Z" creationid="95" creationdate="20160817T145701Z">
        <seg>示例 57.9. 第一次运行增量任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 58.1. A custom plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T123816Z" creationid="95" creationdate="20160820T123816Z">
        <seg>示例 58.1. 自定义插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 58.2. A custom plugin extension</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T130727Z" creationid="95" creationdate="20160820T130727Z">
        <seg>示例 58.2. 自定义插件扩展</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 58.3. A custom plugin with configuration closure</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T131353Z" creationid="95" creationdate="20160820T131353Z">
        <seg>示例 58.3. 使用配置闭包的自定义插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 58.4. Evaluating file properties lazily</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T132259Z" creationid="95" creationdate="20160820T132259Z">
        <seg>示例 58.4. 文件属性的惰性评估</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 58.5. A build for a custom plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160828T132836Z" creationid="95" creationdate="20160828T132836Z">
        <seg>示例 58.5. 自定义插件的构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 58.6. Wiring for a custom plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160828T133450Z" creationid="95" creationdate="20160828T133450Z">
        <seg>示例 58.6. 编写一个自定义插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 58.7. Using a custom plugin in another project</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T014547Z" creationid="95" creationdate="20161211T014547Z">
        <seg>示例 58.7. 在另一个项目中使用一个自定义插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 58.8. Testing a custom plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T014925Z" creationid="95" creationdate="20161211T014925Z">
        <seg>示例 58.8. 测试自定义插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 58.9. Managing domain objects</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T015219Z" creationid="95" creationdate="20161211T015219Z">
        <seg>示例 58.9. 管理域对象</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 59.1. Using inherited properties and methods</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T044942Z" creationid="95" creationdate="20161211T044942Z">
        <seg>示例59.1. 使用继承的属性和方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 59.2. Using injected properties and methods</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T051002Z" creationid="95" creationdate="20161211T051002Z">
        <seg>示例59.2. 使用注入的属性和方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 59.3. Custom buildSrc build script</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T052836Z" creationid="95" creationdate="20161211T052836Z">
        <seg>示例 59.3. 自定义buildSrc构建脚本</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 59.4. Adding subprojects to the root buildSrc project</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161212T152641Z" creationid="95" creationdate="20161212T152641Z">
        <seg>示例 59.4. 将子项目添加到根 buildSrc 项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 59.5. Running another build from a build</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161212T153534Z" creationid="95" creationdate="20161212T153534Z">
        <seg>示例 59.5. 从一个构建运行另一个构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 59.6. Declaring external dependencies for the build script</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161212T153752Z" creationid="95" creationdate="20161212T153752Z">
        <seg>示例 59.6. 声明构建脚本的外部依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 59.7. A build script with external dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161212T154651Z" creationid="95" creationdate="20161212T154651Z">
        <seg>示例 59.7. 具有外部依赖的构建脚本</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 59.8. Ant optional dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161212T155059Z" creationid="95" creationdate="20161212T155059Z">
        <seg>示例 59.8. Ant 的可选依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 60.1. Using init script to perform extra configuration before projects are evaluated</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161215T143415Z" creationid="95" creationdate="20161215T143415Z">
        <seg>示例 60.1. 使用 init 脚本在项目评估之前执行额外的配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 60.2. Declaring external dependencies for an init script</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161215T143743Z" creationid="95" creationdate="20161215T143743Z">
        <seg>示例 60.2. 声明构建脚本的外部依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 60.3. An init script with external dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161215T143958Z" creationid="95" creationdate="20161215T143958Z">
        <seg>示例 60.3. 具有外部依赖的init 脚本</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 60.4. Using plugins in init scripts</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161215T144229Z" creationid="95" creationdate="20161215T144229Z">
        <seg>示例 60.4. 在 init 脚本中使用插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 61.1. Wrapper task</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161217T144026Z" creationid="95" creationdate="20161217T144026Z">
        <seg>示例 61.1。 Wrapper任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 61.2. Wrapper generated files</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161217T160532Z" creationid="95" creationdate="20161217T160532Z">
        <seg>示例 61.2. 包装器生成的文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 64.1. Applying the “ivy-publish” plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170211T024757Z" creationid="95" creationdate="20170211T024757Z">
        <seg>示例 64.1. 应用“ivy-publish”插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 64.10. Generating the Ivy module descriptor file</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T144004Z" creationid="95" creationdate="20170330T144004Z">
        <seg>示例 64.10. 生成Ivy模块描述符文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 64.11. Publishing a java module</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T145144Z" creationid="95" creationdate="20170330T145144Z">
        <seg>示例 64.11. 发布一个 java 模块</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 64.12. Example generated ivy.xml</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T154217Z" creationid="95" creationdate="20170330T154217Z">
        <seg>示例 64.12. 生成 ivy.xml的示例</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 64.2. Publishing a java module to Ivy</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170211T140816Z" creationid="95" creationdate="20170211T140816Z">
        <seg>示例 64.2. 将一个 java 模块发布到 Ivy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 64.3. Publishing additional artifact to Ivy</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20170216T072604Z" creationid="haohang" creationdate="20170216T072604Z">
        <seg>示例64.3. 发布额外的构件到Ivy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 64.4. customizing the publication identity</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20170217T083151Z" creationid="haohang" creationdate="20170217T083058Z">
        <seg>示例 64.4. 自定义发布标识</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 64.5. Customizing the module descriptor file</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170304T031118Z" creationid="95" creationdate="20170304T031118Z">
        <seg>示例 64.5. 自定义模块描述符文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 64.6. Publishing multiple modules from a single project</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170304T033022Z" creationid="95" creationdate="20170304T033022Z">
        <seg>示例 64.6. 从一个单一的项目发布多个模块</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 64.7. Declaring repositories to publish to</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170304T033930Z" creationid="95" creationdate="20170304T033930Z">
        <seg>示例 64.7. 声明用于发布的仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 64.8. Choosing a particular publication to publish</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170326T075058Z" creationid="95" creationdate="20170326T075058Z">
        <seg>示例 64.8. 选择要发布的特定出版物</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 64.9. Publishing all publications via the “publish” lifecycle task</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170326T080510Z" creationid="95" creationdate="20170326T080510Z">
        <seg>示例 64.9. 通过“publish”生命周期任务发布所有出版物</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 65.1. Applying the 'maven-publish' plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170412T152701Z" creationid="95" creationdate="20170412T152701Z">
        <seg>示例 65.1. 应用“maven-publish”插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 65.10. Generate a POM file without publishing</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T064804Z" creationid="95" creationdate="20170416T064804Z">
        <seg>示例 65.10. 不发布的情况下生成POM文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 65.2. Adding a MavenPublication for a java component</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170412T154509Z" creationid="95" creationdate="20170412T154427Z">
        <seg>示例 65.2. 为一个java组件添加一个MavenPublication</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 65.3. Adding additional artifact to a MavenPublication</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170412T154828Z" creationid="95" creationdate="20170412T154828Z">
        <seg>示例65.3. 向MavenPublication 增加额外的构件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 65.4. customizing the publication identity</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T032456Z" creationid="95" creationdate="20170416T032456Z">
        <seg>示例 65.4. 自定义发布标识</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 65.5. Modifying the POM file</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T033105Z" creationid="95" creationdate="20170416T033105Z">
        <seg>示例 65.5. 修改 POM 文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 65.6. Publishing multiple modules from a single project</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T062603Z" creationid="95" creationdate="20170416T062603Z">
        <seg>示例 65.6. 从一个单一的项目发布多个模块</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 65.7. Declaring repositories to publish to</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T062625Z" creationid="95" creationdate="20170416T062625Z">
        <seg>示例 65.7. 声明用于发布的仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 65.8. Publishing a project to a Maven repository</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T063214Z" creationid="95" creationdate="20170416T063214Z">
        <seg>示例 65.8. 发布项目到 Maven 仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 65.9. Publish a project to the Maven local repository</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T064114Z" creationid="95" creationdate="20170416T064114Z">
        <seg>示例 65.9. 发布项目到 Maven 本地仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 9.1. Groovy plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T161510Z" creationid="msdx" creationdate="20141105T161510Z">
        <seg>Example 9.1. Groovy plugin</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 9.2. Dependency on Groovy 2.2.0</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104651Z" creationid="msdx" creationdate="20150428T104651Z">
        <seg>示例 9.2. 依赖 Groovy 2.2.0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Example 9.3. Groovy example - complete build file</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T065502Z" creationid="msdx" creationdate="20141030T065502Z">
        <seg>Example 9.3. Groovy example - complete build file</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Except where noted in the<bpt i="0" x="0">&lt;a0&gt;</bpt>API documentation<ept i="0">&lt;/a0&gt;</ept>, the Zinc based compiler supports exactly the same configuration options as the Ant based compiler.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T154353Z" creationid="msdx" creationdate="20150501T154353Z">
        <seg>除非在<bpt i="0" x="0">&lt;a0&gt;</bpt>API 文档<ept i="0">&lt;/a0&gt;</ept>中另有说明，否则基于 Zinc 的据编译器支持与基于 Ant 的编译器完全相同的配置选项。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Excluding tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163845Z" creationid="msdx" creationdate="20141109T163845Z">
        <seg>排除任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Executable</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160219T072227Z" creationid="haohang" creationdate="20160219T072227Z">
        <seg>Executable</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ExecutableBinary</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160219T072231Z" creationid="haohang" creationdate="20160219T072231Z">
        <seg>ExecutableBinary</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Execute <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle sonarRunner<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> and wait until the build has completed, then open the web page indicated at the bottom of the Sonar Runner output.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T061704Z" creationid="msdx" creationdate="20150513T061704Z">
        <seg>执行<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle sonarRunner<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>并等待构建完成，然后打开 Sonar Runner 输出结果的底部所指示的网页。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Execute another Gradle build from the current build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T044658Z" creationid="95" creationdate="20161211T044658Z">
        <seg>从当前的构建中执行另一个Gradle构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Execute ignoring dependencies.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T153834Z" creationid="msdx" creationdate="20141105T153834Z">
        <seg>执行忽略依赖关系。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Executing <bpt i="4" x="4">&lt;c4&gt;</bpt>gradle publish<ept i="4">&lt;/c4&gt;</ept> builds the POM file and all of the artifacts to be published, and transfers them to the repository.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T063545Z" creationid="95" creationdate="20170416T063545Z">
        <seg>执行<bpt i="4" x="4">&lt;c4&gt;</bpt>gradle publish<ept i="4">&lt;/c4&gt;</ept>会构建 POM 文件和所有用于发布的构件，并将它们传输到仓库中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Executing <bpt i="4" x="4">&lt;c4&gt;</bpt>gradle publishToMavenLocal<ept i="4">&lt;/c4&gt;</ept> builds the POM file and all of the artifacts to be published, and 'installs' them into the local Maven repository.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T064330Z" creationid="95" creationdate="20170416T064243Z">
        <seg>执行<bpt i="4" x="4">&lt;c4&gt;</bpt>gradle publishToMavenLocal<ept i="4">&lt;/c4&gt;</ept>会构建 POM 文件和所有要发布的构件，并将它们“installs”到本地Maven仓库中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Executing Sonar Runner in a separate process</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065735Z" creationid="95" creationdate="20170416T065735Z">
        <seg>在一个单独的进程中执行 Sonar Runner</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Executing multiple tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163830Z" creationid="msdx" creationdate="20141109T163830Z">
        <seg>执行多个任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Execution</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T024236Z" creationid="haohang" creationdate="20160519T024236Z">
        <seg>执行</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Execution rules for multi-project builds</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070602Z" creationid="95" creationdate="20170416T070602Z">
        <seg>多项目构建的执行规则</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Existing module descriptors are ignored.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150731T035205Z" creationid="haohang" creationdate="20150731T035205Z">
        <seg>现有的模块描述符将被忽略。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Extends</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T084120Z" creationid="Administrator" creationdate="20150426T084120Z">
        <seg>继承自</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Extensive configuration defaults</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T060000Z" creationid="msdx" creationdate="20150513T060000Z">
        <seg>提供了广泛范围的默认配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>External dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163619Z" creationid="msdx" creationdate="20141109T163619Z">
        <seg>外部依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>External dependencies for the build script</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070842Z" creationid="95" creationdate="20170416T070842Z">
        <seg>构建脚本的外部依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>External dependencies for the init script</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070930Z" creationid="95" creationdate="20170416T070930Z">
        <seg>init 脚本的外部依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>External module dependencies are the most common dependencies.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T102805Z" creationid="haohang" creationdate="20150722T102805Z">
        <seg>外部模块依赖是最常见的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>External module dependency</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T080059Z" creationid="haohang" creationdate="20150722T080043Z">
        <seg>外部模块依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>External tools that wish to listen to Gradle events might find this useful.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161214T142932Z" creationid="95" creationdate="20161214T142932Z">
        <seg>这对一些希望能够监听Gradle事件的外部工具会很有用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Extra properties can be added, read and set via the owning object's <bpt i="0" x="0">&lt;c0&gt;</bpt>ext<ept i="0">&lt;/c0&gt;</ept> property.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T050609Z" creationid="msdx" creationdate="20141108T050609Z">
        <seg>额外的属性可以通过所属对象的<bpt i="0" x="0">&lt;c0&gt;</bpt>ext<ept i="0">&lt;/c0&gt;</ept>属性进行添加，读取和设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Extra properties on a parent project are visible from subprojects.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T055330Z" creationid="msdx" creationdate="20141108T055330Z">
        <seg>父项目上的额外属性，在子项目中也可以访问。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Extra task properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163249Z" creationid="msdx" creationdate="20141109T163249Z">
        <seg>额外任务属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>FAILED</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T140142Z" creationid="95" creationdate="20160521T140142Z">
        <seg>FAILED</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Fast Scala Compiler</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T132018Z" creationid="msdx" creationdate="20150509T132018Z">
        <seg>Fast Scala Compiler</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Fast and accurate bash tab completion.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141117T151236Z" creationid="msdx" creationdate="20141117T151236Z">
        <seg>快速、 准确的 bash 的 tab 键完成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Favorites</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T031122Z" creationid="msdx" creationdate="20141108T031122Z">
        <seg> 收藏夹</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Features</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T161957Z" creationid="msdx" creationdate="20141109T161957Z">
        <seg>特性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Figure 12.1. GUI Task Tree</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T150123Z" creationid="msdx" creationdate="20141105T150123Z">
        <seg>Figure 12.1. GUI Task Tree</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Figure 12.2. GUI Setup</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T160656Z" creationid="msdx" creationdate="20141105T160656Z">
        <seg>Figure 12.2. GUI Setup</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Figure 23.1. Java plugin - tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T082919Z" creationid="Administrator" creationdate="20150426T082919Z">
        <seg>图23.1. Java插件 ​​- 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Figure 23.2. Java plugin - dependency configurations</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T084640Z" creationid="Administrator" creationdate="20150426T084640Z">
        <seg>图23.2. Java插件 ​​- 依赖配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Figure 24.1. Groovy plugin - tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T071732Z" creationid="msdx" creationdate="20150429T071714Z">
        <seg>图 24.1. Groovy 插件 - tasks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Figure 25.1. Scala plugin - tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T152441Z" creationid="msdx" creationdate="20150429T152441Z">
        <seg>图 25.1. Scala 插件-任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Figure 26.1. War plugin - tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T090049Z" creationid="msdx" creationdate="20150503T090049Z">
        <seg>图 26.1. War 插件 - tasks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Figure 28.1. Jetty plugin - tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T150529Z" creationid="msdx" creationdate="20150504T150512Z">
        <seg>图 28.1. Jetty 插件 - tasks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Figure 59.1. Default buildSrc build script</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T051613Z" creationid="95" creationdate="20161211T051613Z">
        <seg>图 59.1. 默认的buildSrc构建脚本</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>File</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T044352Z" creationid="msdx" creationdate="20141108T044352Z">
        <seg>File</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>File (read-only)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151228T152722Z" creationid="95" creationdate="20151228T152722Z">
        <seg>File (read-only)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>File collections</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150330T141138Z" creationid="Administrator" creationdate="20150330T141138Z">
        <seg>文件集合</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>File dependencies allow you to directly add a set of files to a configuration, without first adding them to a repository.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T092827Z" creationid="haohang" creationdate="20150801T092827Z">
        <seg>文件依赖允许你直接将一组文件添加到配置中，而不用先将它们添加到存储库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>File dependencies are not included in the published dependency descriptor for your project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T094217Z" creationid="haohang" creationdate="20150801T094217Z">
        <seg>文件依赖项不会包含在你的项目的发布的依赖描述中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>File dependency</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T080431Z" creationid="haohang" creationdate="20150722T080431Z">
        <seg>文件依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>File explodedDist = mkdir(<bpt i="5" x="5">&lt;s5&gt;</bpt>"$buildDir/explodedDist"<ept i="5">&lt;/s5&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160722T091248Z" creationid="haohang" creationdate="20160722T091248Z">
        <seg>File explodedDist = mkdir(<bpt i="5" x="5">&lt;s5&gt;</bpt>"$buildDir/explodedDist"<ept i="5">&lt;/s5&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>File getDestination() {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T132301Z" creationid="95" creationdate="20160820T132301Z">
        <seg>File getDestination() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>File sourceFile</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T015247Z" creationid="95" creationdate="20161211T015247Z">
        <seg>File sourceFile</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>File srcDir</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T160731Z" creationid="msdx" creationdate="20141112T160731Z">
        <seg>File srcDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>File srcDir = getSrcDir(project)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T044948Z" creationid="95" creationdate="20161211T044948Z">
        <seg>File srcDir = getSrcDir(project)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>File srcDir = srcDir()</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T051035Z" creationid="95" creationdate="20161211T051035Z">
        <seg>File srcDir = srcDir()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>File trees</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150330T141141Z" creationid="Administrator" creationdate="20150330T141141Z">
        <seg>文件树</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>File-level test selection does not support many interesting scenarios that are possible with test-level filtering.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T022213Z" creationid="Administrator" creationdate="20150428T022213Z">
        <seg>file-level 的测试选择不支持的很多有趣的情况，都可以用 test-level 过滤来做到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>FileCollection</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T160944Z" creationid="msdx" creationdate="20141112T160944Z">
        <seg>FileCollection</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>FileCollection collection = files(<bpt i="0" x="0">&lt;s0&gt;</bpt>'src/file1.txt'<ept i="0">&lt;/s0&gt;</ept>, <bpt i="1" x="1">&lt;s1&gt;</bpt>new<ept i="1">&lt;/s1&gt;</ept> File(<bpt i="2" x="2">&lt;s2&gt;</bpt>'src/file2.txt'<ept i="2">&lt;/s2&gt;</ept>), [<bpt i="3" x="3">&lt;s3&gt;</bpt>'src/file3.txt'<ept i="3">&lt;/s3&gt;</ept>, <bpt i="4" x="4">&lt;s4&gt;</bpt>'src/file4.txt'<ept i="4">&lt;/s4&gt;</ept>])</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T155529Z" creationid="msdx" creationdate="20141112T155529Z">
        <seg>FileCollection collection = files(<bpt i="0" x="0">&lt;s0&gt;</bpt>'src/file1.txt'<ept i="0">&lt;/s0&gt;</ept>, <bpt i="1" x="1">&lt;s1&gt;</bpt>new<ept i="1">&lt;/s1&gt;</ept> File(<bpt i="2" x="2">&lt;s2&gt;</bpt>'src/file2.txt'<ept i="2">&lt;/s2&gt;</ept>), [<bpt i="3" x="3">&lt;s3&gt;</bpt>'src/file3.txt'<ept i="3">&lt;/s3&gt;</ept>, <bpt i="4" x="4">&lt;s4&gt;</bpt>'src/file4.txt'<ept i="4">&lt;/s4&gt;</ept>])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Filtering at the level of specific test methods; executing a single test method</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T022430Z" creationid="Administrator" creationdate="20150428T022411Z">
        <seg>在指定的测试的方法级别上进行过滤；执行单个测试方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Filtering based on custom annotations (future)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T022542Z" creationid="Administrator" creationdate="20150428T022542Z">
        <seg>基于自定义注解（以后实现）进行过滤</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Filtering based on some custom runtime rule, e.g. particular value of a system property or some static state (future)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T022805Z" creationid="Administrator" creationdate="20150428T022805Z">
        <seg>基于一些自定义的运行时的规则进行过滤，例如某个系统属性或一些静态的特定值（以后实现）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Filtering based on test hierarchy; executing all tests that extend ceratain base class (future)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T022711Z" creationid="Administrator" creationdate="20150428T022639Z">
        <seg>基于测试层次结构进行过滤 ；执行所有继承了某一基类（以后实现） 的测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Filtering is a different mechanism than test class inclusion / exclusion that will be described in the next few paragraphs (<bpt i="0" x="0">&lt;c0&gt;</bpt>-Dtest.single<ept i="0">&lt;/c0&gt;</ept>, <bpt i="1" x="1">&lt;c1&gt;</bpt>test.include<ept i="1">&lt;/c1&gt;</ept> and friends).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T021943Z" creationid="Administrator" creationdate="20150428T021943Z">
        <seg>过滤，相对于测试类的包含或排除，是一个不同的机制。它将在接下来的段落中进行描述（<bpt i="0" x="0">&lt;c0&gt;</bpt>-Dtest.single<ept i="0">&lt;/c0&gt;</ept>， <bpt i="1" x="1">&lt;c1&gt;</bpt>test.include<ept i="1">&lt;/c1&gt;</ept>和friends）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Finalizer task will be executed even if the finalized task fails.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T070251Z" creationid="msdx" creationdate="20141111T070251Z">
        <seg>即使最终的任务执行失败，析构器任务也会被执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Finalizer tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150330T141106Z" creationid="Administrator" creationdate="20150330T141106Z">
        <seg>析构器任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Finalizer tasks are automatically added to the task graph when the finalized task is scheduled to run.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T070143Z" creationid="msdx" creationdate="20141111T065913Z">
        <seg>当最终的任务准备运行时，析构器任务会自动地添加到任务图中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Finalizer tasks are useful in situations where build creates a resource that has to be cleaned up regardless of the build failing or succeeding.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T122856Z" creationid="msdx" creationdate="20141111T122856Z">
        <seg>在不管构建成功或是失败，都必须清理创建的资源的情况下，析构认为是很有用的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Finalizers tasks are an <bpt i="0" x="0">&lt;e0&gt;</bpt>incubating<ept i="0">&lt;/e0&gt;</ept> feature (see <bpt i="1" x="1">&lt;a1&gt;</bpt>Section C.1.2, “Incubating”<ept i="1">&lt;/a1&gt;</ept>).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T070134Z" creationid="msdx" creationdate="20141111T065820Z">
        <seg>析构器任务是一个 <bpt i="0" x="0">&lt;e0&gt;</bpt>孵化中<ept i="0">&lt;/e0&gt;</ept> 的功能 (请参阅 <bpt i="1" x="1">&lt;a1&gt;</bpt> C.1.2 章节， “Incubating”<ept i="1">&lt;/a1&gt;</ept>)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Finally, send announcements with the <bpt i="0" x="0">&lt;c0&gt;</bpt>announce<ept i="0">&lt;/c0&gt;</ept> method:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T063526Z" creationid="haohang" creationdate="20150628T063526Z">
        <seg>最后，使用<bpt i="0" x="0">&lt;c0&gt;</bpt>announce<ept i="0">&lt;/c0&gt;</ept>方法发送公告：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Finally, since build scripts are Groovy scripts, you can always execute an Ant build as an external process.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141114T141947Z" creationid="msdx" creationdate="20141114T141947Z">
        <seg>最后，由于构建脚本是 Groovy 脚本，所以您始终可以作为一个外部进程来执行 Ant 构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Finally, you could move your tasks across to your build file, or replace them with some of Gradle's plugins.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141114T142802Z" creationid="msdx" creationdate="20141114T142802Z">
        <seg>最后，您可以将整个任务移动到您的构建文件，或者把它们替换为一些 Gradle 插件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Finally, you may want to build and test everything in all projects.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160727T052730Z" creationid="haohang" creationdate="20160727T052730Z">
        <seg>最后，你可能想要构建和测试所有项目的所有内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>FindBugs</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T133648Z" creationid="msdx" creationdate="20150505T133648Z">
        <seg>findbugs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Fine-tuning the dependency resolution process</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070203Z" creationid="95" creationdate="20170416T070203Z">
        <seg>微调依赖解析过程</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>First <bpt i="8" x="8">&lt;c8&gt;</bpt>shared<ept i="8">&lt;/c8&gt;</ept> is built and then <bpt i="9" x="9">&lt;c9&gt;</bpt>api<ept i="9">&lt;/c9&gt;</ept> is built.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T084225Z" creationid="haohang" creationdate="20160726T084225Z">
        <seg>首先会先构建<bpt i="8" x="8">&lt;c8&gt;</bpt>shared<ept i="8">&lt;/c8&gt;</ept>，然后构建<bpt i="9" x="9">&lt;c9&gt;</bpt>api<ept i="9">&lt;/c9&gt;</ept> 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>First of all you can put your build logic directly in the action closure of a task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T042836Z" creationid="95" creationdate="20161211T042836Z">
        <seg>首先，你可以把你的构建逻辑直接放到一个任务的action闭包里。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>First, consider the <bpt i="0" x="0">&lt;c0&gt;</bpt>IncrementalReverseTask<ept i="0">&lt;/c0&gt;</ept> executed against a set of inputs for the first time.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160817T145635Z" creationid="95" creationdate="20160817T145635Z">
        <seg>首先，考虑到 <bpt i="0" x="0">&lt;c0&gt;</bpt>IncrementalReverseTask<ept i="0">&lt;/c0&gt;</ept>第一次针对一组输入执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>First, the <bpt i="2" x="2">&lt;c2&gt;</bpt>copy()<ept i="2">&lt;/c2&gt;</ept> is not incremental (see <bpt i="3" x="3">&lt;a3&gt;</bpt>Section 15.9, “Skipping tasks that are up-to-date”<ept i="3">&lt;/a3&gt;</ept>).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T131721Z" creationid="msdx" creationdate="20141113T131721Z">
        <seg>首先， <bpt i="2" x="2">&lt;c2&gt;</bpt>copy()<ept i="2">&lt;/c2&gt;</ept>不能进行增量操作（见<bpt i="3" x="3">&lt;a3&gt;</bpt>15.9章节，"跳过处于最新状态的任务"<ept i="3">&lt;/a3&gt;</ept>）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>First, you need to tell Gradle to use the parallel mode.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T090858Z" creationid="haohang" creationdate="20160726T090858Z">
        <seg>首先，你需要告诉 Gradle 使用并行模式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Firstly if using that rule introduces an ordering cycle.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T152512Z" creationid="msdx" creationdate="20141110T152457Z">
        <seg>首先是如果使用这一规则引入了一个排序循环。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Firstly, each task is available as a property of the project, using the task name as the property name:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T080938Z" creationid="msdx" creationdate="20141110T080938Z">
        <seg>首先，每个任务都可作为项目的一个属性，并且使用任务名称作为这个属性名称：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Flat directory repository</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T095712Z" creationid="haohang" creationdate="20150807T095712Z">
        <seg>Flat 目录仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For 'version' (as well as artifact 'extension' and 'classifier'), Gradle will handle any valid Unicode character.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T032932Z" creationid="95" creationdate="20170416T032932Z">
        <seg>对于“version”（以及artifact的“extension”和“classifer”），Gradle将处理任何有效的Unicode字符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For 3rd party plugins however, you need to make the plugins available to the build classpath.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141123T134835Z" creationid="msdx" creationdate="20141123T134835Z">
        <seg>然而，对于第三方插件，你需要进行配置以使插件在构建类路径中可用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For <bpt i="2" x="2">&lt;c2&gt;</bpt>ScalaCompile<ept i="2">&lt;/c2&gt;</ept> tasks added by the Scala plugin, no configuration is necessary to make this work.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T155738Z" creationid="msdx" creationdate="20150501T155725Z">
        <seg>对于由 Scala 插件添加的<bpt i="2" x="2">&lt;c2&gt;</bpt>ScalaCompile<ept i="2">&lt;/c2&gt;</ept>任务，无需对这一点进行配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For CI builds and release builds, we currently recommend to use the Ant based compiler.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T081143Z" creationid="msdx" creationdate="20150503T080820Z">
        <seg>对于 CI 构建和版本的构建中，我们目前推荐使用基于 Ant 的编译器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For GCC running on Windows via Cygwin, platforms 'windows/x86' and 'windows/x86_64' are supported.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T092402Z" creationid="haohang" creationdate="20160408T092402Z">
        <seg>对于通过Cygwin运行在Windows上的GCC，则支持“windows/x86”和“windows/x86_64”。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For Gradle the two <bpt i="0" x="0">&lt;c0&gt;</bpt>action<ept i="0">&lt;/c0&gt;</ept> tasks are just not related.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T070737Z" creationid="haohang" creationdate="20160718T070737Z">
        <seg>对于 Gradle 而言，这两个<bpt i="0" x="0">&lt;c0&gt;</bpt>action<ept i="0">&lt;/c0&gt;</ept>任务不相关。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For Maven repositories, this is done using the <bpt i="2" x="2">&lt;c2&gt;</bpt>maven-metadata.xml<ept i="2">&lt;/c2&gt;</ept> file, while for Ivy repositories this is done by directory listing.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151007T023708Z" creationid="95" creationdate="20151007T023708Z">
        <seg>对于 Maven 仓库，是通过<bpt i="2" x="2">&lt;c2&gt;</bpt>maven metadata.xml<ept i="2">&lt;/c2&gt;</ept>文件来实现，而对于 Ivy 存储库，则是通过目录列表。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For a build script, the property access and method calls are delegated to a project object.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T025916Z" creationid="haohang" creationdate="20160519T025442Z">
        <seg>对于一个构建脚本，属性的访问和方法的调用会委派给一个project对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For a build type, a Gradle project will typically define a set of compiler/linker flags per tool chain.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160401T090549Z" creationid="haohang" creationdate="20160401T090549Z">
        <seg>对于一个构建类型，Gradle project 通常会定义一组每个工具链的编译器/链接器标志。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For a complete list of standard Sonar properties, consult the <bpt i="0" x="0">&lt;a0&gt;</bpt>Sonar documentation<ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T064254Z" creationid="msdx" creationdate="20150513T063400Z">
        <seg>对于标准的 Sonar 属性的完整列表，请参阅<bpt i="0" x="0">&lt;a0&gt;</bpt> Sonar 文档<ept i="0">&lt;/a0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For a complete list of supported Javadoc options consult the API documentation of the following classes: <bpt i="4" x="4">&lt;a4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>CoreJavadocOptions<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/a4&gt;</ept> and <bpt i="6" x="6">&lt;a6&gt;</bpt><bpt i="7" x="7">&lt;c7&gt;</bpt>StandardJavadocDocletOptions<ept i="7">&lt;/c7&gt;</ept><ept i="6">&lt;/a6&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T133940Z" creationid="Administrator" creationdate="20150427T133940Z">
        <seg>对于支持的 Javadoc 参数选项的完整列表，请参考下面的类的 API 文档： <bpt i="4" x="4">&lt;a4&gt;</bpt> <bpt i="5" x="5">&lt;c5&gt;</bpt>CoreJavadocOptions<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/a4&gt;</ept>和<bpt i="6" x="6">&lt;a6&gt;</bpt><bpt i="7" x="7">&lt;c7&gt;</bpt>StandardJavadocDocletOptions<ept i="7">&lt;/c7&gt;</ept><ept i="6">&lt;/a6&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For a component produced in a different Gradle project, the notation is similar.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160325T033412Z" creationid="haohang" creationdate="20160325T033241Z">
        <seg>对于在不同的 Gradle 项目产生的组件，notation是类似的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For a default component, Gradle will attempt to create a native binary variant for each and every combination of <bpt i="0" x="0">&lt;c0&gt;</bpt>buildType<ept i="0">&lt;/c0&gt;</ept>, <bpt i="1" x="1">&lt;c1&gt;</bpt>platform<ept i="1">&lt;/c1&gt;</ept> and <bpt i="2" x="2">&lt;c2&gt;</bpt>flavor<ept i="2">&lt;/c2&gt;</ept> defined for the project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T081752Z" creationid="haohang" creationdate="20160408T081752Z">
        <seg>对于一个默认的组件， Gradle会尝试为这个project所定义的每一个<bpt i="0" x="0">&lt;c0&gt;</bpt>buildType<ept i="0">&lt;/c0&gt;</ept>， <bpt i="1" x="1">&lt;c1&gt;</bpt>platform<ept i="1">&lt;/c1&gt;</ept> 和 <bpt i="2" x="2">&lt;c2&gt;</bpt>flavor<ept i="2">&lt;/c2&gt;</ept>，以及它们的每一种组合，创建一个本地二进制变种。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For a dynamic version, a 'higher' static version is preferred over a 'lower' version.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151007T024026Z" creationid="95" creationdate="20151007T024026Z">
        <seg>对于动态版本，“高”的静态版本优于“低”的版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For a flat layout you must additionally obey to the naming convention described above.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T075530Z" creationid="haohang" creationdate="20160519T075505Z">
        <seg>对于平面布局你必须另外服从上面描述的命名约定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For a given variant, Gradle will attempt to find a <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>ToolChain<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> that is able to build for the target platform.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160405T034137Z" creationid="haohang" creationdate="20160405T034137Z">
        <seg>对于给定的变种，Gradle 将尝试查找能够构建目标平台的<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>ToolChain<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For a given variant, Gradle will attempt to locate a <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>ToolChain<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> that is able to build for the target platform.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T091603Z" creationid="haohang" creationdate="20160408T091603Z">
        <seg>对于给定的变种，Gradle 将尝试查找能够构建目标平台的<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>ToolChain<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For a library named 'main', files in <bpt i="0" x="0">&lt;c0&gt;</bpt>src/main/headers<ept i="0">&lt;/c0&gt;</ept> are considered the “public” or “exported” headers.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160225T085745Z" creationid="haohang" creationdate="20160225T085640Z">
        <seg>对于名字为“main”的library， <bpt i="0" x="0">&lt;c0&gt;</bpt>src/main/headers<ept i="0">&lt;/c0&gt;</ept>中的文件都被视为"公共"或"导出"的头文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For a multi-project build these are the projects specified in Settings object (plus the root project).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T080519Z" creationid="haohang" creationdate="20160519T080519Z">
        <seg>对于多项目构建，则有在 Setting 对象中指定的project（加上根项目的project）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For a multi-project build, all projects with native components should have this plugin applied.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T095147Z" creationid="haohang" creationdate="20160408T095147Z">
        <seg>对于多项目构建，所有带有本地组件的project都应该应用这个插件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For a new version, you have always to create the new XML descriptor and the directories.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151130T051515Z" creationid="haohang" creationdate="20151130T051515Z">
        <seg>对一个新的版本，你总是要创建新的 XML 描述符和目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For a simple transformer task like this, the task action simply needs to generate output files for any out-of-date inputs, and delete output files for any removed inputs.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160816T145415Z" creationid="95" creationdate="20160816T145415Z">
        <seg>对于像这样的简单转换任务，任务操作只需要对任何out-of-date的输入生成输出的文件，并对任何已移除的输入删除对应的输出文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For a single project build this is only one project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T080425Z" creationid="haohang" creationdate="20160519T080425Z">
        <seg>对于单项目构建，只有一个project。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For a single project build, the workflow of the <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>after initialization<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> phases are pretty simple.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160520T123413Z" creationid="haohang" creationdate="20160519T080728Z">
        <seg>对于一个单项目构建，<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>初始化后<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>阶段的工作流都相当简单。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For a single-project build, a settings file is optional.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T025051Z" creationid="haohang" creationdate="20160519T025051Z">
        <seg>对于单项目的构建，有没有设置文件都可以。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For a task to be “signable”, it must produce an archive of some type.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160126T140635Z" creationid="95" creationdate="20160126T140635Z">
        <seg>一个“可签名”的任务，必须输出某种类型的archive。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For a task to process inputs incrementally, that task must contain an <bpt i="0" x="0">&lt;e0&gt;</bpt>incremental task action<ept i="0">&lt;/e0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160816T144440Z" creationid="95" creationdate="20160816T144440Z">
        <seg> 对于一个要增量处理输入的任务，它必须包含一个 <bpt i="0" x="0">&lt;e0&gt;</bpt>增量任务操作<ept i="0">&lt;/e0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For above sorts of workflows, it is important that the startup cost of invoking Gradle is as small as possible.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141117T140045Z" creationid="msdx" creationdate="20141117T140045Z">
        <seg>对以上各种工作流来说，让调用 Gradle 的启动成本尽可能小会很重要。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For adding a custom Maven repository you can do:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150909T052909Z" creationid="haohang" creationdate="20150909T052909Z">
        <seg>要添加一个自定义的 Maven 仓库，你可以如下操作：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For an archive to be a candidate for comparison, it must be added as an artifact of the archives configuration.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170109T130143Z" creationid="95" creationdate="20170109T130108Z">
        <seg>对于要用于比较的归档文件，它必须被添加为archives配置中的一个构件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For an example, see <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>ResolutionStrategy<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T054939Z" creationid="95" creationdate="20151115T054939Z">
        <seg>有关示例，请参见<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>ResolutionStrategy<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For an open source project it looks like overkill.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151201T070906Z" creationid="haohang" creationdate="20151201T070906Z">
        <seg>而对于一个开放源码项目而言，看起来则有点小题大做了。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For best results, it is therefore recommended to run a full build before the analysis.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150510T143146Z" creationid="msdx" creationdate="20150510T143146Z">
        <seg>为获得最佳结果，建议在分析前运行一次完整的构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For command line usage take a look dedicated section in <bpt i="0" x="0">&lt;a0&gt;</bpt>Appendix D, <bpt i="1" x="1">&lt;i1&gt;</bpt>Gradle Command Line<ept i="1">&lt;/i1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141118T095745Z" creationid="msdx" creationdate="20141118T095745Z">
        <seg>关于命令行的用法，可以看一下专题<bpt i="0" x="0">&lt;a0&gt;</bpt>附录 D<ept i="0">&lt;/a0&gt;</ept>， <bpt i="1" x="1">&lt;i1&gt;</bpt>Gradle 命令行<ept i="1">&lt;/i1&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For configuring a third-party Sonar plugin, consult the plugin's documentation.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T102048Z" creationid="msdx" creationdate="20150512T102048Z">
        <seg>对于第三方 Sonar 插件的配置，请参阅插件的文档。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For dependencies from a Maven repository, the default configuration is the only available one anyway.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T032611Z" creationid="haohang" creationdate="20150807T032611Z">
        <seg>对于 Maven 存储库的依赖，至少默认配置是唯一可用的一个。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For details on how to use the listener interfaces, refer to the API documentation.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T020945Z" creationid="95" creationdate="20160521T020945Z">
        <seg>有关如何使用监听器接口的详细信息，请参阅 API 文档。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For each <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>NativeBinary<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> that can be produced by a build, a single <bpt i="2" x="2">&lt;e2&gt;</bpt>lifecycle task<ept i="2">&lt;/e2&gt;</ept> is constructed that can be used to create that binary, together with a set of other tasks that do the actual work of compiling, linking or assembling the binary.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160219T072157Z" creationid="haohang" creationdate="20160219T070810Z">
        <seg>针对由构建所产生的每一个 <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>NativeBinary<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>，我们构造了一个<bpt i="2" x="2">&lt;e2&gt;</bpt>生命周期任务<ept i="2">&lt;/e2&gt;</ept>用于创建二进制，以及一系统的其他做实际工作，如编译，链接或者是装配二进制文件的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For each <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>TestSuiteExecutableBinary<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>, Gradle will create a task to execute this binary, which will run all of the registered CUnit tests.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160504T151309Z" creationid="95" creationdate="20160504T151309Z">
        <seg>对于每个<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>TestSuiteExecutableBinary<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>，Gradle 将创建一个任务来执行此二进制文件，这项任务将运行所有注册的 CUnit 测试。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For each <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>Executable<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept> and <bpt i="3" x="3">&lt;a3&gt;</bpt><bpt i="4" x="4">&lt;c4&gt;</bpt>Library<ept i="4">&lt;/c4&gt;</ept><ept i="3">&lt;/a3&gt;</ept> defined in your project, Gradle will create a matching <bpt i="5" x="5">&lt;a5&gt;</bpt><bpt i="6" x="6">&lt;c6&gt;</bpt>CUnitTestSuite<ept i="6">&lt;/c6&gt;</ept><ept i="5">&lt;/a5&gt;</ept> component, named <bpt i="7" x="7">&lt;c7&gt;</bpt>${component.name}Test<ept i="7">&lt;/c7&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160504T144334Z" creationid="95" creationdate="20160504T144334Z">
        <seg>对于在你的项目中定义的每一个 <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>Executable<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept> 和 <bpt i="3" x="3">&lt;a3&gt;</bpt><bpt i="4" x="4">&lt;c4&gt;</bpt>Library<ept i="4">&lt;/c4&gt;</ept><ept i="3">&lt;/a3&gt;</ept>，Gradle将创建一个匹配的 <bpt i="5" x="5">&lt;a5&gt;</bpt><bpt i="6" x="6">&lt;c6&gt;</bpt>CUnitTestSuite<ept i="6">&lt;/c6&gt;</ept><ept i="5">&lt;/a5&gt;</ept> 组件，名字为<bpt i="7" x="7">&lt;c7&gt;</bpt>${component.name}Test<ept i="7">&lt;/c7&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For each <bpt i="6" x="6">&lt;a6&gt;</bpt><bpt i="7" x="7">&lt;c7&gt;</bpt>ProjectNativeBinary<ept i="7">&lt;/c7&gt;</ept><ept i="6">&lt;/a6&gt;</ept> configured for the main component, a matching <bpt i="8" x="8">&lt;a8&gt;</bpt><bpt i="9" x="9">&lt;c9&gt;</bpt>TestSuiteExecutableBinary<ept i="9">&lt;/c9&gt;</ept><ept i="8">&lt;/a8&gt;</ept> will be configured on the test suite component.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160504T150909Z" creationid="95" creationdate="20160504T150637Z">
        <seg>对于为main 组件配置的每一个<bpt i="6" x="6">&lt;a6&gt;</bpt><bpt i="7" x="7">&lt;c7&gt;</bpt>ProjectNativeBinary<ept i="7">&lt;/c7&gt;</ept><ept i="6">&lt;/a6&gt;</ept>，在测试套件组件上都会配置一个匹配的 <bpt i="8" x="8">&lt;a8&gt;</bpt><bpt i="9" x="9">&lt;c9&gt;</bpt>TestSuiteExecutableBinary<ept i="9">&lt;/c9&gt;</ept><ept i="8">&lt;/a8&gt;</ept> 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For each <bpt i="6" x="6">&lt;c6&gt;</bpt>executable<ept i="6">&lt;/c6&gt;</ept> or <bpt i="7" x="7">&lt;c7&gt;</bpt>library<ept i="7">&lt;/c7&gt;</ept> defined, Gradle adds a <bpt i="8" x="8">&lt;a8&gt;</bpt><bpt i="9" x="9">&lt;c9&gt;</bpt>FunctionalSourceSet<ept i="9">&lt;/c9&gt;</ept><ept i="8">&lt;/a8&gt;</ept> with the same name.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160219T064713Z" creationid="haohang" creationdate="20160219T064713Z">
        <seg>对于每个定义的<bpt i="6" x="6">&lt;c6&gt;</bpt>executable<ept i="6">&lt;/c6&gt;</ept>或<bpt i="7" x="7">&lt;c7&gt;</bpt>library<ept i="7">&lt;/c7&gt;</ept>，Gradle 添加了具有相同名称的<bpt i="8" x="8">&lt;a8&gt;</bpt><bpt i="9" x="9">&lt;c9&gt;</bpt>FunctionalSourceSet<ept i="9">&lt;/c9&gt;</ept> <ept i="8">&lt;/a8&gt;</ept> 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For each configuration in your project, Gradle provides the tasks <bpt i="0" x="0">&lt;c0&gt;</bpt>upload<bpt i="1" x="1">&lt;e1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>ConfigurationName<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/c0&gt;</ept> and <bpt i="3" x="3">&lt;c3&gt;</bpt>build<bpt i="4" x="4">&lt;e4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>ConfigurationName<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/e4&gt;</ept><ept i="3">&lt;/c3&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151220T123854Z" creationid="95" creationdate="20151220T123854Z">
        <seg>对于你的项目中的每一个配置，Gradle 提供了<bpt i="0" x="0">&lt;c0&gt;</bpt>upload<bpt i="1" x="1">&lt;e1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>ConfigurationName<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/c0&gt;</ept>和<bpt i="3" x="3">&lt;c3&gt;</bpt>build<bpt i="4" x="4">&lt;e4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>ConfigurationName<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/e4&gt;</ept><ept i="3">&lt;/c3&gt;</ept>任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For each custom artifact, it is possible to specify the <bpt i="0" x="0">&lt;c0&gt;</bpt>extension<ept i="0">&lt;/c0&gt;</ept> and <bpt i="1" x="1">&lt;c1&gt;</bpt>classifier<ept i="1">&lt;/c1&gt;</ept> values to use for publication.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170412T154622Z" creationid="95" creationdate="20170412T154622Z">
        <seg>对于每个自定义的项目，在发布时可以指定<bpt i="0" x="0">&lt;c0&gt;</bpt>extension<ept i="0">&lt;/c0&gt;</ept>和<bpt i="1" x="1">&lt;c1&gt;</bpt>classifier<ept i="1">&lt;/c1&gt;</ept>的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For each custom artifact, it is possible to specify the <bpt i="0" x="0">&lt;c0&gt;</bpt>name<ept i="0">&lt;/c0&gt;</ept>, <bpt i="1" x="1">&lt;c1&gt;</bpt>extension<ept i="1">&lt;/c1&gt;</ept>, <bpt i="2" x="2">&lt;c2&gt;</bpt>type<ept i="2">&lt;/c2&gt;</ept>, <bpt i="3" x="3">&lt;c3&gt;</bpt>classifier<ept i="3">&lt;/c3&gt;</ept> and <bpt i="4" x="4">&lt;c4&gt;</bpt>conf<ept i="4">&lt;/c4&gt;</ept> values to use for publication.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20170216T072440Z" creationid="haohang" creationdate="20170216T072330Z">
        <seg>对于每个自定义的项目，在发布时可以指定<bpt i="0" x="0">&lt;c0&gt;</bpt>name<ept i="0">&lt;/c0&gt;</ept>、<bpt i="1" x="1">&lt;c1&gt;</bpt>extension<ept i="1">&lt;/c1&gt;</ept>、<bpt i="2" x="2">&lt;c2&gt;</bpt>type<ept i="2">&lt;/c2&gt;</ept>、<bpt i="3" x="3">&lt;c3&gt;</bpt>classifier<ept i="3">&lt;/c3&gt;</ept>和<bpt i="4" x="4">&lt;c4&gt;</bpt>conf<ept i="4">&lt;/c4&gt;</ept>的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For each executable binary produced, the <bpt i="0" x="0">&lt;c0&gt;</bpt>cpp<ept i="0">&lt;/c0&gt;</ept> plugin provides an <bpt i="1" x="1">&lt;c1&gt;</bpt>install${binary.name}<ept i="1">&lt;/c1&gt;</ept> task, which creates a development install of the executable, along with the shared libraries it requires.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160219T081139Z" creationid="haohang" creationdate="20160219T072620Z">
        <seg>对于每个产生的可执行二进制文件， <bpt i="0" x="0">&lt;c0&gt;</bpt>cpp<ept i="0">&lt;/c0&gt;</ept>插件提供了<bpt i="1" x="1">&lt;c1&gt;</bpt>install${binary.name}<ept i="1">&lt;/c1&gt;</ept>任务，这个任务可以创建该可执行文件及它需要的共享库的开发安装。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For each executable or library defined, Gradle is able to build a number of different native binary variants.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160401T063809Z" creationid="haohang" creationdate="20160325T033520Z">
        <seg>对于每个定义的可执行文件或库，Gradle 能够构建多个不同的本机二进制变种。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For each extra distribution set you add to the project, the distribution plugin adds the following tasks:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150701T031122Z" creationid="haohang" creationdate="20150701T030943Z">
        <seg>对于你向项目中添加的每一个额外的分发集合，分发插件会添加下列任务：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For each of these 'variant dimensions', it is possible to specify a set of available values as well as target each component at one, some or all of these.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160401T085709Z" creationid="haohang" creationdate="20160401T085709Z">
        <seg>对于这里的每一个“变种维度”，它可以指定一组可用的值，并且针对每个组件使用这里的一个或多个或全部的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For each project in the build, Gradle creates an instance of type <bpt i="3" x="3">&lt;a3&gt;</bpt><bpt i="4" x="4">&lt;c4&gt;</bpt>Project<ept i="4">&lt;/c4&gt;</ept><ept i="3">&lt;/a3&gt;</ept> and associates this <bpt i="5" x="5">&lt;c5&gt;</bpt>Project<ept i="5">&lt;/c5&gt;</ept> object with the build script.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T044320Z" creationid="msdx" creationdate="20141108T040302Z">
        <seg>在构建的每一个项目中，Gradle 创建了一个<bpt i="3" x="3">&lt;a3&gt;</bpt><bpt i="4" x="4">&lt;c4&gt;</bpt>Project<ept i="4">&lt;/c4&gt;</ept><ept i="3">&lt;/a3&gt;</ept>类型的实例，并在构建脚本中关联此<bpt i="5" x="5">&lt;c5&gt;</bpt>Project<ept i="5">&lt;/c5&gt;</ept>对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For each source set you add to the project, the Java plugin adds the following compilation tasks:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T005705Z" creationid="Administrator" creationdate="20150426T005705Z">
        <seg>对于每个你添加到该项目中的源集，Java 插件将添加以下的编译任务：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For each source set you add to the project, the Java plugins adds the following dependency configurations:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T084749Z" creationid="Administrator" creationdate="20150426T084749Z">
        <seg>对于每个你添加到项目中的源集，Java插件都会添加以下的依赖配置：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For exact details on when exactly new daemon process is forked read the dedicated section below.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141117T152309Z" creationid="msdx" creationdate="20141117T152013Z">
        <seg>关于fork一个完全新的守护进程的具体细节，请阅读下面的专题。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For example <bpt i="0" x="0">&lt;c0&gt;</bpt> :bluewhale:hello<ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T061511Z" creationid="haohang" creationdate="20160718T061511Z">
        <seg>例如<bpt i="0" x="0">&lt;c0&gt;</bpt> :bluewhale:hello<ept i="0">&lt;/c0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For example <bpt i="0" x="0">&lt;c0&gt;</bpt>cleanJar<ept i="0">&lt;/c0&gt;</ept> will delete the JAR file created by the <bpt i="1" x="1">&lt;c1&gt;</bpt>jar<ept i="1">&lt;/c1&gt;</ept> task, and <bpt i="2" x="2">&lt;c2&gt;</bpt>cleanTest<ept i="2">&lt;/c2&gt;</ept> will delete the test results created by the <bpt i="3" x="3">&lt;c3&gt;</bpt>test<ept i="3">&lt;/c3&gt;</ept> task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T005641Z" creationid="Administrator" creationdate="20150426T005641Z">
        <seg>例如， <bpt i="0" x="0">&lt;c0&gt;</bpt>cleanJar<ept i="0">&lt;/c0&gt;</ept>将删除由<bpt i="1" x="1">&lt;c1&gt;</bpt>jar<ept i="1">&lt;/c1&gt;</ept>任务中所创建的 JAR 文件，<bpt i="2" x="2">&lt;c2&gt;</bpt>cleanTest<ept i="2">&lt;/c2&gt;</ept>将删除由<bpt i="3" x="3">&lt;c3&gt;</bpt>test<ept i="3">&lt;/c3&gt;</ept>任务所创建的测试结果。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For example if you run a build on a continuous integration server where you have no admin rights for the <bpt i="3" x="3">&lt;s3&gt;</bpt><bpt i="4" x="4">&lt;e4&gt;</bpt>machine<ept i="4">&lt;/e4&gt;</ept><ept i="3">&lt;/s3&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T141856Z" creationid="msdx" creationdate="20141109T141543Z">
        <seg>例如，如果你在一个持续集成服务器上运行构建，但你没有这台<bpt i="3" x="3">&lt;s3&gt;</bpt><bpt i="4" x="4">&lt;e4&gt;</bpt>机器<ept i="4">&lt;/e4&gt;</ept><ept i="3">&lt;/s3&gt;</ept>的管理员权限，</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For example if you want to exchange a task added by the Java plugin with a custom task of a different type.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T015803Z" creationid="msdx" creationdate="20141111T015803Z">
        <seg>例如，您想要把通过 Java 插件添加的一个任务与不同类型的一个自定义任务进行交换。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For example there might be a project which uses Hibernate 2.5.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150716T092634Z" creationid="haohang" creationdate="20150716T092634Z">
        <seg>例如可能有一个项目使用 Hibernate 2.5。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For example we will not fork a new daemon if a some system property has changed.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141117T153120Z" creationid="msdx" creationdate="20141117T153120Z">
        <seg>例如，如果某些系统属性已经更改，我们不会fork一个新的守护进程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For example you can configure your build to generate code coverage using the <bpt i="0" x="0">&lt;c0&gt;</bpt>application<ept i="0">&lt;/c0&gt;</ept> plugin.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T135547Z" creationid="msdx" creationdate="20150506T135547Z">
        <seg>例如，你可以配置您的构建使用<bpt i="0" x="0">&lt;c0&gt;</bpt>application<ept i="0">&lt;/c0&gt;</ept>插件来生成代码覆盖率。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For example you can use a shared flat directory without XML descriptors and yet you can have full transitive dependency management as described above.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151201T063459Z" creationid="haohang" creationdate="20151201T063459Z">
        <seg>例如你可以使用一个共享平面目录，而不包括如上所述可以有完全的传递依赖管理的XML 描述符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For example, <bpt i="3" x="3">&lt;a3&gt;</bpt>dependency configurations<ept i="3">&lt;/a3&gt;</ept> implement <bpt i="4" x="4">&lt;c4&gt;</bpt>FileCollection<ept i="4">&lt;/c4&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T145249Z" creationid="msdx" creationdate="20141112T145249Z">
        <seg>比如，<bpt i="3" x="3">&lt;a3&gt;</bpt>依赖配置<ept i="3">&lt;/a3&gt;</ept> 就实现了 <bpt i="4" x="4">&lt;c4&gt;</bpt>FileCollection<ept i="4">&lt;/c4&gt;</ept> 这一接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For example, <bpt i="0" x="0">&lt;c0&gt;</bpt>Iterable<ept i="0">&lt;/c0&gt;</ept> gets an <bpt i="1" x="1">&lt;c1&gt;</bpt>each<ept i="1">&lt;/c1&gt;</ept> method, which iterates over the elements of the <bpt i="2" x="2">&lt;c2&gt;</bpt>Iterable<ept i="2">&lt;/c2&gt;</ept>:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T061318Z" creationid="msdx" creationdate="20141108T061213Z">
        <seg>例如， <bpt i="0" x="0">&lt;c0&gt;</bpt>iterable <ept i="0">&lt;/c0&gt;</ept>新增的<bpt i="1" x="1">&lt;c1&gt;</bpt>each<ept i="1">&lt;/c1&gt;</ept>方法，会对<bpt i="2" x="2">&lt;c2&gt;</bpt>iterable <ept i="2">&lt;/c2&gt;</ept>的元素进行遍历：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For example, <bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>gradle buildDashboard build<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/s2&gt;</ept> will generate a dashboard for all of the reporting tasks that are dependents of the <bpt i="4" x="4">&lt;c4&gt;</bpt>build<ept i="4">&lt;/c4&gt;</ept> task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150713T100232Z" creationid="haohang" creationdate="20150713T100232Z">
        <seg>例如， <bpt i="2" x="2">&lt;s2&gt;</bpt> <bpt i="3" x="3">&lt;c3&gt;</bpt>gradle buildDashboard build<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/s2&gt;</ept> 将为 <bpt i="4" x="4">&lt;c4&gt;</bpt>build<ept i="4">&lt;/c4&gt;</ept>任务 所依赖的所有报告任务生成一个 dashboard。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For example, a Groovy class can extend a Java class that in turn extends a Groovy class.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T071147Z" creationid="msdx" creationdate="20150429T071147Z">
        <seg>例如，一个 Groovy 类可以继承自一个 Java 类，而这个 Java 类也可以继承自一个 Groovy 类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For example, a Scala class can extend a Java class that in turn extends a Scala class.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T144835Z" creationid="msdx" creationdate="20150429T144809Z">
        <seg>例如，一个 Scala 类可以继承自一个 Java 类，而这个 Java 类也可以继承自一个 Scala 类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For example, a file tree might represent a directory tree or the contents of a ZIP file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T161640Z" creationid="msdx" creationdate="20141112T161640Z">
        <seg>例如，文件树可能表示一个目录树或 ZIP 文件的内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For example, a path 'services:api' is mapped by default to a folder 'services/api' (relative from the project root).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T041640Z" creationid="haohang" creationdate="20160519T041540Z">
        <seg>例如，一个路径 'services:api'，默认情况下映射到文件夹'services/api'（相对于项目根目录）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For example, a plugin may define a range of support platforms, but you may choose to only target Windows-x86 for a particular component.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160401T085955Z" creationid="haohang" creationdate="20160401T085955Z">
        <seg>例如，一个插件可以定义一系列的支持平台，但你可以选择某个特定组件只构建Windows-x86平台。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For example, allowing test execution to be monitored.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T154711Z" creationid="95" creationdate="20161218T154711Z">
        <seg>例如，允许对测试的执行进行监控。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For example, both the Groovy and Scala compilers have a large startup cost.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141117T151040Z" creationid="msdx" creationdate="20141117T151040Z">
        <seg>例如，Groovy 和 Scala 的编译器启动开销都很大。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For example, for a source set called <bpt i="1" x="1">&lt;c1&gt;</bpt>intTest<ept i="1">&lt;/c1&gt;</ept>, you can run <bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>gradle intTestClasses<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/s2&gt;</ept> to compile the int test classes.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T133209Z" creationid="Administrator" creationdate="20150427T133209Z">
        <seg>例如，对于一个被叫做<bpt i="1" x="1">&lt;c1&gt;</bpt>intTest<ept i="1">&lt;/c1&gt;</ept>的源集，你可以运行<bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>gradle intTestClasses<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/s2&gt;</ept>来编译 int 测试类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For example, it is very easy to compose your build from reusable pieces of build logic.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161213T154845Z" creationid="95" creationdate="20161213T154703Z">
        <seg>例如，它可以很容易地将你的构建拆分为多个可重用的模块，最后再进行组装。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For example, it will infer a type value of "<bpt i="1" x="1">&lt;c1&gt;</bpt>pom<ept i="1">&lt;/c1&gt;</ept>" if it finds a <bpt i="2" x="2">&lt;c2&gt;</bpt>pom.xml<ept i="2">&lt;/c2&gt;</ept> to convert to a Gradle build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T074414Z" creationid="haohang" creationdate="20150707T074414Z">
        <seg>例如，如果它发现<bpt i="2" x="2">&lt;c2&gt;</bpt>pom.xml<ept i="2">&lt;/c2&gt;</ept>，它将推断一个“<bpt i="1" x="1">&lt;c1&gt;</bpt>pom<ept i="1">&lt;/c1&gt;</ept>”的类型值，以转换为 Gradle 构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For example, one common pattern is an Ant project with version-less jar files stored in the filesystem.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150716T040507Z" creationid="haohang" creationdate="20150716T040507Z">
        <seg>例如，一个常见的模式是，有一个 Ant 项目，而它保存在文件系统中的一些 jar 文件缺少版本号。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For example, setting the <bpt i="0" x="0">&lt;c0&gt;</bpt>skip<ept i="0">&lt;/c0&gt;</ept> property to <bpt i="1" x="1">&lt;c1&gt;</bpt>true<ept i="1">&lt;/c1&gt;</ept> prevents a project (and its subprojects) from being analyzed.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T091705Z" creationid="msdx" creationdate="20150512T091705Z">
        <seg>例如，设置 <bpt i="0" x="0">&lt;c0&gt;</bpt>skip<ept i="0">&lt;/c0&gt;</ept> 属性为<bpt i="1" x="1">&lt;c1&gt;</bpt>true<ept i="1">&lt;/c1&gt;</ept> 以防止一个项目（和它的子项目）被分析。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For example, some other dependency, which does not have any exclude rules, might pull in that unwanted transitive dependency.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T102944Z" creationid="haohang" creationdate="20150801T102944Z">
        <seg>例如，某些其他的依赖，并没有任何排除规则，可能会带上那个多余的传递依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For example, the ':' character cannot be used as an identifier when publishing to a filesystem-backed repository on Windows.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20170217T083445Z" creationid="haohang" creationdate="20170217T083445Z">
        <seg>例如，当发布到 Windows 上的文件系统支持的存储库，“:”字符就不能用作标识符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For example, the <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>JavaCompile<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> task has a <bpt i="2" x="2">&lt;c2&gt;</bpt>source<ept i="2">&lt;/c2&gt;</ept> property, which defines the source files to compile.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T122938Z" creationid="msdx" creationdate="20141113T122938Z">
        <seg>例如， <bpt i="0" x="0">&lt;a0&gt;</bpt> <bpt i="1" x="1">&lt;c1&gt;</bpt>JavaCompile<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>任务有一个<bpt i="2" x="2">&lt;c2&gt;</bpt>source<ept i="2">&lt;/c2&gt;</ept>属性，定义了要编译的源代码文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For example, the <bpt i="0" x="0">&lt;a0&gt;</bpt>Java plugin<ept i="0">&lt;/a0&gt;</ept> configures a jar to built and this jar artifact is added to the <bpt i="1" x="1">&lt;c1&gt;</bpt>archives<ept i="1">&lt;/c1&gt;</ept> configuration.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160109T072126Z" creationid="95" creationdate="20160109T072126Z">
        <seg>例如， <bpt i="0" x="0">&lt;a0&gt;</bpt>Java 插件<ept i="0">&lt;/a0&gt;</ept>配置了构建一个jar文件，并且把 jar 文件添加到<bpt i="1" x="1">&lt;c1&gt;</bpt>archives<ept i="1">&lt;/c1&gt;</ept>配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For example, the archive tasks are tasks of types: <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>Jar<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>, <bpt i="4" x="4">&lt;a4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>Tar<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/a4&gt;</ept>, <bpt i="6" x="6">&lt;a6&gt;</bpt><bpt i="7" x="7">&lt;c7&gt;</bpt>Zip<ept i="7">&lt;/c7&gt;</ept><ept i="6">&lt;/a6&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T071002Z" creationid="Administrator" creationdate="20150425T071002Z">
        <seg>例如，以下类型的归档任务： <bpt i="2" x="2">&lt;a2&gt;</bpt> <bpt i="3" x="3">&lt;c3&gt;</bpt>Jar<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>，<bpt i="4" x="4">&lt;a4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>Tar<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/a4&gt;</ept>，<bpt i="6" x="6">&lt;a6&gt;</bpt><bpt i="7" x="7">&lt;c7&gt;</bpt>Zip<ept i="7">&lt;/c7&gt;</ept><ept i="6">&lt;/a6&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For example, the daemon might be useful for following scenarios:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141117T141720Z" creationid="msdx" creationdate="20141117T140228Z">
        <seg>例如，该守护进程可能用于以下情形：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For example, the keyword style does not work in expressions.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T022949Z" creationid="msdx" creationdate="20141110T021240Z">
        <seg>例如，在表达式中不能用这种关键字风格。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For example, the organisation <bpt i="0" x="0">&lt;c0&gt;</bpt>my.company<ept i="0">&lt;/c0&gt;</ept> would then be represented as <bpt i="1" x="1">&lt;c1&gt;</bpt>my/company<ept i="1">&lt;/c1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T111037Z" creationid="95" creationdate="20151006T111037Z">
        <seg>例如，组织<bpt i="0" x="0">&lt;c0&gt;</bpt>my.company<ept i="0">&lt;/c0&gt;</ept>将表示为<bpt i="1" x="1">&lt;c1&gt;</bpt>my/company<ept i="1">&lt;/c1&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For example, to create a Java library project simply execute: <bpt i="3" x="3">&lt;c3&gt;</bpt>gradle init --type java-library<ept i="3">&lt;/c3&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T074237Z" creationid="haohang" creationdate="20150707T074237Z">
        <seg>例如，要创建一个 Java library 项目，只需执行: <bpt i="3" x="3">&lt;c3&gt;</bpt>gradle init --type java-library<ept i="3">&lt;/c3&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For example, with the default status scheme in place, <bpt i="3" x="3">&lt;c3&gt;</bpt>latest.integration<ept i="3">&lt;/c3&gt;</ept> will select the highest module version regardless of its status (because <bpt i="4" x="4">&lt;c4&gt;</bpt>integration<ept i="4">&lt;/c4&gt;</ept> is the least mature status), whereas <bpt i="5" x="5">&lt;c5&gt;</bpt>latest.release<ept i="5">&lt;/c5&gt;</ept> will select the highest module version with status <bpt i="6" x="6">&lt;c6&gt;</bpt>release<ept i="6">&lt;/c6&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T041529Z" creationid="95" creationdate="20151129T020649Z">
        <seg>例如，在适当的位置使用默认的状态模式，<bpt i="3" x="3">&lt;c3&gt;</bpt>latest.integration<ept i="3">&lt;/c3&gt;</ept>将选择最高的模块版本，不论其状态（因为<bpt i="4" x="4">&lt;c4&gt;</bpt>integration<ept i="4">&lt;/c4&gt;</ept>是成熟度最低的状态），而<bpt i="5" x="5">&lt;c5&gt;</bpt>latest.release<ept i="5">&lt;/c5&gt;</ept>将选择<bpt i="6" x="6">&lt;c6&gt;</bpt>release<ept i="6">&lt;/c6&gt;</ept>状态的最高模块版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For example, you can use it to expand the archive by copying the contents, or to merge some archives into another.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T122816Z" creationid="msdx" creationdate="20141113T122732Z">
        <seg>例如，您可以用它来通过复制内容扩大归档，或把一些档案合并到另一个归档文件中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For example, you could replace the version range for a dependency with the actual version used to produce the build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170304T031812Z" creationid="95" creationdate="20170304T031812Z">
        <seg>例如，你可以使用一个用于产生构建的实际版本去替换一个依赖的版本范围。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For example, you could start by importing your existing Ant build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141114T142630Z" creationid="msdx" creationdate="20141114T142630Z">
        <seg>例如，你可以通过导入您现有的 Ant 构建来开始。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For example, you execute the Ant <bpt i="1" x="1">&lt;c1&gt;</bpt>echo<ept i="1">&lt;/c1&gt;</ept> task by calling the <bpt i="2" x="2">&lt;c2&gt;</bpt>ant.echo()<ept i="2">&lt;/c2&gt;</ept> method.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141115T153307Z" creationid="msdx" creationdate="20141115T153152Z">
        <seg>例如，你可以通过调用<bpt i="2" x="2">&lt;c2&gt;</bpt>ant.echo()<ept i="2">&lt;/c2&gt;</ept>方法执行 Ant 的 <bpt i="1" x="1">&lt;c1&gt;</bpt>echo<ept i="1">&lt;/c1&gt;</ept> 任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For example, you may not wish to sign artifacts for non release versions.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160126T141326Z" creationid="95" creationdate="20160126T141326Z">
        <seg>例如，你可能不想对非发布版本签名artifacts。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For example, you might use a source set to define an integration test suite, or you might use separate source sets to define the API and implementation classes of your project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T173510Z" creationid="Administrator" creationdate="20150425T173510Z">
        <seg>例如，你可能会使用一个源集来定义一个集成测试套件，或者你可能会使用单独的源集来定义你的项目的 API 和实现类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For example, you might want the artifact deployed to the Maven repository to have a different version or name than the artifact generated by Gradle.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T142653Z" creationid="95" creationdate="20160106T142653Z">
        <seg>例如，你可能希望部署到 Maven 仓库中的artifact 有不同的版本，或者是不同于 Gradle 生成的artifact 的名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For example, your Eclipse or IDEA project will update immediately, in the background.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T154801Z" creationid="95" creationdate="20161218T154801Z">
        <seg>例如，你的 Eclipse 或IDEA 项目将在后台中马上更新。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For example:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141117T132920Z" creationid="msdx" creationdate="20141117T132920Z">
        <seg>举个例子：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For further details on extra properties and their API, see <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>ExtraPropertiesExtension<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T055457Z" creationid="msdx" creationdate="20141108T055401Z">
        <seg>有关额外属性和它们的 API 的详细信息，请参阅<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>ExtraPropertiesExtension<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For global Sonar properties, use the <bpt i="0" x="0">&lt;c0&gt;</bpt>withGlobalProperties<ept i="0">&lt;/c0&gt;</ept> hook on <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>SonarRootModel<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T101317Z" creationid="msdx" creationdate="20150512T101303Z">
        <seg>对于全局的 Sonar 属性，可以使用<bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>SonarRootModel<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>上的 <bpt i="0" x="0">&lt;c0&gt;</bpt>withGlobalProperties<ept i="0">&lt;/c0&gt;</ept> hook：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For grouping JUnit test classes and methods JUnit 4.8 introduces the concept of categories.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T082505Z" creationid="msdx" creationdate="20150428T082358Z">
        <seg>为对Junit 测试类和方法进行分组，JUnit 4.8引入了类别的概念。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For how to publish to a Maven repository, see the section <bpt i="4" x="4">&lt;a4&gt;</bpt>Section 52.6, “Interacting with Maven repositories”<ept i="4">&lt;/a4&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151227T160745Z" creationid="95" creationdate="20151227T160745Z">
        <seg>有关如何发布到 Maven 仓库，请参阅<bpt i="4" x="4">&lt;a4&gt;</bpt>第 52.6节，”与Maven 仓库的交互“<ept i="4">&lt;/a4&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For how to run partial builds from the root see <bpt i="0" x="0">&lt;a0&gt;</bpt>Section 56.4, “Running tasks by their absolute path”<ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T080043Z" creationid="haohang" creationdate="20160519T080043Z">
        <seg>有关如何从根目录运行部分的构建，见<bpt i="0" x="0">&lt;a0&gt;</bpt>第 56.4章，“使用其绝对路径运行任务”<ept i="0">&lt;/a0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For include this is <bpt i="2" x="2">&lt;c2&gt;</bpt>"**/*Tests.class", "**/*Test.class"<ept i="2">&lt;/c2&gt;</ept> and the for exclude it is <bpt i="3" x="3">&lt;c3&gt;</bpt>"**/Abstract*.class"<ept i="3">&lt;/c3&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T082053Z" creationid="Administrator" creationdate="20150428T082053Z">
        <seg>对于 include 的默认值是 <bpt i="2" x="2">&lt;c2&gt;</bpt>"**/*Tests.class"， "**/*Test.class"<ept i="2">&lt;/c2&gt;</ept>，而对于exclude它的默认值是 <bpt i="3" x="3">&lt;c3&gt;</bpt>"**/Abstract*.class"<ept i="3">&lt;/c3&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For instance, this tight <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>coupling<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> of projects effectively prevents Gradle from building multiple projects in parallel, or from substituting a pre-built artifact in place of a project dependency.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T092709Z" creationid="haohang" creationdate="20160726T092709Z">
        <seg>例如，紧<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>耦合<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>的项目实际上会阻碍 Gradle 在多项目上的并行构建，或是使用预构建的构件来代替某个项目依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For integration with a local Maven installation, it is sometimes useful to publish the module into the local .m2 repository.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T063638Z" creationid="95" creationdate="20170416T063638Z">
        <seg>与本地的 Maven 安装集成，有时很有用，比如把模块发布到本地的.m2 存储库中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For local developer builds this is our favorite property.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141119T153652Z" creationid="msdx" creationdate="20141119T153652Z">
        <seg>对于本地开发者的构建而言，这是我们最喜欢的属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For many projects there is not one right set of dependencies (as more or less imposed by the POM format).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151130T050758Z" creationid="haohang" creationdate="20151130T050758Z">
        <seg>对于许多项目而言，可能不是只有正确的一组依赖（因POM格式的影响会多或少）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For migration purposes this is a common technique with Gradle.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150716T045207Z" creationid="haohang" creationdate="20150716T045137Z">
        <seg>出于迁移的目的，这是在 Gradle 中的一种常用技术。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For more advanced uses, you can define a task dependency using a closure.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T122649Z" creationid="msdx" creationdate="20141110T122649Z">
        <seg>对于更高级的用法，您可以使用闭包来定义任务依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For more details and examples please see the <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>TestFilter<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> reference.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T024115Z" creationid="Administrator" creationdate="20150428T024115Z">
        <seg>有关更多的详细信息和示例，请参阅<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>TestFilter<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>的文档。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For more details, see the API documentation of the convention object.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150526T004635Z" creationid="haohang" creationdate="20150526T004635Z">
        <seg>有关更多详细信息，请参见约定对象的 API 文档。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For more details, take a look at the API documentation for<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>ResolutionStrategy<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151130T032641Z" creationid="haohang" creationdate="20151130T032641Z">
        <seg>更多详细信息请参阅<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>ResolutionStrategy<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>的 API 文档。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For more exotic use cases you can even pass properties <bpt i="1" x="1">&lt;s1&gt;</bpt><bpt i="2" x="2">&lt;e2&gt;</bpt>directly<ept i="2">&lt;/e2&gt;</ept><ept i="1">&lt;/s1&gt;</ept> to the project object via system and environment properties.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T141352Z" creationid="msdx" creationdate="20141109T141326Z">
        <seg>在更多的用法中，您甚至可以通过系统和环境属性把属性<bpt i="1" x="1">&lt;s1&gt;</bpt><bpt i="2" x="2">&lt;e2&gt;</bpt>直接<ept i="2">&lt;/e2&gt;</ept><ept i="1">&lt;/s1&gt;</ept>传给项目对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For more information about task dependencies, see the <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Task<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> API.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T123959Z" creationid="msdx" creationdate="20141110T123911Z">
        <seg>有关任务依赖的详细信息，请参阅<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Task<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>的 API。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For more information about the API please refer to the javadocs on <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>ResolvableDependencies.getResolutionResult()<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T033855Z" creationid="haohang" creationdate="20150807T033855Z">
        <seg>关于这个 API 的更多信息，请参考 <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>ResolvableDependencies.getResolutionResult()<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>上的文档。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For more information and code samples see <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>ResolutionStrategy<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T060330Z" creationid="95" creationdate="20151115T060240Z">
        <seg>更多的信息和代码示例请参阅<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>ResolutionStrategy<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For more information on how to do this, see <bpt i="2" x="2">&lt;a2&gt;</bpt>Section 59.5, “External dependencies for the build script”<ept i="2">&lt;/a2&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141123T150630Z" creationid="msdx" creationdate="20141123T150630Z">
        <seg>有关如何进行此操作的详细信息，请参阅<bpt i="2" x="2">&lt;a2&gt;</bpt> 59.5章节，“构建脚本的外部依赖”<ept i="2">&lt;/a2&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For more information on the inner workings of plugins, see <bpt i="0" x="0">&lt;a0&gt;</bpt>Chapter 58, <bpt i="1" x="1">&lt;i1&gt;</bpt>Writing Custom Plugins<ept i="1">&lt;/i1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141124T095501Z" creationid="msdx" creationdate="20141124T095501Z">
        <seg>关于插件的内部运作的详细信息，请参阅<bpt i="0" x="0">&lt;a0&gt;</bpt>第 58 章，<bpt i="1" x="1">&lt;i1&gt;</bpt>编写自定义插件<ept i="1">&lt;/i1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For more information see the API documentation for <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>ProjectDependency<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T092533Z" creationid="haohang" creationdate="20150801T092533Z">
        <seg>详细信息请参阅<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>ProjectDependency<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>的 API 文档</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For more information, see the Ivy reference for <bpt i="1" x="1">&lt;c1&gt;</bpt>ivy.xml<ept i="1">&lt;/c1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150730T032816Z" creationid="haohang" creationdate="20150730T032816Z">
        <seg>有关更多的信息，请参阅<bpt i="1" x="1">&lt;c1&gt;</bpt>ivy.xml<ept i="1">&lt;/c1&gt;</ept>引用的Ivy。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For more on writing your own plugins, see <bpt i="0" x="0">&lt;a0&gt;</bpt>Chapter 58, <bpt i="1" x="1">&lt;i1&gt;</bpt>Writing Custom Plugins<ept i="1">&lt;/i1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141123T150713Z" creationid="msdx" creationdate="20141123T150713Z">
        <seg>关于编写自己的插件的详细信息，请参阅<bpt i="0" x="0">&lt;a0&gt;</bpt> 58章节，<bpt i="1" x="1">&lt;i1&gt;</bpt>编写自定义插件<ept i="1">&lt;/i1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For most projects, this is the better choice than the Ant-based compiler.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T094454Z" creationid="msdx" creationdate="20150429T094411Z">
        <seg>对于大多数项目而言，这相比基于 Ant 编译器，是个更好的选择。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For multi-project builds there can be only one <bpt i="0" x="0">&lt;c0&gt;</bpt>buildSrc<ept i="0">&lt;/c0&gt;</ept> directory, which has to be in the root project directory.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T051443Z" creationid="95" creationdate="20161211T051443Z">
        <seg>对于多项目构建，它们可能只有一个<bpt i="0" x="0">&lt;c0&gt;</bpt>buildSrc<ept i="0">&lt;/c0&gt;</ept>目录，在根项目的目录中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For multi-project builds you can place <bpt i="4" x="4">&lt;c4&gt;</bpt>gradle.properties<ept i="4">&lt;/c4&gt;</ept> files in any subproject directory.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T134149Z" creationid="msdx" creationdate="20141109T093732Z">
        <seg>对于多项目构建，您可以将<bpt i="4" x="4">&lt;c4&gt;</bpt>gradle.properties<ept i="4">&lt;/c4&gt;</ept>文件放在任何子项目的目录中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For multi-project builds, the dependencies declared in the a project's build script, are available to the build scripts of all sub-projects.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161212T154913Z" creationid="95" creationdate="20161212T154715Z">
        <seg>对于多项目构建，定义在一个项目的构建脚本中的依赖，是可以在所有子项目的构建脚本中用的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For multiproject builds the situation is different.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160522T125813Z" creationid="95" creationdate="20160522T125813Z">
        <seg>对于 multiproject 构建，这咱情况则不同。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For other <bpt i="3" x="3">&lt;c3&gt;</bpt>ScalaCompile<ept i="3">&lt;/c3&gt;</ept> tasks, <bpt i="4" x="4">&lt;c4&gt;</bpt>scalaCompileOptions.incrementalOptions.publishedCode<ept i="4">&lt;/c4&gt;</ept> needs to be configured to point to the classes folder or Jar archive by which the code is passed on to compile class paths of downstream <bpt i="5" x="5">&lt;c5&gt;</bpt>ScalaCompile<ept i="5">&lt;/c5&gt;</ept> tasks.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T160304Z" creationid="msdx" creationdate="20150501T155734Z">
        <seg>对于其他的 <bpt i="3" x="3">&lt;c3&gt;</bpt>ScalaCompile<ept i="3">&lt;/c3&gt;</ept> 任务，需要根据类文件夹或 Jar archive 的代码中，是哪一个的代码被传递给<bpt i="5" x="5">&lt;c5&gt;</bpt>ScalaCompile<ept i="5">&lt;/c5&gt;</ept>任务的下游类路径，把<bpt i="4" x="4">&lt;c4&gt;</bpt>ScalaCompileOptions.incrementalOptions.publishedCode<ept i="4">&lt;/c4&gt;</ept>配置为指向它们。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For our sample, we will use Groovy 2.2.0 from the public Maven repository:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T065340Z" creationid="msdx" creationdate="20141030T065340Z">
        <seg>下面例子中，我们会使用Maven中央仓库中的Groovy 2.2.0版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For per-project Sonar properties, use the <bpt i="0" x="0">&lt;c0&gt;</bpt>withProjectProperties<ept i="0">&lt;/c0&gt;</ept> hook on <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>SonarProject<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T101409Z" creationid="msdx" creationdate="20150512T101409Z">
        <seg>对于每个项目的 Sonar 属性，使用<bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>SonarProject<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>上的<bpt i="0" x="0">&lt;c0&gt;</bpt>withProjectProperties<ept i="0">&lt;/c0&gt;</ept> hook：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For projects that also apply the Java Plugin, The JaCoCo plugin automatically adds the following tasks:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T135908Z" creationid="msdx" creationdate="20150506T135842Z">
        <seg>对于同时也配置使用了 Java 插件的项目，JaCoCo 插件会自动添加以下任务：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For scenarios where the outputs of a task are not files, or for more complex scenarios, the <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>TaskOutputs.upToDateWhen()<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept> method allows you to calculate programmatically if the tasks outputs should be considered up to date.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T062850Z" creationid="msdx" creationdate="20141111T061606Z">
        <seg>对于任务的输出并不是文件的场景，或者是更复杂的场景， <bpt i="2" x="2">&lt;a2&gt;</bpt> <bpt i="3" x="3">&lt;c3&gt;</bpt>TaskOutputs.upToDateWhen()<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>方法允许您以编程方式计算任务的输出是否应该被判断为最新状态。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For some properties (notably server and database connection settings), determining a suitable default is left to the Sonar Runner.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T065112Z" creationid="msdx" creationdate="20150513T065112Z">
        <seg>对于一些属性（尤其是服务器和数据库的连接配置），确定留给 Sonar Runner 一个合适的默认值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For some workflows, the user invokes Gradle many times to execute a small number of relatively quick tasks.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141117T132909Z" creationid="msdx" creationdate="20141117T132909Z">
        <seg>对于一些工作流，用户会多次调用 Gradle，以执行少量的相对快速的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For that use case please refer to <bpt i="0" x="0">&lt;a0&gt;</bpt>Section 50.2.3, “Resolve version conflicts”<ept i="0">&lt;/a0&gt;</ept> and the documentation on <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>ResolutionStrategy<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept> for a potentially better solution to the problem.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T102035Z" creationid="haohang" creationdate="20150801T102035Z">
        <seg>使用这个案例，请参考<bpt i="0" x="0">&lt;a0&gt;</bpt>第 50.2.3 节，“解决版本冲突”<ept i="0">&lt;/a0&gt;</ept>和关于<bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>ResolutionStrategy<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>文档，以了解这个问题潜在的更好的解决方案。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For the details on how to configure the wrapper, see <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Wrapper<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T040228Z" creationid="95" creationdate="20161218T040228Z">
        <seg>有关如何配置包装器的详细信息，请参见<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Wrapper<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For the examples below we have the following dependencies setup:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T034228Z" creationid="haohang" creationdate="20150807T034228Z">
        <seg>下面的示例我们使用以下依赖设置：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For the examples here, we are going to use Groovy as the implementation language.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160818T151156Z" creationid="95" creationdate="20160818T151156Z">
        <seg>在这里的例子中，我们将使用Gradle来作为实现语言。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For the jars and the correct POMs you still use the remote repository.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151201T063836Z" creationid="haohang" creationdate="20151201T063836Z">
        <seg>对于这些jar 和不正确的 POMs，你依然要使用远程仓库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For the latter you can declare <bpt i="0" x="0">&lt;e0&gt;</bpt>Project Dependencies<ept i="0">&lt;/e0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T092511Z" creationid="haohang" creationdate="20150801T092511Z">
        <seg>对于后者，你可以声明<bpt i="0" x="0">&lt;e0&gt;</bpt>项目依赖<ept i="0">&lt;/e0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For the person service we declare that the project should be compiled only against the <bpt i="5" x="5">&lt;c5&gt;</bpt>api<ept i="5">&lt;/c5&gt;</ept> interfaces but tested with all classes from <bpt i="6" x="6">&lt;c6&gt;</bpt>api<ept i="6">&lt;/c6&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T085250Z" creationid="haohang" creationdate="20160726T085250Z">
        <seg>对于 person service，我们定义了这个项目应该仅针对<bpt i="5" x="5">&lt;c5&gt;</bpt>api<ept i="5">&lt;/c5&gt;</ept> 接口编译，但是对<bpt i="6" x="6">&lt;c6&gt;</bpt>api<ept i="6">&lt;/c6&gt;</ept>里的所有类进行测试。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For the “<bpt i="0" x="0">&lt;c0&gt;</bpt>ivy-publish<ept i="0">&lt;/c0&gt;</ept>” plugin to have any effect, a <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>IvyPublication<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept> must be added to the set of publications.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170211T135939Z" creationid="95" creationdate="20170211T135939Z">
        <seg>为了能让“<bpt i="0" x="0">&lt;c0&gt;</bpt>ivy-publish<ept i="0">&lt;/c0&gt;</ept>”插件起作用的，一个 <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>IvyPublication<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept> 必须被添加到publications集里。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For the “<bpt i="0" x="0">&lt;c0&gt;</bpt>maven-publish<ept i="0">&lt;/c0&gt;</ept>” plugin to have any effect, a <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>MavenPublication<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept> must be added to the set of publications.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170412T153605Z" creationid="95" creationdate="20170412T153605Z">
        <seg>为了能让“<bpt i="0" x="0">&lt;c0&gt;</bpt>maven-publish<ept i="0">&lt;/c0&gt;</ept>”插件起作用的，一个 <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>MavenPublication<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept> 必须被添加到publications集里。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For this and other (mainly isolation) reasons, it is desirable to execute the Sonar Runner in a separate process.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150525T234530Z" creationid="haohang" creationdate="20150525T234530Z">
        <seg>由于这个和其他（主要是隔离）的原因，最好在一个独立的进程中执行Sonar Runner。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For this layer Gradle provides integration simply by relying on Groovy, and the fantastic <bpt i="3" x="3">&lt;c3&gt;</bpt>AntBuilder<ept i="3">&lt;/c3&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141114T141736Z" creationid="msdx" creationdate="20141114T141448Z">
        <seg>这一层 Gradle 单靠 Groovy 和不可思议的 <bpt i="3" x="3">&lt;c3&gt;</bpt>AntBuilder<ept i="3">&lt;/c3&gt;</ept>，对其提供了集成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>For this type of task, the action closure determines the behaviour of the task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T143014Z" creationid="95" creationdate="20160814T143014Z">
        <seg>对于这种类型的任务，action闭包决定了这个任务的行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Force versions can also be used to deal with rogue metadata of transitive dependencies.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T054442Z" creationid="95" creationdate="20151115T054442Z">
        <seg>强制版本也可以用于处理传递依赖所带来的流氓元数据。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Forcing a module version tells Gradle to always use a specific version for given dependency (transitive or not), overriding any version specified in a published module descriptor.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T054304Z" creationid="95" creationdate="20151115T054304Z">
        <seg>强制一个模块的版本，是告诉 Gradle 对于指定的依赖（不管是否传递依赖），始终使用一个特定的版本，而覆盖在发布的模块描述符中所指定的任何版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>From a complex enterprise application written in Java depending on hundreds of open source libraries to the simplest Clojure application depending on a handful of libraries, approaches to dependency management vary widely and can depend on the target technology, the method of application deployment, and the nature of the project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150716T091729Z" creationid="haohang" creationdate="20150716T084304Z">
        <seg>从一个由 Java 编写的依赖了数以百计开源库的复杂企业应用，再到依赖少量库的最简单的 Clojure 应用，依赖管理的办法大不相同，并且可以依赖于目标的技术、应用程序部署的方法和项目的性质。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Fully qualified class name or fully qualified method name is supported, e.g. "org.gradle.SomeTest", "org.gradle.SomeTest.someMethod"</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T022956Z" creationid="Administrator" creationdate="20150428T022956Z">
        <seg>支持完整的限定类名称或完整的限定的方法名称，例如“org.gradle.SomeTest”、“org.gradle.SomeTest.someMethod”</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Further Information</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T065601Z" creationid="haohang" creationdate="20150628T065601Z">
        <seg>补充信息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Further task dependencies can be added as needed.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T062305Z" creationid="msdx" creationdate="20150513T062305Z">
        <seg>根据需要，可以添加更多的任务依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Further things to consider</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065847Z" creationid="95" creationdate="20170416T065847Z">
        <seg>进一步要考虑的事项</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Furthermore, all properties that have been configured up to this point, including all properties preconfigured by Gradle, are available via the <bpt i="2" x="2">&lt;c2&gt;</bpt>properties<ept i="2">&lt;/c2&gt;</ept> accessor.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150525T232652Z" creationid="haohang" creationdate="20150525T232652Z">
        <seg>此外，所有已配置到这一点的属性，包括通过 Gradle 预配置的所有属性，还可通过<bpt i="2" x="2">&lt;c2&gt;</bpt>properties<ept i="2">&lt;/c2&gt;</ept>访问器进行使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Furthermore, it is possible to specify settings that apply to all binaries produces for a particular <bpt i="0" x="0">&lt;c0&gt;</bpt>executable<ept i="0">&lt;/c0&gt;</ept> or <bpt i="1" x="1">&lt;c1&gt;</bpt>library<ept i="1">&lt;/c1&gt;</ept> component:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160324T152504Z" creationid="95" creationdate="20160324T152310Z">
        <seg>此外，还可以指定设置应用于某个特定的<bpt i="0" x="0">&lt;c0&gt;</bpt>executable<ept i="0">&lt;/c0&gt;</ept> 或 <bpt i="1" x="1">&lt;c1&gt;</bpt>library<ept i="1">&lt;/c1&gt;</ept> 组件 产生的所有二进制文件：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Future features</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T071132Z" creationid="95" creationdate="20170416T071132Z">
        <seg>未来特性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Future versions of Gradle will automatically include the appropriate debug flags for any 'debug' build type, and may be aware of various levels of optimisation as well.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160401T091001Z" creationid="haohang" creationdate="20160401T091001Z">
        <seg>未来版本的 Gradle 将自动包括任何“debug”构建类型的适当调试标志，并且还可能知道各个优化级别。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Future versions of Gradle will support increased flexibility in this area.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170109T130358Z" creationid="95" creationdate="20170109T130358Z">
        <seg>未来版本的Gradle对这一方面的支持将更灵活。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Future versions will provide support for comparing outcomes such as test execution (i.e. which tests were executed, which tests failed, etc.)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161228T150237Z" creationid="95" creationdate="20161228T150120Z">
        <seg>未来的版本会提供对类似于测试执行（例如哪些测试被执行了，哪些测试失败了，等等）的构建结果比较的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Future versions will provide support for executing builds from other build systems such as Apache Ant or Apache Maven, as well as support for executing arbitrary processes (e.g. shell script based builds)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161228T145917Z" creationid="95" creationdate="20161228T145646Z">
        <seg>未来的版本会提供对其他构建系统所执行的构建的支持，比如Apache Ant 或者是 Apache Maven，以及支持任意进程的执行（比如基于shell脚本的构建）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>GCC</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160128T153344Z" creationid="95" creationdate="20160128T153344Z">
        <seg>GCC</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>GUI Setup</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T160751Z" creationid="msdx" creationdate="20141105T160751Z">
        <seg>GUI Setup</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>GUI Task Tree</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T150124Z" creationid="msdx" creationdate="20141105T150124Z">
        <seg>GUI Task Tree</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gcc</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T091209Z" creationid="haohang" creationdate="20160408T091209Z">
        <seg>Gcc</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Generally, one can exclude transitive dependencies that are either not required by runtime or that are guaranteed to be available on the target environment/platform.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T101325Z" creationid="haohang" creationdate="20150801T101325Z">
        <seg>一般来说，可以被排除的传递依赖，在运行时并不需要，或者是保证在目标环境或平台上可用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Generally, this JAR might include some custom plugins, or bundle several related task classes into a single library.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T145147Z" creationid="95" creationdate="20160814T145147Z">
        <seg>一般来说，这个JAR可能包含一些自定义的插件，或者是捆绑几个相关的任务类到一个单独的库当中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>GenerateBuildDashboard</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150713T100334Z" creationid="haohang" creationdate="20150713T100334Z">
        <seg>GenerateBuildDashboard</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>GenerateEclipseClasspath</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T004452Z" creationid="haohang" creationdate="20150603T004452Z">
        <seg>GenerateEclipseClasspath</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>GenerateEclipseJdt</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T004503Z" creationid="haohang" creationdate="20150603T004503Z">
        <seg>GenerateEclipseJdt</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>GenerateEclipseProject</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T004433Z" creationid="haohang" creationdate="20150603T004433Z">
        <seg>GenerateEclipseProject</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>GenerateEclipseWtpComponent</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T004511Z" creationid="haohang" creationdate="20150603T004511Z">
        <seg>GenerateEclipseWtpComponent</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>GenerateEclipseWtpFacet</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T004540Z" creationid="haohang" creationdate="20150603T004540Z">
        <seg>GenerateEclipseWtpFacet</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>GenerateIdeaModule</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T072555Z" creationid="haohang" creationdate="20150625T072555Z">
        <seg>GenerateIdeaModule</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>GenerateIdeaProject</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T072519Z" creationid="haohang" creationdate="20150625T072519Z">
        <seg>GenerateIdeaProject</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>GenerateIdeaWorkspace</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T072604Z" creationid="haohang" creationdate="20150625T072604Z">
        <seg>GenerateIdeaWorkspace</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Generated POMs can be found in <bpt i="0" x="0">&lt;c0&gt;</bpt>&lt;buildDir&gt;/poms<ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T142503Z" creationid="95" creationdate="20160106T142503Z">
        <seg>生成的 POMs 可以在<bpt i="0" x="0">&lt;c0&gt;</bpt>&lt;buildDir&gt;/poms<ept i="0">&lt;/c0&gt;</ept>看到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Generated jar file</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170211T140545Z" creationid="95" creationdate="20170211T140545Z">
        <seg>生成的 jar 文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Generated war file</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170211T140611Z" creationid="95" creationdate="20170211T140611Z">
        <seg>生成的 war 文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Generates <bpt i="1" x="1">&lt;c1&gt;</bpt>.classpath<ept i="1">&lt;/c1&gt;</ept> and JDT settings file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T003800Z" creationid="haohang" creationdate="20150603T003800Z">
        <seg>生成<bpt i="1" x="1">&lt;c1&gt;</bpt>.classpath<ept i="1">&lt;/c1&gt;</ept>和 JDT 设置文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Generates API documentation for the production Groovy source files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T071516Z" creationid="msdx" creationdate="20150429T071516Z">
        <seg>为production 里的 Groovy 源文件生成 API 文档。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Generates API documentation for the production Java source, using Javadoc</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T004742Z" creationid="Administrator" creationdate="20150426T004742Z">
        <seg>使用 Javadoc 生成生产的 Java 源代码的API文档</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Generates API documentation for the production Scala source files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T145519Z" creationid="msdx" creationdate="20150429T145519Z">
        <seg>为production 里的 Scala 源文件生成 API 文档。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Generates Gradle wrapper files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T071610Z" creationid="haohang" creationdate="20150707T071610Z">
        <seg>生成 Gradle wrapper 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Generates WTP settings files only if <bpt i="1" x="1">&lt;c1&gt;</bpt>eclipse-wtp<ept i="1">&lt;/c1&gt;</ept> plugin was applied.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T003910Z" creationid="haohang" creationdate="20150603T003903Z">
        <seg>仅当<bpt i="1" x="1">&lt;c1&gt;</bpt>eclipse-wtp<ept i="1">&lt;/c1&gt;</ept>插件被应用时生成 WTP 设置文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Generates a Gradle project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T071601Z" creationid="haohang" creationdate="20150707T071601Z">
        <seg>生成一个 Gradle 项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Generates all Eclipse configuration files</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T004358Z" creationid="haohang" creationdate="20150603T004358Z">
        <seg>会生成所有的 Eclipse 配置文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Generates all IDEA configuration files</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T072335Z" creationid="haohang" creationdate="20150625T072335Z">
        <seg>生成所有的 IDEA 配置文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Generates all project reports.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T061540Z" creationid="haohang" creationdate="20150628T061540Z">
        <seg>生成所有项目报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Generates an HTML dependency and dependency insight report for the project or a set of projects.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T061513Z" creationid="haohang" creationdate="20150628T061513Z">
        <seg>对项目或项目集生成 HTML 依赖和依赖透视报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Generates an IDEA module file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T071447Z" creationid="haohang" creationdate="20150625T071447Z">
        <seg>生成一个IDEA 模块文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Generates build dashboard report.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150713T100408Z" creationid="Administrator" creationdate="20150425T040041Z">
        <seg>生成 build dashboard 报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Generates code coverage report for the test task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T135934Z" creationid="msdx" creationdate="20150506T135934Z">
        <seg>为测试任务生成代码覆盖率报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Generates dependencies (both external and inter-module)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T093644Z" creationid="haohang" creationdate="20150707T093644Z">
        <seg>生成依赖 (包括外部的和模块间的)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Generates download repositories (inc.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T093724Z" creationid="haohang" creationdate="20150707T093724Z">
        <seg>生成下载仓库（包括</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Generates files that are used by <bpt i="0" x="0">&lt;a0&gt;</bpt>Eclipse IDE<ept i="0">&lt;/a0&gt;</ept>, thus making it possible to import the project into Eclipse.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T035259Z" creationid="Administrator" creationdate="20150425T034858Z">
        <seg>生成<bpt i="0" x="0">&lt;a0&gt;</bpt>Eclipse IDE<ept i="0">&lt;/a0&gt;</ept>所用到的文件，从而使项目能够导入到 Eclipse。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Generates files that are used by <bpt i="0" x="0">&lt;a0&gt;</bpt>Intellij IDEA IDE<ept i="0">&lt;/a0&gt;</ept>, thus making it possible to import the project into IDEA.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T035254Z" creationid="Administrator" creationdate="20150425T035254Z">
        <seg>生成<bpt i="0" x="0">&lt;a0&gt;</bpt>Intellij IDEA IDE<ept i="0">&lt;/a0&gt;</ept>所用到的文件，从而使项目能够导入到 IDEA。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Generates general metadata - id, description and version</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T093443Z" creationid="haohang" creationdate="20150707T093443Z">
        <seg>生成通用元数据 - id，description 和 version</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Generates global exclusions from Maven enforcer plugin settings</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T094034Z" creationid="haohang" creationdate="20150707T094034Z">
        <seg>从 Maven enforcer 插件设置生成全局的 exclusions</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Generates minimal <bpt i="0" x="0">&lt;c0&gt;</bpt>.project<ept i="0">&lt;/c0&gt;</ept> file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T003747Z" creationid="haohang" creationdate="20150603T003747Z">
        <seg>生成最小的<bpt i="0" x="0">&lt;c0&gt;</bpt>.project<ept i="0">&lt;/c0&gt;</ept>文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Generates reports containing useful information about your Gradle build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T035504Z" creationid="Administrator" creationdate="20150425T035504Z">
        <seg>生成关于Gradle构建中有用的信息的报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Generates the <bpt i="0" x="0">&lt;c0&gt;</bpt>.classpath<ept i="0">&lt;/c0&gt;</ept> file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T004456Z" creationid="haohang" creationdate="20150603T004456Z">
        <seg>生成<bpt i="0" x="0">&lt;c0&gt;</bpt>.classpath<ept i="0">&lt;/c0&gt;</ept>文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Generates the <bpt i="0" x="0">&lt;c0&gt;</bpt>.iml<ept i="0">&lt;/c0&gt;</ept> file</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T072601Z" creationid="haohang" creationdate="20150625T072601Z">
        <seg>生成 <bpt i="0" x="0">&lt;c0&gt;</bpt>.iml<ept i="0">&lt;/c0&gt;</ept> 文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Generates the <bpt i="0" x="0">&lt;c0&gt;</bpt>.ipr<ept i="0">&lt;/c0&gt;</ept> file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T072527Z" creationid="haohang" creationdate="20150625T072527Z">
        <seg>生成 <bpt i="0" x="0">&lt;c0&gt;</bpt>.ipr<ept i="0">&lt;/c0&gt;</ept> 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Generates the <bpt i="0" x="0">&lt;c0&gt;</bpt>.iws<ept i="0">&lt;/c0&gt;</ept> file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T072610Z" creationid="haohang" creationdate="20150625T072610Z">
        <seg>生成 <bpt i="0" x="0">&lt;c0&gt;</bpt>.iws<ept i="0">&lt;/c0&gt;</ept> 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Generates the <bpt i="0" x="0">&lt;c0&gt;</bpt>.project<ept i="0">&lt;/c0&gt;</ept> file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T004446Z" creationid="haohang" creationdate="20150603T004446Z">
        <seg>生成的<bpt i="0" x="0">&lt;c0&gt;</bpt>.project<ept i="0">&lt;/c0&gt;</ept>文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Generates the <bpt i="0" x="0">&lt;c0&gt;</bpt>.settings/org.eclipse.jdt.core.prefs<ept i="0">&lt;/c0&gt;</ept> file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T004507Z" creationid="haohang" creationdate="20150603T004507Z">
        <seg>生成<bpt i="0" x="0">&lt;c0&gt;</bpt>.settings/org.eclipse.jdt.core.prefs<ept i="0">&lt;/c0&gt;</ept>文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Generates the <bpt i="0" x="0">&lt;c0&gt;</bpt>.settings/org.eclipse.wst.common.component<ept i="0">&lt;/c0&gt;</ept> file only if <bpt i="1" x="1">&lt;c1&gt;</bpt>eclipse-wtp<ept i="1">&lt;/c1&gt;</ept> plugin was applied.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T004801Z" creationid="haohang" creationdate="20150603T004537Z">
        <seg>只有当<bpt i="1" x="1">&lt;c1&gt;</bpt>eclipse-wtp<ept i="1">&lt;/c1&gt;</ept>插件应用的时候，生成 <bpt i="0" x="0">&lt;c0&gt;</bpt>.settings/org.eclipse.wst.common.component<ept i="0">&lt;/c0&gt;</ept> 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Generates the <bpt i="0" x="0">&lt;c0&gt;</bpt>.settings/org.eclipse.wst.common.project.facet.core.xml<ept i="0">&lt;/c0&gt;</ept> file only if <bpt i="1" x="1">&lt;c1&gt;</bpt>eclipse-wtp<ept i="1">&lt;/c1&gt;</ept> plugin was applied.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T004815Z" creationid="haohang" creationdate="20150603T004610Z">
        <seg>只有当<bpt i="1" x="1">&lt;c1&gt;</bpt>eclipse-wtp<ept i="1">&lt;/c1&gt;</ept>插件应用的时候，生成 <bpt i="0" x="0">&lt;c0&gt;</bpt>.settings/org.eclipse.wst.common.project.facet.core.xml<ept i="0">&lt;/c0&gt;</ept> 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Generates the project dependency report.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T061234Z" creationid="haohang" creationdate="20150628T061234Z">
        <seg>生成项目依赖项报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Generates the project property report.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T061526Z" creationid="haohang" creationdate="20150628T061526Z">
        <seg>生成项目属性报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Generates the project task report.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T061531Z" creationid="haohang" creationdate="20150628T061531Z">
        <seg>生成项目任务报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Generates the source files for all ANTLR grammars for the given source set.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T095057Z" creationid="haohang" creationdate="20150625T095057Z">
        <seg>为给定的 source set 的所有 ANTLR 语法生成源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Generates the source files for all production ANTLR grammars.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T095015Z" creationid="haohang" creationdate="20150625T095015Z">
        <seg>为所有生产 ANTLR 语法生成源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Generates the source files for all test ANTLR grammars.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T095026Z" creationid="haohang" creationdate="20150625T095026Z">
        <seg>为所有测试 ANTLR 语法生成源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Generating Javadoc for a source set:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T133436Z" creationid="Administrator" creationdate="20150427T133436Z">
        <seg>为一个源集生成 Javadoc：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Generating the Ivy module descriptor file without publishing</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T071123Z" creationid="95" creationdate="20170416T071123Z">
        <seg>不发布的情况下生成Ivy模块的描述符文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Generating the POM file without publishing</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T071200Z" creationid="95" creationdate="20170416T071200Z">
        <seg>不发布的情况下生成POM文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Get feedback faster by running quick verification tasks before long verification tasks: eg.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T144751Z" creationid="msdx" creationdate="20141110T144707Z">
        <seg>通过在长久验证前运行快速验证以得到更快的反馈：如，</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Getting Started</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162024Z" creationid="msdx" creationdate="20141109T162024Z">
        <seg>入门教程</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Getting help</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162245Z" creationid="msdx" creationdate="20141109T162245Z">
        <seg>获取帮助</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Getting help writing build scripts</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T040712Z" creationid="msdx" creationdate="20141108T040700Z">
        <seg>获取有关编写构建脚本帮助</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Getting input from the build</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070740Z" creationid="95" creationdate="20170416T070740Z">
        <seg>从构建中获取输入</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Given a parameterized test method named <bpt i="0" x="0">&lt;c0&gt;</bpt>aParameterizedTestMethod<ept i="0">&lt;/c0&gt;</ept> that takes two parameters, it will be reported with the name: <bpt i="1" x="1">&lt;c1&gt;</bpt>aParameterizedTestMethod(toStringValueOfParam1, toStringValueOfParam2)<ept i="1">&lt;/c1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T144147Z" creationid="msdx" creationdate="20150428T144147Z">
        <seg>给定一个带有两个参数，名为<bpt i="0" x="0">&lt;c0&gt;</bpt>aParameterizedTestMethod<ept i="0">&lt;/c0&gt;</ept>参数化测试方法，它将使用名称这个名称进行报告 ：<bpt i="1" x="1">&lt;c1&gt;</bpt>aParameterizedTestMethod(toStringValueOfParam1, toStringValueOfParam2)<ept i="1">&lt;/c1&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Given a required dependency, Gradle first attempts to resolve the <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>module<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> for that dependency.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151007T023203Z" creationid="95" creationdate="20151007T023203Z">
        <seg>给出所需的依赖项，Gradle 首先尝试为该依赖解析<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>模块<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Given that the project name is "<bpt i="0" x="0">&lt;c0&gt;</bpt>myproject<ept i="0">&lt;/c0&gt;</ept>" and version "<bpt i="1" x="1">&lt;c1&gt;</bpt>1.2<ept i="1">&lt;/c1&gt;</ept>", running "<bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>gradle customDistZip<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/s2&gt;</ept>" will produce a ZIP file named "<bpt i="4" x="4">&lt;c4&gt;</bpt>myproject-custom-1.2.zip<ept i="4">&lt;/c4&gt;</ept>".</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150701T031441Z" creationid="haohang" creationdate="20150701T031417Z">
        <seg>给定项目的名称为“<bpt i="0" x="0">&lt;c0&gt;</bpt>myproject<ept i="0">&lt;/c0&gt;</ept>”，版本为“<bpt i="1" x="1">&lt;c1&gt;</bpt>1.2<ept i="1">&lt;/c1&gt;</ept>”，运行“<bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>gradle customDistZip<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/s2&gt;</ept>”将会产生一个名字为”<bpt i="4" x="4">&lt;c4&gt;</bpt>myproject-custom-1.2.zip<ept i="4">&lt;/c4&gt;</ept>“的 ZIP 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Given the incremental task implementation <bpt i="0" x="0">&lt;a0&gt;</bpt>above<ept i="0">&lt;/a0&gt;</ept>, we can explore the various change scenarios by example.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160817T145257Z" creationid="95" creationdate="20160817T145201Z">
        <seg>给定 <bpt i="0" x="0">&lt;a0&gt;</bpt>上面的<ept i="0">&lt;/a0&gt;</ept>增量任务实现，我们可以通过示例探讨中种变化场景。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Given the personal and private nature of these values, a good practice is to store them in the user <bpt i="3" x="3">&lt;c3&gt;</bpt>gradle.properties<ept i="3">&lt;/c3&gt;</ept> file (described in <bpt i="4" x="4">&lt;a4&gt;</bpt>Section 14.2, “Gradle properties and system properties”<ept i="4">&lt;/a4&gt;</ept>).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160108T152512Z" creationid="95" creationdate="20160108T152512Z">
        <seg>鉴于这些值的个人和私人性质，一个好的做法是将它们保存在用户的<bpt i="3" x="3">&lt;c3&gt;</bpt>gradle.properties<ept i="3">&lt;/c3&gt;</ept>文件（<bpt i="4" x="4">&lt;a4&gt;</bpt>第14.2 节，“Gradle 属性和系统属性”<ept i="4">&lt;/a4&gt;</ept>中所述）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle 1.4 introduces an <bpt i="2" x="2">&lt;a2&gt;</bpt>incubating<ept i="2">&lt;/a2&gt;</ept> opt-in feature called <bpt i="3" x="3">&lt;e3&gt;</bpt>configuration on demand<ept i="3">&lt;/e3&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T024119Z" creationid="haohang" creationdate="20160519T024119Z">
        <seg>Gradle 1.4 引入了一个<bpt i="2" x="2">&lt;a2&gt;</bpt>孵化中<ept i="2">&lt;/a2&gt;</ept>的选择性加入的功能，叫<bpt i="3" x="3">&lt;e3&gt;</bpt>configuration on demand<ept i="3">&lt;/e3&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle <bpt i="3" x="3">&lt;s3&gt;</bpt><bpt i="4" x="4">&lt;e4&gt;</bpt>always<ept i="4">&lt;/e4&gt;</ept><ept i="3">&lt;/s3&gt;</ept> evaluates <bpt i="5" x="5">&lt;s5&gt;</bpt><bpt i="6" x="6">&lt;e6&gt;</bpt>every<ept i="6">&lt;/e6&gt;</ept><ept i="5">&lt;/s5&gt;</ept> project of the multi-project build and creates all existing task objects.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160715T075731Z" creationid="95" creationdate="20160530T152507Z">
        <seg>Gradle<bpt i="3" x="3">&lt;s3&gt;</bpt><bpt i="4" x="4">&lt;e4&gt;</bpt>总是<ept i="4">&lt;/e4&gt;</ept><ept i="3">&lt;/s3&gt;</ept>评估<bpt i="5" x="5">&lt;s5&gt;</bpt>多项目构建的<bpt i="6" x="6">&lt;e6&gt;</bpt>每一个<ept i="6">&lt;/e6&gt;</ept><ept i="5">&lt;/s5&gt;</ept>项目，以及创建所有存在的任务对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle API dependency</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T080634Z" creationid="haohang" creationdate="20150722T080634Z">
        <seg>Gradle API 依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle Plugins</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131414Z" creationid="msdx" creationdate="20150509T131414Z">
        <seg>Gradle 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle User Guide</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T031304Z" creationid="msdx" creationdate="20141030T071145Z">
        <seg>Gradle 用户指南</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle adds a configuration closure block for each extension object, so you can group settings together.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T131301Z" creationid="95" creationdate="20160820T131301Z">
        <seg>Gradle 为每一个扩展对象添加了一个配置闭包块，因此你可以把这些配置分组。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle adds some concepts and APIs to help you achieve this.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T124535Z" creationid="msdx" creationdate="20141111T124448Z">
        <seg>Gradle 添加了一些概念和 API 来帮助您实现这一目标。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle allows any project to access any other project during both the configuration and execution phases.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T092221Z" creationid="haohang" creationdate="20160726T092221Z">
        <seg>Gradle 允许任何项目在配置和执行阶段访问其他项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle allows you to access any project of the multi-project build from any build script.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160526T154711Z" creationid="95" creationdate="20160522T125915Z">
        <seg>Gradle 允许你从任何构建脚本访问多项目构建的任意一个project。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle allows you to implement your own custom plugins, so you can reuse your build logic, and share it with others.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160818T150922Z" creationid="95" creationdate="20160818T150743Z">
        <seg>Gradke 允许你实现你自己的自定义插件，因此你可以重用你的构建逻辑，并且与他人分享。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle already has much of the information needed for Sonar Runner to successfully analyze a project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T060125Z" creationid="msdx" creationdate="20150513T060012Z">
        <seg>Gradle 已经有很多 Sonar Runner 成功分析一个项目所需的信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle also provides a <bpt i="0" x="0">&lt;c0&gt;</bpt>logger<ept i="0">&lt;/c0&gt;</ept> property to a build script, which is an instance of <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>Logger<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T125741Z" creationid="msdx" creationdate="20141116T123943Z">
        <seg>Gradle 还提供了一个 <bpt i="0" x="0">&lt;c0&gt;</bpt>logger<ept i="0">&lt;/c0&gt;</ept>属性给构建脚本，它是一个 <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>Logger <ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle also provides integration with the Java Util Logging, Jakarta Commons Logging and Log4j logging toolkits.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T151042Z" creationid="msdx" creationdate="20141116T151042Z">
        <seg>Gradle 还提供了对 Java Util Logging，Jakarta Commons Logging 和 Log4j 的日志工具的集成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle also scan up the inheritance tree into jar files on the test classpath.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T041421Z" creationid="Administrator" creationdate="20150428T041421Z">
        <seg>Gradle 还将扫描测试类路径中的 jar 文件里的继承树。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle and other build tools all have the ability to solve this dependency tree and resolve conflicts, but what differentiates Gradle is the control it gives you over transitive dependencies and conflict resolution.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150720T064957Z" creationid="haohang" creationdate="20150720T064957Z">
        <seg>Gradle 和其他的构建工具都能够处理这种关系树和解决冲突问题，但不同的是，Gradle 让你可以控制传递依赖和冲突的解决。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle applies the default build script regardless of whether there is one specified.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T052038Z" creationid="95" creationdate="20161211T052038Z">
        <seg>Gradle配置了一个默认的构建脚本，无论是否有脚本被指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle at its core intentionally provides little useful functionality for real world automation.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141121T155802Z" creationid="msdx" creationdate="20141121T142850Z">
        <seg>Gradle 在它的核心中有意地提供了一些小但有用的功能，用于在真实世界中的自动化。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle builds the complete dependency graph <bpt i="1" x="1">&lt;s1&gt;</bpt><bpt i="2" x="2">&lt;e2&gt;</bpt>before<ept i="2">&lt;/e2&gt;</ept><ept i="1">&lt;/s1&gt;</ept> any task is executed.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160518T032256Z" creationid="haohang" creationdate="20160518T032220Z">
        <seg>Gradle 则在所有任务执行<bpt i="1" x="1">&lt;s1&gt;</bpt><bpt i="2" x="2">&lt;e2&gt;</bpt>之前<ept i="2">&lt;/e2&gt;</ept><ept i="1">&lt;/s1&gt;</ept>生成这这个完整的依赖关系图。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle contains a highly sophisticated dependency caching mechanism, which seeks to minimise the number of remote requests made in dependency resolution, while striving to guarantee that the results of dependency resolution are correct and reproducible.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T042117Z" creationid="95" creationdate="20151129T042117Z">
        <seg>Gradle 包含了一个高度复杂的依赖缓存机制，该机制力求减少依赖解析中的远程请求，同时努力保证依赖解析结果的正确及可再生性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle creates Project objects for every project taking part in the build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T080351Z" creationid="haohang" creationdate="20160519T080351Z">
        <seg>在构建中，Gradle 为每个参加构建的项目创建 Project 对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle default</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T131630Z" creationid="msdx" creationdate="20150506T131621Z">
        <seg>Gradle 默认值</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle defines 6 log levels, as shown in <bpt i="0" x="0">&lt;a0&gt;</bpt>Table 18.1, “Log levels”<ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T070449Z" creationid="msdx" creationdate="20141116T070449Z">
        <seg>Gradle 定义了6个日志级别，如<bpt i="0" x="0">&lt;a0&gt;</bpt>表 18.1，“日志级别”<ept i="0">&lt;/a0&gt;</ept>所示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle defines each OS/architecture combination as a <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Platform<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>, and a project may define any number of platforms.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160401T092244Z" creationid="haohang" creationdate="20160401T092244Z">
        <seg>Gradle 把每一个系统架构组合定义为一个 <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Platform<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>，一个project可以定义多个platforms。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle determines the subset of the tasks, created and configured during the configuration phase, to be executed.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T024408Z" creationid="haohang" creationdate="20160519T024408Z">
        <seg>Gradle 确定在配置阶段中，创建和配置的要被执行的任务的子集。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle distinguishes between external dependencies and dependencies on projects which are part of the same multi-project build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T092449Z" creationid="haohang" creationdate="20150801T092449Z">
        <seg>对于多项目构建，Gradle 能区分外部依赖与作为多项目构建的一部分的某个项目上的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle does not care.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160715T090912Z" creationid="haohang" creationdate="20160715T090912Z">
        <seg>Gradle 不关心这个问题。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle exclude rules are converted to Maven excludes if possible.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T145402Z" creationid="95" creationdate="20160106T145402Z">
        <seg>如果有可能，Gradle排除的规则会被转换为Maven excludes。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle guarantees that these tasks are executed in the order of their dependencies, and that each task is executed only once.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160518T031836Z" creationid="haohang" creationdate="20160518T031836Z">
        <seg>Gradle 保证这些任务按照它们的依赖关系的顺序进行执行，并且每个任务都只执行一次。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle has no idea what the closure does and cannot automatically figure out whether the task is up-to-date or not.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T060845Z" creationid="msdx" creationdate="20141111T060845Z">
        <seg>Gradle 不知道这个闭包做了什么，也无法自动判断这个任务是否为最新状态。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle has replaced this direct dependency on Ivy with a native Gradle dependency resolution engine which supports a range of approaches to dependency resolution including both POM and Ivy descriptor files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150716T083317Z" creationid="haohang" creationdate="20150716T083129Z">
        <seg>Gradle 已经取代了 Ivy 上的直接依赖，而采用了原生的 Gradle 依赖解决引擎，它支持许多的依赖解决方案的方法，包括 POM 文件和 Ivy 描述文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle has the ability to generate Visual Studio project and solution files for the native components defined in your build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T094959Z" creationid="haohang" creationdate="20160408T094959Z">
        <seg>Gradle 可以为在你的构建中定义的本地组件生成生成 Visual Studio 项目及解决方案文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle implements this via <bpt i="2" x="2">&lt;e2&gt;</bpt>configuration injection<ept i="2">&lt;/e2&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160526T155020Z" creationid="95" creationdate="20160526T155020Z">
        <seg>Gradle 通过<bpt i="2" x="2">&lt;e2&gt;</bpt>configuration injection<ept i="2">&lt;/e2&gt;</ept>来实现它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle includes the parameter values in its reporting of the test method execution.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T144016Z" creationid="msdx" creationdate="20150428T144016Z">
        <seg>Gradle 会在这个方法的执行报告中包含进它的参数值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle instantiates the plugin and calls the plugin instance's <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>Plugin.apply()<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept> method when the plugin is used with a project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T123638Z" creationid="95" creationdate="20160818T151721Z">
        <seg>当这个插件被用在一个project上时，Gradle会实例化这个插件，并且调用这个插件实例的 <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>Plugin.apply()<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept> 方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle keeps a record of various aspects of dependency resolution in binary format in the metadata cache.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T044809Z" creationid="95" creationdate="20151129T043908Z">
        <seg>Gradle 以二进制格式在元数据缓存中保留了依赖解析的各方面的记录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle looks down the hierarchy, starting with the <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>current dir<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>, for tasks with the name <bpt i="2" x="2">&lt;c2&gt;</bpt>hello<ept i="2">&lt;/c2&gt;</ept> an executes them.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160530T152356Z" creationid="95" creationdate="20160530T152356Z">
        <seg>Gradle 从<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>当前目录<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>开始，按层次结构往下查找名称为<bpt i="2" x="2">&lt;c2&gt;</bpt>hello<ept i="2">&lt;/c2&gt;</ept>任务，开始执行它们。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle offers a solution for this.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T074904Z" creationid="haohang" creationdate="20160718T074904Z">
        <seg>Gradle 为此提供了一个解决方案。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle offers a variety of ways to add properties to your build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T073821Z" creationid="msdx" creationdate="20141109T073821Z">
        <seg>Gradle 提供了许多方式将属性添加到您的构建中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle offers a variety of ways to organize your build logic.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T042805Z" creationid="95" creationdate="20161211T020938Z">
        <seg>Gradle 提供了多种方式来组织你的构建逻辑。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle offers multiple ways to skip the execution of a task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T020259Z" creationid="msdx" creationdate="20141111T020259Z">
        <seg>Gradle 提供多种方式来跳过任务的执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle offers the ability to execute the same build using different tool chains.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160128T153029Z" creationid="95" creationdate="20160128T153029Z">
        <seg>Gradle 提供了使用不同的工具链执行相同的构建的能力。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle offers the following conflict resolution strategies:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150721T061342Z" creationid="haohang" creationdate="20150721T061307Z">
        <seg>Gradle 提供了以下的冲突解决策略：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle offers this to you:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T084454Z" creationid="haohang" creationdate="20160726T084454Z">
        <seg>Gradle 也向你提供了这种更细粒度的控制：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle offers you a variety of ways of organizing your build logic.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161212T155907Z" creationid="95" creationdate="20161212T155907Z">
        <seg>Gradle 提供了多种组织你的构建逻辑的方式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle offers you different ways to express first-level and transitive dependencies.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150721T053943Z" creationid="haohang" creationdate="20150721T053943Z">
        <seg>Gradle 向你提供了不同的方式来表达第一级的和传递的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle persists both snapshots for next time the task is executed.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T063511Z" creationid="msdx" creationdate="20141111T063359Z">
        <seg>Gradle 会保存这两个快照，直到任务的下一次执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle plugins typically need to be <bpt i="0" x="0">&lt;e0&gt;</bpt>applied<ept i="0">&lt;/e0&gt;</ept> to a project before they can be used (see <bpt i="1" x="1">&lt;a1&gt;</bpt>Section 21.1, “Applying plugins”<ept i="1">&lt;/a1&gt;</ept>).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T071049Z" creationid="haohang" creationdate="20150707T071040Z">
        <seg>Gradle 插件通常需要被<bpt i="0" x="0">&lt;e0&gt;</bpt>应用<ept i="0">&lt;/e0&gt;</ept>于 project 中才可以使用（见<bpt i="1" x="1">&lt;a1&gt;</bpt>第 21.1节，"应用插件"<ept i="1">&lt;/a1&gt;</ept>）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle properties and system properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T164931Z" creationid="msdx" creationdate="20141109T164931Z">
        <seg>Gradle 属性和系统属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle provides a <bpt i="0" x="0">&lt;e0&gt;</bpt>domain specific language<ept i="0">&lt;/e0&gt;</ept>, or DSL, for describing builds.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T042723Z" creationid="msdx" creationdate="20141108T035745Z">
        <seg>Gradle 提供一种<bpt i="0" x="0">&lt;e0&gt;</bpt>领域特定语言<ept i="0">&lt;/e0&gt;</ept>或者说是 DSL，来描述构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle provides a powerful mechanism to allow customizing the build based on the current environment.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161214T142304Z" creationid="95" creationdate="20161214T142304Z">
        <seg>Gradle提供了一种强大的机制，可以让你基于当前的环境自定义构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle provides an <bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;e3&gt;</bpt>artifact only<ept i="3">&lt;/e3&gt;</ept><ept i="2">&lt;/s2&gt;</ept> notation for those use cases - simply prefix the extension that you want to be downloaded with <bpt i="4" x="4">&lt;c4&gt;</bpt>'@'<ept i="4">&lt;/c4&gt;</ept> sign:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150731T034535Z" creationid="haohang" creationdate="20150731T033856Z">
        <seg>Gradle 提供了一个 <bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;e3&gt;</bpt>artifact only<ept i="3">&lt;/e3&gt;</ept><ept i="2">&lt;/s2&gt;</ept> notation 用于这些案例情况——只是对你想要下载的扩展前加个 <bpt i="4" x="4">&lt;c4&gt;</bpt>'@'<ept i="4">&lt;/c4&gt;</ept> 标志：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle provides different notations for module dependencies.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150724T034608Z" creationid="haohang" creationdate="20150722T102912Z">
        <seg>Gradle 为模块依赖提供了不同的标记法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle provides excellent integration with Ant.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141114T071430Z" creationid="msdx" creationdate="20141113T161655Z">
        <seg>Gradle 提供了对 Ant 的优秀集成</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle provides mechanisms and sophisticated support and it's a key ingredient in powerful-yet-concise build scripts.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141123T153443Z" creationid="msdx" creationdate="20141123T151445Z">
        <seg>Gradle 对此提供了机制和完善的支持，而它是强大-然而-简洁的构建脚本中的一个关键因素。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle provides parallel test execution by running multiple test processes concurrently.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T140938Z" creationid="Administrator" creationdate="20150427T140938Z">
        <seg>Gradle 通过同时运行多个测试进程来提供并行测试的执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle provides several options that make it easy to configure the Java process that will be used to execute your build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141119T031642Z" creationid="msdx" creationdate="20141119T031642Z">
        <seg>Gradle 提供了几个选项，可以很容易地配置将用于执行您的构建的 Java 进程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle provides some utility classes for maintaining collections of object, which work well with the Gradle build language.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T015214Z" creationid="95" creationdate="20161211T015214Z">
        <seg>Gradle 提供了一些实用工具类，能够良好地在Gradle构建语言中使用，用于维护对象集合。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle provides support for comparing the <bpt i="0" x="0">&lt;e0&gt;</bpt>outcomes<ept i="0">&lt;/e0&gt;</ept> (e.g. the produced binary archives) of two builds.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161219T145520Z" creationid="95" creationdate="20161219T145520Z">
        <seg>Gradle 提供了对两个构建的 <bpt i="0" x="0">&lt;e0&gt;</bpt>结果<ept i="0">&lt;/e0&gt;</ept>（例如生成的二进制档案）进行比较的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle provides the core plugins as part of its distribution so simply applying the plugin as above is all you need to do.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141123T134630Z" creationid="msdx" creationdate="20141123T134630Z">
        <seg>Gradle 提供了核心插件作为其发行包的一部分，所以简单地应用如上插件是你所需要做的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle provides two plugins for web application development: the War plugin and the Jetty plugin.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T084650Z" creationid="msdx" creationdate="20141030T084650Z">
        <seg>Gradle 为web应用程序开发提供了两个插件：War插件和Jetty插件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle pushes declarative builds to the next level by providing declarative language elements that you can assemble as you like.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141101T035135Z" creationid="msdx" creationdate="20141101T035123Z">
        <seg>Gradle 通过提供可以如你所愿去组合的声明性的语言元素，将声明性构建推向下级。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle redirects anything written to standard output to it's logging system at the <bpt i="0" x="0">&lt;c0&gt;</bpt>QUIET<ept i="0">&lt;/c0&gt;</ept> log level.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T122505Z" creationid="msdx" creationdate="20141116T122505Z">
        <seg>Gradle 会把写到标准输出的所有内容重定向到它的日志系统的 <bpt i="0" x="0">&lt;c0&gt;</bpt>QUIET<ept i="0">&lt;/c0&gt;</ept> 级别中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle redirects their logging output into the Gradle logging system.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T130809Z" creationid="msdx" creationdate="20141116T130809Z">
        <seg>Gradle 将其日志输出重定向到 Gradle 的日志系统。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle repository management, based on Apache Ivy, gives you a lot of freedom regarding repository layout and retrieval policies.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T091542Z" creationid="haohang" creationdate="20150807T091542Z">
        <seg>Gradle 仓库管理，基于 Apache Ivy，为你提供了有关仓库布局和获取策略的许多自由。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle spares you this unnecessary overhead and indirection.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161213T153824Z" creationid="95" creationdate="20161213T153723Z">
        <seg>Gradle为你节省了这些不必要的开销和间接引用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle supports <bpt i="2" x="2">&lt;e2&gt;</bpt>enhanced tasks<ept i="2">&lt;/e2&gt;</ept>, that is, tasks which have their own properties and methods.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T160613Z" creationid="msdx" creationdate="20141109T160613Z">
        <seg>Gradle 支持<bpt i="2" x="2">&lt;e2&gt;</bpt>增强的任务<ept i="2">&lt;/e2&gt;</ept>，也就是，有自己的属性和方法的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle supports arbitrary physical layouts for a multiproject build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T075712Z" creationid="haohang" creationdate="20160519T075535Z">
        <seg>Gradle 支持任意的物理布局的多项目构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle supports single and multi-project builds.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160518T055837Z" creationid="haohang" creationdate="20160518T032557Z">
        <seg>Gradle 支持单项目及多项目的构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle supports two types of task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160727T055642Z" creationid="haohang" creationdate="20160727T055642Z">
        <seg>Gradle 支持两种类型的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle takes your dependency declarations and repository definitions and attempts to download all of your dependencies by a process called <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>dependency resolution<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151007T024349Z" creationid="95" creationdate="20151007T022620Z">
        <seg>Gradle 将获取你的依赖声明和仓库定义，并通过一个称为<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>依赖项解析<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>的过程尝试下载所有依赖项。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle then automatically compiles and tests this code and puts it in the classpath of your build script.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T051308Z" creationid="95" creationdate="20161211T051210Z">
        <seg>然后Gradle会自动的编译和测试它的代码，并且把它们加入到你的构建脚本的classpath中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle then executes each of the selected tasks.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T024509Z" creationid="haohang" creationdate="20160519T024509Z">
        <seg>然后 Gradle 执行每个选定的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle then executes the task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T063156Z" creationid="msdx" creationdate="20141111T063156Z">
        <seg>然后 Gradle 执行该任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle tries best to filter the tests given limitations of particular test framework API.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T023534Z" creationid="Administrator" creationdate="20150428T023534Z">
        <seg>Gradle 尽最大努力对有着特定的测试框架 API 的局限的测试进行过滤。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle understands this language, and allows you to import your Ant <bpt i="1" x="1">&lt;c1&gt;</bpt>build.xml<ept i="1">&lt;/c1&gt;</ept> directly into a Gradle project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141114T140955Z" creationid="msdx" creationdate="20141114T135607Z">
        <seg>Gradle 理解这种语言，并允许您直接导入你的Ant <bpt i="1" x="1">&lt;c1&gt;</bpt>build.xml<ept i="1">&lt;/c1&gt;</ept> 到 Gradle 项目中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle uploads the jars of your project to the company repository together with the XML descriptor file of the dependencies.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T091859Z" creationid="haohang" creationdate="20150801T091859Z">
        <seg>Gradle 会将你的项目的 jar 包以及这仆依赖的 XML 描述文件上传到公司仓库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle uses the same logic as Maven to identify the location of your local Maven cache.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150909T052559Z" creationid="haohang" creationdate="20150909T052559Z">
        <seg>Gradle 使用与 Maven 相同的逻辑来标识你本地的 Maven 缓存的位置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle uses this for <bpt i="1" x="1">&lt;e1&gt;</bpt>configuration closures<ept i="1">&lt;/e1&gt;</ept>, where the <bpt i="2" x="2">&lt;c2&gt;</bpt>delegate<ept i="2">&lt;/c2&gt;</ept> object is set to the object to be configured.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T065107Z" creationid="msdx" creationdate="20141108T063831Z">
        <seg>Gradle 在<bpt i="1" x="1">&lt;e1&gt;</bpt>配置闭包<ept i="1">&lt;/e1&gt;</ept>中使用到它，把<bpt i="2" x="2">&lt;c2&gt;</bpt>委托<ept i="2">&lt;/c2&gt;</ept>对象设置为被配置的对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle will call the method when the task executes.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T145602Z" creationid="95" creationdate="20160814T145602Z">
        <seg>当任务执行的时候，Gradle 就会调用这个方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle will create a <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>CSourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> named 'cunit' for each <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>CUnitTestSuite<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept> component in the project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160504T144438Z" creationid="95" creationdate="20160504T144438Z">
        <seg>Gradle将为项目中的每一个 <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>CUnitTestSuite<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept> 组件创建一个名字为“cunit”的<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>CSourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle will expect and call a function with the signature <bpt i="0" x="0">&lt;c0&gt;</bpt>void gradle_cunit_register()<ept i="0">&lt;/c0&gt;</ept> that you can use to configure the actual CUnit suites and tests to execute.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160504T150219Z" creationid="95" creationdate="20160504T150219Z">
        <seg>Gradle 将认定和调用一个<bpt i="0" x="0">&lt;c0&gt;</bpt>void gradle_cunit_register()<ept i="0">&lt;/c0&gt;</ept> 函数，这个函数你可以用于配置实际的CUnit套件以及要执行的测试。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle will figure out the properties of the artifact based on the name of the file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151226T091141Z" creationid="95" creationdate="20151226T091141Z">
        <seg>Gradle将基于文件的名字找出构件的属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle will handle any valid Unicode character for organisation, module and revision (as well as artifact name, extension and classifier).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170304T030111Z" creationid="haohang" creationdate="20170217T083451Z">
        <seg>Gradle 将处理 organization， module 和 revision（以及 artifact 名称， extension 和 classifier）的任何有效的Unicode 字符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle will look at the first URL for the POM and the JAR.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150909T053159Z" creationid="haohang" creationdate="20150909T053159Z">
        <seg>Gradle 将会在第一个URL中查找 POM 和 JAR 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle will look for the source files to include in the WAR file in <bpt i="2" x="2">&lt;c2&gt;</bpt>src/main/webapp<ept i="2">&lt;/c2&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T085806Z" creationid="msdx" creationdate="20141030T085806Z">
        <seg>Gradle会在 <bpt i="2" x="2">&lt;c2&gt;</bpt>src/main/webapp<ept i="2">&lt;/c2&gt;</ept>中查找源文件，并将它们包含进WAR文件中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle will take care of building the application classes, along with their runtime dependencies, and starting the application with the correct classpath.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150702T104207Z" creationid="haohang" creationdate="20150702T104207Z">
        <seg>Gradle 将会处理好构建的应用程序的类，以及它们的运行时依赖，还有使用正确的类路径启动应用程序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle will take care of compiling and testing the plugin and making it available on the classpath of the build script.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160818T151436Z" creationid="95" creationdate="20160818T151436Z">
        <seg>Gradle将会编译和测试这个插件，并且使它在构建脚本的类路径中可用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle will take care of compiling and testing the task class and making it available on the classpath of the build script.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T144331Z" creationid="95" creationdate="20160814T144331Z">
        <seg>Gradle将会编译和测试这个任务类，并且使它在构建脚本的类路径中可用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle's Ivy repository implementations support the equivalent to Ivy's dynamic resolve mode.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T091015Z" creationid="95" creationdate="20151115T055648Z">
        <seg>Gradle 的Ivy 仓库实现支持相当于 Ivy 的动态解析的模式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle's multi-project features are driven by real life use cases.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160722T090430Z" creationid="haohang" creationdate="20160722T090430Z">
        <seg>Gradle 的多项目特性是由现实生活中的用例所驱动的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Gradle, thanks to Ivy under its hood, is extremely flexible regarding repositories:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T134157Z" creationid="95" creationdate="20151006T134157Z">
        <seg>Gradle由于 Ivy 在它的 hood 之下，对仓库非常灵活。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Groovy</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T003803Z" creationid="haohang" creationdate="20150603T003803Z">
        <seg>Groovy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Groovy Quickstart</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163656Z" creationid="msdx" creationdate="20141109T163656Z">
        <seg>Groovy 快速入门</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Groovy adds lots of useful methods to JVM classes.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T061025Z" creationid="msdx" creationdate="20141108T061025Z">
        <seg>Groovy 对 JVM 的类增加了很多有用的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Groovy automatically converts a property reference into a call to the appropriate getter or setter method.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T061712Z" creationid="msdx" creationdate="20141108T061712Z">
        <seg>Groovy 会自动地把一个属性的引用转换为对适当的 getter 或 setter 方法的调用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Groovy full stacktraces are extremely verbose (Due to the underlying dynamic invocation mechanisms.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T113101Z" creationid="msdx" creationdate="20141116T105723Z">
        <seg>Groovy 的全栈跟踪非常冗长 （由于其潜在的动态调用机制，</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Groovy is a good language choice for a plugin because plain old Groovy objects contain all the getter and setter methods that a Java Bean requires.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T124830Z" creationid="95" creationdate="20160820T124830Z">
        <seg>对于一个插件而言，Groovy是一种不错的语言选择，因为普通的旧Groovy对象包含了一个Java Bean所需要的所有的getter和setter方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Groovy itself has dependencies.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T091532Z" creationid="haohang" creationdate="20150801T091532Z">
        <seg>Groovy 本身具有依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Groovy plugin - tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T071744Z" creationid="msdx" creationdate="20150429T071744Z">
        <seg>Groovy 插件 - tasks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Groovy provides plenty of features for creating DSLs, and the Gradle build language takes advantage of these.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T060812Z" creationid="msdx" creationdate="20141108T055555Z">
        <seg>Groovy 提供了用于创建 DSL 的大量特点，并且 Gradle 构建语言利用了这些特点。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Groovy provides some shortcuts for defining <bpt i="0" x="0">&lt;c0&gt;</bpt>List<ept i="0">&lt;/c0&gt;</ept> and <bpt i="1" x="1">&lt;c1&gt;</bpt>Map<ept i="1">&lt;/c1&gt;</ept> instances.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T062828Z" creationid="msdx" creationdate="20141108T062816Z">
        <seg>Groovy 提供了一些定义<bpt i="0" x="0">&lt;c0&gt;</bpt>List<ept i="0">&lt;/c0&gt;</ept>和<bpt i="1" x="1">&lt;c1&gt;</bpt>Map<ept i="1">&lt;/c1&gt;</ept>实例的快捷写法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Groovy sources for the given source set.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T075156Z" creationid="msdx" creationdate="20150429T075156Z">
        <seg>给定的source set 的 Groovy 源代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Groovy web applications</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T085904Z" creationid="msdx" creationdate="20141030T085904Z">
        <seg>Groovy web程序</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>GroovyCompile</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T071357Z" creationid="msdx" creationdate="20150429T071357Z">
        <seg>GroovyCompile</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Groovydoc</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T071456Z" creationid="msdx" creationdate="20150429T071456Z">
        <seg>Groovydoc</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Handles converting a Maven build to a Gradle build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T040221Z" creationid="Administrator" creationdate="20150425T040221Z">
        <seg>处理转换 Maven 构建为 Gradle 构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Has directories in the conventional locations for source code</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T094234Z" creationid="haohang" creationdate="20150707T094234Z">
        <seg>在源代码中的约定位置有目录</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Have a look at <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Conf2ScopeMappingContainer<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> to learn more.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T145305Z" creationid="95" creationdate="20160106T145305Z">
        <seg>你可以参考<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Conf2ScopeMappingContainer<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>来了解更多的信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Have a look at <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>ExternalModuleDependency<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> to learn all about the API.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150724T034748Z" creationid="haohang" creationdate="20150724T034748Z">
        <seg>要了解所有该 API 的内容，可以参阅<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>ExternalModuleDependency<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Have a look at <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>ProjectDescriptor<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> for more details.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T070541Z" creationid="haohang" creationdate="20160519T070502Z">
        <seg>更多信息请参阅<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>ProjectDescriptor<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Have a look at <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Settings<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T025959Z" creationid="haohang" creationdate="20160519T025959Z">
        <seg>可以看一下 <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Settings<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Have a look at <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>TaskContainer<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> for more options for locating tasks.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T082612Z" creationid="msdx" creationdate="20141110T082202Z">
        <seg>有关查找任务的更多选项，可以看一下<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>TaskContainer<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Have a look at <bpt i="0" x="0">&lt;a0&gt;</bpt>http://groovy.codehaus.org/groovy-jdk/<ept i="0">&lt;/a0&gt;</ept> for more details.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T061421Z" creationid="msdx" creationdate="20141108T061421Z">
        <seg>可以看看<bpt i="0" x="0">&lt;a0&gt;</bpt>http://groovy.codehaus.org/groovy-jdk/<ept i="0">&lt;/a0&gt;</ept>，了解更多详细信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Have a look at <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>TaskContainer<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept> for more variations of the <bpt i="3" x="3">&lt;c3&gt;</bpt>create()<ept i="3">&lt;/c3&gt;</ept> method.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T023422Z" creationid="msdx" creationdate="20141110T023405Z">
        <seg>关于<bpt i="3" x="3">&lt;c3&gt;</bpt>create ()<ept i="3">&lt;/c3&gt;</ept>方法的更多变化可以看看<bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>TaskContainer<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Have a look at <bpt i="4" x="4">&lt;a4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>Test<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/a4&gt;</ept> for the complete API.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T140340Z" creationid="Administrator" creationdate="20150427T140340Z">
        <seg>可以看一看<bpt i="4" x="4">&lt;a4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>Test<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/a4&gt;</ept>的完整的 API。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Have also a look at <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>War<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T093636Z" creationid="msdx" creationdate="20150503T093550Z">
        <seg>另请参阅 <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>War<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Have also a look at the API documentation of <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Dependency<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> and <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>Configuration<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T100712Z" creationid="haohang" creationdate="20150801T100712Z">
        <seg>可以看看 <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Dependency<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> 和 <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>Configuration<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept> 的 API 文档。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Have also a look at the API documentation: <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>ClientModule<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T091719Z" creationid="haohang" creationdate="20150801T091700Z">
        <seg>可以看一看 API 文档：<bpt i="0" x="0">&lt;a0&gt;</bpt> <bpt i="1" x="1">&lt;c1&gt;</bpt>ClientModule<ept i="1">&lt;/c1&gt;</ept> <ept i="0">&lt;/a0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Having declared the build script classpath, you can use the classes in your build script as you would any other classes on the classpath.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161212T154547Z" creationid="95" creationdate="20161212T154201Z">
        <seg>声明了构建脚本的classpath之后，你可以使用构建脚本中的类，就像classpath上的任何其他类一样。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Having declared the init script classpath, you can use the classes in your init script as you would any other classes on the classpath.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161215T143850Z" creationid="95" creationdate="20161215T143850Z">
        <seg>声明了init 脚本的classpath之后，你可以使用init 脚本中的类，就像classpath上的任何其他类一样。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Header files that should not be exported (but are used internally) should be placed inside the <bpt i="1" x="1">&lt;c1&gt;</bpt>src/main/c<ept i="1">&lt;/c1&gt;</ept> directory (though be aware that such header files should always be referenced in a manner relative to the file including them).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160225T090625Z" creationid="haohang" creationdate="20160225T090625Z">
        <seg>不应该被导出（而是内部使用）的头文件，应该放在 <bpt i="1" x="1">&lt;c1&gt;</bpt>src/main/c<ept i="1">&lt;/c1&gt;</ept> 目录（不过要注意，这样的文件应该总是以相对于包含它们的文件这样一种方式被引用）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Header files that should not be exported (but are used internally) should be placed inside the <bpt i="1" x="1">&lt;c1&gt;</bpt>src/main/cpp<ept i="1">&lt;/c1&gt;</ept> directory (though be aware that such header files should always be referenced in a manner relative to the file including them).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160225T090412Z" creationid="haohang" creationdate="20160225T085731Z">
        <seg>不应该被导出（而是内部使用）的头文件，应该放在 <bpt i="1" x="1">&lt;c1&gt;</bpt>src/main/cpp<ept i="1">&lt;/c1&gt;</ept> 目录（不过要注意，这样的文件应该总是以相对于包含它们的文件这样的一种方式被引用）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Hello world</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162328Z" creationid="msdx" creationdate="20141109T162328Z">
        <seg>Hello world</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>HelloServlet.java</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160722T091213Z" creationid="haohang" creationdate="20160722T091213Z">
        <seg>HelloServlet.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Helper.java</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T083516Z" creationid="haohang" creationdate="20160726T083516Z">
        <seg>Helper.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Hence, starting from version 1.4 new incubating 'configuration on demand' mode is introduced.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160522T121411Z" creationid="95" creationdate="20160522T121143Z">
        <seg>因此，从 1.4 版本起，新引入了一个孵化功能“按需配置”。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Hence, when your project depends on a Maven module, it's obvious what its artifact is.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150724T042843Z" creationid="haohang" creationdate="20150724T042843Z">
        <seg>因此，当你的项目依赖于一个 Maven 模块时，这个模块的 artifact 是哪一个会很明显。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Here a <bpt i="0" x="0">&lt;a0&gt;</bpt> link <ept i="0">&lt;/a0&gt;</ept> to the Subversion view.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141121T142055Z" creationid="msdx" creationdate="20141121T142055Z">
        <seg>这里是SVN的视图的<bpt i="0" x="0">&lt;a0&gt;</bpt>链接<ept i="0">&lt;/a0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Here are several possible uses:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161214T142505Z" creationid="95" creationdate="20161214T142505Z">
        <seg>下面是几种可能的用法：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Here are some examples of what you can do with a file collection.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T155843Z" creationid="msdx" creationdate="20141112T155843Z">
        <seg>这里是一些使用文件集合的例子。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Here are some examples:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T123300Z" creationid="msdx" creationdate="20141113T123300Z">
        <seg>这里有一些例子：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Here are some examples: <bpt i="1" x="1">&lt;s1&gt;</bpt>[<bpt i="2" x="2">&lt;a2&gt;</bpt>16<ept i="2">&lt;/a2&gt;</ept>]<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T134713Z" creationid="95" creationdate="20151006T134549Z">
        <seg>这里有一些例子：<bpt i="1" x="1">&lt;s1&gt;</bpt>[<bpt i="2" x="2">&lt;a2&gt;</bpt>16<ept i="2">&lt;/a2&gt;</ept>]<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Here are some situations where this matters:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150730T034803Z" creationid="haohang" creationdate="20150730T034515Z">
        <seg>以下是一些比较重要的情况：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Here are the major highlights of Gradle's support for dependency management:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150714T080356Z" creationid="haohang" creationdate="20150714T080356Z">
        <seg>这里是 Gradle 支持的依赖管理的主要亮点:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Here are the some exemplary reasons why one might want to exclude a transitive dependency.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T101531Z" creationid="haohang" creationdate="20150801T101531Z">
        <seg>下面是为什么可能想要排除传递依赖的一些原因。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Here is a brief example which changes the main Java and resource source directories.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T083749Z" creationid="Administrator" creationdate="20150426T083749Z">
        <seg>这里是如何更改main Java 和资源源目录的一个简短的例子。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Here is a complete example:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T053943Z" creationid="msdx" creationdate="20150513T053943Z">
        <seg>下面是一个完整的例子：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Here is a list of some of Gradle's features.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141101T034449Z" creationid="msdx" creationdate="20141101T034417Z">
        <seg>以下是Gradle的一些特性列表。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Here is a sample which generates a combined report for the unit tests from subprojects:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T142733Z" creationid="msdx" creationdate="20150428T142733Z">
        <seg>这里是一个范例，从子项目的单元测试中生成一个联合报告：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Here is a simple build script for the project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160815T144838Z" creationid="95" creationdate="20160815T144838Z">
        <seg>下面是该项目的一个简单的构建脚本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Here is a summary of the ways you can organise your build logic:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T043525Z" creationid="95" creationdate="20161211T043525Z">
        <seg>下面是你可以组织你的构建逻辑的方法摘要：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Here is an example how you can configure the upload task of a configuration:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151226T092003Z" creationid="95" creationdate="20151226T092003Z">
        <seg>以下是一个有关配置上传任务的例子：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Here is an example where this is different:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T062224Z" creationid="haohang" creationdate="20160718T062224Z">
        <seg>下面是一个展示不同之处的例子：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Here is an example which configures the main Java and resources directories:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T051105Z" creationid="Administrator" creationdate="20150427T051046Z">
        <seg>下面是一个配置main 的 Java 和资源目录的例子：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Here is an example which maintains a copy of the project's runtime dependencies in the <bpt i="0" x="0">&lt;c0&gt;</bpt>build/libs<ept i="0">&lt;/c0&gt;</ept> directory.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T145414Z" creationid="msdx" creationdate="20141113T145414Z">
        <seg>这里是一个例子，维护在<bpt i="0" x="0">&lt;c0&gt;</bpt>build/libs<ept i="0">&lt;/c0&gt;</ept>目录中的项目运行时依赖的副本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Here is an example with the most important customization options:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T093801Z" creationid="msdx" creationdate="20150503T093642Z">
        <seg>下面是一个示例，展示了最重要的自定义选项：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Here is another example:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T130921Z" creationid="msdx" creationdate="20141113T130921Z">
        <seg>这里是另一个示例：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Here is how you would export all the dependencies of an Eclipse project:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T065946Z" creationid="haohang" creationdate="20150625T065946Z">
        <seg>下面的例子展示了如何导出一个 Eclipse 项目的所有依赖项：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Here is how you would export all the dependencies of an IDEA module:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T074605Z" creationid="haohang" creationdate="20150625T074605Z">
        <seg>下面的例子展示了如何导出一个 IDEA 模块的所有依赖项：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Here is our complete build file:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T065447Z" creationid="msdx" creationdate="20141030T065447Z">
        <seg>这里是我们完成的构建文件：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Here is what this looks like in code:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T041554Z" creationid="95" creationdate="20151129T041156Z">
        <seg>这里是在代码中的表现：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Here our task generates several output files from a source XML file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T060250Z" creationid="msdx" creationdate="20141111T060250Z">
        <seg>在这里我们的任务从一个 XML 源文件生成多个输出文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Here the output without the <bpt i="0" x="0">&lt;c0&gt;</bpt>-q<ept i="0">&lt;/c0&gt;</ept> option:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160715T080041Z" creationid="haohang" creationdate="20160715T080041Z">
        <seg>这里是不使用<bpt i="0" x="0">&lt;c0&gt;</bpt>-q<ept i="0">&lt;/c0&gt;</ept>选项的输出结果︰</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Here we add a <bpt i="0" x="0">&lt;c0&gt;</bpt>greeting<ept i="0">&lt;/c0&gt;</ept> extension object to the project, which allows you to configure the greeting.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T130759Z" creationid="95" creationdate="20160820T124850Z">
        <seg>在这里，我们向该project添加了一个 <bpt i="0" x="0">&lt;c0&gt;</bpt>greeting<ept i="0">&lt;/c0&gt;</ept> 扩展对象，它能够让你配置问候内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Here we add a <bpt i="0" x="0">&lt;c0&gt;</bpt>greeting<ept i="0">&lt;/c0&gt;</ept> property, and set the value when we declare the <bpt i="1" x="1">&lt;c1&gt;</bpt>greeting<ept i="1">&lt;/c1&gt;</ept> task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T151516Z" creationid="95" creationdate="20160814T151516Z">
        <seg>这里我们添加了一个 <bpt i="0" x="0">&lt;c0&gt;</bpt>greeting<ept i="0">&lt;/c0&gt;</ept> 属性，并且在我们定义 <bpt i="1" x="1">&lt;c1&gt;</bpt>greeting<ept i="1">&lt;/c1&gt;</ept> 任务的时候设置它的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Here we add tasks to the <bpt i="0" x="0">&lt;c0&gt;</bpt>tasks<ept i="0">&lt;/c0&gt;</ept> collection.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T023153Z" creationid="msdx" creationdate="20141110T023153Z">
        <seg>在这里我们将任务添加到<bpt i="0" x="0">&lt;c0&gt;</bpt>tasks<ept i="0">&lt;/c0&gt;</ept>集合。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Here we replace a task of type <bpt i="0" x="0">&lt;c0&gt;</bpt>Copy<ept i="0">&lt;/c0&gt;</ept> with a simple task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T015937Z" creationid="msdx" creationdate="20141111T015937Z">
        <seg>在这里我们用一个简单的任务替换<bpt i="0" x="0">&lt;c0&gt;</bpt>Copy<ept i="0">&lt;/c0&gt;</ept>类型的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Here you can see that the <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>TargetedNativeComponent.targetPlatforms()<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> method is used to select the set of platforms to target for <bpt i="2" x="2">&lt;c2&gt;</bpt>executables.main<ept i="2">&lt;/c2&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T083047Z" creationid="haohang" creationdate="20160408T083047Z">
        <seg>在这里你可以看到 <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>TargetedNativeComponent.targetPlatforms()<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> 方法被用于为 <bpt i="2" x="2">&lt;c2&gt;</bpt>executables.main<ept i="2">&lt;/c2&gt;</ept>选择一组平台。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Here're all situations in which we fork a new daemon process:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141117T152707Z" creationid="msdx" creationdate="20141117T152707Z">
        <seg>以下是我们fork一个新的守护进程的所有情况：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Here's an example:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T053332Z" creationid="Administrator" creationdate="20150427T053332Z">
        <seg>下面是一个示例：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Here, <bpt i="0" x="0">&lt;c0&gt;</bpt>uploadTask<ept i="0">&lt;/c0&gt;</ept> and <bpt i="1" x="1">&lt;c1&gt;</bpt>archiveTask<ept i="1">&lt;/c1&gt;</ept> refer to the tasks used for uploading and generating the archive, respectively (for example <bpt i="2" x="2">&lt;c2&gt;</bpt>uploadArchives<ept i="2">&lt;/c2&gt;</ept> and <bpt i="3" x="3">&lt;c3&gt;</bpt>jar<ept i="3">&lt;/c3&gt;</ept>).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T141902Z" creationid="95" creationdate="20160105T144144Z">
        <seg>在这里， <bpt i="0" x="0">&lt;c0&gt;</bpt>uploadTask<ept i="0">&lt;/c0&gt;</ept>和<bpt i="1" x="1">&lt;c1&gt;</bpt>archiveTask<ept i="1">&lt;/c1&gt;</ept>分别指向上传和分别生成archive的任务（例如<bpt i="2" x="2">&lt;c2&gt;</bpt>uploadArchives<ept i="2">&lt;/c2&gt;</ept>和<bpt i="3" x="3">&lt;c3&gt;</bpt>jar<ept i="3">&lt;/c3&gt;</ept>）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Here, we override the injected value<it pos="end" x="0">&lt;/s0&gt;</it>
srcDirName = <bpt i="1" x="1">&lt;s1&gt;</bpt>'java'<ept i="1">&lt;/s1&gt;</ept>
def dir = srcDir()</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T051055Z" creationid="95" creationdate="20161211T051055Z">
        <seg>Here, we override the injected value<it pos="end" x="0">&lt;/s0&gt;</it>
srcDirName = <bpt i="1" x="1">&lt;s1&gt;</bpt>'java'<ept i="1">&lt;/s1&gt;</ept>
def dir = srcDir()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Hidden tasks show up in red.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T153711Z" creationid="msdx" creationdate="20141105T153630Z">
        <seg>隐藏的任务显示为红色。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Hide the selected tasks.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T154111Z" creationid="msdx" creationdate="20141105T154111Z">
        <seg>隐藏选择的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Hierarchical and flat physical layouts get special support.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T041307Z" creationid="haohang" creationdate="20160519T041307Z">
        <seg>分层和产面的物理布局，得到了特别的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Host build must be at least <bpt i="1" x="1">&lt;c1&gt;</bpt>1.2<ept i="1">&lt;/c1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161228T145645Z" creationid="95" creationdate="20161228T145645Z">
        <seg>主机构建必须至少是 <bpt i="1" x="1">&lt;c1&gt;</bpt>1.2<ept i="1">&lt;/c1&gt;</ept>版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>How dependency resolution works</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070148Z" creationid="95" creationdate="20170416T070148Z">
        <seg>依赖解析的工作原理</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>How does Gradle know whether to do a single or multiproject build?</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T070616Z" creationid="haohang" creationdate="20160519T070616Z">
        <seg>Gradle 是怎么知道这是单项目还是多项目构建的？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>How does the parallel execution work?</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T090907Z" creationid="haohang" creationdate="20160726T090847Z">
        <seg>并行执行是怎么做的？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>How to declare your dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070131Z" creationid="95" creationdate="20170416T070131Z">
        <seg>如何声明依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>How to upload your archives is described in <bpt i="0" x="0">&lt;a0&gt;</bpt>Chapter 51, <bpt i="1" x="1">&lt;i1&gt;</bpt>Publishing artifacts<ept i="1">&lt;/i1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T151601Z" creationid="msdx" creationdate="20150428T151601Z">
        <seg>关于如何上传archives，将在<bpt i="0" x="0">&lt;a0&gt;</bpt>第51章，<bpt i="1" x="1">&lt;i1&gt;</bpt>发布artifacts<ept i="1">&lt;/i1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>中进行描述。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>However if -Xmx memory setting change or some fundamental immutable system property changes (e.g. file.encoding) then new daemon will be forked.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141117T153242Z" creationid="msdx" creationdate="20141117T153242Z">
        <seg>然而，如果-Xmx 内存设置更改了，或一些基本的不变的系统属性更改了 （例如 file.encoding），那么将fork新的守护进程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>However, be aware that they are not yet considered part of Gradle's public API.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T040908Z" creationid="Administrator" creationdate="20150425T040908Z">
        <seg>然而，请注意它们都不被认为是 Gradle 公共 API 的一部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>However, file dependencies are included in transitive project dependencies within the same build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T094253Z" creationid="haohang" creationdate="20150801T094253Z">
        <seg>然而，文件依赖会被包含在同一个构建的传递项目依赖里。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>However, in many cases it is not possible to build a particular variant, perhaps because no tool chain is available to build for a particular platform.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T084330Z" creationid="haohang" creationdate="20160408T084330Z">
        <seg>然而，在许多情况下是不可能构建一个特定的变种的，可能的原因是某个特定的平台没有可用的工具链。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>However, in the context of Ivy publication only the repositories created by the <bpt i="2" x="2">&lt;c2&gt;</bpt>ivy()<ept i="2">&lt;/c2&gt;</ept> methods can be used as publication destinations.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170326T073651Z" creationid="95" creationdate="20170326T073651Z">
        <seg>然而，在Ivy发布的场景中，只有通过 <bpt i="2" x="2">&lt;c2&gt;</bpt>ivy()<ept i="2">&lt;/c2&gt;</ept>方法创建的仓库才可以作为发布的指定地方。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>However, in the context of Maven publication only <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>MavenArtifactRepository<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept> repositories can be used for publication.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T063345Z" creationid="95" creationdate="20170416T062928Z">
        <seg>然而，在Maven 发布的场景中，只有<bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>MavenArtifactRepository()<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>仓库才可以用于发布。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>However, it is not visible outside the build, and so you cannot reuse the plugin outside the build it is defined in.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160818T151506Z" creationid="95" creationdate="20160818T151506Z">
        <seg>然而，它在这个构建之外并不可见，因为你不能在定义它的这个构建之外的其他地方来重用这个插件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>However, it is not visible outside the build, and so you cannot reuse the task class outside the build it is defined in.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T144509Z" creationid="95" creationdate="20160814T144424Z">
        <seg>然而，它在这个构建之外并不可见，因为你不能在定义它的这个构建之外的其他地方来重用这个任务类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>However, it is open for anyone who needs to embed Gradle in their application.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T151408Z" creationid="95" creationdate="20161218T151408Z">
        <seg>不过，它是向所有需要把Gradle嵌入到他们的应用的人开放的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>However, it will print a warning.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T065349Z" creationid="msdx" creationdate="20141108T065349Z">
        <seg>然而，它将打印一个警告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>However, keep in mind that it is usually best to keep configuration in the build script and under source control.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T054147Z" creationid="msdx" creationdate="20150513T054147Z">
        <seg>然而，请记住，通常最好是配置在构建脚本中，并在代码控制下。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>However, please do experiment with the current implementation and share your experiences with the Gradle community.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160815T151821Z" creationid="95" creationdate="20160815T151821Z">
        <seg>然而，请使用当前的实现做实验，并且与Gradle 社区分享你的经验。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>However, the <bpt i="0" x="0">&lt;c0&gt;</bpt>compileJava<ept i="0">&lt;/c0&gt;</ept> task is likely to not be the only task that needs to know where the class files are.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141123T154308Z" creationid="msdx" creationdate="20141123T154308Z">
        <seg>然而， <bpt i="0" x="0">&lt;c0&gt;</bpt>compileJava<ept i="0">&lt;/c0&gt;</ept>任务很可能不是唯 一需要知道类文件在哪里的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>However, the plugin is not visible outside the build script, and so you cannot reuse the plugin outside the build script it is defined in.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160818T151357Z" creationid="95" creationdate="20160818T151319Z">
        <seg>然而，在这个构建脚本脚本之外，这个插件是不可见的，因此你不能够在你定义这个插件的脚本以外的地方来复用它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>However, the set of tool chains for a project may also be explicitly defined, allowing additional cross-compilers to be configured as well as allowing the install directories to be specified.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T091144Z" creationid="haohang" creationdate="20160408T091144Z">
        <seg>不过，一个项目里的一组工具链也可以被显示地定义，允许配置额外的交叉编译器以及指定安装目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>However, the task class is not visible outside the build script, and so you cannot reuse the task class outside the build script it is defined in.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160818T151404Z" creationid="95" creationdate="20160814T144148Z">
        <seg>然而，在这个构建脚本脚本之外，这个任务类是不可见的，因此你不能够在你定义这个任务类的脚本之外的地方来复用它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>However, there are many cases where Gradle is unable to determine which input files need to be reprocessed.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160816T150144Z" creationid="95" creationdate="20160816T150144Z">
        <seg>然而，有许多情况下，Gradle还是无法确定哪些输入文件需要被重新处理。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>However, there are times when only a few input files have changed since the last execution, and you'd like to avoid reprocessing all of the unchanged inputs.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160815T152703Z" creationid="95" creationdate="20160815T152703Z">
        <seg>然而，有时候从上次执行以来，只有少量输入文件被修改了，而你想要避免重新处理所有未修改的输入。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>However, this behavior is configurable.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T041014Z" creationid="haohang" creationdate="20160519T041014Z">
        <seg>不过，这种行为是可配置的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>However, vast majority of tests and use cases should be handled neatly.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T023635Z" creationid="Administrator" creationdate="20150428T023635Z">
        <seg>然而，绝大多数的测试和用例都会被很好地处理。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>However, where possible Gradle will check if the previously downloaded artifacts are valid before downloading again.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T154552Z" creationid="95" creationdate="20151129T154552Z">
        <seg>然而，在再次下载之前Gradle 可能将会检查前一个下载的构件是否有效。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>However, you can run it then change the working directory via the Setup tab in the UI.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T150420Z" creationid="msdx" creationdate="20141105T150420Z">
        <seg>当然，你也可以先运行它，然后通过在UI中的设置（Setup）选项卡，改变工作目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>However, you need to make all of the projects that you wish be on the classpath of the actual build <bpt i="1" x="1">&lt;c1&gt;</bpt>runtime<ept i="1">&lt;/c1&gt;</ept> dependencies of the root project in <bpt i="2" x="2">&lt;c2&gt;</bpt>buildSrc<ept i="2">&lt;/c2&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T053128Z" creationid="95" creationdate="20161211T053128Z">
        <seg>但是，你需要使你想要的所有项目在<bpt i="2" x="2">&lt;c2&gt;</bpt>buildSrc<ept i="2">&lt;/c2&gt;</ept>的根项目的实际构建<bpt i="1" x="1">&lt;c1&gt;</bpt>runtime<ept i="1">&lt;/c1&gt;</ept>依赖的classpath上。 </seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>HtmlDependencyReportTask</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T061238Z" creationid="haohang" creationdate="20150628T061238Z">
        <seg>HtmlDependencyReportTask</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>I can operate</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T073700Z" creationid="msdx" creationdate="20141109T073700Z">
        <seg>I can operate</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>I can operate'<it pos="end" x="5">&lt;/s5&gt;</it></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T093720Z" creationid="msdx" creationdate="20141109T093720Z">
        <seg>I can operate'<it pos="end" x="5">&lt;/s5&gt;</it></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>I'm krill
- I depend on water</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160527T162906Z" creationid="95" creationdate="20160527T162906Z">
        <seg>I'm krill
- I depend on water</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>I'm krill
- I depend on water
- I love to spend time in the arctic waters.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160527T163834Z" creationid="95" creationdate="20160527T163834Z">
        <seg>I'm krill
- I depend on water
- I love to spend time in the arctic waters.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>I'm krill
- I depend on water
- The weight of my species in summer is twice as heavy as all human beings.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160527T163313Z" creationid="95" creationdate="20160527T163313Z">
        <seg>I'm krill
- I depend on water
- The weight of my species in summer is twice as heavy as all human beings.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>I'm tropicalFish
- I depend on water</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160527T163844Z" creationid="95" creationdate="20160527T163844Z">
        <seg>I'm tropicalFish
- I depend on water</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>IDEA plugin provides hooks and behavior for customizing the generated content.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T073119Z" creationid="haohang" creationdate="20150625T072736Z">
        <seg>IDEA 插件提供了一些 hook 和行，用于自定义生成的内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>INFO</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T070733Z" creationid="msdx" creationdate="20141116T070733Z">
        <seg>INFO</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>INFO and higher</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T103029Z" creationid="msdx" creationdate="20141116T103029Z">
        <seg>INFO 及更高</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>IdeaModel</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T072644Z" creationid="haohang" creationdate="20150625T072644Z">
        <seg>IdeaModel</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>IdeaModule</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T072708Z" creationid="haohang" creationdate="20150625T072708Z">
        <seg>IdeaModule</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>IdeaProject</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T072703Z" creationid="haohang" creationdate="20150625T072659Z">
        <seg>IdeaProject</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>IdeaWorkspace</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T072716Z" creationid="haohang" creationdate="20150625T072716Z">
        <seg>IdeaWorkspace</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If <bpt i="1" x="1">&lt;c1&gt;</bpt>scanForTestClasses<ept i="1">&lt;/c1&gt;</ept> is disabled and no include or exclude patterns are specified, the respective defaults are used.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T081955Z" creationid="Administrator" creationdate="20150428T081955Z">
        <seg>如果<bpt i="1" x="1">&lt;c1&gt;</bpt>scanForTestClasses<ept i="1">&lt;/c1&gt;</ept>为disabled，并且没有指定 include或exclude模式，则使用各自的默认值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If Gradle finds a module descriptor in a particular repository, it will attempt to download all of the artifacts for that module from <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>the same repository<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T093754Z" creationid="haohang" creationdate="20150807T093754Z">
        <seg>如果 Gradle 在特定仓库中查找模块描述符，它将尝试从<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>同一仓库中<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>下载该模块的所有 artifacts。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If Groovy is only used for test code, the Groovy dependency should be added to the <bpt i="0" x="0">&lt;c0&gt;</bpt>testCompile<ept i="0">&lt;/c0&gt;</ept> configuration:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T075957Z" creationid="msdx" creationdate="20150429T075957Z">
        <seg>如果 Groovy 仅用于测试代码，Groovy 的依赖应该被添加到<bpt i="0" x="0">&lt;c0&gt;</bpt>testCompile<ept i="0">&lt;/c0&gt;</ept>配置中：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If Groovy is used for production code, the Groovy dependency should be added to the <bpt i="0" x="0">&lt;c0&gt;</bpt>compile<ept i="0">&lt;/c0&gt;</ept> configuration:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T075928Z" creationid="msdx" creationdate="20150429T075928Z">
        <seg>如果 Groovy 用于production 代码，Groovy 依赖应该添加到<bpt i="0" x="0">&lt;c0&gt;</bpt>compile<ept i="0">&lt;/c0&gt;</ept>配置中：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If Scala is only used for test code, the <bpt i="0" x="0">&lt;c0&gt;</bpt>scala-library<ept i="0">&lt;/c0&gt;</ept> dependency should be added to the <bpt i="1" x="1">&lt;c1&gt;</bpt>testCompile<ept i="1">&lt;/c1&gt;</ept> configuration:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T153016Z" creationid="msdx" creationdate="20150429T153016Z">
        <seg>如果 Scala 仅用于测试代码， <bpt i="0" x="0">&lt;c0&gt;</bpt>scala-library<ept i="0">&lt;/c0&gt;</ept>依赖应被添加到<bpt i="1" x="1">&lt;c1&gt;</bpt>testCompile<ept i="1">&lt;/c1&gt;</ept>配置中：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If Scala is used for production code, the <bpt i="0" x="0">&lt;c0&gt;</bpt>scala-library<ept i="0">&lt;/c0&gt;</ept> dependency should be added to the <bpt i="1" x="1">&lt;c1&gt;</bpt>compile<ept i="1">&lt;/c1&gt;</ept> configuration:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T152924Z" creationid="msdx" creationdate="20150429T152924Z">
        <seg>如果 Scala 用于production 代码， <bpt i="0" x="0">&lt;c0&gt;</bpt>scala-library<ept i="0">&lt;/c0&gt;</ept> 依赖应该添加到<bpt i="1" x="1">&lt;c1&gt;</bpt>compile<ept i="1">&lt;/c1&gt;</ept>的配置中：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If a <bpt i="0" x="0">&lt;c0&gt;</bpt>--type<ept i="0">&lt;/c0&gt;</ept> parameter is not supplied, Gradle will attempt to infer the type from the environment.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T074323Z" creationid="haohang" creationdate="20150707T074323Z">
        <seg>如果没有提供 <bpt i="0" x="0">&lt;c0&gt;</bpt>--type<ept i="0">&lt;/c0&gt;</ept> 参数，Gradle 将尝试从当前环境来推断类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If a <bpt i="0" x="0">&lt;c0&gt;</bpt>groovy(-indy)<ept i="0">&lt;/c0&gt;</ept> Jar is found on <bpt i="1" x="1">&lt;c1&gt;</bpt>classpath<ept i="1">&lt;/c1&gt;</ept>, and the project has at least one repository declared, a corresponding <bpt i="2" x="2">&lt;c2&gt;</bpt>groovy(-indy)<ept i="2">&lt;/c2&gt;</ept> repository dependency will be added to <bpt i="3" x="3">&lt;c3&gt;</bpt>groovyClasspath<ept i="3">&lt;/c3&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T092108Z" creationid="msdx" creationdate="20150429T092108Z">
        <seg>如果在<bpt i="1" x="1">&lt;c1&gt;</bpt>classpath<ept i="1">&lt;/c1&gt;</ept>中找到<bpt i="0" x="0">&lt;c0&gt;</bpt>groovy(-indy)<ept i="0">&lt;/c0&gt;</ept> Jar ，并且该项目已经在至少一个仓库中声明了它，那么相应的<bpt i="2" x="2">&lt;c2&gt;</bpt>groovy(-indy)<ept i="2">&lt;/c2&gt;</ept>的仓库依赖将添加到<bpt i="3" x="3">&lt;c3&gt;</bpt>groovyClasspath<ept i="3">&lt;/c3&gt;</ept>中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If a <bpt i="0" x="0">&lt;c0&gt;</bpt>groovy-all(-indy)<ept i="0">&lt;/c0&gt;</ept> Jar is found on <bpt i="1" x="1">&lt;c1&gt;</bpt>classpath<ept i="1">&lt;/c1&gt;</ept>, the same Jar will be added to <bpt i="2" x="2">&lt;c2&gt;</bpt>groovyClasspath<ept i="2">&lt;/c2&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T091905Z" creationid="msdx" creationdate="20150429T091822Z">
        <seg>如果在在<bpt i="1" x="1">&lt;c1&gt;</bpt>classpath<ept i="1">&lt;/c1&gt;</ept>中找到<bpt i="0" x="0">&lt;c0&gt;</bpt>groovy-all(-indy)<ept i="0">&lt;/c0&gt;</ept> Jar，相同的 Jar 将添加到<bpt i="2" x="2">&lt;c2&gt;</bpt>groovyClasspath<ept i="2">&lt;/c2&gt;</ept>中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If a <bpt i="0" x="0">&lt;c0&gt;</bpt>scala-library<ept i="0">&lt;/c0&gt;</ept> Jar is found on <bpt i="1" x="1">&lt;c1&gt;</bpt>classpath<ept i="1">&lt;/c1&gt;</ept>, and the project has at least one repository declared, a corresponding <bpt i="2" x="2">&lt;c2&gt;</bpt>scala-compiler<ept i="2">&lt;/c2&gt;</ept> repository dependency will be added to <bpt i="3" x="3">&lt;c3&gt;</bpt>scalaClasspath<ept i="3">&lt;/c3&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150430T154635Z" creationid="msdx" creationdate="20150430T154635Z">
        <seg>如果在<bpt i="1" x="1">&lt;c1&gt;</bpt>classpath<ept i="1">&lt;/c1&gt;</ept>中找到<bpt i="0" x="0">&lt;c0&gt;</bpt>scala-library<ept i="0">&lt;/c0&gt;</ept> Jar ，并且该项目已经在至少一个仓库中声明了它，那么相应的<bpt i="2" x="2">&lt;c2&gt;</bpt>scala-compiler<ept i="2">&lt;/c2&gt;</ept>的仓库依赖将添加到<bpt i="3" x="3">&lt;c3&gt;</bpt>scalaClasspath<ept i="3">&lt;/c3&gt;</ept>中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If a <bpt i="0" x="0">&lt;c0&gt;</bpt>settings.gradle<ept i="0">&lt;/c0&gt;</ept> file is found, Gradle checks if the current project is part of the multiproject hierarchy defined in the found <bpt i="1" x="1">&lt;c1&gt;</bpt>settings.gradle<ept i="1">&lt;/c1&gt;</ept> file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T074037Z" creationid="haohang" creationdate="20160519T074037Z">
        <seg>如果找到了<bpt i="0" x="0">&lt;c0&gt;</bpt>settings.gradle<ept i="0">&lt;/c0&gt;</ept>文件，Gradle 会检查当前项目是否为找到的<bpt i="1" x="1">&lt;c1&gt;</bpt>settings.gradle<ept i="1">&lt;/c1&gt;</ept>文件中定义的多项目层次结构的一部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If a binary variant cannot be built for any reason, then the <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>NativeBinary<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> associated with that variant will not be <bpt i="2" x="2">&lt;c2&gt;</bpt>buildable<ept i="2">&lt;/c2&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T084701Z" creationid="haohang" creationdate="20160408T084443Z">
        <seg>如果一个二进制变种因为某些原因不能构建，那么与之关联的<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>NativeBinary<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>将不会是<bpt i="2" x="2">&lt;c2&gt;</bpt>buildable<ept i="2">&lt;/c2&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If a build system does not support such patterns, you either can't solve your problem or you need to do ugly hacks which are hard to maintain and massively afflict your productivity as a build master.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T083204Z" creationid="haohang" creationdate="20160726T083204Z">
        <seg>如果一个构建系统不支持这种模式，你就不能解决你的问题，或者你需要用一些恶心的 hack方法，这样就会很难维护，并且非常影响你的生产力。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If a candidate artifact has been downloaded by Maven, Gradle will use this artifact if it can be verified to match the checksum declared by the remote server.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T152302Z" creationid="95" creationdate="20151129T152302Z">
        <seg>如果一个候选的构件已经通过 Maven 下载，并且如果它可以和远程服务器定义的校验和匹配，Gradle 将使用这个构件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If a couple of tasks share the same logic you can extract this logic into a method.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T042927Z" creationid="95" creationdate="20161211T042849Z">
        <seg>如果两个任务有相同的逻辑，你可以把这段逻辑抽取为一个方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If a local repository location is defined in a <bpt i="0" x="0">&lt;c0&gt;</bpt>settings.xml<ept i="0">&lt;/c0&gt;</ept>, this location will be used.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150909T052631Z" creationid="haohang" creationdate="20150909T052631Z">
        <seg>如果在<bpt i="0" x="0">&lt;c0&gt;</bpt>settings.xml<ept i="0">&lt;/c0&gt;</ept>中定义一个本地仓库的位置，那么这个位置将会被使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If a module or artifact has not been previously resolved from <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>this repository<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>, Gradle will attempt to resolve the module against the repository.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T150555Z" creationid="95" creationdate="20151129T045705Z">
        <seg>如果一个模块或构件以之前没有从<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>这个存储库中<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>解析过，Gradle 将尝试在这个存储库中解析这个模块。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If a project defines multiple publications then Gradle will publish each of these to the defined repositories.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170304T033807Z" creationid="95" creationdate="20170304T033038Z">
        <seg>如果一个项目定义了多个要发布的内容，Gradle 将把每一个都发布到定义的仓库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If a property in such a file has the prefix <bpt i="1" x="1">&lt;c1&gt;</bpt>systemProp.<ept i="1">&lt;/c1&gt;</ept> the property and its value are added to the system properties, without the prefix.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T150302Z" creationid="msdx" creationdate="20141109T150254Z">
        <seg>如果此类文件中的属性有一个<bpt i="1" x="1">&lt;c1&gt;</bpt>systemProp.<ept i="1">&lt;/c1&gt;</ept>的前缀，该属性和它的值会被添加到系统属性，且不带此前缀。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If a transitive dependency has poor quality metadata that leads to problems at dependency resolution time, you can force Gradle to use a newer, fixed version of this dependency.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T054925Z" creationid="95" creationdate="20151115T054925Z">
        <seg>如果传递依赖有质量较差的元数据，导致了依赖解析时的问题时，你可以强制 Gradle 对于这一依赖使用一个较新的，固定的版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If all compared outcomes are found to be identical, and there are no uncompared outcomes, and there are no unknown build outcomes the task will succeed.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170109T125942Z" creationid="95" creationdate="20170109T125942Z">
        <seg>如果所有的比较结果都是相同的，并且没有未比较的结果，以及没有未知的构建结构，那么任务会执行成功。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If an upload repository is defined with multiple patterns, Gradle must choose a pattern to use for uploading each file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151226T092743Z" creationid="95" creationdate="20151226T092656Z">
        <seg>如果一个上传仓库中定义了多个模式，Gradle 必须为每个文件选择上传模式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If any of the following criteria match, the class is considered to be a JUnit test class:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T041001Z" creationid="Administrator" creationdate="20150428T041001Z">
        <seg>如果满足以下的任何一个条件，这个类就被认为是一个 JUnit 测试类：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If any of these properties is empty the trailing <bpt i="0" x="0">&lt;c0&gt;</bpt>-<ept i="0">&lt;/c0&gt;</ept> is not added to the name.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T155912Z" creationid="msdx" creationdate="20141113T155912Z">
        <seg>如果这些属性中的任何一个为空，那后面的<bpt i="0" x="0">&lt;c0&gt;</bpt>-<ept i="0">&lt;/c0&gt;</ept>不会被添加到该名称中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If anyone knows a better overview, please let us know via the mailing list.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141121T142330Z" creationid="msdx" creationdate="20141121T142236Z">
        <seg>如果有人知道更好的概述，请发邮件让我们知道。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If dependencies have file names with version numbers it is much easier to quickly identify the versions of your dependencies.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150716T092540Z" creationid="haohang" creationdate="20150716T092540Z">
        <seg>如果依赖的文件名称带有版本号，那么将更容易快速确定依赖的版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If it is too verbose, real warnings and problems are easily hidden by this.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T070035Z" creationid="msdx" creationdate="20141116T070035Z">
        <seg>如果日志太多，真正的警告和问题容易被隐藏。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If more than one init script is found they will all be executed, in the order specified above.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161214T152957Z" creationid="95" creationdate="20161214T152957Z">
        <seg>如果Gradle找到了多个init脚本，那么它们将会全部按照以上的顺序执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If multiple projects of a multi-project build share some logic you can define this method in the parent project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T043032Z" creationid="95" creationdate="20161211T043020Z">
        <seg>如果一个多项目构建中的多个项目有相同的逻辑，你可以把这个方法定义在父项目里。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If no <bpt i="0" x="0">&lt;c0&gt;</bpt>settings.gradle<ept i="0">&lt;/c0&gt;</ept> file is found, the build is executed as a single project build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T074005Z" creationid="haohang" creationdate="20160519T074005Z">
        <seg>如果仍没有找到<bpt i="0" x="0">&lt;c0&gt;</bpt>settings.gradle<ept i="0">&lt;/c0&gt;</ept>文件，将作为一个单项目构建来执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If no <bpt i="0" x="0">&lt;c0&gt;</bpt>settings.gradle<ept i="0">&lt;/c0&gt;</ept> is found, it searches the parent directories for the existence of a <bpt i="1" x="1">&lt;c1&gt;</bpt>settings.gradle<ept i="1">&lt;/c1&gt;</ept> file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T073919Z" creationid="haohang" creationdate="20160519T073919Z">
        <seg>如果没有找到<bpt i="0" x="0">&lt;c0&gt;</bpt>settings.gradle<ept i="0">&lt;/c0&gt;</ept>，它将在父目录里搜索<bpt i="1" x="1">&lt;c1&gt;</bpt>settings.gradle<ept i="1">&lt;/c1&gt;</ept>文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If no <bpt i="2" x="2">&lt;c2&gt;</bpt>url<ept i="2">&lt;/c2&gt;</ept> parameter is supplied, then Gradle will use the first defined <bpt i="3" x="3">&lt;c3&gt;</bpt>artifactPattern<ept i="3">&lt;/c3&gt;</ept> for uploading, or the first defined <bpt i="4" x="4">&lt;c4&gt;</bpt>ivyPattern<ept i="4">&lt;/c4&gt;</ept> for uploading Ivy files, if this is set.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151226T093005Z" creationid="95" creationdate="20151226T093005Z">
        <seg>如果没有提供<bpt i="2" x="2">&lt;c2&gt;</bpt>url<ept i="2">&lt;/c2&gt;</ept>参数，Gradle 将使用第一个定义的<bpt i="3" x="3">&lt;c3&gt;</bpt>artifactPattern<ept i="3">&lt;/c3&gt;</ept>来上传，或者对于上传Ivy文件而言，将使用第一个定义的<bpt i="4" x="4">&lt;c4&gt;</bpt>ivyPattern<ept i="4">&lt;/c4&gt;</ept>，如果这个参数有设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If no <bpt i="9" x="9">&lt;c9&gt;</bpt>settings.xml<ept i="9">&lt;/c9&gt;</ept> is available, Gradle uses the default location <bpt i="10" x="10">&lt;c10&gt;</bpt><bpt i="11" x="11">&lt;e11&gt;</bpt><bpt i="12" x="12">&lt;c12&gt;</bpt>USER_HOME<ept i="12">&lt;/c12&gt;</ept><ept i="11">&lt;/e11&gt;</ept>/.m2/repository<ept i="10">&lt;/c10&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150909T052837Z" creationid="haohang" creationdate="20150909T052837Z">
        <seg>如果没有<bpt i="9" x="9">&lt;c9&gt;</bpt>settings.xml<ept i="9">&lt;/c9&gt;</ept>可用，Gradle 将使用默认的位置<bpt i="10" x="10">&lt;c10&gt;</bpt><bpt i="11" x="11">&lt;e11&gt;</bpt><bpt i="12" x="12">&lt;c12&gt;</bpt>USER_HOME<ept i="12">&lt;/c12&gt;</ept><ept i="11">&lt;/e11&gt;</ept>/.m2/repository<ept i="10">&lt;/c10&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If no build types are defined in a project, then a single, default build type called 'debug' is added.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160401T090421Z" creationid="haohang" creationdate="20160401T090315Z">
        <seg>如果在project中没有定义任何构建类型，那么会有一个默认的“debug”构建类型被加进去。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If no flavor is defined for a component, then a single default flavor named 'default' is used.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T081540Z" creationid="haohang" creationdate="20160408T081540Z">
        <seg>如果一个组件没有定义任何的flavor，那么会使用一个默认的“default”的flavor。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If no module descriptor is found, Gradle will search for the presence of the primary <bpt i="4" x="4">&lt;s4&gt;</bpt><bpt i="5" x="5">&lt;e5&gt;</bpt>module artifact<ept i="5">&lt;/e5&gt;</ept><ept i="4">&lt;/s4&gt;</ept> file indicating that the module exists in the repository.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151007T023518Z" creationid="95" creationdate="20151007T023518Z">
        <seg>如果没有找到模块描述符，Gradle 将搜索表示模块存在于存储库中的主要<bpt i="4" x="4">&lt;s4&gt;</bpt><bpt i="5" x="5">&lt;e5&gt;</bpt>模块 artifact<ept i="5">&lt;/e5&gt;</ept><ept i="4">&lt;/s4&gt;</ept>文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If no platforms are defined in a project, then a single, default platform 'current' is added.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160401T094355Z" creationid="haohang" creationdate="20160401T094355Z">
        <seg>如果在project里没有定义任何平台，那么会添加一个默认的“current”平台。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If no snapshot repository is defined, releases and snapshots are both deployed to the <bpt i="0" x="0">&lt;c0&gt;</bpt>repository<ept i="0">&lt;/c0&gt;</ept> element.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T141752Z" creationid="95" creationdate="20160105T141752Z">
        <seg>如果没有定义任何snapshot 仓库，release和snapshot都将部署到<bpt i="0" x="0">&lt;c0&gt;</bpt>repository<ept i="0">&lt;/c0&gt;</ept>元素中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If no such module descriptor file exists, Gradle looks for a file called <bpt i="3" x="3">&lt;c3&gt;</bpt>hibernate-3.0.5.jar<ept i="3">&lt;/c3&gt;</ept> to retrieve.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150724T035537Z" creationid="haohang" creationdate="20150724T035405Z">
        <seg>如果不存在这样的模块描述符文件，Gradle 会查找一个<bpt i="3" x="3">&lt;c3&gt;</bpt>hibernate-3.0.5.jar<ept i="3">&lt;/c3&gt;</ept> 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If no target platforms are defined for a project, then all binaries are built to target a default platform named 'current'.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T092634Z" creationid="haohang" creationdate="20160408T092634Z">
        <seg>如果在project里没有定义任何平台，那么所有的二进制文件会针对一个默认平台“current”进行构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If no tests with this pattern can be found an exception is thrown.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T035632Z" creationid="Administrator" creationdate="20150428T035632Z">
        <seg>如果这个模式无法找到任何测试，那么将会抛出一个异常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If not it tries to download it, otherwise it delegates to the <bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>gradle<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/s2&gt;</ept> command of this distribution with all the arguments passed originally to the <bpt i="4" x="4">&lt;s4&gt;</bpt><bpt i="5" x="5">&lt;s5&gt;</bpt>gradlew<ept i="5">&lt;/s5&gt;</ept><ept i="4">&lt;/s4&gt;</ept> command.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161217T161229Z" creationid="95" creationdate="20161217T161229Z">
        <seg>如果不可用，它会试图下载它，可用的话它将把所有传入给<bpt i="4" x="4">&lt;s4&gt;</bpt><bpt i="5" x="5">&lt;s5&gt;</bpt>gradlew<ept i="5">&lt;/s5&gt;</ept><ept i="4">&lt;/s4&gt;</ept> 命令的参数都委托给这个分发包的<bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>gradle<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/s2&gt;</ept> 命令行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If not specified in the (Ivy) descriptor, the status defaults to <bpt i="7" x="7">&lt;c7&gt;</bpt>integration<ept i="7">&lt;/c7&gt;</ept> for Ivy modules and Maven snapshot modules, and <bpt i="8" x="8">&lt;c8&gt;</bpt>release<ept i="8">&lt;/c8&gt;</ept> for Maven modules that aren't snapshots.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T013408Z" creationid="95" creationdate="20151129T013408Z">
        <seg>如果没有在（Ivy）描述符中指定，Ivy 模块和 Maven snapshot模块的状态默认为<bpt i="7" x="7">&lt;c7&gt;</bpt>integration<ept i="7">&lt;/c7&gt;</ept> ，不是snapshot 的 Maven 模块则默认为<bpt i="8" x="8">&lt;c8&gt;</bpt>release<ept i="8">&lt;/c8&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If not, the build is executed as a single project build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T074117Z" creationid="haohang" creationdate="20160519T074117Z">
        <seg>如果不是，构建将作为一个单项目构建来执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If nothing else is defined, Gradle executes the task in alphanumeric order.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T063415Z" creationid="haohang" creationdate="20160718T063415Z">
        <seg>如果没有别的定义，Gradle 会按字母数字顺序执行该任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If project A has a compile dependency on project B then building A causes configuration of both projects: A and B.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160522T124634Z" creationid="95" creationdate="20160522T124634Z">
        <seg>如果项目 A 对项目 B 有编译依赖，那么构建A的时候也会导致 A和B两个项目的配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If required modules are not present in the dependency cache, build execution will fail.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T153835Z" creationid="95" creationdate="20151129T153835Z">
        <seg>如果所需的模块在依赖缓存中不存在，构建执行将会失败。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If someone asks you to look at a collection of 20 jar files, which would you prefer?</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150716T092342Z" creationid="haohang" creationdate="20150716T092342Z">
        <seg>如果有人让你看 20 个 jar 文件，你更喜欢哪一种？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If someone wants to use your project as a library, she simply needs to declare on which configuration of the dependency to depend on.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151227T155618Z" creationid="95" creationdate="20151227T155429Z">
        <seg>如果其他人想要把你的项目作为一个库使用，她只需要在依赖配置上声明，使她的项目依赖你的库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If specifying this information in the user <bpt i="0" x="0">&lt;c0&gt;</bpt>gradle.properties<ept i="0">&lt;/c0&gt;</ept> file is not feasible for your environment, you can source the information however you need to and set the project properties manually.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160108T152848Z" creationid="95" creationdate="20160108T152538Z">
        <seg>如果在用户的<bpt i="0" x="0">&lt;c0&gt;</bpt>gradle.properties<ept i="0">&lt;/c0&gt;</ept>文件中指定的信息不适合你的环境，你可以提供这些信息，但你需要手动设置项目的属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If such a module descriptor file exists, it is parsed and the artifacts of this module (e.g. <bpt i="2" x="2">&lt;c2&gt;</bpt>hibernate-3.0.5.jar<ept i="2">&lt;/c2&gt;</ept>) as well as its dependencies (e.g. cglib) are downloaded.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150724T035301Z" creationid="haohang" creationdate="20150724T035301Z">
        <seg>如果存在此类模块描述符文件，它会进行分析，并下载此模块的 artifacts （例如<bpt i="2" x="2">&lt;c2&gt;</bpt>hibernate-3.0.5.jar<ept i="2">&lt;/c2&gt;</ept>）以及其依赖项（例如 cglib）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If tests of more than one subproject are executed, the pattern is applied to each subproject.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T035831Z" creationid="Administrator" creationdate="20150428T035831Z">
        <seg>如果执行了一个以上的子项目的测试，该模式会被应用于每一个子项目中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If the <bpt i="0" x="0">&lt;c0&gt;</bpt>DEBUG<ept i="0">&lt;/c0&gt;</ept> log level is chosen, truncated stacktraces are always printed.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T033346Z" creationid="msdx" creationdate="20141116T104044Z">
        <seg>如果选择 <bpt i="0" x="0">&lt;c0&gt;</bpt>DEBUG<ept i="0">&lt;/c0&gt;</ept> 日志级别，则总是输出截断后的栈跟踪信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If the <bpt i="4" x="4">&lt;c4&gt;</bpt>revConstraint<ept i="4">&lt;/c4&gt;</ept> attribute is not present, the <bpt i="5" x="5">&lt;c5&gt;</bpt>rev<ept i="5">&lt;/c5&gt;</ept> attribute is used instead.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T091225Z" creationid="95" creationdate="20151115T091225Z">
        <seg>如果不存在<bpt i="4" x="4">&lt;c4&gt;</bpt>revConstraint<ept i="4">&lt;/c4&gt;</ept>属性，则使用<bpt i="5" x="5">&lt;c5&gt;</bpt>rev<ept i="5">&lt;/c5&gt;</ept>属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If the JAR can't be found there, the artifact URLs are used to look for JARs.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150909T053237Z" creationid="haohang" creationdate="20150909T053237Z">
        <seg>如果那里找不到 JAR，就会用 artifact URLs 来查找 JAR 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If the Java plugin is also applied to your project, a new task named <bpt i="0" x="0">&lt;c0&gt;</bpt>jacocoTestReport<ept i="0">&lt;/c0&gt;</ept> is created that depends on the <bpt i="1" x="1">&lt;c1&gt;</bpt>test<ept i="1">&lt;/c1&gt;</ept> task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T130350Z" creationid="msdx" creationdate="20150506T130244Z">
        <seg>如果 Java 插件也被应用于你的项目，那么会创建一个名为<bpt i="0" x="0">&lt;c0&gt;</bpt>jacocoTestReport<ept i="0">&lt;/c0&gt;</ept>的新任务，该新任务依赖于<bpt i="1" x="1">&lt;c1&gt;</bpt>test<ept i="1">&lt;/c1&gt;</ept>任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If the Java plugins is applied, the OSGi plugin replaces the manifest object of the default jar with an <bpt i="6" x="6">&lt;c6&gt;</bpt>OsgiManifest<ept i="6">&lt;/c6&gt;</ept> object.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150526T004113Z" creationid="haohang" creationdate="20150526T004113Z">
        <seg>如果应用了 Java 插件，OSGi 插件将把默认 jar 的 manifest 对象替换为一个<bpt i="6" x="6">&lt;c6&gt;</bpt>OsgiManifest<ept i="6">&lt;/c6&gt;</ept>对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If the argument is a task, the output files (i.e. the files the task creates) of the task are copied and the task is automatically added as a dependency of the <bpt i="2" x="2">&lt;c2&gt;</bpt>Copy<ept i="2">&lt;/c2&gt;</ept> task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T130824Z" creationid="msdx" creationdate="20141113T130824Z">
        <seg>如果参数是一个任务，那么任务的输出文件 （即该任务创建的文件）会被复制，并且该任务会自动添加为<bpt i="2" x="2">&lt;c2&gt;</bpt>Copy<ept i="2">&lt;/c2&gt;</ept>任务的依赖项。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If the based manifest and the merged manifest both define values for the same key, the merged manifest wins by default.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T150938Z" creationid="msdx" creationdate="20150428T150938Z">
        <seg>如果基本的manifest和要合并的manifest都定义了同一个key的值，那么默认情况下会采用要合并的manifest的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If the build logic gets too complex for being properly modeled by methods you want have an OO Model.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T043219Z" creationid="95" creationdate="20161211T043219Z">
        <seg>如果构建逻辑通过方法来正确建模比较复杂的话，你就要使用面向对象的模型了。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If the checksum can be retrieved, an artifact is not downloaded if an artifact already exists with the same id and checksum.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T151348Z" creationid="95" creationdate="20151129T151348Z">
        <seg>如果校验和可以获取到，并且如果已经存在具有相同 id 和校验和的构件，则不会再去下载这个构件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If the checksum cannot be retrieved from the remote server, the artifact will be downloaded (and ignored if it matches an existing artifact).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T151434Z" creationid="95" creationdate="20151129T151434Z">
        <seg>如果校验和不能从远程服务器检索，构件将被下载（并且忽略它所匹配的现有的构件）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If the classpath contains jars with an OSGi bundle, the bundle information is used to specify version information for the <bpt i="4" x="4">&lt;s4&gt;</bpt><bpt i="5" x="5">&lt;e5&gt;</bpt>Import-Package<ept i="5">&lt;/e5&gt;</ept><ept i="4">&lt;/s4&gt;</ept> value.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150526T064259Z" creationid="haohang" creationdate="20150526T064259Z">
        <seg>如果 classpath 中包含了 jar 包和 OSGi bundle，bundle 信息会被用来指定 <bpt i="4" x="4">&lt;s4&gt;</bpt><bpt i="5" x="5">&lt;e5&gt;</bpt>Import-Package<ept i="5">&lt;/e5&gt;</ept><ept i="4">&lt;/s4&gt;</ept>的值的版本信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If the current project contains a <bpt i="4" x="4">&lt;c4&gt;</bpt>settings.gradle<ept i="4">&lt;/c4&gt;</ept> file, the <bpt i="5" x="5">&lt;c5&gt;</bpt>-u<ept i="5">&lt;/c5&gt;</ept> option has no meaning.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T075223Z" creationid="haohang" creationdate="20160519T075223Z">
        <seg>如果当前项目中包含一个<bpt i="4" x="4">&lt;c4&gt;</bpt>settings.gradle<ept i="4">&lt;/c4&gt;</ept>文件， <bpt i="5" x="5">&lt;c5&gt;</bpt>-u<ept i="5">&lt;/c5&gt;</ept>选项将没有任何意义。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If the daemon process is currently busy running some job, a brand new daemon process will be started.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141117T152753Z" creationid="msdx" creationdate="20141117T152634Z">
        <seg>如果该守护进程当前正忙于运行一些作业，将启动一个全新的守护进程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If the default location for the local repository is redefined in a Maven <bpt i="2" x="2">&lt;c2&gt;</bpt>settings.xml<ept i="2">&lt;/c2&gt;</ept>, this is considered by this task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T143537Z" creationid="95" creationdate="20160105T143327Z">
        <seg>本地仓库的默认位置是否在 Maven <bpt i="2" x="2">&lt;c2&gt;</bpt>settings.xml<ept i="2">&lt;/c2&gt;</ept>中被重新定义，这项任务也会考虑到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If the dependency is declared as a dynamic version (like <bpt i="0" x="0">&lt;c0&gt;</bpt>1.+<ept i="0">&lt;/c0&gt;</ept>), Gradle will resolve this to the newest available static version (like <bpt i="1" x="1">&lt;c1&gt;</bpt>1.2<ept i="1">&lt;/c1&gt;</ept>) in the repository.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151007T023623Z" creationid="95" creationdate="20151007T023623Z">
        <seg>如果依赖被声明为一个动态版本（像<bpt i="0" x="0">&lt;c0&gt;</bpt>1.+<ept i="0">&lt;/c0&gt;</ept>），Gradle 将会把它解析到在仓库中的最新的可用的静态版本（如<bpt i="1" x="1">&lt;c1&gt;</bpt>1.2<ept i="1">&lt;/c1&gt;</ept>）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If the module descriptor is a POM file that has a parent POM declared, Gradle will recursively attempt to resolve each of the parent modules for the POM.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151007T023842Z" creationid="95" creationdate="20151007T023842Z">
        <seg>如果模块描述符是一个具有的父 POM 文件声明的 POM 文件，Gradle 将以递归方式尝试为该 POM 文件解析每个父模块。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If the new snapshots are the same as the previous snapshots, Gradle assumes that the outputs are up to date and skips the task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T063720Z" creationid="msdx" creationdate="20141111T063720Z">
        <seg>如果新的快照和前一次的快照一样，Gradle 会假定这些输出是最新状态的并跳过该任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If the plugin has previously been applied, any further applications will have no effect.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141122T162841Z" creationid="msdx" creationdate="20141122T162758Z">
        <seg>如果以前已应用了该插件，任何进一步的应用都不会再有任何效果。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If the rules for skipping a task can't be expressed with predicate, you can use the <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>StopExecutionException<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T054420Z" creationid="msdx" creationdate="20141111T031532Z">
        <seg>如果跳过任务的规则不能与断言同时表达，您可以使用<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>StopExecutionException<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If the task completes successfully, Gradle takes a snapshot of the outputs.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T063306Z" creationid="msdx" creationdate="20141111T063227Z">
        <seg>如果任务成功完成，Gradle 将对输出进行一次快照。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If the type could not be inferred, the type "<bpt i="0" x="0">&lt;c0&gt;</bpt>basic<ept i="0">&lt;/c0&gt;</ept>" will be used.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T074559Z" creationid="haohang" creationdate="20150707T074502Z">
        <seg>如果无法推断类型，将使用“<bpt i="0" x="0">&lt;c0&gt;</bpt>basic<ept i="0">&lt;/c0&gt;</ept>”类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If there are any differences between the <bpt i="0" x="0">&lt;e0&gt;</bpt>compared outcomes<ept i="0">&lt;/e0&gt;</ept>, the task will fail.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170109T125710Z" creationid="95" creationdate="20170109T125710Z">
        <seg>如果在<bpt i="0" x="0">&lt;e0&gt;</bpt>比较结果<ept i="0">&lt;/e0&gt;</ept>中有任何的差别，这个任务任务就会失败。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If these task names exist, they are executed as a separate build in the order you have passed them.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160520T123916Z" creationid="95" creationdate="20160520T123916Z">
        <seg>如果这些任务名称存在，它们以参数的顺序作为一个单独的构建来执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If they are not the same, Gradle executes the task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T063736Z" creationid="msdx" creationdate="20141111T063736Z">
        <seg>如果它们不一则， Gradle 则会执行该任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If this exception is thrown by an action, the further execution of this action as well as the execution of any following action of this task is skipped.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T054700Z" creationid="msdx" creationdate="20141111T054700Z">
        <seg>如果一个操作（action）抛出了此异常，那么这个操作（action）接下来的行为和这个任务的其他 操作（action）都会被跳过。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If this file already exists in the <bpt i="1" x="1">&lt;c1&gt;</bpt>appDirName/META-INF<ept i="1">&lt;/c1&gt;</ept> then the existing file contents will be used and the explicit configuration in the <bpt i="2" x="2">&lt;c2&gt;</bpt>ear.deploymentDescriptor<ept i="2">&lt;/c2&gt;</ept> will be ignored.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T142435Z" creationid="msdx" creationdate="20150504T142435Z">
        <seg>如果此文件已存在于<bpt i="1" x="1">&lt;c1&gt;</bpt>appDirName/META-INF<ept i="1">&lt;/c1&gt;</ept>，那么会使用这个已存在的文件的内容，而 <bpt i="2" x="2">&lt;c2&gt;</bpt>ear.deploymentDescriptor<ept i="2">&lt;/c2&gt;</ept>中的显式配置将被忽略。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If this is not specified, the <bpt i="1" x="1">&lt;c1&gt;</bpt>default<ept i="1">&lt;/c1&gt;</ept> configuration is used (see <bpt i="2" x="2">&lt;a2&gt;</bpt>Section 50.4.9, “Dependency configurations”<ept i="2">&lt;/a2&gt;</ept>).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151227T155734Z" creationid="95" creationdate="20151227T155734Z">
        <seg>如果它没有指定，则会使用<bpt i="1" x="1">&lt;c1&gt;</bpt>default<ept i="1">&lt;/c1&gt;</ept> 配置（参阅<bpt i="2" x="2">&lt;a2&gt;</bpt>第 50.4.9节，“依赖配置”<ept i="2">&lt;/a2&gt;</ept>）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If this is not the behaviour you want for some reason, consider using <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>TaskOutputs.upToDateWhen()<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T064150Z" creationid="msdx" creationdate="20141111T064141Z">
        <seg>如果你因为一些理由而不想这样，请考虑使用<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>TaskOutputs.upToDateWhen()<ept i="1">&lt;/c1&gt;</ept> <ept i="0">&lt;/a0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If this path is an absolute path, it is used to construct a <bpt i="5" x="5">&lt;c5&gt;</bpt>File<ept i="5">&lt;/c5&gt;</ept> instance.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T143029Z" creationid="msdx" creationdate="20141112T143029Z">
        <seg>如果这个路径是一个绝对路径，它会用于构构一个<bpt i="5" x="5">&lt;c5&gt;</bpt>File<ept i="5">&lt;/c5&gt;</ept>实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If this task is configured to use the value from <bpt i="0" x="0">&lt;c0&gt;</bpt>sourceSets.main.output.classesDir<ept i="0">&lt;/c0&gt;</ept>, then changing it in this location will update both the <bpt i="1" x="1">&lt;c1&gt;</bpt>compileJava<ept i="1">&lt;/c1&gt;</ept> task and this other consumer task whenever it is changed.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141124T094435Z" creationid="msdx" creationdate="20141124T094217Z">
        <seg>如果这个任务使用<bpt i="0" x="0">&lt;c0&gt;</bpt>sourceSets.main.output.classesDir<ept i="0">&lt;/c0&gt;</ept>的值来配置，那么修改了这个位置的值，无论它是什么时候被修改，将同时更新<bpt i="1" x="1">&lt;c1&gt;</bpt>compileJava<ept i="1">&lt;/c1&gt;</ept>任务和这一个消费者任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If versions are unclear you can introduce subtle bugs which are very hard to find.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150716T092614Z" creationid="haohang" creationdate="20150716T092614Z">
        <seg>如果版本不清楚，你可能引入一些很难找到的微妙的错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you are coming from Ant, such an enhanced Gradle task as <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>Copy<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> looks like a mixture between an Ant target and an Ant task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T123611Z" creationid="msdx" creationdate="20141111T123611Z">
        <seg>如果你是从 Ant 转过来的，像<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>Copy<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>这种增强的 Gradle 任务，看起来就像是一个 Ant 目标（target）和一个 Ant 任务（task）之间的混合物。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you are familiar with the approach used by either Maven or Ivy you will be delighted to learn that Gradle is fully compatible with both approaches in addition to being flexible enough to support fully-customized approaches.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150714T080333Z" creationid="haohang" creationdate="20150714T080333Z">
        <seg>如果您熟悉使用 Maven 或 Ivy 的方法，那么你会很高兴地知道，Gradle 完全兼容这两种方法，除此之外，它还有足够的灵活性，以支持完全自定义的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you are looking for documentation on the original Ivy publishing support using the <bpt i="0" x="0">&lt;c0&gt;</bpt>Upload<ept i="0">&lt;/c0&gt;</ept> task please see <bpt i="1" x="1">&lt;a1&gt;</bpt>Chapter 51, <bpt i="2" x="2">&lt;i2&gt;</bpt>Publishing artifacts<ept i="2">&lt;/i2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170211T010001Z" creationid="95" creationdate="20170211T005811Z">
        <seg>如果你正在查找关于使用 <bpt i="0" x="0">&lt;c0&gt;</bpt>Upload<ept i="0">&lt;/c0&gt;</ept> 任务的原始的Ivy发布支持的文档，请查阅 <bpt i="1" x="1">&lt;a1&gt;</bpt>第五十一章， <bpt i="2" x="2">&lt;i2&gt;</bpt>发布构件<ept i="2">&lt;/i2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you are looking for documentation on the original Maven publishing support using the <bpt i="0" x="0">&lt;c0&gt;</bpt>Upload<ept i="0">&lt;/c0&gt;</ept> task please see <bpt i="1" x="1">&lt;a1&gt;</bpt>Chapter 51, <bpt i="2" x="2">&lt;i2&gt;</bpt>Publishing artifacts<ept i="2">&lt;/i2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170412T150742Z" creationid="95" creationdate="20170412T150742Z">
        <seg>如果你正在查找关于使用 <bpt i="0" x="0">&lt;c0&gt;</bpt>Upload<ept i="0">&lt;/c0&gt;</ept> 任务的原始的Maven 发布支持的文档，请查阅 <bpt i="1" x="1">&lt;a1&gt;</bpt>第五十一章， <bpt i="2" x="2">&lt;i2&gt;</bpt>发布构件<ept i="2">&lt;/i2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you are migrating from a tool like Ant or Maven to Gradle, you may be faced with some difficult situations.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150716T040006Z" creationid="haohang" creationdate="20150716T040006Z">
        <seg>如果你从一个像 Ant 或 Maven 这样的工具迁移到 Gradle，你可能会面临一些困难的情况。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you are not familiar with project artifacts and configurations, you should read the <bpt i="0" x="0">&lt;a0&gt;</bpt>Chapter 51, <bpt i="1" x="1">&lt;i1&gt;</bpt>Publishing artifacts<ept i="1">&lt;/i1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> that introduces these concepts.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170211T134829Z" creationid="95" creationdate="20170211T134829Z">
        <seg>如果你不熟悉项目构件和配置，你应该读一下<bpt i="0" x="0">&lt;a0&gt;</bpt>第五十一章，<bpt i="1" x="1">&lt;i1&gt;</bpt>发布<ept i="1">&lt;/i1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>，里面对这些概念进行了介绍。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you are tired of using the same command line options again and again, take a look at <bpt i="2" x="2">&lt;a2&gt;</bpt>Section 20.1, “Configuring the build environment via gradle.properties”<ept i="2">&lt;/a2&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141118T095844Z" creationid="msdx" creationdate="20141118T095844Z">
        <seg>如果你已经厌倦反复使用相同的命令行选项，可以看看<bpt i="2" x="2">&lt;a2&gt;</bpt>第 20.1 章节，“通过 gradle.properties 配置构建环境”<ept i="2">&lt;/a2&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you are using one of the tasks that come with Gradle, such as a task added by the Java plugin, you might have noticed that Gradle will skip tasks that are up-to-date.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T060126Z" creationid="msdx" creationdate="20141111T055925Z">
        <seg>如果您使用 Gradle 自带的任务，如 Java 插件所添加的任务的话，你可能已经注意到 Gradle 将跳过处于最新状态的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you are working with a distributed version control system like Git you probably don't want to use the version control system to store libraries as people check out the whole history.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151201T063043Z" creationid="haohang" creationdate="20151201T063043Z">
        <seg>如果您是使用像 Git 一样的分布式版本控制系统，由于人们会检出整个历史，你可能不想使用版本控制系统来保存这些库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you build via the wrapper, any existing Gradle distribution installed on the machine is ignored.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T040703Z" creationid="95" creationdate="20161218T040703Z">
        <seg>如果你通过包装器构建，这台机器上已安装的任何Gradle分发包都会被忽略。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you call <bpt i="1" x="1">&lt;c1&gt;</bpt>allprojects<ept i="1">&lt;/c1&gt;</ept> with a closure, the statements of the closure are delegated to the projects associated with <bpt i="2" x="2">&lt;c2&gt;</bpt> allprojects<ept i="2">&lt;/c2&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160527T161639Z" creationid="95" creationdate="20160527T161639Z">
        <seg>如果你使用一个闭包调用<bpt i="1" x="1">&lt;c1&gt;</bpt>allprojects<ept i="1">&lt;/c1&gt;</ept>，这个闭包的声明会被委托给与<bpt i="2" x="2">&lt;c2&gt;</bpt>allprojects<ept i="2">&lt;/c2&gt;</ept>关联的项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you come from Ivy land, you might expect some more fine grained control.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T084341Z" creationid="haohang" creationdate="20160726T084341Z">
        <seg>如果你是从Ivy转过来的，你可能想要一些更细粒度的控制。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you come from Maven land you might be perfectly happy with this.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T084315Z" creationid="haohang" creationdate="20160726T084315Z">
        <seg>如果你是从Maven中转过来的，那么你会对这一点很满意。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you declare a module dependency, Gradle looks for a corresponding module descriptor file (<bpt i="0" x="0">&lt;c0&gt;</bpt>pom.xml<ept i="0">&lt;/c0&gt;</ept> or <bpt i="1" x="1">&lt;c1&gt;</bpt>ivy.xml<ept i="1">&lt;/c1&gt;</ept>) in the repositories.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150724T035152Z" creationid="haohang" creationdate="20150724T035152Z">
        <seg>如果你定义了一个模块依赖，Gradle 会在仓库中查找相应的模块描述符文件（<bpt i="0" x="0">&lt;c0&gt;</bpt>pom.xml<ept i="0">&lt;/c0&gt;</ept>或<bpt i="1" x="1">&lt;c1&gt;</bpt>ivy.xml<ept i="1">&lt;/c1&gt;</ept>）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you declare with <bpt i="0" x="0">&lt;c0&gt;</bpt>dependsOn<ept i="0">&lt;/c0&gt;</ept> a <bpt i="1" x="1">&lt;s1&gt;</bpt><bpt i="2" x="2">&lt;e2&gt;</bpt>execution dependency<ept i="2">&lt;/e2&gt;</ept><ept i="1">&lt;/s1&gt;</ept> between different projects, the default behavior of this method is to create also a <bpt i="3" x="3">&lt;s3&gt;</bpt><bpt i="4" x="4">&lt;e4&gt;</bpt>configuration<ept i="4">&lt;/e4&gt;</ept><ept i="3">&lt;/s3&gt;</ept> dependency between the two projects.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160722T090341Z" creationid="haohang" creationdate="20160722T090341Z">
        <seg>如果你通过<bpt i="0" x="0">&lt;c0&gt;</bpt>dependsOn<ept i="0">&lt;/c0&gt;</ept>声明了不同的项目之间的<bpt i="1" x="1">&lt;s1&gt;</bpt><bpt i="2" x="2">&lt;e2&gt;</bpt>执行依赖<ept i="2">&lt;/e2&gt;</ept><ept i="1">&lt;/s1&gt;</ept>，该方法的默认行为也会创建这两个项目之间的<bpt i="3" x="3">&lt;s3&gt;</bpt><bpt i="4" x="4">&lt;e4&gt;</bpt>配置<ept i="4">&lt;/e4&gt;</ept><ept i="3">&lt;/s3&gt;</ept>依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you define an exclude for a particular configuration, the excluded transitive dependency will be filtered for all dependencies when resolving this configuration or any inheriting configuration.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T100123Z" creationid="haohang" creationdate="20150801T094951Z">
        <seg>如果你为一个特定的配置定义一个 exclude，则解析此配置或任何继承的配置时，对于所有的依赖，所排除的传递依赖将会被过滤掉。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you don't model your dependencies as a hierarchical tree of first-level and second-level dependencies it is very easy to quickly lose control over an assembled mess of unstructured dependencies.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150720T061334Z" creationid="haohang" creationdate="20150720T061334Z">
        <seg>如果你不把你的依赖作为层次结构树的第一级和第二级依赖的模型，那么在对未组织的依赖进行混乱的组装之后，就会很容易地失去控制。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you don't specify anything explicitly, Gradle uses the default configuration of the dependency.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T032438Z" creationid="haohang" creationdate="20150807T032438Z">
        <seg>如果你不显式指定任何东西，Gradle 会使用依赖的默认配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you don't use transitive dependency management, version conflicts are undetected and the often accidental order of the classpath will determine what version of a dependency will win.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150721T054515Z" creationid="haohang" creationdate="20150721T054515Z">
        <seg>如果你不使用传递依赖管理，版本冲突没被发现，那么在类路径中无法预测的顺序，将导致不知道会使用哪一个版本的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you don't want any download to happen when your project is build via <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>gradlew<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>, simply add the Gradle distribution zip to your version control at the location specified by your wrapper configuration.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T040526Z" creationid="95" creationdate="20161218T040229Z">
        <seg>如果你不想在通过 <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>gradlew<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>命令构建项目时去下载它的分发包，只需要将Gradle分发包的zip文件添加到你的版本控制中你的包装器配置所指定的位置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you don't want this transitive behavior, simply declare your <bpt i="11" x="11">&lt;c11&gt;</bpt>provided<ept i="11">&lt;/c11&gt;</ept> dependencies like <bpt i="12" x="12">&lt;c12&gt;</bpt>commons-httpclient:commons-httpclient:3.0@jar<ept i="12">&lt;/c12&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T092101Z" creationid="msdx" creationdate="20150503T091943Z">
        <seg>如果你不想要这种传递行为，只是把<bpt i="11" x="11">&lt;c11&gt;</bpt>provided<ept i="11">&lt;/c11&gt;</ept>依赖声明成和<bpt i="12" x="12">&lt;c12&gt;</bpt>commons-httpclient:commons-httpclient:3.0@jar<ept i="12">&lt;/c12&gt;</ept>一样。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you edit them, you are given options to "Always Show Live Output." This only applies if you have 'Only Show Output When Errors Occur'.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T155832Z" creationid="msdx" creationdate="20141105T155832Z">
        <seg>如果你在编辑它们的时候，选上“始终显示实时输出”，它只有在你选上“当发生错误时才显示输出”时有效。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you execute the build from the <bpt i="1" x="1">&lt;c1&gt;</bpt>messages<ept i="1">&lt;/c1&gt;</ept> project Gradle executes them both because they have the same name and they are down the hierarchy.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T070841Z" creationid="haohang" creationdate="20160718T070841Z">
        <seg>如果你从 <bpt i="1" x="1">&lt;c1&gt;</bpt>messages<ept i="1">&lt;/c1&gt;</ept> 项目执行构建，Gradle 会执行它们两个，因为他们具有相同的名称，并且它们在该层次结构下。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you happen to use additional Sonar plugins, consult their documentation.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T064322Z" creationid="msdx" creationdate="20150513T064322Z">
        <seg>如果你碰巧使用另外的 Sonar 插件，请参考它们的文档。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you happen to use one of the above APIs, please consider changing your application to use the tooling API instead.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T154508Z" creationid="95" creationdate="20161218T154407Z">
        <seg>如果你碰巧使用一种上面的API，请考虑一下更改你的应用程序，改为使用tooling API。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you have a problem with your build, try temporarily disabling the daemon (you can pass the command line switch <bpt i="0" x="0">&lt;c0&gt;</bpt>--no-daemon<ept i="0">&lt;/c0&gt;</ept>).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141118T100446Z" creationid="msdx" creationdate="20141118T100309Z">
        <seg>如果你的构建有问题，请尝试暂时禁用守护进程 （您可以通过使用命令行开关<bpt i="0" x="0">&lt;c0&gt;</bpt>--no-daemon<ept i="0">&lt;/c0&gt;</ept>)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you have just gotten the latest version of source from your version control system which included changes in other projects that :api depends on, you might want to not only build all the projects you depend on, but test them as well.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160727T052114Z" creationid="haohang" creationdate="20160727T051923Z">
        <seg>如果你只是刚刚从你的版本控制系统中获取到最新的代码，它包含了:api依赖的其他项目的修改，你可能不只想构建所有你依赖的项目，还想对它们进行测试。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you have more than one artifact to publish, things work a little bit differently.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T143257Z" creationid="95" creationdate="20160106T143218Z">
        <seg>如果你有超过一个的artifact 要发布，那么要做的事情就会有些不同。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you haven't had to deal with the curse of conflicting versions of jars on a classpath, here is a small anecdote of the fun that awaits you.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150721T055320Z" creationid="haohang" creationdate="20150721T055320Z">
        <seg>如果你还没有处理过在类路径中 jar 包版本冲突的麻烦，这里有一个小趣闻等着你。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you make these types of changes, it is not sufficient to test just the :api project, you also need to test all projects that depend on the :api project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160727T052459Z" creationid="haohang" creationdate="20160727T052459Z">
        <seg>如果你做这一类的修改，只测试:api 项目并不足够，你还需要测试依赖于:api项目的所有项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you manually define a path variable pointing to the Gradle dependency cache, IDEA will automatically replace the absolute dependency paths with this path variable.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T092229Z" creationid="haohang" creationdate="20150625T092229Z">
        <seg>如果您手动定义路径变量来指向 Gradle 依赖缓存，IDEA 会自动把绝对依赖路径替换为此路径变量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you need more flexibility, you can provide your own <bpt i="0" x="0">&lt;c0&gt;</bpt>build.gradle<ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T051934Z" creationid="95" creationdate="20161211T051934Z">
        <seg>如果你需要更多的灵活性，你可以提供你自己的<bpt i="0" x="0">&lt;c0&gt;</bpt>build.gradle<ept i="0">&lt;/c0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you need to set other properties from the command line, you can use system properties to do so:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T054023Z" creationid="msdx" creationdate="20150513T054023Z">
        <seg>如果你需要从命令行设置其他属性，你可以使用系统属性来做：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you only work with flat directory resolvers you don't need to set all attributes of a dependency.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T110314Z" creationid="95" creationdate="20151006T110314Z">
        <seg>如果你只使用平面目录解析器，那么你不需要去设置一个依赖的所有属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you run Gradle with <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>gradlew<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>, the wrapper checks if a Gradle distribution for the wrapper is available.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161217T161116Z" creationid="95" creationdate="20161217T161116Z">
        <seg>如果你使用<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>gradlew<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>运行Gradle，包装器会检查所要使用的Gradle分发包是否可用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you run Gradle with the <bpt i="1" x="1">&lt;c1&gt;</bpt>--recompile-scripts<ept i="1">&lt;/c1&gt;</ept> option, the cached script is discarded and the script is compiled and stored in the cache.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T153746Z" creationid="msdx" creationdate="20141109T153623Z">
        <seg>如果您通过<bpt i="1" x="1">&lt;c1&gt;</bpt>--recompile-scripts<ept i="1">&lt;/c1&gt;</ept>选项运行 Gradle ，会丢弃缓存的脚本，然后重新编译此脚本并将其存在缓存中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you run this from your Gradle project working directory, you should see a tree of tasks.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T150113Z" creationid="msdx" creationdate="20141105T150113Z">
        <seg>如果你在你的Gradle项目目录下运行Gradle GUI，你应该会看到一个任务树。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you specify neither a Gradle version or download URL, the <bpt i="5" x="5">&lt;s5&gt;</bpt><bpt i="6" x="6">&lt;s6&gt;</bpt>gradlew<ept i="6">&lt;/s6&gt;</ept><ept i="5">&lt;/s5&gt;</ept> command will by default download whichever version of Gradle was used to generate the wrapper files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T040146Z" creationid="95" creationdate="20161218T040146Z">
        <seg>如果你对 Gradle 版本和下载 URL都没有指定， <bpt i="5" x="5">&lt;s5&gt;</bpt> <bpt i="6" x="6">&lt;s6&gt;</bpt>gradlew<ept i="6">&lt;/s6&gt;</ept><ept i="5">&lt;/s5&gt;</ept>命令将默认下载之前生成包装器的文件的Gradle版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you trigger a multiproject build from the directory where the settings file is, things are easy.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T070832Z" creationid="haohang" creationdate="20160519T070753Z">
        <seg>如果你在一个有设置文件的目录中触发一个多项目构建，那很简单。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you try to manage transitive dependencies yourself, the end of the story is that your build becomes brittle: no one dares to change your dependencies because the risk of breaking the build is too high.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150721T011734Z" creationid="haohang" creationdate="20150721T011734Z">
        <seg>如果你尝试自己管理传递依赖，最终的结果是你的构建会变得很脆弱：没有人敢去改变你的依赖，因为破坏构建的风险太高。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you try using the daemon for your local builds it's going to be hard for you to go back to regular use of Gradle.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141117T142229Z" creationid="msdx" creationdate="20141117T142229Z">
        <seg>如果你尝试在你的本地构建中使用守护进程的话，它会变得让你很难回到正常的 Gradle 使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you upload your project into a repository, this JAR is declared as part of the dependency descriptor.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T144753Z" creationid="msdx" creationdate="20150428T144753Z">
        <seg>如果你把你的项目上传到仓库，这个JAR 文件会被声明为依赖描述符的一部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you use Archiva, Nexus, or Artifactory, Gradle is 100% compatible with all repository formats.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150716T021758Z" creationid="haohang" creationdate="20150716T021758Z">
        <seg>如果你使用 Archiva， Nexus，或者是 Artifactory, Gradle 100% 兼容所有仓库的格式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you use client modules the dependency declaration in the XML descriptor file is not correct.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T091944Z" creationid="haohang" creationdate="20150801T091944Z">
        <seg>如果你使用了客户端模块，在 XML 描述符文件中的依赖声明就会不正确。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you use such a path variable, you need to configure this path variable via <bpt i="0" x="0">&lt;c0&gt;</bpt>idea.pathVariables<ept i="0">&lt;/c0&gt;</ept>, so that it can do a proper merge without creating duplicates.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T092334Z" creationid="haohang" creationdate="20150625T092334Z">
        <seg>如果你使用这种路径变量，您需要通过 <bpt i="0" x="0">&lt;c0&gt;</bpt>idea.pathVariables<ept i="0">&lt;/c0&gt;</ept> 配置此路径变量，以便它可以做适当的合并而不会重复创建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you want to exclude a transitive dependency from all your configurations you can use the Groovy spread-dot operator to express this in a concise way, as shown in the example.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T100438Z" creationid="haohang" creationdate="20150801T100422Z">
        <seg>如果你想要从你的所有配置中排除传递依赖，你可以用简明的方式，使用 Groovy 的 spread-dot 运算符来表示，如这个例子所示例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you want to get rid of a first level dependency you really can't be sure which other jars you should remove.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150720T065154Z" creationid="haohang" creationdate="20150720T065154Z">
        <seg>如果你想要摆脱第一级的依赖，你不能真正确定还有哪些 jar 文件你是需要删除的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you want to make this the default behavior, add <bpt i="2" x="2">&lt;c2&gt;</bpt>tasks.eclipse.dependsOn(cleanEclipse)<ept i="2">&lt;/c2&gt;</ept> to your build script.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T103321Z" creationid="haohang" creationdate="20150624T103321Z">
        <seg>如果你想要让它成为默认行为，请将<bpt i="2" x="2">&lt;c2&gt;</bpt>tasks.eclipse.dependsOn(cleanEclipse)<ept i="2">&lt;/c2&gt;</ept>添加到构建脚本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you want to make this the default behavior, add <bpt i="2" x="2">&lt;c2&gt;</bpt>tasks.idea.dependsOn(cleanIdea)<ept i="2">&lt;/c2&gt;</ept> to your build script.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T073520Z" creationid="haohang" creationdate="20150625T073520Z">
        <seg>如果你想要让它成为默认行为，请将<bpt i="2" x="2">&lt;c2&gt;</bpt>tasks.idea.dependsOn(cleanIdea)<ept i="2">&lt;/c2&gt;</ept>添加到构建脚本中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you want to switch to a new version of Gradle you don't need to rerun the wrapper task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161217T160919Z" creationid="95" creationdate="20161217T160919Z">
        <seg>如果你想要切换到一个新的Gradle版本，你不需要重新运行wrapper任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you want to tweak where the announcements go, you can configure the <bpt i="0" x="0">&lt;a0&gt;</bpt>announce<ept i="0">&lt;/a0&gt;</ept> plugin to change the local announcer.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T091724Z" creationid="haohang" creationdate="20150628T091724Z">
        <seg>如果您想要调整公告的位置，你可以配置 <bpt i="0" x="0">&lt;a0&gt;</bpt>announce<ept i="0">&lt;/a0&gt;</ept> 插件来更改本地的announcer。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you want to use a (flat) filesystem directory as a repository, simply type:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150910T012032Z" creationid="haohang" creationdate="20150910T011835Z">
        <seg>如果你想要把一个（平面）文件系统目录作为仓库使用，只需输入：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you work for example with Maven repositories, you need to define the group, name and version.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T103502Z" creationid="haohang" creationdate="20150801T103413Z">
        <seg>例如，如果你使用 Maven 仓库，你需要定义group，name 和 version。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you work with Ivy repositories and want to declare a non-default configuration for your dependency you have to use the map notation and declare:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T032706Z" creationid="haohang" creationdate="20150807T032706Z">
        <seg>如果你使用 Ivy 存储库，并且想要为你的依赖定义一个非默认配置，就要使用 map 标记法并且声明：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you work with Maven repositories you don't have the flexibility as described above.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151227T160712Z" creationid="95" creationdate="20151227T160712Z">
        <seg>如果你使用 Maven 仓库，由没有如上文所述的灵活性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you work with filesystem repositories you might only need the name or the name and the version.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T103534Z" creationid="haohang" creationdate="20150801T103534Z">
        <seg>如果你使用文件系统仓库，你可能只需要 name 或 name 和 version。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you'd like to optimise your build so that only out-of-date inputs are processed, you can do so with an <bpt i="0" x="0">&lt;e0&gt;</bpt>incremental task<ept i="0">&lt;/e0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160815T152922Z" creationid="95" creationdate="20160815T152922Z">
        <seg>如果你想优化你的构建，以便只有out-of-date的输入被处理，你可以使用一个<bpt i="0" x="0">&lt;e0&gt;</bpt>增量任务<ept i="0">&lt;/e0&gt;</ept>来做。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If you're embedding Gradle and you're looking for exact set of dependencies the tooling API Jar requires please look at one of the samples in <bpt i="0" x="0">&lt;c0&gt;</bpt>$gradleHome/samples/toolingApi<ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T160107Z" creationid="95" creationdate="20161218T160107Z">
        <seg>如果你正在嵌入 Gradle，并且你正在寻找tooling API Jar所需要的确切的依赖，，请参考在<bpt i="0" x="0">&lt;c0&gt;</bpt>$gradleHome/samples/toolingApi<ept i="0">&lt;/c0&gt;</ept>上的一些示例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If your <bpt i="1" x="1">&lt;c1&gt;</bpt>application<ept i="1">&lt;/c1&gt;</ept> directory doesn't contain a <bpt i="2" x="2">&lt;c2&gt;</bpt>META-INF/application.xml<ept i="2">&lt;/c2&gt;</ept> deployment descriptor then one will be generated for you.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T142806Z" creationid="msdx" creationdate="20150504T142806Z">
        <seg>如果你的<bpt i="1" x="1">&lt;c1&gt;</bpt>application<ept i="1">&lt;/c1&gt;</ept>目录没有包含<bpt i="2" x="2">&lt;c2&gt;</bpt>META-INF/application.xml<ept i="2">&lt;/c2&gt;</ept>部署描述符，那么将会为你生成一个。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If your Java application requires a specific set of JVM settings or system properties, you can configure the <bpt i="0" x="0">&lt;c0&gt;</bpt>applicationDefaultJvmArgs<ept i="0">&lt;/c0&gt;</ept> property.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150702T104727Z" creationid="haohang" creationdate="20150702T104727Z">
        <seg>如果你的 Java 应用程序需要一组特定的 JVM 设置或系统属性，你可以配置<bpt i="0" x="0">&lt;c0&gt;</bpt>applicationDefaultJvmArgs<ept i="0">&lt;/c0&gt;</ept>属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If your build only produces one distribution you only need to configure this distribution (or use the defaults).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150701T030442Z" creationid="haohang" creationdate="20150701T030442Z">
        <seg>如果你的构建只产生一个 distribution，你只需要配置这一个 distribution（或使用默认值）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If your build script needs to use external libraries, you can add them to the script's classpath in the build script itself.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161212T153709Z" creationid="95" creationdate="20161212T153709Z">
        <seg>如果你的构建脚本需要使用一些外部库，你可以在这个构建脚本的把它们添加到该脚本的classpath中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If your build script relies on optional properties the user might set for example in a gradle.properties file, you need to check for existence before you can access them.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T151857Z" creationid="msdx" creationdate="20141109T151840Z">
        <seg>如果您的构建脚本依赖于一些可选属性，而这些属性用户可能在比如 gradle.properties 文件中设置，您就需要在访问它们之前先检查它们是否存在。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If your main concern is bad metadata in the POM file and maintaining custom XML descriptors, <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>Client Modules<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> offer an alternative.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151201T063605Z" creationid="haohang" creationdate="20151201T063605Z">
        <seg>如果你主要关心的是 POM 文件和维护的自定义 XML 描述符中的元数据不正确，<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>客户端模块<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>提供了一种替代方案。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If your project generates files to be included in the distribution, e.g. documentation, you can add these files to the distribution by adding to the <bpt i="0" x="0">&lt;c0&gt;</bpt>applicationDistribution<ept i="0">&lt;/c0&gt;</ept> copy spec.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150703T100401Z" creationid="haohang" creationdate="20150703T100401Z">
        <seg>如果你的项目生成的文件中要在 distrubution 中，例如文档，你可以通过把它们添加到<bpt i="0" x="0">&lt;c0&gt;</bpt>applicationDistribution<ept i="0">&lt;/c0&gt;</ept>复制规范，来将这些文件添加到 distribution 中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If your project is supposed to be used as a library, you need to define what are the artifacts of this library and what are the dependencies of these artifacts.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151227T152412Z" creationid="95" creationdate="20151226T093139Z">
        <seg>如果你的项目是作为一个库使用，你需要定义这个库的构件是什么，以及这些构件的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If your project relies on the Maven Central repository you are likely to need an additional custom repository, because:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151130T050826Z" creationid="haohang" creationdate="20151130T050826Z">
        <seg>如果您的项目依赖于 Maven 中央仓，你很可能需要额外的自定义仓库，因为：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>If your proxy requires NTLM authentication, you may need to provide the authentication domain as well as the username and password.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141121T142430Z" creationid="msdx" creationdate="20141121T142415Z">
        <seg>如果您的代理服务器需要 NTLM 身份验证，您可能需要提供验证域，以及用户名和密码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Imagine a releasable unit defined by all libraries that have 'org.gradle' group.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T061441Z" creationid="95" creationdate="20151115T061441Z">
        <seg>想象一下，一个可发布的单位，由有“org.gradle” 组的所有库定义。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Implementing your own custom task class in Gradle is easy.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T143537Z" creationid="95" creationdate="20160814T143537Z">
        <seg>在Gradle中实现你的自定义任务类并不难。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Implicitly applied plugins</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065752Z" creationid="95" creationdate="20170416T065752Z">
        <seg>隐式应用插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Important information messages</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T070723Z" creationid="msdx" creationdate="20141116T070723Z">
        <seg>重要的信息消息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Importing an Ant build</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150330T141248Z" creationid="Administrator" creationdate="20150330T141248Z">
        <seg>导入 Ant 构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Improved HTML reporting, similar to that available for JUnit.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160504T151738Z" creationid="95" creationdate="20160504T151738Z">
        <seg>改进 HTML 报告，类似于 JUnit 提供的那样。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In <bpt i="0" x="0">&lt;a0&gt;</bpt>Section 59.5, “External dependencies for the build script”<ept i="0">&lt;/a0&gt;</ept> is was explained how to add external dependencies to a build script.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161215T143541Z" creationid="95" creationdate="20161215T143443Z">
        <seg>在 <bpt i="0" x="0">&lt;a0&gt;</bpt>第 59.5节，“构建脚本的外部依赖”<ept i="0">&lt;/a0&gt;</ept> 中已经解释了，如何向一个构建脚本添加外部依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In <bpt i="0" x="0">&lt;a0&gt;</bpt>Section 6.5, “Task dependencies”<ept i="0">&lt;/a0&gt;</ept> you were introduced to defining dependencies using task names.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T100215Z" creationid="msdx" creationdate="20141110T100145Z">
        <seg>在<bpt i="0" x="0">&lt;a0&gt;</bpt>第 6.5 章节，"任务依赖"<ept i="0">&lt;/a0&gt;</ept>中，已经向你介绍了使用任务名称来定义依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In <bpt i="1" x="1">&lt;a1&gt;</bpt>Table 18.3, “Stacktrace command-line options”<ept i="1">&lt;/a1&gt;</ept> you find the command line switches which affect stacktrace logging.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T102827Z" creationid="msdx" creationdate="20141116T102827Z">
        <seg>在<bpt i="1" x="1">&lt;a1&gt;</bpt>表 18.3，“栈跟踪的命令行选项”<ept i="1">&lt;/a1&gt;</ept>中，你可以看到影响栈跟踪日志的命令行开关。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In <bpt i="5" x="5">&lt;s5&gt;</bpt><bpt i="6" x="6">&lt;e6&gt;</bpt>this<ept i="6">&lt;/e6&gt;</ept><ept i="5">&lt;/s5&gt;</ept> case there would be an easier solution by reading the key property at execution time.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T085912Z" creationid="haohang" creationdate="20160718T085912Z">
        <seg>在<bpt i="5" x="5">&lt;s5&gt;</bpt><bpt i="6" x="6">&lt;e6&gt;</bpt>这种<ept i="6">&lt;/e6&gt;</ept><ept i="5">&lt;/s5&gt;</ept>情况下，通过在执行时读key属性是一种更简单的解决方案。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In Gradle a dependency can have different configurations (as your project can have different configurations).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T032420Z" creationid="haohang" creationdate="20150801T103727Z">
        <seg>在 Gradle ，一个依赖可以有不同的配置 (就像你的项目可以有不同的配置)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In Gradle and Ivy, a module can have multiple artifacts.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150724T035620Z" creationid="haohang" creationdate="20150724T035620Z">
        <seg>在 Gradle 和 Ivy 中，一个模块可以具有多个 artifacts。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In Gradle build scripts are optional.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160522T125635Z" creationid="95" creationdate="20160522T125635Z">
        <seg>在 Gradle 中，构建脚本是可选的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In Gradle dependencies are grouped into configurations.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T075138Z" creationid="haohang" creationdate="20150722T075058Z">
        <seg>在 Gradle 中，依赖被分组到配置中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In Gradle terms this means that you can define tasks and dependencies between tasks.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160518T031753Z" creationid="haohang" creationdate="20160518T031753Z">
        <seg>用 Gradle 的话说，这意味着您可以定义任务和任务之间的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In Gradle, when you declare a dependency on an Ivy module, you actually declare a dependency on the <bpt i="2" x="2">&lt;c2&gt;</bpt>default<ept i="2">&lt;/c2&gt;</ept> configuration of that module.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150730T033021Z" creationid="haohang" creationdate="20150730T032839Z">
        <seg>在 Gradle 中，当你声明一个对 Ivy 模块的依赖时，实际上你是在那个模块的 <bpt i="2" x="2">&lt;c2&gt;</bpt>default<ept i="2">&lt;/c2&gt;</ept> 配置上声明了一个依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In Java, there is no standard way to tell the JVM that you are using version 3.0.5 of Hibernate, and there is no standard way to say that <bpt i="0" x="0">&lt;c0&gt;</bpt>foo-1.0.jar<ept i="0">&lt;/c0&gt;</ept> depends on <bpt i="1" x="1">&lt;c1&gt;</bpt>bar-2.0.jar<ept i="1">&lt;/c1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150716T073915Z" creationid="haohang" creationdate="20150716T073915Z">
        <seg>在 Java 中，没有标准的方法来告诉 JVM 你使用的是 3.0.5 版本的 Hibernate，也没有标准的方法来表明 <bpt i="0" x="0">&lt;c0&gt;</bpt>foo-1.0.jar<ept i="0">&lt;/c0&gt;</ept> 依赖于 <bpt i="1" x="1">&lt;c1&gt;</bpt>bar-2.0.jar<ept i="1">&lt;/c1&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In Maven parlance, this is referred to as 'installing' the module.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T063711Z" creationid="95" creationdate="20170416T063711Z">
        <seg>在 Maven 的说法中，这叫做“安装”模块。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In Maven you can define repositories and optionally snapshot repositories.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T141656Z" creationid="95" creationdate="20160105T141644Z">
        <seg>在 Maven 中你可以定义仓库和snapshot仓库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In Maven, a module can have one and only one artifact.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150724T035603Z" creationid="haohang" creationdate="20150724T035603Z">
        <seg>在 Maven 中，一个模块仅能有一个 artifact。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In TestNG you can specify different test groups.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T082928Z" creationid="msdx" creationdate="20150428T082928Z">
        <seg>在 TestNG 中你可以指定不同的测试组。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In a future Gradle release, this will become the default.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T135519Z" creationid="Administrator" creationdate="20150427T135519Z">
        <seg>在未来的 Gradle 版本中，将把它作为默认设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In a future edition of this user guide we might write more about this.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160727T053229Z" creationid="haohang" creationdate="20160727T053229Z">
        <seg>在本用户指南的未来版本中，我们可能会写一下与之有关的更多内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In a large project with 30 submodules, adding a dependency to a subproject changed the order of a classpath, swapping Spring 2.5 for an older 2.4 version.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150721T055545Z" creationid="haohang" creationdate="20150721T055545Z">
        <seg>在一个有30个子模块的大型项目中，向子项目添加的一个依赖改变了类路径的顺序， Spring 2.5 与老的 2.4 版本的顺序被交换。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In a multi project build, <bpt i="2" x="2">&lt;c2&gt;</bpt>systemProp.<ept i="2">&lt;/c2&gt;</ept> properties set in any project except the root will be ignored.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T150501Z" creationid="msdx" creationdate="20141109T150451Z">
        <seg>在多项目构建中，除了在根项目之外的任何项目里的 <bpt i="2" x="2">&lt;c2&gt;</bpt>systemProp.<ept i="2">&lt;/c2&gt;</ept>属性集都将被忽略。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In a multi-project build, a project (usually the root project) can inject properties and methods into another project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T044008Z" creationid="95" creationdate="20161211T044008Z">
        <seg>在一个多项目构建中，一个项目（通常是根项目）可以把属性和方法注入到另一个项目中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In a multi-project build, analysis files are passed on to downstream <bpt i="1" x="1">&lt;c1&gt;</bpt>ScalaCompile<ept i="1">&lt;/c1&gt;</ept> tasks to enable incremental compilation across project boundaries.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T155648Z" creationid="msdx" creationdate="20150501T155605Z">
        <seg>在多项目构建中，分析文件被传递给下游的<bpt i="1" x="1">&lt;c1&gt;</bpt>ScalaCompile<ept i="1">&lt;/c1&gt;</ept>任务，以启用跨项目的增量编译。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In a multi-project build, sub-projects inherit the properties and methods of their parent project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T043919Z" creationid="95" creationdate="20161211T043851Z">
        <seg>在一个多项目构建中，子项目会继承父项目的属性及方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In a typical setup, analysis would be performed once per day on a build server.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150510T143228Z" creationid="msdx" creationdate="20150510T143228Z">
        <seg>在典型的设置中，会每天在构建服务器上运行一次分析。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In addition to supporting a traditional command line interface, Gradle offers a graphical user interface.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T145924Z" creationid="msdx" creationdate="20141105T145546Z">
        <seg>除了支持传统的命令行界面，Gradle也提供了一个图形用户界面（GUI）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In addition, user interfaces can provide some interesting features if the Gradle model can be built relatively quickly.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141117T141712Z" creationid="msdx" creationdate="20141117T140108Z">
        <seg>此外，如果可以相对较快地建立 Gradle 模型，用户界面可以提供一些有趣的功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In an enterprise environment this is rather common.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151201T070830Z" creationid="haohang" creationdate="20151201T070830Z">
        <seg>在企业环境中，这是相当普遍的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In any of these cases, Gradle will consider all of the input files to be <bpt i="0" x="0">&lt;c0&gt;</bpt>outOfDate<ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160817T144613Z" creationid="95" creationdate="20160817T144524Z">
        <seg>满足以上情况的任何一个，Gradle都会考虑使所有的输入文件为<bpt i="0" x="0">&lt;c0&gt;</bpt>outOfDate<ept i="0">&lt;/c0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In both cases, all fork options specified with <bpt i="2" x="2">&lt;c2&gt;</bpt>options.forkOptions<ept i="2">&lt;/c2&gt;</ept> will be honored.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T140211Z" creationid="Administrator" creationdate="20150427T140211Z">
        <seg>在这两种情况下，使用<bpt i="2" x="2">&lt;c2&gt;</bpt>options.forkOptions<ept i="2">&lt;/c2&gt;</ept>指定的所有fork选项都将得到重视。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In case of version conflicts between dependencies of the subset and dependencies not belonging to the subset the resolve result might be different.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T041214Z" creationid="haohang" creationdate="20150807T041214Z">
        <seg>在子集的依赖和不属于子集的依赖之间，存在版本冲突的情况下，解析的结果可能会有所不同。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In case this property does not exists, an exception is thrown and the build fails.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T151423Z" creationid="msdx" creationdate="20141109T151423Z">
        <seg>如果此属性不存在，则会引发异常，并且构建失败。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In case you don't want to use the test class detection, you can disable it by setting <bpt i="0" x="0">&lt;c0&gt;</bpt>scanForTestClasses<ept i="0">&lt;/c0&gt;</ept> to false.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T081814Z" creationid="Administrator" creationdate="20150428T081814Z">
        <seg>如果你不想要使用测试类检测，可以通过设置<bpt i="0" x="0">&lt;c0&gt;</bpt>scanForTestClasses<ept i="0">&lt;/c0&gt;</ept>为 false 来禁用它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In configuration on demand mode projects are configured as follows:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160522T122044Z" creationid="95" creationdate="20160522T121957Z">
        <seg>在按需配置的模式下项目会如下配置︰</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In contrast to Maven, where this path is fixed, with Gradle you can define a pattern that defines what the path will look like.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T134540Z" creationid="95" creationdate="20151006T134540Z">
        <seg>相比于固定路径的 Maven，使用 Gradle 你可以定义一个模式，该模式定义了路径的样子。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In contrast to the command line reports, the report plugin generates the reports into a file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150626T095722Z" creationid="haohang" creationdate="20150626T095722Z">
        <seg>与命令行报告相比，报告插件将报告生成到一个文件中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In doing so, Gradle enables reliable and reproducible enterprise builds.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T043856Z" creationid="95" creationdate="20151129T043856Z">
        <seg>在此过程中，Gradle 实现了可靠和可重复的的企业构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In dynamic resolve mode, Gradle will instead prefer the <bpt i="2" x="2">&lt;c2&gt;</bpt>revConstraint<ept i="2">&lt;/c2&gt;</ept> attribute over the <bpt i="3" x="3">&lt;c3&gt;</bpt>rev<ept i="3">&lt;/c3&gt;</ept> attribute for a given dependency definition.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T091218Z" creationid="95" creationdate="20151115T091218Z">
        <seg>在动态解析模式中，Gradle 将优先使用<bpt i="2" x="2">&lt;c2&gt;</bpt>revConstraint<ept i="2">&lt;/c2&gt;</ept>属性来代替<bpt i="3" x="3">&lt;c3&gt;</bpt>rev<ept i="3">&lt;/c3&gt;</ept>属性，用于一个给定的依赖定义。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In each case, the tool chain will target the current operating system.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T092057Z" creationid="haohang" creationdate="20160408T092036Z">
        <seg>在每种情况中，工具链将针对当前的操作系统。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In every other respect, a Groovy project is identical to a Java project, which we have already seen in <bpt i="1" x="1">&lt;a1&gt;</bpt>Chapter 7, <bpt i="2" x="2">&lt;i2&gt;</bpt>Java Quickstart<ept i="2">&lt;/i2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T070345Z" creationid="msdx" creationdate="20141030T061216Z">
        <seg>在其他各方面，Groovy项目与我们在<bpt i="1" x="1">&lt;a1&gt;</bpt>第七章<bpt i="2" x="2">&lt;i2&gt;</bpt>Java快速入门<ept i="2">&lt;/i2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>中所看到的Java项目几乎相同 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In example below, imagine that version <bpt i="0" x="0">&lt;c0&gt;</bpt>1.2.1<ept i="0">&lt;/c0&gt;</ept> contains important fixes and should always be used in preference to <bpt i="1" x="1">&lt;c1&gt;</bpt>1.2<ept i="1">&lt;/c1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T071446Z" creationid="95" creationdate="20151115T070923Z">
        <seg>在下面的示例中，想象版本<bpt i="0" x="0">&lt;c0&gt;</bpt>1.2.1<ept i="0">&lt;/c0&gt;</ept>包含了重要的修复程序，并应始终优先于<bpt i="1" x="1">&lt;c1&gt;</bpt>1.2<ept i="1">&lt;/c1&gt;</ept>使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In fact, Gradle's deployment is 100 percent Maven compatible as we use the native Maven Ant tasks under the hood.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160104T153457Z" creationid="95" creationdate="20160104T153457Z">
        <seg>事实上，Gradle 的部署是 100%兼容 Maven的，因为我们在hood下使用的是本地的 Maven Ant 任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In fact, a configuration can contain both artifacts and dependencies at the same time.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151220T123616Z" creationid="95" creationdate="20151220T123616Z">
        <seg>事实上，配置可以同时包含构件和依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In fact, some of those repositories allow only for artifact downloading.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151226T091803Z" creationid="95" creationdate="20151226T091803Z">
        <seg>实际上，有些仓库只允许下载构件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In fact, you will find that it's far easier and more powerful using Ant tasks in a Gradle build script, than it is to use Ant's XML format.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141114T071639Z" creationid="msdx" creationdate="20141114T071520Z">
        <seg>事实上，你会发现在 Gradle 中使用 Ant 任务比使用 Ant 的XML 格式更容易也更强大。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In future the daemon will offer more features:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141117T143034Z" creationid="msdx" creationdate="20141117T143034Z">
        <seg>未来，该守护进程还会提供更多的功能：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In future we may support other interesting features:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T153253Z" creationid="95" creationdate="20161218T153253Z">
        <seg>将来我们可能会支持一些其他有趣的功能：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In general, snappy behavior of the build tool is always handy.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141117T142044Z" creationid="msdx" creationdate="20141117T142044Z">
        <seg>一般情况下，构建工具的敏捷行为总是可以派上用场。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In general, using Groovy is the easiest option, because the Gradle API is designed to work well with Groovy.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T143839Z" creationid="95" creationdate="20160814T143839Z">
        <seg>一般情况下，使用Groovy是最简单的选择，因为Gradle API就是被设计为能使用Groovy良好地执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In majority of cases the project path is consistent with the physical location of the project in the file system.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T041003Z" creationid="haohang" creationdate="20160519T041003Z">
        <seg>在大多数情况下，项目路径是符合在文件系统中项目的物理位置的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In many cases, more than one native binary can be produced for a component.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160219T065539Z" creationid="haohang" creationdate="20160219T065451Z">
        <seg>在许多情况下，一个组件可以产生超过一个的原生二进制文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In more concrete terms, executing this task will execute all <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>PublishToIvyRepository<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> tasks in the project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170326T080435Z" creationid="95" creationdate="20170326T080409Z">
        <seg>更具体而言，执行这个任务将会执行在项目中的所有 <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>PublishToIvyRepository<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> 任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In most cases, Gradle's default dependency management will resolve the dependencies that you want in your build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T053904Z" creationid="95" creationdate="20151115T053904Z">
        <seg>在大多数情况下，Gradle 的默认依赖管理将会在你的构建中按你所想的解析依赖关系。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In multi-project builds you may often want to do all of these tasks across a range of projects.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T094806Z" creationid="haohang" creationdate="20160726T094714Z">
        <seg>在多项目构建中，你可能经常想跨多项目范围执行这些任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In order to create PGP signatures, you will need a key pair (instructions on creating a key pair using the <bpt i="0" x="0">&lt;a0&gt;</bpt>GnuPG tools<ept i="0">&lt;/a0&gt;</ept> can be found in the <bpt i="1" x="1">&lt;a1&gt;</bpt>GnuPG HOWTOs<ept i="1">&lt;/a1&gt;</ept>).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160108T151330Z" creationid="95" creationdate="20160108T151330Z">
        <seg>为了创建 PGP 签名，你将需要一个密钥对（有关使用<bpt i="0" x="0">&lt;a0&gt;</bpt>GnuPG 工具<ept i="0">&lt;/a0&gt;</ept>创建密钥对的介绍可以在<bpt i="1" x="1">&lt;a1&gt;</bpt>GnuPG Howto<ept i="1">&lt;/a1&gt;</ept>中找到）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In order to use a type with any of the <bpt i="4" x="4">&lt;c4&gt;</bpt>project.container<ept i="4">&lt;/c4&gt;</ept> methods, it MUST expose a property named “<bpt i="5" x="5">&lt;c5&gt;</bpt>name<ept i="5">&lt;/c5&gt;</ept>” as the unique, and constant, name for the object.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T020520Z" creationid="95" creationdate="20161211T020218Z">
        <seg>为了使用任意一种<bpt i="4" x="4">&lt;c4&gt;</bpt>project.container<ept i="4">&lt;/c4&gt;</ept>类型的方法，必须公开一个 “<bpt i="5" x="5">&lt;c5&gt;</bpt>name<ept i="5">&lt;/c5&gt;</ept>” 属性，作为该对象的唯一且恒定的名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In other words, a standard Maven snapshot is a module that never stands still so to speak, it is a "changing module".</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T011916Z" creationid="haohang" creationdate="20150722T011916Z">
        <seg>换句话说，一个标准的 Maven snapshot 是一个这样的模块，它永远不会不变，可以说，它是“不断变化的模块”。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In other words, everything except the Ant tasks and types.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141114T072401Z" creationid="msdx" creationdate="20141114T072401Z">
        <seg>换句话说，除了 Ant 任务和类型之外全部都有。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In other words, the left hand side of the comparison.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161228T135211Z" creationid="95" creationdate="20161228T135158Z">
        <seg>换句话说，也就是构建比较的左手边。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In other words, the right hand side of the comparison.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161228T135252Z" creationid="95" creationdate="20161228T135252Z">
        <seg>换句话说，也就是构建比较的右手边。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In our examples, we are going to use Groovy as the implementation language, but you could use, for example, Java or Scala.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T143719Z" creationid="95" creationdate="20160814T143719Z">
        <seg>在我们的例子中，我们将使用Groovy来作为实现的语言，但你也可以使用Java或者是Scala。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In our examples, we will start with the plugin in the build script, to keep things simple.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160818T151611Z" creationid="95" creationdate="20160818T151611Z">
        <seg>在我们的例子中，为了简单，我们将从在构建脚本中编写插件开始。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In our examples, we will start with the task class in the build script, to keep things simple.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T145256Z" creationid="95" creationdate="20160814T145256Z">
        <seg>在我们的例子中，为了简单，我们将从在构建脚本中定义任务类开始。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In our next release we want to enable partial builds from subprojects by specifying the location of the settings file as a command line parameter.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T080249Z" creationid="haohang" creationdate="20160519T080249Z">
        <seg>在我们下一版本中，我们想通过在命令行参数中，指定一个设置文件的路径，来从子项目中启用部分的构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In particular, only the Sonar Runner plugin supports Sonar 3.4 and higher.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150507T065257Z" creationid="msdx" creationdate="20150507T065257Z">
        <seg>尤其是因为只有 Sonar Runner 插件支持
Sonar 3.4 及更高的版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In return, you get total control over the generated file, including sections not modeled by the domain objects.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T070437Z" creationid="haohang" creationdate="20150625T070437Z">
        <seg>作为回报，你可以对生成的文件进行全面的控制，包括未由域对象建模的那些部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In short, version conflicts are bad, and you should manage your transitive dependencies to avoid them.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150721T055842Z" creationid="haohang" creationdate="20150721T055800Z">
        <seg>总之，版本冲突是很不好的，你应该管理你的传递依赖，以避免它们。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In some cases it is useful to control the <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>order<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> in which 2 tasks will execute, without introducing an explicit dependency between those tasks.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T143155Z" creationid="msdx" creationdate="20141110T142923Z">
        <seg>在某些情况下，控制两个任务的执行的<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>顺序<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>，而不引入这些任务之间的显式依赖，是很有用的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In some cases the artifact that you need to sign may not be part of a configuration.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160109T072925Z" creationid="95" creationdate="20160109T072615Z">
        <seg>在某些情况下，你需要签名的artifact 可能不是配置的一部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In some cases, however, it can be necessary to tweak dependency resolution to ensure that your build receives exactly the right dependencies.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T053942Z" creationid="95" creationdate="20151115T053942Z">
        <seg>然而，在某些情况下，会有必要调整依赖解析，以确保你的构建能得到正确的依赖关系。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In some corporate environments, the list of module versions that can be declared in gradle builds is maintained and audited externally.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T065215Z" creationid="95" creationdate="20151115T065215Z">
        <seg>在一些企业的环境中，可以声明在 gradle 构建中的模块版本列表，是在外部维护和审核的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In such a case it would be nice, if Ant's optional task would automatically pickup the classpath defined in the <bpt i="4" x="4">&lt;c4&gt;</bpt>gradesettings<ept i="4">&lt;/c4&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161213T154656Z" creationid="95" creationdate="20161213T154656Z">
        <seg>在这种情况下，如果Ant 的可选任务会自动地获取在 <bpt i="4" x="4">&lt;c4&gt;</bpt>gradesettings<ept i="4">&lt;/c4&gt;</ept>中定义的classpath，就很好。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In such a case you can use the path notation of the pattern, so that the pattern is applied only to the test task of a specific subproject.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T040133Z" creationid="Administrator" creationdate="20150428T040133Z">
        <seg>在这种情况下你可以使用路径标记法的模式，这样该模式就会只应用于特定的子项目的测试任务中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In such a case you need to generate multiple POMs. In such a case you have to explicitly declare each artifact you want to publish to a Maven repository.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T144127Z" creationid="95" creationdate="20160106T144127Z">
        <seg>在这种情况下，你需要生成多个 POMs。在这种情况下，你必须显式声明你想要发布到一个 Maven 仓库的每一个构件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In such a scenario, the custom task should sufficiently declare the inputs/outputs relevant to the copy action.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T140639Z" creationid="msdx" creationdate="20141113T140639Z">
        <seg>在这种情况下，自定义任务应充分声明与复制操作有关的输入/输出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In the above case, we are using the short name ‘<bpt i="0" x="0">&lt;c0&gt;</bpt>java<ept i="0">&lt;/c0&gt;</ept>’ to apply the <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>JavaPlugin<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141122T162208Z" creationid="msdx" creationdate="20141122T162208Z">
        <seg>在上述例子中，我们使用短名称<bpt i="0" x="0">&lt;c0&gt;</bpt>java<ept i="0">&lt;/c0&gt;</ept>去应用<bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>JavaPlugin<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In the build file of the <bpt i="0" x="0">&lt;c0&gt;</bpt>water<ept i="0">&lt;/c0&gt;</ept> project we use an <bpt i="1" x="1">&lt;c1&gt;</bpt>afterEvaluate<ept i="1">&lt;/c1&gt;</ept> notification.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160530T144519Z" creationid="95" creationdate="20160530T144519Z">
        <seg>在这个<bpt i="0" x="0">&lt;c0&gt;</bpt>water<ept i="0">&lt;/c0&gt;</ept>项目的构建文件中，我们使用了一个<bpt i="1" x="1">&lt;c1&gt;</bpt>afterEvaluate<ept i="1">&lt;/c1&gt;</ept>通知。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In the build script, the developer declares dependencies with the module group and name, but uses a placeholder version, for example: '<bpt i="0" x="0">&lt;c0&gt;</bpt>default<ept i="0">&lt;/c0&gt;</ept>'.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T070316Z" creationid="95" creationdate="20151115T070316Z">
        <seg>在构建脚本中，开发人员使用模块组与名称声明依赖，但使用占位符版本，例如：“<bpt i="0" x="0">&lt;c0&gt;</bpt>default<ept i="0">&lt;/c0&gt;</ept>”。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In the case of the Ant javac task, this means that a new process will be forked for each compile task, which can slow down compilation.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T135858Z" creationid="Administrator" creationdate="20150427T135858Z">
        <seg>在 Ant javac 任务中，这意味着将会为每一个compile任务fork一个新的进程，而这将会使编译变慢。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In the context of build comparison, a build is not necessarily a Gradle build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161228T134335Z" creationid="95" creationdate="20161219T151607Z">
        <seg>在构建比较的场景中，一个构建不一定就是一个Gradle构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In the current release client modules have one limitation.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T091741Z" creationid="haohang" creationdate="20150801T091741Z">
        <seg>在当前版本客户端模块有一个缺陷。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In the example above <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>repository<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> and <bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;e3&gt;</bpt>authentication<ept i="3">&lt;/e3&gt;</ept><ept i="2">&lt;/s2&gt;</ept> are such bean elements.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T135438Z" creationid="95" creationdate="20160105T135403Z">
        <seg>在上例中<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>repository<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>和<bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;e3&gt;</bpt>authentication<ept i="3">&lt;/e3&gt;</ept><ept i="2">&lt;/s2&gt;</ept>都是这样的 bean 元素。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In the example above, <bpt i="0" x="0">&lt;c0&gt;</bpt>orca<ept i="0">&lt;/c0&gt;</ept> has a dependency on <bpt i="1" x="1">&lt;c1&gt;</bpt>seal-1.0<ept i="1">&lt;/c1&gt;</ept> whereas <bpt i="2" x="2">&lt;c2&gt;</bpt>shark<ept i="2">&lt;/c2&gt;</ept> has a dependency on<bpt i="3" x="3">&lt;c3&gt;</bpt>seal-2.0<ept i="3">&lt;/c3&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T041717Z" creationid="haohang" creationdate="20150807T041717Z">
        <seg>在上面的例子中 <bpt i="0" x="0">&lt;c0&gt;</bpt>orca<ept i="0">&lt;/c0&gt;</ept> 依赖 <bpt i="1" x="1">&lt;c1&gt;</bpt>seal-1.0<ept i="1">&lt;/c1&gt;</ept> 而 <bpt i="2" x="2">&lt;c2&gt;</bpt>shark<ept i="2">&lt;/c2&gt;</ept> 依赖于 <bpt i="3" x="3">&lt;c3&gt;</bpt>seal-2.0<ept i="3">&lt;/c3&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In the example above, a library is defined with a 'english' and 'french' flavor.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T081321Z" creationid="haohang" creationdate="20160408T081202Z">
        <seg>在上面的示例中，library 定义了“english”和“french”两个flavor。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In the example above, the content of the "<bpt i="0" x="0">&lt;c0&gt;</bpt>src/readme<ept i="0">&lt;/c0&gt;</ept>" directory will be included in the distribution (along with the files in the "<bpt i="1" x="1">&lt;c1&gt;</bpt>src/dist/main<ept i="1">&lt;/c1&gt;</ept>" directory which are added by default).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150701T034347Z" creationid="haohang" creationdate="20150701T034233Z">
        <seg>在上面的示例中，”<bpt i="0" x="0">&lt;c0&gt;</bpt>src/readme<ept i="0">&lt;/c0&gt;</ept>“目录的内容将被包含进 distribution（与默认添加的”<bpt i="1" x="1">&lt;c1&gt;</bpt>src/dist/main<ept i="1">&lt;/c1&gt;</ept>“目录中的文件一起）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In the example above, we <bpt i="1" x="1">&lt;s1&gt;</bpt><bpt i="2" x="2">&lt;e2&gt;</bpt>changed<ept i="2">&lt;/e2&gt;</ept><ept i="1">&lt;/s1&gt;</ept> the desired location of the class files after this conventional configuration had been performed.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141124T093240Z" creationid="msdx" creationdate="20141124T093240Z">
        <seg>在上面例子中，我们在约定配置被执行之后，<bpt i="1" x="1">&lt;s1&gt;</bpt><bpt i="2" x="2">&lt;e2&gt;</bpt>修改了<ept i="2">&lt;/e2&gt;</ept><ept i="1">&lt;/s1&gt;</ept>类文件所需的位置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In the example above, we applied the Java plugin which, among other things, did the following:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141124T074010Z" creationid="msdx" creationdate="20141124T074010Z">
        <seg>在上面的示例中，我们应用 Java 插件，除其他外，还做了下列操作：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In the examples above, it is still possible to execute <bpt i="0" x="0">&lt;c0&gt;</bpt>taskY<ept i="0">&lt;/c0&gt;</ept> without causing <bpt i="1" x="1">&lt;c1&gt;</bpt>taskX<ept i="1">&lt;/c1&gt;</ept> to run:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T013145Z" creationid="msdx" creationdate="20141111T013145Z">
        <seg>在上面的例子中，它仍有可能执行<bpt i="0" x="0">&lt;c0&gt;</bpt>taskY<ept i="0">&lt;/c0&gt;</ept>而不会导致<bpt i="1" x="1">&lt;c1&gt;</bpt>taskX<ept i="1">&lt;/c1&gt;</ept>也运行：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In the following example, artifacts and runtime dependencies are taken from the `java` component, which is added by the <bpt i="0" x="0">&lt;c0&gt;</bpt>Java Plugin<ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170211T140747Z" creationid="95" creationdate="20170211T140616Z">
        <seg>在以下示例中，工件和运行时依赖都来自于由 <bpt i="0" x="0">&lt;c0&gt;</bpt>Java Plugin<ept i="0">&lt;/c0&gt;</ept> 添加的 “java” 组件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In the following example, we create an Ant <bpt i="0" x="0">&lt;c0&gt;</bpt>path<ept i="0">&lt;/c0&gt;</ept> object, then iterate over the contents of it.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T011213Z" creationid="msdx" creationdate="20141116T011213Z">
        <seg>在以下示例中，我们创建一个 Ant 的 <bpt i="0" x="0">&lt;c0&gt;</bpt>path<ept i="0">&lt;/c0&gt;</ept>对象，然后循环访问它的内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In the introductory tutorial (<bpt i="0" x="0">&lt;a0&gt;</bpt>Chapter 6, <bpt i="1" x="1">&lt;i1&gt;</bpt>Build Script Basics<ept i="1">&lt;/i1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>) you have learned how to create simple tasks.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T160034Z" creationid="msdx" creationdate="20141109T160034Z">
        <seg>在入门教程 （<bpt i="0" x="0">&lt;a0&gt;</bpt>第 6 章，<bpt i="1" x="1">&lt;i1&gt;</bpt>构建脚本基础<ept i="1">&lt;/i1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>） 中，你已经学习了如何创建简单的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In the javadoc you can see the possible attributes you can set for a particular element.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T141540Z" creationid="95" creationdate="20160105T141540Z">
        <seg>在javadoc 中你可以看到可能的属性，这些属性你可以设置为特定的元素。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In the last example only one <bpt i="2" x="2">&lt;c2&gt;</bpt>action<ept i="2">&lt;/c2&gt;</ept> was down the hierarchy and therefore it was the only task that got executed.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T070927Z" creationid="haohang" creationdate="20160718T070927Z">
        <seg>在上一个例子中只有一个<bpt i="2" x="2">&lt;c2&gt;</bpt>action<ept i="2">&lt;/c2&gt;</ept>是在这个层次结构下，因此它是唯一一个被执行的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In the latter case, an <bpt i="3" x="3">&lt;c3&gt;</bpt>ivy.xml<ept i="3">&lt;/c3&gt;</ept> descriptor in the repository is supposed to contain all the necessary information.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151227T160646Z" creationid="95" creationdate="20151227T160110Z">
        <seg>在后者的情况下，这个仓库的 <bpt i="3" x="3">&lt;c3&gt;</bpt>ivy.xml<ept i="3">&lt;/c3&gt;</ept>描述符应该包含所有必要的信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In the long term, this mode will become the default mode, possibly the only mode for Gradle build execution.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160522T121821Z" creationid="95" creationdate="20160522T121821Z">
        <seg>长远来看，这种模式将成为默认模式，可能会是 Gradle 构建执行的唯一模式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In the settings file you can use a set of methods to build the project tree.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T041203Z" creationid="haohang" creationdate="20160519T041203Z">
        <seg>在设置文件中你可以使用一套方法来生成项目树。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In the tutorial in <bpt i="0" x="0">&lt;a0&gt;</bpt>Chapter 7, <bpt i="1" x="1">&lt;i1&gt;</bpt>Java Quickstart<ept i="1">&lt;/i1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> we used, for example, the <bpt i="2" x="2">&lt;c2&gt;</bpt>apply()<ept i="2">&lt;/c2&gt;</ept> method.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T040102Z" creationid="msdx" creationdate="20141108T040102Z">
        <seg>在<bpt i="0" x="0">&lt;a0&gt;</bpt>第 7 章， <bpt i="1" x="1">&lt;i1&gt;</bpt>Java 快速入门<ept i="1">&lt;/i1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>的教程中，我们使用了 <bpt i="2" x="2">&lt;c2&gt;</bpt>apply ()<ept i="2">&lt;/c2&gt;</ept>方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In this case the native Maven code we delegate to needs additional libraries.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T134615Z" creationid="95" creationdate="20160105T134435Z">
        <seg>在这种情况下，我们必须将委派本地的Maven代码给第三方库实现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In this case you can add an environment property in the project administration section (invisible to normal users).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T141948Z" creationid="msdx" creationdate="20141109T141948Z">
        <seg>在这种情况下，您可以在项目管理部分 （对普通用户不可见） 添加一个环境属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In this case you can directly sign the task that produces the artifact to sign.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160109T073050Z" creationid="95" creationdate="20160109T073050Z">
        <seg>在这种情况下，你可以直接签名生成了要签名的artifact 的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In this case, <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>all<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> input files are reported to the <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>IncrementalTaskInputs.outOfDate()<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept> action, and no input files are reported to the <bpt i="4" x="4">&lt;a4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>IncrementalTaskInputs.removed()<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/a4&gt;</ept> action:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160817T150434Z" creationid="95" creationdate="20160817T150434Z">
        <seg>在这种情况下，<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>所有的<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>输入文件都会被报告到 <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>IncrementalTaskInputs.outOfDate()<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>操作中，并且没有文件会被上报到 <bpt i="4" x="4">&lt;a4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>IncrementalTaskInputs.removed()<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/a4&gt;</ept> 操作：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In this case, all inputs will be considered "out of date":</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160817T145653Z" creationid="95" creationdate="20160817T145653Z">
        <seg>在这种情况下，所有的输入都被认为是“out of date”：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In this case, the <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>IncrementalTaskInputs.outOfDate()<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> action will be executed for any input file that was <bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;e3&gt;</bpt>added<ept i="3">&lt;/e3&gt;</ept><ept i="2">&lt;/s2&gt;</ept> or <bpt i="4" x="4">&lt;s4&gt;</bpt><bpt i="5" x="5">&lt;e5&gt;</bpt>modified<ept i="5">&lt;/e5&gt;</ept><ept i="4">&lt;/s4&gt;</ept>, and the <bpt i="6" x="6">&lt;a6&gt;</bpt><bpt i="7" x="7">&lt;c7&gt;</bpt>IncrementalTaskInputs.removed()<ept i="7">&lt;/c7&gt;</ept><ept i="6">&lt;/a6&gt;</ept> action will be executed for any <bpt i="8" x="8">&lt;s8&gt;</bpt><bpt i="9" x="9">&lt;e9&gt;</bpt>removed<ept i="9">&lt;/e9&gt;</ept><ept i="8">&lt;/s8&gt;</ept> input file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160816T150121Z" creationid="95" creationdate="20160816T150121Z">
        <seg>在这种情况下，<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>IncrementalTaskInputs.outOfDate()<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> 操作会对任何<bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;e3&gt;</bpt>新加入的<ept i="3">&lt;/e3&gt;</ept><ept i="2">&lt;/s2&gt;</ept> 或者是 <bpt i="4" x="4">&lt;s4&gt;</bpt><bpt i="5" x="5">&lt;e5&gt;</bpt>已修改的<ept i="5">&lt;/e5&gt;</ept><ept i="4">&lt;/s4&gt;</ept>输入文件执行，并且<bpt i="6" x="6">&lt;a6&gt;</bpt><bpt i="7" x="7">&lt;c7&gt;</bpt>IncrementalTaskInputs.removed()<ept i="7">&lt;/c7&gt;</ept><ept i="6">&lt;/a6&gt;</ept>操作会对任何<bpt i="8" x="8">&lt;s8&gt;</bpt><bpt i="9" x="9">&lt;e9&gt;</bpt>被移除的<ept i="9">&lt;/e9&gt;</ept><ept i="8">&lt;/s8&gt;</ept>输入文件执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In this chapter we will discuss how to use plugins and the terminology and concepts surrounding plugins.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141122T161831Z" creationid="msdx" creationdate="20141122T161831Z">
        <seg>在这一章中，我们将讨论如何使用插件以及术语和插件相关的概念。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In this example :services:personservice depends on both :api and :shared.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T094923Z" creationid="haohang" creationdate="20160726T094923Z">
        <seg>在这个例子中 :services:personservice 同时依赖于 :api 和 :shared。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In this example we are adding a 'description' element for the generated POM. With this hook, you can modify any aspect of the POM. For example, you could replace the version range for a dependency with the actual version used to produce the build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T062431Z" creationid="95" creationdate="20170416T033110Z">
        <seg>在这个例子中我们添加了一个用于生成的 POM 的“描述”元素。通过这个钩子，你可以修改 POM 的任何方面的内容。例如，你可以使用生产构建的实际版本号来替换依赖的版本范围。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In this example we are adding a 'description' element to the generated Ivy dependency descriptor, but this this hook, allows you to modify any aspect of the generated descriptor.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170304T031632Z" creationid="95" creationdate="20170304T031122Z">
        <seg>在这个例子中，我们添加了一个“description”元素到生成的Ivy依赖描述符中，而这个hook，允许你去对这个生成的描述符的任何方面进行修改。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In this example we create an <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>additional<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> library containing only the interfaces of the <bpt i="2" x="2">&lt;c2&gt;</bpt>api<ept i="2">&lt;/c2&gt;</ept> project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T084959Z" creationid="haohang" creationdate="20160726T084959Z">
        <seg>在这个示例中，我们创建了一个<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>额外的<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>的库，它只包含<bpt i="2" x="2">&lt;c2&gt;</bpt>api<ept i="2">&lt;/c2&gt;</ept>项目的接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In this example, <bpt i="0" x="0">&lt;c0&gt;</bpt>GreetingPluginExtension<ept i="0">&lt;/c0&gt;</ept> is a plain old Groovy object with a field called <bpt i="1" x="1">&lt;c1&gt;</bpt>message<ept i="1">&lt;/c1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T130925Z" creationid="95" creationdate="20160820T130743Z">
        <seg>在这个示例中，<bpt i="0" x="0">&lt;c0&gt;</bpt>GreetingPluginExtension<ept i="0">&lt;/c0&gt;</ept> 是一个plain old Groovy 对象，它有一个成员变量 <bpt i="1" x="1">&lt;c1&gt;</bpt>message<ept i="1">&lt;/c1&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In this example, an <bpt i="0" x="0">&lt;c0&gt;</bpt>ext<ept i="0">&lt;/c0&gt;</ept> block adds two extra properties to the <bpt i="1" x="1">&lt;c1&gt;</bpt>project<ept i="1">&lt;/c1&gt;</ept> object.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T053941Z" creationid="msdx" creationdate="20141108T051409Z">
        <seg>在此示例中， 一个<bpt i="0" x="0">&lt;c0&gt;</bpt>ext<ept i="0">&lt;/c0&gt;</ept>代码块将两个额外属性添加到<bpt i="1" x="1">&lt;c1&gt;</bpt>project<ept i="1">&lt;/c1&gt;</ept>对象中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In this example, several settings can be grouped together within the <bpt i="0" x="0">&lt;c0&gt;</bpt>greeting<ept i="0">&lt;/c0&gt;</ept> closure.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T131614Z" creationid="95" creationdate="20160820T131412Z">
        <seg>在这个例子中，通过 <bpt i="0" x="0">&lt;c0&gt;</bpt>greeting<ept i="0">&lt;/c0&gt;</ept>闭包，多个配置可以被组合在一起。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In this example, we configure the <bpt i="0" x="0">&lt;c0&gt;</bpt>greet<ept i="0">&lt;/c0&gt;</ept> task <bpt i="1" x="1">&lt;c1&gt;</bpt>destination<ept i="1">&lt;/c1&gt;</ept> property as a closure, which is evaluated with the <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>Project.file()<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept> method to turn the return value of the closure into a file object at the last minute.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160828T132331Z" creationid="95" creationdate="20160820T132309Z">
        <seg>在这个例子中，我们配置了 <bpt i="0" x="0">&lt;c0&gt;</bpt>greet<ept i="0">&lt;/c0&gt;</ept> 任务的 <bpt i="1" x="1">&lt;c1&gt;</bpt>destination<ept i="1">&lt;/c1&gt;</ept> 属性为一个闭包， 它将在最后通过<bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>Project.file()<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept> 方法将闭包中的返回值转为一个文件对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In this example, we only want to require signing if we are building a release version and we are going to publish it.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160126T142545Z" creationid="95" creationdate="20160126T141430Z">
        <seg>在此示例中，我们只想要在我们构建一个我们即将去发布的发布版本的时候，才进行签名。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In this example, we pass the message for the <bpt i="0" x="0">&lt;c0&gt;</bpt>echo<ept i="0">&lt;/c0&gt;</ept> task as nested text:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141115T154923Z" creationid="msdx" creationdate="20141115T154637Z">
        <seg>在此示例中，我们将把作为嵌套文本的消息传给 <bpt i="0" x="0">&lt;c0&gt;</bpt>echo <ept i="0">&lt;/c0&gt;</ept>任务：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In this mode, Gradle configures only relevant projects (see <bpt i="4" x="4">&lt;a4&gt;</bpt>Section 56.1.1.1, “Configuration on demand”<ept i="4">&lt;/a4&gt;</ept>).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T024234Z" creationid="haohang" creationdate="20160519T024234Z">
        <seg>在此模式下，Gradle 只配置相关的项目（见<bpt i="4" x="4">&lt;a4&gt;</bpt>第 56.1.1.1 节，“Configuration on demand"<ept i="4">&lt;/a4&gt;</ept>）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In this way, enhanced tasks let you reuse a piece of behaviour in many different places, possibly across different builds.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T143432Z" creationid="95" creationdate="20160814T143432Z">
        <seg>通过这种方式，增强型的任务能够让你在许多不同的地方，甚至是跨越不同的构建，利用同样的行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>In your build script, a property called <bpt i="0" x="0">&lt;c0&gt;</bpt>ant<ept i="0">&lt;/c0&gt;</ept> is provided by Gradle.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141114T143323Z" creationid="msdx" creationdate="20141114T143323Z">
        <seg>在构建脚本中，Gradle 提供了一个名为 <bpt i="0" x="0">&lt;c0&gt;</bpt>ant<ept i="0">&lt;/c0&gt;</ept> 的属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Including other resources in the distribution</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070001Z" creationid="95" creationdate="20170416T070001Z">
        <seg>在 distribution 中包含其他资源</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Incremental compilation</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T132109Z" creationid="msdx" creationdate="20150509T132109Z">
        <seg>增量编译</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Incremental compilation requires dependency analysis of the source code.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T155428Z" creationid="msdx" creationdate="20150501T155306Z">
        <seg>增量编译需要源代码的相关性分析。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Incremental tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070714Z" creationid="95" creationdate="20170416T070714Z">
        <seg>增量任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Incremental tasks are an <bpt i="0" x="0">&lt;a0&gt;</bpt>incubating<ept i="0">&lt;/a0&gt;</ept> feature.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160815T150214Z" creationid="95" creationdate="20160815T150214Z">
        <seg>增量任务还是一个<bpt i="0" x="0">&lt;a0&gt;</bpt>孵化中<ept i="0">&lt;/a0&gt;</ept> 的功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Incubating integration plugins</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131550Z" creationid="msdx" creationdate="20150509T131550Z">
        <seg>孵化中的集成插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Incubating language plugins</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131539Z" creationid="msdx" creationdate="20150509T131539Z">
        <seg>正在孵化的语言插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Incubating software development plugins</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131557Z" creationid="msdx" creationdate="20150509T131557Z">
        <seg>孵化中的软件开发插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Information messages</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T070738Z" creationid="msdx" creationdate="20141116T070738Z">
        <seg>信息性消息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Information pertaining to the analysis as a whole, like server and database connections settings, have to be configured in the <bpt i="0" x="0">&lt;c0&gt;</bpt>sonarRunner<ept i="0">&lt;/c0&gt;</ept> block of this project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150519T123943Z" creationid="msdx" creationdate="20150514T152429Z">
        <seg>与分析有关的信息作为一个整体，比如服务器和数据库的连接设置，必须在这一个 project 的<bpt i="0" x="0">&lt;c0&gt;</bpt>sonarRunner<ept i="0">&lt;/c0&gt;</ept>块中进行配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Inherited properties and methods</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070825Z" creationid="95" creationdate="20170416T070825Z">
        <seg>继承的属性和方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Init script plugins</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070934Z" creationid="95" creationdate="20170416T070934Z">
        <seg>Init 脚本插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Init scripts can similarly have external dependencies defined.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161215T143713Z" creationid="95" creationdate="20161215T143713Z">
        <seg>init 脚本同样也可以定义外部依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>InitBuild</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T071556Z" creationid="haohang" creationdate="20150707T071556Z">
        <seg>InitBuild</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Initialization</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160518T032555Z" creationid="haohang" creationdate="20160518T032555Z">
        <seg>初始化</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Initialization Scripts</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070910Z" creationid="95" creationdate="20170416T070910Z">
        <seg>初始化脚本</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Initialization scripts (a.k.a.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161214T142353Z" creationid="95" creationdate="20161214T142353Z">
        <seg>初始化脚本 （也称为</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Injected configuration</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070830Z" creationid="95" creationdate="20170416T070830Z">
        <seg>注入配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Installing Gradle</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162029Z" creationid="msdx" creationdate="20141109T162029Z">
        <seg>安装 Gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Installs the application into a specified directory.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150702T105100Z" creationid="haohang" creationdate="20150702T105100Z">
        <seg>将应用程序安装到指定的目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Installs the associated artifacts to the local Maven cache, including Maven metadata generation.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151228T152113Z" creationid="95" creationdate="20151228T152041Z">
        <seg>将相关的构件安装到本地的 Maven 缓存，包括 Maven 元数据的生成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Instead of using a task name, you can define a dependency using a <bpt i="0" x="0">&lt;c0&gt;</bpt>Task<ept i="0">&lt;/c0&gt;</ept> object, as shown in this example:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T122524Z" creationid="msdx" creationdate="20141110T122444Z">
        <seg>您可以使用一个<bpt i="0" x="0">&lt;c0&gt;</bpt>Task<ept i="0">&lt;/c0&gt;</ept>对象而不是任务名称来定义依赖，如下：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Instead we will add more code samples and improve the Javadoc documentation.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T155701Z" creationid="95" creationdate="20161218T155701Z">
        <seg>相反的，我们将添加更多的代码示例来完善Javadoc 文档.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Instead, we plan to enhance Gradle's own compiler daemon to stay alive across Gradle invocations, reusing the same Scala compiler.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T081647Z" creationid="msdx" creationdate="20150503T081629Z">
        <seg>相反，我们打算加强 Gradle 自己的编译器守护进程，使得在跨 Gradle 调用时继续存活，利用同一个 Scala 编译器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Instructions for mapping Gradle configurations to Maven scopes.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151228T153128Z" creationid="95" creationdate="20151228T152812Z">
        <seg>将Gradle配置映射到Maven scopes的说明。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Integer</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T151122Z" creationid="msdx" creationdate="20150504T151122Z">
        <seg>Integer</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Integration plugins</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131545Z" creationid="msdx" creationdate="20150509T131545Z">
        <seg>集成插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>IntelliJ IDEA Integration</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T132135Z" creationid="msdx" creationdate="20150509T132135Z">
        <seg>IntelliJ IDEA 集成</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Interacting with Maven repositories</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070312Z" creationid="95" creationdate="20170416T070312Z">
        <seg>与 Maven 仓库的交互</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Internally, <bpt i="5" x="5">&lt;c5&gt;</bpt>eclipse-wtp<ept i="5">&lt;/c5&gt;</ept> also applies the <bpt i="6" x="6">&lt;c6&gt;</bpt>eclipse<ept i="6">&lt;/c6&gt;</ept> plugin so you don't need to apply both of those plugins.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T003400Z" creationid="haohang" creationdate="20150603T003400Z">
        <seg>在内部， <bpt i="5" x="5">&lt;c5&gt;</bpt>eclipse wtp<ept i="5">&lt;/c5&gt;</ept>也应用了<bpt i="6" x="6">&lt;c6&gt;</bpt>eclipse<ept i="6">&lt;/c6&gt;</ept>插件，所以你不需要同时应用这两个插件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Internally, Gradle uses Ant and Ivy.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T130707Z" creationid="msdx" creationdate="20141116T130707Z">
        <seg>Gradle 内部使用 Ant 和 Ivy。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Introduction</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T161840Z" creationid="msdx" creationdate="20141109T161840Z">
        <seg>介绍</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Introduction to the Tooling API</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T071008Z" creationid="95" creationdate="20170416T071008Z">
        <seg>Tooling API 简介</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Is this cool or is this cool?</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160527T161145Z" creationid="95" creationdate="20160527T161145Z">
        <seg>是刚才的那个酷还是现在的这个酷？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It adds a default EAR archive task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T094310Z" creationid="msdx" creationdate="20150503T094310Z">
        <seg>它添加了一个默认的EAR archive task。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It adds an instance for each source set in the project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T134618Z" creationid="Administrator" creationdate="20150427T134618Z">
        <seg>它为该project里的每个源集添加一个实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It allows Gradle to provide conciseness through convention-over-configuration and sensible defaults yet not require complete reconfiguration if a conventional default needs to be changed.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141124T110947Z" creationid="msdx" creationdate="20141124T095238Z">
        <seg>它可以令 Gradle 通过约定优于配置及合理的默认值来实现简洁的配置方式。而且，如果默认约定需要进行修改时，也不需要进行完全的重新配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It allows running and bundling applications for the jvm.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150701T035512Z" creationid="haohang" creationdate="20150701T035512Z">
        <seg>它允许为 jvm 运行和捆绑应用程序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It allows you to add <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>conditional<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> execution of the built-in actions of such a task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T055446Z" creationid="msdx" creationdate="20141111T055446Z">
        <seg>它允许您向一个任务的内置操作中添加执行<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>条件<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It also adds the dependencies of the other project to the classpath.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T084132Z" creationid="haohang" creationdate="20160726T084132Z">
        <seg>它也把其他项目的依赖添加到类路径中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It also can be used to force versions of first level dependencies.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150721T091115Z" creationid="haohang" creationdate="20150721T091115Z">
        <seg>它也可以用于强制第一级依赖的版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It also creates a single distribution in the distributions container extension named "<bpt i="3" x="3">&lt;c3&gt;</bpt>main<ept i="3">&lt;/c3&gt;</ept>".</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150701T030303Z" creationid="haohang" creationdate="20150701T030109Z">
        <seg>它还在分发容器扩展中创建了一个名为“<bpt i="3" x="3">&lt;c3&gt;</bpt>main<ept i="3">&lt;/c3&gt;</ept>”的 distribution。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It also generates a report once test execution is complete.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T140309Z" creationid="Administrator" creationdate="20150427T140309Z">
        <seg>测试执行完成后，它还会生成一份报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It also leverages the <bpt i="0" x="0">&lt;c0&gt;</bpt>wrapper<ept i="0">&lt;/c0&gt;</ept> task from the Wrapper plugin (see <bpt i="1" x="1">&lt;a1&gt;</bpt>Chapter 48, <bpt i="2" x="2">&lt;i2&gt;</bpt>Wrapper Plugin<ept i="2">&lt;/i2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>), which means that the Gradle Wrapper will also be installed into the project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T071513Z" creationid="haohang" creationdate="20150707T071513Z">
        <seg>它还利用了 Wrapper 插件的 <bpt i="0" x="0">&lt;c0&gt;</bpt>wrapper<ept i="0">&lt;/c0&gt;</ept> 任务（见<bpt i="1" x="1">&lt;a1&gt;</bpt>第 48章，<bpt i="2" x="2">&lt;i2&gt;</bpt>Wrapper 插件<ept i="2">&lt;/i2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>），这意味着 Gradle Wrapper 也将被安装到该项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It also preserves the context and it is arguably the most readable.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T092423Z" creationid="msdx" creationdate="20141110T092423Z">
        <seg>它也保留了上下文，且可以说是可读性最强的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It applies the Groovy plugin, and adds the Gradle API as a compile-time dependency.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160815T145015Z" creationid="95" creationdate="20160815T145015Z">
        <seg>它配置使用Groovy插件，并且添加Gradle API 作为编译时依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It assigns those configurations to tasks such as <bpt i="0" x="0">&lt;c0&gt;</bpt>compileJava<ept i="0">&lt;/c0&gt;</ept> and <bpt i="1" x="1">&lt;c1&gt;</bpt>test<ept i="1">&lt;/c1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T084045Z" creationid="Administrator" creationdate="20150426T084045Z">
        <seg>它对一些任务指定了这些配置，如<bpt i="0" x="0">&lt;c0&gt;</bpt>compileJava<ept i="0">&lt;/c0&gt;</ept>和<bpt i="1" x="1">&lt;c1&gt;</bpt>test<ept i="1">&lt;/c1&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It automatically detects and executes all unit tests in the <bpt i="3" x="3">&lt;c3&gt;</bpt>test<ept i="3">&lt;/c3&gt;</ept> source set.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T140257Z" creationid="Administrator" creationdate="20150427T140257Z">
        <seg>它会自动检测和执行<bpt i="3" x="3">&lt;c3&gt;</bpt>test<ept i="3">&lt;/c3&gt;</ept>源集中的所有单元测试。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It can be any invokable “process” that produces observable “outcomes”.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161228T141246Z" creationid="95" creationdate="20161228T134407Z">
        <seg>它可以是任何可调用的产生可观察的“结果”的“过程”。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It can deal with Groovy code, mixed Groovy and Java code, and even pure Java code (although we don't necessarily recommend to use it for the latter).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T031816Z" creationid="msdx" creationdate="20150429T031816Z">
        <seg>它可以处理 Groovy 代码，以及混合的 Groovy 和 Java 代码，甚至是纯 Java 代码（尽管我们不一定推荐使用）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It can deal with Scala code, mixed Scala and Java code, and even pure Java code (although we don't necessarily recommend to use it for the latter).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T144825Z" creationid="msdx" creationdate="20150429T144446Z">
        <seg>它可以处理 Scala 代码，以及混合的 Scala 和 Java 代码，甚至是纯 Java 代码（尽管我们不一定推荐使用）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It can do things such as:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141123T150842Z" creationid="msdx" creationdate="20141123T150842Z">
        <seg>它可以做的事情如：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It causes the other project to be built first and adds the jar with the classes of the other project to the classpath.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T084115Z" creationid="haohang" creationdate="20160726T084006Z">
        <seg>它使其他项目先构建，并把其他项目的生成的 jar 文件添加到类路径中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It could also come from a local <bpt i="0" x="0">&lt;c0&gt;</bpt>lib<ept i="0">&lt;/c0&gt;</ept> directory, perhaps checked in to source control:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T080845Z" creationid="msdx" creationdate="20150429T080845Z">
        <seg>它也可以获取自本地中可能检入版本控制的<bpt i="0" x="0">&lt;c0&gt;</bpt>lib<ept i="0">&lt;/c0&gt;</ept>目录：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It creates a sample <bpt i="1" x="1">&lt;c1&gt;</bpt>build.gradle<ept i="1">&lt;/c1&gt;</ept> file, with comments and links to help get started.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T095025Z" creationid="haohang" creationdate="20150707T095025Z">
        <seg>它将创建一个示例<bpt i="1" x="1">&lt;c1&gt;</bpt>build.gradle<ept i="1">&lt;/c1&gt;</ept>文件，并包含注释和链接以帮助你开始。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It depends on the repository type, which information is need for actually finding the dependencies in the repository.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T103434Z" creationid="haohang" creationdate="20150801T103242Z">
        <seg>这取决于仓库类型，这些信息实际上需要用于在仓库中找到这个依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It disables the default JAR archive generation of the Java plugin and adds a default WAR archive task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T085836Z" creationid="msdx" creationdate="20150503T085836Z">
        <seg>它禁用了 Java 插件生成默认的 JAR archive，并添加了一个默认的 WAR archive 任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It does not make sense to use libraries from different releasable units together.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T060918Z" creationid="95" creationdate="20151115T060742Z">
        <seg>而一起使用来自不同的可发布单位的库，也不会有意义。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It does not need to be the same Gradle version as the “source” or “target” builds.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161228T141611Z" creationid="95" creationdate="20161228T141611Z">
        <seg>它不需要与“源构建”或者是“目标构建”同样的Gradle版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It doesn't require the Java plugin, but for projects that also use the Java plugin it disables the default JAR archive generation.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T094402Z" creationid="msdx" creationdate="20150503T094402Z">
        <seg>它不需要 Java 插件，但是对于使用了 Java 插件的项目，它将禁用默认的 JAR archive 的生成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It has no build script and gets nothing injected by another build script.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160727T055142Z" creationid="haohang" creationdate="20160727T055142Z">
        <seg>它没有构建脚本，并且其他项目也没有向它注入内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It has the following features:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T094124Z" creationid="haohang" creationdate="20150707T094124Z">
        <seg>它具有以下特点：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It holds all global configuration, most importantly server and database connection settings.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T091221Z" creationid="msdx" creationdate="20150512T091221Z">
        <seg>它拥有所有全局配置，最重要的服务器和数据库的连接设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It implements the standard Gradle type <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>Reporting<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept> and exposes a report container of type <bpt i="4" x="4">&lt;a4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>JacocoReportsContainer<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/a4&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T131951Z" creationid="msdx" creationdate="20150506T131951Z">
        <seg>它实现了标准的 Gradle 类型<bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>Reporting<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>，并呈现了一个<bpt i="4" x="4">&lt;a4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>JacocoReportsContainer<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/a4&gt;</ept>类型的报告容器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It installs those archives to your local Maven repository.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T143055Z" creationid="95" creationdate="20160105T143055Z">
        <seg>它将这些archives安装到你的本地 Maven 仓库中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It is advisable to keep your username and password in <bpt i="0" x="0">&lt;c0&gt;</bpt>gradle.properties<ept i="0">&lt;/c0&gt;</ept> rather than directly in the build file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150910T011707Z" creationid="haohang" creationdate="20150910T011707Z">
        <seg>最好是把你的用户名和密码写在<bpt i="0" x="0">&lt;c0&gt;</bpt>gradle.properties<ept i="0">&lt;/c0&gt;</ept>中，而不是直接写在构建文件中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It is also a well-behaved library, and makes no assumptions about your class loader structure or logging configuration.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T153216Z" creationid="95" creationdate="20161218T153049Z">
        <seg>它也是一个很优秀的库，并且不会有魅力从你的类加载器结构或者日志的配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It is also faster than analyzing each project separately.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T085312Z" creationid="msdx" creationdate="20150512T085312Z">
        <seg>同时，它比单独分析每个项目更快。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It is also more accurate because a per-dependency exclude rule does not guarantee the given transitive dependency does not show up in the configuration.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T102918Z" creationid="haohang" creationdate="20150801T102450Z">
        <seg>它也更准确，因为每个依赖排除规则并不能保证给定的传递依赖不会显示在配置中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It is also possible for an Ant target to depend on a Gradle task:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T061125Z" creationid="msdx" creationdate="20141116T061125Z">
        <seg>它也可以用于一个依赖于 Gradle 任务的 Ant 目标：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It is also possible to explicitly configure artifacts to be included in the publication.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20170216T063651Z" creationid="95" creationdate="20170211T140830Z">
        <seg>我们还可以显式地配置要被包含在publication的构件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It is also possible to receive notifications when any project is evaluated.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T132000Z" creationid="95" creationdate="20160521T132000Z">
        <seg>你也可以在每一个project 评估之后收到收到通知。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It is another layer of indirection.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151201T060731Z" creationid="haohang" creationdate="20151201T060731Z">
        <seg>它是一个间接层。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It is based on the <bpt i="1" x="1">&lt;a1&gt;</bpt>Sonar Runner<ept i="1">&lt;/a1&gt;</ept>, a Sonar client component that analyzes source code and build outputs, and stores all collected information in the Sonar database.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T055335Z" creationid="msdx" creationdate="20150513T055326Z">
        <seg>它基于<bpt i="1" x="1">&lt;a1&gt;</bpt>Sonar Runner<ept i="1">&lt;/a1&gt;</ept>，一个分析源代码及构建输出，并将所有收集的信息储存在 Sonar 数据库的 Sonar 客户端组件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It is common to want to sign the artifacts of a configuration.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160109T072036Z" creationid="95" creationdate="20160108T153609Z">
        <seg>签名一个配置的artifacts是很常见的情况。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It is currently <bpt i="1" x="1">&lt;a1&gt;</bpt>incubating<ept i="1">&lt;/a1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T060308Z" creationid="msdx" creationdate="20150513T060308Z">
        <seg>目前它还在<bpt i="1" x="1">&lt;a1&gt;</bpt>孵化中<ept i="1">&lt;/a1&gt;</ept>的状态。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It is done lazily, either when generating the jar, or by calling <bpt i="4" x="4">&lt;c4&gt;</bpt>writeTo<ept i="4">&lt;/c4&gt;</ept> or <bpt i="5" x="5">&lt;c5&gt;</bpt>effectiveManifest<ept i="5">&lt;/c5&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T151403Z" creationid="msdx" creationdate="20150428T151403Z">
        <seg>它是懒执行的，不管是对于生成一个jar包，还是调用了 <bpt i="4" x="4">&lt;c4&gt;</bpt>writeTo<ept i="4">&lt;/c4&gt;</ept> 或者 <bpt i="5" x="5">&lt;c5&gt;</bpt>effectiveManifest<ept i="5">&lt;/c5&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It is easy to apply settings to all binaries of a particular type:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160324T152252Z" creationid="95" creationdate="20160324T152252Z">
        <seg>让设置应用于指定类型的所有二进制文件很简单：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It is easy to iterate over the dependency artifacts of a configuration:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T091143Z" creationid="haohang" creationdate="20150731T100716Z">
        <seg>它可以轻松地遍历一个配置的依赖 artifacts：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It is good enough to change the respective entry in the <bpt i="0" x="0">&lt;c0&gt;</bpt>gradle-wrapper.properties<ept i="0">&lt;/c0&gt;</ept> file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T035923Z" creationid="95" creationdate="20161217T160926Z">
        <seg>只需要修改<bpt i="0" x="0">&lt;c0&gt;</bpt>gradle wrapper.properties<ept i="0">&lt;/c0&gt;</ept>文件中的相应属性就够了。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It is important to distinguish between the name of the archive task and the name of the archive generated by the archive task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T155120Z" creationid="msdx" creationdate="20141113T155120Z">
        <seg>区分归档任务的名称和归档任务生成的归档文件的名称是很重要的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It is important to note that if you pass a closure to the <bpt i="3" x="3">&lt;c3&gt;</bpt>getByName()<ept i="3">&lt;/c3&gt;</ept> method, this closure is applied to <bpt i="4" x="4">&lt;s4&gt;</bpt><bpt i="5" x="5">&lt;e5&gt;</bpt>configure<ept i="5">&lt;/e5&gt;</ept><ept i="4">&lt;/s4&gt;</ept> the task, not when the task executes.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T101349Z" creationid="msdx" creationdate="20141110T092806Z">
        <seg>特别要注意的是，如果您向<bpt i="3" x="3">&lt;c3&gt;</bpt>getByName()<ept i="3">&lt;/c3&gt;</ept>方法传入一个闭包，这个闭包的应用是在<bpt i="4" x="4">&lt;s4&gt;</bpt><bpt i="5" x="5">&lt;e5&gt;</bpt>配置<ept i="5">&lt;/e5&gt;</ept><ept i="4">&lt;/s4&gt;</ept>这个任务的时候，而不是任务执行的时候。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It is important to note that the content of a file collection is evaluated lazily, when it is needed.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T161234Z" creationid="msdx" creationdate="20141112T161234Z">
        <seg>要注意的一个地方是，一个文件集合的内容是缓计算的，它只在需要的时候才计算。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It is important to note that the custom archives you are creating as part of your build are not automatically assigned to any configuration.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151226T091003Z" creationid="95" creationdate="20151226T091003Z">
        <seg>重点注意：你所创建的作为构建中的一部分的自定义archives，不会自动地指向任何的配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It is important to note that the returned files of the copied configuration are often but not always the same than the returned files of the dependency subset of the original configuration.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T040901Z" creationid="haohang" creationdate="20150807T040901Z">
        <seg>要重点注意，复制的配置所返回的文件，往往并不总是与原始配置的依赖子集所返回的文件一样。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It is important to note that those <bpt i="4" x="4">&lt;c4&gt;</bpt>provided<ept i="4">&lt;/c4&gt;</ept> configurations work transitively.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T091604Z" creationid="msdx" creationdate="20150503T091211Z">
        <seg>要特别注意，这些<bpt i="4" x="4">&lt;c4&gt;</bpt>provided<ept i="4">&lt;/c4&gt;</ept>配置的传递使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It is inconvenient to add the task explicitly for every project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160526T155207Z" creationid="95" creationdate="20160526T155207Z">
        <seg>因为要为每一个project 添加任务显示很不方便。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It is ironic that in a language known for its rich library of open source components that Java has no concept of libraries or versions.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150716T073811Z" creationid="haohang" creationdate="20150716T073811Z">
        <seg>令人啼笑皆非的是，以其丰富的开源组件库著称的语言，Java 竟然没有库或者版本的概念。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It is not a big deal to set-up a custom repository.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151130T051222Z" creationid="haohang" creationdate="20151130T051222Z">
        <seg>想在设置一个自定义的仓库并不算什么。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It is not available for Maven repositories, or custom Ivy <bpt i="0" x="0">&lt;c0&gt;</bpt>DependencyResolver<ept i="0">&lt;/c0&gt;</ept> implementations.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T091434Z" creationid="95" creationdate="20151115T091402Z">
        <seg>它不能用于 Maven 仓库，或自定义的 Ivy <bpt i="0" x="0">&lt;c0&gt;</bpt>DependencyResolver<ept i="0">&lt;/c0&gt;</ept>实现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It is not necessary or possible to specify the tool chain that should be used to build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T091542Z" creationid="haohang" creationdate="20160408T091402Z">
        <seg>指定构建所使用的工具链是不必要和可能的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It is only able to be used if there is a valid "<bpt i="1" x="1">&lt;c1&gt;</bpt>pom.xml<ept i="1">&lt;/c1&gt;</ept>" file in the directory that the <bpt i="2" x="2">&lt;c2&gt;</bpt>init<ept i="2">&lt;/c2&gt;</ept> task is invoked in.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T092512Z" creationid="haohang" creationdate="20150707T083616Z">
        <seg>它仅用于当有一个有效的“<bpt i="1" x="1">&lt;c1&gt;</bpt>pom.xml<ept i="1">&lt;/c1&gt;</ept>”文件在 <bpt i="2" x="2">&lt;c2&gt;</bpt>init<ept i="2">&lt;/c2&gt;</ept> 任务被调用的目录的时候。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It is particularly effective when frequently compiling small code increments, as is often done at development time.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T154011Z" creationid="msdx" creationdate="20150501T153543Z">
        <seg>频繁编译代码的增量部分是非常有用的，因为在开发时我们经常要这样做。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It is possible for different repositories to provide a different binary artifact in response to the same artifact identifier.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T152725Z" creationid="95" creationdate="20151129T152725Z">
        <seg>不同的仓库提供不同的二进制构件以响应相同的构件标识符是可能的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It is possible to execute tasks <bpt i="0" x="0">&lt;c0&gt;</bpt>A<ept i="0">&lt;/c0&gt;</ept> and <bpt i="1" x="1">&lt;c1&gt;</bpt>B<ept i="1">&lt;/c1&gt;</ept> independently.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T013941Z" creationid="msdx" creationdate="20141111T013939Z">
        <seg>它是可以独立地执行任务<bpt i="0" x="0">&lt;c0&gt;</bpt>A<ept i="0">&lt;/c0&gt;</ept>和<bpt i="1" x="1">&lt;c1&gt;</bpt>B<ept i="1">&lt;/c1&gt;</ept> 的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It is possible to modify virtually any aspect of the created POM should you need to.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T062453Z" creationid="95" creationdate="20170416T062453Z">
        <seg>如果有需要的话，你也可以修改所创建的POM的几乎任何方面的内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It is possible to modify virtually any aspect of the created descriptor should you need to.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170304T031955Z" creationid="95" creationdate="20170304T031849Z">
        <seg>如果有需要的话，你也可以修改所创建的描述符的几乎任何方面。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It is possible to override this on a per-component basis, by specifying the set of <bpt i="3" x="3">&lt;c3&gt;</bpt>targetBuildTypes<ept i="3">&lt;/c3&gt;</ept>, <bpt i="4" x="4">&lt;c4&gt;</bpt>targetPlatforms<ept i="4">&lt;/c4&gt;</ept> and/or <bpt i="5" x="5">&lt;c5&gt;</bpt>targetFlavors<ept i="5">&lt;/c5&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T082910Z" creationid="haohang" creationdate="20160408T082910Z">
        <seg>通过指定的 <bpt i="3" x="3">&lt;c3&gt;</bpt>targetBuildTypes<ept i="3">&lt;/c3&gt;</ept>， <bpt i="4" x="4">&lt;c4&gt;</bpt>targetPlatforms<ept i="4">&lt;/c4&gt;</ept> 或 <bpt i="5" x="5">&lt;c5&gt;</bpt>targetFlavors<ept i="5">&lt;/c5&gt;</ept>，是可以在每一个组件的基础上进行重写的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It is possible to use this property to create a task to generate all possible variants on a particular machine.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T084645Z" creationid="haohang" creationdate="20160408T084645Z">
        <seg>可以用这个属性来创建一个任务，生成在某一特定计算机上所有可能的变种。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It is preferable to run this command from your Gradle project directory so that the settings of the UI will be stored in your project directory.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T150324Z" creationid="msdx" creationdate="20141105T150313Z">
        <seg>最好是从Gradle项目目录运行此命令，这样对UI的设置就可以存储在你的项目目录中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It is preferable to use the <bpt i="0" x="0">&lt;c0&gt;</bpt>Copy<ept i="0">&lt;/c0&gt;</ept> task wherever possible, as it support incremental building and task dependency inference without any extra effort on your part.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T135103Z" creationid="msdx" creationdate="20141113T134207Z">
        <seg>在可能的情况下，最好是使用<bpt i="0" x="0">&lt;c0&gt;</bpt>Copy<ept i="0">&lt;/c0&gt;</ept>任务，因为它支持增量构建和任务依赖关系推理，而不需要你额外付出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It is preferable to using <bpt i="1" x="1">&lt;c1&gt;</bpt>new File(somePath)<ept i="1">&lt;/c1&gt;</ept>, as <bpt i="2" x="2">&lt;c2&gt;</bpt>file()<ept i="2">&lt;/c2&gt;</ept> always evaluates the supplied path relative to the project directory, which is fixed, rather than the current working directory, which can change depending on how the user runs Gradle.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T144749Z" creationid="msdx" creationdate="20141112T144326Z">
        <seg>由于<bpt i="2" x="2">&lt;c2&gt;</bpt>file()<ept i="2">&lt;/c2&gt;</ept>方法总是去计算所提供的路径相对于项目目录的路径，最好是使用<bpt i="1" x="1">&lt;c1&gt;</bpt>new File(somePath)<ept i="1">&lt;/c1&gt;</ept>，因为它是一个固定的路径，而不会因为用户运行Gradle的具体工作目录而改变。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It is represented by the <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>FileCollection<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept> interface.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T145123Z" creationid="msdx" creationdate="20141112T144942Z">
        <seg>它通过<bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>FileCollection<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>接口来表示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It is represented by the <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>FileTree<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept> interface.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T161854Z" creationid="msdx" creationdate="20141112T161854Z">
        <seg>它通过<bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>FileTree<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>接口表示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It is required because in the settings file it is defined, which projects are taking part in the multi-project build (see <bpt i="1" x="1">&lt;a1&gt;</bpt>Chapter 56, <bpt i="2" x="2">&lt;i2&gt;</bpt>Multi-project Builds<ept i="2">&lt;/i2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T025019Z" creationid="haohang" creationdate="20160519T025019Z">
        <seg>因为在这个设置文件中，会定义哪些项目会加入这个多项目构建（见<bpt i="1" x="1">&lt;a1&gt;</bpt>第56章，<bpt i="2" x="2">&lt;i2&gt;</bpt>多项目构建<ept i="2">&lt;/i2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It is typically only applied to the root project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150713T095523Z" creationid="haohang" creationdate="20150713T095523Z">
        <seg>它通常只应用于根项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It is usually our favorite.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T092449Z" creationid="msdx" creationdate="20141110T092449Z">
        <seg>它是我们通常最喜欢的方式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It is, however, possible to analyze a different language for each project in a multi-project build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150520T143223Z" creationid="msdx" creationdate="20150520T143223Z">
        <seg>不过，在多项目构建中你可以为每一个项目分析一种不同的语言。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It makes full use of the type system, is more expressive and easier to maintain.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T124038Z" creationid="msdx" creationdate="20141111T124017Z">
        <seg>它充分利用了类型系统，更具有表现力而且易于维护。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It may be the same project as either the “target” or “source” build or may be a completely separate project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161228T141451Z" creationid="95" creationdate="20161228T141358Z">
        <seg>它可能是与“目标构建”或“源构建”相同的项目，也可能是一个完全独立的项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It may not be immediately apparent, but using key Gradle features like the <bpt i="1" x="1">&lt;c1&gt;</bpt>allprojects<ept i="1">&lt;/c1&gt;</ept> and <bpt i="2" x="2">&lt;c2&gt;</bpt>subprojects<ept i="2">&lt;/c2&gt;</ept> keywords automatically cause your projects to be coupled.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T093616Z" creationid="haohang" creationdate="20160726T093437Z">
        <seg>它可能不明显，但使用关键的 Gradle 特性，像<bpt i="1" x="1">&lt;c1&gt;</bpt>allprojects<ept i="1">&lt;/c1&gt;</ept>和<bpt i="2" x="2">&lt;c2&gt;</bpt>subprojets<ept i="2">&lt;/c2&gt;</ept>关键字会自动导致你的项目耦合。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It must be explicitly specified.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T094117Z" creationid="haohang" creationdate="20150707T094117Z">
        <seg>它必须显式指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It provides the syntax for the <bpt i="0" x="0">&lt;c0&gt;</bpt>build.xml<ept i="0">&lt;/c0&gt;</ept>, the handling of the targets, special constructs like macrodefs, and so on.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141114T072321Z" creationid="msdx" creationdate="20141114T072321Z">
        <seg>它提供了用于<bpt i="0" x="0">&lt;c0&gt;</bpt>build.xml<ept i="0">&lt;/c0&gt;</ept>，处理的目标，特殊的构造方法比如宏，还有其他等等的语法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It provides utmost flexibility to adapt Gradle to your unique needs.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141101T124555Z" creationid="msdx" creationdate="20141101T124546Z">
        <seg>它提供了最大限度的灵活性，以满足你对Gradle的特殊需求。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It searches for a <bpt i="0" x="0">&lt;c0&gt;</bpt>settings.gradle<ept i="0">&lt;/c0&gt;</ept> in a directory called <bpt i="1" x="1">&lt;c1&gt;</bpt>master<ept i="1">&lt;/c1&gt;</ept> which has the same nesting level as the current dir.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T073827Z" creationid="haohang" creationdate="20160519T073827Z">
        <seg>它将在一个与当前目录有相同嵌套层的叫做<bpt i="1" x="1">&lt;c1&gt;</bpt>master<ept i="1">&lt;/c1&gt;</ept>的目录里面搜索<bpt i="0" x="0">&lt;c0&gt;</bpt>settings.gradle<ept i="0">&lt;/c0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It serves as the basis for many of the other Gradle plugins.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141126T121027Z" creationid="msdx" creationdate="20141126T121027Z">
        <seg>它是很多其他 Gradle 插件的基础服务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It simply removes the directory denoted by its <bpt i="3" x="3">&lt;c3&gt;</bpt>dir<ept i="3">&lt;/c3&gt;</ept> property.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T134348Z" creationid="Administrator" creationdate="20150427T134348Z">
        <seg>它只是删除由其<bpt i="3" x="3">&lt;c3&gt;</bpt>dir<ept i="3">&lt;/c3&gt;</ept>属性表示的目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It stops the build afterwards if <bpt i="1" x="1">&lt;c1&gt;</bpt>ignoreFailures<ept i="1">&lt;/c1&gt;</ept> is false and there are failing tests.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T015104Z" creationid="Administrator" creationdate="20150428T015104Z">
        <seg>如果<bpt i="1" x="1">&lt;c1&gt;</bpt>ignoreFailures<ept i="1">&lt;/c1&gt;</ept>为 false，并且有测试不通过，那它会停止继续构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It supports creating brand new projects of different types as well as converting existing builds (e.g. An Apache Maven build) to be Gradle builds.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T071001Z" creationid="haohang" creationdate="20150707T071001Z">
        <seg>它支持创建不同类型的全新项目，以及将现有的构建 (如 Apache Maven 构建) 转换成 Gradle 构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It supports the core javadoc options and the options of the standard doclet described in the <bpt i="3" x="3">&lt;a3&gt;</bpt>reference documentation<ept i="3">&lt;/a3&gt;</ept> of the Javadoc executable.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T133821Z" creationid="Administrator" creationdate="20150427T133821Z">
        <seg>它支持核心的 javadoc 参数选项，以及在Javadoc可执行文件的<bpt i="3" x="3">&lt;a3&gt;</bpt>参考文档<ept i="3">&lt;/a3&gt;</ept>中描述的标准 doclet 参数选项。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It then filters the retrieved files by specified dependencies.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T040150Z" creationid="haohang" creationdate="20150807T040150Z">
        <seg>然后，由指定的依赖筛选获取的文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It turns out that in majority of cases you want to use the per-configuration exclusion.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T101440Z" creationid="haohang" creationdate="20150801T101440Z">
        <seg>事实证明，在大多数情况下你想要排除每一个配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It will also be used to get hold of the Groovy compiler and Groovydoc tool, respectively.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T075855Z" creationid="msdx" creationdate="20150429T075855Z">
        <seg>它还将用于分别获取Groovy 编译器及 Groovydoc 工具。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It will also be used to get hold of the Scala compiler and Scaladoc tool, respectively.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T152829Z" creationid="msdx" creationdate="20150429T152829Z">
        <seg>它还将用于分别获取Scala 编译器及 Scaladoc 工具。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It will only aggregate the reporting tasks that are independently being executed as part of the build run.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150713T095746Z" creationid="haohang" creationdate="20150713T095746Z">
        <seg>它只聚合作为构建的一部分正在独立运行的报告任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It works the same way as the task with some major limitations though.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T131524Z" creationid="msdx" creationdate="20141113T131524Z">
        <seg>它是与任务一样的工作方式，尽管它有一些主要的限制。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>It's because workspace contains a lot of user specific temporary data and typically it is not desirable to manipulate it outside IDEA.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T072222Z" creationid="haohang" creationdate="20150625T072222Z">
        <seg>这是因为工作区包含大量的用户特定的临时数据，在 IDEA 之外操纵它的做法通常是不可取的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Ivy Publishing (new)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T071049Z" creationid="95" creationdate="20170416T071049Z">
        <seg>发布到Ivy（新）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Ivy repository</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T095655Z" creationid="haohang" creationdate="20150807T095655Z">
        <seg>Ivy 仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Ivy's dependency descriptor (<bpt i="0" x="0">&lt;c0&gt;</bpt>ivy.xml<ept i="0">&lt;/c0&gt;</ept>) can declare multiple artifacts.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150724T042927Z" creationid="haohang" creationdate="20150724T042927Z">
        <seg>Ivy 的依赖描述符（<bpt i="0" x="0">&lt;c0&gt;</bpt>ivy.xml<ept i="0">&lt;/c0&gt;</ept>）可以定义多个 artifact。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>JARs and WARs are generated into <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>project.buildDir<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/e1&gt;</ept>/libraries<ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T160046Z" creationid="msdx" creationdate="20141113T160032Z">
        <seg>JAR包和 WAR包会生成到 <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>project.buildDir<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/e1&gt;</ept>/libraries<ept i="0">&lt;/c0&gt;</ept>中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>JDepend</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T134231Z" creationid="msdx" creationdate="20150505T134231Z">
        <seg>jdepend</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>JUnit and TestNG allows sophisticated groupings of test methods.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T082136Z" creationid="Administrator" creationdate="20150428T082136Z">
        <seg>JUnit 和 TestNG 可以对测试方法进行复杂的分组。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>JUnit and TestNG are both supported.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T140315Z" creationid="Administrator" creationdate="20150427T140315Z">
        <seg>同时支持 JUnit 和 TestNG。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>JVM options</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162152Z" creationid="msdx" creationdate="20141109T162152Z">
        <seg>JVM 选项</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>JaCoCo Report configuration</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065523Z" creationid="95" creationdate="20170416T065523Z">
        <seg>JaCoCo 报告配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>JaCoCo specific task configuration</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065547Z" creationid="95" creationdate="20170416T065547Z">
        <seg>JaCoCo 的特定任务配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>JacocoReport</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T135919Z" creationid="msdx" creationdate="20150506T135919Z">
        <seg>JacocoReport</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Jar</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083215Z" creationid="msdx" creationdate="20150428T083215Z">
        <seg>Jar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Java</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T003751Z" creationid="haohang" creationdate="20150603T003751Z">
        <seg>Java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Java Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170211T140531Z" creationid="95" creationdate="20170211T140531Z">
        <seg>Java 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Java Quickstart</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163425Z" creationid="msdx" creationdate="20141109T163425Z">
        <seg>Java 快速入门</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Java plugin - dependency configurations</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T084650Z" creationid="Administrator" creationdate="20150426T084650Z">
        <seg>Java插件 ​​- 依赖配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Java plugin - tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T082923Z" creationid="Administrator" creationdate="20150426T082923Z">
        <seg>Java插件 ​​- 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Java source for the given source set</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T083501Z" creationid="Administrator" creationdate="20150426T083501Z">
        <seg>给定的源集的Java源代码</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Java version compatibility to use when compiling Java source.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T045851Z" creationid="Administrator" creationdate="20150427T045851Z">
        <seg>当编译Java源代码时所使用的Java版本兼容性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Java version to generate classes for.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T045931Z" creationid="Administrator" creationdate="20150427T045931Z">
        <seg>要生成的类的 Java 版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>JavaCompile</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083211Z" creationid="msdx" creationdate="20150428T083211Z">
        <seg>JavaCompile</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>JavaExec</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150702T105012Z" creationid="haohang" creationdate="20150702T105012Z">
        <seg>JavaExec</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Javadoc</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083216Z" creationid="msdx" creationdate="20150428T083216Z">
        <seg>Javadoc</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Jdt</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T105342Z" creationid="haohang" creationdate="20150624T105342Z">
        <seg>Jdt</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Jetty plugin - tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T150533Z" creationid="msdx" creationdate="20150504T150524Z">
        <seg>Jetty插件 - tasks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>JettyRun</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T150216Z" creationid="msdx" creationdate="20150504T150216Z">
        <seg>jettyRun</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>JettyRunWar</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T150422Z" creationid="msdx" creationdate="20150504T150422Z">
        <seg>jettyRunWar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>JettyStop</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T150447Z" creationid="msdx" creationdate="20150504T150447Z">
        <seg>jettyStop</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Just drop your classes in a certain directory and Gradle automatically compiles them and puts them in the classpath of your build script.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T043450Z" creationid="95" creationdate="20161211T043450Z">
        <seg>只需要把你的类放在一个确定的目录，Gradle会自动地对它们编译，并且把它们加入到你的构建脚本的classpath中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Just enter whatever you would normally enter after 'gradle' on the command line.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141211T030824Z" creationid="msdx" creationdate="20141105T160336Z">
        <seg>你只需要输入命令行中你经常在“Gradle”后面输入的命令即可。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Just like Gradle's Ant based compiler, the Zinc based compiler supports joint compilation of Java and Scala code.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T155133Z" creationid="msdx" creationdate="20150501T155133Z">
        <seg>就像Gradle 上基于Ant 的编译器一样，基于 Zinc 的编译器支持 Java 和 Scala 代码的联合编译。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Just like the Java plugin, the Groovy plugin allows to configure custom locations for Groovy production and test sources.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T075333Z" creationid="msdx" creationdate="20150429T075333Z">
        <seg>和 Java 插件一样，Groovy 插件允许把 Groovy 的production 和test 的源文件配置为自定义的位置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Just like the Java plugin, the Scala plugin allows to configure custom locations for Scala production and test sources.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T152709Z" creationid="msdx" creationdate="20150429T152709Z">
        <seg>和 Java 插件一样，Scala 插件允许把 Scala 的production 和test 的源文件配置为自定义的位置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>LIFECYCLE</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T070729Z" creationid="msdx" creationdate="20141116T070729Z">
        <seg>LIFECYCLE</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>LIFECYCLE and higher</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T102925Z" creationid="msdx" creationdate="20141116T102925Z">
        <seg>LIFECYCLE 及更高</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Language for dependency based programming</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141101T124327Z" creationid="msdx" creationdate="20141101T035531Z">
        <seg>基于编程的依赖语言</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Language plugins</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131533Z" creationid="msdx" creationdate="20150509T131533Z">
        <seg>语言插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Later in this chapter we explain how Gradle looks for a settings file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T024719Z" creationid="haohang" creationdate="20160519T024719Z">
        <seg>在本章后面，我们会解释 Gradle 是怎么查找一个设置文件的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Legal Notice</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T161826Z" creationid="msdx" creationdate="20141109T161626Z">
        <seg>法律公告</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Let's add a property to the task, so we can customize it.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T151303Z" creationid="95" creationdate="20160814T151303Z">
        <seg>让我们添加一个属性到这个任务中，这样我们就可以自定义它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Let's add a simple extension object to the project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T124842Z" creationid="95" creationdate="20160820T124842Z">
        <seg>让我们向项目中添加一个简单的扩展对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Let's add a task to <bpt i="11" x="11">&lt;c11&gt;</bpt>bluewhale<ept i="11">&lt;/c11&gt;</ept> and <bpt i="12" x="12">&lt;c12&gt;</bpt>krill<ept i="12">&lt;/c12&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160715T075915Z" creationid="haohang" creationdate="20160715T075915Z">
        <seg>我们先将任务添加到<bpt i="11" x="11">&lt;c11&gt;</bpt>bluewhale<ept i="11">&lt;/c11&gt;</ept>和<bpt i="12" x="12">&lt;c12&gt;</bpt>krill<ept i="12">&lt;/c12&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Let's assume your project produces just the default jar file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160104T154139Z" creationid="95" creationdate="20160104T154139Z">
        <seg>让我们假设你的项目只是产生默认的 jar 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Let's change the naming of our tasks and execute the build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T072024Z" creationid="haohang" creationdate="20160718T072024Z">
        <seg>让我们改变我们的任务的命名，执行构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Let's check this out:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141123T151120Z" creationid="msdx" creationdate="20141123T151120Z">
        <seg>让我们来看看：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Let's first add another project called <bpt i="1" x="1">&lt;c1&gt;</bpt>krill<ept i="1">&lt;/c1&gt;</ept> to our multi-project build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160526T155250Z" creationid="95" creationdate="20160526T155250Z">
        <seg>让我们先添加另一个叫做<bpt i="1" x="1">&lt;c1&gt;</bpt>krill<ept i="1">&lt;/c1&gt;</ept>的项目到我们的多项目构建中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Let's first do some introspection with a single project build:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T025250Z" creationid="haohang" creationdate="20160519T025250Z">
        <seg>我们先来看一个一个单项目构建：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Let's have a look at an example.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T060230Z" creationid="msdx" creationdate="20141111T060230Z">
        <seg>让我们来看一个例子。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Let's have one more example with our producer-consumer build before we enter <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>Java<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> land.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T072558Z" creationid="haohang" creationdate="20160718T072112Z">
        <seg>让我们在进入<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>Java<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>领域之前，有更多的生产者-消费者构建的例子。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Let's look at an example.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T061605Z" creationid="msdx" creationdate="20141030T061605Z">
        <seg>让我们来看一个例子。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Let's look at the build script for the <bpt i="1" x="1">&lt;c1&gt;</bpt>water<ept i="1">&lt;/c1&gt;</ept> project and execute it:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160522T125844Z" creationid="95" creationdate="20160522T125823Z">
        <seg>让我们看看<bpt i="1" x="1">&lt;c1&gt;</bpt>water<ept i="1">&lt;/c1&gt;</ept>项目的构建脚本并执行它︰</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Let's now have our last marine example.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160715T075921Z" creationid="haohang" creationdate="20160715T075857Z">
        <seg>现在让我们讲最后一个marine的例子。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Let's refactor and also add some project specific behavior to the <bpt i="0" x="0">&lt;c0&gt;</bpt>krill<ept i="0">&lt;/c0&gt;</ept> project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160527T163204Z" creationid="95" creationdate="20160527T163059Z">
        <seg>让我们重构并且向<bpt i="0" x="0">&lt;c0&gt;</bpt>krill<ept i="0">&lt;/c0&gt;</ept>项目添加一些项目特定的行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Let's run it a couple of times.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T060410Z" creationid="msdx" creationdate="20141111T060257Z">
        <seg>让我们运行它几次。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Let's say you add <bpt i="5" x="5">&lt;c5&gt;</bpt>commons-httpclient:commons-httpclient:3.0<ept i="5">&lt;/c5&gt;</ept> to any of the provided configurations.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T091306Z" creationid="msdx" creationdate="20150503T091254Z">
        <seg>假设你添加<bpt i="5" x="5">&lt;c5&gt;</bpt>commons-httpclient:commons-httpclient:3.0<ept i="5">&lt;/c5&gt;</ept>依赖到任何一个provided配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Let's say you already have the <bpt i="0" x="0">&lt;c0&gt;</bpt>application.xml<ept i="0">&lt;/c0&gt;</ept> and want to use it instead of configuring the <bpt i="1" x="1">&lt;c1&gt;</bpt>ear.deploymentDescriptor<ept i="1">&lt;/c1&gt;</ept> section.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T143431Z" creationid="msdx" creationdate="20150504T143328Z">
        <seg>假设你已经有了<bpt i="0" x="0">&lt;c0&gt;</bpt>application.xml<ept i="0">&lt;/c0&gt;</ept> ，并且想要使用它而不是去配置<bpt i="1" x="1">&lt;c1&gt;</bpt>ear.deploymentDescriptor<ept i="1">&lt;/c1&gt;</ept>代码段。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Let's say your project is a library and you want this library to be uploaded to your company's Maven or Ivy repository.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T091818Z" creationid="haohang" creationdate="20150801T091818Z">
        <seg>假设你的项目是一个库，你想要这个库上传到你公司的 Maven 或Ivy 仓库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Let's say, you declare a dependency on the <bpt i="0" x="0">&lt;c0&gt;</bpt>junit:junit:3.8.2<ept i="0">&lt;/c0&gt;</ept> library.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T134314Z" creationid="95" creationdate="20151006T134314Z">
        <seg>比方说，你可以声明一个<bpt i="0" x="0">&lt;c0&gt;</bpt>junit:junit:3.8.2<ept i="0">&lt;/c0&gt;</ept>库的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Let's start with a very simple multi-project build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160522T024638Z" creationid="95" creationdate="20160522T024638Z">
        <seg>让我们从一个非常简单的多项目构建开始。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Let's switch to the <bpt i="2" x="2">&lt;c2&gt;</bpt>bluewhale<ept i="2">&lt;/c2&gt;</ept> dir and see what happens if we execute Gradle from there.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160530T152010Z" creationid="95" creationdate="20160530T151955Z">
        <seg>让我们切换到<bpt i="2" x="2">&lt;c2&gt;</bpt>bluewhale<ept i="2">&lt;/c2&gt;</ept>目录，看看如果我们从那里执行 Gradle 会发生什么。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Let's take a closer look at the <bpt i="0" x="0">&lt;c0&gt;</bpt>sonarRunner.sonarProperties {}<ept i="0">&lt;/c0&gt;</ept> block.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150525T232441Z" creationid="haohang" creationdate="20150525T232441Z">
        <seg>让我们再详细看看<bpt i="0" x="0">&lt;c0&gt;</bpt>sonarRunner.sonarProperties {}<ept i="0">&lt;/c0&gt;</ept>块。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Let's try this out and try to access the <bpt i="0" x="0">&lt;c0&gt;</bpt>name<ept i="0">&lt;/c0&gt;</ept> property of the <bpt i="1" x="1">&lt;c1&gt;</bpt>Project<ept i="1">&lt;/c1&gt;</ept> object.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T043016Z" creationid="msdx" creationdate="20141108T043016Z">
        <seg>下面我们来试试这个，试试访问<bpt i="1" x="1">&lt;c1&gt;</bpt>Project<ept i="1">&lt;/c1&gt;</ept>对象的<bpt i="0" x="0">&lt;c0&gt;</bpt>name<ept i="0">&lt;/c0&gt;</ept>属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Let's try to solve this with a hack and rename the producer project to <bpt i="2" x="2">&lt;c2&gt;</bpt>aProducer<ept i="2">&lt;/c2&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T070401Z" creationid="haohang" creationdate="20160718T070203Z">
        <seg>让我们试着用一个技巧解决这个问题，并将生产者项目命名为<bpt i="2" x="2">&lt;c2&gt;</bpt>aProducer<ept i="2">&lt;/c2&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Let's use the project structure shown in <bpt i="0" x="0">&lt;a0&gt;</bpt>Example 56.25, “Project lib dependencies”<ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T094857Z" creationid="haohang" creationdate="20160726T094857Z">
        <seg>让我们使用<bpt i="0" x="0">&lt;a0&gt;</bpt>示例 56.25，“项目库依赖”<ept i="0">&lt;/a0&gt;</ept>中显示的项目结构。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Let's zoom into configuration and execution phases of a multi-project build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160522T120144Z" creationid="95" creationdate="20160522T025448Z">
        <seg>让我们放大一个多项目构建的配置和执行阶段。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Level</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T070703Z" creationid="msdx" creationdate="20141116T070703Z">
        <seg>Level</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Library</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160219T070819Z" creationid="95" creationdate="20160105T141826Z">
        <seg>Library</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Library Dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070448Z" creationid="95" creationdate="20170416T070448Z">
        <seg>库依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Lifecycle task</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160219T072208Z" creationid="haohang" creationdate="20160219T072208Z">
        <seg>生命周期任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Like dependencies, artifacts are grouped by configurations.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151220T123559Z" creationid="95" creationdate="20151220T123559Z">
        <seg>像依赖一样，构件也按配置进行分组。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Line 3 of the example is just a shortcut for the <bpt i="2" x="2">&lt;c2&gt;</bpt>tasks.getByName()<ept i="2">&lt;/c2&gt;</ept> method.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T092703Z" creationid="msdx" creationdate="20141110T092629Z">
        <seg>该例子的第 3 行只是<bpt i="2" x="2">&lt;c2&gt;</bpt>tasks.getByName()<ept i="2">&lt;/c2&gt;</ept>方法的简洁写法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Linux</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160128T153342Z" creationid="95" creationdate="20160128T153342Z">
        <seg>Linux</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>List groovy = [<bpt i="0" x="0">&lt;s0&gt;</bpt>"org.codehaus.groovy:groovy-all:2.2.0@jar"<ept i="0">&lt;/s0&gt;</ept>,</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T103702Z" creationid="haohang" creationdate="20150801T103702Z">
        <seg>List groovy = [<bpt i="0" x="0">&lt;s0&gt;</bpt>"org.codehaus.groovy:groovy-all:2.2.0@jar"<ept i="0">&lt;/s0&gt;</ept>,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>List&lt;File&gt;</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T144359Z" creationid="msdx" creationdate="20150428T144359Z">
        <seg>List&lt;File&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Listed below is the default build script that Gradle applies to the <bpt i="0" x="0">&lt;c0&gt;</bpt>buildSrc<ept i="0">&lt;/c0&gt;</ept> project:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T051554Z" creationid="95" creationdate="20161211T051554Z">
        <seg>下面列出的是Gradle应用到 <bpt i="0" x="0">&lt;c0&gt;</bpt>buildSrc<ept i="0">&lt;/c0&gt;</ept> 项目的默认构建脚本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Live visualisation of the build in a GUI</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141117T141817Z" creationid="msdx" creationdate="20141117T141715Z">
        <seg>在 GUI 中的实时可视化构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Local Groovy dependency</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T080729Z" creationid="haohang" creationdate="20150722T080729Z">
        <seg>本地的 Groovy 依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Local variables are a feature of the underlying Groovy language.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T045143Z" creationid="msdx" creationdate="20141108T045024Z">
        <seg>局部变量是Groovy 语言底层的一个特征。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Local variables are declared with the <bpt i="0" x="0">&lt;c0&gt;</bpt>def<ept i="0">&lt;/c0&gt;</ept> keyword.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T045140Z" creationid="msdx" creationdate="20141108T044851Z">
        <seg>局部变量是用<bpt i="0" x="0">&lt;c0&gt;</bpt>def<ept i="0">&lt;/c0&gt;</ept>关键字声明的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Locating files</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150330T141135Z" creationid="Administrator" creationdate="20150330T141135Z">
        <seg>查找文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Locating tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150330T151123Z" creationid="Administrator" creationdate="20150330T140950Z">
        <seg>查找任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Location of created binary</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160219T072220Z" creationid="haohang" creationdate="20160219T072220Z">
        <seg>创建二进制文件的位置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Logging</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150330T141304Z" creationid="Administrator" creationdate="20150330T141304Z">
        <seg>日志</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Logging for the other interfaces is left untouched.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T155109Z" creationid="msdx" creationdate="20141116T155109Z">
        <seg>其他接口的日志记录是不变的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Logging from external tools and libraries</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T034932Z" creationid="Administrator" creationdate="20150330T141335Z">
        <seg>使用外部的工具和类库来记录日志</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Mac OS X</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T065614Z" creationid="haohang" creationdate="20150628T065614Z">
        <seg>Mac OS X</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Maintaining multiple domain objects</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070752Z" creationid="95" creationdate="20170416T070752Z">
        <seg>维护多个域对象</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Manifest</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083246Z" creationid="msdx" creationdate="20150428T083246Z">
        <seg>Manifest</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Manifest are merged in the order they are declared by the <bpt i="0" x="0">&lt;c0&gt;</bpt>from<ept i="0">&lt;/c0&gt;</ept> statement.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T150743Z" creationid="msdx" creationdate="20150428T145620Z">
        <seg>Manifest会根据在<bpt i="0" x="0">&lt;c0&gt;</bpt>from<ept i="0">&lt;/c0&gt;</ept>语句中所声明的顺序进行合并。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Manipulating existing tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162512Z" creationid="msdx" creationdate="20141109T162512Z">
        <seg>操纵现有任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Many Ant tasks set properties when they execute.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T062129Z" creationid="msdx" creationdate="20141116T062129Z">
        <seg>许多 Ant 任务在执行时会设置一些属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Many Gradle plugin add pre-defined configurations to your project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T075236Z" creationid="haohang" creationdate="20150722T075236Z">
        <seg>许多 Gradle 插件会向你的 project 添加预定义的配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Many objects in Gradle have properties which accept a set of input files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T122920Z" creationid="msdx" creationdate="20141113T122920Z">
        <seg>Gradle 中的许多对象都有一个接受一组输入文件的属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Many objects in the Gradle API implement this interface.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T145142Z" creationid="msdx" creationdate="20141112T145142Z">
        <seg>Gradle API 中的许多对象都实现了此接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Many projects rely on the <bpt i="0" x="0">&lt;a0&gt;</bpt>Maven Central repository<ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151130T032826Z" creationid="haohang" creationdate="20151130T032826Z">
        <seg>许多项目依赖于<bpt i="0" x="0">&lt;a0&gt;</bpt>Maven 中央仓库<ept i="0">&lt;/a0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Many settings (like the java version and maximum heap size) can only be specified when launching a new JVM for the build process.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141120T081745Z" creationid="msdx" creationdate="20141120T053837Z">
        <seg>许多设置（如 java 版本和最大堆大小）可以在启动一个新的 JVM 构建进程时指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Maven Element</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T144033Z" creationid="95" creationdate="20160105T144033Z">
        <seg>Maven 元素</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Maven JCenter repository</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T094204Z" creationid="haohang" creationdate="20150807T094204Z">
        <seg>Maven JCenter 仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Maven Publishing (new)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T071137Z" creationid="95" creationdate="20170416T071137Z">
        <seg>Maven 发布（新）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Maven can only deal with one artifact per project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T143604Z" creationid="95" creationdate="20160106T143604Z">
        <seg>Maven 只可以处理一个项目一个构件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Maven central repository</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T094122Z" creationid="haohang" creationdate="20150807T094122Z">
        <seg>Maven 中央仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Maven local repository</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T095601Z" creationid="haohang" creationdate="20150807T095601Z">
        <seg>Maven 本地仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Maven repository</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T095622Z" creationid="haohang" creationdate="20150807T095622Z">
        <seg>Maven 仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Maven restricts 'groupId' and 'artifactId' to a limited character set (<bpt i="0" x="0">&lt;c0&gt;</bpt>[A-Za-z0-9_\\-.]+<ept i="0">&lt;/c0&gt;</ept>) and Gradle enforces this restriction.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T032821Z" creationid="95" creationdate="20170416T032514Z">
        <seg>Maven 限制了“groupId”和“artifactId”为有限的字符集（<bpt i="0" x="0">&lt;c0&gt;</bpt>[A-Za-z0-9_\\-.]+<ept i="0">&lt;/c0&gt;</ept>），Gradle也强制实施了该限制。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>MavenDeployer</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T141859Z" creationid="95" creationdate="20160105T141859Z">
        <seg>MavenDeployer</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>May also contain Java source files for joint compilation.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T093413Z" creationid="msdx" creationdate="20150429T093413Z">
        <seg>此外可能还包含用于联合编译的 Java 源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>May also contain Java sources for joint compilation.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T075126Z" creationid="msdx" creationdate="20150429T075126Z">
        <seg>此外可能包含联合编译的 Java 源代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Meaning</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T103048Z" creationid="msdx" creationdate="20141116T103048Z">
        <seg>意义</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Memory settings for the external process default to the JVM's defaults.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150430T160021Z" creationid="msdx" creationdate="20150430T160021Z">
        <seg>外部过程默认使用JVM 的的默认内存设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Metadata rules allow certain parts of a module's metadata to be manipulated from within the build script.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T091714Z" creationid="95" creationdate="20151115T091714Z">
        <seg>元数据规则允许模块的元数据在构建脚本中被操纵。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Metadata to generate a deployment descriptor file, e.g. <bpt i="0" x="0">&lt;c0&gt;</bpt>application.xml<ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T142211Z" creationid="msdx" creationdate="20150504T142211Z">
        <seg>用于生成部署描述符文件的元数据，例如<bpt i="0" x="0">&lt;c0&gt;</bpt>application.xml<ept i="0">&lt;/c0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Method</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150526T004647Z" creationid="haohang" creationdate="20150526T004647Z">
        <seg>方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Method inheritance might be interesting to use as Gradle's <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>Configuration Injection<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> does not support methods yet (but will in a future release).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160727T053349Z" creationid="haohang" creationdate="20160727T053349Z">
        <seg>方法继承可能值得使用，尽管 Gradle 的<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>配置注射<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>还未支持方法（但会在以后的版本中支持的）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>MinGW</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160128T153548Z" creationid="95" creationdate="20160128T153548Z">
        <seg>MinGW</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Model</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T004641Z" creationid="haohang" creationdate="20150603T004641Z">
        <seg>模型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Module</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T073751Z" creationid="haohang" creationdate="20150625T073751Z">
        <seg>Module</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Modules declared by a module descriptor file (Ivy or POM file) are preferred over modules that have an artifact file only.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151007T024137Z" creationid="95" creationdate="20151007T024137Z">
        <seg>由模块描述符文件（Ivy或 POM 文件）声明的文件优于只有一个artifact 文件的模块。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Modules from earlier repositories are preferred over modules in later repositories.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151007T024317Z" creationid="95" creationdate="20151007T024208Z">
        <seg>前面的仓库的模块优于后面的仓库的模块。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>More about Tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T165013Z" creationid="msdx" creationdate="20141109T165013Z">
        <seg>任务详述</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>More about project libraries</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070253Z" creationid="95" creationdate="20170416T070253Z">
        <seg>更多关于项目库的内容</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>More information about <bpt i="0" x="0">&lt;c0&gt;</bpt>AntBuilder<ept i="0">&lt;/c0&gt;</ept> can be found in 'Groovy in Action' 8.4 or at the <bpt i="1" x="1">&lt;a1&gt;</bpt>Groovy Wiki<ept i="1">&lt;/a1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T011521Z" creationid="msdx" creationdate="20141116T011521Z">
        <seg>有关<bpt i="0" x="0">&lt;c0&gt;</bpt>AntBuilder<ept i="0">&lt;/c0&gt;</ept>的详细信息可以参阅 《Groovy in Action》的8.4章节， 或<bpt i="1" x="1">&lt;a1&gt;</bpt>Groovy 维基<ept i="1">&lt;/a1&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>More on configuring Sonar properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065722Z" creationid="95" creationdate="20170416T065722Z">
        <seg>更多关于配置 Sonar 的属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>More on plugins</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131520Z" creationid="msdx" creationdate="20150509T131520Z">
        <seg>更多关于插件的内容</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>More specifically, the parallel execution attempts to:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T085615Z" creationid="haohang" creationdate="20160726T085615Z">
        <seg>更具体地说，并行执行尝试︰</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>More types will be added in future Gradle releases.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T074848Z" creationid="haohang" creationdate="20150707T074848Z">
        <seg>在未来的 Gradle 发布中，将会添加更多类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Most Gradle plugins use enhanced tasks.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T143218Z" creationid="95" creationdate="20160814T143218Z">
        <seg>大部分的Gradle插件都使用增强型的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Most builds work with files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T040420Z" creationid="msdx" creationdate="20141111T124442Z">
        <seg>大多数构建工作都要使用到文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Most of the time you don't need to touch this and you can safely skip this section.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T144913Z" creationid="95" creationdate="20160106T144913Z">
        <seg>大多数情况下你不需要去接触它，并且你可以安全地跳过本节。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Most plugins need to obtain some configuration from the build script.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T124119Z" creationid="95" creationdate="20160820T124119Z">
        <seg>大部分插件都需要从构建脚本中获得一些配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Multi-Project Building and Testing</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070643Z" creationid="95" creationdate="20170416T070643Z">
        <seg>多项目构建和测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Multi-project Builds</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070550Z" creationid="95" creationdate="20170416T070550Z">
        <seg>多项目构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Multi-project Java build</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163459Z" creationid="msdx" creationdate="20141109T163459Z">
        <seg>Java 的多项目构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Multi-project builds</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070538Z" creationid="95" creationdate="20170416T070538Z">
        <seg>多项目构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Multi-project builds are always represented by a tree with a single root.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T030547Z" creationid="haohang" creationdate="20160519T030547Z">
        <seg>多项目构建总是由一个具有单个根节点的树表示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Multi-project builds are discussed in<bpt i="0" x="0">&lt;a0&gt;</bpt>Chapter 56, <bpt i="1" x="1">&lt;i1&gt;</bpt>Multi-project Builds<ept i="1">&lt;/i1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T092613Z" creationid="haohang" creationdate="20150801T092613Z">
        <seg>多项目构建将在<bpt i="0" x="0">&lt;a0&gt;</bpt>第 56 章，<bpt i="1" x="1">&lt;i1&gt;</bpt>多项目生成<ept i="1">&lt;/i1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>中进行详述。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Multiple developers then spend days on this issue only finally realising that the error would have easy to uncover if they knew that Hibernate had been upgraded from 2.5 to 3.0.5.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150716T093829Z" creationid="haohang" creationdate="20150716T093829Z">
        <seg>然后多个开发人员花了数天的时间在这个问题上，终于意识到如果他们知道 Hibernate 已经从 2.5 升级到 3.0.5，这个错误会很容易发现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Multiple discreet publications per project</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T154847Z" creationid="95" creationdate="20170330T154847Z">
        <seg>每个项目的多个谨慎发布</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Name</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T044206Z" creationid="msdx" creationdate="20141108T044152Z">
        <seg>名称</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Native Binary Type</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160219T072225Z" creationid="haohang" creationdate="20160219T072206Z">
        <seg>原生二进制文件类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Native Binary Variants</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070453Z" creationid="95" creationdate="20170416T070453Z">
        <seg>本地二进制变种</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Naturally when the task is executed again with no changes, then task itself is up to date and no files are reported to the task action:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160817T145906Z" creationid="95" creationdate="20160817T145906Z">
        <seg>当然，对于没有任何修改的情况下执行任务时，该任务本身是up to date的，并且不会有文件上报到这个任务操作中：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Neither <bpt i="1" x="1">&lt;c1&gt;</bpt>water<ept i="1">&lt;/c1&gt;</ept> nor <bpt i="2" x="2">&lt;c2&gt;</bpt>tropicalFish<ept i="2">&lt;/c2&gt;</ept> have a task with the name <bpt i="3" x="3">&lt;c3&gt;</bpt>distanceToIceberg<ept i="3">&lt;/c3&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160715T090906Z" creationid="haohang" creationdate="20160715T090906Z">
        <seg><bpt i="1" x="1">&lt;c1&gt;</bpt>water<ept i="1">&lt;/c1&gt;</ept>和<bpt i="2" x="2">&lt;c2&gt;</bpt>tropicalFish<ept i="2">&lt;/c2&gt;</ept>项目都没有一个叫<bpt i="3" x="3">&lt;c3&gt;</bpt>distanceToIceberg<ept i="3">&lt;/c3&gt;</ept>的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Nested elements are defined in the same way as tasks, by calling a method with the same name as the element we want to define.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T011000Z" creationid="msdx" creationdate="20141115T154824Z">
        <seg>嵌套元素的定义方式与任务相同，通过调用与我们要定义的元素一样的名字的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Nevertheless, Groovy projects need to explicitly declare a Groovy dependency.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T075747Z" creationid="msdx" creationdate="20150429T075719Z">
        <seg>然而，Groovy 项目需要显式地声明一个 Groovy 依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Next, configure your notification service(s) of choice (see table below for which configuration properties are available):</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T063107Z" creationid="haohang" creationdate="20150628T063107Z">
        <seg>接下来，配置你所选择的通知服务（要使用哪一个配置属性可以参见下表）：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>No code referenced this jar and there was no connection to the project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150721T053519Z" creationid="haohang" creationdate="20150721T012732Z">
        <seg>没有代码引用这个 jar 包，这个 jar 包也与该项目没有任何连接。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>No dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170211T140615Z" creationid="95" creationdate="20170211T140615Z">
        <seg>没有依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>No matter what the language, proper dependency management is important for every project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150716T083740Z" creationid="haohang" creationdate="20150716T083713Z">
        <seg>不管用什么语言，对每个项目而言，适当的依赖管理是很重要的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>No one could figure out what the jar was for, until it was removed from the build and the application suffered massive performance problem whenever it attempted to authenticate to LDAP.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150721T053815Z" creationid="haohang" creationdate="20150721T053815Z">
        <seg>没人能弄清楚这个 jar 包是干什么用的，直到它被从构建中移除，然后应用在试图向 LDAP 进行身份验证的时候，遇到了很大的性能问题。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>No stacktrace options</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T103051Z" creationid="msdx" creationdate="20141116T103051Z">
        <seg>没有栈跟踪选项</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>No stacktraces are printed to the console in case of a build error (e.g. a compile error).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T103752Z" creationid="msdx" creationdate="20141116T103552Z">
        <seg>构建错误（如编译错误）时没有栈跟踪打印到控制台。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>None</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T003619Z" creationid="haohang" creationdate="20150603T003619Z">
        <seg>None</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>None of these directories need exist or have anything in them.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T083139Z" creationid="Administrator" creationdate="20150426T083139Z">
        <seg>这些目录都不需要一定存在，或者是里面有什么内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>None of these directories need to exist or have anything in them; the Scala plugin will simply compile whatever it finds.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T152610Z" creationid="msdx" creationdate="20150429T152553Z">
        <seg>这些目录不一定是存在的，或是里面包含有什么内容；Scala 插件只会进行编译，而不管它发现什么。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Normally, Gradle will use the <bpt i="0" x="0">&lt;c0&gt;</bpt>rev<ept i="0">&lt;/c0&gt;</ept> attribute for each dependency definition included in an <bpt i="1" x="1">&lt;c1&gt;</bpt>ivy.xml<ept i="1">&lt;/c1&gt;</ept> file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T091053Z" creationid="95" creationdate="20151115T090646Z">
        <seg>通常情况下，Gradle 将<bpt i="0" x="0">&lt;c0&gt;</bpt>rev<ept i="0">&lt;/c0&gt;</ept>属性用于在<bpt i="1" x="1">&lt;c1&gt;</bpt>ivy.xml<ept i="1">&lt;/c1&gt;</ept>文件中包含的每个依赖定义。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Not every transitive dependency can be excluded - some transitive dependencies might be essential for correct runtime behavior of the application.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T101157Z" creationid="haohang" creationdate="20150801T100738Z">
        <seg>不是每个传递依赖都可以被排除 — — 一些传递依赖可能是应用程序能正确运行的必要条件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Not null</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T045721Z" creationid="Administrator" creationdate="20150427T045721Z">
        <seg>非空</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Note that "<bpt i="0" x="0">&lt;c0&gt;</bpt>B.mustRunAfter(A)<ept i="0">&lt;/c0&gt;</ept>" or "<bpt i="1" x="1">&lt;c1&gt;</bpt>B.shouldRunAfter(A)<ept i="1">&lt;/c1&gt;</ept>" does not imply any execution dependency between the tasks:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T013921Z" creationid="msdx" creationdate="20141111T013914Z">
        <seg>请注意"<bpt i="0" x="0">&lt;c0&gt;</bpt>B.mustRunAfter(A)<ept i="0">&lt;/c0&gt;</ept>"或"<bpt i="1" x="1">&lt;c1&gt;</bpt>B.shouldRunAfter(A)<ept i="1">&lt;/c1&gt;</ept>"并不意味着这些任务之间的任何执行上的依赖关系：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Note that 'dependency resolve rules' (outlined below) provide a more powerful mechanism for replacing a broken module dependency.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T055102Z" creationid="95" creationdate="20151115T055102Z">
        <seg>请注意，“依赖解析规则”（见下文），提供了一种更强大的机制，来取代一个损坏的模块依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Note that <bpt i="0" x="0">&lt;c0&gt;</bpt>fsc<ept i="0">&lt;/c0&gt;</ept> expects to be restarted whenever the <bpt i="1" x="1">&lt;s1&gt;</bpt><bpt i="2" x="2">&lt;e2&gt;</bpt>contents<ept i="2">&lt;/e2&gt;</ept><ept i="1">&lt;/s1&gt;</ept> of its compile class path change.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150430T155443Z" creationid="msdx" creationdate="20150430T155218Z">
        <seg>注意，每当 <bpt i="0" x="0">&lt;c0&gt;</bpt>fsc<ept i="0">&lt;/c0&gt;</ept>的编译类路径的<bpt i="1" x="1">&lt;s1&gt;</bpt><bpt i="2" x="2">&lt;e2&gt;</bpt>内容<ept i="2">&lt;/e2&gt;</ept><ept i="1">&lt;/s1&gt;</ept>发生变化时，它都需要重新启动。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Note that Sonar can only analyze one language per project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T091943Z" creationid="msdx" creationdate="20150512T091943Z">
        <seg>注意，Sonar 只能分析每个项目的一种语言。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Note that Zinc's Nailgun based daemon mode is not supported.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T081255Z" creationid="msdx" creationdate="20150503T081255Z">
        <seg>注意现在 Zinc 基于守护进程模式的Nailgun 还不支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Note that abstract classes are not executed.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T041207Z" creationid="Administrator" creationdate="20150428T041207Z">
        <seg>请注意，抽象类不会被执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Note that different Gradle versions ship with different Groovy versions; as such, using <bpt i="1" x="1">&lt;c1&gt;</bpt>localGroovy()<ept i="1">&lt;/c1&gt;</ept> is less safe then declaring a regular Groovy dependency.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T080533Z" creationid="msdx" creationdate="20150429T080533Z">
        <seg>注意，不同 Gradle 版本附带的 Groovy 版本不同；因此，声明一个固定的 Groovy 依赖要比使用<bpt i="1" x="1">&lt;c1&gt;</bpt>localGroovy()<ept i="1">&lt;/c1&gt;</ept>更安全一些。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Note that dynamic resolve mode is only available for Gradle's Ivy repositories.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T091410Z" creationid="95" creationdate="20151115T091400Z">
        <seg>注意，动态解析模式只对 Gradle 的 Ivy 仓库有效。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Note that each artifacts must have a unique name/classifier/extension combination.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20170216T072513Z" creationid="haohang" creationdate="20170216T072513Z">
        <seg>注意，每个构件必须有一个唯一的 name/classifier/extension 组合。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Note that for most of these properties, the Sonar plugin's object model has an equivalent property, and it isn't necessary to use a <bpt i="1" x="1">&lt;c1&gt;</bpt>withGlobalProperties<ept i="1">&lt;/c1&gt;</ept> or <bpt i="2" x="2">&lt;c2&gt;</bpt>withProjectProperties<ept i="2">&lt;/c2&gt;</ept> hook.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T102026Z" creationid="msdx" creationdate="20150512T102026Z">
        <seg>注意，对于大多数的这些属性，Sonar 插件的对象模型具有等效的属性，且没有必要使用<bpt i="1" x="1">&lt;c1&gt;</bpt>withGlobalProperties<ept i="1">&lt;/c1&gt;</ept>或<bpt i="2" x="2">&lt;c2&gt;</bpt>withProjectProperties<ept i="2">&lt;/c2&gt;</ept>的hook。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Note that if <bpt i="6" x="6">&lt;c6&gt;</bpt>publishedCode<ept i="6">&lt;/c6&gt;</ept> is not set correctly, downstream tasks may not recompile code affected by upstream changes, leading to incorrect compilation results.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T080817Z" creationid="msdx" creationdate="20150503T080456Z">
        <seg>注意，如果<bpt i="6" x="6">&lt;c6&gt;</bpt>publishedCode<ept i="6">&lt;/c6&gt;</ept>设置不正确，上游代码发生变化时下游任务可能不会重新编译代码，导致编译结果不正确。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Note that if a task has an output directory specified, any files added to that directory since the last time it was executed are ignored and will NOT cause the task to be out of date.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T064006Z" creationid="msdx" creationdate="20141111T063742Z">
        <seg>请注意，如果一个任务有一个指定的输出目录，在它上一次执行之后添加到该目录的所有文件都将被忽略，并且不会使这个任务成为过时状态。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Note that only one of the published artifacts can have an empty classifier, and all other artifacts must have a unique classifier/extension combination.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170412T154740Z" creationid="95" creationdate="20170412T154740Z">
        <seg>注意，只有一个发布的构件可以有一个空的classifier，并且其他所有的构件必须有一个唯一的classifier/extension组件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Note that the <bpt i="0" x="0">&lt;c0&gt;</bpt>«PUBLICATION-TIME-STAMP»<ept i="0">&lt;/c0&gt;</ept> in this example Ivy module descriptor will be the timestamp of when the descriptor was generated.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T154203Z" creationid="95" creationdate="20170330T154024Z">
        <seg>注意：在这个例子的Ivy模块描述符中的<bpt i="0" x="0">&lt;c0&gt;</bpt>«发布时间戳»<ept i="0">&lt;/c0&gt;</ept>将是描述符文件生成时的时间戳。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Note that the various mutation tasks ('updateInputs', 'removeInput', etc) are only present for demonstration purposes: these would not normally be part of your build script.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160817T145603Z" creationid="95" creationdate="20160817T145501Z">
        <seg>注意不同变化的任务（“updateInputs”，“removeInput”等）都是出于演示目的而存在：它们通常不会在构建脚本中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Note that this command blocks until the Gradle GUI is closed.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T145907Z" creationid="msdx" creationdate="20141105T145907Z">
        <seg>注意：此命令行窗口被将锁定，直到Gradle GUI被关闭。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Note that this completely disables Gradle's default output.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T154232Z" creationid="msdx" creationdate="20141116T154232Z">
        <seg>请注意它完全禁用 Gradle 的默认输出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Note that this is different from a forced version as described above, in that any other versions of this module would not be affected.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T085605Z" creationid="95" creationdate="20151115T085605Z">
        <seg>注意，这与上面描述的强制使用一个版本不同，这个模块的其他版本将不受影响。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Note, however, that the Zinc compiler requires Java 6 or higher to run.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T154444Z" creationid="msdx" creationdate="20150501T154422Z">
        <seg>但是，要注意的是，Zinc 编译器需要 Java 6 或其以上版本来运行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Note: <bpt i="0" x="0">&lt;c0&gt;</bpt>groupId<ept i="0">&lt;/c0&gt;</ept>, <bpt i="1" x="1">&lt;c1&gt;</bpt>artifactId<ept i="1">&lt;/c1&gt;</ept>, <bpt i="2" x="2">&lt;c2&gt;</bpt>version<ept i="2">&lt;/c2&gt;</ept>, and <bpt i="3" x="3">&lt;c3&gt;</bpt>packaging<ept i="3">&lt;/c3&gt;</ept> should always be set directly on the <bpt i="4" x="4">&lt;c4&gt;</bpt>pom<ept i="4">&lt;/c4&gt;</ept> object.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T143154Z" creationid="95" creationdate="20160106T143154Z">
        <seg>注：<bpt i="0" x="0">&lt;c0&gt;</bpt>groupId<ept i="0">&lt;/c0&gt;</ept>，<bpt i="1" x="1">&lt;c1&gt;</bpt>artifactId<ept i="1">&lt;/c1&gt;</ept>，<bpt i="2" x="2">&lt;c2&gt;</bpt>version<ept i="2">&lt;/c2&gt;</ept>和<bpt i="3" x="3">&lt;c3&gt;</bpt>packaging<ept i="3">&lt;/c3&gt;</ept>应该始终直接在<bpt i="4" x="4">&lt;c4&gt;</bpt>pom<ept i="4">&lt;/c4&gt;</ept>对象上设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Note: if you specify a stack trace level on either the Command Line or Favorites tab, it will override this stack trace level.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T161104Z" creationid="msdx" creationdate="20141105T161104Z">
        <seg>注意：如果你在命令行或收藏夹选项卡上指定了堆栈跟踪级别，将会覆盖这里的设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Note: newly created tasks will show up by default (versus being hidden by default).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T153752Z" creationid="msdx" creationdate="20141105T153646Z">
        <seg>注意：新创建的任务默认情况下是显示状态（而不是隐藏状态）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Note: this requires Java 1.6 or higher and requires that you have .gradle files associated in your OS.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T154351Z" creationid="msdx" creationdate="20141105T154351Z">
        <seg>注意：该操作需要 Java 1.6 或更高的版本，并且要求在你的操作系统中关联 gradle 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Notes</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160128T153341Z" creationid="95" creationdate="20160128T153341Z">
        <seg>备注</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Notice by the output with the example that the value for <bpt i="3" x="3">&lt;c3&gt;</bpt>compileJava.destinationDir<ept i="3">&lt;/c3&gt;</ept> also changed to reflect the configuration change.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141124T093419Z" creationid="msdx" creationdate="20141124T093249Z">
        <seg>在上面的示例中可以注意到，<bpt i="3" x="3">&lt;c3&gt;</bpt>compileJava.destinationDir<ept i="3">&lt;/c3&gt;</ept>的值也被修改了，以反映出配置的修改。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Notice that <bpt i="0" x="0">&lt;c0&gt;</bpt>clean<ept i="0">&lt;/c0&gt;</ept> does not depend on <bpt i="1" x="1">&lt;c1&gt;</bpt>cleanIdeaWorkspace<ept i="1">&lt;/c1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T072136Z" creationid="haohang" creationdate="20150625T071850Z">
        <seg>请注意，<bpt i="0" x="0">&lt;c0&gt;</bpt>clean<ept i="0">&lt;/c0&gt;</ept>并不依赖于<bpt i="1" x="1">&lt;c1&gt;</bpt>cleanIdeaWorkspace<ept i="1">&lt;/c1&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Notice that Gradle executes this task a second time, and does not skip the task even though nothing has changed.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T060618Z" creationid="msdx" creationdate="20141111T060350Z">
        <seg>请注意 Gradle 第二次执行执行这项任务时，即使什么都未作改变，也没有跳过该任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Notice that additional defaults are provided for projects that have the <bpt i="0" x="0">&lt;c0&gt;</bpt>java-base<ept i="0">&lt;/c0&gt;</ept> or <bpt i="1" x="1">&lt;c1&gt;</bpt>java<ept i="1">&lt;/c1&gt;</ept> plugin applied.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T064911Z" creationid="msdx" creationdate="20150513T064629Z">
        <seg>注意，对于配置使用了 <bpt i="0" x="0">&lt;c0&gt;</bpt>java-base<ept i="0">&lt;/c0&gt;</ept> 或 <bpt i="1" x="1">&lt;c1&gt;</bpt>java<ept i="1">&lt;/c1&gt;</ept> 插件的project，有提供另外的默认值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Notice that the <bpt i="0" x="0">&lt;c0&gt;</bpt>afterProject<ept i="0">&lt;/c0&gt;</ept> notification is received regardless of whether the project evaluates successfully or fails with an exception.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T132206Z" creationid="95" creationdate="20160521T132206Z">
        <seg>注意，无论项目评估是成功还是由于异常而失败，都会收到<bpt i="0" x="0">&lt;c0&gt;</bpt>afterProject<ept i="0">&lt;/c0&gt;</ept>通知。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Notice that the <bpt i="0" x="0">&lt;c0&gt;</bpt>afterTask<ept i="0">&lt;/c0&gt;</ept> notification is received regardless of whether the task completes successfully or fails with an exception.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T140101Z" creationid="95" creationdate="20160521T140101Z">
        <seg>注意，无论任务成功完成还是异常失败，都会收到<bpt i="0" x="0">&lt;c0&gt;</bpt>afterTask<ept i="0">&lt;/c0&gt;</ept>的通知。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Notice that the properties filename matches the plugin's name and is placed in the resources folder, and that the <bpt i="0" x="0">&lt;c0&gt;</bpt>implementation-class<ept i="0">&lt;/c0&gt;</ept> property identifies the <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>Plugin<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept> implementation class.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T013217Z" creationid="95" creationdate="20160828T133457Z">
        <seg>注意，属性的文件名要和插件名相匹配，放在resources夹里，并且<bpt i="0" x="0">&lt;c0&gt;</bpt>implementation-class<ept i="0">&lt;/c0&gt;</ept>属性要标识<bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>Plugin<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept> 的实现类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Notice that this example does not need to declare a dependency on the Gradle API, as this is done by the default build script:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T052819Z" creationid="95" creationdate="20161211T052241Z">
        <seg>请注意，此示例不需要声明对 Gradle API的依赖，因为这由默认的构建脚本完成：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Notice that we can also mix Groovy code and the Ant task markup.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141115T153344Z" creationid="msdx" creationdate="20141115T153344Z">
        <seg>请注意我们还可以混合使用 Groovy 代码和 Ant 任务标记。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Notification Service</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T065230Z" creationid="haohang" creationdate="20150628T065230Z">
        <seg>通知服务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Notifications when things in the build change, so that UIs and models can be updated.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T154755Z" creationid="95" creationdate="20161218T154755Z">
        <seg>当构建中的内容有变化时进行通知，以便可以更新UI和模型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Now Gradle will look for your dependencies in the JCenter repository.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T100855Z" creationid="haohang" creationdate="20150807T100855Z">
        <seg>现在 Gradle 将会在 JCenter 仓库中查找你的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Now Gradle will look for your dependencies in this repository.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T095928Z" creationid="haohang" creationdate="20150807T095928Z">
        <seg>现在 Gradle 将会在此仓库中查找你的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Now how does Gradle find it in the repositories?</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T134333Z" creationid="95" creationdate="20151006T134333Z">
        <seg>现在 Gradle 是如何发现它在存储库中的?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Now we rewrite the <bpt i="0" x="0">&lt;c0&gt;</bpt>water<ept i="0">&lt;/c0&gt;</ept> build script and boil it down to a single line.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160526T155442Z" creationid="95" creationdate="20160526T155442Z">
        <seg>现在我们改写<bpt i="0" x="0">&lt;c0&gt;</bpt>water<ept i="0">&lt;/c0&gt;</ept>的构建脚本，并把它归结成为一行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Now we take the air out of this hack.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T070545Z" creationid="haohang" creationdate="20160718T070241Z">
        <seg>现在我们来看这个技巧。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Now we will move our plugin to a standalone project, so we can publish it and share it with others.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160828T132743Z" creationid="95" creationdate="20160828T132720Z">
        <seg>现在我们将移动我们的插件到一个单独的项目中，这样我们就可以发布它，并与他人分享。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Now we will move our task to a standalone project, so we can publish it and share it with others.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160828T132751Z" creationid="95" creationdate="20160814T153142Z">
        <seg>现在我们将移动我们的任务到一个单独的项目中，这样我们就可以发布它，并与他人分享。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Now you want to deploy this jar file to a remote Maven repository.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160104T154150Z" creationid="95" creationdate="20160104T154150Z">
        <seg>现在你想要将这个 jar 文件部署到远程 Maven 仓库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Now, Gradle knows which files to check to determine whether the task is up-to-date or not.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T061357Z" creationid="msdx" creationdate="20141111T061318Z">
        <seg>现在，Gradle 知道哪些文件要检查以确定任务是否为最新状态。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Object</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T044436Z" creationid="msdx" creationdate="20141108T044436Z">
        <seg>Object</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Objective-C language support is provided by means of the <bpt i="0" x="0">&lt;c0&gt;</bpt>'objective-c'<ept i="0">&lt;/c0&gt;</ept> plugin.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160319T115110Z" creationid="95" creationdate="20160319T115110Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>'objective-c'<ept i="0">&lt;/c0&gt;</ept> 插件提供了Objective-C 语言的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Objective-C sources to be included in a native binary are provided via a <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>ObjectiveCSourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>, which defines a set of Objective-C source files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160319T115327Z" creationid="95" creationdate="20160319T115327Z">
        <seg>把Objective-C源码包含到原生二进制文件中，是通过一个 <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>ObjectiveCSourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>来实现的，它定义了一个Objective-C源文件集。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Objective-C++ language support is provided by means of the <bpt i="0" x="0">&lt;c0&gt;</bpt>'objective-cpp'<ept i="0">&lt;/c0&gt;</ept> plugin.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160319T115417Z" creationid="95" creationdate="20160319T115417Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>'objective-cpp'<ept i="0">&lt;/c0&gt;</ept> 插件提供了Objective-C++ 语言的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Objective-C++ sources to be included in a native binary are provided via a <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>ObjectiveCppSourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>, which defines a set of Objective-C++ source files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160319T115508Z" creationid="95" creationdate="20160319T115508Z">
        <seg>把Objective-C++源码包含到原生二进制文件中，是通过一个 <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>ObjectiveCppSourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>来实现的，它定义了一个Objective-C++源文件集。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Obtaining information about your build</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163935Z" creationid="msdx" creationdate="20141109T163935Z">
        <seg>获取构建的相关信息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Obviously for a single project build, a project without a build script doesn't make much sense.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160522T125759Z" creationid="95" creationdate="20160522T125759Z">
        <seg>显然对于一个单项目构建，如果一个项目没有构建脚本是没道理的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Obviously the <bpt i="0" x="0">&lt;c0&gt;</bpt>date<ept i="0">&lt;/c0&gt;</ept> and <bpt i="1" x="1">&lt;c1&gt;</bpt>hello<ept i="1">&lt;/c1&gt;</ept> projects have a <bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;e3&gt;</bpt>configuration<ept i="3">&lt;/e3&gt;</ept><ept i="2">&lt;/s2&gt;</ept> dependency on <bpt i="4" x="4">&lt;c4&gt;</bpt>webDist<ept i="4">&lt;/c4&gt;</ept>, as all the build logic for the webapp projects is injected by <bpt i="5" x="5">&lt;c5&gt;</bpt>webDist<ept i="5">&lt;/c5&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T073014Z" creationid="haohang" creationdate="20160722T091317Z">
        <seg>很明显，<bpt i="0" x="0">&lt;c0&gt;</bpt>date<ept i="0">&lt;/c0&gt;</ept> 和 <bpt i="1" x="1">&lt;c1&gt;</bpt>hello<ept i="1">&lt;/c1&gt;</ept> 都有一个 <bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;e3&gt;</bpt>配置<ept i="3">&lt;/e3&gt;</ept><ept i="2">&lt;/s2&gt;</ept> 依赖于 <bpt i="4" x="4">&lt;c4&gt;</bpt>webDist<ept i="4">&lt;/c4&gt;</ept>，作为webapp项目的所有构建逻辑都被<bpt i="5" x="5">&lt;c5&gt;</bpt>webDist<ept i="5">&lt;/c5&gt;</ept>注入了。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Obviously this is a very common use case for Java multi-project builds.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T083422Z" creationid="haohang" creationdate="20160726T083422Z">
        <seg>显示，对于Java 多项目构建当中，这是很常见的情况。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Occasionally, you may want to stop the daemons either via the <bpt i="0" x="0">&lt;c0&gt;</bpt>--stop<ept i="0">&lt;/c0&gt;</ept> command line option or in a more forceful way.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141119T030639Z" creationid="msdx" creationdate="20141119T030639Z">
        <seg>有时候，您可能想要通过<bpt i="0" x="0">&lt;c0&gt;</bpt>--stop<ept i="0">&lt;/c0&gt;</ept>命令行选项或更有力的方式停止守护程序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Of course one can configure the different file-sets with a closure to define excludes and includes.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T094010Z" creationid="msdx" creationdate="20150503T093821Z">
        <seg>当然，你可以用一个定义了excludes 和 includes 的闭包来配置不同的文件集。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Of course this is fully customizable.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151227T152531Z" creationid="95" creationdate="20151227T152531Z">
        <seg>当然，这是可完全自定义的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Of course you can add custom configurations on top of that.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T075412Z" creationid="haohang" creationdate="20150722T075412Z">
        <seg>当然，你可以添加自定义配置到这上面。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Of course you can deal with this by adding a <bpt i="0" x="0">&lt;c0&gt;</bpt>mkdir<ept i="0">&lt;/c0&gt;</ept> to the beginning of those tasks.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T072903Z" creationid="msdx" creationdate="20141109T072903Z">
        <seg>当然，你可以在这些任务的开始加入<bpt i="0" x="0">&lt;c0&gt;</bpt>mkdir<ept i="0">&lt;/c0&gt;</ept>来解决这个问题。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Of course, if it is a subproject, only the subproject and its dependent projects are build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T074521Z" creationid="haohang" creationdate="20160519T074521Z">
        <seg>当然，如果它是一个子项目，那么就只构建子项目和它依赖的项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Of course, task dependencies across different projects are not limited to tasks with the same name.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T072003Z" creationid="haohang" creationdate="20160718T072003Z">
        <seg>当然，在不同项目之间的任务依赖并不限于具有相同名称的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Of course, the applied plugin can be resolved as external dependency as described in <bpt i="3" x="3">&lt;a3&gt;</bpt>Section 60.4, “External dependencies for the init script”<ept i="3">&lt;/a3&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161215T153544Z" creationid="95" creationdate="20161215T153544Z">
        <seg>当然，所应用的插件也可以作为<bpt i="3" x="3">&lt;a3&gt;</bpt>第 60.4节，“init 脚本外部依赖”<ept i="3">&lt;/a3&gt;</ept>中所述的外部依赖被解析。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Of course, this is also great for <bpt i="2" x="2">&lt;a2&gt;</bpt>continuous integration<ept i="2">&lt;/a2&gt;</ept> servers (i.e. servers that regularly build your project) as it requires no configuration on the server.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161217T143841Z" creationid="95" creationdate="20161217T143802Z">
        <seg>当然，也方便用于 <bpt i="2" x="2">&lt;a2&gt;</bpt>持续集成<ept i="2">&lt;/a2&gt;</ept> 服务器（即有规律地构建你的项目的服务器），因为它不需要在服务器上进行配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Often an organisation publishes a set of libraries with a single version; where the libraries are built, tested and published together.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T060518Z" creationid="95" creationdate="20151115T060518Z">
        <seg>通常一个组织会使用一个版本发布一组库；这些库将在一起构建，测试以及发布。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Often this is a "root project" that does nothing more than define common configuration, but as far as Gradle is concerned this root project is still a fully-fledged project, and by using <bpt i="4" x="4">&lt;c4&gt;</bpt>allprojects<ept i="4">&lt;/c4&gt;</ept> that project is effectively coupled to all other projects.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T094243Z" creationid="haohang" creationdate="20160726T094003Z">
        <seg>通常这是一个“根项目”，除了定义常见的配置不执行任何操作，但对 Gradle 而言这个根项目仍然是一个成熟的项目，并且通过使用<bpt i="4" x="4">&lt;c4&gt;</bpt>allprojects<ept i="4">&lt;/c4&gt;</ept>，该项目有效地与所有其他项目耦合。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Often this is the preferred way to customize Eclipse files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T065906Z" creationid="haohang" creationdate="20150625T065906Z">
        <seg>通常，这是自定义 Eclipse 文件的首选的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Often this is the preferred way to customize IDEA files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T074553Z" creationid="haohang" creationdate="20150625T074553Z">
        <seg>通常，这是自定义 IDEA 文件的首选方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Often you will want to publish an archive, so that it is usable from another project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T160831Z" creationid="msdx" creationdate="20141113T160831Z">
        <seg>你经常会想要发布一个归档文件，这样就可从另一个项目中使用它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Oftentimes, you have several related properties you need to specify on a single plugin.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T131220Z" creationid="95" creationdate="20160820T131220Z">
        <seg>通常情况下，你会有几个相关的属性，所以你需要在单个插件上指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>On a far larger scale, Enterprise projects using Spring, Hibernate, and other libraries, alongside hundreds or thousands of internal projects can have very large dependency trees.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150720T064248Z" creationid="haohang" creationdate="20150720T061641Z">
        <seg>在更大的规模上，使用 Spring，Hibernate和其他的库，旁边数百或数千个内部项目的企业应用，也有非常大的依赖树。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>On a large project with many developers changing dependencies, successful builds will be few and far between as the order of dependencies may directly affect whether a build succeeds or fails (or whether a bug appears or disappears in production).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150721T055135Z" creationid="haohang" creationdate="20150721T055135Z">
        <seg>对于许多开发人员都会更改依赖的大型项目，成功的构建将会少之又少，因为依赖的顺序可能会直接影响到构建是否成功（或者在产品中是否会出现一个 bug）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>On most large projects, build migrations and any change to development process is incremental because most organizations can't afford to stop everything and migrate to a build tool's idea of dependency management.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150716T041455Z" creationid="haohang" creationdate="20150716T041455Z">
        <seg>在大多数的大项目中，构建迁移和对发展过程的任何更改都是增量的，因为大多数组织不能负担得起停止一切事情并迁移到依赖管理的构建工具的想法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>On the other hand you need the relevant information for figuring out if things have gone wrong.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T070149Z" creationid="msdx" creationdate="20141116T070149Z">
        <seg>另一方面，如果出了错，你需要找出相关的信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>On the other hand, finalizer tasks are not executed if the finalized task didn't do any work, for example due to failed task dependency or if it's considered up to date.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T122734Z" creationid="msdx" creationdate="20141111T070356Z">
        <seg>另一方面，如果最终的任务什么都不做的话，比如由于失败的任务依赖项或如果它被认为是最新的状态，析构任务不会执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>On the same nesting level the configuration order depends on the alphanumeric position.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T090533Z" creationid="haohang" creationdate="20160718T090533Z">
        <seg>如果是相同的嵌套级别，则配置顺序取决于字母数字的位置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Once a configuration is resolved it is immutable.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T091056Z" creationid="haohang" creationdate="20150807T091056Z">
        <seg>一旦一个配置被解析，那它就是不可变的了。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Once each repository has been inspected for the module, Gradle will choose the 'best' one to use.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151007T023928Z" creationid="95" creationdate="20151007T023928Z">
        <seg>一旦已为该模块检查了每个仓库，Gradle 将会选择使用“最好”的一个。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Once the properties have been added, they can be read and set like predefined properties.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T054351Z" creationid="msdx" creationdate="20141108T054318Z">
        <seg>一旦属性被添加，他们就可以像预定的属性一样被读取和设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>One can assign also a priority to a particular configuration-to-scope mapping.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T145242Z" creationid="95" creationdate="20160106T145136Z">
        <seg>一个configuration可以指定到一个特定的 configuration-to-scope 映射的优先级。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>One example of a broken module is one that declares a dependency on a library that cannot be found in any of the public repositories, but there are many other reasons why a particular module version is unwanted and a different version is preferred.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T071300Z" creationid="95" creationdate="20151115T070735Z">
        <seg>一个坏的模块的例子是，在一个库上声明的一个依赖无法在任何公共仓库中找到，但为什么不能使用一个特定的模块版本，而更希望要另一个版本，还有很多其他原因。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>One focus of the IDEA plugin is to be open to customization.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T071636Z" creationid="haohang" creationdate="20150625T071636Z">
        <seg>IDEA 插件的重点之一是对自定义项较为开放。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>One main limitation of init scripts is that they cannot access classes in the buildSrc project (see <bpt i="0" x="0">&lt;a0&gt;</bpt>Section 59.3, “Build sources in the <bpt i="1" x="1">&lt;c1&gt;</bpt>buildSrc<ept i="1">&lt;/c1&gt;</ept> project”<ept i="0">&lt;/a0&gt;</ept> for details of this feature).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161214T143352Z" creationid="95" creationdate="20161214T143131Z">
        <seg>init 脚本的一个主要限制是，它们不能访问buildSrc 项目里的类（该功能的详细信息可参见 <bpt i="0" x="0">&lt;a0&gt;</bpt>第 59.3节，“的<bpt i="1" x="1">&lt;c1&gt;</bpt>buildSrc<ept i="1">&lt;/c1&gt;</ept> 项目中的构建源代码”<ept i="0">&lt;/a0&gt;</ept>）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>One method for doing this is to use <bpt i="0" x="0">&lt;e0&gt;</bpt>extension objects<ept i="0">&lt;/e0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T124150Z" creationid="95" creationdate="20160820T124150Z">
        <seg>实现这种目的的其中一种做法是使用 <bpt i="0" x="0">&lt;e0&gt;</bpt>扩展对象<ept i="0">&lt;/e0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>One of the convention properties added by the plugin is <bpt i="0" x="0">&lt;c0&gt;</bpt>applicationDistribution<ept i="0">&lt;/c0&gt;</ept> which is a <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>CopySpec<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150702T105419Z" creationid="haohang" creationdate="20150702T105419Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>applicationDistribution<ept i="0">&lt;/c0&gt;</ept>是由插件添加的公约属性之一，它是一个<bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>CopySpec<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>One or more output files have changed since the previous execution.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160817T144518Z" creationid="95" creationdate="20160817T144449Z">
        <seg>自前一次执行开始，有一个或多个的文件已经被更改。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>One piece of module metadata that Gradle understands is a module's <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>status scheme<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T012729Z" creationid="95" creationdate="20151115T092256Z">
        <seg>其中一个 Gradle 能理解的模块元数据是模块的<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>状态模式<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>One place to look are the constants in a file from the Ant project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141121T142351Z" creationid="msdx" creationdate="20141121T142024Z">
        <seg>其中可以去看的一个地方是 Ant 项目的一个文件中的常量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>One reason is that it is offered by other tools and we want to have the check mark in a feature comparison :).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160727T053529Z" creationid="haohang" creationdate="20160727T053529Z">
        <seg>原因之一是其他工具也有这个功能，而我们想要在功能比较中有这一点。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>One such type is the simple task, where you define the task with an action closure.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T141010Z" creationid="95" creationdate="20160814T141010Z">
        <seg>一种是简单的任务，你可以使用一个action闭包来定义它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>One thing is very important to note.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160530T152423Z" creationid="95" creationdate="20160530T152423Z">
        <seg>注意，有一件事情很重要。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>One thing to note is that a new instance of a given plugin is created for each project it is applied to.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T124004Z" creationid="95" creationdate="20160820T123832Z">
        <seg>需要注意的一点是，对于一个给定的插件，每一个配置使用它的项目都会创建一个新的实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>One use for source sets is to group source files into logical groups which describe their purpose.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T074543Z" creationid="Administrator" creationdate="20150425T074543Z">
        <seg>源集的一个用途是，把源文件进行逻辑上的分组，以描述它们的目的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>One way to obtain a <bpt i="0" x="0">&lt;c0&gt;</bpt>FileCollection<ept i="0">&lt;/c0&gt;</ept> instance is to use the <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>Project.files()<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept> method.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T145357Z" creationid="msdx" creationdate="20141112T145349Z">
        <seg>使用<bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>Project.files()<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>方法是获取一个<bpt i="0" x="0">&lt;c0&gt;</bpt>FileCollection<ept i="0">&lt;/c0&gt;</ept>实例的其中一个方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>One way to obtain a <bpt i="0" x="0">&lt;c0&gt;</bpt>FileTree<ept i="0">&lt;/c0&gt;</ept> instance is to use the <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>Project.fileTree()<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept> method.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T101746Z" creationid="msdx" creationdate="20141113T101624Z">
        <seg>使用<bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>Project.fileTree()<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>方法是获取一个<bpt i="0" x="0">&lt;c0&gt;</bpt>FileTree<ept i="0">&lt;/c0&gt;</ept>实例的其中一种方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Only $ENTERPRISE_REPOSITORY_URL is allowed"<it pos="end" x="10">&lt;/s10&gt;</it></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161215T144239Z" creationid="95" creationdate="20161215T144239Z">
        <seg>Only $ENTERPRISE_REPOSITORY_URL is allowed"<it pos="end" x="10">&lt;/s10&gt;</it></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Only Show Output When Errors Occur</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T161122Z" creationid="msdx" creationdate="20141105T161122Z">
        <seg>只在出现错误时显示输出</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Only complain if there is <bpt i="4" x="4">&lt;s4&gt;</bpt><bpt i="5" x="5">&lt;e5&gt;</bpt>no<ept i="5">&lt;/e5&gt;</ept><ept i="4">&lt;/s4&gt;</ept> such task!</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160715T091047Z" creationid="haohang" creationdate="20160715T091047Z">
        <seg>如果<bpt i="4" x="4">&lt;s4&gt;</bpt><bpt i="5" x="5">&lt;e5&gt;</bpt>没有<ept i="5">&lt;/e5&gt;</ept><ept i="4">&lt;/s4&gt;</ept>这样的任务，那只能complain。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Only if you define a property or a method which has the same name as a member of the <bpt i="4" x="4">&lt;c4&gt;</bpt>Project<ept i="4">&lt;/c4&gt;</ept> object, you need to use the <bpt i="5" x="5">&lt;c5&gt;</bpt>project<ept i="5">&lt;/c5&gt;</ept> property.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T043819Z" creationid="msdx" creationdate="20141108T043819Z">
        <seg>只有当您定义的属性或方法<bpt i="4" x="4">&lt;c4&gt;</bpt>Project<ept i="4">&lt;/c4&gt;</ept>对象的一个成员相同名字时，你才需要使用<bpt i="5" x="5">&lt;c5&gt;</bpt>project<ept i="5">&lt;/c5&gt;</ept>属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Only if your buildscript and Ant's optional task need the <bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;e3&gt;</bpt>same<ept i="3">&lt;/e3&gt;</ept><ept i="2">&lt;/s2&gt;</ept> library you would have to define it two times.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161213T154448Z" creationid="95" creationdate="20161213T154448Z">
        <seg>仅当你的构建脚本和Ant的可选任务需要<bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;e3&gt;</bpt>相同的<ept i="3">&lt;/e3&gt;</ept><ept i="2">&lt;/s2&gt;</ept> library时，你才需要定义它两次。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Only in case of internal exceptions will stacktraces be printed.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T103821Z" creationid="msdx" creationdate="20141116T103812Z">
        <seg>只有在内部异常的情况下才打印栈跟踪。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Only relevant projects are configured which results in faster builds for large multi-projects.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141120T053745Z" creationid="msdx" creationdate="20141120T053036Z">
        <seg>只适用于相关的项目被配置为在大型多项目中更快地构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Only support for comparing build outcomes that are <bpt i="0" x="0">&lt;c0&gt;</bpt>zip<ept i="0">&lt;/c0&gt;</ept> archives is supported at this time.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161228T150118Z" creationid="95" creationdate="20161228T150049Z">
        <seg>目前只支持构建结果是 <bpt i="0" x="0">&lt;c0&gt;</bpt>zip<ept i="0">&lt;/c0&gt;</ept> 归档的比较。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Only support for executing Gradle builds is available at this time.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161228T145554Z" creationid="95" creationdate="20161228T145554Z">
        <seg>目前只支持执行Gradle构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Operating System</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T065232Z" creationid="haohang" creationdate="20150628T065232Z">
        <seg>操作系统</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Option</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T102829Z" creationid="msdx" creationdate="20141116T102829Z">
        <seg>选项</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Optionally, a repository with pattern layout can have its 'organisation' part laid out in Maven style, with forward slashes replacing dots as separators.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T111017Z" creationid="95" creationdate="20151006T111017Z">
        <seg>作为可选的功能，一个使用模式布局的仓库可以有它自己的以Maven 风格奠定的“组织”部分，该部分使用斜杠替换点作为分隔符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Or if you do not want to use any repositories at all for storing your dependencies.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T092949Z" creationid="haohang" creationdate="20150801T092907Z">
        <seg>或者是你如果不想使用任何仓库来存储你的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Or some combination of the two.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T145205Z" creationid="95" creationdate="20160814T145205Z">
        <seg>或者是上面两者都有。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Or you can only provide client modules for POMs with bad metadata.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151201T063808Z" creationid="haohang" creationdate="20151201T063808Z">
        <seg>或者，你可以只为元数字不正确的 POMs 提供客户端模块。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Or, you can add behaviour to an Ant target:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T061032Z" creationid="msdx" creationdate="20141116T061032Z">
        <seg>或者，您可以将行为添加到 Ant 目标中：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Ordering tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150330T141021Z" creationid="Administrator" creationdate="20150330T141021Z">
        <seg>任务排序</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Organizing Build Logic</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070803Z" creationid="95" creationdate="20170416T070803Z">
        <seg>组织构建逻辑</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Originally Gradle has used the <bpt i="0" x="0">&lt;c0&gt;</bpt>'/'<ept i="0">&lt;/c0&gt;</ept> character as a natural path separator.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T061806Z" creationid="haohang" creationdate="20160718T061806Z">
        <seg>原来 Gradle 使用<bpt i="0" x="0">&lt;c0&gt;</bpt>/<ept i="0">&lt;/c0&gt;</ept>字符作为自然路径分隔符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>OsgiManifest</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150526T004712Z" creationid="haohang" creationdate="20150526T004712Z">
        <seg>OsgiManifest</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Other build systems require a wholesale replacement of this approach before migrating.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150716T040558Z" creationid="haohang" creationdate="20150716T040558Z">
        <seg>其他的构建系统在迁移之前需要对这种方法进行大量的替换。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Other build systems use inheritance as the primary means for defining common behavior.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160527T162327Z" creationid="95" creationdate="20160527T161953Z">
        <seg>其他构建系统使用继承作为主要手段，用于定义共同的行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Other examples of the dependency exclusions can be found in the reference for <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>ModuleDependency<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> or <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>DependencyHandler<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T103044Z" creationid="haohang" creationdate="20150801T103044Z">
        <seg>其他相关依赖关系排除的示例，可以参考 <bpt i="0" x="0">&lt;a0&gt;</bpt> <bpt i="1" x="1">&lt;c1&gt;</bpt>ModuleDependency<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>或<bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>DependencyHandler<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Other plugins add the ability to include Groovy and Scala source files in a source set.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T074316Z" creationid="Administrator" creationdate="20150425T074316Z">
        <seg>其他有一些插件添加了在源集里包含 Groovy 和 Scala 的源代码文件的能力。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Other plugins, such as the Groovy plugin, exclude additional types of files from this collection.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T052948Z" creationid="Administrator" creationdate="20150427T052809Z">
        <seg>其他插件，如Groovy 插件，会从该集合中排除其他类型的文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Otherwise Gradle throws an exception, saying that a task with such a name already exists.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T020246Z" creationid="msdx" creationdate="20141111T020240Z">
        <seg>否则 Gradle 将抛出异常，说这种名称的任务已经存在。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Otherwise a multiproject build is executed.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T074126Z" creationid="haohang" creationdate="20160519T074126Z">
        <seg>否则执行多项目构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Otherwise applying <bpt i="2" x="2">&lt;c2&gt;</bpt>eclipse<ept i="2">&lt;/c2&gt;</ept> plugin is enough.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T003142Z" creationid="haohang" creationdate="20150603T003142Z">
        <seg>否则应用<bpt i="2" x="2">&lt;c2&gt;</bpt>eclipse<ept i="2">&lt;/c2&gt;</ept>插件就足够了。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Otherwise snapshots are deployed to the <bpt i="1" x="1">&lt;c1&gt;</bpt>snapshotRepository<ept i="1">&lt;/c1&gt;</ept> element.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T141816Z" creationid="95" creationdate="20160105T141816Z">
        <seg>否则，snapshots将部署到<bpt i="1" x="1">&lt;c1&gt;</bpt>snapshotRepository<ept i="1">&lt;/c1&gt;</ept>元素中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Otherwise the script gets compiled and the new version is stored in the cache.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T153544Z" creationid="msdx" creationdate="20141109T153544Z">
        <seg>否则该脚本会重新编译，并把最新版本存在缓存中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Otherwise, a <bpt i="6" x="6">&lt;c6&gt;</bpt>File<ept i="6">&lt;/c6&gt;</ept> instance is constructed by prepending the project directory path to the supplied path.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T143239Z" creationid="msdx" creationdate="20141112T143148Z">
        <seg>否则，会通过先计算所提供的路径相对于项目目录的相对路径来构造<bpt i="6" x="6">&lt;c6&gt;</bpt>File<ept i="6">&lt;/c6&gt;</ept>实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Otherwise, execution of the task will fail with a message saying that <bpt i="0" x="0">&lt;c0&gt;</bpt>groovyClasspath<ept i="0">&lt;/c0&gt;</ept> could not be inferred.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T092248Z" creationid="msdx" creationdate="20150429T092248Z">
        <seg>其他情况，该task 将执行失败，并提示无法推断 <bpt i="0" x="0">&lt;c0&gt;</bpt>groovyClasspath<ept i="0">&lt;/c0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Otherwise, execution of the task will fail with a message saying that <bpt i="0" x="0">&lt;c0&gt;</bpt>scalaClasspath<ept i="0">&lt;/c0&gt;</ept> could not be inferred.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150430T154646Z" creationid="msdx" creationdate="20150430T154646Z">
        <seg>其他情况，该task 将执行失败，并提示无法推断 <bpt i="0" x="0">&lt;c0&gt;</bpt>scalaClasspath<ept i="0">&lt;/c0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Otherwise, the project at hand may be referenced with the wrong artifact ID from generated POMs for other projects in the same build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T142449Z" creationid="95" creationdate="20160106T142449Z">
        <seg>否则，在相同的构建中，这个项目可能会被其他项目所生成的POMs 中错误的 artifact ID所引用到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Our example task was defined using an action closure.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T060729Z" creationid="msdx" creationdate="20141111T060729Z">
        <seg>我们的示例任务被用一个操作（action）闭包来定义。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Our final message for this chapter is that multi-project builds with Gradle are usually <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>not<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> difficult.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160727T053804Z" creationid="haohang" creationdate="20160727T053804Z">
        <seg>我们对这一章最后要说的是，使用 Gradle 的多项目构建通常<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>不会<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>很难。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Our first examples are about marine life.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160522T024956Z" creationid="95" creationdate="20160522T024946Z">
        <seg>我们的第一个例子是关于海洋生活的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle --init-script init.gradle -q showRepos<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161215T143428Z" creationid="95" creationdate="20161215T143428Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle --init-script init.gradle -q showRepos<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -I init.gradle build<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T154830Z" creationid="msdx" creationdate="20141116T154830Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -I init.gradle build<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> 的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -a :api:build<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160727T051920Z" creationid="haohang" creationdate="20160727T051920Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle :api:build<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q -I init.gradle showRepositories<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161215T144257Z" creationid="95" creationdate="20161215T144257Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -I init.gradle showRepositories<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> 的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q -PcommandLineProjectProp=commandLineProjectPropValue -Dorg.gradle.project.systemProjectProp=systemPropertyValue printProps<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T151129Z" creationid="msdx" creationdate="20141109T151129Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q -PcommandLineProjectProp=commandLineProjectPropValue -Dorg.gradle.project.systemProjectProp=systemPropertyValue printProps<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q -PtaskInputProperty=changed incrementalReverse<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160817T150816Z" creationid="95" creationdate="20160817T150816Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q -PtaskInputProperty=changed incrementalReverse<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q :hello :krill:hello hello<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160715T091716Z" creationid="haohang" creationdate="20160715T091716Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q :hello :krill:hello hello<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q a<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T135108Z" creationid="95" creationdate="20160521T135108Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q a<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q action<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T062415Z" creationid="haohang" creationdate="20160718T062415Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q action<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q allFiles<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T034618Z" creationid="haohang" creationdate="20150807T034618Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q allFiles<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q books<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T015256Z" creationid="95" creationdate="20161211T015256Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q books<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q broken<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T140130Z" creationid="95" creationdate="20160521T140130Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q broken<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q build<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161212T153549Z" creationid="95" creationdate="20161212T153549Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q build<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q check<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T043154Z" creationid="msdx" creationdate="20141108T043154Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q check<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q compile<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T073311Z" creationid="msdx" creationdate="20141109T073311Z">
        <seg> <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q compile<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q configure<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T152818Z" creationid="msdx" creationdate="20141109T152818Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q configure<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q consume<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T072055Z" creationid="haohang" creationdate="20160718T072055Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q consume<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q copy<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T015905Z" creationid="msdx" creationdate="20141111T015905Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q copy<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> 的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q copyVsFiles<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T041255Z" creationid="haohang" creationdate="20150807T041255Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q copyVsFiles<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q dependencies<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T034417Z" creationid="haohang" creationdate="20150807T034417Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q dependencies<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q distanceToIceberg<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160715T080006Z" creationid="haohang" creationdate="20160715T080006Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q distanceToIceberg<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q encode<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161212T154711Z" creationid="95" creationdate="20161212T154711Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q encode<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q files<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T034750Z" creationid="haohang" creationdate="20150807T034750Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q files<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q groupPing<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T065656Z" creationid="msdx" creationdate="20141111T065656Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt> <bpt i="1" x="1">&lt;c1&gt;</bpt>Gradle q groupPing<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q hello greeting<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T151557Z" creationid="95" creationdate="20160814T151557Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q hello greeting<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q hello<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T152454Z" creationid="msdx" creationdate="20141109T152454Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q hello<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q incrementalReverse<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160817T145727Z" creationid="95" creationdate="20160817T145727Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q incrementalReverse<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q list<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T160754Z" creationid="msdx" creationdate="20141112T160754Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q list<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q listBirds<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T041838Z" creationid="95" creationdate="20151129T041838Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q listBirds<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q listFish<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T041652Z" creationid="95" creationdate="20151129T041652Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q listFish<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q listJars<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T091217Z" creationid="haohang" creationdate="20150801T091217Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q listJars<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q myTask<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T055302Z" creationid="msdx" creationdate="20141111T055302Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q myTask<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> 的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q myZip<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T154746Z" creationid="msdx" creationdate="20141113T154746Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q myZip<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> 的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q pingServer1<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T065011Z" creationid="msdx" creationdate="20141111T065011Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt> <bpt i="1" x="1">&lt;c1&gt;</bpt>Gradle q pingServer1<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q printProperties<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T050744Z" creationid="msdx" creationdate="20141108T050740Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q printProperties<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q removeInput incrementalReverse<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160817T150311Z" creationid="95" creationdate="20160817T150311Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q removeInput incrementalReverse<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q removeOutput incrementalReverse<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160817T150454Z" creationid="95" creationdate="20160817T150454Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q removeOutput incrementalReverse<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q sayGreeting<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T132307Z" creationid="95" creationdate="20160820T132307Z">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q sayGreeting<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q show<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141123T151139Z" creationid="msdx" creationdate="20141123T151139Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q show<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> 的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q taskX<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T122328Z" creationid="msdx" creationdate="20141110T122328Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q taskX<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q taskY taskX<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T012846Z" creationid="msdx" creationdate="20141111T012846Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q taskY taskX<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> 的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q taskY<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T013520Z" creationid="msdx" creationdate="20141111T013520Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q taskY<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> 的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q test<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T125713Z" creationid="95" creationdate="20160521T125713Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q test<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q updateInputs incrementalReverse<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160817T151047Z" creationid="95" creationdate="20160817T150208Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle -q updateInputs incrementalReverse<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle :api:build<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T095310Z" creationid="haohang" creationdate="20160726T095310Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle :api:build<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle :api:buildDependents<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160727T052710Z" creationid="haohang" creationdate="20160727T052701Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle :api:buildDependents<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle :api:buildNeeded<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160727T052319Z" creationid="haohang" creationdate="20160727T052319Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle: api:buildNeeded<ept i="1">&lt;/c1&gt;</ept> <ept i="0">&lt;/s0&gt;</ept>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle disableMe<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T055757Z" creationid="msdx" creationdate="20141111T055749Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt> <bpt i="1" x="1">&lt;c1&gt;</bpt>Gradle disableMe<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle distZip<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150703T100710Z" creationid="haohang" creationdate="20150703T100710Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt> <bpt i="1" x="1">&lt;c1&gt;</bpt>gradle distZip<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>的输出</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle distanceToIceberg<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160715T080053Z" creationid="haohang" creationdate="20160715T080053Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle distanceToIceberg<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle generateDescriptorFileForIvyCustomPublication<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T144014Z" creationid="95" creationdate="20170330T144014Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle generateDescriptorFileForIvyCustomPublication<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle generatePomFileForMavenCustomPublication<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T064817Z" creationid="95" creationdate="20170416T064807Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle generatePomFileForMavenCustomPublication<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle hello -PskipHello<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T021027Z" creationid="msdx" creationdate="20141111T021027Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle hello -PskipHello<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle hello<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141115T153417Z" creationid="msdx" creationdate="20141115T153417Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle hello<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> 的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle intTestClasses<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T133232Z" creationid="Administrator" creationdate="20150427T133232Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle intTestClasses<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle intro<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T061020Z" creationid="msdx" creationdate="20141116T061020Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle intro<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle publish<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170326T080516Z" creationid="95" creationdate="20170326T080516Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle publish<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle publishIvyJavaPublicationToIvyRepository<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170326T075109Z" creationid="95" creationdate="20170326T075109Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle publishIvyJavaPublicationToIvyRepository<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle publishToMavenLocal<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T064122Z" creationid="95" creationdate="20170416T064122Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle publishToMavenLocal<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle signArchives<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160109T072547Z" creationid="95" creationdate="20160109T072547Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle signArchives<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle signStuffZip<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160126T140542Z" creationid="95" creationdate="20160126T140542Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle signStuffZip<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle test<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T025455Z" creationid="haohang" creationdate="20160519T025350Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle test<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> 的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle transform<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T060343Z" creationid="msdx" creationdate="20141111T060343Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle transform<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>的输出结果</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Output.FILE</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T132321Z" creationid="msdx" creationdate="20150506T132321Z">
        <seg>Output.FILE</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Outputs Log Levels</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T102837Z" creationid="msdx" creationdate="20141116T102837Z">
        <seg>输出日志级别</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Over the coming Gradle releases, the functionality will be expanded to include (but not limited to):</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T154559Z" creationid="95" creationdate="20170330T154559Z">
        <seg>在即将到来的 Gradle 版本中，功能将会扩展到包括（但不仅限于）︰</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Overriding the default identity values is easy: simply specify the <bpt i="0" x="0">&lt;c0&gt;</bpt>groupId<ept i="0">&lt;/c0&gt;</ept>, <bpt i="1" x="1">&lt;c1&gt;</bpt>artifactId<ept i="1">&lt;/c1&gt;</ept> or <bpt i="2" x="2">&lt;c2&gt;</bpt>version<ept i="2">&lt;/c2&gt;</ept> attributes when configuring the <bpt i="3" x="3">&lt;c3&gt;</bpt>MavenPublication<ept i="3">&lt;/c3&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T032451Z" creationid="95" creationdate="20170416T032351Z">
        <seg>重写默认标识值是很容易︰ 只需配置<bpt i="3" x="3">&lt;c3&gt;</bpt>MavenPublication<ept i="3">&lt;/c3&gt;</ept>时指定<bpt i="0" x="0">&lt;c0&gt;</bpt>groupId<ept i="0">&lt;/c0&gt;</ept>、 <bpt i="1" x="1">&lt;c1&gt;</bpt>artifactId<ept i="1">&lt;/c1&gt;</ept>或<bpt i="2" x="2">&lt;c2&gt;</bpt>version<ept i="2">&lt;/c2&gt;</ept>的属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Overriding the default identity values is easy: simply specify the <bpt i="0" x="0">&lt;c0&gt;</bpt>organisation<ept i="0">&lt;/c0&gt;</ept>, <bpt i="1" x="1">&lt;c1&gt;</bpt>module<ept i="1">&lt;/c1&gt;</ept> or <bpt i="2" x="2">&lt;c2&gt;</bpt>revision<ept i="2">&lt;/c2&gt;</ept> attributes when configuring the <bpt i="3" x="3">&lt;c3&gt;</bpt>IvyPublication<ept i="3">&lt;/c3&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T032422Z" creationid="haohang" creationdate="20170217T083057Z">
        <seg>重写默认标识值是很简单︰只需要配置<bpt i="3" x="3">&lt;c3&gt;</bpt>IvyPublication<ept i="3">&lt;/c3&gt;</ept>时指定<bpt i="0" x="0">&lt;c0&gt;</bpt>organisation<ept i="0">&lt;/c0&gt;</ept>、<bpt i="1" x="1">&lt;c1&gt;</bpt>module<ept i="1">&lt;/c1&gt;</ept>或<bpt i="2" x="2">&lt;c2&gt;</bpt>revision<ept i="2">&lt;/c2&gt;</ept>属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Overview</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T161852Z" creationid="msdx" creationdate="20141109T161852Z">
        <seg>概述</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>POGOs.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T043645Z" creationid="95" creationdate="20161211T043607Z">
        <seg>POGOs。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Packaging a plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070726Z" creationid="95" creationdate="20170416T070726Z">
        <seg>打包插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Packaging a task class</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070659Z" creationid="95" creationdate="20170416T070659Z">
        <seg>封装一个任务类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Parallel execution is an incubating feature.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T090201Z" creationid="haohang" creationdate="20160726T090201Z">
        <seg>并行执行仍是一个孵化中的功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Parallel project execution</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070635Z" creationid="95" creationdate="20170416T070635Z">
        <seg>并行的项目执行</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Parallel project execution allows the separate projects in a decoupled multi-project build to be executed in parallel (see also: <bpt i="0" x="0">&lt;a0&gt;</bpt>Section 56.9, “Decoupled Projects”<ept i="0">&lt;/a0&gt;</ept>).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T090349Z" creationid="haohang" creationdate="20160726T090226Z">
        <seg>并行项目执行允许在一个解耦的多项目构建中的一些单独的项目被并行执行（参见︰<bpt i="0" x="0">&lt;a0&gt;</bpt>第 56.9节，“解耦项目”<ept i="0">&lt;/a0&gt;</ept>）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Parentheses are optional for method calls.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T062548Z" creationid="msdx" creationdate="20141108T062440Z">
        <seg>调用方法时括号是可选的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>People can check out such a project from svn and have everything necessary to build it.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151201T062926Z" creationid="haohang" creationdate="20151201T062926Z">
        <seg>人们可以从 svn 检出这样一个项目，并且具体必要的一切，来构建它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Per-configuration excludes are also included in the Maven POM, if they are convertible.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T145716Z" creationid="95" creationdate="20160106T145716Z">
        <seg>每一个configuration的排除规则如果可以被转换的话，也会包含在Maven POM中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Performance.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T153302Z" creationid="95" creationdate="20161218T153302Z">
        <seg>性能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Performing a publish</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T071117Z" creationid="95" creationdate="20170416T071117Z">
        <seg>执行发布</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Performs a full build of the project and all projects it depends on.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T011435Z" creationid="Administrator" creationdate="20150426T011435Z">
        <seg>执行项目本身及它所依赖的其他所有项目的完整构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Performs a full build of the project and all projects which depend on it.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T011703Z" creationid="Administrator" creationdate="20150426T011703Z">
        <seg>执行项目本身及依赖它的其他所有项目的完整构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Performs a full build of the project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T010517Z" creationid="Administrator" creationdate="20150426T010517Z">
        <seg>执行项目的完事构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Performs all verification tasks in the project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T010450Z" creationid="Administrator" creationdate="20150426T010423Z">
        <seg>执行项目中所有的核查任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Performs quality checks on your project's Groovy source files using <bpt i="0" x="0">&lt;a0&gt;</bpt>CodeNarc<ept i="0">&lt;/a0&gt;</ept> and generates reports from these checks.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T034742Z" creationid="Administrator" creationdate="20150425T034742Z">
        <seg>使用<bpt i="0" x="0">&lt;a0&gt;</bpt>CodeNarc<ept i="0">&lt;/a0&gt;</ept>对您的项目的 Groovy 源文件执行质量检查并生成报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Performs quality checks on your project's Java source files using <bpt i="0" x="0">&lt;a0&gt;</bpt>Checkstyle<ept i="0">&lt;/a0&gt;</ept> and generates reports from these checks.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T034720Z" creationid="Administrator" creationdate="20150425T034720Z">
        <seg>使用<bpt i="0" x="0">&lt;a0&gt;</bpt>Checkstyle<ept i="0">&lt;/a0&gt;</ept>对您的项目的 Java 源文件执行质量检查并生成报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Performs quality checks on your project's Java source files using <bpt i="0" x="0">&lt;a0&gt;</bpt>FindBugs<ept i="0">&lt;/a0&gt;</ept> and generates reports from these checks.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T035201Z" creationid="Administrator" creationdate="20150425T035201Z">
        <seg>使用<bpt i="0" x="0">&lt;a0&gt;</bpt>FindBugs<ept i="0">&lt;/a0&gt;</ept>对您的项目的 Java 源文件执行质量检查并生成报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Performs quality checks on your project's Java source files using <bpt i="0" x="0">&lt;a0&gt;</bpt>PMD<ept i="0">&lt;/a0&gt;</ept> and generates reports from these checks.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T035345Z" creationid="Administrator" creationdate="20150425T035345Z">
        <seg>使用<bpt i="0" x="0">&lt;a0&gt;</bpt>PMD<ept i="0">&lt;/a0&gt;</ept>对您的项目的 Java 源文件执行质量检查并生成报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Performs quality checks on your project's source files using <bpt i="0" x="0">&lt;a0&gt;</bpt>JDepend<ept i="0">&lt;/a0&gt;</ept> and generates reports from these checks.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T035322Z" creationid="Administrator" creationdate="20150425T035322Z">
        <seg>使用<bpt i="0" x="0">&lt;a0&gt;</bpt>JDepend<ept i="0">&lt;/a0&gt;</ept>对您的项目的源文件执行质量检查并生成报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Perhaps a repository was initially misconfigured, or perhaps a "non-changing" module was published incorrectly.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T153950Z" creationid="95" creationdate="20151129T153950Z">
        <seg>也许一个存储库的最初配置不正确，或许是一个“无改变”的模块被不正确地发布。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Periodically garbage collect the Gradle caches.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141117T151301Z" creationid="msdx" creationdate="20141117T151301Z">
        <seg>Gradle 缓存的定期垃圾收集。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Person.java</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T083506Z" creationid="haohang" creationdate="20160726T083506Z">
        <seg>Person.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>PersonImpl.java</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T083507Z" creationid="haohang" creationdate="20160726T083507Z">
        <seg>PersonImpl.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>PersonService.java</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T083511Z" creationid="haohang" creationdate="20160726T083511Z">
        <seg>PersonService.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>PersonServiceTest.java</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T083513Z" creationid="haohang" creationdate="20160726T083513Z">
        <seg>PersonServiceTest.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Plans for future integration include:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160504T151634Z" creationid="95" creationdate="20160504T151538Z">
        <seg>未来的集成计划包括：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Please be aware that the DSL and other configuration may change in later Gradle versions.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T092322Z" creationid="msdx" creationdate="20150503T094910Z">
        <seg>请务必注意，在以后的 Gradle 版本中，相关的 DSL 和其他配置可能会有所改变。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Please be aware that this feature may change in later Gradle versions.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T142913Z" creationid="msdx" creationdate="20141110T142913Z">
        <seg>请注意此功能在以后的 Gradle 版本中可能会改变。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Please find more information in <bpt i="0" x="0">&lt;a0&gt;</bpt>Section 20.1, “Configuring the build environment via gradle.properties”<ept i="0">&lt;/a0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141119T031218Z" creationid="msdx" creationdate="20141119T031218Z">
        <seg>有关更多信息请参阅<bpt i="0" x="0">&lt;a0&gt;</bpt>20.1章节， “通过 gradle.properties 配置构建环境”<ept i="0">&lt;/a0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Please see <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>DependencyHandler<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> for examples and a complete reference for declaring dependencies.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150730T035603Z" creationid="haohang" creationdate="20150730T035445Z">
        <seg>请参阅 <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>DependencyHandler<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> 的例子和声明依赖的完整参考。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Please take a look at <bpt i="0" x="0">&lt;a0&gt;</bpt>Chapter 19, <bpt i="1" x="1">&lt;i1&gt;</bpt>The Gradle Daemon<ept i="1">&lt;/i1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T155008Z" creationid="95" creationdate="20161218T154542Z">
        <seg>请查看 <bpt i="0" x="0">&lt;a0&gt;</bpt>第十九章，<bpt i="1" x="1">&lt;i1&gt;</bpt>Gradle守护进程<ept i="1">&lt;/i1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Please try them out and give us feedback.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151220T120803Z" creationid="95" creationdate="20151220T120803Z">
        <seg>请尝试它们，并向我们反馈。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Please use it and let us know how it works for you.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T090221Z" creationid="haohang" creationdate="20160726T090221Z">
        <seg>请使用它，并且让我们知道它是帮助你的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T003552Z" creationid="haohang" creationdate="20150603T003552Z">
        <seg>插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Plugin Id</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141126T120830Z" creationid="msdx" creationdate="20141126T120759Z">
        <seg>插件 Id</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Plugin Status and Compatibility</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065701Z" creationid="95" creationdate="20170416T065701Z">
        <seg>插件状态和兼容性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Plugins add new tasks (e.g. <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>JavaCompile<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>), domain objects (e.g. <bpt i="4" x="4">&lt;a4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>SourceSet<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/a4&gt;</ept>), conventions (e.g. main Java source is located at <bpt i="6" x="6">&lt;c6&gt;</bpt>src/main/java<ept i="6">&lt;/c6&gt;</ept>) as well as extending core objects and objects from other plugins.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141122T161737Z" creationid="msdx" creationdate="20141122T161411Z">
        <seg>插件添加了新任务 （例如<bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>JavaCompile<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>），域对象 （例如<bpt i="4" x="4">&lt;a4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>SourceSet<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/a4&gt;</ept>），约定（例如主要的 Java 源代码是位于<bpt i="6" x="6">&lt;c6&gt;</bpt>src/main/java<ept i="6">&lt;/c6&gt;</ept>），以及扩展的核心对象和其他插件的对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Plugins advertise a short name for themselves.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141122T162147Z" creationid="msdx" creationdate="20141122T162147Z">
        <seg>插件都有表示它们自己的一个短名称。.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Plugins are said to be <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>applied<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>, which is done via the <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>Project.apply()<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept> method.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141122T162024Z" creationid="msdx" creationdate="20141122T161842Z">
        <seg>插件都认为是被<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>应用<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>，通过<bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>Project.apply()<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>方法来完成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Plugins can pre-configure the project in smart ways to support convention-over-configuration.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141123T151441Z" creationid="msdx" creationdate="20141123T151441Z">
        <seg>插件可以通过智能的方法对项目进行预配置以支持约定优于配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Pmd</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T135544Z" creationid="msdx" creationdate="20150505T135544Z">
        <seg>pmd</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Potential usages of the <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>ResolutionResult<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept> API:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T034004Z" creationid="haohang" creationdate="20150807T034004Z">
        <seg><bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>ResolutionResult<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept> API的可能用法：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Pre-configure added tasks with useful defaults.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141123T150949Z" creationid="msdx" creationdate="20141123T150949Z">
        <seg>使用有用的默认设置对已添加的任务进行预配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Preemptive execution of certain tasks, for example compilation.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141117T151201Z" creationid="msdx" creationdate="20141117T151201Z">
        <seg>预先执行某些任务，比如编译。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Prerequisites</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162121Z" creationid="msdx" creationdate="20141109T162121Z">
        <seg>系统要求</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Presently, Gradle supports building native binaries from any combination of C++, C, Assembler, Objective-C and Objective-C++ sources.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160219T082433Z" creationid="haohang" creationdate="20160219T082433Z">
        <seg>目前，Gradle 支持从C++，C，Assembler，Objective-C 和 Objective-C++源码的任意组合中构建原生二进制文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Presently, a <bpt i="0" x="0">&lt;c0&gt;</bpt>Platform<ept i="0">&lt;/c0&gt;</ept> consists of a defined operating system and architecture.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160405T033554Z" creationid="haohang" creationdate="20160401T094407Z">
        <seg>目前，一个<bpt i="0" x="0">&lt;c0&gt;</bpt>Platform<ept i="0">&lt;/c0&gt;</ept>由一个定义的操作系统和架构构成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Presently, this library dependency must be provided by your project for each <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>TestSuiteExecutableBinary<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160504T151225Z" creationid="95" creationdate="20160504T151225Z">
        <seg>目前，这个库依赖项必须由你的项目为每个<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>TestSuiteExecutableBinary<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>提供。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Pretty effective way of learning how to use the tooling API is checking out and running the <bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;e3&gt;</bpt>samples<ept i="3">&lt;/e3&gt;</ept><ept i="2">&lt;/s2&gt;</ept> that live in <bpt i="4" x="4">&lt;c4&gt;</bpt>$gradleHome/samples/toolingApi<ept i="4">&lt;/c4&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T155918Z" creationid="95" creationdate="20161218T155918Z">
        <seg>关于学习如何使用 API 的非常有效的方法是，检出及运行在<bpt i="4" x="4">&lt;c4&gt;</bpt>$gradleHome/samples/toolingApi<ept i="4">&lt;/c4&gt;</ept>上的<bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;e3&gt;</bpt>示例<ept i="3">&lt;/e3&gt;</ept><ept i="2">&lt;/s2&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Production ANTLR grammar files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T095142Z" creationid="haohang" creationdate="20150625T095142Z">
        <seg>生产 ANTLR 语法文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Production Groovy sources.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T075116Z" creationid="msdx" creationdate="20150429T075116Z">
        <seg>Production Groovy 源代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Production Java source</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T083403Z" creationid="Administrator" creationdate="20150426T083403Z">
        <seg>产品的Java源代码</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Production Scala sources.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T152619Z" creationid="msdx" creationdate="20150429T152619Z">
        <seg>Production Scala 源代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Production resources</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T083418Z" creationid="Administrator" creationdate="20150426T083418Z">
        <seg>产品的资源</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Progress information messages</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T070733Z" creationid="msdx" creationdate="20141116T070733Z">
        <seg>进度信息消息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Project</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T044200Z" creationid="msdx" creationdate="20141108T044200Z">
        <seg>Project</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Project and task paths</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070608Z" creationid="95" creationdate="20170416T070608Z">
        <seg>项目和任务路径</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Project dependencies enable partial multi-project builds.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T084250Z" creationid="haohang" creationdate="20160726T084250Z">
        <seg>项目依赖项启用了部分的多项目构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Project dependency</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T080355Z" creationid="haohang" creationdate="20150722T080355Z">
        <seg>项目依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Project in the directory where the build is executed is also configured, but only when Gradle is executed without any tasks.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160522T124418Z" creationid="95" creationdate="20160522T123940Z">
        <seg>执行构建的所在目录的项目也会被配置，但是仅在Gradle 被执行但没有任务时。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Project layout</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131640Z" creationid="msdx" creationdate="20150509T131640Z">
        <seg>项目布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Project lib dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070618Z" creationid="95" creationdate="20170416T070618Z">
        <seg>项目库依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Project project = ProjectBuilder.builder().build()</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160815T150131Z" creationid="95" creationdate="20160815T150131Z">
        <seg>Project project = ProjectBuilder.builder().build()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Project settings determine how the project is going to be analyzed.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150510T143815Z" creationid="msdx" creationdate="20150510T143815Z">
        <seg>Project 设置会决定这个项目将如何进行分析。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Project-level up-to-date checks.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T090809Z" creationid="haohang" creationdate="20160726T090809Z">
        <seg>项目级别的 up-to-date 检查。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Project-specific information is configured in the <bpt i="0" x="0">&lt;c0&gt;</bpt>sonarRunner<ept i="0">&lt;/c0&gt;</ept> block of the corresponding project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150519T124637Z" creationid="msdx" creationdate="20150519T124534Z">
        <seg>特定项目的信息在对应的 project 的<bpt i="0" x="0">&lt;c0&gt;</bpt>sonarRunner<ept i="0">&lt;/c0&gt;</ept>块中配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ProjectEvaluationListener</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T155219Z" creationid="msdx" creationdate="20141116T155219Z">
        <seg>ProjectEvaluationListener</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Projects and tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162322Z" creationid="msdx" creationdate="20141109T162322Z">
        <seg>Projects 和 tasks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Projects bundled as reusable libraries may have different requirements than enterprise applications integrated into much larger systems of software and infrastructure.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150716T091925Z" creationid="haohang" creationdate="20150716T091925Z">
        <seg>项目捆绑作为可重用的库，比起企业应用集成到更大的软件和基础设施的系统中，可能有不同的要求。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Projects can also be configured individually.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T091601Z" creationid="msdx" creationdate="20150512T091601Z">
        <seg>这些 Projects 也可以单独配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Prompting for and managing user credentials.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T154828Z" creationid="95" creationdate="20161218T154816Z">
        <seg>提示输入和管理用户凭据</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Properties and methods declared in a project are inherited to all its subprojects.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160727T053005Z" creationid="haohang" creationdate="20160727T053005Z">
        <seg>定义在一个项目里的属性和方法都会被继承到它所有的子项目中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Property</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T131614Z" creationid="msdx" creationdate="20150506T131614Z">
        <seg>Property</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Property and method inheritance</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070647Z" creationid="95" creationdate="20170416T070647Z">
        <seg>属性和方法的继承</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Property name</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T155807Z" creationid="msdx" creationdate="20141113T155807Z">
        <seg>属性名称</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>PropertyReportTask</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T061522Z" creationid="haohang" creationdate="20150628T061522Z">
        <seg>PropertyReportTask</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Protocol</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T141818Z" creationid="95" creationdate="20160105T141818Z">
        <seg>协议</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Provide faster feedback for execution of small projects without awaiting completion of other projects.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T085948Z" creationid="haohang" creationdate="20160726T085948Z">
        <seg>对于一些小项目的执行，提供更快的反馈，而不必等待其他项目的完成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Provide the authentication domain via the <bpt i="0" x="0">&lt;c0&gt;</bpt>http.auth.ntlm.domain<ept i="0">&lt;/c0&gt;</ept> system property.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141121T142750Z" creationid="msdx" creationdate="20141121T142750Z">
        <seg>通过<bpt i="0" x="0">&lt;c0&gt;</bpt>http.auth.ntlm.domain<ept i="0">&lt;/c0&gt;</ept>系统属性提供验证域。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Provided By</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170211T140512Z" creationid="95" creationdate="20170211T140502Z">
        <seg>提供者</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Provides integration with the <bpt i="0" x="0">&lt;a0&gt;</bpt>JaCoCo<ept i="0">&lt;/a0&gt;</ept> code coverage library for Java.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T040415Z" creationid="Administrator" creationdate="20150425T040415Z">
        <seg>提供对 Java 的<bpt i="0" x="0">&lt;a0&gt;</bpt>JaCoCo<ept i="0">&lt;/a0&gt;</ept>代码覆盖率库的集成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Provides integration with the <bpt i="0" x="0">&lt;a0&gt;</bpt>Sonar<ept i="0">&lt;/a0&gt;</ept> code quality platform.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T035635Z" creationid="Administrator" creationdate="20150425T035635Z">
        <seg>提供对<bpt i="0" x="0">&lt;a0&gt;</bpt>Sonar<ept i="0">&lt;/a0&gt;</ept>代码质量平台的集成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Publication objects describe the structure/configuration of a publication to be created.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170211T135127Z" creationid="95" creationdate="20170211T134931Z">
        <seg>发布对象描述了要被创建的发布内容的结构和配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Publications</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T071100Z" creationid="95" creationdate="20170416T071100Z">
        <seg>Publications</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Publications are published to repositories via tasks, and the configuration of the publication object determines exactly what is published.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170211T135831Z" creationid="95" creationdate="20170211T135356Z">
        <seg>publications是通过任务发布到仓库中的，并且发布对象的配置明确决定了会发布哪些内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Publications are published to repositories.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170304T033843Z" creationid="95" creationdate="20170304T033801Z">
        <seg>发布的内容都会被发布到仓库中</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Publish messages to your favourite platforms, such as Twitter or Growl.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T034433Z" creationid="Administrator" creationdate="20150425T034433Z">
        <seg>将消息发布到你所喜爱的平台，如 Twitter 或 Growl。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Publishing artifacts</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163647Z" creationid="msdx" creationdate="20141109T163647Z">
        <seg>发布项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Publishing the signatures</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070339Z" creationid="95" creationdate="20170416T070339Z">
        <seg>发布签名</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Publishing to Maven Local</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T071155Z" creationid="95" creationdate="20170416T071155Z">
        <seg>发布到Maven本地库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Put a file called <bpt i="0" x="0">&lt;c0&gt;</bpt>init.gradle<ept i="0">&lt;/c0&gt;</ept> in the <bpt i="1" x="1">&lt;c1&gt;</bpt><bpt i="2" x="2">&lt;e2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>USER_HOME<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/e2&gt;</ept>/.gradle/<ept i="1">&lt;/c1&gt;</ept> directory.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161214T152131Z" creationid="95" creationdate="20161214T152057Z">
        <seg>把一个<bpt i="0" x="0">&lt;c0&gt;</bpt>init.gradle<ept i="0">&lt;/c0&gt;</ept>文件放到 <bpt i="1" x="1">&lt;c1&gt;</bpt><bpt i="2" x="2">&lt;e2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>USER_HOME<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/e2&gt;</ept>/.gradle/<ept i="1">&lt;/c1&gt;</ept> 目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Put a file that ends with <bpt i="0" x="0">&lt;c0&gt;</bpt>.gradle<ept i="0">&lt;/c0&gt;</ept> in the <bpt i="1" x="1">&lt;c1&gt;</bpt><bpt i="2" x="2">&lt;e2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>GRADLE_HOME<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/e2&gt;</ept>/init.d/<ept i="1">&lt;/c1&gt;</ept> directory, in the Gradle distribution.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161214T152402Z" creationid="95" creationdate="20161214T152402Z">
        <seg>把一个文件名以<bpt i="0" x="0">&lt;c0&gt;</bpt>.gradle<ept i="0">&lt;/c0&gt;</ept>结尾的文件放到Gradle 分发包<bpt i="1" x="1">&lt;c1&gt;</bpt><bpt i="2" x="2">&lt;e2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>GRADLE_HOME<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/e2&gt;</ept>/init.d/<ept i="1">&lt;/c1&gt;</ept> 目录内。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Put your build logic into a custom plugin, and apply that plugin to multiple projects.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T044356Z" creationid="95" creationdate="20161211T044356Z">
        <seg>把你的构建逻辑放到一个自定义插件中，然后在多个项目应用这个插件 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Put your build logic into a custom task, and reuse that task in multiple places.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T044316Z" creationid="95" creationdate="20161211T044316Z">
        <seg>把你的构建逻辑放到一个自定义任务中，然后在多个地方复用这个任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>QUIET</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T070716Z" creationid="msdx" creationdate="20141116T070716Z">
        <seg>QUIET</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>QUIET and higher</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T103019Z" creationid="msdx" creationdate="20141116T103019Z">
        <seg>QUIET 及更高</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Quicker feedback.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141117T151207Z" creationid="msdx" creationdate="20141117T151207Z">
        <seg>更快的反馈。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Quickstart</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T071020Z" creationid="95" creationdate="20170416T071020Z">
        <seg>快速入门</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Rather than depending on the whole configuration, a dependency on just the desired artifacts is declared.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150730T035047Z" creationid="haohang" creationdate="20150730T035047Z">
        <seg>一个依赖只是声明了所需的 artifacts ，而不是依赖整个配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Re-use of configuration for unchanged projects.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T090754Z" creationid="haohang" creationdate="20160726T090754Z">
        <seg>对于不变的项目复用配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Real-time feedback for test execution.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160504T151744Z" creationid="95" creationdate="20160504T151744Z">
        <seg>测试执行的的实时反馈。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Reasonable default is used if the setting is unspecified.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141120T051939Z" creationid="msdx" creationdate="20141120T051939Z">
        <seg>如果该设置未指定，将使用合理的默认值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Reduce total build time for a multi-project build where execution is IO bound or otherwise does not consume all available CPU resources.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T085916Z" creationid="haohang" creationdate="20160726T085916Z">
        <seg>通过让执行进行IO绑定，或者是其他不消耗所有可用资源的方式，减少多项目构建 的总构建时间</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Reference name</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T004644Z" creationid="haohang" creationdate="20150603T004644Z">
        <seg>引用名称</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Regardless of which Zinc version is used, Zinc will always use the Scala compiler found on the <bpt i="2" x="2">&lt;c2&gt;</bpt>scalaTools<ept i="2">&lt;/c2&gt;</ept> configuration.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T155052Z" creationid="msdx" creationdate="20150501T155052Z">
        <seg>无论使用哪一个 Zinc 版本，Zinc 都是使用在<bpt i="2" x="2">&lt;c2&gt;</bpt>scalaTools<ept i="2">&lt;/c2&gt;</ept>配置上找到的 Scala 编译器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Register build listeners.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161214T142815Z" creationid="95" creationdate="20161214T142815Z">
        <seg>注册构建监听。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Register build loggers.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161214T142947Z" creationid="95" creationdate="20161214T142947Z">
        <seg>注册构建logger。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Removes all Eclipse configuration files</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T004407Z" creationid="haohang" creationdate="20150603T004407Z">
        <seg>删除所有的 Eclipse 配置文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Removes all IDEA configuration files</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T072349Z" creationid="haohang" creationdate="20150625T072349Z">
        <seg>删除所有的 IDEA 配置文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Removes the <bpt i="0" x="0">&lt;c0&gt;</bpt>.classpath<ept i="0">&lt;/c0&gt;</ept> file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T004414Z" creationid="haohang" creationdate="20150603T004414Z">
        <seg>删除<bpt i="0" x="0">&lt;c0&gt;</bpt>.classpath<ept i="0">&lt;/c0&gt;</ept>文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Removes the <bpt i="0" x="0">&lt;c0&gt;</bpt>.project<ept i="0">&lt;/c0&gt;</ept> file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T004411Z" creationid="haohang" creationdate="20150603T004411Z">
        <seg>删除<bpt i="0" x="0">&lt;c0&gt;</bpt>.project<ept i="0">&lt;/c0&gt;</ept>文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Removes the <bpt i="0" x="0">&lt;c0&gt;</bpt>.settings/org.eclipse.jdt.core.prefs<ept i="0">&lt;/c0&gt;</ept> file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T004419Z" creationid="haohang" creationdate="20150603T004419Z">
        <seg>删除<bpt i="0" x="0">&lt;c0&gt;</bpt>.settings/org.eclipse.jdt.core.prefs<ept i="0">&lt;/c0&gt;</ept>文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Removes the <bpt i="0" x="0">&lt;c0&gt;</bpt>.settings/org.eclipse.wst.common.component<ept i="0">&lt;/c0&gt;</ept> file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T004428Z" creationid="haohang" creationdate="20150603T004428Z">
        <seg>删除<bpt i="0" x="0">&lt;c0&gt;</bpt>.settings/org.eclipse.wst.common.component<ept i="0">&lt;/c0&gt;</ept>文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Removes the IDEA module file</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T072457Z" creationid="haohang" creationdate="20150625T072457Z">
        <seg>删除 IDEA 模块文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Removes the IDEA project file</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T072513Z" creationid="haohang" creationdate="20150625T072400Z">
        <seg>删除 IDEA 项目文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Removes the IDEA workspace file</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T072507Z" creationid="haohang" creationdate="20150625T072507Z">
        <seg>删除 IDEA 工作区文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Replacing tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150330T141034Z" creationid="Administrator" creationdate="20150330T141034Z">
        <seg>替换任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Repositories</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163629Z" creationid="msdx" creationdate="20141109T163629Z">
        <seg>仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Repository Manager like Artifactory or Nexus make this easier.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151201T060912Z" creationid="haohang" creationdate="20151201T060838Z">
        <seg>仓库管理器，比如像 Artifactory 或 Nexus 则会使这些工作变得轻松。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Repository independence allows builds to be isolated from each other in an advanced way that no build tool has done before.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T151004Z" creationid="95" creationdate="20151129T151004Z">
        <seg>仓库独立允许构建之间用一种先进方法的方法彼此隔离，以前没有构建工具能做到这样。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Requires the notify-send package to be installed.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T065651Z" creationid="haohang" creationdate="20150628T065651Z">
        <seg>需要已安装通知发送包。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Resources</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131803Z" creationid="msdx" creationdate="20150509T131803Z">
        <seg>资源</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Resources for the given source set</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T083519Z" creationid="Administrator" creationdate="20150426T083519Z">
        <seg>给定的源集的资源</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Responding to the lifecycle in the build script</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070548Z" creationid="95" creationdate="20170416T070548Z">
        <seg>构建脚本生命周期的响应</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Results in an efficient binary format.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104608Z" creationid="msdx" creationdate="20150428T104608Z">
        <seg>有效二进制格式的结果。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Return Type</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150526T004650Z" creationid="haohang" creationdate="20150526T004650Z">
        <seg>返回类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns an OsgiManifest object configured by the closure.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150526T004815Z" creationid="haohang" creationdate="20150526T004725Z">
        <seg>返回一个通过闭包配置的 OsgiManifest 对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Returns an OsgiManifest object.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150526T004717Z" creationid="haohang" creationdate="20150526T004717Z">
        <seg>返回一个 OsgiManifest 对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Reusing and expiration of daemons</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150508T131754Z" creationid="msdx" creationdate="20150508T131754Z">
        <seg> 重用和失效的守护程序</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Root project is always configured.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160522T122057Z" creationid="95" creationdate="20160522T122057Z">
        <seg>根项目始终会被配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Rules not just work when calling tasks from the command line.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T065528Z" creationid="msdx" creationdate="20141111T065528Z">
        <seg>规则不只是从命令行调用任务才起作用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Run build validations early in the build: eg.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T144711Z" creationid="msdx" creationdate="20141110T144219Z">
        <seg>在构建中尽早进行构建验证：如，</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Running "<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle installCustomDist<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>" will install the distribution contents into "<bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;e3&gt;</bpt><bpt i="4" x="4">&lt;c4&gt;</bpt>$buildDir<ept i="4">&lt;/c4&gt;</ept><ept i="3">&lt;/e3&gt;</ept>/install/custom<ept i="2">&lt;/c2&gt;</ept>".</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150701T031642Z" creationid="haohang" creationdate="20150701T031419Z">
        <seg>运行”<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle installCustomDist<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>“将会把分发内容安装到”<bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;e3&gt;</bpt><bpt i="4" x="4">&lt;c4&gt;</bpt>$buildDir<ept i="4">&lt;/c4&gt;</ept><ept i="3">&lt;/e3&gt;</ept>/install/custom<ept i="2">&lt;/c2&gt;</ept>“。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Running <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle build<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> will compile, test and JAR your project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T065615Z" creationid="msdx" creationdate="20141030T065509Z">
        <seg>运行 <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle build<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>将会对你的项目进行编译，测试和打包成jar。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Running <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle build<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> will compile, test and WAR your project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T085726Z" creationid="msdx" creationdate="20141030T085726Z">
        <seg>运行 <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle build<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>将会执行编译，测试和把你的项目打包为WAR包。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Running <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle jettyRun<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> will run your web application in an embedded Jetty web container.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T094344Z" creationid="msdx" creationdate="20141030T094344Z">
        <seg>运行 <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle jettyRun<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> 将会在一个嵌入式Jetty web容器中运行您的web应用程序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Running <bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>gradle jettyRunWar<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/s2&gt;</ept> will build the WAR file, and then run it in an embedded web container.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T094528Z" creationid="msdx" creationdate="20141030T094528Z">
        <seg>运行 <bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>gradle jettyRunWar<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/s2&gt;</ept>会构建WAR文件，然后在一个嵌入式的web容器中运行它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Running and testing your installation</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162147Z" creationid="msdx" creationdate="20141109T162147Z">
        <seg>运行和测试您的安装</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Running another Gradle build from a build</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070837Z" creationid="95" creationdate="20170416T070837Z">
        <seg>从一个构建中运行另一个Gradle构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Running tasks by their absolute path</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070605Z" creationid="95" creationdate="20170416T070605Z">
        <seg>按绝对路径运行任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Running this from the <bpt i="0" x="0">&lt;c0&gt;</bpt>consumer<ept i="0">&lt;/c0&gt;</ept> directory gives:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T071741Z" creationid="haohang" creationdate="20160718T071041Z">
        <seg>从<bpt i="0" x="0">&lt;c0&gt;</bpt>consumer<ept i="0">&lt;/c0&gt;</ept>目录运行如下：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Running your web application</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163802Z" creationid="msdx" creationdate="20141109T163802Z">
        <seg>运行您的 web 应用程序</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Runs Checkstyle against the given source set's Java source files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T025718Z" creationid="msdx" creationdate="20150505T025718Z">
        <seg>针对source set 的 Java 源文件运行 Checkstyle。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Runs Checkstyle against the production Java source files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T025650Z" creationid="msdx" creationdate="20150505T024705Z">
        <seg>针对生产Java 源文件运行 Checkstyle。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Runs Checkstyle against the test Java source files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T025707Z" creationid="msdx" creationdate="20150505T025707Z">
        <seg>针对测试 Java 源文件运行 Checkstyle。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Runs CodeNarc against the given source set's Groovy source files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T133242Z" creationid="msdx" creationdate="20150505T133242Z">
        <seg>针对给定的source set 的 Groovy 源文件运行 CodeNarc。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Runs CodeNarc against the production Groovy source files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T133207Z" creationid="msdx" creationdate="20150505T133207Z">
        <seg>针对生产 Groovy 源文件运行 CodeNarc。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Runs CodeNarc against the test Groovy source files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T133228Z" creationid="msdx" creationdate="20150505T133228Z">
        <seg>针对测试 Groovy 源文件运行 CodeNarc。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Runs FindBugs against the given source set's Java source files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T133722Z" creationid="msdx" creationdate="20150505T133722Z">
        <seg>针对source set 的 Java 源文件运行 FindBugs。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Runs FindBugs against the production Java source files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T133700Z" creationid="msdx" creationdate="20150505T133700Z">
        <seg>针对生产Java 源文件运行 FindBugs。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Runs FindBugs against the test Java source files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T133712Z" creationid="msdx" creationdate="20150505T133712Z">
        <seg>针对测试 Java 源文件运行 FindBugs。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Runs JDepend against the given source set's Java source files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T134307Z" creationid="msdx" creationdate="20150505T134307Z">
        <seg>针对source set 的 Java 源文件运行 JDepend。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Runs JDepend against the production Java source files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T134239Z" creationid="msdx" creationdate="20150505T134239Z">
        <seg>针对生产Java 源文件运行 JDepend。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Runs JDepend against the test Java source files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T134258Z" creationid="msdx" creationdate="20150505T134258Z">
        <seg>针对测试Java 源文件运行 JDepend。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Runs PMD against the given source set's Java source files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T135603Z" creationid="msdx" creationdate="20150505T135603Z">
        <seg>针对source set 的 Java 源文件运行 PMD。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Runs PMD against the production Java source files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T135551Z" creationid="msdx" creationdate="20150505T135551Z">
        <seg>针对生产Java 源文件运行 PMD。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Runs PMD against the test Java source files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T135558Z" creationid="msdx" creationdate="20150505T135558Z">
        <seg>针对测试 Java 源文件运行 PMD。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Runs the unit tests using JUnit or TestNG.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T004846Z" creationid="Administrator" creationdate="20150426T004846Z">
        <seg>使用 JUnit 或 TestNG运行单元测试。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Runtime dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T084207Z" creationid="Administrator" creationdate="20150426T084207Z">
        <seg>运行时依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Runtime time dependencies for the given source set</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T084857Z" creationid="Administrator" creationdate="20150426T084857Z">
        <seg>给定源集的运行时依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Say one open source library needs one version of a logging library and a another uses an alternative version.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150720T064338Z" creationid="haohang" creationdate="20150720T064232Z">
        <seg>比如说一个开源库需要一个日志库的一个版本，而另一个库需要日志库的另一个版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Scala</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T003815Z" creationid="haohang" creationdate="20150603T003815Z">
        <seg>Scala</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Scala plugin - tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T152445Z" creationid="msdx" creationdate="20150429T152445Z">
        <seg>Scala 插件-任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Scala projects need to declare a <bpt i="0" x="0">&lt;c0&gt;</bpt>scala-library<ept i="0">&lt;/c0&gt;</ept> dependency.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T152803Z" creationid="msdx" creationdate="20150429T152803Z">
        <seg>Scala 项目需要声明一个<bpt i="0" x="0">&lt;c0&gt;</bpt>scala-library<ept i="0">&lt;/c0&gt;</ept>依赖项。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Scala sources for the given source set.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T152644Z" creationid="msdx" creationdate="20150429T152644Z">
        <seg>给定的source set 的 Scala 源代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ScalaCompile</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T145449Z" creationid="msdx" creationdate="20150429T145449Z">
        <seg>ScalaCompile</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ScalaDoc</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T145514Z" creationid="msdx" creationdate="20150429T145514Z">
        <seg>scaladoc</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Scalability is an important requirement for Gradle.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160522T120830Z" creationid="95" creationdate="20160522T120830Z">
        <seg>可伸缩性是 Gradle 的一项重要要求。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Scripts in a given directory are executed in alphabetical order.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161214T153037Z" creationid="95" creationdate="20161214T153004Z">
        <seg>而给定目录的脚本，会按照字母顺序执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Secondly when using parallel execution and all dependencies of a task have been satisfied apart from should run after then this task will be run regardless of weather its 'should run after' dependencies have been run or not.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T012001Z" creationid="msdx" creationdate="20141110T152504Z">
        <seg>其次，当使用并行执行，并且一个任务的所有依赖项除了任务应该在之后运行之外所有条件已满足，那么这个任务将会运行，不管它的“应该在之后运行”的依赖项是否已经运行了。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Secondly, the <bpt i="0" x="0">&lt;c0&gt;</bpt>copy()<ept i="0">&lt;/c0&gt;</ept> method can not honor task dependencies when a task is used as a copy source (i.e. as an argument to <bpt i="1" x="1">&lt;c1&gt;</bpt>from()<ept i="1">&lt;/c1&gt;</ept>) because it's a method and not a task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T143753Z" creationid="msdx" creationdate="20141113T131801Z">
        <seg>第二，当一个任务用作复制源（即作为 <bpt i="1" x="1">&lt;c1&gt;</bpt>from()<ept i="1">&lt;/c1&gt;</ept> 的参数）的时候，<bpt i="0" x="0">&lt;c0&gt;</bpt>copy()<ept i="0">&lt;/c0&gt;</ept>方法不能建立任务依赖性，因为它是一个方法，而不是一个任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Sections of existing Eclipse files that are also the target of generated content will be amended or overwritten, depending on the particular section.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T103131Z" creationid="haohang" creationdate="20150624T102854Z">
        <seg>已存在的Eclipse 文件的部分，也是生成的目标内容，将会被修改或覆盖，具体取决于特定的部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Sections of existing IDEA files that are also the target of generated content will be amended or overwritten, depending on the particular section.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T073342Z" creationid="haohang" creationdate="20150625T073342Z">
        <seg>已存在的 IDEA 文件的部分，也是生成的目标内容，将会被修改或覆盖，具体取决于特定的部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>See <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>AnnouncePluginExtension<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T091042Z" creationid="haohang" creationdate="20150628T091009Z">
        <seg>请参阅 <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>AnnouncePluginExtension<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>See <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>CheckstyleExtension<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T132843Z" creationid="msdx" creationdate="20150505T132843Z">
        <seg>请参阅<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>CheckstyleExtension<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>See <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>CodeNarcExtension<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T133518Z" creationid="msdx" creationdate="20150505T133518Z">
        <seg>请参阅<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>CodeNarcExtension<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>See <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>DependencyHandler<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> for more examples and a complete reference.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T102907Z" creationid="haohang" creationdate="20150722T102859Z">
        <seg>有关更多的例子和完整的参考，请参阅<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>DependencyHandler<ept i="1">&lt;/c1&gt;</ept> <ept i="0">&lt;/a0&gt;</ept> 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>See <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>FindBugsExtension<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T133906Z" creationid="msdx" creationdate="20150505T133906Z">
        <seg>请参阅<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>FindBugsExtension<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>See <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>IvyArtifactRepository<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> for details.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T110451Z" creationid="95" creationdate="20151006T110451Z">
        <seg>详细信息请参阅<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>IvyArtifactRepository<ept i="1">&lt;/c1&gt;</ept> <ept i="0">&lt;/a0&gt;</ept> 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>See <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>IvyModuleDescriptor.withXml()<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> for the relevant API reference documentation.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170304T031828Z" creationid="95" creationdate="20170304T031828Z">
        <seg>相关的 API 参考文档，请参阅<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>IvyModuleDescriptor.withXml()<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>See <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>IvyPublication<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> for more detailed documentation on how artifacts can be customized.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20170216T072640Z" creationid="haohang" creationdate="20170216T072640Z">
        <seg>关于如何自定义构件的更详细的文档，请参阅<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>IvyPublication<ept i="1">&lt;/c1&gt;</ept> <ept i="0">&lt;/a0&gt;</ept> 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>See <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>JDependExtension<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T134507Z" creationid="msdx" creationdate="20150505T134507Z">
        <seg>请参阅<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>JDependExtension<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>See <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>MavenPom.withXml()<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> for the relevant API reference documentation.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T062442Z" creationid="95" creationdate="20170416T062442Z">
        <seg>相关的 API 参考文档，请参阅<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>MavenPom.withXml()<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>See <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>MavenPublication<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> for more detailed documentation on how artifacts can be customized.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170412T154858Z" creationid="95" creationdate="20170412T154845Z">
        <seg>关于如何自定义构件的更详细的文档，请参阅<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>MavenPublication<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>See <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>PmdExtension<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T135820Z" creationid="msdx" creationdate="20150505T135820Z">
        <seg>请参阅<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>PmdExtension<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>See <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Project<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150702T105301Z" creationid="haohang" creationdate="20150702T105301Z">
        <seg>请参见 <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Project<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>See <bpt i="0" x="0">&lt;a0&gt;</bpt>Chapter 59, <bpt i="1" x="1">&lt;i1&gt;</bpt>Organizing Build Logic<ept i="1">&lt;/i1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> for more details about the <bpt i="2" x="2">&lt;c2&gt;</bpt>buildSrc<ept i="2">&lt;/c2&gt;</ept> project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T144922Z" creationid="95" creationdate="20160814T144922Z">
        <seg>有关<bpt i="2" x="2">&lt;c2&gt;</bpt>buildSrc<ept i="2">&lt;/c2&gt;</ept> 项目的更详细信息，请参阅 <bpt i="0" x="0">&lt;a0&gt;</bpt>第五十九章， <bpt i="1" x="1">&lt;i1&gt;</bpt>组织构建逻辑<ept i="1">&lt;/i1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>See <bpt i="0" x="0">&lt;a0&gt;</bpt>Section 20.1, “Configuring the build environment via gradle.properties”<ept i="0">&lt;/a0&gt;</ept> for how to manage memory settings for that process.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150525T234908Z" creationid="haohang" creationdate="20150525T234749Z">
        <seg>有关如何管理这一进程的内存设置，请参阅<bpt i="0" x="0">&lt;a0&gt;</bpt>第 20.1 节，“通过 gradle.properties 配置构建环境"的第 20.1 条”<ept i="0">&lt;/a0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>See <bpt i="0" x="0">&lt;a0&gt;</bpt>Section 35.6, “Configuring Sonar Settings from the Command Line”<ept i="0">&lt;/a0&gt;</ept> for more information.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T064406Z" creationid="msdx" creationdate="20150513T064406Z">
        <seg>有关更多信息，请参见<bpt i="0" x="0">&lt;a0&gt;</bpt>第35.6节，“从命令行配置 Sonar 设置”<ept i="0">&lt;/a0&gt;</ept> 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>See <bpt i="0" x="0">&lt;a0&gt;</bpt>Section 50.4.8, “Optional attributes”<ept i="0">&lt;/a0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T110331Z" creationid="95" creationdate="20151006T110331Z">
        <seg>请参阅<bpt i="0" x="0">&lt;a0&gt;</bpt> 第50.4.8 节，“可选属性”<ept i="0">&lt;/a0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>See <bpt i="0" x="0">&lt;a0&gt;</bpt>Section 50.6, “Repositories”<ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T103354Z" creationid="haohang" creationdate="20150801T103354Z">
        <seg>请参阅<bpt i="0" x="0">&lt;a0&gt;</bpt> 50.6 节，“仓库”<ept i="0">&lt;/a0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>See <bpt i="0" x="0">&lt;a0&gt;</bpt>Section 52.6.4.2, “Dependency mapping”<ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151228T153150Z" creationid="95" creationdate="20151228T153150Z">
        <seg>见<bpt i="0" x="0">&lt;a0&gt;</bpt> 52.6.4.2 节，“依赖映射”<ept i="0">&lt;/a0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>See <bpt i="0" x="0">&lt;a0&gt;</bpt>Section 56.1.1.1, “Configuration on demand”<ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T090615Z" creationid="msdx" creationdate="20141120T053647Z">
        <seg>请参阅<bpt i="0" x="0">&lt;a0&gt;</bpt>第 56.1.1.1 节，“按需配置”<ept i="0">&lt;/a0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>See <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>SigningExtension.setRequired()<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept> for more information.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160126T143716Z" creationid="95" creationdate="20160126T143716Z">
        <seg>更多的信息，请参阅<bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>SigningExtension.setRequired()<ept i="2">&lt;/c2&gt;</ept> <ept i="1">&lt;/a1&gt;</ept> 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>See <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>TestLoggingContainer<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept> for how to tune test logging to your preferences.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T015414Z" creationid="Administrator" creationdate="20150428T015414Z">
        <seg>请参阅<bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>TestLoggingContainer<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>，查看如何把你的测试日志打印调整为你的偏好设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>See <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>ResolutionStrategy<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept> for details on how to explicitly choose a particular version.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150721T083450Z" creationid="haohang" creationdate="20150721T083450Z">
        <seg>有关如何显式选择一个特定版本的详细信息，请参阅<bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>ResolutionStrategy<ept i="3">&lt;/c3&gt;</ept> <ept i="2">&lt;/a2&gt;</ept> 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>See <bpt i="2" x="2">&lt;a2&gt;</bpt>Chapter 19, <bpt i="3" x="3">&lt;i3&gt;</bpt>The Gradle Daemon<ept i="3">&lt;/i3&gt;</ept><ept i="2">&lt;/a2&gt;</ept> for more details.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141121T141159Z" creationid="msdx" creationdate="20141121T141159Z">
        <seg>更多详细信息，请参阅<bpt i="2" x="2">&lt;a2&gt;</bpt>第十九章， <bpt i="3" x="3">&lt;i3&gt;</bpt>Gradle 守护进程<ept i="3">&lt;/i3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>See <bpt i="2" x="2">&lt;a2&gt;</bpt>Section 50.8.2.3, “Blacklisting a particular version with a replacement”<ept i="2">&lt;/a2&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T070734Z" creationid="95" creationdate="20151115T055302Z">
        <seg>请参阅<bpt i="2" x="2">&lt;a2&gt;</bpt>50.8.2.3 节，“黑名单替换指定版本”<ept i="2">&lt;/a2&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>See also <bpt i="0" x="0">&lt;a0&gt;</bpt>Chapter 10, <bpt i="1" x="1">&lt;i1&gt;</bpt>Web Application Quickstart<ept i="1">&lt;/i1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T031559Z" creationid="Administrator" creationdate="20150425T031559Z">
        <seg>另请参阅<bpt i="0" x="0">&lt;a0&gt;</bpt>第 10 章， <bpt i="1" x="1">&lt;i1&gt;</bpt>Web 应用程序快速入门<ept i="1">&lt;/i1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>See also <bpt i="0" x="0">&lt;a0&gt;</bpt>Chapter 7, <bpt i="1" x="1">&lt;i1&gt;</bpt>Java Quickstart<ept i="1">&lt;/i1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141126T121041Z" creationid="msdx" creationdate="20141126T121041Z">
        <seg>另请参阅<bpt i="0" x="0">&lt;a0&gt;</bpt>第 7 章， <bpt i="1" x="1">&lt;i1&gt;</bpt>Java 快速入门<ept i="1">&lt;/i1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>See also <bpt i="0" x="0">&lt;a0&gt;</bpt>Chapter 9, <bpt i="1" x="1">&lt;i1&gt;</bpt>Groovy Quickstart<ept i="1">&lt;/i1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141126T121118Z" creationid="msdx" creationdate="20141126T121118Z">
        <seg>另请参阅<bpt i="0" x="0">&lt;a0&gt;</bpt>第9章，<bpt i="1" x="1">&lt;i1&gt;</bpt>Groovy 快速入门<ept i="1">&lt;/i1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>See also <bpt i="1" x="1">&lt;a1&gt;</bpt>Chapter 7, <bpt i="2" x="2">&lt;i2&gt;</bpt>Java Quickstart<ept i="2">&lt;/i2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T034907Z" creationid="Administrator" creationdate="20150425T034907Z">
        <seg>另请参阅<bpt i="1" x="1">&lt;a1&gt;</bpt>第 7 章，<bpt i="2" x="2">&lt;i2&gt;</bpt>Java 快速入门<ept i="2">&lt;/i2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>See also: <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>MavenPluginConvention<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160104T153124Z" creationid="95" creationdate="20160104T153124Z">
        <seg>请参见： <bpt i="2" x="2">&lt;a2&gt;</bpt> <bpt i="3" x="3">&lt;c3&gt;</bpt>MavenPluginConvention<ept i="3">&lt;/c3&gt;</ept> <ept i="2">&lt;/a2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>See examples in <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>DependencyHandler<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150721T090259Z" creationid="haohang" creationdate="20150721T090259Z">
        <seg>请参阅<bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>DependencyHandler<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>中的示例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>See examples in <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>ResolutionStrategy<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150721T091140Z" creationid="haohang" creationdate="20150721T091140Z">
        <seg>请参阅<bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>ResolutionStrategy<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>中的示例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>See the <bpt i="2" x="2">&lt;a2&gt;</bpt>tool chain<ept i="2">&lt;/a2&gt;</ept> section below for more details.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160405T034218Z" creationid="haohang" creationdate="20160405T034218Z">
        <seg>更多的细节请参阅下面的<bpt i="2" x="2">&lt;a2&gt;</bpt>工具链<ept i="2">&lt;/a2&gt;</ept>部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>See the above link for <bpt i="7" x="7">&lt;c7&gt;</bpt>project.container<ept i="7">&lt;/c7&gt;</ept> method variants that allow custom instantiation strategies.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T020805Z" creationid="95" creationdate="20161211T020805Z">
        <seg>请参阅上面的链接，查看<bpt i="7" x="7">&lt;c7&gt;</bpt>project.container<ept i="7">&lt;/c7&gt;</ept> 允许自定义实例化策略的的其他重载方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>See the next section for information on cross-compiling for other operating systems.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T092126Z" creationid="haohang" creationdate="20160408T092126Z">
        <seg>关于其他操作系统的交叉编译的信息，可以参考下一节。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>See their API documentation for further information.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150510T144120Z" creationid="msdx" creationdate="20150510T144120Z">
        <seg>可以查阅它们的API 文档以了解更多信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>See<bpt i="0" x="0">&lt;a0&gt;</bpt>Section 52.6.4.1, “Multiple artifacts per project”<ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T143542Z" creationid="95" creationdate="20160106T143309Z">
        <seg>请参阅<bpt i="0" x="0">&lt;a0&gt;</bpt>第 52.6.4.1 节，“一个项目多个构件”<ept i="0">&lt;/a0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Selecting which build to execute</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163920Z" creationid="msdx" creationdate="20141109T163920Z">
        <seg>选择执行哪个构建</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Sends local announcements to your desktop about interesting events in the build lifecycle.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T034616Z" creationid="Administrator" creationdate="20150425T034616Z">
        <seg>在构建的生命周期中，把本地公告中有关你感兴趣的事件发送到你的桌面。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Separating the storage of downloaded artifacts from the cache metadata permits us to do some very powerful things with our cache that would be difficult with a transparent, file-only cache layout.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T043225Z" creationid="95" creationdate="20151129T043225Z">
        <seg>从下载的构件的存储中分享出缓存的元数据，将允许我们使用缓存做一些非常有用的东西，而如果使用一个透明的只有文件的缓存布局则会很困难。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Set the <bpt i="0" x="0">&lt;c0&gt;</bpt>http.proxyUser<ept i="0">&lt;/c0&gt;</ept> system property to a value like <bpt i="1" x="1">&lt;c1&gt;</bpt><bpt i="2" x="2">&lt;e2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>domain<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/e2&gt;</ept>/<bpt i="4" x="4">&lt;e4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>username<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/e4&gt;</ept><ept i="1">&lt;/c1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141121T142735Z" creationid="msdx" creationdate="20141121T142735Z">
        <seg>将<bpt i="0" x="0">&lt;c0&gt;</bpt>http.proxyUser<ept i="0">&lt;/c0&gt;</ept>系统属性设置为一个这样的值：<bpt i="1" x="1">&lt;c1&gt;</bpt><bpt i="2" x="2">&lt;e2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>域<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/e2&gt;</ept>/<bpt i="4" x="4">&lt;e4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>用户名<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/e4&gt;</ept><ept i="1">&lt;/c1&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Set up enterprise-wide configuration, such as where to find custom plugins.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161214T142527Z" creationid="95" creationdate="20161214T142527Z">
        <seg>设置一些企业范围的配置，比如在何处查找自定义插件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Set up properties based on the current environment, such as a developer's machine vs. a continuous integration server.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161214T142630Z" creationid="95" creationdate="20161214T142630Z">
        <seg>设置基于当前环境的属性，比如开发人员的机器与持续集成服务器的属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Set&lt;Project&gt;</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T061734Z" creationid="haohang" creationdate="20150628T061734Z">
        <seg>Set&lt;Project&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Setting <bpt i="0" x="0">&lt;c0&gt;</bpt>options.fork<ept i="0">&lt;/c0&gt;</ept> to <bpt i="1" x="1">&lt;c1&gt;</bpt>true<ept i="1">&lt;/c1&gt;</ept> causes compilation to occur in a separate process.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T135610Z" creationid="Administrator" creationdate="20150427T135610Z">
        <seg>将<bpt i="0" x="0">&lt;c0&gt;</bpt>options.fork<ept i="0">&lt;/c0&gt;</ept>设置为<bpt i="1" x="1">&lt;c1&gt;</bpt>true<ept i="1">&lt;/c1&gt;</ept>将会使编译出现在一个单独的进程中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Setting <bpt i="0" x="0">&lt;c0&gt;</bpt>options.useAnt<ept i="0">&lt;/c0&gt;</ept> to <bpt i="1" x="1">&lt;c1&gt;</bpt>false<ept i="1">&lt;/c1&gt;</ept> activates Gradle's direct compiler integration, bypassing the Ant task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T135452Z" creationid="Administrator" creationdate="20150427T135452Z">
        <seg>将<bpt i="0" x="0">&lt;c0&gt;</bpt>options.useAnt<ept i="0">&lt;/c0&gt;</ept>设置为<bpt i="1" x="1">&lt;c1&gt;</bpt>false<ept i="1">&lt;/c1&gt;</ept>将绕过 Ant 任务，而激活 Gradle 的直接编译器集成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Setting Custom Sonar Properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065634Z" creationid="95" creationdate="20170416T065634Z">
        <seg>设置自定义的 Sonar 属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Setting Sonar Properties from the Command Line</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065729Z" creationid="95" creationdate="20170416T065729Z">
        <seg>从命令行设置 Sonar 属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Setting a system property of <bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>taskName.single<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept> = <bpt i="2" x="2">&lt;e2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>testNamePattern<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/e2&gt;</ept> will only execute tests that match the specified <bpt i="4" x="4">&lt;e4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>testNamePattern<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/e4&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T035328Z" creationid="Administrator" creationdate="20150428T035328Z">
        <seg>设置一个 <bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>taskName.single<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept> = <bpt i="2" x="2">&lt;e2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>testNamePattern<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/e2&gt;</ept> 的系统属性将会只执行匹配 <bpt i="4" x="4">&lt;e4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>testNamePattern<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/e4&gt;</ept>的那些测试。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Setting it to <bpt i="2" x="2">&lt;c2&gt;</bpt>false<ept i="2">&lt;/c2&gt;</ept> prevents the execution of any of the task's actions.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T055733Z" creationid="msdx" creationdate="20141111T055659Z">
        <seg>将它设置为<bpt i="2" x="2">&lt;c2&gt;</bpt>false<ept i="2">&lt;/c2&gt;</ept>，可以不让这个任务的任何操作执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Setting up a consistent environment for your build is as simple as placing those settings into a <bpt i="0" x="0">&lt;c0&gt;</bpt>gradle.properties<ept i="0">&lt;/c0&gt;</ept> file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141119T153046Z" creationid="msdx" creationdate="20141119T153046Z">
        <seg>在你的构建当中，建立一致的环境，就和把这些配置放进 <bpt i="0" x="0">&lt;c0&gt;</bpt>gradle.properties<ept i="0">&lt;/c0&gt;</ept> 文件一样简单。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Settings file</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070533Z" creationid="95" creationdate="20170416T070533Z">
        <seg>设置文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Setup</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T031148Z" creationid="msdx" creationdate="20141108T031148Z">
        <seg>设置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Several objects in Gradle implement the <bpt i="5" x="5">&lt;c5&gt;</bpt>FileTree<ept i="5">&lt;/c5&gt;</ept> interface, such as <bpt i="6" x="6">&lt;a6&gt;</bpt>source sets<ept i="6">&lt;/a6&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T101621Z" creationid="msdx" creationdate="20141113T101621Z">
        <seg>Gradle 中的几个对象都实现了<bpt i="5" x="5">&lt;c5&gt;</bpt>FileTree<ept i="5">&lt;/c5&gt;</ept>接口，例如<bpt i="6" x="6">&lt;a6&gt;</bpt>source sets<ept i="6">&lt;/a6&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>SharedLibraryBinary</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160219T072251Z" creationid="haohang" creationdate="20160219T072251Z">
        <seg>SharedLibraryBinary</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>She may address the security bug successfully, but she also may have introduced subtle bugs into a codebase that was using a now-deprecated feature from Hibernate.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150716T092929Z" creationid="haohang" creationdate="20150716T092929Z">
        <seg>她可能成功地解决了这个安全 bug，但她也可能有引入一些 bug 到代码库中，因为项目用到了 Hibernate 现在弃用的功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Shortcut notations</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163007Z" creationid="msdx" creationdate="20141109T163007Z">
        <seg>简洁写法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Should you exclude per-dependency or per-configuration?</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T101342Z" creationid="haohang" creationdate="20150801T101342Z">
        <seg>你应排除每个依赖或每个配置吗？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Signatory credentials</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070328Z" creationid="95" creationdate="20170416T070328Z">
        <seg>签名凭证</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Signing POM files</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070344Z" creationid="95" creationdate="20170416T070344Z">
        <seg>签名 POM 文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Similar to a Gradle build script or a Gradle settings file, plugins can be applied on init scripts.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161215T144218Z" creationid="95" creationdate="20161215T144218Z">
        <seg>与Gradle构建脚本类似，插件也可以应用在 init 脚本上。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Similar to a Gradle build script, an init script is a groovy script.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161214T154241Z" creationid="95" creationdate="20161214T154241Z">
        <seg>与Gradle构建脚本类似，init 脚本也是一个groovy 脚本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Similarly property access and method calls within the settings file is delegated to a settings object.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T025947Z" creationid="haohang" creationdate="20160519T025947Z">
        <seg>同样，在设置文件中的属性访问和方法调用也会委托给一个settings 对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Similarly, settings can be specified to target binaries for a component that are of a particular type: eg all <bpt i="0" x="0">&lt;c0&gt;</bpt>shared libraries<ept i="0">&lt;/c0&gt;</ept> for the <bpt i="1" x="1">&lt;c1&gt;</bpt>main library<ept i="1">&lt;/c1&gt;</ept> component.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160324T153021Z" creationid="95" creationdate="20160324T153021Z">
        <seg>同样，也可以为某种特定类型的组件，把设置指向目标二进制文件：例如所有<bpt i="1" x="1">&lt;c1&gt;</bpt>main library<ept i="1">&lt;/c1&gt;</ept>组件的<bpt i="0" x="0">&lt;c0&gt;</bpt>shared libraries<ept i="0">&lt;/c0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Simply use an SLF4J logger.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T130333Z" creationid="msdx" creationdate="20141116T130333Z">
        <seg>只需使用一个 SLF4J 的logger对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Since 1.0-milestone-4 WTP-generating code was refactored into a separate plugin called <bpt i="0" x="0">&lt;c0&gt;</bpt>eclipse-wtp<ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T003105Z" creationid="haohang" creationdate="20150603T003105Z">
        <seg>从 1.0-里程碑-4 开始，WTP-generating 代码被重构为一个单独的插件，叫做<bpt i="0" x="0">&lt;c0&gt;</bpt>eclipse-wtp<ept i="0">&lt;/c0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Since Gradle 1.2 there is also a new programmatic API to access the resolved dependency information.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T033138Z" creationid="haohang" creationdate="20150807T033138Z">
        <seg>从 Gradle 1.2 起，有一个新的编程 API 用于访问解析的依赖信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Since POM generation is performed by a separate task, it is very easy to do so.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T064503Z" creationid="95" creationdate="20170416T064503Z">
        <seg>由于POM的生成是由一个单独的任务执行的，所以这很容易实现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Since descriptor file generation is performed by a separate task, this is very easy to do.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170326T084235Z" creationid="95" creationdate="20170326T084235Z">
        <seg>因为描述符文件的生成是由一个单独的任务执行的，所以这很容易做到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Since the introduction of the implementation described above (early in the Gradle 1.6 release cycle), discussions within the Gradle community have produced superior ideas for exposing the information about changes to task implementors to what is described below.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160815T151715Z" creationid="95" creationdate="20160815T150215Z">
        <seg>从上面所述的实现的引入（早在Gradle 1.6 发布周期） 以来，Gradle社区的讨论中就产生了一些优秀的想法，有关暴露更改的信息到下面所描述的内容的任务实现者。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Since the tooling API is an interface for a programmer most of the documentation lives in the Javadoc.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T155607Z" creationid="95" creationdate="20161218T155607Z">
        <seg>由于tooling API 是一个针对程序员的接口，因此大部分的文档都在Javadoc中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Skipped projects will not be displayed in the Sonar web interface.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T091723Z" creationid="msdx" creationdate="20150512T091723Z">
        <seg>跳过的项目将不会显示在 Sonar 的 web 界面中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Skipping tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150330T141042Z" creationid="Administrator" creationdate="20150330T141042Z">
        <seg>跳过任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Skipping tasks that are up-to-date</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150330T141053Z" creationid="Administrator" creationdate="20150330T141053Z">
        <seg>跳过处于最新状态的任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Snappy up-to-date checks: use native file system change notifications (e.g. via jdk7 nio.2) to preemptively perform up-to-date analysis.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141117T144021Z" creationid="msdx" creationdate="20141117T144021Z">
        <seg>敏捷的 up-to-date 检查：使用本地文件系统修改通知（例如，通过 jdk7 nio.2）预先执行 up-to-date 分析。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>So even if there is some idle daemon waiting for build requests but you happen to run build with a different java home then a brand new daemon will be forked.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141117T153005Z" creationid="msdx" creationdate="20141117T152846Z">
        <seg>所以即使有一些闲置的守护进程等待构建请求，但你碰巧通过不同的 java HOME 运行构建，那么一个全新的守护进程将会被fork。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>So for GCC running on linux, the supported target platforms are 'linux/x86' and 'linux/x86_64'.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T092320Z" creationid="haohang" creationdate="20160408T092159Z">
        <seg>所以对于linux上运行的GCC，支持的目标平台是“linux/x86”和“linux/x86_64”。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>So how does Gradle find the <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Plugin<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> implementation?</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160828T133355Z" creationid="95" creationdate="20160828T132843Z">
        <seg>那么，Gradle是怎么找到 <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Plugin<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> 实现的？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>So if a platform does not define a value for <bpt i="0" x="0">&lt;c0&gt;</bpt>operatingSystem<ept i="0">&lt;/c0&gt;</ept>, Gradle will find the first available tool chain that can build for the specified <bpt i="1" x="1">&lt;c1&gt;</bpt>architecture<ept i="1">&lt;/c1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T091931Z" creationid="haohang" creationdate="20160408T091931Z">
        <seg>所以如果一个平台没有为<bpt i="0" x="0">&lt;c0&gt;</bpt>operatingSystem<ept i="0">&lt;/c0&gt;</ept>定义一个值的话，Gradle 将会找到第一个可以用来构建这个指定<bpt i="1" x="1">&lt;c1&gt;</bpt>architecture<ept i="1">&lt;/c1&gt;</ept>的工具链。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>So if you are interested in WTP integration then only apply the <bpt i="1" x="1">&lt;c1&gt;</bpt>eclipse-wtp<ept i="1">&lt;/c1&gt;</ept> plugin.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T003133Z" creationid="haohang" creationdate="20150603T003133Z">
        <seg>所以如果你对 WTP 集成有兴趣，可以只应用<bpt i="1" x="1">&lt;c1&gt;</bpt>eclipse-wtp<ept i="1">&lt;/c1&gt;</ept>插件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>So in the example above where the publication is named "<bpt i="8" x="8">&lt;c8&gt;</bpt>ivyJava<ept i="8">&lt;/c8&gt;</ept>", the task will be named "<bpt i="9" x="9">&lt;c9&gt;</bpt>generateDescriptorFileForIvyJavaPublication<ept i="9">&lt;/c9&gt;</ept>".</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T143808Z" creationid="95" creationdate="20170330T143808Z">
        <seg>因此，在上面的例子中，发布的名称叫“<bpt i="8" x="8">&lt;c8&gt;</bpt>ivyJava<ept i="8">&lt;/c8&gt;</ept>”，那么这个任务的名称就会是“<bpt i="9" x="9">&lt;c9&gt;</bpt>generateDescriptorFileForIvyJavaPublication<ept i="9">&lt;/c9&gt;</ept>”。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>So in the example below, where the publication is named "<bpt i="5" x="5">&lt;c5&gt;</bpt>mavenCustom<ept i="5">&lt;/c5&gt;</ept>", the task will be named "<bpt i="6" x="6">&lt;c6&gt;</bpt>generatePomFileForMavenCustomPublication<ept i="6">&lt;/c6&gt;</ept>".</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T064752Z" creationid="95" creationdate="20170416T064752Z">
        <seg>所以在下面的例子中，当发布的名称叫“<bpt i="5" x="5">&lt;c5&gt;</bpt>mavenCustom<ept i="5">&lt;/c5&gt;</ept>”，那么这个任务的名称就会是“<bpt i="6" x="6">&lt;c6&gt;</bpt>generatePomFileForMavenCustomPublication<ept i="6">&lt;/c6&gt;</ept>”。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>So in this example a single <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>PublishToMavenRepository<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> task is be added, named '<bpt i="2" x="2">&lt;c2&gt;</bpt>publishMavenJavaPublicationToMavenRepository<ept i="2">&lt;/c2&gt;</ept>'.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T063409Z" creationid="95" creationdate="20170416T063222Z">
        <seg>因此，在下面的例子中，添加了一个 <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>PublishToMavenRepository<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> 任务，名字叫做“<bpt i="2" x="2">&lt;c2&gt;</bpt>publishMavenJavaPublicationToMavenRepository<ept i="2">&lt;/c2&gt;</ept>”。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>So in this example a single <bpt i="5" x="5">&lt;a5&gt;</bpt><bpt i="6" x="6">&lt;c6&gt;</bpt>PublishToIvyRepository<ept i="6">&lt;/c6&gt;</ept><ept i="5">&lt;/a5&gt;</ept> task is be added, named '<bpt i="7" x="7">&lt;c7&gt;</bpt>publishIvyJavaPublicationToIvyRepository<ept i="7">&lt;/c7&gt;</ept>'.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170326T074844Z" creationid="95" creationdate="20170326T074844Z">
        <seg>因此，在下面的例子中，创建了一个 <bpt i="5" x="5">&lt;a5&gt;</bpt><bpt i="6" x="6">&lt;c6&gt;</bpt>PublishToIvyRepository<ept i="6">&lt;/c6&gt;</ept><ept i="5">&lt;/a5&gt;</ept> 任务，名字叫做“<bpt i="7" x="7">&lt;c7&gt;</bpt>publishIvyJavaPublicationToIvyRepository<ept i="7">&lt;/c7&gt;</ept>”。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>So in this example you can see that a single <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>PublishToMavenLocal<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> task is be added, named '<bpt i="2" x="2">&lt;c2&gt;</bpt>publishMavenJavaPublicationToMavenLocal<ept i="2">&lt;/c2&gt;</ept>'.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T064226Z" creationid="95" creationdate="20170416T064130Z">
        <seg>因此在这个例子中，你可以看到添加了一个 <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>PublishToMavenLocal<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> 任务，任务名字叫做“<bpt i="2" x="2">&lt;c2&gt;</bpt>publishMavenJavaPublicationToMavenLocal<ept i="2">&lt;/c2&gt;</ept>”。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>So similar to the changed output file example, <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>all<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> input files are reported to the <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>IncrementalTaskInputs.outOfDate()<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept> action, and no input files are reported to the <bpt i="4" x="4">&lt;a4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>IncrementalTaskInputs.removed()<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/a4&gt;</ept> action:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160817T150749Z" creationid="95" creationdate="20160817T150749Z">
        <seg>所以类似于更改输出文件的例子，<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>所有的<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>输入文件都会被报告到 <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>IncrementalTaskInputs.outOfDate()<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>操作中，并且没有文件会被上报到 <bpt i="4" x="4">&lt;a4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>IncrementalTaskInputs.removed()<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/a4&gt;</ept> 操作：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>So the actual set of artifacts (typically jars) you depend on is the set of artifacts that are associated with the <bpt i="3" x="3">&lt;c3&gt;</bpt>default<ept i="3">&lt;/c3&gt;</ept> configuration of that module.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150730T034437Z" creationid="haohang" creationdate="20150730T034437Z">
        <seg>所以实际上，你依赖的 artifacts 集（通常是一些 jar 包） 是与该模块的 <bpt i="3" x="3">&lt;c3&gt;</bpt>default<ept i="3">&lt;/c3&gt;</ept> 配置相关联的 artifacts 集。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>So you can enter the <bpt i="5" x="5">&lt;c5&gt;</bpt>api<ept i="5">&lt;/c5&gt;</ept> directory and trigger a <bpt i="6" x="6">&lt;s6&gt;</bpt><bpt i="7" x="7">&lt;c7&gt;</bpt>gradle compile<ept i="7">&lt;/c7&gt;</ept><ept i="6">&lt;/s6&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T084202Z" creationid="haohang" creationdate="20160726T084202Z">
        <seg>所以你可以进入<bpt i="5" x="5">&lt;c5&gt;</bpt>api<ept i="5">&lt;/c5&gt;</ept>目录并触发<bpt i="6" x="6">&lt;s6&gt;</bpt><bpt i="7" x="7">&lt;c7&gt;</bpt>gradle compile<ept i="7">&lt;/c7&gt;</ept><ept i="6">&lt;/s6&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>So you can just run <bpt i="0" x="0">&lt;c0&gt;</bpt>gradle build<ept i="0">&lt;/c0&gt;</ept> to build and test all projects.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160727T052848Z" creationid="haohang" creationdate="20160727T052848Z">
        <seg>因此，你可以只执行<bpt i="0" x="0">&lt;c0&gt;</bpt>gradle build<ept i="0">&lt;/c0&gt;</ept> 来构建和测试所有的项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>So, if you're wondering what 'tags' are available in your build script, you can start with the documentation for the <bpt i="2" x="2">&lt;c2&gt;</bpt>Project<ept i="2">&lt;/c2&gt;</ept> interface.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T041135Z" creationid="msdx" creationdate="20141108T041117Z">
        <seg>所以，如果你想知道什么 '标签（tag）' 在构建脚本中可用，您可以去看<bpt i="2" x="2">&lt;c2&gt;</bpt>项目<ept i="2">&lt;/c2&gt;</ept>接口的文档。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Software development plugins</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131554Z" creationid="msdx" creationdate="20150509T131554Z">
        <seg>软件开发插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Some Groovy basics</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T055446Z" creationid="msdx" creationdate="20141109T164906Z">
        <seg>一些 Groovy 基础</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Some advanced, synthetic tests may not be fully compatible with filtering.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T023611Z" creationid="Administrator" creationdate="20150428T023611Z">
        <seg>一些高级的、 综合的测试可能不完全符合过滤条件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Some daemon settings, such as JVM arguments, memory settings or the Java home, can be configured.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141119T030931Z" creationid="msdx" creationdate="20141119T030931Z">
        <seg>可以配置一些守护进程的设置，例如 JVM 参数、 内存设置或Java home目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Some examples of using the command line option:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T024133Z" creationid="Administrator" creationdate="20150428T024133Z">
        <seg>使用命令行选项的一些示例：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Some features that the tooling API provides today:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T152042Z" creationid="95" creationdate="20161218T152042Z">
        <seg>目前这个tooling API提供了以下这些功能：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Some of the most common configuration options are shown below.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T134955Z" creationid="Administrator" creationdate="20150427T134950Z">
        <seg>一些最常见的配置选项如下所示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Some of them Gradle handles now and some will be satisfied in the future releases:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T022647Z" creationid="Administrator" creationdate="20150428T022319Z">
        <seg>以下这些场景中，有一些Gradle现在就可以处理，而有一些则将在未来得到实现：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Some of these patterns are outlined below.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T060324Z" creationid="95" creationdate="20151115T060100Z">
        <seg>下面将概述其中的某些模式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Some other types of things you can pass to <bpt i="0" x="0">&lt;c0&gt;</bpt>files()<ept i="0">&lt;/c0&gt;</ept>:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T160933Z" creationid="msdx" creationdate="20141112T160904Z">
        <seg>你可以向<bpt i="0" x="0">&lt;c0&gt;</bpt>files()<ept i="0">&lt;/c0&gt;</ept>传入一些其他类型的对象：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Some plugins add additional archive tasks to the project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T010158Z" creationid="Administrator" creationdate="20150426T010158Z">
        <seg>某些插件还向项目添加额外的归档任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Some plugins add additional compilation tasks for the source set.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T005936Z" creationid="Administrator" creationdate="20150426T005923Z">
        <seg>某些插件还为源集添加了额外的编译任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Some plugins add additional compilation tasks.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T174800Z" creationid="Administrator" creationdate="20150425T174800Z">
        <seg>一些插件添加了额外的编译任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Some plugins add additional test compilation tasks.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T004545Z" creationid="Administrator" creationdate="20150426T004545Z">
        <seg>一些插件添加了额外的测试编译任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Some plugins add additional verification tasks to the project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T010439Z" creationid="Administrator" creationdate="20150426T010314Z">
        <seg>某些插件还向项目添加额外的核查任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Some plugins, such as the Groovy plugin, add additional Java source files to this collection.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T053234Z" creationid="Administrator" creationdate="20150427T052945Z">
        <seg>有些插件，如Groovy 插件，会从该集合中增加其他的Java源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Some plugins, such as the Groovy plugin, add additional source files to this collection.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T053216Z" creationid="Administrator" creationdate="20150427T053041Z">
        <seg>有些插件，如Groovy 插件，会从该集合中增加其他的源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Some ways of troubleshooting the Gradle daemon:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141118T100318Z" creationid="msdx" creationdate="20141118T100234Z">
        <seg>以下是有关 Gradle 守护进程的故障排除的一些方面：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Somehow Gradle has to find out, whether the project you are into, is a subproject of a multiproject build or not.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T074459Z" creationid="haohang" creationdate="20160519T074459Z">
        <seg>由于一些不明的原因， Gradle 不得不找出，你所进入的项目，它是否为一个多项目构建中的一个子项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Somehow the dependency information has to be mapped to a path.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T134359Z" creationid="95" creationdate="20151006T134359Z">
        <seg>某种程度上依赖信息必须映射到一个路径上。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Something that happens in an observable manner during a build, such as the creation of a zip file or test execution.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161228T144327Z" creationid="95" creationdate="20161228T144327Z">
        <seg>指在一个构建当中，在某种观察方法内发生的内容，比如一个zip文件的创建或者是测试的执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Sometimes a repository will have the POMs published to one location, and the JARs and other artifacts published at another location.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150909T053028Z" creationid="haohang" creationdate="20150909T053028Z">
        <seg>有时候，一个仓库会出现 POM 文件发布在一个地方，而 JAR 文件和其他构件发布在另一个地方。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Sometimes it's useful to publish multiple modules from your Gradle build, without creating a separate Gradle subproject.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170304T032917Z" creationid="95" creationdate="20170304T032917Z">
        <seg>有时候从你的 Gradle 构建中发布多个模块会很有用，而不是创建一个单独的 Gradle 子项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Sometimes we cannot use an existing daemon because it is busy or its java version or jvm arguments are different.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141117T151833Z" creationid="msdx" creationdate="20141117T151833Z">
        <seg>有时我们不能使用现有的守护进程，是因为它正忙或其 java 版本或 jvm 参数不同。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Sometimes you don't want depended on projects to be built when doing a partial build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T085345Z" creationid="haohang" creationdate="20160726T085345Z">
        <seg>有时候，在做局部构建时，你不想依赖的项目也进行构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Sometimes you want the library files of a subset of the configuration dependencies (e.g. of a single dependency).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T034719Z" creationid="haohang" creationdate="20150807T034719Z">
        <seg>有时你想要配置依赖的某个子集（例如单个依赖）的 library 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Sometimes you want to have a task whose behavior depends on a large or infinite number value range of parameters.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T065033Z" creationid="msdx" creationdate="20141111T064239Z">
        <seg>有时你想要有这样一项任务，它的行为依赖于参数数值范围的一个大数或是无限的数字。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Sometimes you want to replace a task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T015826Z" creationid="msdx" creationdate="20141111T015534Z">
        <seg>有时您想要替换一个任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Sonar Properties can also be set from the command line, by setting a system property named exactly like the Sonar property in question.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150525T233644Z" creationid="haohang" creationdate="20150525T233644Z">
        <seg>Sonar 属性也可以从命令行中设置，通过设置一个系统属性，名称就像正在考虑中的 Sonar 属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>SonarAnalyze</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T054216Z" creationid="msdx" creationdate="20150513T054216Z">
        <seg>sonarAnalyze</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>SonarRunner</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T024624Z" creationid="haohang" creationdate="20150525T235020Z">
        <seg>sonarRunner</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Sophisticated builds may use the extensibility of Gradle to apply additional attributes to each platform, which can then be queried to specify particular includes, preprocessor macros or compiler arguments for a native binary.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160405T034011Z" creationid="haohang" creationdate="20160405T034011Z">
        <seg>复杂的构建，可能使用 Gradle 的扩展性来把附加属性应用到每个platform中，然后可以查询为一个本地二进制包含了哪些特别指定的预处理器或者是编译器参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Source and target build must execute with Gradle newer or equal to <bpt i="0" x="0">&lt;c0&gt;</bpt>1.0<ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161228T145634Z" creationid="95" creationdate="20161228T145634Z">
        <seg>源构建和目标构建必须使用Gradle<bpt i="0" x="0">&lt;c0&gt;</bpt>1.0<ept i="0">&lt;/c0&gt;</ept>或以上的版本来执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Source files can be located in the conventional location (<bpt i="4" x="4">&lt;c4&gt;</bpt>src/${component.name}Test/cunit<ept i="4">&lt;/c4&gt;</ept>) or can be configured like any other source set.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160504T145831Z" creationid="95" creationdate="20160504T145831Z">
        <seg>源文件可以位于约定的位置（<bpt i="4" x="4">&lt;c4&gt;</bpt>src/${component.name}Test/cunit<ept i="4">&lt;/c4&gt;</ept>），或者是像其他源集一样配置到别的地方。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Source set properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131933Z" creationid="msdx" creationdate="20150509T131933Z">
        <seg>Source set 属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Source sets</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131631Z" creationid="msdx" creationdate="20150509T131625Z">
        <seg>Source sets</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Specifically, <bpt i="1" x="1">&lt;c1&gt;</bpt>latest.someStatus<ept i="1">&lt;/c1&gt;</ept> will resolve to the highest module version that has status <bpt i="2" x="2">&lt;c2&gt;</bpt>someStatus<ept i="2">&lt;/c2&gt;</ept> or a more mature status.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T013646Z" creationid="95" creationdate="20151129T013646Z">
        <seg>具体而言，<bpt i="1" x="1">&lt;c1&gt;</bpt>latest.someStatus<ept i="1">&lt;/c1&gt;</ept> 将会解析成有着<bpt i="2" x="2">&lt;c2&gt;</bpt>someStatus<ept i="2">&lt;/c2&gt;</ept> 或更成熟状态的最高的模块版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Specifically, <bpt i="8" x="8">&lt;c8&gt;</bpt>destinationDir<ept i="8">&lt;/c8&gt;</ept>, <bpt i="9" x="9">&lt;c9&gt;</bpt>baseName<ept i="9">&lt;/c9&gt;</ept> and <bpt i="10" x="10">&lt;c10&gt;</bpt>version<ept i="10">&lt;/c10&gt;</ept> properties of the archive tasks are preconfigured with defaults.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T071125Z" creationid="Administrator" creationdate="20150425T071125Z">
        <seg>特别是，归档任务的<bpt i="8" x="8">&lt;c8&gt;</bpt>destinationDir<ept i="8">&lt;/c8&gt;</ept>、 <bpt i="9" x="9">&lt;c9&gt;</bpt>baseName<ept i="9">&lt;/c9&gt;</ept>和<bpt i="10" x="10">&lt;c10&gt;</bpt>version<ept i="10">&lt;/c10&gt;</ept>属性被预先配置了默认值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Specifically, the plugin adds a Scala facet and a Scala compiler library that matches the Scala version on the project's class path.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T082242Z" creationid="msdx" creationdate="20150503T082123Z">
        <seg>具体而言，该插件添加了一个 Scala facet 和一个匹配项目的类路径上的 Scala 版本的 Scala 编译器类库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Specifically, the plugin adds a Scala nature and dependency container.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T082041Z" creationid="msdx" creationdate="20150503T082041Z">
        <seg>具体而言，该插件添加一个 Scala 性质和依赖的容器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Specifies the java home for the Gradle build process.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141120T051232Z" creationid="msdx" creationdate="20141120T051201Z">
        <seg>为 Gradle 构建进程指定 java home目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Specifies the jvmargs used for the daemon process.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141120T051948Z" creationid="msdx" creationdate="20141120T051948Z">
        <seg>指定用于该守护进程的 jvmargs。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Specify a file on the command line.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161214T143446Z" creationid="95" creationdate="20161214T143446Z">
        <seg>在命令行上指定一个文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Specifying a set of input files</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150330T141153Z" creationid="Administrator" creationdate="20150330T141153Z">
        <seg>指定一组输入文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Specifying what to sign</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070333Z" creationid="95" creationdate="20170416T070333Z">
        <seg>指定要签名的内容</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Stack Trace Output</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T160930Z" creationid="msdx" creationdate="20141105T160930Z">
        <seg>堆栈跟踪输出</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Standalone project</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T144928Z" creationid="95" creationdate="20160814T144928Z">
        <seg>独立项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Standard Gradle plugins</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131527Z" creationid="msdx" creationdate="20150509T131527Z">
        <seg>标准的 Gradle 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Starting with Gradle 1.10, it is possible to include only specific tests, based on the test name pattern.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T015849Z" creationid="Administrator" creationdate="20150428T015849Z">
        <seg>从Gradle 1.10 开始，可以根据测试的名称模式，只包含指定的测试。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Starting with Gradle 1.5 you can make these substitutions using dependency resolve rules:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T090551Z" creationid="95" creationdate="20151115T090551Z">
        <seg>从 Gradle 1.5 开始，你可以使用依赖解析规则来进行这些替换：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Starts a Jetty instance and deploys the WAR to it.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T150444Z" creationid="msdx" creationdate="20150504T150444Z">
        <seg>启动 Jetty 实例并将部署上 WAR 包。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Starts a Jetty instance and deploys the exploded web application to it.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T150420Z" creationid="msdx" creationdate="20150504T150218Z">
        <seg>启动 Jetty 实例并将部署上 exploded web 应用程序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Starts the application.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150702T105014Z" creationid="haohang" creationdate="20150702T105014Z">
        <seg>启动应用程序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>StaticLibraryBinary</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160219T072300Z" creationid="haohang" creationdate="20160219T072300Z">
        <seg>StaticLibraryBinary</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Stops the Jetty instance.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T150450Z" creationid="msdx" creationdate="20150504T150450Z">
        <seg>停止 Jetty 实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Strategies for transitive dependency management</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070229Z" creationid="95" creationdate="20170416T070229Z">
        <seg>传递依赖管理的策略</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>String</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T044234Z" creationid="msdx" creationdate="20141108T044234Z">
        <seg>String</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>String greeter
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T131407Z" creationid="95" creationdate="20160820T131407Z">
        <seg>String greeter
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>String greeting = <bpt i="0" x="0">&lt;s0&gt;</bpt>'hello from Ant'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141115T153407Z" creationid="msdx" creationdate="20141115T153407Z">
        <seg>String greeting = <bpt i="0" x="0">&lt;s0&gt;</bpt>'hello from Ant'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>String greeting = <bpt i="5" x="5">&lt;s5&gt;</bpt>'hello from GreetingTask'<ept i="5">&lt;/s5&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T151533Z" creationid="95" creationdate="20160814T151533Z">
        <seg>String greeting = <bpt i="5" x="5">&lt;s5&gt;</bpt>'hello from GreetingTask'<ept i="5">&lt;/s5&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>String message</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T131405Z" creationid="95" creationdate="20160820T131405Z">
        <seg>String message</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Structure your build</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141101T124603Z" creationid="msdx" creationdate="20141101T124603Z">
        <seg>构建结构化</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Subproject configuration</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070557Z" creationid="95" creationdate="20170416T070557Z">
        <seg>子项目配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Subsequent invocations of the gradle command will reuse the daemon, avoiding the startup costs.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141117T151722Z" creationid="msdx" creationdate="20141117T151722Z">
        <seg>Gradle 命令的后续调用将重用该守护进程，以避免启动开销。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Subversion preserves this file permission.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T040908Z" creationid="95" creationdate="20161218T040908Z">
        <seg>Subversion 会保留此文件的权限。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Such a build is always executed as:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T075311Z" creationid="haohang" creationdate="20160519T075311Z">
        <seg>这样的构建总是这样执行:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Such a conversion is possible if in the Gradle exclude rule the group as well as the module name is specified (as Maven needs both in contrast to Ivy).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T145637Z" creationid="95" creationdate="20160106T145637Z">
        <seg>如果 Gradle 排除规则中group和module名字被指定的话（相比于Ivy，Maven对这两个都需要），这种转换是可能的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Such a library dependency can be easily provided to source set associated with the <bpt i="0" x="0">&lt;c0&gt;</bpt>executable<ept i="0">&lt;/c0&gt;</ept> component:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160325T032843Z" creationid="haohang" creationdate="20160325T032843Z">
        <seg>这样的库依赖可以很方便地提供给source set关联上<bpt i="0" x="0">&lt;c0&gt;</bpt>executable<ept i="0">&lt;/c0&gt;</ept>组件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Such a task might be nicer to configure than an Ant task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T123934Z" creationid="msdx" creationdate="20141111T123934Z">
        <seg>这样的一个任务可能会比一个 Ant 任务更好配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Such and other dependency patterns are daily bread in the problem space of multi-project builds.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T082817Z" creationid="haohang" creationdate="20160726T082817Z">
        <seg>在多项目构建中，这样或其他的依赖模式是很常见的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Such enhanced tasks are either provided by you or are provided by Gradle.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T160753Z" creationid="msdx" creationdate="20141109T160753Z">
        <seg>这种增强的任务可以由你提供，或由 Gradle 提供。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Such features include:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T090515Z" creationid="haohang" creationdate="20160726T090515Z">
        <seg>这些功能包括︰</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Such reports are another feature of dependency management.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150721T092503Z" creationid="haohang" creationdate="20150721T092503Z">
        <seg>这些报告是依赖管理的另一个功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Summary</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163734Z" creationid="msdx" creationdate="20141109T163734Z">
        <seg>总结</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Superceeded by the <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>sonar-runner<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept> plugin.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T035824Z" creationid="Administrator" creationdate="20150425T035824Z">
        <seg>由 <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>sonar-runner<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>插件取代。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Supersedes the <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>sonar<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept> plugin.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T040439Z" creationid="Administrator" creationdate="20150425T040439Z">
        <seg>由 <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>sonar<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>插件取代。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Supplied values are validated early in publication.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T033025Z" creationid="95" creationdate="20170416T033025Z">
        <seg>这些提供的值会在发布之前进行验证。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Supply personal information about the user that is required by the build, such as repository or database authentication credentials.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161214T142737Z" creationid="95" creationdate="20161214T142733Z">
        <seg>提供构建所需要的有关用户的个人信息，比如仓库或数据库身份验证凭据。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Support for additional test frameworks.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160504T151839Z" creationid="95" creationdate="20160504T151839Z">
        <seg>支持另外的测试框架。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Supports TestNG runner</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T093804Z" creationid="haohang" creationdate="20150707T093804Z">
        <seg>支持 TestNG runner</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Supports both single module and multimodule projects</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T093350Z" creationid="haohang" creationdate="20150707T093350Z">
        <seg>支持单个模块和多模块项目</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Supports custom module names (that differ from directory names)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T093414Z" creationid="haohang" creationdate="20150707T093414Z">
        <seg>支持自定义模块名称 （即目录名称有所不同）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Supports packaging of sources and tests</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T093757Z" creationid="haohang" creationdate="20150707T093757Z">
        <seg>支持打包源代码和测试代码</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Supports packaging war projects as jars if needed</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T093553Z" creationid="haohang" creationdate="20150707T093543Z">
        <seg>如果需要，支持把 war 项目打包为 jar 包</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Sync</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150701T030916Z" creationid="haohang" creationdate="20150701T030916Z">
        <seg>Sync</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>TBD</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150526T063855Z" creationid="haohang" creationdate="20150526T004453Z">
        <seg>待决定</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>TODO: which url, configure port, uses source files in place and can edit your files and reload.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T095645Z" creationid="msdx" creationdate="20141030T095036Z">
        <seg>待添加：哪个URL，配置端口，使用源文件的 地方，可编辑你的文件，以及重新加载。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Tab completion in a CLI</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141117T141831Z" creationid="msdx" creationdate="20141117T141831Z">
        <seg>在 CLI 中的 tab 键完成</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table <bpt i="0" x="0">&lt;a0&gt;</bpt>Table 23.5, “Java plugin - dependency configurations”<ept i="0">&lt;/a0&gt;</ept> shows the configurations added by the Java plugin.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151221T141752Z" creationid="95" creationdate="20151221T141655Z">
        <seg>表<bpt i="0" x="0">&lt;a0&gt;</bpt>表 23.5，“Java 插件 - 依赖配置”<ept i="0">&lt;/a0&gt;</ept>显示了 Java 插件添加的配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table of Contents</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T161834Z" creationid="msdx" creationdate="20141109T161824Z">
        <seg>目录</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 13.1. Project Properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T044137Z" creationid="msdx" creationdate="20141108T044137Z">
        <seg>表 13.1. Project属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 16.1. Archive tasks - naming properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T155258Z" creationid="msdx" creationdate="20141113T155258Z">
        <seg>表 16.1. 归档任务-命名属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 18.1. Log levels</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T064130Z" creationid="msdx" creationdate="20141116T064130Z">
        <seg>表 18.1. 日志级别</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 18.2. Log level command-line options</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T071012Z" creationid="msdx" creationdate="20141116T071012Z">
        <seg>表 18.2. 日志级别的命令行选项</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 18.3. Stacktrace command-line options</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T071031Z" creationid="msdx" creationdate="20141116T071031Z">
        <seg>表 18.3. 栈跟踪的命令行选项</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 22.1. Language plugins</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141126T120756Z" creationid="msdx" creationdate="20141126T120756Z">
        <seg>表 22.1. 语言插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 22.2. Language plugins</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141209T073740Z" creationid="msdx" creationdate="20141209T073740Z">
        <seg>表 22.2. 语言插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 22.3. Integration plugins</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T030753Z" creationid="Administrator" creationdate="20150425T030753Z">
        <seg>表 22.3. 集成插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 22.4. Incubating integration plugins</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T031737Z" creationid="Administrator" creationdate="20150425T031737Z">
        <seg>表 22.4. 孵化中的集成插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 22.5. Software development plugins</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T032423Z" creationid="Administrator" creationdate="20150425T032423Z">
        <seg>表 22.5. 软件开发插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 22.6. Software development plugins</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T035844Z" creationid="Administrator" creationdate="20150425T035844Z">
        <seg>表 22.6. 软件开发插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 22.7. Base plugins</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T041005Z" creationid="Administrator" creationdate="20150425T041005Z">
        <seg>表 22.7. 基本插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 23.1. Java plugin - tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T174036Z" creationid="Administrator" creationdate="20150425T174036Z">
        <seg>表 23.1. Java 插件-任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 23.10. Java plugin - Javadoc properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T133951Z" creationid="Administrator" creationdate="20150427T133951Z">
        <seg>表 23.10. Java 插件 - Javadoc 属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 23.11. Java plugin - Clean properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T134436Z" creationid="Administrator" creationdate="20150427T134436Z">
        <seg>表 23.11. Java 插件 - Clean 性能</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 23.12. Java plugin - ProcessResources properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T134714Z" creationid="Administrator" creationdate="20150427T134714Z">
        <seg>表 23.12. Java 插件-ProcessResources 属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 23.13. Java plugin - Compile properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T135008Z" creationid="Administrator" creationdate="20150427T135008Z">
        <seg>表 23.13. Java 插件- Compile属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 23.14. Java plugin - test properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T144354Z" creationid="msdx" creationdate="20150428T144354Z">
        <seg>表 23.14. Java 插件 - test属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 23.2. Java plugin - source set tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T005713Z" creationid="Administrator" creationdate="20150426T005713Z">
        <seg>表 23.2. Java 插件-源集任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 23.3. Java plugin - lifecycle tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T010037Z" creationid="Administrator" creationdate="20150426T010037Z">
        <seg>表 23.3. Java 插件-生命周期任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 23.4. Java plugin - default project layout</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T083237Z" creationid="Administrator" creationdate="20150426T083237Z">
        <seg>表 23.4. Java 插件-默认项目布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 23.5. Java plugin - dependency configurations</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T084055Z" creationid="Administrator" creationdate="20150426T084055Z">
        <seg>表23.5. Java插件 ​​- 依赖配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 23.6. Java plugin - source set dependency configurations</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T084805Z" creationid="Administrator" creationdate="20150426T084805Z">
        <seg>表23.6. Java插件 ​​- 源集依赖配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 23.7. Java plugin - directory properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T085725Z" creationid="Administrator" creationdate="20150426T085725Z">
        <seg>表23.7. Java插件 ​​- 目录属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 23.8. Java plugin - other properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T045707Z" creationid="Administrator" creationdate="20150427T045707Z">
        <seg>表 23.8. Java 插件 - 其他属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 23.9. Java plugin - source set properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T051240Z" creationid="Administrator" creationdate="20150427T051240Z">
        <seg>表 23.9. Java 插件 - 源集属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 24.1. Groovy plugin - tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T071350Z" creationid="msdx" creationdate="20150429T071350Z">
        <seg>表 24.1. Groovy 插件 - 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 24.2. Groovy plugin - additional task dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T071628Z" creationid="msdx" creationdate="20150429T071628Z">
        <seg>表 24.2. Groovy 插件 - 额外的task 依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 24.3. Groovy plugin - project layout</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T071822Z" creationid="msdx" creationdate="20150429T071822Z">
        <seg>表 24.3. Groovy 插件 - 项目布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 24.4. Groovy plugin - source set properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T093045Z" creationid="msdx" creationdate="20150429T093045Z">
        <seg>表 24.4. Groovy 插件 - source set 属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 24.5. Groovy plugin - source set properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T094027Z" creationid="msdx" creationdate="20150429T094027Z">
        <seg>表 24.5. Groovy 的插件 - source set 属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 24.6. Groovy plugin - GroovyCompile properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T094540Z" creationid="msdx" creationdate="20150429T094507Z">
        <seg>表 24.6. Groovy 插件 - GroovyCompile 属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 25.1. Scala plugin - tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T145445Z" creationid="msdx" creationdate="20150429T145445Z">
        <seg>表 25.1. Scala 插件 - 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 25.2. Scala plugin - additional task dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T152428Z" creationid="msdx" creationdate="20150429T152428Z">
        <seg>表 24.2. Scala感觉 插件 - 额外的task 依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 25.3. Scala plugin - project layout</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T152604Z" creationid="msdx" creationdate="20150429T152604Z">
        <seg>表 25.3. Scala 插件 - 项目布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 25.4. Scala plugin - source set properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150430T154754Z" creationid="msdx" creationdate="20150430T154754Z">
        <seg>表 25.4. Scala 插件 - source set 属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 25.5. Scala plugin - source set properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150430T154937Z" creationid="msdx" creationdate="20150430T154937Z">
        <seg>表 25.5. Scala 插件 - source set 属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 26.1. War plugin - tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T085928Z" creationid="msdx" creationdate="20150503T085928Z">
        <seg>表 26.1. War 插件 - 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 26.2. War plugin - additional task dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T090028Z" creationid="msdx" creationdate="20150503T090028Z">
        <seg>表 26.2. War 插件 - 额外的task 依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 26.3. War plugin - project layout</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T090126Z" creationid="msdx" creationdate="20150503T090126Z">
        <seg>表 26.3. War 插件 - 项目布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 26.4. War plugin - directory properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T092124Z" creationid="msdx" creationdate="20150503T092124Z">
        <seg>表26.4. War插件 ​​- 目录属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 27.1. Ear plugin - tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T094520Z" creationid="msdx" creationdate="20150503T094520Z">
        <seg>表 27.1. Ear 插件 - tasks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 27.2. Ear plugin - additional task dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T095209Z" creationid="msdx" creationdate="20150503T095209Z">
        <seg>表 27.2. Ear 插件 - 额外的task 依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 27.3. Ear plugin - project layout</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T095224Z" creationid="msdx" creationdate="20150503T095224Z">
        <seg>表 27.3. Ear 插件 - 项目布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 27.4. Ear plugin - directory properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T141340Z" creationid="msdx" creationdate="20150504T141340Z">
        <seg>表27.4. Ear插件 ​​- 目录属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 28.1. Jetty plugin - tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T150213Z" creationid="msdx" creationdate="20150504T150213Z">
        <seg>表 28.1. Jetty 插件 - 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 28.2. Jetty plugin - properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T151015Z" creationid="msdx" creationdate="20150504T151015Z">
        <seg>表 28.2. Jetty插件 - 属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 29.1. Checkstyle plugin - tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T024659Z" creationid="msdx" creationdate="20150505T024659Z">
        <seg>表 29.1. Checkstyle 插件 - tasks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 29.2. Checkstyle plugin - additional task dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T132521Z" creationid="msdx" creationdate="20150505T132521Z">
        <seg>表 29.2. Checkstyle 插件 - 额外的task 依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 29.3. Checkstyle plugin - project layout</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T132634Z" creationid="msdx" creationdate="20150505T132634Z">
        <seg>表 29.3. Checkstyle 插件 - 项目布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 29.4. Checkstyle plugin - dependency configurations</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T132739Z" creationid="msdx" creationdate="20150505T132739Z">
        <seg>表29.4. Checkstyle 插件 ​​- 依赖配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 30.1. CodeNarc plugin - tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T133149Z" creationid="msdx" creationdate="20150505T133149Z">
        <seg>表 30.1. CodeNarc 插件 - 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 30.2. CodeNarc plugin - additional task dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T133350Z" creationid="msdx" creationdate="20150505T133350Z">
        <seg>表 30.2. CodeNarc 插件 - 附加的任务依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 30.3. CodeNarc plugin - project layout</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T133419Z" creationid="msdx" creationdate="20150505T133419Z">
        <seg>表 30.3. CodeNarc 插件 - 项目布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 30.4. CodeNarc plugin - dependency configurations</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T135832Z" creationid="msdx" creationdate="20150505T133501Z">
        <seg>表30.4. CodeNarc 插件 ​​- 依赖配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 31.1. FindBugs plugin - tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T133645Z" creationid="msdx" creationdate="20150505T133645Z">
        <seg>表 31.1. FindBugs 插件 - 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 31.2. FindBugs plugin - additional task dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T133753Z" creationid="msdx" creationdate="20150505T133753Z">
        <seg>表 31.2. FindBugs 插件 - 附加的任务依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 31.3. FindBugs plugin - dependency configurations</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T133843Z" creationid="msdx" creationdate="20150505T133843Z">
        <seg>表31.3. FindBugs 插件 ​​- 依赖配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 32.1. JDepend plugin - tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T134228Z" creationid="msdx" creationdate="20150505T134228Z">
        <seg>表 32.1. JDepend 插件 - 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 32.2. JDepend plugin - additional task dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T134423Z" creationid="msdx" creationdate="20150505T134423Z">
        <seg>表 32.2. JDepend 插件 - 附加的任务依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 32.3. JDepend plugin - dependency configurations</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T134451Z" creationid="msdx" creationdate="20150505T134451Z">
        <seg>表32.3. JDepend 插件 ​​- 依赖配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 33.1. PMD plugin - tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T135542Z" creationid="msdx" creationdate="20150505T135542Z">
        <seg>表 33.1. PMD 插件 - 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 33.2. PMD plugin - additional task dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T135629Z" creationid="msdx" creationdate="20150505T135629Z">
        <seg>表 33.2. PMD 插件 - 附加的任务依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 33.3. PMD plugin - dependency configurations</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T135712Z" creationid="msdx" creationdate="20150505T135712Z">
        <seg>表33.3. PMD 插件 ​​- 依赖配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 34.1. Gradle defaults for JaCoCo properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T131612Z" creationid="msdx" creationdate="20150506T131612Z">
        <seg>表 34.1. JaCoCo 属性的 Gradle 默认值</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 34.2. Default values of the JaCoCo Task extension</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T132305Z" creationid="msdx" creationdate="20150506T132305Z">
        <seg>表 34.2. JaCoCo 任务扩展的默认值</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 34.3. JaCoCo plugin - tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T135917Z" creationid="msdx" creationdate="20150506T135917Z">
        <seg>表 34.3. JaCoCo 插件 - 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 34.4. JaCoCo plugin - dependency configurations</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T135959Z" creationid="msdx" creationdate="20150506T135959Z">
        <seg>表34.4. JaCoCo 插件 ​​- 依赖配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 35.1. Sonar plugin - tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T054212Z" creationid="msdx" creationdate="20150513T054212Z">
        <seg>表 35.1. 声纳插件 - 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 36.1. Gradle defaults for standard Sonar properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T065245Z" creationid="msdx" creationdate="20150513T065245Z">
        <seg>表 36.1. 标准 Sonar 属性的 Gradle 默认值</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 36.2. Additional defaults when <bpt i="0" x="0">&lt;c0&gt;</bpt>java-base<ept i="0">&lt;/c0&gt;</ept> plugin is applied</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T065355Z" creationid="msdx" creationdate="20150513T065252Z">
        <seg>表 36.2. 配置使用 <bpt i="0" x="0">&lt;c0&gt;</bpt>java-base<ept i="0">&lt;/c0&gt;</ept> 插件时另外添加的默认值</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 36.3. Additional defaults when <bpt i="0" x="0">&lt;c0&gt;</bpt>java<ept i="0">&lt;/c0&gt;</ept> plugin is applied</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T065415Z" creationid="msdx" creationdate="20150513T065415Z">
        <seg>表 36.2. 配置使用 <bpt i="0" x="0">&lt;c0&gt;</bpt>java<ept i="0">&lt;/c0&gt;</ept> 插件时另外添加的默认值</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 36.4. Sonar Runner plugin - tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150525T235013Z" creationid="haohang" creationdate="20150525T234954Z">
        <seg>表 36.4. Sonnar Runner 插件 - 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 37.1. OSGi methods</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150526T004643Z" creationid="haohang" creationdate="20150526T004643Z">
        <seg>表 37.1. OSGi 方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 38.1. Eclipse plugin behavior</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T003545Z" creationid="haohang" creationdate="20150603T003545Z">
        <seg>表 38.1. Eclipse 插件行为</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 38.2. Eclipse plugin - tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T004335Z" creationid="haohang" creationdate="20150603T004335Z">
        <seg>表 38.2. Eclipse 插件 - 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 38.3. Configuration of the Eclipse plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T004626Z" creationid="haohang" creationdate="20150603T004626Z">
        <seg>表 38.3. Eclipse 插件的配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 38.4. Advanced configuration hooks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T105207Z" creationid="haohang" creationdate="20150624T105207Z">
        <seg>表 38.4. 高级的配置hook</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 39.1. IDEA plugin behavior</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T071426Z" creationid="haohang" creationdate="20150625T071426Z">
        <seg>表 39.1. IDEA插件行为</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 39.2. IDEA plugin - Tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T072236Z" creationid="haohang" creationdate="20150625T072236Z">
        <seg>表 39.2. IDEA插件 - 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 39.3. Configuration of the idea plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T072630Z" creationid="haohang" creationdate="20150625T072630Z">
        <seg>表 39.3. idea 插件的配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 39.4. Idea plugin hooks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T073719Z" creationid="haohang" creationdate="20150625T073719Z">
        <seg>表 39.4. Idea 插件 hook</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 40.1. ANTLR plugin - tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T094927Z" creationid="haohang" creationdate="20150625T094927Z">
        <seg>表 40.1. ANTLR 插件 - 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 40.2. ANTLR plugin - additional task dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T095113Z" creationid="haohang" creationdate="20150625T095113Z">
        <seg>表 40.2. ANTLR 插件 - 附加的任务依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 40.3. ANTLR plugin - project layout</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T095131Z" creationid="haohang" creationdate="20150625T095131Z">
        <seg>表 40.3. ANTLR 插件 - 项目布局</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 40.4. ANTLR plugin - source set properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T102736Z" creationid="haohang" creationdate="20150625T102736Z">
        <seg>表 40.4. ANTLR 插件 - source set 属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 41.1. Project report plugin - tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T061122Z" creationid="haohang" creationdate="20150628T061122Z">
        <seg>表 41.1. 项目报告插件 - 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 41.2. Project report plugin - convention properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T061714Z" creationid="haohang" creationdate="20150628T061714Z">
        <seg>表 41.2. 项目报告插件 - 约定属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 42.1. Announce Plugin Notification Services</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T065222Z" creationid="haohang" creationdate="20150628T065222Z">
        <seg>表 42.1. Announce 插件通知服务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 44.1. Distribution plugin - tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150701T030817Z" creationid="haohang" creationdate="20150701T030817Z">
        <seg>表 44.1. 分发插件 - 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 44.2. Multiple distributions - tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150701T031216Z" creationid="haohang" creationdate="20150701T031216Z">
        <seg>表 44.2. 多分发 - 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 45.1. Application plugin - tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150702T104951Z" creationid="haohang" creationdate="20150702T104951Z">
        <seg>表 45.1. 应用程序插件 - 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 46.1. Java library distribution plugin - tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T070332Z" creationid="haohang" creationdate="20150707T070332Z">
        <seg>表 46.1. Java 库分发插件 - 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 47.1. Build Init plugin - tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T073646Z" creationid="haohang" creationdate="20150707T071543Z">
        <seg>表 47.1.  Build Init 插件 - 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 48.1. Wrapper plugin - tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150710T012927Z" creationid="haohang" creationdate="20150710T012927Z">
        <seg>表 48.1. Wrapper 插件 - 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 49.1. Build Dashboard plugin - tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150713T100309Z" creationid="haohang" creationdate="20150713T100309Z">
        <seg>表 49.1. Build Dashboard 插件 - 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 50.1. Dependency types</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T080038Z" creationid="haohang" creationdate="20150722T080038Z">
        <seg>表 50.1. 依赖类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 50.2. Repository types</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T094108Z" creationid="haohang" creationdate="20150807T094108Z">
        <seg>表 50.2. 仓库类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 52.1. Maven plugin - tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151228T151924Z" creationid="95" creationdate="20151228T151924Z">
        <seg>表 52.1. Maven 插件 - 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 52.2. Maven plugin - properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151228T152515Z" creationid="95" creationdate="20151228T152515Z">
        <seg>表 52.2. Maven 插件 - 属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 52.3. Protocol jars for Maven deployment</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160104T154653Z" creationid="95" creationdate="20160104T154653Z">
        <seg>表 52.3. Maven 部署的协议 jars</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 52.4. Configuration elements of the MavenDeployer</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T134937Z" creationid="95" creationdate="20160105T134937Z">
        <seg>表 52.4. 配置 MavenDeployer 的元素</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 52.5. Default Values for Maven POM generation</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T144028Z" creationid="95" creationdate="20160105T144028Z">
        <seg>表 52.5. Maven POM 生成的默认值</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 64.1. Software Components</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170211T140454Z" creationid="95" creationdate="20170211T140454Z">
        <seg>表64.1. 软件组件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Table 65.1. Software Components</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170412T154324Z" creationid="95" creationdate="20170412T154324Z">
        <seg>表65.1. 软件组件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Take a look at <bpt i="0" x="0">&lt;a0&gt;</bpt>Chapter 51, <bpt i="1" x="1">&lt;i1&gt;</bpt>Publishing artifacts<ept i="1">&lt;/i1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> for more information on how to configure and add artifacts.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170109T130229Z" creationid="95" creationdate="20170109T130229Z">
        <seg>关于如何配置及添加构件，可以查阅 <bpt i="0" x="0">&lt;a0&gt;</bpt>第五十一章，<bpt i="1" x="1">&lt;i1&gt;</bpt>发布构件<ept i="1">&lt;/i1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Take a look at the 'visual-studio' sample, or see <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>VisualStudioExtension.getProjects()<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept> and <bpt i="3" x="3">&lt;a3&gt;</bpt><bpt i="4" x="4">&lt;c4&gt;</bpt>VisualStudioExtension.getSolutions()<ept i="4">&lt;/c4&gt;</ept><ept i="3">&lt;/a3&gt;</ept> for more details.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T095630Z" creationid="haohang" creationdate="20160408T095630Z">
        <seg>更详细的信息，可以参考“visual-studio”例子，或者参阅 <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>VisualStudioExtension.getProjects()<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept> 及 <bpt i="3" x="3">&lt;a3&gt;</bpt><bpt i="4" x="4">&lt;c4&gt;</bpt>VisualStudioExtension.getSolutions()<ept i="4">&lt;/c4&gt;</ept><ept i="3">&lt;/a3&gt;</ept> 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Tar</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150701T030853Z" creationid="haohang" creationdate="20150701T030853Z">
        <seg>Tar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Task</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T161048Z" creationid="msdx" creationdate="20141112T161048Z">
        <seg>Task</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Task Property</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T133959Z" creationid="Administrator" creationdate="20150427T133959Z">
        <seg>任务属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Task Tree</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T031112Z" creationid="msdx" creationdate="20141108T031112Z">
        <seg>任务树</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Task dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162450Z" creationid="msdx" creationdate="20141109T162450Z">
        <seg>任务依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Task dependencies are fully supported and parallel workers will start executing upstream tasks first.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T091831Z" creationid="haohang" creationdate="20160726T091424Z">
        <seg>完全支持任务依赖，并且平行的workers将会首先开始执行上游的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Task name</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T174040Z" creationid="Administrator" creationdate="20150425T174040Z">
        <seg>任务名称</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Task name abbreviation</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163903Z" creationid="msdx" creationdate="20141109T163903Z">
        <seg>任务名称缩写</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Task names can refer to tasks in the same project as the task, or to tasks in other projects.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T121717Z" creationid="msdx" creationdate="20141110T101233Z">
        <seg>任务的名称可以指向同一个项目中的任务，或者其他项目中的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Task ordering can be useful in a number of scenarios:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T143507Z" creationid="msdx" creationdate="20141110T143451Z">
        <seg>任务排序在许多情况下可能很有用：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Task ordering is an <bpt i="0" x="0">&lt;a0&gt;</bpt>incubating<ept i="0">&lt;/a0&gt;</ept> feature.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T131116Z" creationid="msdx" creationdate="20141110T131116Z">
        <seg>任务排序还是一个<bpt i="0" x="0">&lt;a0&gt;</bpt>孵化中<ept i="0">&lt;/a0&gt;</ept>的功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Task requested via task path from the command line (or Tooling API) causes the relevant project configured.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160522T124854Z" creationid="95" creationdate="20160522T124854Z">
        <seg>通过从命令行 （或Tooling API）任务路径所请求的任务会导致相关的项目被配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Task rules</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150330T141057Z" creationid="Administrator" creationdate="20150330T141057Z">
        <seg>任务规则</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>TaskActionListener</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T155225Z" creationid="msdx" creationdate="20141116T155225Z">
        <seg>TaskActionListener</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>TaskExecutionGraphListener</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T155221Z" creationid="msdx" creationdate="20141116T155221Z">
        <seg>TaskExecutionGraphListener</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>TaskExecutionListener</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T155222Z" creationid="msdx" creationdate="20141116T155222Z">
        <seg>TaskExecutionListener</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>TaskOutputs</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T161108Z" creationid="msdx" creationdate="20141112T161108Z">
        <seg>TaskOutputs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>TaskReportTask</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T061528Z" creationid="haohang" creationdate="20150628T061528Z">
        <seg>TaskReportTask</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065428Z" creationid="msdx" creationdate="20150509T131635Z">
        <seg>任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Tasks are also available through the <bpt i="0" x="0">&lt;c0&gt;</bpt>tasks<ept i="0">&lt;/c0&gt;</ept> collection.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T081052Z" creationid="msdx" creationdate="20141110T081020Z">
        <seg>任务也可以通过<bpt i="0" x="0">&lt;c0&gt;</bpt>tasks<ept i="0">&lt;/c0&gt;</ept>集合来访问。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Tasks are simply POGOs, and when you declare a task, you can set the properties or call methods on the task object.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T151449Z" creationid="95" creationdate="20160814T151449Z">
        <seg>任务是简单的POGOs，当你声明一个任务时，你可以在这个任务对象上设置属性或者是调用方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Tasks that do this are the <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Tar<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>, <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>Zip<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>, <bpt i="4" x="4">&lt;a4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>Jar<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/a4&gt;</ept>, <bpt i="6" x="6">&lt;a6&gt;</bpt><bpt i="7" x="7">&lt;c7&gt;</bpt>War<ept i="7">&lt;/c7&gt;</ept><ept i="6">&lt;/a6&gt;</ept> and <bpt i="8" x="8">&lt;a8&gt;</bpt><bpt i="9" x="9">&lt;c9&gt;</bpt>Ear<ept i="9">&lt;/c9&gt;</ept><ept i="8">&lt;/a8&gt;</ept> tasks.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160126T141024Z" creationid="95" creationdate="20160126T140910Z">
        <seg>这样的任务有 <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Tar<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>， <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>Zip<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>， <bpt i="4" x="4">&lt;a4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>Jar<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/a4&gt;</ept>， <bpt i="6" x="6">&lt;a6&gt;</bpt><bpt i="7" x="7">&lt;c7&gt;</bpt>War<ept i="7">&lt;/c7&gt;</ept><ept i="6">&lt;/a6&gt;</ept> 及 <bpt i="8" x="8">&lt;a8&gt;</bpt><bpt i="9" x="9">&lt;c9&gt;</bpt>Ear<ept i="9">&lt;/c9&gt;</ept><ept i="8">&lt;/a8&gt;</ept>任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Test</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083218Z" creationid="msdx" creationdate="20150428T083218Z">
        <seg>Test</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Test ANTLR grammar files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T095149Z" creationid="haohang" creationdate="20150625T095149Z">
        <seg>测试 ANTLR 语法文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Test Groovy sources.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T075137Z" creationid="msdx" creationdate="20150429T075137Z">
        <seg>Test Groovy 源代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Test Java source</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T083439Z" creationid="Administrator" creationdate="20150426T083439Z">
        <seg>Java 测试源代码</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Test Scala sources.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T152632Z" creationid="msdx" creationdate="20150429T152632Z">
        <seg>Test Scala 源代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Test always executes every test that it detects.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T015031Z" creationid="Administrator" creationdate="20150428T015031Z">
        <seg>test 会始终执行它检测到的每一个测试。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Test filtering feature has following characteristic:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T022846Z" creationid="Administrator" creationdate="20150428T022846Z">
        <seg>测试过滤功能具有以下的特征：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Test filtering supersedes the file-based test selection.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T023827Z" creationid="Administrator" creationdate="20150428T023827Z">
        <seg>测试过滤将会取代基于文件的测试选择。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Test resources</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T083443Z" creationid="Administrator" creationdate="20150426T083443Z">
        <seg>测试资源</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>TestNG supports <bpt i="0" x="0">&lt;a0&gt;</bpt>parameterizing test methods<ept i="0">&lt;/a0&gt;</ept>, allowing a particular test method to be executed multiple times with different inputs.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T143932Z" creationid="msdx" creationdate="20150428T143845Z">
        <seg>TestNG 支持<bpt i="0" x="0">&lt;a0&gt;</bpt>参数化测试方法<ept i="0">&lt;/a0&gt;</ept>，允许一个特定的测试方法使用不同的输入执行多次。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Tests are executed in a separate JVM, isolated from the main build process.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T140546Z" creationid="Administrator" creationdate="20150427T140546Z">
        <seg>测试在单独的 JVM中执行，与main构建进程隔离。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Thanks to Gradle's default imports (see <bpt i="0" x="0">&lt;a0&gt;</bpt>Appendix E, <bpt i="1" x="1">&lt;i1&gt;</bpt>Existing IDE Support and how to cope without it<ept i="1">&lt;/i1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>) you could also write:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141122T162523Z" creationid="msdx" creationdate="20141122T162523Z">
        <seg>由于 Gradle 的默认导入 （见<bpt i="0" x="0">&lt;a0&gt;</bpt>附录 E，<bpt i="1" x="1">&lt;i1&gt;</bpt>现有的 IDE 支持和如何应对不支持的情况<ept i="1">&lt;/i1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>），您还可以这样写：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>That configuration is explicitly named as part of the dependency declaration.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150730T035226Z" creationid="haohang" creationdate="20150730T035226Z">
        <seg>这个配置被显式地命名为这个依赖声明的一部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>That is all.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160104T154517Z" creationid="95" creationdate="20160104T154517Z">
        <seg>就这些了。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>That is, a plugin can be applied multiple times.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141122T162732Z" creationid="msdx" creationdate="20141122T162732Z">
        <seg>也就是说，一个插件可以被应用多次。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>That is, any task that forks Java processes can be used to generate coverage information.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T135500Z" creationid="msdx" creationdate="20150506T135500Z">
        <seg>也就意味着，任何fork Java 进程的任务都可以用于生成覆盖率信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>That is, only <bpt i="3" x="3">&lt;c3&gt;</bpt>systemProp.<ept i="3">&lt;/c3&gt;</ept> in the root project's <bpt i="4" x="4">&lt;c4&gt;</bpt>gradle.properties<ept i="4">&lt;/c4&gt;</ept> file will be set as system properties.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T150946Z" creationid="msdx" creationdate="20141109T150946Z">
        <seg>也就是，只有根项目<bpt i="4" x="4">&lt;c4&gt;</bpt>gradle.properties<ept i="4">&lt;/c4&gt;</ept>文件里的<bpt i="3" x="3">&lt;c3&gt;</bpt>systemProp.<ept i="3">&lt;/c3&gt;</ept>属性会被作为系统属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>That is, the copy method is intended to be used by custom tasks (see <bpt i="4" x="4">&lt;a4&gt;</bpt>Chapter 57, <bpt i="5" x="5">&lt;i5&gt;</bpt>Writing Custom Task Classes<ept i="5">&lt;/i5&gt;</ept><ept i="4">&lt;/a4&gt;</ept>) that need to copy files as part of their function.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T140440Z" creationid="msdx" creationdate="20141113T135328Z">
        <seg>即，这个copy()方法旨在用于自定义任务 （见<bpt i="4" x="4">&lt;a4&gt;</bpt>第 57 章，<bpt i="5" x="5">&lt;i5&gt;</bpt>编写自定义任务类<ept i="5">&lt;/i5&gt;</ept><ept i="4">&lt;/a4&gt;</ept>）中，需要文件复制作为其一部分功能的时候。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>That was one reason why we have created a distribution of webapps.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160727T054704Z" creationid="haohang" creationdate="20160727T054704Z">
        <seg>这是为什么我们创建一个 webapps 分发包的原因之一。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>That way you have somehow expressed, what are your first level dependencies and what are transitive dependencies (see <bpt i="0" x="0">&lt;a0&gt;</bpt>Section 50.4.8, “Optional attributes”<ept i="0">&lt;/a0&gt;</ept>).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151201T064642Z" creationid="haohang" creationdate="20151201T064642Z">
        <seg>对于这种方法，你将用某种方式表达，你第一级的依赖项和传递依赖是什么（见<bpt i="0" x="0">&lt;a0&gt;</bpt>第 50.4.8 条，“可选属性”<ept i="0">&lt;/a0&gt;</ept>）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>That's it.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T091635Z" creationid="haohang" creationdate="20150628T091635Z">
        <seg>就是这样。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The "<bpt i="0" x="0">&lt;c0&gt;</bpt>baseName<ept i="0">&lt;/c0&gt;</ept>" property has also been changed.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150701T034415Z" creationid="haohang" creationdate="20150701T034415Z">
        <seg>”<bpt i="0" x="0">&lt;c0&gt;</bpt>baseName<ept i="0">&lt;/c0&gt;</ept>“属性也被修改了。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The "<bpt i="0" x="0">&lt;c0&gt;</bpt>basic<ept i="0">&lt;/c0&gt;</ept>" build init type is useful for creating a fresh new Gradle project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T094935Z" creationid="haohang" creationdate="20150707T094935Z">
        <seg>“<bpt i="0" x="0">&lt;c0&gt;</bpt>basic<ept i="0">&lt;/c0&gt;</ept>”构建初始化类型用于创建一个新的 Gradle 项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The "<bpt i="0" x="0">&lt;c0&gt;</bpt>groovy-library<ept i="0">&lt;/c0&gt;</ept>" build init type is not inferable.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T094540Z" creationid="haohang" creationdate="20150707T094540Z">
        <seg>“<bpt i="0" x="0">&lt;c0&gt;</bpt>groovy-library<ept i="0">&lt;/c0&gt;</ept>”构建初始化类型不是可推断的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The "<bpt i="0" x="0">&lt;c0&gt;</bpt>java-library<ept i="0">&lt;/c0&gt;</ept>" build init type is not inferable.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T094114Z" creationid="haohang" creationdate="20150707T094114Z">
        <seg>“<bpt i="0" x="0">&lt;c0&gt;</bpt>Java-library<ept i="0">&lt;/c0&gt;</ept>”构建初始化类型不是可推断的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The "<bpt i="0" x="0">&lt;c0&gt;</bpt>pom<ept i="0">&lt;/c0&gt;</ept>" type can be used to convert an Apache Maven build to a Gradle build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T081827Z" creationid="haohang" creationdate="20150707T081827Z">
        <seg>“<bpt i="0" x="0">&lt;c0&gt;</bpt>pom<ept i="0">&lt;/c0&gt;</ept>”类型可以被用于把 Apache Maven 构建转换为 Gradle 构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The "<bpt i="0" x="0">&lt;c0&gt;</bpt>scala-library<ept i="0">&lt;/c0&gt;</ept>" build init type is not inferable.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T094333Z" creationid="haohang" creationdate="20150707T094333Z">
        <seg>“<bpt i="0" x="0">&lt;c0&gt;</bpt>scala-library<ept i="0">&lt;/c0&gt;</ept>”构建初始化类型不是可推断的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The 'default' version is resolved to a specific version via a dependency resolve rule, which looks up the version in a corporate catalog of approved modules.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T070543Z" creationid="95" creationdate="20151115T070543Z">
        <seg>这个“default”版本通过一个依赖解析规则被解析为一个特定的版本，这个规则将在一个核准模块的公司中查找该版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The 'should run after' ordering rule is similar but less strict as it will be ignored in two situations.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T152303Z" creationid="msdx" creationdate="20141110T152221Z">
        <seg>“应该在之后运行”的排序规则与其类似，但没有那么严格，因为它在两种情况下会被忽略。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The 1.0 milestone 3 release brought a new API called the tooling API, which you can use for embedding Gradle.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T041901Z" creationid="95" creationdate="20161218T041901Z">
        <seg>1.0 里程碑 3 的发布带来了新的 API 叫tooling API，可以用于嵌入 Gradle。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The :api project also depends on :shared.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T094935Z" creationid="haohang" creationdate="20160726T094935Z">
        <seg>:api 项目还依赖于 :shared.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>JacocoReport<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> task can be used to generate code coverage reports in different formats.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T131717Z" creationid="msdx" creationdate="20150506T131644Z">
        <seg><bpt i="0" x="0">&lt;a0&gt;</bpt> <bpt i="1" x="1">&lt;c1&gt;</bpt>JacocoReport<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>任务可以用于生成不同格式的代码覆盖率报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>MavenDeployer<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> and the MavenInstaller both provide an API for this:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T144151Z" creationid="95" creationdate="20160106T144151Z">
        <seg><bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>MavenDeployer<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>和 MavenInstaller 都为此提供了一个 API：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Project.container()<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> methods create instances of <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>NamedDomainObjectContainer<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>, that have many useful methods for managing and configuring the objects.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T015858Z" creationid="95" creationdate="20161211T015303Z">
        <seg><bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Project.container()<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>方法创建了一个 <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>NamedDomainObjectContainer<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>实例，该实例具体许多有用的方法，用于管理及配置这些对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>SonarProperty<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> annotations in the API documentation show how properties of the plugin's object model get mapped to the corresponding Sonar properties.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T100338Z" creationid="msdx" creationdate="20150512T100338Z">
        <seg>在 API 文档中的 <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>SonarProperty<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> 注解显示了插件的对象模型的属性是如何映射到相应的 Sonar 属性中的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Sync<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> task extends the <bpt i="2" x="2">&lt;c2&gt;</bpt>Copy<ept i="2">&lt;/c2&gt;</ept> task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T144416Z" creationid="msdx" creationdate="20141113T144416Z">
        <seg><bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Sync<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>任务继承了<bpt i="2" x="2">&lt;c2&gt;</bpt>Copy<ept i="2">&lt;/c2&gt;</ept>任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Test<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> task's API allows you some control over how this happens.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T140629Z" creationid="Administrator" creationdate="20150427T140629Z">
        <seg><bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Test<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>任务的 API 可以让你控制什么时候开始。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>IncrementalTaskInputs.outOfDate()<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept> action will be executed for every input file, and the <bpt i="3" x="3">&lt;a3&gt;</bpt><bpt i="4" x="4">&lt;c4&gt;</bpt>IncrementalTaskInputs.removed()<ept i="4">&lt;/c4&gt;</ept><ept i="3">&lt;/a3&gt;</ept> action will not be executed at all.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160817T145004Z" creationid="95" creationdate="20160817T145004Z">
        <seg>然后会为每一个输入文件执行 <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>IncrementalTaskInputs.outOfDate()<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>操作，并且不再执行<bpt i="3" x="3">&lt;a3&gt;</bpt><bpt i="4" x="4">&lt;c4&gt;</bpt>IncrementalTaskInputs.removed()<ept i="4">&lt;/c4&gt;</ept><ept i="3">&lt;/a3&gt;</ept>操作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="0" x="0">&lt;c0&gt;</bpt>--offline<ept i="0">&lt;/c0&gt;</ept> command line switch tells Gradle to always use dependency modules from the cache, regardless if they are due to be checked again.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T153719Z" creationid="95" creationdate="20151129T153719Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>--offline<ept i="0">&lt;/c0&gt;</ept> 命令行开机告诉 Gradle 总是从缓存中使用依赖模块，无论它们是否被再次检查。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="0" x="0">&lt;c0&gt;</bpt>--refresh-dependencies<ept i="0">&lt;/c0&gt;</ept> option tells Gradle to ignore all cached entries for resolved modules and artifacts.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T154130Z" creationid="95" creationdate="20151129T154014Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>--refresh-dependencies<ept i="0">&lt;/c0&gt;</ept> 选项告诉 Gradle 在解析模块和构件时忽略所有缓存条目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="0" x="0">&lt;c0&gt;</bpt>Configuration.files<ept i="0">&lt;/c0&gt;</ept> method always retrieves all artifacts of the <bpt i="1" x="1">&lt;s1&gt;</bpt><bpt i="2" x="2">&lt;e2&gt;</bpt>whole<ept i="2">&lt;/e2&gt;</ept><ept i="1">&lt;/s1&gt;</ept> configuration.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T040122Z" creationid="haohang" creationdate="20150807T040122Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>Configuration.files<ept i="0">&lt;/c0&gt;</ept>方法总是获取<bpt i="1" x="1">&lt;s1&gt;</bpt><bpt i="2" x="2">&lt;e2&gt;</bpt>整个<ept i="2">&lt;/e2&gt;</ept><ept i="1">&lt;/s1&gt;</ept>配置的所有 artifacts。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="0" x="0">&lt;c0&gt;</bpt>Project<ept i="0">&lt;/c0&gt;</ept> instance</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T044226Z" creationid="msdx" creationdate="20141108T044226Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>Project<ept i="0">&lt;/c0&gt;</ept>实例</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="0" x="0">&lt;c0&gt;</bpt>Project<ept i="0">&lt;/c0&gt;</ept> object provides some standard properties, which are available in your build script.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T043922Z" creationid="msdx" creationdate="20141108T043922Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>Project<ept i="0">&lt;/c0&gt;</ept>对象提供了一些在构建脚本中可用的标准的属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="0" x="0">&lt;c0&gt;</bpt>Test<ept i="0">&lt;/c0&gt;</ept> task detects which classes are test classes by inspecting the compiled test classes.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T040550Z" creationid="Administrator" creationdate="20150428T040550Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>Test<ept i="0">&lt;/c0&gt;</ept>任务通过检查编译过的测试类来检测哪些类是测试类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="0" x="0">&lt;c0&gt;</bpt>Test<ept i="0">&lt;/c0&gt;</ept> task generates the following results by default.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083931Z" creationid="msdx" creationdate="20150428T083505Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>test<ept i="0">&lt;/c0&gt;</ept>任务默认情况下会生成以下结果。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="0" x="0">&lt;c0&gt;</bpt>announce<ept i="0">&lt;/c0&gt;</ept> method takes two String arguments: The message to be sent, and the notification service to be used.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T063617Z" creationid="haohang" creationdate="20150628T063617Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>announce<ept i="0">&lt;/c0&gt;</ept> 方法有两个 String 参数: 要被发送的消息，以及要使用的通知服务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="0" x="0">&lt;c0&gt;</bpt>beforeMerged<ept i="0">&lt;/c0&gt;</ept> hook is executed with a domain object representing the existing file</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T105028Z" creationid="haohang" creationdate="20150624T104603Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>beforeMerged<ept i="0">&lt;/c0&gt;</ept>的 hook 会随着一个表示现有文件的域对象执行</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="0" x="0">&lt;c0&gt;</bpt>build<ept i="0">&lt;/c0&gt;</ept> task does this.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T095253Z" creationid="haohang" creationdate="20160726T095253Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>build<ept i="0">&lt;/c0&gt;</ept> 任务能做到这一点。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="0" x="0">&lt;c0&gt;</bpt>build<ept i="0">&lt;/c0&gt;</ept> task of the Java plugin is typically used to compile, test, and perform code style checks (if the CodeQuality plugin is used) of a single project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T094619Z" creationid="haohang" creationdate="20160726T094619Z">
        <seg>Java 插件的<bpt i="0" x="0">&lt;c0&gt;</bpt>build<ept i="0">&lt;/c0&gt;</ept> 通常用于一个项目的编译，测试和执行代码风格检查（如果使用了CodeQuality插件的话）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="0" x="0">&lt;c0&gt;</bpt>buildDashboard<ept i="0">&lt;/c0&gt;</ept> task does not depend on any other tasks.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150713T095540Z" creationid="haohang" creationdate="20150713T095540Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>buildDashboard<ept i="0">&lt;/c0&gt;</ept> 任务不依赖于任何其他任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="0" x="0">&lt;c0&gt;</bpt>buildDependents<ept i="0">&lt;/c0&gt;</ept> task also tests all the projects that have a project lib dependency (in the testRuntime configuration) on the specified project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160727T052556Z" creationid="haohang" creationdate="20160727T052556Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>buildDependents<ept i="0">&lt;/c0&gt;</ept>任务也用于测试依赖于（在testRuntime配置）指定项目的所有项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="0" x="0">&lt;c0&gt;</bpt>buildNeeded<ept i="0">&lt;/c0&gt;</ept> task also tests all the projects from the project lib dependencies of the testRuntime configuration.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160727T052240Z" creationid="haohang" creationdate="20160727T052240Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>buildNeeded<ept i="0">&lt;/c0&gt;</ept> 任务也用于测试这个项目在testRuntime配置中依赖的所有库项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="0" x="0">&lt;c0&gt;</bpt>clean<ept i="0">&lt;/c0&gt;</ept> task is an instance of <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>Delete<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T134305Z" creationid="Administrator" creationdate="20150427T134305Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>clean<ept i="0">&lt;/c0&gt;</ept> 任务是<bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>Delete<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>的一个实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="0" x="0">&lt;c0&gt;</bpt>compare-gradle-builds<ept i="0">&lt;/c0&gt;</ept> plugin can be used to facilitate a comparison between two Gradle builds.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170107T071450Z" creationid="95" creationdate="20161228T150248Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>compare-gradle-builds<ept i="0">&lt;/c0&gt;</ept>可以用于方便地比较两个Gradle构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="0" x="0">&lt;c0&gt;</bpt>configure()<ept i="0">&lt;/c0&gt;</ept> method takes a list as an argument and applies the configuration to the projects in this list.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160530T144104Z" creationid="95" creationdate="20160527T163848Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>configure()<ept i="0">&lt;/c0&gt;</ept>方法接受一个list作为参数，并将配置应用到这个list里的项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="0" x="0">&lt;c0&gt;</bpt>copy<ept i="0">&lt;/c0&gt;</ept> method copies only the dependencies belonging explicitly to the configuration.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T040525Z" creationid="haohang" creationdate="20150807T040501Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>copy<ept i="0">&lt;/c0&gt;</ept>方法只复制明确属于配置的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="0" x="0">&lt;c0&gt;</bpt>default<ept i="0">&lt;/c0&gt;</ept> configuration of a module contains undesired artifacts.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150730T034853Z" creationid="haohang" creationdate="20150730T034618Z">
        <seg>一个模块的 <bpt i="0" x="0">&lt;c0&gt;</bpt>default<ept i="0">&lt;/c0&gt;</ept> 配置包含了不希望有的 artifacts。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="0" x="0">&lt;c0&gt;</bpt>forkEvery<ept i="0">&lt;/c0&gt;</ept> property specifies the maximum number of test classes to execute in a test process.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T013816Z" creationid="Administrator" creationdate="20150428T013816Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>forkEvery<ept i="0">&lt;/c0&gt;</ept>属性指定了要在测试进程中执行的测试类的最大数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="0" x="0">&lt;c0&gt;</bpt>from()<ept i="0">&lt;/c0&gt;</ept> method accepts any of the arguments that the <bpt i="1" x="1">&lt;a1&gt;</bpt>files()<ept i="1">&lt;/a1&gt;</ept> method does.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T130838Z" creationid="msdx" creationdate="20141113T124455Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>from()<ept i="0">&lt;/c0&gt;</ept>方法接受和<bpt i="1" x="1">&lt;a1&gt;</bpt>files()<ept i="1">&lt;/a1&gt;</ept>方法一样的任何参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="0" x="0">&lt;c0&gt;</bpt>groupId<ept i="0">&lt;/c0&gt;</ept>, <bpt i="1" x="1">&lt;c1&gt;</bpt>artifactId<ept i="1">&lt;/c1&gt;</ept>, <bpt i="2" x="2">&lt;c2&gt;</bpt>version<ept i="2">&lt;/c2&gt;</ept> and <bpt i="3" x="3">&lt;c3&gt;</bpt>packaging<ept i="3">&lt;/c3&gt;</ept> elements used for the POM default to the values shown in the table below.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T143814Z" creationid="95" creationdate="20160105T143814Z">
        <seg>下表展示了用于POM的<bpt i="0" x="0">&lt;c0&gt;</bpt>groupId<ept i="0">&lt;/c0&gt;</ept>，<bpt i="1" x="1">&lt;c1&gt;</bpt>artifactId<ept i="1">&lt;/c1&gt;</ept>，<bpt i="2" x="2">&lt;c2&gt;</bpt>version<ept i="2">&lt;/c2&gt;</ept>和<bpt i="3" x="3">&lt;c3&gt;</bpt>packaging<ept i="3">&lt;/c3&gt;</ept>元素的默认值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="0" x="0">&lt;c0&gt;</bpt>include<ept i="0">&lt;/c0&gt;</ept> method takes project paths as arguments.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T041353Z" creationid="haohang" creationdate="20160519T041353Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>include<ept i="0">&lt;/c0&gt;</ept>方法采用项目路径作为参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="0" x="0">&lt;c0&gt;</bpt>includeFlat<ept i="0">&lt;/c0&gt;</ept> method takes directory names as an argument.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T041921Z" creationid="haohang" creationdate="20160519T041901Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>includeFlat<ept i="0">&lt;/c0&gt;</ept>方法将目录名称作为参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="0" x="0">&lt;c0&gt;</bpt>init<ept i="0">&lt;/c0&gt;</ept> supports different build setup <bpt i="1" x="1">&lt;e1&gt;</bpt>types<ept i="1">&lt;/e1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T073554Z" creationid="haohang" creationdate="20150707T073554Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>init<ept i="0">&lt;/c0&gt;</ept>支持不同的构建安装程序<bpt i="1" x="1">&lt;e1&gt;</bpt>类型<ept i="1">&lt;/e1&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="0" x="0">&lt;c0&gt;</bpt>jar<ept i="0">&lt;/c0&gt;</ept> task creates a JAR file containing the class files and resources of the project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T144442Z" creationid="msdx" creationdate="20150428T144404Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>Jar<ept i="0">&lt;/c0&gt;</ept>任务创建一个包含类文件和项目资源的 JAR 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="0" x="0">&lt;c0&gt;</bpt>javadoc<ept i="0">&lt;/c0&gt;</ept> task is an instance of <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>Javadoc<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T133640Z" creationid="Administrator" creationdate="20150427T133640Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>Javadoc<ept i="0">&lt;/c0&gt;</ept>任务是<bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>Javadoc<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>的一个实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="0" x="0">&lt;c0&gt;</bpt>maxParallelForks<ept i="0">&lt;/c0&gt;</ept> property specifies the maximum number of test processes to run at any given time.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T141204Z" creationid="Administrator" creationdate="20150427T141204Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>MaxParallelForks<ept i="0">&lt;/c0&gt;</ept>属性指定在给定的时间可以运行的测试进程的最大数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="0" x="0">&lt;c0&gt;</bpt>rcCompiler<ept i="0">&lt;/c0&gt;</ept> extension is of type <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>PreprocessingTool<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160325T025453Z" creationid="haohang" creationdate="20160325T025453Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>rcCompiler<ept i="0">&lt;/c0&gt;</ept>扩展是<bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>PreprocessingTool<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="0" x="0">&lt;c0&gt;</bpt>sonar<ept i="0">&lt;/c0&gt;</ept> block in a subproject configures an object of type <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>SonarProjectModel<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T091456Z" creationid="msdx" creationdate="20150512T091359Z">
        <seg>在子项目中的<bpt i="0" x="0">&lt;c0&gt;</bpt>sonar<ept i="0">&lt;/c0&gt;</ept>块配置的是一个<bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>SonarProjectModel<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>类型的对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="0" x="0">&lt;c0&gt;</bpt>sonar<ept i="0">&lt;/c0&gt;</ept> block in that project configures an object of type <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>SonarRootModel<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T091139Z" creationid="msdx" creationdate="20150512T091139Z">
        <seg>在该project 中的<bpt i="0" x="0">&lt;c0&gt;</bpt>sonar<ept i="0">&lt;/c0&gt;</ept> 块配置的是一个<bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>SonarRootModel<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>类型的对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="0" x="0">&lt;c0&gt;</bpt>sonar<ept i="0">&lt;/c0&gt;</ept>, <bpt i="1" x="1">&lt;c1&gt;</bpt>server<ept i="1">&lt;/c1&gt;</ept>, <bpt i="2" x="2">&lt;c2&gt;</bpt>database<ept i="2">&lt;/c2&gt;</ept>, and <bpt i="3" x="3">&lt;c3&gt;</bpt>project<ept i="3">&lt;/c3&gt;</ept> blocks in the examples above configure objects of type <bpt i="4" x="4">&lt;a4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>SonarRootModel<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/a4&gt;</ept>, <bpt i="6" x="6">&lt;a6&gt;</bpt><bpt i="7" x="7">&lt;c7&gt;</bpt>SonarServer<ept i="7">&lt;/c7&gt;</ept><ept i="6">&lt;/a6&gt;</ept>, <bpt i="8" x="8">&lt;a8&gt;</bpt><bpt i="9" x="9">&lt;c9&gt;</bpt>SonarDatabase<ept i="9">&lt;/c9&gt;</ept><ept i="8">&lt;/a8&gt;</ept>, and <bpt i="10" x="10">&lt;a10&gt;</bpt><bpt i="11" x="11">&lt;c11&gt;</bpt>SonarProject<ept i="11">&lt;/c11&gt;</ept><ept i="10">&lt;/a10&gt;</ept>, respectively.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150510T144101Z" creationid="msdx" creationdate="20150510T143901Z">
        <seg>在上面的例子中，<bpt i="0" x="0">&lt;c0&gt;</bpt>sonar<ept i="0">&lt;/c0&gt;</ept>，<bpt i="1" x="1">&lt;c1&gt;</bpt>server<ept i="1">&lt;/c1&gt;</ept>，<bpt i="2" x="2">&lt;c2&gt;</bpt>database<ept i="2">&lt;/c2&gt;</ept>和<bpt i="3" x="3">&lt;c3&gt;</bpt>project<ept i="3">&lt;/c3&gt;</ept> 块分别配置的是<bpt i="4" x="4">&lt;a4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>SonarRootModel<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/a4&gt;</ept>， <bpt i="6" x="6">&lt;a6&gt;</bpt><bpt i="7" x="7">&lt;c7&gt;</bpt>SonarServer<ept i="7">&lt;/c7&gt;</ept><ept i="6">&lt;/a6&gt;</ept>， <bpt i="8" x="8">&lt;a8&gt;</bpt><bpt i="9" x="9">&lt;c9&gt;</bpt>SonarDatabase<ept i="9">&lt;/c9&gt;</ept><ept i="8">&lt;/a8&gt;</ept>及 <bpt i="10" x="10">&lt;a10&gt;</bpt><bpt i="11" x="11">&lt;c11&gt;</bpt>SonarProject<ept i="11">&lt;/c11&gt;</ept><ept i="10">&lt;/a10&gt;</ept>类型的对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="0" x="0">&lt;c0&gt;</bpt>sonarAnalyze<ept i="0">&lt;/c0&gt;</ept> task is a standalone task that needs to be executed explicitly and doesn't depend on any other tasks.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150510T143046Z" creationid="msdx" creationdate="20150510T143046Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>SonarAnalyze<ept i="0">&lt;/c0&gt;</ept> task 是一项需要显式执行的独立任务，不依赖于任何其他 task。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="0" x="0">&lt;c0&gt;</bpt>test<ept i="0">&lt;/c0&gt;</ept> task is an instance of <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>Test<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T140237Z" creationid="Administrator" creationdate="20150427T140237Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>test<ept i="0">&lt;/c0&gt;</ept>任务是<bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>Test<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>的一个实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="0" x="0">&lt;c0&gt;</bpt>testLogging<ept i="0">&lt;/c0&gt;</ept> property allows to configure which test events are going to be logged and at which detail level.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T015219Z" creationid="Administrator" creationdate="20150428T015219Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>testLogging<ept i="0">&lt;/c0&gt;</ept>属性可以配置哪些测试事件需要记录，并且使用什么样的日志级别。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="0" x="0">&lt;c0&gt;</bpt>whenMerged<ept i="0">&lt;/c0&gt;</ept> hook allows to manipulate the fully populated domain objects.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T065857Z" creationid="haohang" creationdate="20150625T065857Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>WhenMerged<ept i="0">&lt;/c0&gt;</ept> hook 允许操作完全填充的域对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="0" x="0">&lt;c0&gt;</bpt>whenMerged<ept i="0">&lt;/c0&gt;</ept> hook is executed with a domain object representing contents of the file to be persisted</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T105018Z" creationid="haohang" creationdate="20150624T104757Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>whenMerged<ept i="0">&lt;/c0&gt;</ept>的 hook 会随着一个表示持久化的域对象执行</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="0" x="0">&lt;c0&gt;</bpt>withXml<ept i="0">&lt;/c0&gt;</ept> hook is executed with a raw representation of the XML that will be persisted</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T105114Z" creationid="haohang" creationdate="20150624T104806Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>withXml<ept i="0">&lt;/c0&gt;</ept>的 hook 会随着一个表示将被持久化的XML的 raw 执行</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="0" x="0">&lt;c0&gt;</bpt>withXml<ept i="0">&lt;/c0&gt;</ept>hook allows to manipulate the in-memory XML representation just before the file gets written to disk.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T070144Z" creationid="haohang" creationdate="20150625T070144Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>WithXml<ept i="0">&lt;/c0&gt;</ept> hook 允许在文件写入到磁盘之前，操纵内存中的 XML 的表示形式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="1" x="1">&lt;c1&gt;</bpt>-D<ept i="1">&lt;/c1&gt;</ept> option of the <bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;s3&gt;</bpt>gradle<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/s2&gt;</ept> command has the same effect as the <bpt i="4" x="4">&lt;c4&gt;</bpt>-D<ept i="4">&lt;/c4&gt;</ept> option of the <bpt i="5" x="5">&lt;s5&gt;</bpt><bpt i="6" x="6">&lt;s6&gt;</bpt>java<ept i="6">&lt;/s6&gt;</ept><ept i="5">&lt;/s5&gt;</ept> command.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T075935Z" creationid="msdx" creationdate="20141109T075935Z">
        <seg><bpt i="2" x="2">&lt;s2&gt;</bpt> <bpt i="3" x="3">&lt;s3&gt;</bpt>Gradle<ept i="3">&lt;/s3&gt;</ept><ept i="2">&lt;/s2&gt;</ept>命令的<bpt i="1" x="1">&lt;c1&gt;</bpt>-D<ept i="1">&lt;/c1&gt;</ept>选项和<bpt i="5" x="5">&lt;s5&gt;</bpt><bpt i="6" x="6">&lt;s6&gt;</bpt>java<ept i="6">&lt;/s6&gt;</ept><ept i="5">&lt;/s5&gt;</ept>命令的<bpt i="4" x="4">&lt;c4&gt;</bpt>-D<ept i="4">&lt;/c4&gt;</ept>选项有着同样的效果。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="1" x="1">&lt;c1&gt;</bpt>archives<ept i="1">&lt;/c1&gt;</ept> configuration is the standard configuration to assign your artifacts to.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151226T085120Z" creationid="95" creationdate="20151226T085120Z">
        <seg><bpt i="1" x="1">&lt;c1&gt;</bpt>archives<ept i="1">&lt;/c1&gt;</ept> 配置是一个指定你的构件的标准配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="1" x="1">&lt;c1&gt;</bpt>beforeMerged<ept i="1">&lt;/c1&gt;</ept> hook makes it possible to overwrite just certain parts of the existing content.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T073901Z" creationid="haohang" creationdate="20150625T073901Z">
        <seg><bpt i="1" x="1">&lt;c1&gt;</bpt>beforeMerged<ept i="1">&lt;/c1&gt;</ept> hook 可以实现只覆盖现有的某些部分的内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="1" x="1">&lt;c1&gt;</bpt>buildNeeded<ept i="1">&lt;/c1&gt;</ept> and <bpt i="2" x="2">&lt;c2&gt;</bpt>buildDependents<ept i="2">&lt;/c2&gt;</ept> tasks can help with this.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T094740Z" creationid="haohang" creationdate="20160726T094740Z">
        <seg><bpt i="1" x="1">&lt;c1&gt;</bpt>buildNeeded<ept i="1">&lt;/c1&gt;</ept> 和 <bpt i="2" x="2">&lt;c2&gt;</bpt>buildDependents<ept i="2">&lt;/c2&gt;</ept> 任务能帮你做到这一点。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="1" x="1">&lt;c1&gt;</bpt>compile<ept i="1">&lt;/c1&gt;</ept> configuration inherits this dependency, so the groovy libraries will be included in classpath when compiling Groovy and Java source.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T065243Z" creationid="msdx" creationdate="20141030T065240Z">
        <seg> <bpt i="1" x="1">&lt;c1&gt;</bpt>编译<ept i="1">&lt;/c1&gt;</ept> 配置继承了这个依赖,从而在编译Groovy和Java源代码时，groovy库也会被包含在类路径中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="1" x="1">&lt;c1&gt;</bpt>copy()<ept i="1">&lt;/c1&gt;</ept> method can be used to copy files as <bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;e3&gt;</bpt>part<ept i="3">&lt;/e3&gt;</ept><ept i="2">&lt;/s2&gt;</ept> of a task's implementation.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T140306Z" creationid="msdx" creationdate="20141113T135151Z">
        <seg><bpt i="1" x="1">&lt;c1&gt;</bpt>copy()<ept i="1">&lt;/c1&gt;</ept>方法可以作为一个任务执行的<bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;e3&gt;</bpt>部分<ept i="3">&lt;/e3&gt;</ept><ept i="2">&lt;/s2&gt;</ept>来复制文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="1" x="1">&lt;c1&gt;</bpt>copyRecursive<ept i="1">&lt;/c1&gt;</ept> method copies all the dependencies, including the dependencies from extended configurations.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T040548Z" creationid="haohang" creationdate="20150807T040548Z">
        <seg><bpt i="1" x="1">&lt;c1&gt;</bpt>copyRecursive<ept i="1">&lt;/c1&gt;</ept>方法将复制所有依赖，包括扩展配置的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="1" x="1">&lt;c1&gt;</bpt>settings.xml<ept i="1">&lt;/c1&gt;</ept> in <bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;e3&gt;</bpt><bpt i="4" x="4">&lt;c4&gt;</bpt>USER_HOME<ept i="4">&lt;/c4&gt;</ept><ept i="3">&lt;/e3&gt;</ept>/.m2<ept i="2">&lt;/c2&gt;</ept> takes precedence over the <bpt i="5" x="5">&lt;c5&gt;</bpt>settings.xml<ept i="5">&lt;/c5&gt;</ept> in <bpt i="6" x="6">&lt;c6&gt;</bpt><bpt i="7" x="7">&lt;e7&gt;</bpt><bpt i="8" x="8">&lt;c8&gt;</bpt>M2_HOME<ept i="8">&lt;/c8&gt;</ept><ept i="7">&lt;/e7&gt;</ept>/conf<ept i="6">&lt;/c6&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150909T052823Z" creationid="haohang" creationdate="20150909T052823Z">
        <seg>在<bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;e3&gt;</bpt><bpt i="4" x="4">&lt;c4&gt;</bpt>USER_HOME<ept i="4">&lt;/c4&gt;</ept><ept i="3">&lt;/e3&gt;</ept>/.m2<ept i="2">&lt;/c2&gt;</ept> 的<bpt i="1" x="1">&lt;c1&gt;</bpt>settings.xml<ept i="1">&lt;/c1&gt;</ept> 比在 <bpt i="6" x="6">&lt;c6&gt;</bpt> <bpt i="7" x="7">&lt;e7&gt;</bpt> <bpt i="8" x="8">&lt;c8&gt;</bpt>M2_HOME<ept i="8">&lt;/c8&gt;</ept><ept i="7">&lt;/e7&gt;</ept>/conf<ept i="6">&lt;/c6&gt;</ept>的<bpt i="5" x="5">&lt;c5&gt;</bpt>settings.xml<ept i="5">&lt;/c5&gt;</ept>优先。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="2" x="2">&lt;c2&gt;</bpt>gradle<ept i="2">&lt;/c2&gt;</ept> object is passed as a parameter, which can be used to configure all aspects of a build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161215T144808Z" creationid="95" creationdate="20161215T144808Z">
        <seg>然后 <bpt i="2" x="2">&lt;c2&gt;</bpt>gradle<ept i="2">&lt;/c2&gt;</ept> 对象会被作为参数传入，用于配置构建的所有方面。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="2" x="2">&lt;c2&gt;</bpt>main<ept i="2">&lt;/c2&gt;</ept> source set contains your production source code, which is compiled and assembled into a JAR file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T173833Z" creationid="Administrator" creationdate="20150425T173833Z">
        <seg><bpt i="2" x="2">&lt;c2&gt;</bpt>main<ept i="2">&lt;/c2&gt;</ept>源集包含你产品的源代码，它们将被编译并组装成一个 JAR 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="3" x="3">&lt;c3&gt;</bpt>FileTree<ept i="3">&lt;/c3&gt;</ept> interface extends <bpt i="4" x="4">&lt;c4&gt;</bpt>FileCollection<ept i="4">&lt;/c4&gt;</ept>, so you can treat a file tree exactly the same way as you would a file collection.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T162055Z" creationid="msdx" creationdate="20141112T162055Z">
        <seg><bpt i="3" x="3">&lt;c3&gt;</bpt>FileTree<ept i="3">&lt;/c3&gt;</ept>接口继承自<bpt i="4" x="4">&lt;c4&gt;</bpt>FileCollection<ept i="4">&lt;/c4&gt;</ept>，所以你可以用对待文件集合一样的方式来对待文件树。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="3" x="3">&lt;c3&gt;</bpt>into()<ept i="3">&lt;/c3&gt;</ept> accepts any of the arguments that the <bpt i="4" x="4">&lt;a4&gt;</bpt>file()<ept i="4">&lt;/a4&gt;</ept> method does.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T130917Z" creationid="msdx" creationdate="20141113T130834Z">
        <seg><bpt i="0" x="0">&lt;c0&gt;</bpt>into()<ept i="0">&lt;/c0&gt;</ept>方法接受和<bpt i="1" x="1">&lt;a1&gt;</bpt>files()<ept i="1">&lt;/a1&gt;</ept>方法一样的任何参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="3" x="3">&lt;c3&gt;</bpt>test<ept i="3">&lt;/c3&gt;</ept> source set contains your unit test source code, which is compiled and executed using JUnit or TestNG.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T173923Z" creationid="Administrator" creationdate="20150425T173923Z">
        <seg><bpt i="3" x="3">&lt;c3&gt;</bpt>test<ept i="3">&lt;/c3&gt;</ept>源集包含你的单元测试的源代码，它们将被编译并使用 JUnit 或 TestNG来执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="4" x="4">&lt;c4&gt;</bpt>Copy<ept i="4">&lt;/c4&gt;</ept> task implements this interface.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T124244Z" creationid="msdx" creationdate="20141113T124244Z">
        <seg><bpt i="4" x="4">&lt;c4&gt;</bpt>Copy<ept i="4">&lt;/c4&gt;</ept>任务实现了此接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="4" x="4">&lt;c4&gt;</bpt>dependency<ept i="4">&lt;/c4&gt;</ept> elements are created from the project's dependency declarations.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T144002Z" creationid="95" creationdate="20160105T144002Z">
        <seg>这些<bpt i="4" x="4">&lt;c4&gt;</bpt>dependency<ept i="4">&lt;/c4&gt;</ept>元素由project 的依赖声明所创建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="4" x="4">&lt;c4&gt;</bpt>files()<ept i="4">&lt;/c4&gt;</ept> method accepts any type of object as its parameters.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T145542Z" creationid="msdx" creationdate="20141112T145542Z">
        <seg>这个<bpt i="4" x="4">&lt;c4&gt;</bpt>Files()<ept i="4">&lt;/c4&gt;</ept>方法接受任何类型的对象作为其参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="5" x="5">&lt;c5&gt;</bpt>files<ept i="5">&lt;/c5&gt;</ept> method therefore returns <bpt i="6" x="6">&lt;c6&gt;</bpt>seal-2.0<ept i="6">&lt;/c6&gt;</ept> as a transitive dependency of<bpt i="7" x="7">&lt;c7&gt;</bpt>orca<ept i="7">&lt;/c7&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T090919Z" creationid="haohang" creationdate="20150807T090756Z">
        <seg><bpt i="5" x="5">&lt;c5&gt;</bpt>files<ept i="5">&lt;/c5&gt;</ept> 方法因此返回 <bpt i="6" x="6">&lt;c6&gt;</bpt>seal-2.0<ept i="6">&lt;/c6&gt;</ept> 作为 <bpt i="7" x="7">&lt;c7&gt;</bpt>orca<ept i="7">&lt;/c7&gt;</ept>的传递依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="6" x="6">&lt;c6&gt;</bpt>GroovyCompile<ept i="6">&lt;/c6&gt;</ept> task supports most configuration options of the official Groovy compiler.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T094525Z" creationid="msdx" creationdate="20150429T094505Z">
        <seg><bpt i="6" x="6">&lt;c6&gt;</bpt>GroovyCompile<ept i="6">&lt;/c6&gt;</ept> task 支持官方的 Groovy 编译器的大多数配置选项。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="6" x="6">&lt;c6&gt;</bpt>project.container(Class)<ept i="6">&lt;/c6&gt;</ept> variant of the container method creates new instances by attempting to invoke the constructor of the class that takes a single string argument, which is the desired name of the object.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T020538Z" creationid="95" creationdate="20161211T020450Z">
        <seg>容器方法里的<bpt i="6" x="6">&lt;c6&gt;</bpt>project.container(Class)<ept i="6">&lt;/c6&gt;</ept>通过尝试调用该类带有一个string参数的构造方法创建了新实例，该参数是这个对象所需的名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="7" x="7">&lt;c7&gt;</bpt>file()<ept i="7">&lt;/c7&gt;</ept> method also understands URLs, such as <bpt i="8" x="8">&lt;c8&gt;</bpt>file:/some/path.xml<ept i="8">&lt;/c8&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T143325Z" creationid="msdx" creationdate="20141112T143325Z">
        <seg>这个<bpt i="7" x="7">&lt;c7&gt;</bpt>file ()<ept i="7">&lt;/c7&gt;</ept>方法也可以识别URL，例如是<bpt i="8" x="8">&lt;c8&gt;</bpt>file:/some/path.xml<ept i="8">&lt;/c8&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="6" x="6">&lt;e6&gt;</bpt><bpt i="7" x="7">&lt;c7&gt;</bpt>taskName<ept i="7">&lt;/c7&gt;</ept><ept i="6">&lt;/e6&gt;</ept> can be a full multi-project path like ":sub1:sub2:test" or just the task name.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T035419Z" creationid="Administrator" creationdate="20150428T035419Z">
        <seg>这个<bpt i="6" x="6">&lt;e6&gt;</bpt><bpt i="7" x="7">&lt;c7&gt;</bpt>taskName<ept i="7">&lt;/c7&gt;</ept><ept i="6">&lt;/e6&gt;</ept> 可以是一个完整的多项目路径，比如“sub1:sub2:test”，或者仅是一个任务名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="8" x="8">&lt;e8&gt;</bpt><bpt i="9" x="9">&lt;c9&gt;</bpt>testNamePattern<ept i="9">&lt;/c9&gt;</ept><ept i="8">&lt;/e8&gt;</ept> will be used to form an include pattern of "**/testNamePattern*.class".</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T035612Z" creationid="Administrator" creationdate="20150428T035612Z">
        <seg><bpt i="8" x="8">&lt;e8&gt;</bpt><bpt i="9" x="9">&lt;c9&gt;</bpt>testNamePattern<ept i="9">&lt;/c9&gt;</ept><ept i="8">&lt;/e8&gt;</ept>将用于形成一个“**/testNamePattern*.class”的包含模式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>absence<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> of a particular module or artifact in a particular repository, eliminating repeated attempts to access a resource that does not exist.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T045439Z" creationid="95" creationdate="20151129T045305Z">
        <seg>在特定的仓库中<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>缺少的<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>特定模块或工件，避免反复地尝试访问不存在的资源。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="1" x="1">&lt;s1&gt;</bpt><bpt i="2" x="2">&lt;s2&gt;</bpt>gradlew<ept i="2">&lt;/s2&gt;</ept><ept i="1">&lt;/s1&gt;</ept> command will download the appropriate distribution from the Gradle repository.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T035952Z" creationid="95" creationdate="20161218T035854Z">
        <seg><bpt i="1" x="1">&lt;s1&gt;</bpt> <bpt i="2" x="2">&lt;s2&gt;</bpt>gradlew<ept i="2">&lt;/s2&gt;</ept><ept i="1">&lt;/s1&gt;</ept>命令将从 Gradle 仓库下载适合的分发包。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="3" x="3">&lt;s3&gt;</bpt><bpt i="4" x="4">&lt;s4&gt;</bpt>gradlew<ept i="4">&lt;/s4&gt;</ept><ept i="3">&lt;/s3&gt;</ept> command will use this URL to download the distribution.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T040021Z" creationid="95" creationdate="20161218T040021Z">
        <seg> <bpt i="3" x="3">&lt;s3&gt;</bpt><bpt i="4" x="4">&lt;s4&gt;</bpt>gradlew<ept i="4">&lt;/s4&gt;</ept><ept i="3">&lt;/s3&gt;</ept> 命令将使用此URL来下载分发包。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="4" x="4">&lt;s4&gt;</bpt><bpt i="5" x="5">&lt;s5&gt;</bpt>gradlew<ept i="5">&lt;/s5&gt;</ept><ept i="4">&lt;/s4&gt;</ept> command can be used <bpt i="6" x="6">&lt;s6&gt;</bpt><bpt i="7" x="7">&lt;e7&gt;</bpt>exactly<ept i="7">&lt;/e7&gt;</ept><ept i="6">&lt;/s6&gt;</ept> the same way as the <bpt i="8" x="8">&lt;s8&gt;</bpt><bpt i="9" x="9">&lt;s9&gt;</bpt>gradle<ept i="9">&lt;/s9&gt;</ept><ept i="8">&lt;/s8&gt;</ept> command.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161217T160854Z" creationid="95" creationdate="20161217T160854Z">
        <seg>这个<bpt i="4" x="4">&lt;s4&gt;</bpt><bpt i="5" x="5">&lt;s5&gt;</bpt>gradlew<ept i="5">&lt;/s5&gt;</ept><ept i="4">&lt;/s4&gt;</ept> 命令可以和 <bpt i="8" x="8">&lt;s8&gt;</bpt><bpt i="9" x="9">&lt;s9&gt;</bpt>gradle<ept i="9">&lt;/s9&gt;</ept><ept i="8">&lt;/s8&gt;</ept> 命令 <bpt i="6" x="6">&lt;s6&gt;</bpt><bpt i="7" x="7">&lt;e7&gt;</bpt>完全<ept i="7">&lt;/e7&gt;</ept><ept i="6">&lt;/s6&gt;</ept> 一样地使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The <bpt i="6" x="6">&lt;s6&gt;</bpt><bpt i="7" x="7">&lt;e7&gt;</bpt>execution<ept i="7">&lt;/e7&gt;</ept><ept i="6">&lt;/s6&gt;</ept> dependency is in the other direction, as <bpt i="8" x="8">&lt;c8&gt;</bpt>webDist<ept i="8">&lt;/c8&gt;</ept> depends on the build artifacts of <bpt i="9" x="9">&lt;c9&gt;</bpt>date<ept i="9">&lt;/c9&gt;</ept> and <bpt i="10" x="10">&lt;c10&gt;</bpt>hello<ept i="10">&lt;/c10&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T082523Z" creationid="haohang" creationdate="20160726T080317Z">
        <seg><bpt i="6" x="6">&lt;s6&gt;</bpt><bpt i="7" x="7">&lt;e7&gt;</bpt>执行<ept i="7">&lt;/e7&gt;</ept><ept i="6">&lt;/s6&gt;</ept>依赖则是另一个方面，因为<bpt i="8" x="8">&lt;c8&gt;</bpt>webDist<ept i="8">&lt;/c8&gt;</ept>依赖于<bpt i="9" x="9">&lt;c9&gt;</bpt>date<ept i="9">&lt;/c9&gt;</ept> 和 <bpt i="10" x="10">&lt;c10&gt;</bpt>hello<ept i="10">&lt;/c10&gt;</ept>所构建的构件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The ANTLR Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065852Z" creationid="95" creationdate="20170416T065852Z">
        <seg>ANTLR 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The ANTLR grammar files of this source set.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T102808Z" creationid="haohang" creationdate="20150625T102755Z">
        <seg>给定的source set 的 ANTLR 语法文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The ANTLR plugin adds a number of tasks to your project, as shown below.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T094916Z" creationid="haohang" creationdate="20150625T094916Z">
        <seg>ANTLR 插件向你的项目添加了大量的任务，如下所示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The ANTLR plugin adds an <bpt i="0" x="0">&lt;c0&gt;</bpt>antlr<ept i="0">&lt;/c0&gt;</ept> dependency configuration.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T095514Z" creationid="haohang" creationdate="20150625T095514Z">
        <seg>ANTLR 插件添加了一个 <bpt i="0" x="0">&lt;c0&gt;</bpt>antlr<ept i="0">&lt;/c0&gt;</ept> 的依赖配置：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The ANTLR plugin adds the following dependencies to tasks added by the Java plugin.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T095104Z" creationid="haohang" creationdate="20150625T095104Z">
        <seg>ANTLR 插件向 Java 插件所加入的 tasks 添加了以下的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The ANTLR plugin adds the following properties to each source set in the project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T102725Z" creationid="haohang" creationdate="20150625T102725Z">
        <seg>ANTLR 插件向 project 的每一个source set 添加了下列属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The ANTLR plugin does not add any convention properties.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T102649Z" creationid="haohang" creationdate="20150625T102649Z">
        <seg>ANTLR 插件不会添加任何约定属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The ANTLR plugin extends the Java plugin to add support for generating parsers using <bpt i="0" x="0">&lt;a0&gt;</bpt>ANTLR<ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T094835Z" creationid="msdx" creationdate="20141116T063356Z">
        <seg>ANTLR 插件扩展自 Java 插件并添加了使用 <bpt i="0" x="0">&lt;a0&gt;</bpt>ANTLR<ept i="0">&lt;/a0&gt;</ept> 生成语法分析器的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The ANTLR plugin only supports ANTLR version 2.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T094844Z" creationid="haohang" creationdate="20150625T094708Z">
        <seg>ANTLR 插件只支持 ANTLR 版本 2。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The API gives us the opportunity to do lots of caching, static analysis and preemptive work, to make things faster for the user.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T154740Z" creationid="95" creationdate="20161218T154559Z">
        <seg>这个API 让我们有机会去做大量的缓存，静态分析以及抢占式的工作，为用户提供更快的速度。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The API lets you to walk the resolved dependency graph and provides information about the dependencies.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T033712Z" creationid="haohang" creationdate="20150807T033712Z">
        <seg>这个 API 可以让你查看解析的依赖图，并提供有关依赖的信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Announce Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065924Z" creationid="95" creationdate="20170416T065924Z">
        <seg>Announce 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Ant based compiler (<bpt i="2" x="2">&lt;c2&gt;</bpt>scalaCompileOptions.useAnt = true<ept i="2">&lt;/c2&gt;</ept>) will fork a new process for every <bpt i="3" x="3">&lt;c3&gt;</bpt>ScalaCompile<ept i="3">&lt;/c3&gt;</ept> task, and does not fork by default.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150430T155854Z" creationid="msdx" creationdate="20150430T155854Z">
        <seg>基于 Ant 的编译器 (<bpt i="2" x="2">&lt;c2&gt;</bpt>scalaCompileOptions.useAnt = true<ept i="2">&lt;/c2&gt;</ept>) 将为每个<bpt i="3" x="3">&lt;c3&gt;</bpt>ScalaCompile<ept i="3">&lt;/c3&gt;</ept>任务fork 一个新进程，而默认情况下它不进行fork。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Ant integration is provided by <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>AntBuilder<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T063027Z" creationid="msdx" creationdate="20141116T062726Z">
        <seg>Ant 集成由<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>AntBuilder<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>提供。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Ant properties are also available as a Map which you can change.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T061823Z" creationid="msdx" creationdate="20141116T061406Z">
        <seg>Ant 属性也可以从一个你可以修改的Map中获得。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Ant properties are also available as a Map.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T062213Z" creationid="msdx" creationdate="20141116T062213Z">
        <seg>Ant 属性也可作为一个 Map。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Application Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065953Z" creationid="95" creationdate="20170416T065953Z">
        <seg>应用程序插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Application plugin adds the following tasks to the project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150702T104928Z" creationid="haohang" creationdate="20150702T104928Z">
        <seg>应用程序插件向 project 中添加了以下任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Build Announcements Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065935Z" creationid="95" creationdate="20170416T065935Z">
        <seg>构建公告插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Build Dashboard Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070101Z" creationid="95" creationdate="20170416T070101Z">
        <seg>构建面板插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Build Dashboard plugin adds the following task to the project:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150713T100248Z" creationid="haohang" creationdate="20150713T100248Z">
        <seg>Build Dashboard 插件向项目中添加以下任务：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Build Dashboard plugin can be used to generate a single HTML dashboard that provides a single point of access to all of the reports generated by a build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150713T095141Z" creationid="haohang" creationdate="20150710T013225Z">
        <seg>Build Dashboard 插件可以用于生成单个 HTML dashboard，提供对由构建生成的所有报告的单点访问。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Build Dashboard plugin does not define any dependency configurations.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150713T100441Z" creationid="haohang" creationdate="20150713T100441Z">
        <seg>Build Dashboard 插件没有定义任何的依赖配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Build Dashboard plugin does not require any particular project layout.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150713T100426Z" creationid="haohang" creationdate="20150713T100339Z">
        <seg>Build Dashboard 插件不需要任何特定的项目布局。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Build Environment</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150508T131813Z" creationid="msdx" creationdate="20150508T131813Z">
        <seg>构建环境</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Build Init plugin is an automatically applied plugin, which means you do not need to apply it explicitly.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T073636Z" creationid="haohang" creationdate="20150707T071042Z">
        <seg> Build Init 插件是一个自动应用的插件，这意味着您不需要显式地应用它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Build Init plugin is currently <bpt i="0" x="0">&lt;a0&gt;</bpt>incubating<ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T073612Z" creationid="haohang" creationdate="20150707T070705Z">
        <seg> Build Init 插件目前仍然是<bpt i="0" x="0">&lt;a0&gt;</bpt>孵化<ept i="0">&lt;/a0&gt;</ept>状态。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Build Lifecycle</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070518Z" creationid="95" creationdate="20170416T070518Z">
        <seg>构建的生命周期</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Checkstyle Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150514T151850Z" creationid="msdx" creationdate="20150514T151850Z">
        <seg>Checkstyle 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Checkstyle libraries to use</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T132828Z" creationid="msdx" creationdate="20150505T132828Z">
        <seg>用到的 Checkstyle 库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Checkstyle plugin adds the following dependencies to tasks defined by the Java plugin.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T132510Z" creationid="msdx" creationdate="20150505T132510Z">
        <seg>Checkstyle 插件向 Java 插件所加入的 tasks 添加了以下的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Checkstyle plugin adds the following dependency configurations:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T132724Z" creationid="msdx" creationdate="20150505T132724Z">
        <seg>Checkstyle 插件添加了下列的依赖配置：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Checkstyle plugin adds the following tasks to the project:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T024648Z" creationid="msdx" creationdate="20150505T024648Z">
        <seg>Checkstyle 插件向project 中添加了以下tasks：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Checkstyle plugin expects the following project layout:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T132624Z" creationid="msdx" creationdate="20150505T132624Z">
        <seg>Checkstyle 插件预计是以下的项目布局：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Checkstyle plugin performs quality checks on your project's Java source files using <bpt i="0" x="0">&lt;a0&gt;</bpt>Checkstyle<ept i="0">&lt;/a0&gt;</ept> and generates reports from these checks.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T151731Z" creationid="msdx" creationdate="20150504T151538Z">
        <seg>Checkstyle 插件使用<bpt i="0" x="0">&lt;a0&gt;</bpt>Checkstyle<ept i="0">&lt;/a0&gt;</ept>对你的项目的 Java 源文件执行质量检查，并从检查结果中生成报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The CodeNarc Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150514T151920Z" creationid="msdx" creationdate="20150514T151920Z">
        <seg>CodeNarc 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The CodeNarc libraries to use</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T133509Z" creationid="msdx" creationdate="20150505T133509Z">
        <seg>使用的 CodeNarc 库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The CodeNarc plugin adds the following dependencies to tasks defined by the Groovy plugin.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T133333Z" creationid="msdx" creationdate="20150505T133245Z">
        <seg>CodeNarc 插件向 Groovy 插件所加入的任务添加了以下的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The CodeNarc plugin adds the following dependency configurations:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T133444Z" creationid="msdx" creationdate="20150505T133444Z">
        <seg>CodeNarc 插件添加了下列的依赖配置：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The CodeNarc plugin adds the following tasks to the project:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T133140Z" creationid="msdx" creationdate="20150505T133120Z">
        <seg>CodeNarc 插件向project 中添加了以下任务：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The CodeNarc plugin expects the following project layout:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T133413Z" creationid="msdx" creationdate="20150505T133413Z">
        <seg>CodeNarc 插件预计是以下的项目布局：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The CodeNarc plugin performs quality checks on your project's Groovy source files using <bpt i="0" x="0">&lt;a0&gt;</bpt>CodeNarc<ept i="0">&lt;/a0&gt;</ept> and generates reports from these checks.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T133040Z" creationid="msdx" creationdate="20150505T132950Z">
        <seg>CodeNarc 插件使用<bpt i="0" x="0">&lt;a0&gt;</bpt>CodeNarc<ept i="0">&lt;/a0&gt;</ept>对项目的 Groovy 源文件执行质量检查并生成报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Command Line tab is place to execute a single Gradle command directly.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T160049Z" creationid="msdx" creationdate="20141105T160049Z">
        <seg>命令行选项卡是直接执行单个的 Gradle 命令的地方。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The DSL used to declare repositories for publication is the same DSL that is used to declare repositories to consume dependencies from, <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>RepositoryHandler<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T062900Z" creationid="95" creationdate="20170416T062626Z">
        <seg>定义用于发布的仓库的DSL和定义用于查找依赖的仓库的DSL一样（<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>RepositoryHandler<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The DSL used to declare repositories for publishing is the same DSL that is used to declare repositories for dependencies (<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>RepositoryHandler<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170326T073535Z" creationid="95" creationdate="20170304T033933Z">
        <seg>定义用于发布的仓库的DSL和定义用于查找依赖的仓库的DSL一样（<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>RepositoryHandler<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Distribution Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065941Z" creationid="95" creationdate="20170416T065941Z">
        <seg>分发插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Distribution plugin adds the following tasks to the project:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150701T030807Z" creationid="haohang" creationdate="20150701T030807Z">
        <seg>分发插件向 project 中添加了以下任务：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Ear Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T132232Z" creationid="msdx" creationdate="20150509T132232Z">
        <seg>Ear 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Ear plugin adds support for assembling web application EAR files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T094222Z" creationid="msdx" creationdate="20150503T094121Z">
        <seg>Ear 插件添加了用于组装 web 应用程序的 EAR 文件的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Ear plugin adds the following dependencies to tasks added by the base plugin.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T095156Z" creationid="msdx" creationdate="20150503T094918Z">
        <seg>Ear 插件向基础插件所加入的 tasks 添加了以下的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Ear plugin adds the following tasks to the project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T094507Z" creationid="msdx" creationdate="20150503T094507Z">
        <seg>Ear 插件向project 中添加了以下任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Ear plugin adds two dependency configurations: <bpt i="0" x="0">&lt;c0&gt;</bpt>deploy<ept i="0">&lt;/c0&gt;</ept> and <bpt i="1" x="1">&lt;c1&gt;</bpt>earlib<ept i="1">&lt;/c1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T095312Z" creationid="msdx" creationdate="20150503T095312Z">
        <seg>Ear 插件添加了两个依赖配置：<bpt i="0" x="0">&lt;c0&gt;</bpt>deploy<ept i="0">&lt;/c0&gt;</ept>和<bpt i="1" x="1">&lt;c1&gt;</bpt>earlib<ept i="1">&lt;/c1&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Eclipse Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065812Z" creationid="95" creationdate="20170416T065812Z">
        <seg>Eclipse 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Eclipse plugin adds a number of tasks to your projects.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T004215Z" creationid="haohang" creationdate="20150603T004136Z">
        <seg>Eclipse 插件向你的projects 添加了大量的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Eclipse plugin adds the tasks shown below to a project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T004325Z" creationid="haohang" creationdate="20150603T004325Z">
        <seg>Eclipse 插件向一个 project 添加了如下所示的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Eclipse plugin allows you to customize the generated metadata files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T100351Z" creationid="haohang" creationdate="20150624T100351Z">
        <seg>Eclipse 插件允许您自定义生成的元数据文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Eclipse plugin generates files that are used by the <bpt i="0" x="0">&lt;a0&gt;</bpt>Eclipse IDE<ept i="0">&lt;/a0&gt;</ept>, thus making it possible to import the project into Eclipse (<bpt i="1" x="1">&lt;s1&gt;</bpt>File<ept i="1">&lt;/s1&gt;</ept> - <bpt i="2" x="2">&lt;s2&gt;</bpt>Import...<ept i="2">&lt;/s2&gt;</ept> - <bpt i="3" x="3">&lt;s3&gt;</bpt>Existing Projects into Workspace<ept i="3">&lt;/s3&gt;</ept>).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T002903Z" creationid="haohang" creationdate="20150603T002903Z">
        <seg>Eclipse 插件生成<bpt i="0" x="0">&lt;a0&gt;</bpt>Eclipse IDE<ept i="0">&lt;/a0&gt;</ept>所使用的文件，从而让项目能够导入 Eclipse （<bpt i="1" x="1">&lt;s1&gt;</bpt>File<ept i="1">&lt;/s1&gt;</ept> - <bpt i="2" x="2">&lt;s2&gt;</bpt>Import...<ept i="2">&lt;/s2&gt;</ept> - <bpt i="3" x="3">&lt;s3&gt;</bpt>Existing Projects into Workspace<ept i="3">&lt;/s3&gt;</ept>）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Eclipse plugin is open to customization and provides a standardized set of hooks for adding and removing content from the generated files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T004051Z" creationid="haohang" creationdate="20150603T004051Z">
        <seg>Eclipse 插件是开放的，以定制和提供一套标准化的钩，用于添加和删除生成的文件的内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Eclipse plugin provides objects modeling the sections of the Eclipse files that are generated by Gradle.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T104301Z" creationid="haohang" creationdate="20150624T104240Z">
        <seg>Eclipse 插件提供了一些对象，对由 Gradle 生成的 Eclipse 文件的段落进行建模。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Favorites tab is place to store commonly-executed commands.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T154455Z" creationid="msdx" creationdate="20141105T154445Z">
        <seg>收藏夹选项卡用来储存经常执行的命令。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The FindBugs Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065406Z" creationid="95" creationdate="20170416T065406Z">
        <seg>FindBugs 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The FindBugs libraries to use</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T133851Z" creationid="msdx" creationdate="20150505T133851Z">
        <seg>使用的 FindBugs 库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The FindBugs plugin adds the following dependencies to tasks defined by the Java plugin.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T133738Z" creationid="msdx" creationdate="20150505T133738Z">
        <seg>FindBugs 插件向 Java 插件所加入的任务添加了以下的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The FindBugs plugin adds the following dependency configurations:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T133824Z" creationid="msdx" creationdate="20150505T133824Z">
        <seg>FindBugs 插件增加了下列的依赖配置：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The FindBugs plugin adds the following tasks to the project:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T133633Z" creationid="msdx" creationdate="20150505T133633Z">
        <seg>FindBugs 插件向project 中添加了以下任务：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The FindBugs plugin performs quality checks on your project's Java source files using <bpt i="0" x="0">&lt;a0&gt;</bpt>FindBugs<ept i="0">&lt;/a0&gt;</ept> and generates reports from these checks.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T133604Z" creationid="msdx" creationdate="20150505T133604Z">
        <seg>FindBugs 插件使用<bpt i="0" x="0">&lt;a0&gt;</bpt>FindBugs<ept i="0">&lt;/a0&gt;</ept>对项目的 Java 源文件执行质量检查，并从检查结果中生成报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Gradle <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>Project<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept> has an associated <bpt i="3" x="3">&lt;a3&gt;</bpt><bpt i="4" x="4">&lt;c4&gt;</bpt>ExtensionContainer<ept i="4">&lt;/c4&gt;</ept><ept i="3">&lt;/a3&gt;</ept> object that helps keep track of all the settings and properties being passed to plugins.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T124314Z" creationid="95" creationdate="20160820T124314Z">
        <seg>Gradle <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>Project<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept> 与 <bpt i="3" x="3">&lt;a3&gt;</bpt><bpt i="4" x="4">&lt;c4&gt;</bpt>ExtensionContainer<ept i="4">&lt;/c4&gt;</ept><ept i="3">&lt;/a3&gt;</ept> 对象会有关联，该对象可以帮助追踪传给插件的所有配置和属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Gradle <bpt i="0" x="0">&lt;c0&gt;</bpt>cunit<ept i="0">&lt;/c0&gt;</ept> plugin provides support for compiling and executing CUnit tests in your native-binary project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160504T144211Z" creationid="95" creationdate="20160504T144211Z">
        <seg>Gradle <bpt i="0" x="0">&lt;c0&gt;</bpt>cunit<ept i="0">&lt;/c0&gt;</ept> 插件向你的native-binary项目提供了编译及执行CUnit 测试的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Gradle Build Init plugin can be used to bootstrap the process of creating a new Gradle build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T073621Z" creationid="haohang" creationdate="20150707T070837Z">
        <seg>Gradle  Build Init 插件可以用于引导创建一个新的 Gradle 构建的过程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Gradle DSL uses closures in many places.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T063220Z" creationid="msdx" creationdate="20141108T063220Z">
        <seg>Gradle DSL 在很多地方使用闭包。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Gradle Daemon</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150508T131737Z" creationid="msdx" creationdate="20150508T131737Z">
        <seg>Gradle 守护进程</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Gradle Wrapper</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20170720T061052Z" creationid="95" creationdate="20170416T070941Z">
        <seg>Gradle 包装器</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Gradle Wrapper (henceforth referred to as the “wrapper) is the preferred way of starting a Gradle build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161217T142723Z" creationid="95" creationdate="20161217T142723Z">
        <seg>Gradle 包装器（下称“包装器”）是启动 Gradle 构建的首选方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Gradle announce allows to send custom announcements during a build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T062750Z" creationid="haohang" creationdate="20150628T062445Z">
        <seg>Gradle 宣布允许在构建期间发送自定义公告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Gradle application plugin extends the language plugins with common application related tasks.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150701T035440Z" creationid="haohang" creationdate="20150701T035440Z">
        <seg>Gradle 应用程序插件扩展了语言插件的一些常见应用程序相关的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Gradle build language</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T164838Z" creationid="msdx" creationdate="20141109T164838Z">
        <seg>Gradle 构建语言</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Gradle build that executes the comparison process.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161228T141237Z" creationid="95" creationdate="20161228T141237Z">
        <seg>执行比较过程的构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Gradle cache does not allow the local cache to hide problems and creating mysterious and difficult to debug behavior that has been a challenge with many build tools.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T043546Z" creationid="95" creationdate="20151129T043546Z">
        <seg>Gradle 缓存中不允许本地缓存隐藏问题和，以及一直是许多构建工具的挑战的创造神秘及难以调试的行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Gradle dependency cache consists of 2 key types of storage:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T042151Z" creationid="95" creationdate="20151129T042119Z">
        <seg>Gradle 依赖缓存包含 2 个主要类型的存储：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Gradle dependency cache uses file-based locking to ensure that it can safely be used by multiple Gradle processes concurrently.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T153337Z" creationid="95" creationdate="20151129T153315Z">
        <seg>Gradle 依赖缓存使用基于文件的锁来确保，它可以安全地通过多个 Gradle 进程并行使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Gradle support for building native binaries is currently <bpt i="0" x="0">&lt;a0&gt;</bpt>incubating<ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160128T151723Z" creationid="95" creationdate="20160128T151723Z">
        <seg>Gradle 对构建原生二进制文件的支持目前还是<bpt i="0" x="0">&lt;a0&gt;</bpt>孵化<ept i="0">&lt;/a0&gt;</ept>阶段。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Gradle wrapper plugin allows the generation of Gradle wrapper files by adding a <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Wrapper<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> task, that generates all files needed to run the build using the Gradle Wrapper.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150710T012520Z" creationid="haohang" creationdate="20150707T095200Z">
        <seg>Gradle wrapper 插件允许通过添加 <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Wrapper<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>任务生成的 Gradle wrapper 文件，来生成使用 Gradle Wrapper 运行构建时所需的所有文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Groovy Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131841Z" creationid="msdx" creationdate="20150509T131841Z">
        <seg>Groovy 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Groovy library doesn't necessarily have to come from a remote repository.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T080657Z" creationid="msdx" creationdate="20150429T080657Z">
        <seg>Groovy 库不一定得从远程仓库中获取。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Groovy plugin adds a <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>GroovyCompile<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> task for each source set in the project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T094234Z" creationid="msdx" creationdate="20150429T094146Z">
        <seg>Java 插件向 project 里的每个source set 添加了一个<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>JavaCompile<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> task。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Groovy plugin adds the following convention properties to each source set in the project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T092449Z" creationid="msdx" creationdate="20150429T092449Z">
        <seg>Groovy 的插件向 project 的每一个source set 添加了下列的常规属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Groovy plugin adds the following dependencies to tasks added by the Java plugin.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T071712Z" creationid="msdx" creationdate="20150429T071609Z">
        <seg>Groovy 的插件向 Java 插件所加入的 tasks 添加了以下的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Groovy plugin adds the following tasks to the project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T071341Z" creationid="msdx" creationdate="20150429T071341Z">
        <seg>Groovy 的插件向project 中添加了以下任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Groovy plugin also modifies some source set properties:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T094014Z" creationid="msdx" creationdate="20150429T094014Z">
        <seg>Groovy 的插件还修改了一些 source set 的属性：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Groovy plugin assumes the project layout shown in <bpt i="0" x="0">&lt;a0&gt;</bpt>Table 24.3, “Groovy plugin - project layout”<ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T071901Z" creationid="msdx" creationdate="20150429T071901Z">
        <seg>Groovy 的插件会假定项目的布局如<bpt i="0" x="0">&lt;a0&gt;</bpt>表 24.3，“Groovy 插件 -  项目布局”<ept i="0">&lt;/a0&gt;</ept>中所示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Groovy plugin does not add any convention properties to the project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T092336Z" creationid="msdx" creationdate="20150429T092336Z">
        <seg>Groovy 的插件没有向 project 添加任何的常规属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Groovy plugin extends the <bpt i="0" x="0">&lt;c0&gt;</bpt>compile<ept i="0">&lt;/c0&gt;</ept> task to look for source files in directory <bpt i="1" x="1">&lt;c1&gt;</bpt>src/main/groovy<ept i="1">&lt;/c1&gt;</ept>, and the <bpt i="2" x="2">&lt;c2&gt;</bpt>compileTest<ept i="2">&lt;/c2&gt;</ept> task to look for test source files in directory <bpt i="3" x="3">&lt;c3&gt;</bpt>src/test/groovy<ept i="3">&lt;/c3&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T064057Z" creationid="msdx" creationdate="20141030T064057Z">
        <seg>Groovy插件继承了 <bpt i="0" x="0">&lt;c0&gt;</bpt>compile<ept i="0">&lt;/c0&gt;</ept> task ， <bpt i="1" x="1">&lt;c1&gt;</bpt>src/main/groovy<ept i="1">&lt;/c1&gt;</ept>目录中查找源文件；还有 <bpt i="2" x="2">&lt;c2&gt;</bpt>compileTest<ept i="2">&lt;/c2&gt;</ept> task，在<bpt i="3" x="3">&lt;c3&gt;</bpt>src/test/groovy<ept i="3">&lt;/c3&gt;</ept>目录中查找测试的源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Groovy plugin extends the Java plugin to add support for Groovy projects.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T151954Z" creationid="msdx" creationdate="20150428T151827Z">
        <seg>Groovy 的插件继承自 Java 插件并添加了对 Groovy 项目的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Groovy source files of this source set.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T093104Z" creationid="msdx" creationdate="20150429T093104Z">
        <seg>该source set 中的 Groovy 源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The IDEA Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065832Z" creationid="95" creationdate="20170416T065832Z">
        <seg>IDEA 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The IDEA plugin adds a number of tasks to your project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T071753Z" creationid="haohang" creationdate="20150625T071753Z">
        <seg>IDEA 插件向你的project 添加了大量的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The IDEA plugin adds the tasks shown below to a project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T071842Z" creationid="haohang" creationdate="20150625T071842Z">
        <seg>IDEA 插件向一个 project 添加了如下所示的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The IDEA plugin generates files that are used by <bpt i="0" x="0">&lt;a0&gt;</bpt>IntelliJ IDEA<ept i="0">&lt;/a0&gt;</ept>, thus making it possible to open the project from IDEA (<bpt i="1" x="1">&lt;s1&gt;</bpt>File<ept i="1">&lt;/s1&gt;</ept> - <bpt i="2" x="2">&lt;s2&gt;</bpt>Open Project<ept i="2">&lt;/s2&gt;</ept>).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T071359Z" creationid="haohang" creationdate="20150625T070621Z">
        <seg>IDEA 插件生成<bpt i="0" x="0">&lt;a0&gt;</bpt>IntelliJ IDEA<ept i="0">&lt;/a0&gt;</ept>所使用的文件，从而让项目能够在 IDEA 中打开 （<bpt i="1" x="1">&lt;s1&gt;</bpt>File<ept i="1">&lt;/s1&gt;</ept> - <bpt i="2" x="2">&lt;s2&gt;</bpt>Open Project<ept i="2">&lt;/s2&gt;</ept>）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Ivy module descriptor file: <bpt i="0" x="0">&lt;c0&gt;</bpt>ivy-1.0.xml<ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T153820Z" creationid="95" creationdate="20170330T153820Z">
        <seg>Ivy 模块描述符文件︰<bpt i="0" x="0">&lt;c0&gt;</bpt>ivy-1.0.xml<ept i="0">&lt;/c0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The JAR file is declared as an artifact in the <bpt i="1" x="1">&lt;c1&gt;</bpt>archives<ept i="1">&lt;/c1&gt;</ept> dependency configuration.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T144519Z" creationid="msdx" creationdate="20150428T144406Z">
        <seg>JAR 文件在<bpt i="1" x="1">&lt;c1&gt;</bpt>archives<ept i="1">&lt;/c1&gt;</ept>依赖配置中被声明为一个构件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The JDepend Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065438Z" creationid="95" creationdate="20170416T065438Z">
        <seg>JDepend 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The JDepend libraries to use</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T134457Z" creationid="msdx" creationdate="20150505T134457Z">
        <seg>使用的 JDepend 库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The JDepend plugin adds the following dependencies to tasks defined by the Java plugin.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T134323Z" creationid="msdx" creationdate="20150505T134323Z">
        <seg>JDepend 插件向 Java 插件所加入的任务添加了以下的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The JDepend plugin adds the following dependency configurations:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T134441Z" creationid="msdx" creationdate="20150505T134441Z">
        <seg>JDepend 插件添加了下列的依赖配置：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The JDepend plugin adds the following tasks to the project:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T134218Z" creationid="msdx" creationdate="20150505T134218Z">
        <seg>JDepend 插件向project 中添加了以下任务：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The JDepend plugin performs quality checks on your project's source files using <bpt i="0" x="0">&lt;a0&gt;</bpt>JDepend<ept i="0">&lt;/a0&gt;</ept> and generates reports from these checks.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T134152Z" creationid="msdx" creationdate="20150505T134107Z">
        <seg>JDepend 插件使用<bpt i="0" x="0">&lt;a0&gt;</bpt>JDepend<ept i="0">&lt;/a0&gt;</ept>对项目的源文件执行质量检查，并从检查结果中生成报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The JaCoCo Ant library used for running the <bpt i="0" x="0">&lt;c0&gt;</bpt>JacocoReport<ept i="0">&lt;/c0&gt;</ept> and <bpt i="1" x="1">&lt;c1&gt;</bpt>JacocoMerge<ept i="1">&lt;/c1&gt;</ept> tasks.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T140031Z" creationid="msdx" creationdate="20150506T140031Z">
        <seg>用于运行<bpt i="0" x="0">&lt;c0&gt;</bpt>JacocoReport<ept i="0">&lt;/c0&gt;</ept>和<bpt i="1" x="1">&lt;c1&gt;</bpt>JacocoMerge<ept i="1">&lt;/c1&gt;</ept>任务的 JaCoCo Ant 库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The JaCoCo Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065504Z" creationid="95" creationdate="20170416T065504Z">
        <seg>JaCoCo 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The JaCoCo agent library used for instrumenting the code under test.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T140121Z" creationid="msdx" creationdate="20150506T140121Z">
        <seg>用于测试位于test下的代码的 JaCoCo 客户端库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The JaCoCo plugin adds a <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>JacocoTaskExtension<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> extension to all tasks of type <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>Test<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T132121Z" creationid="msdx" creationdate="20150506T132020Z">
        <seg>JaCoCo 插件添加了一个<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>JacocoTaskExtension<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>扩展到<bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>Test<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>类型的所有任务中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The JaCoCo plugin adds a project extension named <bpt i="0" x="0">&lt;c0&gt;</bpt>jacoco<ept i="0">&lt;/c0&gt;</ept> of type <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>JacocoPluginExtension<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>, which allows configuring defaults for JaCoCo usage in your build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T131544Z" creationid="msdx" creationdate="20150506T130438Z">
        <seg>JaCoCo 插件添加一个名为<bpt i="0" x="0">&lt;c0&gt;</bpt>jacoco<ept i="0">&lt;/c0&gt;</ept>类型为<bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>JacocoPluginExtension<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>的project 扩展，这个扩展允许在你的构建中配置 JaCoCo 所使用的默认值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The JaCoCo plugin adds the following dependency configurations:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T135948Z" creationid="msdx" creationdate="20150506T135948Z">
        <seg>JaCoCo 插件添加了下列的依赖配置：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The JaCoCo plugin is currently <bpt i="0" x="0">&lt;a0&gt;</bpt>incubating<ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T125910Z" creationid="msdx" creationdate="20150505T135939Z">
        <seg>JaCoCo 插件目前还是<bpt i="0" x="0">&lt;a0&gt;</bpt>孵化中<ept i="0">&lt;/a0&gt;</ept>状态。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The JaCoCo plugin provides code coverage metrics for Java code via integration with <bpt i="0" x="0">&lt;a0&gt;</bpt>JaCoCo<ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T125959Z" creationid="msdx" creationdate="20150506T125959Z">
        <seg>JaCoCo 插件通过集成<bpt i="0" x="0">&lt;a0&gt;</bpt>JaCoCo<ept i="0">&lt;/a0&gt;</ept>为 Java 代码提供了代码覆盖率指标。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Java Library Distribution Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070013Z" creationid="95" creationdate="20170416T070013Z">
        <seg>Java Library 发布插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Java Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131608Z" creationid="msdx" creationdate="20150509T131608Z">
        <seg>Java 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Java library distribution plugin adds support for building a distribution ZIP for a Java library.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150705T084424Z" creationid="haohang" creationdate="20150705T084424Z">
        <seg>Java 库分布插件为一个 Java library 添加了构建一个分发 ZIP 的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Java library distribution plugin adds the following tasks to the project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T070321Z" creationid="haohang" creationdate="20150707T070321Z">
        <seg>Java 库分发插件向 project 对象添加以下任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Java library distribution plugin is currently <bpt i="0" x="0">&lt;a0&gt;</bpt>incubating<ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T140159Z" creationid="msdx" creationdate="20150506T140159Z">
        <seg>Java 库发布插件目前还处于<bpt i="0" x="0">&lt;a0&gt;</bpt>孵化中<ept i="0">&lt;/a0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Java plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163430Z" creationid="msdx" creationdate="20141109T163430Z">
        <seg>Java 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Java plugin adds Java compilation, testing and bundling capabilities to a project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T080556Z" creationid="Administrator" creationdate="20150425T073525Z">
        <seg>Java 插件向project 添加了 Java 编译、 测试和捆绑的能力。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Java plugin adds a <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>JavaCompile<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> instance for each source set in the project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T134934Z" creationid="Administrator" creationdate="20150427T134934Z">
        <seg>Java 插件为该project里的每个源集添加一个<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>JavaCompile<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Java plugin adds a <bpt i="0" x="0">&lt;c0&gt;</bpt>runtime<ept i="0">&lt;/c0&gt;</ept> configuration for this purpose, with the implicit assumption that the <bpt i="1" x="1">&lt;c1&gt;</bpt>runtime<ept i="1">&lt;/c1&gt;</ept> dependencies are the dependencies of the artifact you want to publish.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151227T152522Z" creationid="95" creationdate="20151227T152522Z">
        <seg>Java 插件已经为此添加了一个<bpt i="0" x="0">&lt;c0&gt;</bpt>runtime<ept i="0">&lt;/c0&gt;</ept>配置，它隐式的假设<bpt i="1" x="1">&lt;c1&gt;</bpt>runtime<ept i="1">&lt;/c1&gt;</ept>依赖项是你想要发布的构件的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Java plugin adds a number of convention properties to the project, shown below.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T085550Z" creationid="Administrator" creationdate="20150426T085550Z">
        <seg>Java插件向项目添加了许多常规属性，如下图所示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Java plugin adds a number of default values for the archive tasks.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T145838Z" creationid="msdx" creationdate="20141113T145838Z">
        <seg>Java 插件对归档任务添加了一些默认值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Java plugin adds a number of dependency configurations to your project, as shown below.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T083929Z" creationid="Administrator" creationdate="20150426T083929Z">
        <seg>Java插件向项目添加了许多依赖配置，如下图所示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Java plugin adds a number of tasks to your project, as shown below.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T174017Z" creationid="Administrator" creationdate="20150425T174017Z">
        <seg>Java 插件向你的项目添加了大量的任务，如下所示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Java plugin adds per default a jar to your project libraries which contains all the classes.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T085009Z" creationid="haohang" creationdate="20160726T084545Z">
        <seg>Java 插件向你的项目的每个库添加了一个默认的jar，它包含了所有类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Java plugin adds the concept of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>source sets<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> (see <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>SourceSet<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>) to describe the aspects of a set of source, one aspect being where the class files should be written to when it is compiled.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141124T073624Z" creationid="msdx" creationdate="20141123T154319Z">
        <seg>Java 插件添加了<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt> source sets<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> 的概念 （见<bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>SourceSet<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>） 来描述的源文件集的各个方面，其中一个方面是在编译的时候这些类文件应该被写到哪个地方。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Java plugin also adds a number of tasks which assemble the classes for the source set, as shown in <bpt i="0" x="0">&lt;a0&gt;</bpt>Table 23.2, “Java plugin - source set tasks”<ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T133125Z" creationid="Administrator" creationdate="20150427T133125Z">
        <seg>Java 插件还添加了大量的任务，用于组装源集的类，如<bpt i="0" x="0">&lt;a0&gt;</bpt>表 23.2，“Java 插件 - 源设置任务”<ept i="0">&lt;/a0&gt;</ept>所示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Java plugin also adds a number of tasks which form a lifecycle for the project:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T010018Z" creationid="Administrator" creationdate="20150426T010018Z">
        <seg>Java 插件还增加了大量的任务构成该项目的生命周期：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Java plugin assumes the project layout shown below.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T083009Z" creationid="Administrator" creationdate="20150426T083009Z">
        <seg>Java 插件会假定如下所示的项目布局。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Java plugin automatically assigns the default jar to this configuration.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151226T085156Z" creationid="95" creationdate="20151226T085156Z">
        <seg>Java 插件会自动地把默认的 jar 文件指定到这个配置中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Java plugin defaults this property to point to <bpt i="2" x="2">&lt;c2&gt;</bpt>build/classes/main<ept i="2">&lt;/c2&gt;</ept> in the project directory.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141123T153850Z" creationid="msdx" creationdate="20141123T153850Z">
        <seg>Java 插件默认此属性指向项目目录中的<bpt i="2" x="2">&lt;c2&gt;</bpt>build/classes/main<ept i="2">&lt;/c2&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Java plugin defines two standard source sets, called <bpt i="0" x="0">&lt;c0&gt;</bpt>main<ept i="0">&lt;/c0&gt;</ept> and <bpt i="1" x="1">&lt;c1&gt;</bpt>test<ept i="1">&lt;/c1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T173805Z" creationid="Administrator" creationdate="20150425T173805Z">
        <seg>Java 插件定义了两个标准的源集，分别是<bpt i="0" x="0">&lt;c0&gt;</bpt>main<ept i="0">&lt;/c0&gt;</ept>和<bpt i="1" x="1">&lt;c1&gt;</bpt>test<ept i="1">&lt;/c1&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Java plugin has added a <bpt i="0" x="0">&lt;c0&gt;</bpt>compileJava<ept i="0">&lt;/c0&gt;</ept> task and a <bpt i="1" x="1">&lt;c1&gt;</bpt>processResources<ept i="1">&lt;/c1&gt;</ept> task to the project and configured the <bpt i="2" x="2">&lt;c2&gt;</bpt>destinationDir<ept i="2">&lt;/c2&gt;</ept> property of both of these tasks.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141123T151300Z" creationid="msdx" creationdate="20141123T151143Z">
        <seg>Java 插件已经向项目添加了 <bpt i="0" x="0">&lt;c0&gt;</bpt>compileJava<ept i="0">&lt;/c0&gt;</ept>任务和<bpt i="1" x="1">&lt;c1&gt;</bpt>processResources<ept i="1">&lt;/c1&gt;</ept>任务，并且配置了这两个任务的<bpt i="2" x="2">&lt;c2&gt;</bpt>destinationDir<ept i="2">&lt;/c2&gt;</ept>属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Java plugin introduces the concept of a <bpt i="0" x="0">&lt;e0&gt;</bpt>source set<ept i="0">&lt;/e0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T074013Z" creationid="Administrator" creationdate="20150425T074013Z">
        <seg>Java 插件引入了一个<bpt i="0" x="0">&lt;e0&gt;</bpt>源集<ept i="0">&lt;/e0&gt;</ept>的概念。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Java plugin maps the <bpt i="4" x="4">&lt;c4&gt;</bpt>destinationDir<ept i="4">&lt;/c4&gt;</ept> property of the <bpt i="5" x="5">&lt;c5&gt;</bpt>compileJava<ept i="5">&lt;/c5&gt;</ept> task to this aspect of the source set.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141124T073834Z" creationid="msdx" creationdate="20141124T073712Z">
        <seg>Java 插件将<bpt i="5" x="5">&lt;c5&gt;</bpt>compileJava<ept i="5">&lt;/c5&gt;</ept>任务的<bpt i="4" x="4">&lt;c4&gt;</bpt>destinationDir<ept i="4">&lt;/c4&gt;</ept>属性映射到源文件集的这一个方面。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Java plugin uses the <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Copy<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> task for resource handling.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T134546Z" creationid="Administrator" creationdate="20150427T134546Z">
        <seg>Java 插件使用<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Copy<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>任务进行资源的处理。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Java plugin will compile whatever it finds, and handles anything which is missing.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T083221Z" creationid="Administrator" creationdate="20150426T083221Z">
        <seg>Java插件将会进行编译，不管它发现什么，并处理缺少的任何东西。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Java plugin, for example, adds some configurations to represent the various classpaths it needs.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T075320Z" creationid="haohang" creationdate="20150722T075320Z">
        <seg>例如，Java 插件会添加一些配置来表示它所需要的不同的类路径。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Java source directories may only contain Java source code.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T074839Z" creationid="msdx" creationdate="20150429T074805Z">
        <seg>Java 源目录只能包含 Java 源代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Java source files of this source set.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T051700Z" creationid="Administrator" creationdate="20150427T051700Z">
        <seg>该源集的Java源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Jetty Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150514T151821Z" creationid="msdx" creationdate="20150514T151821Z">
        <seg>Jetty 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Jetty plugin defines the following convention properties:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T151004Z" creationid="msdx" creationdate="20150504T151004Z">
        <seg>Jetty 插件定义了下列公约属性：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Jetty plugin defines the following tasks:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T150201Z" creationid="msdx" creationdate="20150504T150201Z">
        <seg>Jetty 插件定义了以下任务：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Jetty plugin does not define any dependency configurations.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T150946Z" creationid="msdx" creationdate="20150504T150946Z">
        <seg>Jetty 插件并不定义任何依赖配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Jetty plugin extends the War plugin to add tasks which allow you to deploy your web application to a Jetty web container embedded in the build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T150123Z" creationid="msdx" creationdate="20150504T143907Z">
        <seg>Jetty 插件继承自 War 插件，并添加一些任务，这些任务可以让你在构建时部署你的 web 应用程序到一个 Jetty 的 web 嵌入式容器中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Jetty plugin extends the War plugin to allow you to deploy your web application to an embedded Jetty web container.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T084854Z" creationid="msdx" creationdate="20141030T084822Z">
        <seg>Jetty插件扩展了War插件以允许你部署你的web应用程序到嵌入式Jetty web窗口中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Jetty plugin uses the same layout as the War plugin.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T150918Z" creationid="msdx" creationdate="20150504T150918Z">
        <seg>Jetty 插件使用 和 War 插件相同的布局。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Maven Central repository can be down or has a very long response time.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151130T033010Z" creationid="haohang" creationdate="20151130T033010Z">
        <seg>Maven 中央存储库可能会下线，或者响应时间很长。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Maven Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070259Z" creationid="95" creationdate="20170416T070259Z">
        <seg>Maven 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Maven conversion implementation was inspired by the <bpt i="0" x="0">&lt;a0&gt;</bpt>maven2gradle tool<ept i="0">&lt;/a0&gt;</ept> that was originally developed by Gradle community members.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T092633Z" creationid="haohang" creationdate="20150707T092633Z">
        <seg>Maven 转换实现最初由 Gradle 社区成员开发的<bpt i="0" x="0">&lt;a0&gt;</bpt>maven2gradle tool<ept i="0">&lt;/a0&gt;</ept>启发。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Maven dependency management has the notion of classifiers.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150731T100741Z" creationid="haohang" creationdate="20150731T100741Z">
        <seg>Maven 依赖管理有 classifier 的概念。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Maven plugin adds an <bpt i="0" x="0">&lt;c0&gt;</bpt>install<ept i="0">&lt;/c0&gt;</ept> task to your project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T142735Z" creationid="95" creationdate="20160105T142735Z">
        <seg>Maven 插件将<bpt i="0" x="0">&lt;c0&gt;</bpt>install<ept i="0">&lt;/c0&gt;</ept>任务添加到你的项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Maven plugin adds support for deploying artifacts to Maven repositories.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151228T151842Z" creationid="95" creationdate="20151228T151842Z">
        <seg>Maven 插件添加了将项目部署到 Maven 仓库的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Maven plugin configures the default mapping between the Gradle configurations added by the Java and War plugin and the Maven scopes.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T145031Z" creationid="95" creationdate="20160106T144848Z">
        <seg>Maven 插件配置了由Java插件和War插件添加的Gradle configurations 与Maven scopes之间的默认映射。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Maven plugin defines the following convention properties:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151228T152506Z" creationid="95" creationdate="20151228T152506Z">
        <seg>Maven 插件定义了下列约定属性：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Maven plugin defines the following tasks:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151228T151912Z" creationid="95" creationdate="20151228T151912Z">
        <seg>Maven 插件定义了以下任务：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Maven plugin does not define any dependency configurations.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151228T152446Z" creationid="95" creationdate="20151228T152446Z">
        <seg>Maven 插件不定义任何依赖配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The OSGi Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065744Z" creationid="95" creationdate="20170416T065744Z">
        <seg>OSGi 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The OSGi plugin adds the following convention object: <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>OsgiPluginConvention<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150526T004537Z" creationid="haohang" creationdate="20150526T004537Z">
        <seg>OSGi 插件添加了下列约定对象： <bpt i="0" x="0">&lt;a0&gt;</bpt> <bpt i="1" x="1">&lt;c1&gt;</bpt>OsgiPluginConvention<ept i="1">&lt;/c1&gt;</ept> <ept i="0">&lt;/a0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The OSGi plugin adds the following methods.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150526T004614Z" creationid="haohang" creationdate="20150526T004614Z">
        <seg>OSGi 插件添加了以下方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The OSGi plugin does not add any convention properties to the project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150526T004558Z" creationid="haohang" creationdate="20150526T004558Z">
        <seg>OSGi 插件没有向 project 添加任何的公约属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The OSGi plugin makes heavy use of Peter Kriens <bpt i="0" x="0">&lt;a0&gt;</bpt>BND tool<ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150526T004232Z" creationid="haohang" creationdate="20150526T004232Z">
        <seg>OSGi 插件使 Peter Kriens <bpt i="0" x="0">&lt;a0&gt;</bpt>BND tool<ept i="0">&lt;/a0&gt;</ept> 大量使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The OSGi plugin provides a factory method to create an <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>OsgiManifest<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> object.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150526T003850Z" creationid="haohang" creationdate="20150526T003850Z">
        <seg>OSGi 插件提供了工厂方法来创建一个<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>OsgiManifest<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The PMD Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065451Z" creationid="95" creationdate="20170416T065451Z">
        <seg>PMD 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The PMD libraries to use</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T135718Z" creationid="msdx" creationdate="20150505T135718Z">
        <seg>使用的 PMD 库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The PMD plugin adds the following dependencies to tasks defined by the Java plugin.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T135615Z" creationid="msdx" creationdate="20150505T135615Z">
        <seg>PMD 插件向 Java 插件所加入的任务添加了以下的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The PMD plugin adds the following dependency configurations:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T135659Z" creationid="msdx" creationdate="20150505T135659Z">
        <seg>PMD 插件添加了下列的依赖配置：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The PMD plugin adds the following tasks to the project:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T135533Z" creationid="msdx" creationdate="20150505T135533Z">
        <seg>PMD 插件向project 中添加了以下任务：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The PMD plugin performs quality checks on your project's Java source files using <bpt i="0" x="0">&lt;a0&gt;</bpt>PMD<ept i="0">&lt;/a0&gt;</ept> and generates reports from these checks.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T135447Z" creationid="msdx" creationdate="20150505T135447Z">
        <seg>PMD 插件使用<bpt i="0" x="0">&lt;a0&gt;</bpt>PMD<ept i="0">&lt;/a0&gt;</ept>对项目的 Java 源文件执行质量检查，并从检查结果中生成报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The POM file in Maven Central for the ant-commons-net task does not provide the right information for this use case.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161212T155841Z" creationid="95" creationdate="20161212T155841Z">
        <seg>在这个用例中，针对 ant-commons-net 任务的Maven中央仓的POM没有提供正确的信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The POM files of many projects have wrong information (as one example, the POM of <bpt i="0" x="0">&lt;c0&gt;</bpt>commons-httpclient-3.0<ept i="0">&lt;/c0&gt;</ept> declares JUnit as a runtime dependency).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151130T033117Z" creationid="haohang" creationdate="20151130T033117Z">
        <seg>许多项目的 POM 文件会有错误的信息（比如，<bpt i="0" x="0">&lt;c0&gt;</bpt>commons-httpclient-3.0<ept i="0">&lt;/c0&gt;</ept>的POM文件声明了 JUnit 是运行时依赖）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Project API</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T164847Z" creationid="msdx" creationdate="20141109T164847Z">
        <seg>Project API</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Project API also provides a property for accessing the subprojects only.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160527T162221Z" creationid="95" creationdate="20160527T162221Z">
        <seg>Project API 还提供了一个属性只用于访问子项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Project API provides a method called <bpt i="0" x="0">&lt;c0&gt;</bpt>project()<ept i="0">&lt;/c0&gt;</ept>, which takes a path as an argument and returns the Project object for this path.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160526T154755Z" creationid="95" creationdate="20160526T154755Z">
        <seg>Project API 提供了一个叫做<bpt i="0" x="0">&lt;c0&gt;</bpt>project()<ept i="0">&lt;/c0&gt;</ept>的方法，它将路径作为参数，返回此路径的Project 对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Project API provides a property <bpt i="0" x="0">&lt;c0&gt;</bpt>allprojects<ept i="0">&lt;/c0&gt;</ept> which returns a list with the current project and all its subprojects underneath it.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160527T161425Z" creationid="95" creationdate="20160527T161425Z">
        <seg>Project API 提供了一个<bpt i="0" x="0">&lt;c0&gt;</bpt>allprojects<ept i="0">&lt;/c0&gt;</ept> 属性，它返回一个当前项目的list，该项目的所有子项目都在这个list中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Project Report Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065912Z" creationid="95" creationdate="20170416T065912Z">
        <seg>Project 报告插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Project report plugin adds some tasks to your project which generate reports containing useful information about your build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150626T095308Z" creationid="haohang" creationdate="20150626T095308Z">
        <seg>项目报告插件将一些任务添加到项目中，用于生成包含有关构建的有用信息的报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Resin servlet container allows us, to let such a distribution point to a base installation of the servlet container.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160727T055012Z" creationid="haohang" creationdate="20160727T054715Z">
        <seg>Resin servlet 容器能允许我们让这样的一个分发指向一个基本安装的servlet容器中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Scala Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131946Z" creationid="msdx" creationdate="20150509T131946Z">
        <seg>Scala 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Scala plugin adds a configuration named <bpt i="0" x="0">&lt;c0&gt;</bpt>zinc<ept i="0">&lt;/c0&gt;</ept> to resolve the Zinc library and its dependencies.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T154715Z" creationid="msdx" creationdate="20150501T154715Z">
        <seg>Scala 插件添加了一个名为<bpt i="0" x="0">&lt;c0&gt;</bpt>zinc<ept i="0">&lt;/c0&gt;</ept>的配置，以解析 Zinc 库及其依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Scala plugin adds the following convention properties to each source set in the project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150430T154737Z" creationid="msdx" creationdate="20150430T154737Z">
        <seg>Scala 的插件向 project 的每一个source set 添加了下列的公约属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Scala plugin adds the following dependencies to tasks added by the Java plugin.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T145533Z" creationid="msdx" creationdate="20150429T145533Z">
        <seg>Scala 插件向 Java 插件所加入的 tasks 添加了以下的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Scala plugin adds the following tasks to the project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T145404Z" creationid="msdx" creationdate="20150429T145404Z">
        <seg>Scala 的插件向project 中添加了以下任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Scala plugin also modifies some source set properties:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150430T154921Z" creationid="msdx" creationdate="20150430T154921Z">
        <seg>Scala 的插件还修改了一些 source set 的属性：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Scala plugin assumes the project layout shown below.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T152500Z" creationid="msdx" creationdate="20150429T152500Z">
        <seg>Scala 插件会假定如下所示的项目布局。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Scala plugin does not add any convention properties to the project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150430T154713Z" creationid="msdx" creationdate="20150430T154701Z">
        <seg>Scala 插件没有向 project 添加任何的公约属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Scala plugin extends the Java plugin to add support for Scala projects.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T144817Z" creationid="msdx" creationdate="20150429T144422Z">
        <seg>Scala 的插件继承自 Java 插件并添加了对 Scala 项目的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Scala plugin includes support for <bpt i="0" x="0">&lt;a0&gt;</bpt>fsc<ept i="0">&lt;/a0&gt;</ept>, the Fast Scala Compiler.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150430T155132Z" creationid="msdx" creationdate="20150430T155117Z">
        <seg>Scala 插件包含了对<bpt i="0" x="0">&lt;a0&gt;</bpt>fsc<ept i="0">&lt;/a0&gt;</ept>，即 Fast Scala Compiler 的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Scala plugin now supports incremental compilation by integrating with <bpt i="0" x="0">&lt;a0&gt;</bpt>Zinc<ept i="0">&lt;/a0&gt;</ept>, a standalone version of <bpt i="1" x="1">&lt;a1&gt;</bpt>sbt<ept i="1">&lt;/a1&gt;</ept>'s incremental Scala compiler.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T154142Z" creationid="msdx" creationdate="20150501T154142Z">
        <seg>Scala 插件现在通过集成 <bpt i="0" x="0">&lt;a0&gt;</bpt>Zinc<ept i="0">&lt;/a0&gt;</ept> 来支持增量编译， 它是<bpt i="1" x="1">&lt;a1&gt;</bpt>sbt<ept i="1">&lt;/a1&gt;</ept>增量 Scala 编译器的一个单机版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Scala source files of this source set.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150430T154808Z" creationid="msdx" creationdate="20150430T154808Z">
        <seg>该source set 中的 Scala 源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Script API</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T055344Z" creationid="msdx" creationdate="20141109T164853Z">
        <seg>Script API</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Setup tab allows configuration of some general settings.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T065346Z" creationid="msdx" creationdate="20141105T160648Z">
        <seg>设置（Setup）选项卡允许你配置一些常规的设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Signing Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070321Z" creationid="95" creationdate="20170416T070321Z">
        <seg>签名插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Signing plugin provides a DSL that allows you to specify the tasks and/or configurations that should be signed.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160108T153441Z" creationid="95" creationdate="20160108T153441Z">
        <seg>Signing 插件提供了一个DSL，它允许你指定应签名的任务及配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Sonar Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065603Z" creationid="95" creationdate="20170416T065603Z">
        <seg>Sonar 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Sonar Runner Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065653Z" creationid="95" creationdate="20170416T065653Z">
        <seg>Sonar Runner插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Sonar Runner is capable of analyzing whole project hierarchies at once.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150514T152120Z" creationid="msdx" creationdate="20150514T152120Z">
        <seg>Sonar Runner 插件能够一次分析整个项目的层次结构。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Sonar Runner plugin adds a <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>SonarRunner<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> extension to the project, which allows to configure the Sonar Runner via key/value pairs known as <bpt i="2" x="2">&lt;e2&gt;</bpt>Sonar properties<ept i="2">&lt;/e2&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T062827Z" creationid="msdx" creationdate="20150513T062621Z">
        <seg>Sonar Runner 插件向 project 添加了一个<bpt i="0" x="0">&lt;a0&gt;</bpt> <bpt i="1" x="1">&lt;c1&gt;</bpt>SonarRunner<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>扩展，它允许通过被称为 <bpt i="2" x="2">&lt;e2&gt;</bpt>Sonar 属性<ept i="2">&lt;/e2&gt;</ept> 的键/值对配置 Sonar Runner。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Sonar Runner plugin adds the following tasks to the project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150525T234952Z" creationid="haohang" creationdate="20150525T234952Z">
        <seg>Sonar Runner插件向 project 中添加了以下任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Sonar Runner plugin is the successor to the <bpt i="0" x="0">&lt;a0&gt;</bpt>Sonar Plugin<ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T060255Z" creationid="msdx" creationdate="20150513T060255Z">
        <seg>Sonar Runner 插件是<bpt i="0" x="0">&lt;a0&gt;</bpt>Sonar 插件<ept i="0">&lt;/a0&gt;</ept>的继任者。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Sonar Runner plugin leverages information contained in Gradle's object model to provide smart defaults for many of the standard Sonar properties.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T064519Z" creationid="msdx" creationdate="20150513T064519Z">
        <seg>Sonar Runner 插件利用 Gradle 的对象模型所包含的信息，提供了许多标准的 Sonar 属性的智能默认值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Sonar Runner plugin provides integration with <bpt i="0" x="0">&lt;a0&gt;</bpt>Sonar<ept i="0">&lt;/a0&gt;</ept>, a web-based platform for monitoring code quality.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T054701Z" creationid="msdx" creationdate="20150513T054701Z">
        <seg>Sonar Runner 插件提供了对 <bpt i="0" x="0">&lt;a0&gt;</bpt>Sonar<ept i="0">&lt;/a0&gt;</ept>，一个基于 web 的代码质量监测平台的集成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Sonar plugin adds the following tasks to the project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T054202Z" creationid="msdx" creationdate="20150513T054202Z">
        <seg>Sonar 插件向project 中添加了以下任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Sonar plugin is capable of analyzing a whole project hierarchy at once.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T084941Z" creationid="msdx" creationdate="20150510T144133Z">
        <seg>Sonar 插件能够一次分析整个项目的层次结构。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Sonar plugin offers hooks to post-process Sonar properties before they get passed to the code analyzer.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T100604Z" creationid="msdx" creationdate="20150512T100604Z">
        <seg>Sonar 插件提供了hooks，用于 Sonar 属性传给代码分析器前的后置处理。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Sonar plugin provides integration with <bpt i="0" x="0">&lt;a0&gt;</bpt>Sonar<ept i="0">&lt;/a0&gt;</ept>, a web-based platform for monitoring code quality.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150510T142730Z" creationid="msdx" creationdate="20150508T131726Z">
        <seg>Sonar 插件提供了对 <bpt i="0" x="0">&lt;a0&gt;</bpt>Sonar<ept i="0">&lt;/a0&gt;</ept>，一个基于 web 的代码质量监测平台的集成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Sonar runner plugin is currently <bpt i="0" x="0">&lt;a0&gt;</bpt>incubating<ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T054640Z" creationid="msdx" creationdate="20150513T054337Z">
        <seg>Sonar runner 插件是目前仍是<bpt i="0" x="0">&lt;a0&gt;</bpt>孵化<ept i="0">&lt;/a0&gt;</ept>状态。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The String parameter is used as a description for the rule.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T065059Z" creationid="msdx" creationdate="20141111T065059Z">
        <seg>这个字符串参数被用作这条规则的描述。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The TCP port which Jetty should listen for HTTP requests on.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T151206Z" creationid="msdx" creationdate="20150504T151128Z">
        <seg>Jetty 监听 HTTP 请求的 TCP 端口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The TCP port which Jetty should listen for admin requests on.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T151228Z" creationid="msdx" creationdate="20150504T151228Z">
        <seg>Jetty 监听 admin 请求的 TCP 端口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Task Tree context menu provides the following options:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T153818Z" creationid="msdx" creationdate="20141105T153652Z">
        <seg>任务树的上下文菜单会提供以下选项：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Task Tree shows a hierarchical display of all projects and their tasks.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T151029Z" creationid="msdx" creationdate="20141105T151029Z">
        <seg>任务树显示了所有项目和它们的任务的层次结构。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The TestNG framework has a quite similar concept.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T082923Z" creationid="msdx" creationdate="20150428T082907Z">
        <seg>TestNG 框架有一个非常相似的概念。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Tooling API (see <bpt i="0" x="0">&lt;a0&gt;</bpt>Chapter 62, <bpt i="1" x="1">&lt;i1&gt;</bpt>Embedding Gradle<ept i="1">&lt;/i1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>) uses the daemon all the time, e.g. you cannot officially use the Tooling API without the daemon.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141117T142652Z" creationid="msdx" creationdate="20141117T142441Z">
        <seg>Tooling API (参见 <bpt i="0" x="0">&lt;a0&gt;</bpt>第六十二章， <bpt i="1" x="1">&lt;i1&gt;</bpt>嵌入 Gradle <ept i="1">&lt;/i1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>) 在整个过程当中都使用守护进程。如，你无法在没有守护进程时正式地使用 Tooling API。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Tooling API is the official and recommended way to embed Gradle.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T154835Z" creationid="95" creationdate="20161218T154835Z">
        <seg>Tooling API 是官方及推荐的嵌入Gradle 的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Tooling API uses the daemon all the time, e.g. you cannot officially use the Tooling API without the daemon.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T155115Z" creationid="95" creationdate="20161218T154958Z">
        <seg>Tooling API 在整个过程中都会使用守护进程，举例来说，没有守护进程，你不能正式地使用Tooling API。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The UI displays 4 tabs along the top and an output window along the bottom.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T150940Z" creationid="msdx" creationdate="20141105T150825Z">
        <seg>在Gradle的用户界面（UI）中，上面是4个选项卡，下面则是输出窗口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The War Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T132156Z" creationid="msdx" creationdate="20150509T132156Z">
        <seg>War 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The War plugin adds the following dependencies to tasks added by the Java plugin.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T090014Z" creationid="msdx" creationdate="20150503T090014Z">
        <seg>War 插件向 Java 插件所加入的 tasks 添加了以下的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The War plugin adds the following tasks to the project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T085918Z" creationid="msdx" creationdate="20150503T085918Z">
        <seg>War 插件向project 中添加了以下任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The War plugin adds two dependency configurations: <bpt i="0" x="0">&lt;c0&gt;</bpt>providedCompile<ept i="0">&lt;/c0&gt;</ept> and <bpt i="1" x="1">&lt;c1&gt;</bpt>providedRuntime<ept i="1">&lt;/c1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T090223Z" creationid="msdx" creationdate="20150503T090151Z">
        <seg>War 插件添加了两个依赖配置： <bpt i="0" x="0">&lt;c0&gt;</bpt>providedCompile<ept i="0">&lt;/c0&gt;</ept>和<bpt i="1" x="1">&lt;c1&gt;</bpt>providedRuntime<ept i="1">&lt;/c1&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The War plugin extends the Java plugin to add support for assembling web application WAR files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T085739Z" creationid="msdx" creationdate="20150503T082705Z">
        <seg>War 的插件继承自 Java 插件并添加了对组装 web 应用程序的 WAR 文件的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The War plugin extends the Java plugin to build a WAR file for your project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T084722Z" creationid="msdx" creationdate="20141030T084722Z">
        <seg>War插件扩展了Java插件来为你的项目构建WAR文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Wrapper task adds appropriate file permissions to allow the execution for the gradlew *NIX command.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T040800Z" creationid="95" creationdate="20161218T040800Z">
        <seg>Wrapper 任务将添加相应的文件权限，以允许执行 gradlew *NIX 命令。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The Zinc based compiler (<bpt i="4" x="4">&lt;c4&gt;</bpt>scalaCompileOptions.useAnt = false<ept i="4">&lt;/c4&gt;</ept>) will leverage the Gradle compiler daemon, and does so by default.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150430T155946Z" creationid="msdx" creationdate="20150430T155946Z">
        <seg>基于 Zinc 的编译器 (<bpt i="4" x="4">&lt;c4&gt;</bpt>scalaCompileOptions.useAnt = false<ept i="4">&lt;/c4&gt;</ept>) 将利用 Gradle 编译器守护进程，且默认情况下也是这样。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The ability to execute the Sonar Runner via a regular Gradle task makes it available anywhere Gradle is available (developer build, CI server, etc.), without the need to download, setup, and maintain a Sonar Runner installation.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T055822Z" creationid="msdx" creationdate="20150513T055822Z">
        <seg>可以通过一个正规的 Gradle 任务来执行 Sonar Runner，这使得在任何 Gradle 可用的地方，它都可以用（开发人员构建，CI 服务器等），而无需下载，安装，和维护 Sonar Runner 的安装。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The ability to publish in the Ivy format is provided by the “<bpt i="0" x="0">&lt;c0&gt;</bpt>ivy-publish<ept i="0">&lt;/c0&gt;</ept>” plugin.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170211T022602Z" creationid="95" creationdate="20170211T013017Z">
        <seg>这种使用 Ivy 格式发布的能力是由 “<bpt i="0" x="0">&lt;c0&gt;</bpt>ivy-publish<ept i="0">&lt;/c0&gt;</ept>”插件提供的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The ability to publish in the Maven format is provided by the “<bpt i="0" x="0">&lt;c0&gt;</bpt>maven-publish<ept i="0">&lt;/c0&gt;</ept>” plugin.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170412T152513Z" creationid="95" creationdate="20170412T152513Z">
        <seg>使用Maven格式发布的功能，是由 “<bpt i="0" x="0">&lt;c0&gt;</bpt>maven-publish<ept i="0">&lt;/c0&gt;</ept>” 插件提供的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The absolute path of the generated archive.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T155940Z" creationid="msdx" creationdate="20141113T155940Z">
        <seg>生成的归档文件的绝对路径。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The absolute path of the project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T044253Z" creationid="msdx" creationdate="20141108T044253Z">
        <seg>项目的绝对路径。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The absolute path to the secret key ring file containing your private key.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160108T151635Z" creationid="95" creationdate="20160108T151635Z">
        <seg>指向包含了你的私钥的密钥环文件的绝对路径。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The answer is you need to provide a properties file in the jar's <bpt i="2" x="2">&lt;c2&gt;</bpt>META-INF/gradle-plugins<ept i="2">&lt;/c2&gt;</ept> directory that matches the name of your plugin.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160828T133436Z" creationid="95" creationdate="20160828T133436Z">
        <seg>答案是你需要在jar文件里的<bpt i="2" x="2">&lt;c2&gt;</bpt>META-INF/gradle-plugins<ept i="2">&lt;/c2&gt;</ept>目录中提供一个属性文件，让它与你的插件名相匹配。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The appendix portion of the archive file name.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T160346Z" creationid="msdx" creationdate="20141113T160311Z">
        <seg>归档文件的名称中的附录部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The application deployment location within the Jetty container.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T151121Z" creationid="msdx" creationdate="20150504T151121Z">
        <seg>在 Jetty 容器里面的应用程序部署位置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The application of plugins is <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>idempotent<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141122T162818Z" creationid="msdx" creationdate="20141122T162706Z">
        <seg>插件的应用是<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>幂等的<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The application plugin adds some properties to the project, which you can use to configure its behaviour.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150702T105251Z" creationid="haohang" creationdate="20150702T105251Z">
        <seg>该应用程序插件将一些属性添加到 project 中，以用于配置其行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The appropriate groovy libraries will be added to the WAR file for you.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T090909Z" creationid="msdx" creationdate="20141030T090852Z">
        <seg>它将为你把适当的groovy库添加到WAR文件中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The archive must also have been produced by a <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Zip<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>, <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>Jar<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>, <bpt i="4" x="4">&lt;a4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>War<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/a4&gt;</ept>, <bpt i="6" x="6">&lt;a6&gt;</bpt><bpt i="7" x="7">&lt;c7&gt;</bpt>Ear<ept i="7">&lt;/c7&gt;</ept><ept i="6">&lt;/a6&gt;</ept> task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170109T130319Z" creationid="95" creationdate="20170109T130319Z">
        <seg>同时，这个归档必须由 <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Zip<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>， <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>Jar<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>， <bpt i="4" x="4">&lt;a4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>War<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/a4&gt;</ept>或<bpt i="6" x="6">&lt;a6&gt;</bpt><bpt i="7" x="7">&lt;c7&gt;</bpt>Ear<ept i="7">&lt;/c7&gt;</ept><ept i="6">&lt;/a6&gt;</ept> 任务产生。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The archive tasks all work exactly the same way as the <bpt i="0" x="0">&lt;c0&gt;</bpt>Copy<ept i="0">&lt;/c0&gt;</ept> task, and implement the same <bpt i="1" x="1">&lt;c1&gt;</bpt>CopySpec<ept i="1">&lt;/c1&gt;</ept> interface.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T150542Z" creationid="msdx" creationdate="20141113T150008Z">
        <seg>归档任务与<bpt i="0" x="0">&lt;c0&gt;</bpt>Copy<ept i="0">&lt;/c0&gt;</ept>任务的工作方式一样，并且实现了相同的<bpt i="1" x="1">&lt;c1&gt;</bpt>CopySpec<ept i="1">&lt;/c1&gt;</ept>接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The attributes of the Ant task are passed as Map parameters to the method.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141115T153223Z" creationid="msdx" creationdate="20141115T153223Z">
        <seg>Ant 任务的属性会作为 Map 参数传给该方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The attributes of the generated <bpt i="0" x="0">&lt;c0&gt;</bpt>POM<ept i="0">&lt;/c0&gt;</ept> file will contain identity values derived from the following project properties:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T032348Z" creationid="95" creationdate="20170412T155023Z">
        <seg>生成的 <bpt i="0" x="0">&lt;c0&gt;</bpt>POM<ept i="0">&lt;/c0&gt;</ept> 文件的属性中，包含了从以下项目属性中导出来的标识值：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The auto search for a settings file does only work for multi-project builds with a physical hierarchical or flat layout.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T075457Z" creationid="haohang" creationdate="20160519T075401Z">
        <seg>自动搜索设置文件只适合具有物理上的层次结构或平面的布局的多项目构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The available protocols and the corresponding libraries are listed in <bpt i="1" x="1">&lt;a1&gt;</bpt>Table 52.3, “Protocol jars for Maven deployment”<ept i="1">&lt;/a1&gt;</ept> (those libraries have again transitive dependencies which have transitive dependencies).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T134817Z" creationid="95" creationdate="20160105T134524Z">
        <seg><bpt i="1" x="1">&lt;a1&gt;</bpt>表 52.3. “Maven 部署的协议jar”<ept i="1">&lt;/a1&gt;</ept>列出了可用的协议以及相应的库（这些库又有具有传递依赖，而这些依赖也有其自己的传递依赖）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The base file name of the generated archive</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T155926Z" creationid="msdx" creationdate="20141113T155926Z">
        <seg>生成的归档文件的基本文件名</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The base name portion of the archive file name.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T160356Z" creationid="msdx" creationdate="20141113T160252Z">
        <seg>归档文件的名称中的基本名称部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The basename to use for archives, such as JAR or ZIP files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T050020Z" creationid="Administrator" creationdate="20150427T050020Z">
        <seg>像JAR或ZIP文件这样的构件的basename</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The basic idea is that the gradle command forks a daemon process, which performs the actual build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141117T151625Z" creationid="msdx" creationdate="20141117T151625Z">
        <seg>基本的思想是， gradle 命令会fork一个守护进程，用于执行实际的构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The basic rule behind Gradle's behavior is simple.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160530T152222Z" creationid="95" creationdate="20160530T152100Z">
        <seg>Gradle 的行为背后的基本规则是很简单的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The behaviour and properties of an enhanced task is defined by the task's class.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T143458Z" creationid="95" creationdate="20160814T143458Z">
        <seg>一个增强型的任务的行为和属性是通过这个任务的类定义的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The build announcements plugin is currently <bpt i="0" x="0">&lt;a0&gt;</bpt>incubating<ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T091419Z" creationid="haohang" creationdate="20150628T091419Z">
        <seg>构建公告插件目前仍然是<bpt i="0" x="0">&lt;a0&gt;</bpt>孵化<ept i="0">&lt;/a0&gt;</ept>状态。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The build announcements plugin uses the <bpt i="0" x="0">&lt;a0&gt;</bpt>announce<ept i="0">&lt;/a0&gt;</ept> plugin to send local announcements on important events in the build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T091555Z" creationid="haohang" creationdate="20150628T091555Z">
        <seg>构建公告插件使用 <bpt i="0" x="0">&lt;a0&gt;</bpt>announce<ept i="0">&lt;/a0&gt;</ept> 插件发送构建过程中一些重要事件上的本地公告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The build continues with executing the next task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T054745Z" creationid="msdx" creationdate="20141111T054745Z">
        <seg>构建会继续执行下一个任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The build daemon could maintain a process with Groovy and/or Scala already loaded.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141117T151116Z" creationid="msdx" creationdate="20141117T151116Z">
        <seg>构建守护进程可以维持一个已下载的 Groovy 和 （或） Scala 进程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The build dashboard plugin is currently <bpt i="0" x="0">&lt;a0&gt;</bpt>incubating<ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150713T095022Z" creationid="haohang" creationdate="20150710T013224Z">
        <seg>Build Dashboard 插件是目前是<bpt i="0" x="0">&lt;a0&gt;</bpt>孵化中<ept i="0">&lt;/a0&gt;</ept>状态。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The build is executed from the <bpt i="0" x="0">&lt;c0&gt;</bpt>tropicalFish<ept i="0">&lt;/c0&gt;</ept> project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160715T091820Z" creationid="haohang" creationdate="20160715T091811Z">
        <seg>这个构建是从<bpt i="0" x="0">&lt;c0&gt;</bpt>tropicalFish<ept i="0">&lt;/c0&gt;</ept>项目执行的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The build is executed from the <bpt i="0" x="0">&lt;c0&gt;</bpt>water<ept i="0">&lt;/c0&gt;</ept> project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160715T090813Z" creationid="haohang" creationdate="20160715T080101Z">
        <seg>这个构建从<bpt i="0" x="0">&lt;c0&gt;</bpt>water<ept i="0">&lt;/c0&gt;</ept>项目执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The build script is executed against the project object that was created during the initialization phase.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160520T123459Z" creationid="95" creationdate="20160520T123459Z">
        <seg>构建脚本会针对在初始化阶段期间创建的 project 对象执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The build script is written in Groovy, after all, and Groovy provides you with lots of excellent ways to organize code.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T043821Z" creationid="95" creationdate="20161211T043821Z">
        <seg>别忘了构建脚本是用Groovy来写的，Groovy会向你提供许多优秀的方式来组织代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The build scripts of <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>all<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> projects which are part of the build are executed.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160518T150726Z" creationid="95" creationdate="20160518T150726Z">
        <seg>属于构建的<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>所有<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> projects 的构建脚本都会被执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The build that comparisons are being made against, typically the build in its “current” state.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161228T144341Z" creationid="95" creationdate="20161228T144341Z">
        <seg>正在进行比较的构建，通常是处于“当前”状态的构建。
</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The build that is being compared to the source build, typically the “proposed” build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161228T135306Z" creationid="95" creationdate="20161228T135206Z">
        <seg>与源构建进行比较的构建，通常是“建议”的构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The capability to configure a project build from any build script we call <bpt i="1" x="1">&lt;e1&gt;</bpt>cross project configuration<ept i="1">&lt;/e1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160526T154952Z" creationid="95" creationdate="20160526T154952Z">
        <seg>而这种从其他构建脚本配置一个项目构建的能力，我们叫做 <bpt i="1" x="1">&lt;e1&gt;</bpt>交叉项目配置<ept i="1">&lt;/e1&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The classes in the classes dir are analyzed regarding there package dependencies and the packages they expose.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150526T064017Z" creationid="haohang" creationdate="20150526T004845Z">
        <seg>在classes 目录下的类文件会被分析出关于它们的包的依赖，以及它们所公布的包名。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The classifier portion of the archive file name,</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T160417Z" creationid="msdx" creationdate="20141113T160417Z">
        <seg>归档文件的名称中的分类部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The classpath to use when compiling the source files of this source set.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T051645Z" creationid="Administrator" creationdate="20150427T051601Z">
        <seg>该类路径在编译该源集的源文件时使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The classpath to use when executing the classes of this source set.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T051635Z" creationid="Administrator" creationdate="20150427T051635Z">
        <seg>该类路径在执行该源集的类时使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The closure is passed the task as a parameter, and should return true if the task should execute and false if the task should be skipped.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T020824Z" creationid="msdx" creationdate="20141111T020824Z">
        <seg>闭包会作为一个参数传给任务，并且任务应该执行时返回true，或任务应该跳过时返回false。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The closure passed to the <bpt i="0" x="0">&lt;c0&gt;</bpt>buildscript()<ept i="0">&lt;/c0&gt;</ept> method configures a <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>ScriptHandler<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept> instance.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161212T153832Z" creationid="95" creationdate="20161212T153757Z">
        <seg>这个传给<bpt i="0" x="0">&lt;c0&gt;</bpt>buildscript()<ept i="0">&lt;/c0&gt;</ept> 方法的闭包配置了一个<bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>ScriptHandler<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept> 实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The closure passed to the <bpt i="0" x="0">&lt;c0&gt;</bpt>initscript()<ept i="0">&lt;/c0&gt;</ept> method configures a <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>ScriptHandler<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept> instance.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161215T143809Z" creationid="95" creationdate="20161215T143809Z">
        <seg>这个传给<bpt i="0" x="0">&lt;c0&gt;</bpt>initscript()<ept i="0">&lt;/c0&gt;</ept> 方法的闭包配置了一个<bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>ScriptHandler<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept> 实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The closure should return a single <bpt i="0" x="0">&lt;c0&gt;</bpt>Task<ept i="0">&lt;/c0&gt;</ept> or collection of <bpt i="1" x="1">&lt;c1&gt;</bpt>Task<ept i="1">&lt;/c1&gt;</ept> objects, which are then treated as dependencies of the task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T123500Z" creationid="msdx" creationdate="20141110T123437Z">
        <seg>这个闭包应该返回一个 <bpt i="0" x="0">&lt;c0&gt;</bpt>Task<ept i="0">&lt;/c0&gt;</ept> 对象或是<bpt i="1" x="1">&lt;c1&gt;</bpt>Task<ept i="1">&lt;/c1&gt;</ept> 对象的集合，返回值会被作为这个任务的依赖项。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The closure you pass to the configurations object is applied against its API.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T075735Z" creationid="haohang" creationdate="20150722T075735Z">
        <seg>你传给这个 configurations 对象的闭包会通过它对应的 API 被应用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The command <bpt i="0" x="0">&lt;c0&gt;</bpt>evaluationDependsOn<ept i="0">&lt;/c0&gt;</ept> triggers the evaluation of <bpt i="1" x="1">&lt;c1&gt;</bpt>producer<ept i="1">&lt;/c1&gt;</ept> <bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;e3&gt;</bpt>before<ept i="3">&lt;/e3&gt;</ept><ept i="2">&lt;/s2&gt;</ept> <bpt i="4" x="4">&lt;c4&gt;</bpt>consumer<ept i="4">&lt;/c4&gt;</ept> is evaluated.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T085643Z" creationid="haohang" creationdate="20160718T083052Z">
        <seg>命令<bpt i="0" x="0">&lt;c0&gt;</bpt>evaluationDependsOn<ept i="0">&lt;/c0&gt;</ept>触发了<bpt i="1" x="1">&lt;c1&gt;</bpt>producer<ept i="1">&lt;/c1&gt;</ept><bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;e3&gt;</bpt>在<ept i="3">&lt;/e3&gt;</ept><ept i="2">&lt;/s2&gt;</ept><bpt i="4" x="4">&lt;c4&gt;</bpt>consumer<ept i="4">&lt;/c4&gt;</ept>之前评估。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The command line option can appear more than once, each time adding another init script.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161214T152054Z" creationid="95" creationdate="20161214T152054Z">
        <seg>这个命令行选项可以出现多次，每次在其后面添加另一个init 脚本.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The command line option is <bpt i="0" x="0">&lt;c0&gt;</bpt>-I<ept i="0">&lt;/c0&gt;</ept> or <bpt i="1" x="1">&lt;c1&gt;</bpt>--init-script<ept i="1">&lt;/c1&gt;</ept> followed by the path to the script.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161214T143531Z" creationid="95" creationdate="20161214T143531Z">
        <seg>该命令行选项是<bpt i="0" x="0">&lt;c0&gt;</bpt>-I<ept i="0">&lt;/c0&gt;</ept>或<bpt i="1" x="1">&lt;c1&gt;</bpt>--init-script<ept i="1">&lt;/c1&gt;</ept> ，后面跟上该脚本的路径。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The comparison process produces a HTML report outlining which outcomes were found to be identical and identifying the differences between non-identical outcomes.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161219T151214Z" creationid="95" creationdate="20161219T151214Z">
        <seg>这个比较过程会生成一个HTML的报告，概述发现哪些结果是相同的，以及识别不完全相同的结果之间的差异。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The compile task delegates to Ant's javac task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T135401Z" creationid="Administrator" creationdate="20150427T135401Z">
        <seg>compile任务委派了Ant 的 javac 任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The compile tasks use joint compilation for these directories, which means they can contain a mixture of java and groovy source files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T064548Z" creationid="msdx" creationdate="20141030T064131Z">
        <seg>这些编译任务对这些目录使用了联合编译，这意味着它们可以同时包含java和groovy源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The components presently available for publication are:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170211T140445Z" creationid="95" creationdate="20170211T140445Z">
        <seg>目前可用于publication的组件都有：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The configuration and execution for multi-project builds is discussed in <bpt i="2" x="2">&lt;a2&gt;</bpt>Chapter 56, <bpt i="3" x="3">&lt;i3&gt;</bpt>Multi-project Builds<ept i="3">&lt;/i3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160520T124041Z" creationid="95" creationdate="20160520T124041Z">
        <seg>关于多项目构建的配置与执行，在<bpt i="0" x="0">&lt;a0&gt;</bpt>第 56 章，<bpt i="1" x="1">&lt;i1&gt;</bpt>多项目构建<ept i="1">&lt;/i1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>中有论述。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The configuration is applied in following order (in case an option is configured in multiple locations the last one wins):</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141119T153245Z" creationid="msdx" creationdate="20141119T153245Z">
        <seg>这些配置将会按以下顺序被应用（以防在多个地方都有配置时只有最后一个 生效）：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The configuration is done via a Groovy builder.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T135045Z" creationid="95" creationdate="20160105T135045Z">
        <seg>这个配置通过一个 Groovy builder 来完成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The configuration of all projects happens before any task is executed.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160522T120218Z" creationid="95" creationdate="20160522T120147Z">
        <seg>所有项目的配置都发生在任何任务执行之前。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The configuration of this task specifies what is to be compared.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170109T124347Z" creationid="95" creationdate="20170109T124347Z">
        <seg>这个任务的配置指定了要比较哪些内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The configuration on demand feature is incubating so not every build is guaranteed to work correctly.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160522T121902Z" creationid="95" creationdate="20160522T121851Z">
        <seg>配置需求功能正在孵化中，所以还无法保证每次的构建都能正确。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The content of the generated visual studio files can be modified via programmatic hooks, provided by the <bpt i="0" x="0">&lt;c0&gt;</bpt>visualStudio<ept i="0">&lt;/c0&gt;</ept> extension.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T095540Z" creationid="haohang" creationdate="20160408T095540Z">
        <seg>通过由<bpt i="0" x="0">&lt;c0&gt;</bpt>visualStudio<ept i="0">&lt;/c0&gt;</ept> 提供的编程hook，可以修改所生成的visual studio文件的内容， </seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The conversion process has the following features:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T092643Z" creationid="haohang" creationdate="20150707T092643Z">
        <seg>该转换过程具有以下特点：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The copied configuration is in the unresolved state and can be freshly resolved.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T091255Z" creationid="haohang" creationdate="20150807T091255Z">
        <seg>这个复制的配置处于未解析的状态，并且可以被刷新解析。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The copied configuration only has <bpt i="8" x="8">&lt;c8&gt;</bpt>orca<ept i="8">&lt;/c8&gt;</ept> as a dependency and therefore there is no version conflict and <bpt i="9" x="9">&lt;c9&gt;</bpt>seal-1.0<ept i="9">&lt;/c9&gt;</ept> is returned as a transitive dependency.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T091027Z" creationid="haohang" creationdate="20150807T091027Z">
        <seg>复制的配置只有 <bpt i="8" x="8">&lt;c8&gt;</bpt>orca<ept i="8">&lt;/c8&gt;</ept> 一个依赖，因此没有版本冲突，<bpt i="9" x="9">&lt;c9&gt;</bpt>seal-1.0<ept i="9">&lt;/c9&gt;</ept> 作为传递依赖被返回。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The copy task is very flexible, and allows you to, for example, filter the contents of the files as they are copied, and map to the file names.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T123853Z" creationid="msdx" creationdate="20141113T123645Z">
        <seg>复制任务非常灵活，并允许您进行，比如筛选要复制的文件的内容，或映射文件的名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The copying methods come in two flavors.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T040505Z" creationid="haohang" creationdate="20150807T040453Z">
        <seg>复制的方法有两种。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The core Gradle tool chains are able to target the following architectures out of the box.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T092045Z" creationid="haohang" creationdate="20160408T092035Z">
        <seg>核心 Gradle 工具链针对以下的架构能够开箱即用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The created task is named using the pattern "<bpt i="0" x="0">&lt;c0&gt;</bpt>publish«<bpt i="1" x="1">&lt;s1&gt;</bpt><bpt i="2" x="2">&lt;e2&gt;</bpt>NAME OF PUBLICATION<ept i="2">&lt;/e2&gt;</ept><ept i="1">&lt;/s1&gt;</ept>»PublicationToMavenLocal<ept i="0">&lt;/c0&gt;</ept>".</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T064100Z" creationid="95" creationdate="20170416T064100Z">
        <seg>这个创建的任务使用“<bpt i="0" x="0">&lt;c0&gt;</bpt>publish«<bpt i="1" x="1">&lt;s1&gt;</bpt><bpt i="2" x="2">&lt;e2&gt;</bpt>PUBLICATION 名称<ept i="2">&lt;/e2&gt;</ept><ept i="1">&lt;/s1&gt;</ept>»PublicationToMavenLocal<ept i="0">&lt;/c0&gt;</ept>”的方式来命名。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The created task is named using the pattern "<bpt i="0" x="0">&lt;c0&gt;</bpt>publish«<bpt i="1" x="1">&lt;s1&gt;</bpt><bpt i="2" x="2">&lt;e2&gt;</bpt>NAME OF PUBLICATION<ept i="2">&lt;/e2&gt;</ept><ept i="1">&lt;/s1&gt;</ept>»PublicationTo«<bpt i="3" x="3">&lt;s3&gt;</bpt><bpt i="4" x="4">&lt;e4&gt;</bpt>NAME OF REPOSITORY<ept i="4">&lt;/e4&gt;</ept><ept i="3">&lt;/s3&gt;</ept>»Repository<ept i="0">&lt;/c0&gt;</ept>".</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170326T074617Z" creationid="95" creationdate="20170326T074617Z">
        <seg>这个创建的任务使用“<bpt i="0" x="0">&lt;c0&gt;</bpt>publish«<bpt i="1" x="1">&lt;s1&gt;</bpt><bpt i="2" x="2">&lt;e2&gt;</bpt>PUBLICATION 名称<ept i="2">&lt;/e2&gt;</ept><ept i="1">&lt;/s1&gt;</ept>»PublicationTo«<bpt i="3" x="3">&lt;s3&gt;</bpt><bpt i="4" x="4">&lt;e4&gt;</bpt>REPOSITORY 名称<ept i="4">&lt;/e4&gt;</ept><ept i="3">&lt;/s3&gt;</ept>»Repository<ept i="0">&lt;/c0&gt;</ept>”的方式来命名。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The current project is then always build as a single project build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T075203Z" creationid="haohang" creationdate="20160519T074643Z">
        <seg>那么，当前项目将只会作为单项目构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The current support for CUnit is quite rudimentary.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160504T151559Z" creationid="95" creationdate="20160504T151537Z">
        <seg>当前对 CUnit 的支持还是相当简陋。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The daemon can potentially preemptively download dependencies or check for new versions of snapshot dependencies.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141117T150819Z" creationid="msdx" creationdate="20141117T150819Z">
        <seg>守护进程可以预先下载依赖项或进行快照依赖的新版本检查。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The daemon process automatically expire after 3 hours of idle time.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141117T152630Z" creationid="msdx" creationdate="20141117T152407Z">
        <seg>守护进程将在空闲3小时后自动失效。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The declarative language lies on top of a general purpose task graph, which you can fully leverage in your builds.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141101T124440Z" creationid="msdx" creationdate="20141101T124440Z">
        <seg>声明性语言位于通用任务图的顶层，你可以在构建中充分发挥。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The default <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>evaluation<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> order of the projects is alphanumeric (for the same nesting level).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T074754Z" creationid="haohang" creationdate="20160718T074754Z">
        <seg>默认的项目<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>评估<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>顺序是按字母数字（同一嵌套级别）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The default behavior of the Ear task is to copy the content of <bpt i="0" x="0">&lt;c0&gt;</bpt>src/main/application<ept i="0">&lt;/c0&gt;</ept> to the root of the archive.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T142628Z" creationid="msdx" creationdate="20150504T142628Z">
        <seg>Ear task 的默认行为是将<bpt i="0" x="0">&lt;c0&gt;</bpt>src/main/application<ept i="0">&lt;/c0&gt;</ept>的内容复制到archive 的根目录下。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The default behavior of the War task is to copy the content of <bpt i="0" x="0">&lt;c0&gt;</bpt>src/main/webapp<ept i="0">&lt;/c0&gt;</ept> to the root of the archive.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T093338Z" creationid="msdx" creationdate="20150503T092356Z">
        <seg>War task 的默认行为是将<bpt i="0" x="0">&lt;c0&gt;</bpt>src/main/webapp<ept i="0">&lt;/c0&gt;</ept>的内容复制到archive 的根目录下。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The default configuration order is top down, which is usually what is needed.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T090301Z" creationid="haohang" creationdate="20160718T090301Z">
        <seg>默认的配置顺序是通常所需要的从顶至下的顺序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The default configuration used by a project dependency on this project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T084553Z" creationid="Administrator" creationdate="20150426T084456Z">
        <seg>本项目上的默认项目依赖配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The default configuration works well for analyzing standard Java projects and can be customized in many ways.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150510T143833Z" creationid="msdx" creationdate="20150510T143833Z">
        <seg>默认配置非常适合于分析标准 Java 项目，并可以在许多方面进行自定义。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The default identity values are derived from the following project properties:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20170217T083046Z" creationid="haohang" creationdate="20170217T083046Z">
        <seg>默认标识的值取自以下这些项目属性︰</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The default is 1, that is, do not execute the tests in parallel.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T141233Z" creationid="Administrator" creationdate="20150427T141233Z">
        <seg>它的默认值是 1，也就是说，不并行执行测试。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The default is to execute an unlimited number of tests in each test process.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T014931Z" creationid="Administrator" creationdate="20150428T013900Z">
        <seg>默认是每个测试进程中执行的测试数量不限。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The default name for a generated archive is <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>projectName<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/e1&gt;</ept>-<bpt i="3" x="3">&lt;e3&gt;</bpt><bpt i="4" x="4">&lt;c4&gt;</bpt>version<ept i="4">&lt;/c4&gt;</ept><ept i="3">&lt;/e3&gt;</ept>.<bpt i="5" x="5">&lt;e5&gt;</bpt><bpt i="6" x="6">&lt;c6&gt;</bpt>type<ept i="6">&lt;/c6&gt;</ept><ept i="5">&lt;/e5&gt;</ept><ept i="0">&lt;/c0&gt;</ept> For example:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T154718Z" creationid="msdx" creationdate="20141113T154718Z">
        <seg>生成的归档的默认名称是<bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>projectName<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/e1&gt;</ept>-<bpt i="3" x="3">&lt;e3&gt;</bpt><bpt i="4" x="4">&lt;c4&gt;</bpt>version<ept i="4">&lt;/c4&gt;</ept><ept i="3">&lt;/e3&gt;</ept>.<bpt i="5" x="5">&lt;e5&gt;</bpt><bpt i="6" x="6">&lt;c6&gt;</bpt>type<ept i="6">&lt;/c6&gt;</ept><ept i="5">&lt;/e5&gt;</ept><ept i="0">&lt;/c0&gt;</ept>。举个例子：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The default name for archives can be changed with the <bpt i="3" x="3">&lt;c3&gt;</bpt>archivesBaseName<ept i="3">&lt;/c3&gt;</ept> project property.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T155209Z" creationid="msdx" creationdate="20141113T155209Z">
        <seg>归档的默认名称可以通过项目属性 <bpt i="3" x="3">&lt;c3&gt;</bpt>archivesBaseName<ept i="3">&lt;/c3&gt;</ept> 来更改。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The default name for this file is <bpt i="0" x="0">&lt;c0&gt;</bpt>settings.gradle<ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T024640Z" creationid="haohang" creationdate="20160519T024640Z">
        <seg>它的默认名称是<bpt i="0" x="0">&lt;c0&gt;</bpt>settings.gradle<ept i="0">&lt;/c0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The default status scheme, ordered from least to most mature status, is <bpt i="2" x="2">&lt;c2&gt;</bpt>integration<ept i="2">&lt;/c2&gt;</ept>, <bpt i="3" x="3">&lt;c3&gt;</bpt>milestone<ept i="3">&lt;/c3&gt;</ept>, <bpt i="4" x="4">&lt;c4&gt;</bpt>release<ept i="4">&lt;/c4&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T013705Z" creationid="95" creationdate="20151129T012326Z">
        <seg>默认状态模式，按状态的成熟程度排序，分别是<bpt i="2" x="2">&lt;c2&gt;</bpt>integration<ept i="2">&lt;/c2&gt;</ept>、<bpt i="3" x="3">&lt;c3&gt;</bpt>milestone<ept i="3">&lt;/c3&gt;</ept>、<bpt i="4" x="4">&lt;c4&gt;</bpt>release<ept i="4">&lt;/c4&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The default value of <bpt i="2" x="2">&lt;c2&gt;</bpt>ignoreFailures<ept i="2">&lt;/c2&gt;</ept> is false.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T015115Z" creationid="Administrator" creationdate="20150428T015115Z">
        <seg><bpt i="2" x="2">&lt;c2&gt;</bpt>IgnoreFailures<ept i="2">&lt;/c2&gt;</ept>的默认值为 false。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The defaults are summarized in the tables below.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T064531Z" creationid="msdx" creationdate="20150513T064531Z">
        <seg>下表总结了这些默认值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The dependencies are declared in the Gradle build scripts.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T160133Z" creationid="95" creationdate="20161218T160108Z">
        <seg>依赖是在 Gradle 构建脚本中声明的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The dependencies have the following transitive dependencies:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T034312Z" creationid="haohang" creationdate="20150807T034312Z">
        <seg>这些依赖有以下的传递依赖：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The dependencies of a client module can be normal module dependencies or artifact dependencies or another client module.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T091659Z" creationid="haohang" creationdate="20150801T091659Z">
        <seg>一个客户端模块的依赖可以是正常的模块依赖，或者是 artifact 依赖项或是另一个客户端模块。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The dependency cache</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070207Z" creationid="95" creationdate="20170416T070207Z">
        <seg>依赖缓存</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The dependency has a version that conflicts with a desired version.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T101805Z" creationid="haohang" creationdate="20150801T101805Z">
        <seg>这个依赖有一个版本与所需要的版本冲突。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The dependency is not available in any of remote repositories.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T101730Z" creationid="haohang" creationdate="20150801T101651Z">
        <seg>在任何的远程仓库中这个依赖都不可用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The dependency is not needed for runtime.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T101740Z" creationid="haohang" creationdate="20150801T101740Z">
        <seg>在运行时不需要这个依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The dependency is undesired due to licensing reasons.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T101715Z" creationid="haohang" creationdate="20150801T101642Z">
        <seg>由于许可证的原因而让依赖不受欢迎。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The dependency reports (see the previous paragraph) are using this API under the covers.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T033340Z" creationid="haohang" creationdate="20150807T033340Z">
        <seg>依赖报告（见前面一段）正是使用此 API。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The dependency reports don't show your real dependency graph and the <bpt i="1" x="1">&lt;c1&gt;</bpt>compile<ept i="1">&lt;/c1&gt;</ept> task uses all dependencies, not just the first level dependencies.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151201T064834Z" creationid="haohang" creationdate="20151201T064834Z">
        <seg>依赖报告不会显示你真正的依赖关系图，并且<bpt i="1" x="1">&lt;c1&gt;</bpt>compile<ept i="1">&lt;/c1&gt;</ept>任务会使用所有的依赖，而不只是第一级依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The descriptor file is customized to include the project description for each project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T145120Z" creationid="95" creationdate="20170330T145120Z">
        <seg>自定描述符，以包含每一个项目的项目描述。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The desired artifact belongs to a configuration other than <bpt i="0" x="0">&lt;c0&gt;</bpt>default<ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150730T035145Z" creationid="haohang" creationdate="20150730T035145Z">
        <seg>所需的 artifact 属于一个非 <bpt i="0" x="0">&lt;c0&gt;</bpt>default<ept i="0">&lt;/c0&gt;</ept>的配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The details of forking depend on which compiler is used.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150430T155725Z" creationid="msdx" creationdate="20150430T155725Z">
        <seg>fork 的详细情况依赖于所使用的编译器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The developer environment is optimized for speed and feedback so we nearly always run Gradle jobs with the daemon.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141119T153853Z" creationid="msdx" creationdate="20141119T153753Z">
        <seg>开发人员的环境在速度和反馈上会优化，所以我们几乎总是使用守护进程运行 Gradle 作业。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The directory containing the build script.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T044359Z" creationid="msdx" creationdate="20141108T044359Z">
        <seg>包含生成脚本的目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The directory to generate distributions into.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T045519Z" creationid="Administrator" creationdate="20150427T045519Z">
        <seg>要发布的文件将生成到此目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The directory to generate documentation into.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T045603Z" creationid="Administrator" creationdate="20150427T045603Z">
        <seg>要生成文档的目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The directory to generate libraries into.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T045318Z" creationid="Administrator" creationdate="20150427T045215Z">
        <seg>类库将生成到此目录中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The directory to generate reports into.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T045406Z" creationid="Administrator" creationdate="20150426T090024Z">
        <seg>报告将生成到此目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The directory to generate test result .xml files into.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T045439Z" creationid="Administrator" creationdate="20150427T045103Z">
        <seg>测试报告的.xml文件将生成到此目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The directory to generate the archive into</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T160141Z" creationid="msdx" creationdate="20141113T160141Z">
        <seg>存放生成的归档文件的目录</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The directory to generate the classes of this source set into.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T051535Z" creationid="Administrator" creationdate="20150427T051513Z">
        <seg>要生成的该源集的类的目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The directory to generate the project report into.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T062202Z" creationid="haohang" creationdate="20150628T062202Z">
        <seg>生成的项目报告的目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The directory to generate the resources of this source set into.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T051528Z" creationid="Administrator" creationdate="20150427T051528Z">
        <seg>要生成的该源集的资源的目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The directory to generate the test report into.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T045502Z" creationid="Administrator" creationdate="20150427T045134Z">
        <seg>测试报告生成到此目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The directory to use to cache source dependency information.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T045651Z" creationid="Administrator" creationdate="20150427T045651Z">
        <seg>该目录用于缓存源代码的依赖信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The directory where the generated POMs are written to.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151228T152743Z" creationid="95" creationdate="20151228T152743Z">
        <seg>生成的POM所写入的目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The distribution contains the JAR file for the library and its dependencies.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150705T084508Z" creationid="haohang" creationdate="20150705T084508Z">
        <seg>该分发包含了 library 和它的依赖的 JAR 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The distribution plugin facilitates building archives that serve as distributions of the project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150701T025842Z" creationid="haohang" creationdate="20150628T092328Z">
        <seg>分发插件便于建立archives，作为该项目要分布的文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The distribution plugin is currently <bpt i="0" x="0">&lt;a0&gt;</bpt>incubating<ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T092306Z" creationid="haohang" creationdate="20150628T092221Z">
        <seg>分发插件目前还是<bpt i="0" x="0">&lt;a0&gt;</bpt>孵化中<ept i="0">&lt;/a0&gt;</ept>状态。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The distribution will package up the runtime dependencies of the application along with some OS specific start scripts.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150702T104346Z" creationid="haohang" creationdate="20150702T104346Z">
        <seg>分发的内容将会把这个程序的运行时依赖和一些操作系统特定的启动脚本打包在一起。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The distribution will package up the runtime dependencies of the library All files stored in <bpt i="0" x="0">&lt;c0&gt;</bpt>src/main/dist<ept i="0">&lt;/c0&gt;</ept> will be added to the root of the archive distribution.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T070225Z" creationid="haohang" creationdate="20150707T065845Z">
        <seg>distribution 将打包所有的运行时依赖。所有在<bpt i="0" x="0">&lt;c0&gt;</bpt>src/main/dist<ept i="0">&lt;/c0&gt;</ept>中存储的文件都将被添加到 archive distribution 根目录中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The example above also demonstrates the mechanism of passing extra command-line arguments to the resource compiler.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160325T025434Z" creationid="haohang" creationdate="20160325T023120Z">
        <seg>上面的示例还演示了将额外的命令行参数传递给资源编译器的机制。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The example above configures a comparison between two different projects using two different Gradle versions.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170109T125253Z" creationid="95" creationdate="20170109T124821Z">
        <seg>上面的示例，配置了两个使用了不同的Gradle版本的项目之间的比较。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The example above will apply the supplied configuration to all <bpt i="0" x="0">&lt;c0&gt;</bpt>executable<ept i="0">&lt;/c0&gt;</ept> binaries built.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160324T152800Z" creationid="95" creationdate="20160324T152658Z">
        <seg>上面的例子将会把提供的配置应用到所有构建的 <bpt i="0" x="0">&lt;c0&gt;</bpt>executable<ept i="0">&lt;/c0&gt;</ept>二进制文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The example is a bit contrived for the sake of showing the mechanism.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T085758Z" creationid="haohang" creationdate="20160718T085758Z">
        <seg>该示例也有点有意展示这个机制。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The examples below use closures.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T020916Z" creationid="95" creationdate="20160521T020916Z">
        <seg>下面是使用闭包的例子。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The examples from the last section were special, as the projects had no <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>Execution Dependencies<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T062156Z" creationid="haohang" creationdate="20160718T062156Z">
        <seg>上一节的例子很特别，因为项目里没有<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>执行依赖<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The existing content is merged with the configuration inferred from the Gradle build or defined explicitly in the eclipse DSL</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T104725Z" creationid="haohang" creationdate="20150624T104604Z">
        <seg>从 Gradle 构建推断出来或在 eclipse DSL 中显示定义的配置会与现有的内容合并在一起</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The existing file contents will be used and the explicit configuration in the <bpt i="4" x="4">&lt;c4&gt;</bpt>ear.deploymentDescriptor<ept i="4">&lt;/c4&gt;</ept> will be ignored.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T143840Z" creationid="msdx" creationdate="20150504T143840Z">
        <seg>这个已存在的文件的内容将会被使用，而 <bpt i="4" x="4">&lt;c4&gt;</bpt>ear.deploymentDescriptor<ept i="4">&lt;/c4&gt;</ept> 里的显示配置则会被忽略。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The extension object is added to the plugin list with the name <bpt i="2" x="2">&lt;c2&gt;</bpt>greeting<ept i="2">&lt;/c2&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T131041Z" creationid="95" creationdate="20160820T130800Z">
        <seg>这个扩展对象以<bpt i="2" x="2">&lt;c2&gt;</bpt>greeting<ept i="2">&lt;/c2&gt;</ept>名字添加到插件列表中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The extension of the archive file name.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T160705Z" creationid="msdx" creationdate="20141113T160705Z">
        <seg>归档文件的名称中的扩展名称部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The feature incubation process, which is part of the Gradle feature lifecycle (see <bpt i="0" x="0">&lt;a0&gt;</bpt>Appendix C, <bpt i="1" x="1">&lt;i1&gt;</bpt>The Feature Lifecycle<ept i="1">&lt;/i1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>), exists for this purpose of ensuring high quality final implementation through incorporation of early user feedback.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160815T152142Z" creationid="95" creationdate="20160815T151823Z">
        <seg>这个功能孵化过程，是Gradle 功能生命周期的一部分（参见 <bpt i="0" x="0">&lt;a0&gt;</bpt>附录 C， <bpt i="1" x="1">&lt;i1&gt;</bpt>功能的生命周期<ept i="1">&lt;/i1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>），它存在的目的是为了通过早期用户反馈内容的合并来保证高质量的最终实现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The feature should work very well for multi-project builds that have decoupled projects (<bpt i="0" x="0">&lt;a0&gt;</bpt>Section 56.9, “Decoupled Projects”<ept i="0">&lt;/a0&gt;</ept>).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160522T121955Z" creationid="95" creationdate="20160522T121852Z">
        <seg>对于解耦的多项目构建，这个功能应该会运行得很好（<bpt i="0" x="0">&lt;a0&gt;</bpt>第 56.9 节，“解耦项目”<ept i="0">&lt;/a0&gt;</ept>）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The file is read; or a default version provided by Gradle is used if it does not exist</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T104419Z" creationid="haohang" creationdate="20150624T104419Z">
        <seg>读取文件;如果它不存在，则使用由 Gradle 提供的默认版本</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The files will be created at "<bpt i="4" x="4">&lt;c4&gt;</bpt><bpt i="5" x="5">&lt;e5&gt;</bpt><bpt i="6" x="6">&lt;c6&gt;</bpt>$buildDir<ept i="6">&lt;/c6&gt;</ept><ept i="5">&lt;/e5&gt;</ept>/distributions/<bpt i="7" x="7">&lt;e7&gt;</bpt><bpt i="8" x="8">&lt;c8&gt;</bpt>$project.name<ept i="8">&lt;/c8&gt;</ept><ept i="7">&lt;/e7&gt;</ept>-<bpt i="9" x="9">&lt;e9&gt;</bpt><bpt i="10" x="10">&lt;c10&gt;</bpt>$project.version<ept i="10">&lt;/c10&gt;</ept><ept i="9">&lt;/e9&gt;</ept>.<bpt i="11" x="11">&lt;e11&gt;</bpt><bpt i="12" x="12">&lt;c12&gt;</bpt>«ext»<ept i="12">&lt;/c12&gt;</ept><ept i="11">&lt;/e11&gt;</ept><ept i="4">&lt;/c4&gt;</ept>".</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150701T030623Z" creationid="haohang" creationdate="20150701T030623Z">
        <seg>这些文件将会创建在“<bpt i="4" x="4">&lt;c4&gt;</bpt><bpt i="5" x="5">&lt;e5&gt;</bpt><bpt i="6" x="6">&lt;c6&gt;</bpt>$buildDir<ept i="6">&lt;/c6&gt;</ept><ept i="5">&lt;/e5&gt;</ept>/distributions/<bpt i="7" x="7">&lt;e7&gt;</bpt><bpt i="8" x="8">&lt;c8&gt;</bpt>$project.name<ept i="8">&lt;/c8&gt;</ept><ept i="7">&lt;/e7&gt;</ept>-<bpt i="9" x="9">&lt;e9&gt;</bpt><bpt i="10" x="10">&lt;c10&gt;</bpt>$project.version<ept i="10">&lt;/c10&gt;</ept><ept i="9">&lt;/e9&gt;</ept>.<bpt i="11" x="11">&lt;e11&gt;</bpt><bpt i="12" x="12">&lt;c12&gt;</bpt>«ext»<ept i="12">&lt;/c12&gt;</ept><ept i="11">&lt;/e11&gt;</ept><ept i="4">&lt;/c4&gt;</ept>”。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The final XML is persisted</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T105139Z" creationid="haohang" creationdate="20150624T105139Z">
        <seg>最终的 XML 被持久化</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The first argument of the instruction call is the key of the property.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150526T064621Z" creationid="haohang" creationdate="20150526T064448Z">
        <seg>instruction 调用的第一个参数是属性的键。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The first example for describing such a use case, consists of two webapplication projects and a parent project that creates a distribution out of them.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160722T091059Z" creationid="haohang" creationdate="20160722T090728Z">
        <seg>第一个例子用于描述这种使用情况，包括两个 webapplication 项目，以及创建了它们的分布情况的父项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The first layer is the Ant language.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141114T071818Z" creationid="msdx" creationdate="20141114T071818Z">
        <seg>第一层是 Ant 的语言。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The first time you run a build for a project, Gradle creates a <bpt i="0" x="0">&lt;c0&gt;</bpt>.gradle<ept i="0">&lt;/c0&gt;</ept> directory in which it puts the compiled script.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T153317Z" creationid="msdx" creationdate="20141109T153317Z">
        <seg>你第一次运行一个项目构建时， Gradle 会创建<bpt i="0" x="0">&lt;c0&gt;</bpt>.gradle<ept i="0">&lt;/c0&gt;</ept>目录，用于存放已编译的脚本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The first two tasks are specified by there absolute path, the last task is executed on the name matching mechanism described above.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160715T092050Z" creationid="haohang" creationdate="20160715T092050Z">
        <seg>前两个任务由它们的绝对路径指定，最后一项任务通过上面所述的匹配机制执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The first uses auto-delegation to the <bpt i="1" x="1">&lt;c1&gt;</bpt>Project<ept i="1">&lt;/c1&gt;</ept> object, for properties not defined in the build script.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T063513Z" creationid="msdx" creationdate="20141108T043318Z">
        <seg>在生成脚本中未定义的属性，第一次使用时自动委托到<bpt i="1" x="1">&lt;c1&gt;</bpt>Project<ept i="1">&lt;/c1&gt;</ept>对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The following are the terms used for build comparison and their definitions.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161219T151509Z" creationid="95" creationdate="20161219T151233Z">
        <seg>以下是用于构建比较的术语以及对它们的定义。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The following diagram shows the relationships between these tasks.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T082910Z" creationid="Administrator" creationdate="20150426T082910Z">
        <seg>下图显示了这些任务之间的关系。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The following example adds a dependency from <bpt i="2" x="2">&lt;c2&gt;</bpt>taskX<ept i="2">&lt;/c2&gt;</ept> to all the tasks in the project whose name starts with <bpt i="3" x="3">&lt;c3&gt;</bpt>lib<ept i="3">&lt;/c3&gt;</ept>:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T123841Z" creationid="msdx" creationdate="20141110T123841Z">
        <seg>下面的示例是从<bpt i="2" x="2">&lt;c2&gt;</bpt>taskX<ept i="2">&lt;/c2&gt;</ept>加入了项目中所有名称以<bpt i="3" x="3">&lt;c3&gt;</bpt>lib<ept i="3">&lt;/c3&gt;</ept>开头的任务的依赖：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The following example adds to the previous example, and uses classes from the build script classpath.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161212T154633Z" creationid="95" creationdate="20161212T154633Z">
        <seg>下面的示例将添加到前面的示例中，并使用构建脚本classpath中的类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The following example adds to the previous example, and uses classes from the init script classpath.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161215T143946Z" creationid="95" creationdate="20161215T143853Z">
        <seg>下面的示例将添加到前面的示例中，并使用init 脚本classpath中的类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The following example demonstrates publishing with a multi-project build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T145035Z" creationid="95" creationdate="20170330T144947Z">
        <seg>下面的例子演示了如何使用在多项目构建中进行发布。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The following example logs the start and end of each task execution.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T140018Z" creationid="95" creationdate="20160521T135925Z">
        <seg>下面的示例展示了在每个任务执行的开始及结束时打印日志。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The following example removes all existing dependencies from the <bpt i="2" x="2">&lt;c2&gt;</bpt>Classpath<ept i="2">&lt;/c2&gt;</ept> domain object:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T064814Z" creationid="haohang" creationdate="20150625T064814Z">
        <seg>下面的示例从<bpt i="2" x="2">&lt;c2&gt;</bpt>Classpath<ept i="2">&lt;/c2&gt;</ept>域对象中删除现有的所有依赖关系:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The following example removes all existing dependencies from the <bpt i="2" x="2">&lt;c2&gt;</bpt>Module<ept i="2">&lt;/c2&gt;</ept> domain object:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T073908Z" creationid="haohang" creationdate="20150625T073908Z">
        <seg>下面的示例从<bpt i="2" x="2">&lt;c2&gt;</bpt>Module<ept i="2">&lt;/c2&gt;</ept>域对象中删除现有的所有依赖关系:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The following example sets the <bpt i="0" x="0">&lt;c0&gt;</bpt>srcDir<ept i="0">&lt;/c0&gt;</ept> property of each task as it is created.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T135010Z" creationid="95" creationdate="20160521T135010Z">
        <seg>下面的示例是在每个任务创建之前设置<bpt i="0" x="0">&lt;c0&gt;</bpt>srcDir<ept i="0">&lt;/c0&gt;</ept>属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The following example shows how you might do this when the JAR containing the plugin has been published to a local repository:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T013824Z" creationid="95" creationdate="20161211T013824Z">
        <seg>下面的示例展示了当包含了插件的JAR文件已经被发布到一个本地仓库时，你可以怎么做。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The following example shows how you might do this when the JAR containing the task class has been published to a local repository:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160815T145909Z" creationid="95" creationdate="20160815T145909Z">
        <seg>下面的示例展示了当包含任务类的JAR文件已经被发布到一个本地仓库时，你可以怎么做。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The following example shows you how this works.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T131329Z" creationid="95" creationdate="20160820T131329Z">
        <seg>下面是如何分组的示例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The following examples show several different ways to achieve the same configuration.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T091936Z" creationid="msdx" creationdate="20141110T091936Z">
        <seg>下面的示例演示了几种不同的方式来实现相同的配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The following notification systems are supported:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T062757Z" creationid="haohang" creationdate="20150628T062757Z">
        <seg>支持以下通知系统：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The following properties can alternatively be set from the command line, as task parameters of the <bpt i="0" x="0">&lt;c0&gt;</bpt>sonarAnalyze<ept i="0">&lt;/c0&gt;</ept> task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T053813Z" creationid="msdx" creationdate="20150513T053813Z">
        <seg>下面的属性或者可以从命令行中或者是作为<bpt i="0" x="0">&lt;c0&gt;</bpt>sonarAnalyze<ept i="0">&lt;/c0&gt;</ept>任务的任务参数这两种方式之一来设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The following properties can be used to configure the Gradle build environment:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141119T153523Z" creationid="msdx" creationdate="20141119T153523Z">
        <seg>下面的属性可以用于配置 Gradle 构建环境：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The following sample contains a greeting plugin, which adds a <bpt i="4" x="4">&lt;c4&gt;</bpt>hello<ept i="4">&lt;/c4&gt;</ept> task to the project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T123805Z" creationid="95" creationdate="20160820T123805Z">
        <seg>下面的例子包含了一个问候语插件，它把一个 <bpt i="4" x="4">&lt;c4&gt;</bpt>hello<ept i="4">&lt;/c4&gt;</ept> 任务添加到project中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The following sample shows how this works.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T050953Z" creationid="95" creationdate="20161211T050953Z">
        <seg>下面是展示注入的例子。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The following sample shows how to perform extra configuration from an init script <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>before<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> the projects are evaluated.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161214T160007Z" creationid="95" creationdate="20161214T160007Z">
        <seg>下面的例子展示了如何在项目被评估 <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>之前<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> 从一个init 脚本中执行另外的配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The following table lists a few of the commonly used ones.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T044124Z" creationid="msdx" creationdate="20141108T044124Z">
        <seg>下表列出了常用的几个属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The following table lists some of the important properties of a source set.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T051157Z" creationid="Administrator" creationdate="20150427T051157Z">
        <seg>下表列出了一些重要的源集属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The following table lists supported notification services and their configuration properties.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T065209Z" creationid="haohang" creationdate="20150628T065209Z">
        <seg>下表列出了支持的通知服务以及它们的配置属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The following table lists the domain object used for each of the Eclipse model types:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T105152Z" creationid="haohang" creationdate="20150624T105152Z">
        <seg>下表列出了用于每个 Eclipse 模型类型的域对象：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The following table lists the domain object used for each of the model types:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T073702Z" creationid="haohang" creationdate="20150625T073702Z">
        <seg>下表列出了用于每个模型类型的域对象：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The following tool chains are supported:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160128T153326Z" creationid="95" creationdate="20160128T153326Z">
        <seg>支持以下的工具链：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The former is used to locate classes referenced by the source code, and will typically contain <bpt i="4" x="4">&lt;c4&gt;</bpt>scala-library<ept i="4">&lt;/c4&gt;</ept> along with other libraries.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150430T154452Z" creationid="msdx" creationdate="20150430T154452Z">
        <seg>前者用于在源代码中查找类的引用，通常会包含  <bpt i="4" x="4">&lt;c4&gt;</bpt>scala-library<ept i="4">&lt;/c4&gt;</ept>和其他库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The former is used to locate classes referenced by the source code, and will typically contain the Groovy library along with other libraries.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T091226Z" creationid="msdx" creationdate="20150429T091226Z">
        <seg>前者用于在源代码中查找类的引用，通常会包含 Groovy 库和其他库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The full stacktraces are printed out.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T033633Z" creationid="msdx" creationdate="20141116T113121Z">
        <seg>打印全部的栈跟踪信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The generated Ivy module descriptor file contains an <bpt i="0" x="0">&lt;c0&gt;</bpt>&lt;info&gt;<ept i="0">&lt;/c0&gt;</ept> tag that identifies the module.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20170217T083031Z" creationid="haohang" creationdate="20170217T083031Z">
        <seg>生成的Ivy模块描述符文件包含了用于标识该模块的<bpt i="0" x="0">&lt;c0&gt;</bpt>&lt;info&gt;<ept i="0">&lt;/c0&gt;</ept>标记。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The generated test results will be located in the <bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;e3&gt;</bpt><bpt i="4" x="4">&lt;c4&gt;</bpt>${build.dir}<ept i="4">&lt;/c4&gt;</ept><ept i="3">&lt;/e3&gt;</ept>/test-results<ept i="2">&lt;/c2&gt;</ept> directory.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160504T151322Z" creationid="95" creationdate="20160504T151322Z">
        <seg>生成的测试结果将位于<bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;e3&gt;</bpt><bpt i="4" x="4">&lt;c4&gt;</bpt>${build.dir}<ept i="4">&lt;/c4&gt;</ept><ept i="3">&lt;/e3&gt;</ept>/test-results<ept i="2">&lt;/c2&gt;</ept>目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The generation lifecycle is as follows:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T104314Z" creationid="haohang" creationdate="20150624T104243Z">
        <seg>生成的生命周期如下:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The header files are used during compilation, with the compiled binary dependency being used during the linking.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160325T025629Z" creationid="haohang" creationdate="20160325T025629Z">
        <seg>这些头文件在编译期间使用，而编译的二进制依赖则在链接过程中使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The host build must be run with Gradle 1.2 or newer.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161228T141631Z" creationid="95" creationdate="20161228T141631Z">
        <seg>主机构建必须运行在Gradle1.12或以上。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The identifier (groupId, artifactId, version) of the published module is an exception; these values cannot be modified in the POM using the `withXML` hook.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T062549Z" creationid="95" creationdate="20170416T062549Z">
        <seg>已发布模块的标识符（groupId，artifac，version）则是一个例外；不能使用“withXML”钩子来修改POM中的这些值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The identifier (organisation, module, revision) of the published module is an exception; these values cannot be modified in the descriptor using the `withXML` hook.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170304T032338Z" creationid="95" creationdate="20170304T032338Z">
        <seg>已发布模块的标识符（organisation，module，revision）则是一个例外；不能使用“withXML”hook 来修改描述符中的这些值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The implementation is lightweight, with only a small number of dependencies.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T153046Z" creationid="95" creationdate="20161218T153046Z">
        <seg>它的实现很轻量，只有很少的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The incremental task action may supply an <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>IncrementalTaskInputs.outOfDate()<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> action for processing any input file that is out-of-date, and a <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>IncrementalTaskInputs.removed()<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept> action that executes for any input file that has been removed since the previous execution.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160816T144947Z" creationid="95" creationdate="20160816T144947Z">
        <seg>这个增量任务操作可能提供了一个<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>IncrementalTaskInputs.outOfDate()<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> 操作，用于处理所有out-of-date的输入文件，以及一个<bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>IncrementalTaskInputs.removed()<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>操作，对任何从前一次执行开始已经被删除的文件执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The information stored in the metadata cache includes:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T044820Z" creationid="95" creationdate="20151129T044820Z">
        <seg>存储在元数据缓存中的信息包括：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The job of initialising the CUnit test registry and executing the tests is performed by Gradle, via some generated CUnit launcher sources.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160504T150007Z" creationid="95" creationdate="20160504T150007Z">
        <seg>初始化 CUnit 测试注册以及执行这些测试的工作，都由 Gradle 通过一些生成的 CUnit 启动器源码来执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The key to pass to Jetty when requesting it to stop.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T151348Z" creationid="msdx" creationdate="20150504T151348Z">
        <seg>当需要请求停止时，传递给 Jetty 的key。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The latter is based on files, e.g. the physical location of the test implementation class.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T022014Z" creationid="Administrator" creationdate="20150428T022008Z">
        <seg>后者基于文件，比如测试实现类的物理位置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The latter is the default, and is used to report build progress.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T070701Z" creationid="msdx" creationdate="20141116T070701Z">
        <seg>默认使用后面的这个日志级别，用于报告构建进度。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The latter is used to load and execute the Groovy compiler and Groovydoc tool, respectively, and should only contain the Groovy library and its dependencies.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T091327Z" creationid="msdx" creationdate="20150429T091327Z">
        <seg>后者用来分别加载和执行 Groovy 编译器和 Groovydoc 工具，并且应该只包含 Groovy 库及其依赖项。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The latter is used to load and execute the Scala compiler and Scaladoc tool, respectively, and should only contain the <bpt i="5" x="5">&lt;c5&gt;</bpt>scala-compiler<ept i="5">&lt;/c5&gt;</ept> library and its dependencies.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150430T154515Z" creationid="msdx" creationdate="20150430T154515Z">
        <seg>后者用来分别加载和执行 Scala 编译器和 Scala 工具，并且应该只包含 <bpt i="4" x="4">&lt;c4&gt;</bpt>scala-library<ept i="4">&lt;/c4&gt;</ept>及其依赖项。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The latter may be completely replaced in future.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T023846Z" creationid="Administrator" creationdate="20150428T023846Z">
        <seg>后者可能在将来会被完全地取代掉。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The libraries can be stored in a flat directory without any XML module descriptor files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151201T062458Z" creationid="haohang" creationdate="20151201T062458Z">
        <seg>库可以存在一个平面目录中，而没有任何 XML 模块描述符文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The location of the HTML report providing insight into the comparison will be given.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170109T125851Z" creationid="95" creationdate="20170109T125851Z">
        <seg>然后会给出一个提供了对比较的深入了解的HTML报告文件的位置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The location of those directories are considered as child projects of the root project in the multi-project tree.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T063914Z" creationid="haohang" creationdate="20160519T063814Z">
        <seg>这些目录的位置被认为是多项目树中根项目的子项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The lock is held whenever the binary meta-data store is being read or written, but is released for slow operations such as downloading remote artifacts.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T153546Z" creationid="95" creationdate="20151129T153339Z">
        <seg>每当二进制元数据存储区正在读取或写入时，锁都会被持有，但会在慢的操作比如下载远程工作时释放。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The log is the main 'UI' of a build tool.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T065958Z" creationid="msdx" creationdate="20141116T065958Z">
        <seg>日志是构建工具的主要界面。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The main audience for this API is IDE, CI server, other UI authors, or integration testing of your Gradle plugins.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T151340Z" creationid="95" creationdate="20161218T151340Z">
        <seg>它的主要受众是IDE，CI服务器，其他的UI作者，或者你的Gradle插件的集成测试。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The main difference between a <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>dynamic version<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> and a <bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;e3&gt;</bpt>changing module<ept i="3">&lt;/e3&gt;</ept><ept i="2">&lt;/s2&gt;</ept> is that when you resolve a <bpt i="4" x="4">&lt;s4&gt;</bpt><bpt i="5" x="5">&lt;e5&gt;</bpt>dynamic version<ept i="5">&lt;/e5&gt;</ept><ept i="4">&lt;/s4&gt;</ept>, you'll get the real, static version as the module name.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T012147Z" creationid="haohang" creationdate="20150722T012147Z">
        <seg><bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>动态版本<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>和<bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;e3&gt;</bpt>变化模块<ept i="3">&lt;/e3&gt;</ept><ept i="2">&lt;/s2&gt;</ept>的主要区别是，当你解析一个<bpt i="4" x="4">&lt;s4&gt;</bpt><bpt i="5" x="5">&lt;e5&gt;</bpt>动态版本<ept i="5">&lt;/e5&gt;</ept><ept i="4">&lt;/s4&gt;</ept>时，你会得到真正的、 静态的版本作为模块名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The main entry point to the tooling API is the <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>GradleConnector<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T155733Z" creationid="95" creationdate="20161218T155733Z">
        <seg>Tooling API 的主要入口点是<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>GradleConnector<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The main tasks that you will use are the <bpt i="0" x="0">&lt;c0&gt;</bpt>eclipse<ept i="0">&lt;/c0&gt;</ept> and <bpt i="1" x="1">&lt;c1&gt;</bpt>cleanEclipse<ept i="1">&lt;/c1&gt;</ept> tasks.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T004246Z" creationid="haohang" creationdate="20150603T004141Z">
        <seg>您将使用的主要任务是<bpt i="0" x="0">&lt;c0&gt;</bpt>eclipse<ept i="0">&lt;/c0&gt;</ept>和<bpt i="1" x="1">&lt;c1&gt;</bpt>cleanEclipse<ept i="1">&lt;/c1&gt;</ept>任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The main tasks that you will use are the <bpt i="0" x="0">&lt;c0&gt;</bpt>idea<ept i="0">&lt;/c0&gt;</ept> and <bpt i="1" x="1">&lt;c1&gt;</bpt>cleanIdea<ept i="1">&lt;/c1&gt;</ept> tasks.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T071832Z" creationid="haohang" creationdate="20150625T071832Z">
        <seg>您将使用的主要任务是 <bpt i="0" x="0">&lt;c0&gt;</bpt>idea<ept i="0">&lt;/c0&gt;</ept> 和 <bpt i="1" x="1">&lt;c1&gt;</bpt>cleanIdea<ept i="1">&lt;/c1&gt;</ept> 任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The manifest to include in all JAR files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T050058Z" creationid="Administrator" creationdate="20150427T050058Z">
        <seg>要包括的所有 JAR 文件的清单。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The map may include other artifact properties:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151226T091410Z" creationid="95" creationdate="20151226T091410Z">
        <seg>这个map可能包含其他的构件属性：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The map must include a <bpt i="0" x="0">&lt;c0&gt;</bpt>file<ept i="0">&lt;/c0&gt;</ept> entry that defines the file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151226T091337Z" creationid="95" creationdate="20151226T091307Z">
        <seg>这个 map 必须包含一个定义文件的 <bpt i="0" x="0">&lt;c0&gt;</bpt>file<ept i="0">&lt;/c0&gt;</ept> 条目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The mapping works like the following.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T144954Z" creationid="95" creationdate="20160106T144954Z">
        <seg>映射过程像下面所示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The maven plugin provides a factory method for creating a POM. This is useful if you need a POM without the context of uploading to a Maven repo.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160104T152749Z" creationid="95" creationdate="20151228T153233Z">
        <seg>Maven 插件提供了用于创建 POM 的工厂方法，如果你需要一个 POM 文件但是没有上传到 Maven 仓库的场景，这个工厂方法将非常有用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The merge is not immediately triggered by the from statement.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T151321Z" creationid="msdx" creationdate="20150428T151321Z">
        <seg>这个合并操作不会在from语句中就马上被触发。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The method call returns the Ant data type, which you can then use directly in your build script.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T011039Z" creationid="msdx" creationdate="20141116T011039Z">
        <seg>方法调用返回 Ant 数据类型，然后可以在构建脚本中直接使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The model objects provide lower level hooks for working with domain objects representing the file content before and after merging with the model configuration.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T100740Z" creationid="haohang" creationdate="20150624T100740Z">
        <seg>模型对象提供了低级别的hook，用于处理在合并模型配置前后表示文件内容的域对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The most common use case is to have multi-project builds that share a common lifecycle (e.g. all projects use the Java plugin).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T090609Z" creationid="haohang" creationdate="20160718T090609Z">
        <seg>最常见的用例是，要分享共同的生命周期（例如所有项目都使用 Java 插件） 的多项目构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The most popular ones at the moment are Maven and Ivy.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150716T073949Z" creationid="haohang" creationdate="20150716T073949Z">
        <seg>目前最受欢迎的解决方案是 Maven 和 Ivy。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The multi-project tree created in the settings file is made up of so called <bpt i="0" x="0">&lt;e0&gt;</bpt>project descriptors<ept i="0">&lt;/e0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T070328Z" creationid="haohang" creationdate="20160519T070304Z">
        <seg>在设置文件中创建的多项目树组成了所谓的<bpt i="0" x="0">&lt;e0&gt;</bpt>项目描述符<ept i="0">&lt;/e0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The name and version of the project</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T134135Z" creationid="Administrator" creationdate="20150427T134135Z">
        <seg>project的名称和版本</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The name of the application source directory, relative to the project directory.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T141506Z" creationid="msdx" creationdate="20150504T141506Z">
        <seg>相对于项目目录的应用程序源目录名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The name of the archive can also be changed at any time later on.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T155244Z" creationid="msdx" creationdate="20141113T155232Z">
        <seg>还可以在以后的任何时候更改归档文件的名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The name of the closure block in the build script (<bpt i="1" x="1">&lt;c1&gt;</bpt>greeting<ept i="1">&lt;/c1&gt;</ept>) needs to match the extension object name.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T131651Z" creationid="95" creationdate="20160820T131651Z">
        <seg>在构建脚本中，这个闭包块的名字（<bpt i="1" x="1">&lt;c1&gt;</bpt>greeting<ept i="1">&lt;/c1&gt;</ept>）需要和扩展对象的名字相匹配。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The name of the directory to generate distributions into, relative to the build directory.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T045340Z" creationid="Administrator" creationdate="20150427T045340Z">
        <seg>相对于build目录的目录名称，发布的文件将生成到此目录中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The name of the directory to generate documentation into, relative to the build directory.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T045531Z" creationid="Administrator" creationdate="20150427T045531Z">
        <seg>相对于build目录的目录名称，文档将生成到此目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The name of the directory to generate libraries into, relative to the build directory.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T045305Z" creationid="Administrator" creationdate="20150427T045158Z">
        <seg>相对于build目录的目录名称，类库将生成到此目录中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The name of the directory to generate reports into, relative to the build directory.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T045352Z" creationid="Administrator" creationdate="20150426T085942Z">
        <seg>相对于build目录的目录名称，报告将生成到此目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The name of the directory to generate test result .xml files into, relative to the build directory.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T045424Z" creationid="Administrator" creationdate="20150427T045024Z">
        <seg>相对于build目录的目录名称，测试报告的.xml文件将生成到此目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The name of the directory to generate the project report into, relative to the reports directory.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T062249Z" creationid="haohang" creationdate="20150628T062020Z">
        <seg>生成项目报告的目录名称，它是相对于reports目录的相对路径。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The name of the directory to generate the test report into, relative to the reports directory.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T062049Z" creationid="Administrator" creationdate="20150427T045122Z">
        <seg>相对于reports目录的目录名称，测试报告将生成到此目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The name of the directory to use to cache source dependency information, relative to the build directory.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T045638Z" creationid="Administrator" creationdate="20150427T045638Z">
        <seg>相对于build目录的目录名称，该目录用于缓存源代码的依赖信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The name of the lib directory inside the generated EAR.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T141539Z" creationid="msdx" creationdate="20150504T141539Z">
        <seg>生成的 EAR 文件里的 lib 目录名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The name of the project directory.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T044241Z" creationid="msdx" creationdate="20141108T044241Z">
        <seg>项目目录的名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The name of the source set, used to identify it.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T051402Z" creationid="Administrator" creationdate="20150427T051402Z">
        <seg>用来确定一个源集的源集名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The name of the web application source directory, relative to the project directory.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T092314Z" creationid="msdx" creationdate="20150503T092132Z">
        <seg>web 应用程序源目录的名称，是一个相对于项目目录的目录名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The next example demonstrates <bpt i="0" x="0">&lt;c0&gt;</bpt>latest<ept i="0">&lt;/c0&gt;</ept> selectors based on a custom status scheme declared in a module metadata rule:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T041803Z" creationid="95" creationdate="20151129T041803Z">
        <seg>下一个示例演示了基于在一个模块的元数据规则中声明的自定义状态模式的<bpt i="0" x="0">&lt;c0&gt;</bpt>latest<ept i="0">&lt;/c0&gt;</ept>选择器：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The next time you run this build, Gradle uses the compiled script, if the script has not changed since it was compiled.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T153457Z" creationid="msdx" creationdate="20141109T153441Z">
        <seg>下次你运行此构建时， 如果该脚本自它编译后没有被修改，Gradle 会使用这个已编译的脚本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The only Unicode values that are explicitly prohibited are '<bpt i="0" x="0">&lt;c0&gt;</bpt>\<ept i="0">&lt;/c0&gt;</ept>', '<bpt i="1" x="1">&lt;c1&gt;</bpt>/<ept i="1">&lt;/c1&gt;</ept>' and any ISO control character.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T033007Z" creationid="95" creationdate="20170416T033007Z">
        <seg>唯一明确禁止使用的Unicode字符是“<bpt i="0" x="0">&lt;c0&gt;</bpt>\<ept i="0">&lt;/c0&gt;</ept>”，“<bpt i="1" x="1">&lt;c1&gt;</bpt>/<ept i="1">&lt;/c1&gt;</ept>”以及所有的ISO控制字符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The only difference is the pattern, which is <bpt i="12" x="12">&lt;c12&gt;</bpt>org.gradle.project.<bpt i="13" x="13">&lt;e13&gt;</bpt><bpt i="14" x="14">&lt;c14&gt;</bpt>propertyName<ept i="14">&lt;/c14&gt;</ept><ept i="13">&lt;/e13&gt;</ept><ept i="12">&lt;/c12&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T150021Z" creationid="msdx" creationdate="20141109T150021Z">
        <seg>唯一的区别是，它是<bpt i="12" x="12">&lt;c12&gt;</bpt>org.gradle.project<bpt i="13" x="13">&lt;e13&gt;</bpt><bpt i="14" x="14">&lt;c14&gt;</bpt>propertyName<ept i="14">&lt;/c14&gt;</ept><ept i="13">&lt;/e13&gt;</ept><ept i="12">&lt;/c12&gt;</ept>的模式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The only values that are explicitly prohibited are '<bpt i="0" x="0">&lt;c0&gt;</bpt>\<ept i="0">&lt;/c0&gt;</ept>', '<bpt i="1" x="1">&lt;c1&gt;</bpt>/<ept i="1">&lt;/c1&gt;</ept>' and any ISO control character.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170304T030207Z" creationid="95" creationdate="20170304T030207Z">
        <seg>唯一明确禁止使用的是“<bpt i="0" x="0">&lt;c0&gt;</bpt>\<ept i="0">&lt;/c0&gt;</ept>”，“<bpt i="1" x="1">&lt;c1&gt;</bpt>/<ept i="1">&lt;/c1&gt;</ept>”以及所有的ISO控制字符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The ordering rule only has an effect when both tasks are scheduled for execution.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T014532Z" creationid="msdx" creationdate="20141111T014359Z">
        <seg>排序规则仅在这两项任务计划执行时起作用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The original configuration has therefore a version conflict which is resolved to the newer <bpt i="4" x="4">&lt;c4&gt;</bpt>seal-2.0<ept i="4">&lt;/c4&gt;</ept> version.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T042042Z" creationid="haohang" creationdate="20150807T042042Z">
        <seg>原始配置因此有版本冲突，所以被解析为更新的 <bpt i="4" x="4">&lt;c4&gt;</bpt>seal-2.0<ept i="4">&lt;/c4&gt;</ept> 版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The other arguments form the value.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150526T064647Z" creationid="haohang" creationdate="20150526T064647Z">
        <seg>其他参数构成了它的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The other is a <bpt i="1" x="1">&lt;a1&gt;</bpt> Networking Properties page <ept i="1">&lt;/a1&gt;</ept> from the JDK docs.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141121T142145Z" creationid="msdx" creationdate="20141121T142108Z">
        <seg>另一个地方是 JDK 文档的<bpt i="1" x="1">&lt;a1&gt;</bpt>网络属性页<ept i="1">&lt;/a1&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The other manifests might be either described by a file path or, like in the example above, by a reference to another <bpt i="1" x="1">&lt;c1&gt;</bpt>Manifest<ept i="1">&lt;/c1&gt;</ept> object.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T145536Z" creationid="msdx" creationdate="20150428T145536Z">
        <seg>其他的manifest可能使用文件路径来描述，像上面的例子，使用对另一个<bpt i="1" x="1">&lt;c1&gt;</bpt>Manifest<ept i="1">&lt;/c1&gt;</ept>对象的引用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The other results currently cannot be disabled.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T142151Z" creationid="msdx" creationdate="20150428T142151Z">
        <seg>目前不能禁用其他的结果。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The other statement uses the <bpt i="2" x="2">&lt;c2&gt;</bpt>project<ept i="2">&lt;/c2&gt;</ept> property available to any build script, which returns the associated <bpt i="3" x="3">&lt;c3&gt;</bpt>Project<ept i="3">&lt;/c3&gt;</ept> object.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T043642Z" creationid="msdx" creationdate="20141108T043357Z">
        <seg>其他语句使用了在任何构建脚本中可以访问的<bpt i="2" x="2">&lt;c2&gt;</bpt>project<ept i="2">&lt;/c2&gt;</ept>属性，则返回关联的<bpt i="3" x="3">&lt;c3&gt;</bpt>Project<ept i="3">&lt;/c3&gt;</ept>对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The other type of task is the enhanced task, where the behaviour is built into the task, and the task provides some properties which you can use to configure the behaviour.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T143130Z" creationid="95" creationdate="20160814T143051Z">
        <seg>另一种类型的任务是增强型的任务，它的任务内置在任务中，并且这个任务提供了一些属性能够让你用于配置其行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The output files of the TaskOutputs are included in the file collection.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T161128Z" creationid="msdx" creationdate="20141112T161128Z">
        <seg>TaskOutputs 的输出文件会被包含在文件集合内。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The output files of the source set, containing its compiled classes and resources.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T051430Z" creationid="Administrator" creationdate="20150427T051430Z">
        <seg>源集的输出文件，包含它编译过的类和资源。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The output files of the task are included in the file collection.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T161108Z" creationid="msdx" creationdate="20141112T161108Z">
        <seg>任务的输出文件会被包含在文件集合内。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The passphrase used to protect your private key.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160108T151707Z" creationid="95" creationdate="20160108T151707Z">
        <seg>用来保护你的私钥的密码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The path <bpt i="0" x="0">&lt;c0&gt;</bpt>:bluewhale<ept i="0">&lt;/c0&gt;</ept> corresponds to the file system path <bpt i="1" x="1">&lt;c1&gt;</bpt>water/bluewhale<ept i="1">&lt;/c1&gt;</ept> in the case of the example above.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T061355Z" creationid="haohang" creationdate="20160715T092402Z">
        <seg>在上面的示例中，该路径<bpt i="0" x="0">&lt;c0&gt;</bpt>:bluewhale<ept i="0">&lt;/c0&gt;</ept>对应于文件系统路径<bpt i="1" x="1">&lt;c1&gt;</bpt>water/bluewhale<ept i="1">&lt;/c1&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The path of a task is simply its project path plus the task name.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T061502Z" creationid="haohang" creationdate="20160718T061502Z">
        <seg>一项任务的路径只是它的项目路径加上其任务名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The path of the directory to write the generated POMs, relative to the build directory.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151228T152713Z" creationid="95" creationdate="20151228T152526Z">
        <seg>相对于构建目录，用于写入生成的POM的文件夹路径。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The paths of the dependencies in the generated IDEA files are absolute.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T092127Z" creationid="haohang" creationdate="20150625T074643Z">
        <seg>在生成的 IDEA 文件的依赖项路径是绝对路径。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The patterns are used in the order that they are defined.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T133151Z" creationid="95" creationdate="20151006T133151Z">
        <seg>这些模式以定义它们的顺序来使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The plugin adds a <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>CompareGradleBuilds<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept> task named “<bpt i="3" x="3">&lt;c3&gt;</bpt>compareGradleBuilds<ept i="3">&lt;/c3&gt;</ept>” to the project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170109T124329Z" creationid="95" creationdate="20170107T071455Z">
        <seg>该插件添加了一个叫“<bpt i="3" x="3">&lt;c3&gt;</bpt>compareGradleBuilds<ept i="3">&lt;/c3&gt;</ept>”的<bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>CompareGradleBuilds<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept> 任务到项目中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The plugin adds a <bpt i="1" x="1">&lt;c1&gt;</bpt>sonarAnalyze<ept i="1">&lt;/c1&gt;</ept> task that analyzes the project to which the plugin is applied, as well as its subprojects.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150510T142846Z" creationid="msdx" creationdate="20150509T132916Z">
        <seg>该插件添加了<bpt i="1" x="1">&lt;c1&gt;</bpt>sonarAnalyze<ept i="1">&lt;/c1&gt;</ept> task ，用来分析一个project 及子project 都应用了哪个插件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The plugin adds a number of tasks to the project that perform the quality checks.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T151827Z" creationid="msdx" creationdate="20150504T151827Z">
        <seg>该插件向你的项目添加了大量的执行质量检查的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The plugin adds an extension named "<bpt i="0" x="0">&lt;c0&gt;</bpt>distributions<ept i="0">&lt;/c0&gt;</ept>" of type <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>DistributionContainer<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept> to the project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150701T030058Z" creationid="haohang" creationdate="20150701T025913Z">
        <seg>本插件向 project 添加了一个名为“<bpt i="0" x="0">&lt;c0&gt;</bpt>distributions<ept i="0">&lt;/c0&gt;</ept>” 的 <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>DistributionContainer<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept> 类型的扩展。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The plugin adds the following tasks to the project:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T071527Z" creationid="haohang" creationdate="20150707T071527Z">
        <seg>该插件向project 中添加了以下任务：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The plugin build a distribution for your library.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150705T084627Z" creationid="haohang" creationdate="20150705T084627Z">
        <seg>该插件还可以生成你的 library 的分发文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The plugin can also build a distribution for your application.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150702T104304Z" creationid="haohang" creationdate="20150702T104304Z">
        <seg>该插件还可以生成你的应用程序的分发文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The plugin in the sample init scripts ensures, that only a specified repository is used when running the build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161215T144421Z" creationid="95" creationdate="20161215T144259Z">
        <seg>这个在示例的init 脚本中的插件，确保了当执行构建的时候只使用一个指定的仓库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The plugin is based on Sonar Runner 2.0, which makes it compatible with Sonar 2.11 and higher.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T060356Z" creationid="msdx" creationdate="20150513T060356Z">
        <seg>该插件基于Sonar Runner 2.0，这使它与Sonar 2.11 或更高的版本相兼容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The plugin is based on the <bpt i="2" x="2">&lt;a2&gt;</bpt>Sonar Runner<ept i="2">&lt;/a2&gt;</ept> and requires Sonar 2.11 or higher.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150510T142949Z" creationid="msdx" creationdate="20150510T142949Z">
        <seg>该插件基于<bpt i="2" x="2">&lt;a2&gt;</bpt>Sonar Runner<ept i="2">&lt;/a2&gt;</ept>，并要求是 Sonar 2.11 或更高的版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The plugin is visible to every build script used by the build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160818T151455Z" creationid="95" creationdate="20160818T151455Z">
        <seg>这个插件在该构建所使用的每一个构建脚本当中都是可见的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The plugin must be in the classpath of your build script.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T044410Z" creationid="95" creationdate="20161211T044410Z">
        <seg>这个插件必须在你的构建脚本的classpath中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The plugin provides a DSL for configuring model objects that model the Eclipse view of the project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T100530Z" creationid="haohang" creationdate="20150624T100530Z">
        <seg>该插件提供一个 DSL，用于配置把该 project 的Eclipse 视图做成模型的模型对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The plugin provides a standardized set of hooks for adding and removing content from the generated files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T071706Z" creationid="haohang" creationdate="20150625T071706Z">
        <seg>该插件提供了一套标准化的 hooks 用于添加和删除生成的文件的内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The plugin provides objects modeling the sections of the metadata files that are generated by Gradle.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T073643Z" creationid="haohang" creationdate="20150625T073643Z">
        <seg>本插件提供了一些对象，对由 Gradle 生成的元数据文件的这一部分内容进行建模。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The plugin supports <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>joint compilation<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>, which allows to freely mix and match Groovy and Java code, with dependencies in both directions.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T071106Z" creationid="msdx" creationdate="20150429T035439Z">
        <seg>该插件支持<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>联合编译<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>，可以任意地混合及匹配Groovy 和 Java 代码各自的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The plugin supports <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>joint compilation<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>, which allows to freely mix and match Scala and Java code, with dependencies in both directions.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T144831Z" creationid="msdx" creationdate="20150429T144757Z">
        <seg>该插件支持<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>联合编译<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>，联合编译可以通过 Scala 及 Java 的各自的依赖任意地混合及匹配它们的代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The powerful support for multi-project builds is one of Gradle's unique selling points.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160522T024605Z" creationid="95" creationdate="20160521T140827Z">
        <seg>对多项目构建的强大支持是 Gradle 的独特优点之一。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The predicate is evaluated just before the task is due to be executed.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T020952Z" creationid="msdx" creationdate="20141111T020913Z">
        <seg>断言只在任务要执行前才计算。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The primary difference between a task <bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;e3&gt;</bpt>ordering<ept i="3">&lt;/e3&gt;</ept><ept i="2">&lt;/s2&gt;</ept> and a task <bpt i="4" x="4">&lt;s4&gt;</bpt><bpt i="5" x="5">&lt;e5&gt;</bpt>dependency<ept i="5">&lt;/e5&gt;</ept><ept i="4">&lt;/s4&gt;</ept> is that an ordering rule does not influence which tasks will be executed, only the order in which they will be executed.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T143431Z" creationid="msdx" creationdate="20141110T143431Z">
        <seg>任务<bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;e3&gt;</bpt>排序<ept i="3">&lt;/e3&gt;</ept><ept i="2">&lt;/s2&gt;</ept>和任务<bpt i="4" x="4">&lt;s4&gt;</bpt><bpt i="5" x="5">&lt;e5&gt;</bpt>依赖<ept i="5">&lt;/e5&gt;</ept><ept i="4">&lt;/s4&gt;</ept>之间的主要区别是，排序规则不会影响那些任务的执行，而仅将执行的顺序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The primary “jar” artifact for the java component: <bpt i="0" x="0">&lt;c0&gt;</bpt>project1-1.0.jar<ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T153844Z" creationid="95" creationdate="20170330T153844Z">
        <seg>Java 组件的主要“jar”构件︰<bpt i="0" x="0">&lt;c0&gt;</bpt>project1-1.0.jar<ept i="0">&lt;/c0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The project classpath becomes a complete mess, and, if a classpath problem arises, hell on earth invites you for a ride.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150721T012537Z" creationid="haohang" creationdate="20150721T012537Z">
        <seg>项目的类路径会变得一片狼藉，并且，如果类路径出现问题时，那简直就是人间地狱。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The project object is passed as a parameter, which the plugin can use to configure the project however it needs to.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T123728Z" creationid="95" creationdate="20160820T123634Z">
        <seg>这个project对象会被作为一个参数传进去，该参数可以让插件用于对这个project配置它所需要的东西。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The project object provides a <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>LoggingManager<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>, which allows you to change the log levels that standard out or error are redirected to when your build script is evaluated.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T034354Z" creationid="msdx" creationdate="20141116T131251Z">
        <seg>Project对象提供了一个<bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>LoggingManager<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>，它可以在评估构建脚本时，修改标准输出和错误重定向的日志级别。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The project path is assumed to be equal to the relative physical file system path.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T041538Z" creationid="haohang" creationdate="20160519T041355Z">
        <seg>项目路径被假定为等于物理文件系统的相对路径。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The project report defines the following convention properties:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T061705Z" creationid="haohang" creationdate="20150628T061705Z">
        <seg>项目报告定义以下约定属性：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The project report plugin defines the following tasks:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T061113Z" creationid="haohang" creationdate="20150628T061113Z">
        <seg>项目报告插件定义了以下任务：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The project report plugin does not define any dependency configurations.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T061648Z" creationid="haohang" creationdate="20150628T061648Z">
        <seg>项目报告插件没有定义任何的依赖配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The project report plugin does not require any particular project layout.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T061553Z" creationid="haohang" creationdate="20150628T061553Z">
        <seg>项目报告插件不需要任何特定的项目布局。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The project tree is created in the <bpt i="0" x="0">&lt;c0&gt;</bpt>settings.gradle<ept i="0">&lt;/c0&gt;</ept> file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T041031Z" creationid="haohang" creationdate="20160519T041031Z">
        <seg>项目树在<bpt i="0" x="0">&lt;c0&gt;</bpt>settings.gradle<ept i="0">&lt;/c0&gt;</ept>文件中创建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The projects to generate the reports for.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T061914Z" creationid="haohang" creationdate="20150628T061914Z">
        <seg>要生成报告的projects。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The properties are described below.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T050913Z" creationid="Administrator" creationdate="20150427T050913Z">
        <seg>这些属性将在下文中进行介绍。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The properties file in the user's home directory has precedence over property files in the project directories.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T142433Z" creationid="msdx" creationdate="20141109T140928Z">
        <seg>用户的主目录中的属性文件比项目目录中的属性文件更先被访问到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The properties of the <bpt i="5" x="5">&lt;c5&gt;</bpt>gradle.properties<ept i="5">&lt;/c5&gt;</ept> can be accessed via the project object.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T134221Z" creationid="msdx" creationdate="20141109T134221Z">
        <seg>通过project对象，可以访问到<bpt i="5" x="5">&lt;c5&gt;</bpt>gradle.properties<ept i="5">&lt;/c5&gt;</ept>里的属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The public key ID (an 8 character hexadecimal string).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160108T151502Z" creationid="95" creationdate="20160108T151502Z">
        <seg>公钥 ID （一个8位字符的十六进制字符串）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The publishing functionality described here will eventually supersede that functionality.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170211T134921Z" creationid="95" creationdate="20170211T134921Z">
        <seg>这里描述的发布功能最终将取代那一功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The reason every project needs to be configured is to support the flexibility of accessing and changing any part of Gradle project model.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160522T120407Z" creationid="95" creationdate="20160522T120407Z">
        <seg>每个项目需要配置的原因是为了支持灵活地访问及更改 Gradle 项目模型的任何部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The reason is, that Gradle adds a set of default imports to your script.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T124241Z" creationid="msdx" creationdate="20141111T124241Z">
        <seg>原因是，Gradle 会向您的脚本添加默认的一些导入。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The remaining sections will be left as-is.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T103155Z" creationid="haohang" creationdate="20150624T103155Z">
        <seg>剩余的部分则不变。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The replaced manifest is merged into the new one.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150526T004139Z" creationid="haohang" creationdate="20150526T004139Z">
        <seg>被替换的manifest 会被合并到新的对象单中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The report is available at <bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;e3&gt;</bpt><bpt i="4" x="4">&lt;c4&gt;</bpt>$buildDir<ept i="4">&lt;/c4&gt;</ept><ept i="3">&lt;/e3&gt;</ept>/reports/jacoco/test<ept i="2">&lt;/c2&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T130420Z" creationid="msdx" creationdate="20150506T130420Z">
        <seg>该报告可以在 <bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;e3&gt;</bpt><bpt i="4" x="4">&lt;c4&gt;</bpt>$buildDir<ept i="4">&lt;/c4&gt;</ept><ept i="3">&lt;/e3&gt;</ept>/reports/jacoco/test<ept i="2">&lt;/c2&gt;</ept> 中看到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The repositories to publish to are defined by the <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>PublishingExtension.getRepositories()<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> container.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170304T033910Z" creationid="95" creationdate="20170304T033910Z">
        <seg>用于发布的仓库是通过<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>PublishingExtension.getRepositories()<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>容器来定义的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The repositories you have defined (as described in <bpt i="0" x="0">&lt;a0&gt;</bpt>Section 50.6, “Repositories”<ept i="0">&lt;/a0&gt;</ept>) are not automatically used for uploading.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151226T091735Z" creationid="95" creationdate="20151226T091735Z">
        <seg>你所定义的仓库（<bpt i="0" x="0">&lt;a0&gt;</bpt>第 50.6 节，“仓库”<ept i="0">&lt;/a0&gt;</ept>所描述的）并不会自动地用于上传。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The resolved artifact metadata for a particular artifact, including a pointer to the downloaded artifact file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T045218Z" creationid="95" creationdate="20151129T045041Z">
        <seg>对于特定构件的解析后的构件元数据，包括指向下载的构件工件的信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The resolved module metadata for a particular module, including module artifacts and module dependencies.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T045032Z" creationid="95" creationdate="20151129T045032Z">
        <seg>对于特定模块的解析后的模块元数据，包括模块构件和模块依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The resources of this source set.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T052616Z" creationid="Administrator" creationdate="20150427T052616Z">
        <seg>此源集的资源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The result is that the following artifacts will be published for each project:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T153801Z" creationid="95" creationdate="20170330T145246Z">
        <seg>其结果是将为每个项目发表以下构件︰</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The result of resolving a dynamic version (e.g. <bpt i="0" x="0">&lt;c0&gt;</bpt>1.+<ept i="0">&lt;/c0&gt;</ept>) to a concrete version (e.g. <bpt i="1" x="1">&lt;c1&gt;</bpt>1.2<ept i="1">&lt;/c1&gt;</ept>).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T044929Z" creationid="95" creationdate="20151129T044929Z">
        <seg>解析一个动态版本（例如<bpt i="0" x="0">&lt;c0&gt;</bpt>1.+<ept i="0">&lt;/c0&gt;</ept>）到一个具体的版本（例如<bpt i="1" x="1">&lt;c1&gt;</bpt>1.2<ept i="1">&lt;/c1&gt;</ept>）的结果。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The resulting <bpt i="0" x="0">&lt;c0&gt;</bpt>.classpath<ept i="0">&lt;/c0&gt;</ept> file will only contain Gradle-generated dependency entries, but not any other dependency entries that may have been present in the original file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T065508Z" creationid="haohang" creationdate="20150625T064932Z">
        <seg>生成的<bpt i="0" x="0">&lt;c0&gt;</bpt>.classpath<ept i="0">&lt;/c0&gt;</ept>文件将只包含 Gradle 生成的依赖项，而没有其他可能存在于原始文件的依赖项。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The resulting module file will only contain Gradle-generated dependency entries, but not any other dependency entries that may have been present in the original file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T073940Z" creationid="haohang" creationdate="20150625T073940Z">
        <seg>生成的模块文件将只包含 Gradle 生成的依赖项，而没有其他可能存在于原始文件的依赖项。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The results are stored in the Sonar database.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150510T142905Z" creationid="msdx" creationdate="20150510T142905Z">
        <seg>分析结果存储于 Sonar 数据库中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The results in an XML format that is compatible with the Ant JUnit report task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T084031Z" creationid="msdx" creationdate="20150428T084031Z">
        <seg>与Ant Junit report 任务兼容的 XML 格式的结果。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The results of this analysis are stored in the file designated by <bpt i="0" x="0">&lt;c0&gt;</bpt>scalaCompileOptions.incrementalOptions.analysisFile<ept i="0">&lt;/c0&gt;</ept> (which has a sensible default).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T155609Z" creationid="msdx" creationdate="20150501T155513Z">
        <seg>解析结果进入由 <bpt i="0" x="0">&lt;c0&gt;</bpt>scalaCompileOptions.incrementalOptions.analysisFile<ept i="0">&lt;/c0&gt;</ept> 所指定的文件（它有一个合理的默认值）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The return value can be an object of any of the types supported by the <bpt i="3" x="3">&lt;c3&gt;</bpt>files()<ept i="3">&lt;/c3&gt;</ept> method.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T160650Z" creationid="msdx" creationdate="20141112T160650Z">
        <seg>这个闭包或Callable实例的返回值可以是<bpt i="3" x="3">&lt;c3&gt;</bpt>files()<ept i="3">&lt;/c3&gt;</ept>方法所支持的任何类型的对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The root project is the only project in a path that is not specified by its name.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160715T092203Z" creationid="haohang" creationdate="20160715T092203Z">
        <seg>根项目是唯一的在一个不由其名称指定的路径中的项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The rule provided will enforce just this: any time version <bpt i="2" x="2">&lt;c2&gt;</bpt>1.2<ept i="2">&lt;/c2&gt;</ept> is encountered it will be replaced with <bpt i="3" x="3">&lt;c3&gt;</bpt>1.2.1<ept i="3">&lt;/c3&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T083805Z" creationid="95" creationdate="20151115T083805Z">
        <seg>提供的规则将强制执行：在任何时间遇到了<bpt i="2" x="2">&lt;c2&gt;</bpt>1.2<ept i="2">&lt;/c2&gt;</ept>版本，都将会替换为<bpt i="3" x="3">&lt;c3&gt;</bpt>1.2.1<ept i="3">&lt;/c3&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The same Gradle build, with the same version, before and after a change to the build (i.e. testing build changes).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161219T150133Z" creationid="95" creationdate="20161219T150133Z">
        <seg>同样原Gradle构建，同样的版本，但是比较构建前后的变化（即测试构建产生的更改）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The same applies to any attempt to access publication-specific tasks like <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>PublishToIvyRepository<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T144922Z" creationid="95" creationdate="20170330T144733Z">
        <seg>这同样适用于任何发布相关的任务的访问，像<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>PublishToIvyRepository<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The same applies to any attempt to access publication-specific tasks like <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>PublishToMavenRepository<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065242Z" creationid="95" creationdate="20170416T065242Z">
        <seg>这同样适用于任何发布相关的任务的访问，比如<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>PublishToMavenRepository<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The same could be done for the module paths in the project file:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T074107Z" creationid="haohang" creationdate="20150625T074107Z">
        <seg>对项目文件中的模块路径的处理也是一样：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The same could be done for the natures in the <bpt i="2" x="2">&lt;c2&gt;</bpt>.project<ept i="2">&lt;/c2&gt;</ept> file:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T065746Z" creationid="haohang" creationdate="20150625T065641Z">
        <seg>对<bpt i="2" x="2">&lt;c2&gt;</bpt>.project<ept i="2">&lt;/c2&gt;</ept>文件中的natures的处理也是一样：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The same hooks can be used to add additional properties which aren't covered by the plugin's object model.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T100837Z" creationid="msdx" creationdate="20150512T100837Z">
        <seg>相同的hook 可以用来添加额外的属性，并且不会被插件的对象模型所覆盖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The second layer of Ant is its wealth of Ant tasks and types, like <bpt i="0" x="0">&lt;c0&gt;</bpt>javac<ept i="0">&lt;/c0&gt;</ept>, <bpt i="1" x="1">&lt;c1&gt;</bpt>copy<ept i="1">&lt;/c1&gt;</ept> or <bpt i="2" x="2">&lt;c2&gt;</bpt>jar<ept i="2">&lt;/c2&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141114T141307Z" creationid="msdx" creationdate="20141114T141307Z">
        <seg>Ant 的第二层是其丰富的 Ant 任务和类型，如<bpt i="0" x="0">&lt;c0&gt;</bpt>javac<ept i="0">&lt;/c0&gt;</ept>、<bpt i="1" x="1">&lt;c1&gt;</bpt>copy<ept i="1">&lt;/c1&gt;</ept>或<bpt i="2" x="2">&lt;c2&gt;</bpt>jar<ept i="2">&lt;/c2&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The section contains information on how to configure certain behavior of the daemon (including turning on the daemon by default) in a more 'persistent' way.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141118T100149Z" creationid="msdx" creationdate="20141118T100149Z">
        <seg>这一章节包含了有关如何以一种“持久化”的方式配置某些行为（包括在默认情况下打开守护进程）的信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The separation that Ant does between tasks and targets is not done by Gradle.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T123750Z" creationid="msdx" creationdate="20141111T123747Z">
        <seg>Gradle 没有像 Ant 那样对任务和目标进行分离。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The setting is particularly useful for tweaking memory settings.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141120T052003Z" creationid="msdx" creationdate="20141120T052003Z">
        <seg>该设置对调整内存设置特别有用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The settings file gets executed during the initialization phase.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T024827Z" creationid="haohang" creationdate="20160519T024722Z">
        <seg>这个配置文件会在初始化阶段执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The settings file is determined by Gradle via a naming convention.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T024624Z" creationid="haohang" creationdate="20160519T024624Z">
        <seg>这个设置文件是由 Gradle 通过一种命名约定来决定的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The signature file will be placed alongside the artifact being signed.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160126T140514Z" creationid="95" creationdate="20160126T140514Z">
        <seg>签名文件将和被签名的 artifact 放在一起。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The signature files will be placed alongside the artifacts being signed.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160109T072522Z" creationid="95" creationdate="20160109T072522Z">
        <seg>签名文件将和被签名的artifacts放在一起。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The signing plugin adds a <bpt i="0" x="0">&lt;c0&gt;</bpt>signing.signPom()<ept i="0">&lt;/c0&gt;</ept> (see: <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>SigningExtension.signPom()<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>) method that can be used in the <bpt i="3" x="3">&lt;c3&gt;</bpt>beforeDeployment()<ept i="3">&lt;/c3&gt;</ept> block in your upload task configuration.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160126T145230Z" creationid="95" creationdate="20160126T145230Z">
        <seg>签名插件添加了一个<bpt i="0" x="0">&lt;c0&gt;</bpt>signing.signPom()<ept i="0">&lt;/c0&gt;</ept> （请参见： <bpt i="1" x="1">&lt;a1&gt;</bpt> <bpt i="2" x="2">&lt;c2&gt;</bpt>SigningExtension.signPom()<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>）方法，这个方法可以在你的上传任务配置的<bpt i="3" x="3">&lt;c3&gt;</bpt>beforeDeployment()<ept i="3">&lt;/c3&gt;</ept>块中使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The signing plugin adds the ability to digitally sign built files and artifacts.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160108T150522Z" creationid="95" creationdate="20160106T145927Z">
        <seg>签名插件添加了对构件的文件和artifacts进行数字签名的功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The signing plugin currently only provides support for generating <bpt i="0" x="0">&lt;a0&gt;</bpt>PGP signatures<ept i="0">&lt;/a0&gt;</ept> (which is the signature format <bpt i="1" x="1">&lt;a1&gt;</bpt>required for publication to the Maven Central Repository<ept i="1">&lt;/a1&gt;</ept>).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160108T151040Z" creationid="95" creationdate="20160108T151040Z">
        <seg>签名插件目前只提供了生成<bpt i="0" x="0">&lt;a0&gt;</bpt>PGP 签名<ept i="0">&lt;/a0&gt;</ept>的支持（这是<bpt i="1" x="1">&lt;a1&gt;</bpt>发布到Maven 中央库所需的<ept i="1">&lt;/a1&gt;</ept>签名格式）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The simple Gradle tasks are like Ant's targets and the enhanced Gradle tasks also include the Ant task aspects.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T123839Z" creationid="msdx" creationdate="20141111T123839Z">
        <seg>简单的 Gradle 任务就像 Ant 的目标，而增强的 Gradle 任务还包括 Ant 任务方面的内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The simple rule mentioned already above is: Execute all tasks down the hierarchy which have this name.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160715T090953Z" creationid="haohang" creationdate="20160715T090953Z">
        <seg>上面已经提到的简单的规则是︰ 执行在该层次结构下具体该名字的所有任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The simplest way to ensure that the publishing plugin is configured when you attempt to access the <bpt i="2" x="2">&lt;c2&gt;</bpt>GenerateIvyDescriptor<ept i="2">&lt;/c2&gt;</ept> task is to place the access inside a <bpt i="3" x="3">&lt;c3&gt;</bpt>publishing<ept i="3">&lt;/c3&gt;</ept> block, as the example above demonstrates.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T144731Z" creationid="95" creationdate="20170330T144731Z">
        <seg>确保当你尝试访问<bpt i="2" x="2">&lt;c2&gt;</bpt>GenerateIvyDescriptor<ept i="2">&lt;/c2&gt;</ept>任务时，发布插件已经配置好的最简单的方式是，将访问的代码放在<bpt i="3" x="3">&lt;c3&gt;</bpt>publishing<ept i="3">&lt;/c3&gt;</ept>代码块中，如上面的例子中所示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The simplest way to ensure that the publishing plugin is configured when you attempt to access the <bpt i="2" x="2">&lt;c2&gt;</bpt>GenerateMavenPom<ept i="2">&lt;/c2&gt;</ept> task is to place the access inside a <bpt i="3" x="3">&lt;c3&gt;</bpt>publishing<ept i="3">&lt;/c3&gt;</ept> block, as the example above demonstrates.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065224Z" creationid="95" creationdate="20170416T065224Z">
        <seg>确保当你尝试访问<bpt i="2" x="2">&lt;c2&gt;</bpt>GenerateMavenPom<ept i="2">&lt;/c2&gt;</ept>任务时发布插件已经配置好的最简单的方式是，将访问的代码放在<bpt i="3" x="3">&lt;c3&gt;</bpt>publishing<ept i="3">&lt;/c3&gt;</ept>代码块中，如上面的例子中所示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The simplest way to publish a Gradle project to a Maven repository is to specify a <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>SoftwareComponent<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> to publish.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170412T154320Z" creationid="95" creationdate="20170412T154320Z">
        <seg>向Maven仓库发布一个Gradle项目的最简单的方式是指定一个要发布的 <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>SoftwareComponent<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The simplest way to publish a Gradle project to an Ivy repository is to specify a <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>SoftwareComponent<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> to publish.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170211T140401Z" creationid="95" creationdate="20170211T140247Z">
        <seg>向Ivy仓库发布一个Gradle项目的最简单的方式是指定一个要发布的 <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>SoftwareComponent<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The skip Sonar analysis for a particular subproject, set <bpt i="0" x="0">&lt;c0&gt;</bpt>sonarRunner.skipProject<ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150519T124728Z" creationid="msdx" creationdate="20150519T124728Z">
        <seg>对于一个特定的子项目，要跳过 Sonar 分析，可以设置<bpt i="0" x="0">&lt;c0&gt;</bpt>sonarRunner.skipProject<ept i="0">&lt;/c0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The source directories containing the ANTLR grammar files of this source set.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T102927Z" creationid="haohang" creationdate="20150625T102927Z">
        <seg>该源目录包含该 source set 中的 ANTLR 语法文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The source directories containing the Groovy source files of this source set.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T093355Z" creationid="msdx" creationdate="20150429T093155Z">
        <seg>源目录包含该 source set 中的 Groovy 源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The source directories containing the Java source files of this source set.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T052604Z" creationid="Administrator" creationdate="20150427T052604Z">
        <seg>该源目录包含了此源集的所有Java源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The source directories containing the Scala source files of this source set.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150430T154839Z" creationid="msdx" creationdate="20150430T154839Z">
        <seg>源目录包含该 source set 中的 Scala 源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The source directories containing the resources of this source set.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T052901Z" creationid="Administrator" creationdate="20150427T052901Z">
        <seg>该源目录包含了此源集的资源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The source set container works pretty much the same way as other containers, such as <bpt i="4" x="4">&lt;c4&gt;</bpt>tasks<ept i="4">&lt;/c4&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T050716Z" creationid="Administrator" creationdate="20150427T050716Z">
        <seg>源集容器的使用方式几乎与其他容器一样，例如<bpt i="4" x="4">&lt;c4&gt;</bpt>tasks<ept i="4">&lt;/c4&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The source “jar” artifact that has been explicitly configured:<bpt i="0" x="0">&lt;c0&gt;</bpt>project1-1.0-source.jar<ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T153915Z" creationid="95" creationdate="20170330T153915Z">
        <seg>已显式配置的源码“jar”构件︰<bpt i="0" x="0">&lt;c0&gt;</bpt>project1-1.0-source.jar<ept i="0">&lt;/c0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The standard project dependencies are supported and makes relevant projects configured.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160522T124553Z" creationid="95" creationdate="20160522T124420Z">
        <seg>标准项目的依赖也被支持，并且使相关的项目也被配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The storage path for a downloaded artifact includes the SHA1 checksum, meaning that 2 artifacts with the same name but different content can easily be cached.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T042727Z" creationid="95" creationdate="20151129T042324Z">
        <seg>下载的构件的存储路径包括了 SHA1 校验和，意味着 2 个具有相同名称但内容不同的构件可以很容易地被缓存。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The subset is determined by the task name arguments passed to the <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>gradle<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> command and the current directory.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T024458Z" creationid="haohang" creationdate="20160519T024458Z">
        <seg>这个子集是由传递给<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>gradle<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>命令的任务名称参数和当前目录所决定的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The suppleness and richness of Gradle finally allows you to apply common design principles to your build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141101T124838Z" creationid="msdx" creationdate="20141101T124838Z">
        <seg>Gradle的灵活和丰富性最终能够让你将觉的设计原则应用到你的构建当中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The supplied object's <bpt i="4" x="4">&lt;c4&gt;</bpt>toString()<ept i="4">&lt;/c4&gt;</ept> value is used as the file path.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T143001Z" creationid="msdx" creationdate="20141112T143001Z">
        <seg>而所提供的这个对象的<bpt i="4" x="4">&lt;c4&gt;</bpt>tostring()<ept i="4">&lt;/c4&gt;</ept>方法的值会作为文件路径。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The supplied values are validated early in publication.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170304T030404Z" creationid="95" creationdate="20170304T030404Z">
        <seg>这些提供的值会在发布之前进行验证。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The supported tool chain types are:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T091206Z" creationid="haohang" creationdate="20160408T091206Z">
        <seg>支持的工具链类型有︰</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The task aggregates the reports for all tasks that implement the <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>Reporting<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept> interface from <bpt i="3" x="3">&lt;s3&gt;</bpt><bpt i="4" x="4">&lt;e4&gt;</bpt>all projects<ept i="4">&lt;/e4&gt;</ept><ept i="3">&lt;/s3&gt;</ept> in the build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150713T095514Z" creationid="haohang" creationdate="20150713T095514Z">
        <seg>该任务为在 <bpt i="3" x="3">&lt;s3&gt;</bpt><bpt i="4" x="4">&lt;e4&gt;</bpt>all projects<ept i="4">&lt;/e4&gt;</ept><ept i="3">&lt;/s3&gt;</ept> 中实现了 <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>Reporting<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept> 接口的所有任务聚合了报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The task can be configured using its API (see <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Copy<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T091910Z" creationid="msdx" creationdate="20141110T091902Z">
        <seg>可以使用它的 API 来配置这个任务 （见<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Copy<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The task class is visible to every build script used by the build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T144429Z" creationid="95" creationdate="20160814T144415Z">
        <seg>这个任务类在该构建所使用的每一个构建脚本当中都是可见的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The task dependencies declared via task path are supported and cause relevant projects configured.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160522T124703Z" creationid="95" creationdate="20160522T124703Z">
        <seg>通过任务路径定义的任务依赖也被支持，并且会导致相关的项目被配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The task for generating the POM file is of type <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>GenerateMavenPom<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>, and it is given a name based on the name of the publication: "<bpt i="2" x="2">&lt;c2&gt;</bpt>generatePomFileFor«<bpt i="3" x="3">&lt;s3&gt;</bpt><bpt i="4" x="4">&lt;e4&gt;</bpt>NAME OF PUBLICATION<ept i="4">&lt;/e4&gt;</ept><ept i="3">&lt;/s3&gt;</ept>»Publication<ept i="2">&lt;/c2&gt;</ept>".</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T064705Z" creationid="95" creationdate="20170416T064705Z">
        <seg>用于生成POM文件的这个任务，任务类型是 <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>GenerateMavenPom<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>，并且它被指定了一个基于发布名称的名字：“<bpt i="2" x="2">&lt;c2&gt;</bpt>generatePomFileFor«<bpt i="3" x="3">&lt;s3&gt;</bpt><bpt i="4" x="4">&lt;e4&gt;</bpt>PUBLICATION名称<ept i="4">&lt;/e4&gt;</ept><ept i="3">&lt;/s3&gt;</ept>»Publication<ept i="2">&lt;/c2&gt;</ept>”。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The task generates the other results from these binary results.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T142024Z" creationid="msdx" creationdate="20150428T142024Z">
        <seg>这个任务会从这些二进制结果生成其他的结果。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The task has an <bpt i="0" x="0">&lt;c0&gt;</bpt>ignoreFailures<ept i="0">&lt;/c0&gt;</ept> property to control the behavior when tests fail.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T014950Z" creationid="Administrator" creationdate="20150428T014950Z">
        <seg>该任务有一个<bpt i="0" x="0">&lt;c0&gt;</bpt>ignoreFailures<ept i="0">&lt;/c0&gt;</ept>属性，用以控制测试失败时的行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The task is added by the Base plugin which is implicitly applied by the Java plugin.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T082745Z" creationid="Administrator" creationdate="20150426T082745Z">
        <seg>该任务由Base插件添加，并由Java插件隐式实现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The task type extends the <bpt i="2" x="2">&lt;c2&gt;</bpt>JavaCompile<ept i="2">&lt;/c2&gt;</ept> task (see <bpt i="3" x="3">&lt;a3&gt;</bpt>Section 23.11, “CompileJava”<ept i="3">&lt;/a3&gt;</ept>).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T094315Z" creationid="msdx" creationdate="20150429T094315Z">
        <seg>这个task 的类型继承自<bpt i="2" x="2">&lt;c2&gt;</bpt>JavaCompile<ept i="2">&lt;/c2&gt;</ept> task（见<bpt i="3" x="3">&lt;a3&gt;</bpt>第 23.11 节，“CompileJava”<ept i="3">&lt;/a3&gt;</ept>）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The task's <bpt i="0" x="0">&lt;c0&gt;</bpt>inputs<ept i="0">&lt;/c0&gt;</ept> property is of type <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>TaskInputs<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T061500Z" creationid="msdx" creationdate="20141111T061500Z">
        <seg>任务的 <bpt i="0" x="0">&lt;c0&gt;</bpt>inputs<ept i="0">&lt;/c0&gt;</ept> 属性是 <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>TaskInputs<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The task's <bpt i="3" x="3">&lt;c3&gt;</bpt>outputs<ept i="3">&lt;/c3&gt;</ept> property is of type <bpt i="4" x="4">&lt;a4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>TaskOutputs<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/a4&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T061516Z" creationid="msdx" creationdate="20141111T061516Z">
        <seg>任务的 <bpt i="3" x="3">&lt;c3&gt;</bpt>outputs<ept i="3">&lt;/c3&gt;</ept> 属性是 <bpt i="4" x="4">&lt;a4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>TaskOutputs<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/a4&gt;</ept>类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The task's actions are only executed if the predicate evaluates to true.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T020421Z" creationid="msdx" creationdate="20141111T020421Z">
        <seg>如果断言结果为 true，才会执行任务的操作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The tasks recognize existing IDEA files, and merge them with the generated content.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T073325Z" creationid="haohang" creationdate="20150625T073325Z">
        <seg>该任务会识别现有的 IDEA 文件，并将它们与生成的内容进行合并。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The tasks which produce the artifacts in configuration <bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>ConfigurationName<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T082623Z" creationid="Administrator" creationdate="20150426T082623Z">
        <seg>使用配置<bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>ConfigurationName<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>生成构件的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The tasks which produce the artifacts in the <bpt i="0" x="0">&lt;c0&gt;</bpt>archives<ept i="0">&lt;/c0&gt;</ept> configuration, including <bpt i="1" x="1">&lt;c1&gt;</bpt>jar<ept i="1">&lt;/c1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T082242Z" creationid="Administrator" creationdate="20150426T005010Z">
        <seg>使用<bpt i="0" x="0">&lt;c0&gt;</bpt>archives<ept i="0">&lt;/c0&gt;</ept>的配置生成构件的任务，包括<bpt i="1" x="1">&lt;c1&gt;</bpt>jar<ept i="1">&lt;/c1&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The tasks which uploads the artifacts in configuration <bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>ConfigurationName<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T082827Z" creationid="Administrator" creationdate="20150426T082827Z">
        <seg>使用配置<bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>ConfigurationName<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>上传构件的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The test process sets the <bpt i="0" x="0">&lt;c0&gt;</bpt>org.gradle.test.worker<ept i="0">&lt;/c0&gt;</ept> system property to a unique identifier for that test process, which you can use, for example, in files names or other resource identifiers.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T014914Z" creationid="Administrator" creationdate="20150428T013313Z">
        <seg>测试进程程会为其将<bpt i="0" x="0">&lt;c0&gt;</bpt>org.gradle.test.worker<ept i="0">&lt;/c0&gt;</ept>系统属性设置为一个唯一标识符，这个标识符可以用于文件名称或其他资源标识符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The test task provides a <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Test.getDebug()<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> property that can be set to launch to make the JVM wait for a debugger to attach to port 5005 before proceeding with test execution.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T015719Z" creationid="Administrator" creationdate="20150428T015719Z">
        <seg>test任务提供了一个<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Test.getDebug()<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>属性，可以设置为启动，使JVM在执行测试之前，等待一个debugger连接到它的5005端口上。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The tooling API is Gradle wrapper aware and, by default, uses the same target Gradle version as that used by the wrapper-powered project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T152937Z" creationid="95" creationdate="20161218T152004Z">
        <seg>Tooling API 是有Gradle包装器感知的，并且默认情况下使用与wrapper-powered 项目相同的目标Gradle版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The trick is to use only artifact dependencies and group them in lists.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151201T064258Z" creationid="haohang" creationdate="20151201T064126Z">
        <seg>诀窍是只使用构件依赖，并在列表中对它们进行分组。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The type is specified by supplying a <bpt i="2" x="2">&lt;c2&gt;</bpt>--type<ept i="2">&lt;/c2&gt;</ept> argument value.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T074101Z" creationid="haohang" creationdate="20150707T074101Z">
        <seg>类型通过提供一个 <bpt i="2" x="2">&lt;c2&gt;</bpt>--type<ept i="2">&lt;/c2&gt;</ept> 参数值指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The value can be set to either <bpt i="0" x="0">&lt;c0&gt;</bpt>jdk<ept i="0">&lt;/c0&gt;</ept> or <bpt i="1" x="1">&lt;c1&gt;</bpt>jre<ept i="1">&lt;/c1&gt;</ept> location, however, depending on what does your build do, <bpt i="2" x="2">&lt;c2&gt;</bpt>jdk<ept i="2">&lt;/c2&gt;</ept> is safer.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141120T051921Z" creationid="msdx" creationdate="20141120T051921Z">
        <seg>这个值可以设置为<bpt i="0" x="0">&lt;c0&gt;</bpt>jdk<ept i="0">&lt;/c0&gt;</ept>或<bpt i="1" x="1">&lt;c1&gt;</bpt>jre<ept i="1">&lt;/c1&gt;</ept>的位置，不过，根据你的构建所做的，选择 <bpt i="2" x="2">&lt;c2&gt;</bpt>jdk<ept i="2">&lt;/c2&gt;</ept>会更安全。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The various native binary plugins add support for building native software components from C++, C, Objective-C, Objective-C++ and Assembler sources.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160128T151845Z" creationid="95" creationdate="20160128T151845Z">
        <seg>不同的原生二进制插件添加了对从C++，C，Objective-C，Objective-C++以及汇编源文件构建原生软件组件的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The version of a library must be easy to recognize in the filename.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150716T092156Z" creationid="haohang" creationdate="20150716T092156Z">
        <seg>在文件名中库的版本必须是容易辨认的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The version portion of the archive file name.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T160404Z" creationid="msdx" creationdate="20141113T160404Z">
        <seg>归档文件的名称中的版本部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The web application source directory.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T092326Z" creationid="msdx" creationdate="20150503T092326Z">
        <seg>Web 应用程序的源目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The workspace file can effectively only be manipulated via the <bpt i="0" x="0">&lt;c0&gt;</bpt>withXml<ept i="0">&lt;/c0&gt;</ept> hook because its corresponding domain object is essentially empty.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T073249Z" creationid="haohang" creationdate="20150625T073249Z">
        <seg>工作区文件可以有效地只通过<bpt i="0" x="0">&lt;c0&gt;</bpt>withXml<ept i="0">&lt;/c0&gt;</ept> hook 来操作，因为其相应的域对象实际上是空的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The wrapper is a batch script on Windows, and a shell script for other operating systems.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161217T142838Z" creationid="95" creationdate="20161217T142838Z">
        <seg>这个包装器是Windows上的一个批处理脚本和以及用于其他操作系统的shell 脚本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The wrapper plugin adds the following tasks to the project:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150710T012913Z" creationid="haohang" creationdate="20150710T012913Z">
        <seg>Wrapper 插件向project 中添加了以下任务：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The wrapper plugin is currently <bpt i="0" x="0">&lt;a0&gt;</bpt>incubating<ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T095218Z" creationid="msdx" creationdate="20150503T094854Z">
        <seg>Wrapper 插件目前还是<bpt i="0" x="0">&lt;a0&gt;</bpt>孵化中<ept i="0">&lt;/a0&gt;</ept>状态。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The “<bpt i="0" x="0">&lt;c0&gt;</bpt>ivy-publish<ept i="0">&lt;/c0&gt;</ept>” Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T071057Z" creationid="95" creationdate="20170416T071057Z">
        <seg>“<bpt i="0" x="0">&lt;c0&gt;</bpt>ivy-publish<ept i="0">&lt;/c0&gt;</ept>”插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The “<bpt i="0" x="0">&lt;c0&gt;</bpt>ivy-publish<ept i="0">&lt;/c0&gt;</ept>” plugin automatically creates a <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>PublishToIvyRepository<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept> task for each <bpt i="3" x="3">&lt;a3&gt;</bpt><bpt i="4" x="4">&lt;c4&gt;</bpt>IvyPublication<ept i="4">&lt;/c4&gt;</ept><ept i="3">&lt;/a3&gt;</ept> and <bpt i="5" x="5">&lt;a5&gt;</bpt><bpt i="6" x="6">&lt;c6&gt;</bpt>IvyArtifactRepository<ept i="6">&lt;/c6&gt;</ept><ept i="5">&lt;/a5&gt;</ept> combination in the <bpt i="7" x="7">&lt;c7&gt;</bpt>publishing.publications<ept i="7">&lt;/c7&gt;</ept> and <bpt i="8" x="8">&lt;c8&gt;</bpt>publishing.repositories<ept i="8">&lt;/c8&gt;</ept> containers respectively.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170326T074736Z" creationid="95" creationdate="20170326T074335Z">
        <seg>对每一个在 <bpt i="7" x="7">&lt;c7&gt;</bpt>publishing.publications<ept i="7">&lt;/c7&gt;</ept> 和 <bpt i="8" x="8">&lt;c8&gt;</bpt>publishing.repositories<ept i="8">&lt;/c8&gt;</ept> 容器中分别组合的<bpt i="3" x="3">&lt;a3&gt;</bpt><bpt i="4" x="4">&lt;c4&gt;</bpt>IvyPublication<ept i="4">&lt;/c4&gt;</ept><ept i="3">&lt;/a3&gt;</ept> 和 <bpt i="5" x="5">&lt;a5&gt;</bpt><bpt i="6" x="6">&lt;c6&gt;</bpt>IvyArtifactRepository<ept i="6">&lt;/c6&gt;</ept><ept i="5">&lt;/a5&gt;</ept>，“<bpt i="0" x="0">&lt;c0&gt;</bpt>ivy-publish<ept i="0">&lt;/c0&gt;</ept>” 插件自动为它们创建了一个 <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>PublishToIvyRepository<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept> 任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The “<bpt i="0" x="0">&lt;c0&gt;</bpt>ivy-publish<ept i="0">&lt;/c0&gt;</ept>” plugin automatically wires in one <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>GenerateIvyDescriptor<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept> task for each registered <bpt i="3" x="3">&lt;a3&gt;</bpt><bpt i="4" x="4">&lt;c4&gt;</bpt>IvyPublication<ept i="4">&lt;/c4&gt;</ept><ept i="3">&lt;/a3&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T143721Z" creationid="95" creationdate="20170330T143537Z">
        <seg>“<bpt i="0" x="0">&lt;c0&gt;</bpt>ivy-publish<ept i="0">&lt;/c0&gt;</ept>”插件自动为每一个注册的 <bpt i="3" x="3">&lt;a3&gt;</bpt><bpt i="4" x="4">&lt;c4&gt;</bpt>IvyPublication<ept i="4">&lt;/c4&gt;</ept><ept i="3">&lt;/a3&gt;</ept>连接了一个<bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>GenerateIvyDescriptor<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept> 任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The “<bpt i="0" x="0">&lt;c0&gt;</bpt>ivy-publish<ept i="0">&lt;/c0&gt;</ept>” plugin functionality as described above is incomplete, as the feature is still <bpt i="1" x="1">&lt;a1&gt;</bpt>incubating<ept i="1">&lt;/a1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T154502Z" creationid="95" creationdate="20170330T154502Z">
        <seg>“<bpt i="0" x="0">&lt;c0&gt;</bpt>ivy-publish<ept i="0">&lt;/c0&gt;</ept>”插件的功能，如上文所述是不完整的，因为这一功能仍然在<bpt i="1" x="1">&lt;a1&gt;</bpt>孵化中<ept i="1">&lt;/a1&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The “<bpt i="0" x="0">&lt;c0&gt;</bpt>ivy-publish<ept i="0">&lt;/c0&gt;</ept>” plugin leverages some experimental support for late plugin configuration, and the <bpt i="1" x="1">&lt;c1&gt;</bpt>GenerateIvyDescriptor<ept i="1">&lt;/c1&gt;</ept> task will not be constructed until the publishing extension is configured.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T144454Z" creationid="95" creationdate="20170330T144019Z">
        <seg>“<bpt i="0" x="0">&lt;c0&gt;</bpt>ivy-publish<ept i="0">&lt;/c0&gt;</ept>”插件利用了后期插件配置的一些实验性的支持，并且在配置发布扩展之前，不会构造<bpt i="1" x="1">&lt;c1&gt;</bpt>GenerateIvyDescriptor<ept i="1">&lt;/c1&gt;</ept>任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The “<bpt i="0" x="0">&lt;c0&gt;</bpt>ivy-publish<ept i="0">&lt;/c0&gt;</ept>” plugin provides a hook to allow such modification.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170304T031059Z" creationid="95" creationdate="20170304T031059Z">
        <seg>“<bpt i="0" x="0">&lt;c0&gt;</bpt>ivy-publish<ept i="0">&lt;/c0&gt;</ept>”插件提供了一个hook以允许这一类的修改。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The “<bpt i="0" x="0">&lt;c0&gt;</bpt>maven-publish<ept i="0">&lt;/c0&gt;</ept>” Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T071145Z" creationid="95" creationdate="20170416T071145Z">
        <seg>“<bpt i="0" x="0">&lt;c0&gt;</bpt>maven-publish<ept i="0">&lt;/c0&gt;</ept>” 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The “<bpt i="0" x="0">&lt;c0&gt;</bpt>maven-publish<ept i="0">&lt;/c0&gt;</ept>” plugin automatically creates a <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>PublishToMavenRepository<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept> task for each <bpt i="3" x="3">&lt;a3&gt;</bpt><bpt i="4" x="4">&lt;c4&gt;</bpt>MavenPublication<ept i="4">&lt;/c4&gt;</ept><ept i="3">&lt;/a3&gt;</ept> and <bpt i="5" x="5">&lt;a5&gt;</bpt><bpt i="6" x="6">&lt;c6&gt;</bpt>MavenArtifactRepository<ept i="6">&lt;/c6&gt;</ept><ept i="5">&lt;/a5&gt;</ept> combination in the <bpt i="7" x="7">&lt;c7&gt;</bpt>publishing.publications<ept i="7">&lt;/c7&gt;</ept> and <bpt i="8" x="8">&lt;c8&gt;</bpt>publishing.repositories<ept i="8">&lt;/c8&gt;</ept> containers respectively.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T063150Z" creationid="95" creationdate="20170416T063150Z">
        <seg>对每一个在 <bpt i="7" x="7">&lt;c7&gt;</bpt>publishing.publications<ept i="7">&lt;/c7&gt;</ept> 和 <bpt i="8" x="8">&lt;c8&gt;</bpt>publishing.repositories<ept i="8">&lt;/c8&gt;</ept> 容器中分别组合的<bpt i="3" x="3">&lt;a3&gt;</bpt><bpt i="4" x="4">&lt;c4&gt;</bpt>MavenPublication<ept i="4">&lt;/c4&gt;</ept><ept i="3">&lt;/a3&gt;</ept> 和 <bpt i="5" x="5">&lt;a5&gt;</bpt><bpt i="6" x="6">&lt;c6&gt;</bpt>MavenArtifactRepository<ept i="6">&lt;/c6&gt;</ept><ept i="5">&lt;/a5&gt;</ept>，“<bpt i="0" x="0">&lt;c0&gt;</bpt>maven-publish<ept i="0">&lt;/c0&gt;</ept>” 插件自动为它们创建了一个 <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>PublishToMavenRepository<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept> 任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The “<bpt i="0" x="0">&lt;c0&gt;</bpt>maven-publish<ept i="0">&lt;/c0&gt;</ept>” plugin leverages some experimental support for late plugin configuration, and any <bpt i="1" x="1">&lt;c1&gt;</bpt>GenerateMavenPom<ept i="1">&lt;/c1&gt;</ept> tasks will not be constructed until the publishing extension is configured.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065142Z" creationid="95" creationdate="20170416T065142Z">
        <seg>“<bpt i="0" x="0">&lt;c0&gt;</bpt>maven-publish<ept i="0">&lt;/c0&gt;</ept>”插件利用了后期插件配置的一些实验性的支持，并且在配置发布扩展之前，不会构造<bpt i="1" x="1">&lt;c1&gt;</bpt>GenerateMavenPom<ept i="1">&lt;/c1&gt;</ept>任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The “<bpt i="0" x="0">&lt;c0&gt;</bpt>maven-publish<ept i="0">&lt;/c0&gt;</ept>” plugin makes this easy to do by automatically creating a <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>PublishToMavenLocal<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept> task for each <bpt i="3" x="3">&lt;a3&gt;</bpt><bpt i="4" x="4">&lt;c4&gt;</bpt>MavenPublication<ept i="4">&lt;/c4&gt;</ept><ept i="3">&lt;/a3&gt;</ept> in the <bpt i="5" x="5">&lt;c5&gt;</bpt>publishing.publications<ept i="5">&lt;/c5&gt;</ept> container.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T063824Z" creationid="95" creationdate="20170416T063824Z">
        <seg>对每一个在 <bpt i="5" x="5">&lt;c5&gt;</bpt>publishing.publications<ept i="5">&lt;/c5&gt;</ept> 容器的<bpt i="3" x="3">&lt;a3&gt;</bpt><bpt i="4" x="4">&lt;c4&gt;</bpt>MavenPublication<ept i="4">&lt;/c4&gt;</ept><ept i="3">&lt;/a3&gt;</ept> ，“<bpt i="0" x="0">&lt;c0&gt;</bpt>maven-publish<ept i="0">&lt;/c0&gt;</ept>” 插件自动为它们创建了一个 <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>PublishToMavenLocal<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept> 任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The “<bpt i="0" x="0">&lt;c0&gt;</bpt>maven-publish<ept i="0">&lt;/c0&gt;</ept>” plugin provides a hook to allow such modification.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T062325Z" creationid="95" creationdate="20170416T033057Z">
        <seg>“<bpt i="0" x="0">&lt;c0&gt;</bpt>maven-publish<ept i="0">&lt;/c0&gt;</ept>”插件提供了一个钩子以允许这一类的修改。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The “<bpt i="0" x="0">&lt;c0&gt;</bpt>publish<ept i="0">&lt;/c0&gt;</ept>” plugin (that the “<bpt i="1" x="1">&lt;c1&gt;</bpt>ivy-publish<ept i="1">&lt;/c1&gt;</ept>” plugin implicitly applies) adds a lifecycle task that can be used to publish all publications to all applicable repositories named “<bpt i="2" x="2">&lt;c2&gt;</bpt>publish<ept i="2">&lt;/c2&gt;</ept>”.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170326T080407Z" creationid="95" creationdate="20170326T075753Z">
        <seg>这个“<bpt i="0" x="0">&lt;c0&gt;</bpt>publish<ept i="0">&lt;/c0&gt;</ept>插件（即“<bpt i="1" x="1">&lt;c1&gt;</bpt>ivy-publish<ept i="1">&lt;/c1&gt;</ept>” 插件隐式应用的）添加了一个 叫做“<bpt i="2" x="2">&lt;c2&gt;</bpt>publish<ept i="2">&lt;/c2&gt;</ept>”的生命周期任务，可以用于发布所有出版物到所有适用的仓库中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The “<bpt i="0" x="0">&lt;c0&gt;</bpt>publishing<ept i="0">&lt;/c0&gt;</ept>” plugin creates an extension on the project named “<bpt i="1" x="1">&lt;c1&gt;</bpt>publishing<ept i="1">&lt;/c1&gt;</ept>” of type <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>PublishingExtension<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170211T022646Z" creationid="95" creationdate="20170211T022646Z">
        <seg>“<bpt i="0" x="0">&lt;c0&gt;</bpt>publishing<ept i="0">&lt;/c0&gt;</ept>” 插件在project上创建了一个名为 “<bpt i="1" x="1">&lt;c1&gt;</bpt>publishing<ept i="1">&lt;/c1&gt;</ept>”的 <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>PublishingExtension<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>类型的扩展。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The “<bpt i="4" x="4">&lt;c4&gt;</bpt>ivy-publish<ept i="4">&lt;/c4&gt;</ept>” plugin works with <bpt i="5" x="5">&lt;a5&gt;</bpt><bpt i="6" x="6">&lt;c6&gt;</bpt>IvyPublication<ept i="6">&lt;/c6&gt;</ept><ept i="5">&lt;/a5&gt;</ept> publications and <bpt i="7" x="7">&lt;a7&gt;</bpt><bpt i="8" x="8">&lt;c8&gt;</bpt>IvyArtifactRepository<ept i="8">&lt;/c8&gt;</ept><ept i="7">&lt;/a7&gt;</ept> repositories.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170211T024740Z" creationid="95" creationdate="20170211T022834Z">
        <seg>“<bpt i="4" x="4">&lt;c4&gt;</bpt>ivy-publish<ept i="4">&lt;/c4&gt;</ept>”适用于<bpt i="5" x="5">&lt;a5&gt;</bpt><bpt i="6" x="6">&lt;c6&gt;</bpt>IvyPublication<ept i="6">&lt;/c6&gt;</ept><ept i="5">&lt;/a5&gt;</ept> publications 和 <bpt i="7" x="7">&lt;a7&gt;</bpt><bpt i="8" x="8">&lt;c8&gt;</bpt>IvyArtifactRepository<ept i="8">&lt;/c8&gt;</ept><ept i="7">&lt;/a7&gt;</ept> 仓库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>The “<bpt i="4" x="4">&lt;c4&gt;</bpt>maven-publish<ept i="4">&lt;/c4&gt;</ept>” plugin works with <bpt i="5" x="5">&lt;a5&gt;</bpt><bpt i="6" x="6">&lt;c6&gt;</bpt>MavenPublication<ept i="6">&lt;/c6&gt;</ept><ept i="5">&lt;/a5&gt;</ept> publications and <bpt i="7" x="7">&lt;a7&gt;</bpt><bpt i="8" x="8">&lt;c8&gt;</bpt>MavenArtifactRepository<ept i="8">&lt;/c8&gt;</ept><ept i="7">&lt;/a7&gt;</ept> repositories.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170412T152649Z" creationid="95" creationdate="20170412T152544Z">
        <seg>“<bpt i="4" x="4">&lt;c4&gt;</bpt>maven-publish<ept i="4">&lt;/c4&gt;</ept>”插件适用于<bpt i="5" x="5">&lt;a5&gt;</bpt><bpt i="6" x="6">&lt;c6&gt;</bpt>MavenPublication<ept i="6">&lt;/c6&gt;</ept><ept i="5">&lt;/a5&gt;</ept> publications 和 <bpt i="7" x="7">&lt;a7&gt;</bpt><bpt i="8" x="8">&lt;c8&gt;</bpt>MavenArtifactRepository<ept i="8">&lt;/c8&gt;</ept><ept i="7">&lt;/a7&gt;</ept> 仓库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Then Gradle looks for tasks with names equal to those passed as command line arguments.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160520T123810Z" creationid="95" creationdate="20160520T123658Z">
        <seg>然后 Gradle 会查找与命令行传进来的参数相同的任务名。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Then simply execute the <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>compareGradleBuilds<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170109T125555Z" creationid="95" creationdate="20170109T125539Z">
        <seg>然后只需要执行<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>compareGradleBuilds<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> 任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Then we will look at creating a standalone project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T145315Z" creationid="95" creationdate="20160814T145315Z">
        <seg>然后我们会看看创建一个单独的项目的方式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Then you could move your dependency declarations from the Ant script to your build file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141114T142726Z" creationid="msdx" creationdate="20141114T142726Z">
        <seg>然后，可以将您的依赖声明从 Ant 脚本移到您的构建文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Then, according to the task name arguments and the current dir, Gradle filters the tasks which should be executed.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160715T075655Z" creationid="haohang" creationdate="20160715T075655Z">
        <seg>然后，根据任务名称参数和当前目录，Gradle 过滤出应该执行的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Then, when the closure is executed, the fields on the extension object will be mapped to the variables within the closure based on the standard Groovy closure delegate feature.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T131930Z" creationid="95" creationdate="20160820T131930Z">
        <seg>然后，当这个闭包被执行的时候，这个扩展对象的变量会被映射到基于标准的Groovy闭包代理功能的闭包里的这些变量中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Then, you can run the application by running <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle run<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150702T104012Z" creationid="haohang" creationdate="20150702T104012Z">
        <seg>然后，你可以通过执行 <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle run<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> 来运行这个应用程序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>There are 2 ways that you can provide the domain for authenticating to a NTLM proxy:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141121T142537Z" creationid="msdx" creationdate="20141121T142537Z">
        <seg>有两种方法可以向 NTLM 代理提供验证域：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>There are Gradle builds with a hierarchy of hundreds of subprojects.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160522T120720Z" creationid="95" creationdate="20160522T120720Z">
        <seg>存在着一些项目，它们在层次结构上有上百个的子项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>There are a few variations on this style, which you may need to use in certain situations.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T022941Z" creationid="msdx" creationdate="20141110T021152Z">
        <seg>在某些情况中，你可能需要使用这种关键字风格的几种不同的变式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>There are a number of plugins included in the Gradle distribution.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141126T120628Z" creationid="msdx" creationdate="20141126T120628Z">
        <seg>Gradle 的发行包中有大量的插件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>There are a number of properties which control how the test process is launched.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T140656Z" creationid="Administrator" creationdate="20150427T140656Z">
        <seg>有大量的属性用于控制测试进程的启动。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>There are a number of properties which you can set on an archive task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T155349Z" creationid="msdx" creationdate="20141113T155349Z">
        <seg>这里有很多你可以在归档任务中设置的属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>There are a number of ways of doing this.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T080654Z" creationid="msdx" creationdate="20141110T080654Z">
        <seg>对这样的情况，有很多种方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>There are a number of ways that you can influence how Gradle resolves dependencies.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T054022Z" creationid="95" creationdate="20151115T054022Z">
        <seg>有许多种方式都可以影响到Gradle解析依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>There are build tools that build up such a dependency graph as they execute their tasks.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160518T032229Z" creationid="haohang" creationdate="20160518T032204Z">
        <seg>有许多构建工具在它们执行任务时生成了依赖关系图。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>There are five elements you need to remember: <bpt i="2" x="2">&lt;c2&gt;</bpt>allprojects<ept i="2">&lt;/c2&gt;</ept>, <bpt i="3" x="3">&lt;c3&gt;</bpt> subprojects<ept i="3">&lt;/c3&gt;</ept>, <bpt i="4" x="4">&lt;c4&gt;</bpt>evaluationDependsOn<ept i="4">&lt;/c4&gt;</ept>, <bpt i="5" x="5">&lt;c5&gt;</bpt>evaluationDependsOnChildren<ept i="5">&lt;/c5&gt;</ept> and project lib dependencies.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160727T053941Z" creationid="haohang" creationdate="20160727T053835Z">
        <seg>你需要记住的是五个元素：<bpt i="2" x="2">&lt;c2&gt;</bpt>allprojects<ept i="2">&lt;/c2&gt;</ept>，<bpt i="3" x="3">&lt;c3&gt;</bpt> subprojects<ept i="3">&lt;/c3&gt;</ept>，<bpt i="4" x="4">&lt;c4&gt;</bpt>evaluationDependsOn<ept i="4">&lt;/c4&gt;</ept>， <bpt i="5" x="5">&lt;c5&gt;</bpt>evaluationDependsOnChildren<ept i="5">&lt;/c5&gt;</ept> 和项目库依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>There are many configuration options for the Maven deployer.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T135016Z" creationid="95" creationdate="20160105T135016Z">
        <seg>Maven deployer有很多配置选项。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>There are many options for the protocol to communicate with the repository (e.g. filesystem, http, ssh, ...)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T134247Z" creationid="95" creationdate="20151006T134247Z">
        <seg>对于与仓库通信的协议，有很多的选项（比如文件系统，http， ssh……）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>There are many situation when you want to use the latest version of a particular dependency, or the latest in a range of versions.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T010436Z" creationid="haohang" creationdate="20150722T010436Z">
        <seg>有许多情况，是你想要使用一个特定依赖的最新版本，或者是某个版本范围内的最新版。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>There are many tools out there which still use standard output for logging.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T034239Z" creationid="msdx" creationdate="20141116T131106Z">
        <seg>有很多的工具仍然在使用标准输出进行日志记录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>There are many use cases for custom configurations.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T075434Z" creationid="haohang" creationdate="20150722T075434Z">
        <seg>关于自定义配置，有许多的用例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>There are other situations where it is necessary to fine-tune dependency declarations.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150730T035450Z" creationid="haohang" creationdate="20150730T035443Z">
        <seg>还有一些其他的情况，需要调整依赖声明。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>There are separate settings for HTTPS.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141121T141755Z" creationid="msdx" creationdate="20141121T141755Z">
        <seg>对于 HTTPS 有单独的设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>There are several different types of dependencies that you can declare:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T080029Z" creationid="haohang" creationdate="20150722T080029Z">
        <seg>你可以声明几种不同类型的依赖：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>There are several different types of repositories you can declare:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T094100Z" creationid="haohang" creationdate="20150807T094100Z">
        <seg>有几种不同类型的存储库可以声明：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>There are several places where you can put the source for the plugin.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160818T151233Z" creationid="95" creationdate="20160818T151233Z">
        <seg>有几个地方可以让你放这个插件的源码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>There are several places where you can put the source for the task class.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T143944Z" creationid="95" creationdate="20160814T143944Z">
        <seg>有几个地方可以让你放任务类的源码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>There are several reasons why you may want to compare the outcomes of two builds.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161219T145715Z" creationid="95" creationdate="20161219T145535Z">
        <seg>为什么你可能需要对两个构建的结果进行比较，有几个原因。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>There are several ways to get an Ant reference:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T062703Z" creationid="msdx" creationdate="20141116T062703Z">
        <seg>有几种方法可以获取 Ant 引用：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>There are several ways to get the value of these properties.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T062137Z" creationid="msdx" creationdate="20141116T062137Z">
        <seg>有几种方法来获取这些属性值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>There are several ways to set an Ant property, so that the property can be used by Ant tasks.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T061236Z" creationid="msdx" creationdate="20141116T061236Z">
        <seg>有几种方法来设置 Ant 属性，以便使该属性被 Ant 任务使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>There are several ways to set an Ant reference:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T062633Z" creationid="msdx" creationdate="20141116T062633Z">
        <seg>有几种方法可以设置 Ant 引用：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>There are several ways to use an init script:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161214T143437Z" creationid="95" creationdate="20161214T143437Z">
        <seg>有几种方法来使用 init 脚本︰</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>There are several ways you can define the dependencies of a task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T100107Z" creationid="msdx" creationdate="20141110T100020Z">
        <seg>定义任务的依赖关系有几种方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>There are two Gradle-specific log levels, in addition to the ones you might normally see.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T032439Z" creationid="msdx" creationdate="20141116T070533Z">
        <seg>除了那些您可能通常都会看到的日志级别之外，还有两个 Gradle 特定日志级别。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>There are two kinds of variables that can be declared in a build script: local variables and extra properties.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T045426Z" creationid="msdx" creationdate="20141108T044824Z">
        <seg>有两类可以在生成脚本中声明的变量： 局部变量和额外属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>There are two ordering rules available: "<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>must run after<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>" and "<bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;e3&gt;</bpt>should run after<ept i="3">&lt;/e3&gt;</ept><ept i="2">&lt;/s2&gt;</ept>".</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T145609Z" creationid="msdx" creationdate="20141110T145609Z">
        <seg>有两种排序规则是可用的："<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>必须在之后运行<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>"和"<bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;e3&gt;</bpt>应该在之后运行<ept i="3">&lt;/e3&gt;</ept><ept i="2">&lt;/s2&gt;</ept>"。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>There is a 1:1 mapping from the Ant/Ivy log levels to the Gradle log levels, except the Ant/Ivy <bpt i="0" x="0">&lt;c0&gt;</bpt>TRACE<ept i="0">&lt;/c0&gt;</ept> log level, which is mapped to Gradle <bpt i="1" x="1">&lt;c1&gt;</bpt>DEBUG<ept i="1">&lt;/c1&gt;</ept> log level.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T130959Z" creationid="msdx" creationdate="20141116T130816Z">
        <seg>从 Ant/Ivy 的日志级别到 Gradle 的日志级别是一对一的映射，除了 Ant/Ivy 的 <bpt i="0" x="0">&lt;c0&gt;</bpt>TRACE<ept i="0">&lt;/c0&gt;</ept>级别之外，它是映射到Gradle 的 <bpt i="1" x="1">&lt;c1&gt;</bpt>DEBUG<ept i="1">&lt;/c1&gt;</ept> 级别的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>There is a better solution (works only if the tasks that need the directory have a <bpt i="1" x="1">&lt;s1&gt;</bpt><bpt i="2" x="2">&lt;e2&gt;</bpt>dependsOn<ept i="2">&lt;/e2&gt;</ept><ept i="1">&lt;/s1&gt;</ept> relationship):</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T073209Z" creationid="msdx" creationdate="20141109T073209Z">
        <seg>这里有一个更好的解决方案 (仅适用于这些需要这个目录的任务有着<bpt i="1" x="1">&lt;s1&gt;</bpt><bpt i="2" x="2">&lt;e2&gt;</bpt>dependsOn<ept i="2">&lt;/e2&gt;</ept><ept i="1">&lt;/s1&gt;</ept>的关系的情况)：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>There is a common situation, that multiple tasks depend on the existence of a directory.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T072804Z" creationid="msdx" creationdate="20141109T072804Z">
        <seg>有一个常见的情况是，多个任务都依赖于某个目录的存在。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>There is a daemon log file, which by default is located in the Gradle user home directory.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141119T030738Z" creationid="msdx" creationdate="20141119T030738Z">
        <seg>默认情况下位于 Gradle 用户主目录有一个守护进程的日志文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>There is a map-based syntax for defining an artifact using a file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151226T091443Z" creationid="95" creationdate="20151226T091301Z">
        <seg>有一个基于map的语法来定义一个构件使用文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>There is a string notation and a map notation.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150724T034650Z" creationid="haohang" creationdate="20150724T034650Z">
        <seg>有 string 标记法和 map 标记法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>There is a very simple mapping from Ant's <bpt i="4" x="4">&lt;c4&gt;</bpt>build.xml<ept i="4">&lt;/c4&gt;</ept> format to Groovy, which is explained below.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141114T143526Z" creationid="msdx" creationdate="20141114T143526Z">
        <seg>从 Ant 的 <bpt i="4" x="4">&lt;c4&gt;</bpt>build.xml<ept i="4">&lt;/c4&gt;</ept>格式到 Groovy 之间有一个非常简单的映射，下面解释。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>There is also a <bpt i="3" x="3">&lt;c3&gt;</bpt>sourceSets { }<ept i="3">&lt;/c3&gt;</ept> script block, which you can pass a closure to configure the source set container.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T050628Z" creationid="Administrator" creationdate="20150427T050628Z">
        <seg>除此之后，还有一个<bpt i="3" x="3">&lt;c3&gt;</bpt>sourceSets {}<ept i="3">&lt;/c3&gt;</ept>的脚本块，可以传入一个闭包来配置源集容器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>There is also a filter so that uncommon tasks can be hidden.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T151134Z" creationid="msdx" creationdate="20141105T151134Z">
        <seg>这里还提供了一个过滤器，可以把比较少用的任务隐藏。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>There is also a stand-alone <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>TestReport<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> task type which can generate the HTML test report from the binary results generated by one or more <bpt i="2" x="2">&lt;c2&gt;</bpt>Test<ept i="2">&lt;/c2&gt;</ept> task instances.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T142619Z" creationid="msdx" creationdate="20150428T142619Z">
        <seg>这里还有一个独立的<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>TestReport<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>任务类型，它可以从一个或多个<bpt i="2" x="2">&lt;c2&gt;</bpt>Test<ept i="2">&lt;/c2&gt;</ept>任务实例生成的二进制结果中生成 HTML 测试报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>There is also an aggregating task that depends on all report tasks added by the plugin.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150626T095859Z" creationid="haohang" creationdate="20150626T095859Z">
        <seg>这里也有一个聚合的任务，它依赖于由该插件添加的所有的报告任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>There is an alternative syntax for defining tasks, which you may prefer to use:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T023119Z" creationid="msdx" creationdate="20141110T022749Z">
        <seg>对于定义任务，有一种替代的语法你可能更愿意使用：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>There is another way of configuring a task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T092255Z" creationid="msdx" creationdate="20141110T092255Z">
        <seg>还有另一种配置任务的方式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>There is another way to deal with transitive dependencies <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>without<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> XML descriptor files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151201T063920Z" creationid="haohang" creationdate="20151201T063920Z">
        <seg>还有另外一种方法，用于处理<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>没有<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>XML 描述符文件的传递依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>There is even a third dependency.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T082547Z" creationid="haohang" creationdate="20160726T082547Z">
        <seg>这里甚至有第三个依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>There is much more to say about multi-project builds in the chapter dedicated to this topic (see <bpt i="0" x="0">&lt;a0&gt;</bpt>Chapter 56, <bpt i="1" x="1">&lt;i1&gt;</bpt>Multi-project Builds<ept i="1">&lt;/i1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T030443Z" creationid="haohang" creationdate="20160519T030443Z">
        <seg>关于多项目构建，在这一主题的章节中有更多的介绍（参见 <bpt i="0" x="0">&lt;a0&gt;</bpt>第 56 章, <bpt i="1" x="1">&lt;i1&gt;</bpt>多项目构建<ept i="1">&lt;/i1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>There is no history available from a previous execution.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160816T150216Z" creationid="95" creationdate="20160816T150216Z">
        <seg>从前一次执行以来，没有有效的历史。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>There is no need to create a “stub” <bpt i="3" x="3">&lt;c3&gt;</bpt>build.gradle<ept i="3">&lt;/c3&gt;</ept> file in order to apply the plugin.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T071413Z" creationid="haohang" creationdate="20150707T071243Z">
        <seg>那里不需要创建一个“存根” <bpt i="3" x="3">&lt;c3&gt;</bpt>build.gradle<ept i="3">&lt;/c3&gt;</ept>文件以应用该插件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>There is some more work to do if you need support for other protocols than <bpt i="0" x="0">&lt;c0&gt;</bpt>file<ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T134040Z" creationid="95" creationdate="20160104T154657Z">
        <seg>如果你需要支持<bpt i="0" x="0">&lt;c0&gt;</bpt>文件<ept i="0">&lt;/c0&gt;</ept>之外的其他协议，那么你还需要再做一些事情。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Therefore <bpt i="0" x="0">&lt;c0&gt;</bpt>:consumer:action<ept i="0">&lt;/c0&gt;</ept> is executed before <bpt i="1" x="1">&lt;c1&gt;</bpt>:producer:action<ept i="1">&lt;/c1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T063451Z" creationid="haohang" creationdate="20160718T063451Z">
        <seg>因此<bpt i="0" x="0">&lt;c0&gt;</bpt>:consumer:action<ept i="0">&lt;/c0&gt;</ept>会在<bpt i="1" x="1">&lt;c1&gt;</bpt>:producer:action<ept i="1">&lt;/c1&gt;</ept>之前执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Therefore it is likely that you don't have to define configuration dependencies explicitly.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160722T090403Z" creationid="haohang" creationdate="20160722T090403Z">
        <seg>因此，很可能你不需要显式地定义配置依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Therefore only multi-project builds can take advantage of parallel execution.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T091406Z" creationid="haohang" creationdate="20160726T091406Z">
        <seg>因此并行执行只对多项目构建有用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Therefore the <bpt i="2" x="2">&lt;c2&gt;</bpt>consumer<ept i="2">&lt;/c2&gt;</ept> project is evaluated before the <bpt i="3" x="3">&lt;c3&gt;</bpt>producer<ept i="3">&lt;/c3&gt;</ept> project and the <bpt i="4" x="4">&lt;c4&gt;</bpt>key<ept i="4">&lt;/c4&gt;</ept> value of the <bpt i="5" x="5">&lt;c5&gt;</bpt>producer<ept i="5">&lt;/c5&gt;</ept> is set <bpt i="6" x="6">&lt;s6&gt;</bpt><bpt i="7" x="7">&lt;e7&gt;</bpt>after<ept i="7">&lt;/e7&gt;</ept><ept i="6">&lt;/s6&gt;</ept> it is read by the <bpt i="8" x="8">&lt;c8&gt;</bpt>consumer<ept i="8">&lt;/c8&gt;</ept> project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T074901Z" creationid="haohang" creationdate="20160718T074901Z">
        <seg>因此<bpt i="2" x="2">&lt;c2&gt;</bpt>consumer<ept i="2">&lt;/c2&gt;</ept>项目评估会在<bpt i="3" x="3">&lt;c3&gt;</bpt>producer<ept i="3">&lt;/c3&gt;</ept>项目之前，并且<bpt i="5" x="5">&lt;c5&gt;</bpt>producer<ept i="5">&lt;/c5&gt;</ept>的<bpt i="4" x="4">&lt;c4&gt;</bpt>key<ept i="4">&lt;/c4&gt;</ept>值在它被<bpt i="8" x="8">&lt;c8&gt;</bpt>consumer<ept i="8">&lt;/c8&gt;</ept>项目读取<bpt i="6" x="6">&lt;s6&gt;</bpt><bpt i="7" x="7">&lt;e7&gt;</bpt>后<ept i="7">&lt;/e7&gt;</ept><ept i="6">&lt;/s6&gt;</ept>设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Therefore they are strictly speaking <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>build configuration scripts<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160518T032506Z" creationid="haohang" creationdate="20160518T032506Z">
        <seg>因此严格来说，它们都是<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>构建配置脚本<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Therefore we have no circular dependency.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T082647Z" creationid="haohang" creationdate="20160726T082647Z">
        <seg>因此，我们没有循环依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Therefore you can't use the <bpt i="5" x="5">&lt;c5&gt;</bpt>-P<ept i="5">&lt;/c5&gt;</ept> option.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T141907Z" creationid="msdx" creationdate="20141109T141839Z">
        <seg>那么，您就不能使用<bpt i="5" x="5">&lt;c5&gt;</bpt>-P<ept i="5">&lt;/c5&gt;</ept>选项。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Therefore, Gradle will not fail when an unknown property is set.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T065342Z" creationid="msdx" creationdate="20141108T065342Z">
        <seg>因此，当未知的属性被设置时，Gradle不会构建失败。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>These JVM arguments are applied to the <bpt i="1" x="1">&lt;c1&gt;</bpt>run<ept i="1">&lt;/c1&gt;</ept> task and also considered in the generated start scripts of your distribution.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150702T104903Z" creationid="haohang" creationdate="20150702T104903Z">
        <seg>这些 JVM 参数会被应用于<bpt i="1" x="1">&lt;c1&gt;</bpt>run<ept i="1">&lt;/c1&gt;</ept> 任务，以及生成的 distrubution 的启动脚本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>These are evaluated relative to the project directory, as per the <bpt i="5" x="5">&lt;c5&gt;</bpt>file()<ept i="5">&lt;/c5&gt;</ept> method, described in <bpt i="6" x="6">&lt;a6&gt;</bpt>Section 16.1, “Locating files”<ept i="6">&lt;/a6&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T150716Z" creationid="msdx" creationdate="20141112T145544Z">
        <seg>根据<bpt i="6" x="6">&lt;a6&gt;</bpt> 16.1 章节 “定位文件”<ept i="6">&lt;/a6&gt;</ept>里对<bpt i="5" x="5">&lt;c5&gt;</bpt>file()<ept i="5">&lt;/c5&gt;</ept>方法的描述，它的结果会被计算为相对于项目目录的相对路径。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>These are flattened and the contents converted to <bpt i="8" x="8">&lt;c8&gt;</bpt>File<ept i="8">&lt;/c8&gt;</ept> instances.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T161013Z" creationid="msdx" creationdate="20141112T151716Z">
        <seg>它们会被展开，并且内容会转换为 <bpt i="8" x="8">&lt;c8&gt;</bpt>File<ept i="8">&lt;/c8&gt;</ept> 实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>These are flattened and the contents included in the file collection.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T161047Z" creationid="msdx" creationdate="20141112T160955Z">
        <seg>它们会被展开，并且内容会被包含在文件集合内。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>These are listed below in <bpt i="0" x="0">&lt;a0&gt;</bpt>Table 16.1, “Archive tasks - naming properties”<ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T155425Z" creationid="msdx" creationdate="20141113T155425Z">
        <seg>它们在以下的<bpt i="0" x="0">&lt;a0&gt;</bpt>表 16.1，"存档任务-命名属性"<ept i="0">&lt;/a0&gt;</ept>中列出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>These are listed below.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141126T120649Z" creationid="msdx" creationdate="20141126T120649Z">
        <seg>如下列所示：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>These are the things that are compared.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161228T144335Z" creationid="95" creationdate="20161228T144335Z">
        <seg>这些都是可以用于比较的东西。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>These binaries may vary based on the tool chain used to build, the compiler/linker flags supplied, the dependencies provided, or additional source files provided.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160219T065753Z" creationid="haohang" creationdate="20160219T065753Z">
        <seg>基于构建所使用的工具链，提供的编译器/链接器标志，提供的依赖或其他源文件，这些二进制文件可能会发生变化。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>These can be complex commands (anything that's legal to Gradle) and you can provide them with a display name.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T154608Z" creationid="msdx" creationdate="20141105T154449Z">
        <seg>这些命令可以是复杂的命令（只要它们符合 Gradle 的语法），你可以给它们设置一个显示名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>These convention properties are provided by a convention object of type <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>ProjectReportsPluginConvention<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T062311Z" creationid="haohang" creationdate="20150628T062311Z">
        <seg>这些属性由一个<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>ProjectReportsPluginConvention<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> 的约定对象提供。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>These convention properties are provided by a convention object of type <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>ScalaSourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150430T154917Z" creationid="msdx" creationdate="20150430T154917Z">
        <seg>这些属性由一个<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>ScalaSourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> 的约定对象提供。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>These digital signatures can then be used to prove who built the artifact the signature is attached to as well as other information such as when the signature was generated.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160108T150721Z" creationid="95" creationdate="20160108T150721Z">
        <seg>这些数字签名可以用于证明使用这个签名的artifact是谁构建的，以及其他的信息，比如签名是什么时候生成的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>These imports are customizable (see <bpt i="3" x="3">&lt;a3&gt;</bpt>Appendix E, <bpt i="4" x="4">&lt;i4&gt;</bpt>Existing IDE Support and how to cope without it<ept i="4">&lt;/i4&gt;</ept><ept i="3">&lt;/a3&gt;</ept>).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T124331Z" creationid="msdx" creationdate="20141111T124331Z">
        <seg>这些导入是可自定义的 （见<bpt i="3" x="3">&lt;a3&gt;</bpt>附录 E，<bpt i="4" x="4">&lt;i4&gt;</bpt>现有的 IDE 支持和没有支持时如何应对<ept i="4">&lt;/i4&gt;</ept><ept i="3">&lt;/a3&gt;</ept>）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>These items must be supplied as the property projects <bpt i="0" x="0">&lt;c0&gt;</bpt>signing.keyId<ept i="0">&lt;/c0&gt;</ept>, <bpt i="1" x="1">&lt;c1&gt;</bpt>signing.password<ept i="1">&lt;/c1&gt;</ept> and <bpt i="2" x="2">&lt;c2&gt;</bpt>signing.secretKeyRingFile<ept i="2">&lt;/c2&gt;</ept> respectively.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160108T152309Z" creationid="95" creationdate="20160108T152309Z">
        <seg>这些条目必须分别作为属性项目<bpt i="0" x="0">&lt;c0&gt;</bpt>signing.keyId<ept i="0">&lt;/c0&gt;</ept>、 <bpt i="1" x="1">&lt;c1&gt;</bpt>signing.password<ept i="1">&lt;/c1&gt;</ept>和<bpt i="2" x="2">&lt;c2&gt;</bpt>signing.secretKeyRingFile<ept i="2">&lt;/c2&gt;</ept> 进行提供。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>These libraries form a 'releasable unit', designed and intended to be used as a whole.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T060629Z" creationid="95" creationdate="20151115T060629Z">
        <seg>这些库形成一个“可发布的单位”，被设计并打算作为一个整体使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>These method accept a task instance, a task name or any other input accepted by <bpt i="4" x="4">&lt;a4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>Task.dependsOn()<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/a4&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T013829Z" creationid="msdx" creationdate="20141111T013805Z">
        <seg>这些方法接受一个任务实例、 任务名称或<bpt i="4" x="4">&lt;a4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>Task.dependsOn()<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/a4&gt;</ept>所接受的任何其他输入作为参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>These methods return a <bpt i="4" x="4">&lt;c4&gt;</bpt>FileTree<ept i="4">&lt;/c4&gt;</ept> instance which you can use like any other file tree or file collection.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T122555Z" creationid="msdx" creationdate="20141113T122517Z">
        <seg>这些方法返回一个<bpt i="4" x="4">&lt;c4&gt;</bpt>FileTree<ept i="4">&lt;/c4&gt;</ept>实例，您可以像使用任何其他文件树或文件集合一样使用它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>These model objects are then merged with the existing Eclipse XML metadata to ultimately generate new metadata.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T100558Z" creationid="haohang" creationdate="20150624T100558Z">
        <seg>然后把这些模型对象与现有的 Eclipse XML 元数据进行合并，最终生成新的元数据。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>These notifications generally take 2 forms: You can either implement a particular listener interface, or you can provide a closure to execute when the notification is fired.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T020904Z" creationid="95" creationdate="20160520T124530Z">
        <seg>这些通知一般采取两种形式︰你也可以实现一个特定的监听接口，或提供一个用于在收到通知时执行的闭包。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>These plugins add support for various languages which can be compiled for and executed in the JVM.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141126T120750Z" creationid="msdx" creationdate="20141126T120750Z">
        <seg>这些插件添加了让各种语言可以被编译和在JVM执行的支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>These plugins add support for various languages:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141209T073731Z" creationid="msdx" creationdate="20141209T073731Z">
        <seg>这些插件添加了对多种语言的支持：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>These plugins form the basic building blocks which the other plugins are assembled from.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T040713Z" creationid="Administrator" creationdate="20150425T040713Z">
        <seg>这些插件组成了基本的构建块，其他插件都由此组装而来。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>These plugins provide help with your software development process.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T032417Z" creationid="Administrator" creationdate="20150425T032417Z">
        <seg>这些插件提供一些软件开发过程上的帮助。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>These plugins provide some integration with various runtime technologies.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T030746Z" creationid="Administrator" creationdate="20150425T030746Z">
        <seg>以下这些插件提供了一些与各种运行时技术的集成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>These properties are provided by a <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>EarPluginConvention<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> convention object.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T142450Z" creationid="msdx" creationdate="20150504T142450Z">
        <seg>这些属性由一个<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>EarPluginConvention<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> 公约对象提供。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>These properties are provided by a <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>JettyPluginConvention<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> convention object.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T151414Z" creationid="msdx" creationdate="20150504T151414Z">
        <seg>这些属性都由一个<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>JettyPluginConvention<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>公约对象提供。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>These properties are provided by a <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>MavenPluginConvention<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> convention object.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151228T153211Z" creationid="95" creationdate="20151228T153211Z">
        <seg>这些属性由一个<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>MavenPluginConvention<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> 的约定对象提供。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>These properties are provided by a <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>WarPluginConvention<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> convention object.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T092346Z" creationid="msdx" creationdate="20150503T092329Z">
        <seg>这些属性由一个<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>WarPluginConvention<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>公约对象提供。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>These properties are provided by a convention object of type <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>GroovySourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T093953Z" creationid="msdx" creationdate="20150429T093953Z">
        <seg>这些属性由一个<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>GroovySourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> 的约定对象提供。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>These properties are provided by convention objects of type <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>JavaPluginConvention<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>, <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>BasePluginConvention<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept> and <bpt i="4" x="4">&lt;a4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>ReportingBasePluginConvention<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/a4&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T050405Z" creationid="Administrator" creationdate="20150427T050405Z">
        <seg>这些属性由<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>JavaPluginConvention<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>， <bpt i="2" x="2">&lt;a2&gt;</bpt> <bpt i="3" x="3">&lt;c3&gt;</bpt>BasePluginConvention<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>和<bpt i="4" x="4">&lt;a4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>ReportingBasePluginConvention<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/a4&gt;</ept>这些类型的常规对象提供。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>These properties can be set directly in the build script; for example <bpt i="0" x="0">&lt;c0&gt;</bpt> System.setProperty('http.proxyHost', 'www.somehost.org')<ept i="0">&lt;/c0&gt;</ept> for the proxy host.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141121T141354Z" creationid="msdx" creationdate="20141121T141354Z">
        <seg>这些属性可以直接在构建脚本中设置；例如设置代理主机为 <bpt i="0" x="0">&lt;c0&gt;</bpt>System.setProperty （'http.proxyHost', 'www.somehost.org'）<ept i="0">&lt;/c0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>These scripts, however, are run before the build starts.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161214T142455Z" creationid="95" creationdate="20161214T142455Z">
        <seg>然而，这些脚本是在构建之前就运行的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>These settings can be applied to all binaries, an individual binary, or selectively to a group of binaries based on some criteria.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160324T151733Z" creationid="95" creationdate="20160324T151733Z">
        <seg>这些设置可以应用于所有的二进制文件，单个二进制文件，或选择性地应用于基于某些条件的一组二进制文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>These source files may include Java source files and resource files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T074210Z" creationid="Administrator" creationdate="20150425T074210Z">
        <seg>这些源文件可能包括 Java 源代码文件和资源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>These tasks should be referenced from within a <bpt i="2" x="2">&lt;c2&gt;</bpt>publishing<ept i="2">&lt;/c2&gt;</ept> block.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T144937Z" creationid="95" creationdate="20170330T144937Z">
        <seg>这些任务应该从<bpt i="2" x="2">&lt;c2&gt;</bpt>publishing<ept i="2">&lt;/c2&gt;</ept>代码块内引用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>These test suite binaries can be configured in a similar way to any other binary instance:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160504T151023Z" creationid="95" creationdate="20160504T151023Z">
        <seg>这些测试套件二进制文件可以以一种类似的方式配置到任何其他二进制的实例︰</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>They all work the same way, so let's look at how you create a ZIP file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T150045Z" creationid="msdx" creationdate="20141113T145740Z">
        <seg>他们的工作方式都一样，所以让我们看看如何创建一个 ZIP 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>They also provide a very low level hook for working directly with the raw XML for adjustment before it is persisted, for fine tuning and configuration that the Eclipse plugin does not model.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T101116Z" creationid="haohang" creationdate="20150624T100839Z">
        <seg>他们还提供了一个非常低级别的hook，用于直接处理原始 XML 持久化之前的调整，微调和配置使 Eclipse 插件不进行建模。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>They are a replacement for a module descriptor in an external repository.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T091407Z" creationid="haohang" creationdate="20150801T091407Z">
        <seg>它们是外部库的模块描述符的替代者。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>They are available for you to use in your build files, and are listed here for completeness.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T040837Z" creationid="Administrator" creationdate="20150425T040837Z">
        <seg>它们可供你在你的构建文件中使用，并在此处完整列出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>They are joined by Gradle with the <bpt i="0" x="0">&lt;c0&gt;</bpt>,<ept i="0">&lt;/c0&gt;</ept> separator.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150526T064723Z" creationid="haohang" creationdate="20150526T064723Z">
        <seg>他们由 Gradle 使用<bpt i="0" x="0">&lt;c0&gt;</bpt>,<ept i="0">&lt;/c0&gt;</ept>分隔符连接。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>They are only visible in the scope where they have been declared.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T044944Z" creationid="msdx" creationdate="20141108T044944Z">
        <seg>它们只在定义它们的范围内可以被访问。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>They can be further customized via the <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>MavenPom<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept> API.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T142526Z" creationid="95" creationdate="20160106T142526Z">
        <seg>它们可以通过<bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>MavenPom<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept> API 进一步定制化。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>They had only <bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;e3&gt;</bpt>Configuration Dependencies<ept i="3">&lt;/e3&gt;</ept><ept i="2">&lt;/s2&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T062210Z" creationid="haohang" creationdate="20160718T062210Z">
        <seg>它们只有<bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;e3&gt;</bpt>配置依赖<ept i="3">&lt;/e3&gt;</ept><ept i="2">&lt;/s2&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>They refer to a module in an external repository.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T102820Z" creationid="haohang" creationdate="20150722T102820Z">
        <seg>它们引用外部仓库中的模块。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>They take effect after a module's descriptor has been downloaded, but before it has been selected among all candidate versions.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T092044Z" creationid="95" creationdate="20151115T092044Z">
        <seg>它们在模块描述符下载之后，被所有候选版本之间选择之前生效。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Think about a developer who decides to install version 3.0.5 of Hibernate on her machine to fix a critical security bug but forgets to notify others in the team of this change.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150716T092754Z" creationid="haohang" creationdate="20150716T092754Z">
        <seg>想一下一个开发人员决定在她的机器安装 3.0.5 的版本，以修复一个关键的安全 bug，但她忘记通知其他团队这个变化。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Third party plugins</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131605Z" creationid="msdx" creationdate="20150509T131605Z">
        <seg>第三方插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This <bpt i="3" x="3">&lt;c3&gt;</bpt>AntBuilder<ept i="3">&lt;/c3&gt;</ept> is used to access Ant tasks, types and properties from your build script.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141114T143431Z" creationid="msdx" creationdate="20141114T143431Z">
        <seg><bpt i="3" x="3">&lt;c3&gt;</bpt>AntBuilder<ept i="3">&lt;/c3&gt;</ept> 用于从你的构建脚本中访问 Ant 任务、 类型和属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This API allows you to execute and monitor builds, and to query Gradle about the details of a build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T143018Z" creationid="95" creationdate="20161218T143018Z">
        <seg>这个API可以让你执行和监视构建，并向Gradle 查询有关构建的细节。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This API provides properties and configuration methods.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150724T034842Z" creationid="haohang" creationdate="20150724T034842Z">
        <seg>该 API 提供了一些属性和配置方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This ability is added by the <bpt i="0" x="0">&lt;c0&gt;</bpt>visual-studio<ept i="0">&lt;/c0&gt;</ept> plugin.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T095022Z" creationid="haohang" creationdate="20160408T095022Z">
        <seg>这个功能是通过 <bpt i="0" x="0">&lt;c0&gt;</bpt>visual-studio<ept i="0">&lt;/c0&gt;</ept> 插件添加的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This ability to configure properties of objects to reflect the value of another object's task at all times (i.e. even when it changes) is known as “<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>convention mapping<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>”.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141124T094817Z" creationid="msdx" creationdate="20141124T094817Z">
        <seg>这种配置对象的属性以在所有时间内（甚至当它更改的时候）反映另一个对象的任务的值的能力被称为“<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>映射约定<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>”。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This adds a <bpt i="0" x="0">&lt;c0&gt;</bpt>Zip<ept i="0">&lt;/c0&gt;</ept> archive task with the name <bpt i="1" x="1">&lt;c1&gt;</bpt>myZip<ept i="1">&lt;/c1&gt;</ept> which produces ZIP file <bpt i="2" x="2">&lt;c2&gt;</bpt>zipProject-1.0.zip<ept i="2">&lt;/c2&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T155032Z" creationid="msdx" creationdate="20141113T154751Z">
        <seg>它添加了一个名称为<bpt i="1" x="1">&lt;c1&gt;</bpt>myZip<ept i="1">&lt;/c1&gt;</ept>的<bpt i="0" x="0">&lt;c0&gt;</bpt>ZIP<ept i="0">&lt;/c0&gt;</ept>归档任务，产生 ZIP 文件 <bpt i="2" x="2">&lt;c2&gt;</bpt>zipProject 1.0.zip<ept i="2">&lt;/c2&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This adds repositories which look into one or more directories for finding dependencies.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T110238Z" creationid="95" creationdate="20151006T110238Z">
        <seg>这将会添加一些用于查找依赖的仓库，它会在一个或多个目录中寻找。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This adds them to the filter.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T154207Z" creationid="msdx" creationdate="20141105T154207Z">
        <seg>这将会把它们添加到过滤器中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This allows you to package up a custom Gradle distribution containing some custom build logic and plugins.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161214T152757Z" creationid="95" creationdate="20161214T152558Z">
        <seg>这能够使你可以打包一个包含某些自定义构建逻辑和插件的Gradle自定义分发包。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This allows you to run the executable without needing to install the shared libraries in their final locations.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160219T081210Z" creationid="haohang" creationdate="20160219T081210Z">
        <seg>它允许你运行可执行文件，而无需在其最终的位置安装共享库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This allows, for example, a tool to specify an init script on the command line and the user to put one in their home directory for defining the environment and both scripts will run when Gradle is executed.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161214T154205Z" creationid="95" creationdate="20161214T153052Z">
        <seg>这能够使得，比如，一个工具可以在命令行上指定一个init 脚本，并且用户可以放一个初始化脚本到他们的用户目录下用于定义环境，而当Gradle执行的时候，这两个脚本都会运行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This also applies the Java plugin to your project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T085628Z" creationid="msdx" creationdate="20141030T085628Z">
        <seg>它同样会将Java插件应用到你项目中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This also applies the War plugin to your project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T094303Z" creationid="msdx" creationdate="20141030T094303Z">
        <seg>它会把War插件也应用到你的项目中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This also has a consequence for the <bpt i="0" x="0">&lt;c0&gt;</bpt>--stop<ept i="0">&lt;/c0&gt;</ept> command line instruction: You can only stop daemons that were started with the Gradle version you use when running <bpt i="1" x="1">&lt;c1&gt;</bpt>--stop<ept i="1">&lt;/c1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141117T153811Z" creationid="msdx" creationdate="20141117T153811Z">
        <seg>这也有一种<bpt i="0" x="0">&lt;c0&gt;</bpt>--stop<ept i="0">&lt;/c0&gt;</ept>命令行指令的结果： 当运行<bpt i="1" x="1">&lt;c1&gt;</bpt>--stop<ept i="1">&lt;/c1&gt;</ept>时，您仅可以停止以你的Gradle版本启动的守护进程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This also means that this Gradle User Guide chapter is a work in progress.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161219T145425Z" creationid="95" creationdate="20161219T145425Z">
        <seg>这也意味着这一章的 Gradle 用户指南还在完善中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This also provides a place to try out commands before adding them to favorites.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T160455Z" creationid="msdx" creationdate="20141105T160445Z">
        <seg>它也对要添加到收藏夹的命令提供了先去尝试的地方。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This applies the plugin if no task named <bpt i="2" x="2">&lt;c2&gt;</bpt>wrapper<ept i="2">&lt;/c2&gt;</ept> is already defined in the build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150710T012903Z" creationid="haohang" creationdate="20150710T012903Z">
        <seg>如果在构建中已没有定义名为 <bpt i="2" x="2">&lt;c2&gt;</bpt>wrapper<ept i="2">&lt;/c2&gt;</ept> 的任务，将会应用该插件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This approach is fully supported by Gradle.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151201T062414Z" creationid="haohang" creationdate="20151201T062414Z">
        <seg>这种做法 Gradle 也完全支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This approach is useful if the dependency in conflict is a transitive dependency.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150721T091100Z" creationid="haohang" creationdate="20150721T091100Z">
        <seg>如果冲突中的依赖是传递依赖，那么这种方法会很有用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This approach is useful if the dependency in conflict is already a first level dependency.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150721T090238Z" creationid="haohang" creationdate="20150721T090238Z">
        <seg>如果冲突中的依赖已经是第一级的依赖，那么这种方法会很有用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This behavior is configurable.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T131207Z" creationid="msdx" creationdate="20141116T131207Z">
        <seg>这种行为是可配置的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This behaviour is also available for your tasks, not just for built-in tasks.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T060218Z" creationid="msdx" creationdate="20141111T060154Z">
        <seg>这种行在您自己定义的任务上也有效，而不仅仅是内置任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This build language is based on Groovy, with some additions to make it easier to describe a build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T035847Z" creationid="msdx" creationdate="20141108T035847Z">
        <seg>这种构建语言基于 Groovy 中，并进行了一些补充，使其易于描述构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This can also be enabled at invocation time via the <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>--debug-jvm<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> task option.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T015757Z" creationid="Administrator" creationdate="20150428T015757Z">
        <seg>这也可以在调用时通过<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>--debug-vm<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> task 选项进行启用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This can be a good place to add your custom tasks and plugins.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T051407Z" creationid="95" creationdate="20161211T051407Z">
        <seg>这可以是用于添加你的自定义任务和插件的好地方。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This can be a requirement during development, or you may be developing a library that is designed to work with a range of dependency versions.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T010821Z" creationid="haohang" creationdate="20150722T010821Z">
        <seg>这可以是在开发中需要，或者你可能正在开发一个库，它被设计为使用一个范围内的依赖版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This can be a useful alternative to giving your test process a very large heap.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T013746Z" creationid="Administrator" creationdate="20150428T013746Z">
        <seg>这是一个很有用的替代方案，让你的测试进程可以有很大的堆内存。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This can be extremely powerful.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141115T153358Z" creationid="msdx" creationdate="20141115T153358Z">
        <seg>这将会非常强大。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This can be particularly useful for a transformer task, that converts input files to output files on a 1:1 basis.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160815T152817Z" creationid="95" creationdate="20160815T152703Z">
        <seg>对于将输入文件按1:1的基础转换为输出文件的转换任务，这将会特别有用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This can be used to do things like performing additional configuration once all the definitions in a build script have been applied, or for some custom logging or profiling.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T125307Z" creationid="95" creationdate="20160521T125307Z">
        <seg>这可以用来做一些事情，比如一旦构建脚本里的定义都被应用时执行额外的配置，或者做一些自定义的日志记录或分析。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This can be used to set some default values or add behaviour before the task is made available in the build file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T134938Z" creationid="95" creationdate="20160521T134938Z">
        <seg>这可以用来在构建脚本中的任务可用之前，设置一些默认值或添加行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This can be useful for doing things such as installing your application, creating an exploded copy of your archives, or maintaining a copy of the project's dependencies.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T145312Z" creationid="msdx" creationdate="20141113T145312Z">
        <seg>这可以用来做一些事情，比如安装你的应用程序、 创建你的归档文件的exploded副本，或维护项目的依赖项的副本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This can be useful if a certain dependency version is broken and should not be used, where a dependency resolve rule causes this version to be replaced with a known good version.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T070922Z" creationid="95" creationdate="20151115T070700Z">
        <seg>如果某个依赖的版本坏了，并且不应该被使用，这个机制将非常有用。一个依赖解析规则将会使这个版本被替换为一个已知的好的版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This can be useful if you cannot, or do not want to, place certain files in a repository.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T092919Z" creationid="haohang" creationdate="20150801T092900Z">
        <seg>这将会非常有用，比如你无法，或者是不想要把某些文件放到仓库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This can be useful when dealing with sensitive information (e.g. credentials), environment information, or for ad-hoc configuration.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150525T233805Z" creationid="haohang" creationdate="20150525T233805Z">
        <seg>当处理敏感信息 （例如证件），环境信息，或点对点配置时，这会非常有用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This can be very useful when tackling version conflicts - for more information see <bpt i="0" x="0">&lt;a0&gt;</bpt>Section 50.2.3, “Resolve version conflicts”<ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T054349Z" creationid="95" creationdate="20151115T054349Z">
        <seg>当解决版本冲突时，这可能非常有用——有关详细信息请参阅<bpt i="0" x="0">&lt;a0&gt;</bpt>第 50.2.3 节，“解决版本冲突”<ept i="0">&lt;/a0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This can occur when the source or target build is a newer Gradle version than the host build and that Gradle version exposes new outcome types.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161228T144607Z" creationid="95" creationdate="20161228T144236Z">
        <seg>可能存在这样的情况不：一个源构建或目标构建使用一个比主机构建更新的版本，并且这个Gradle版本有新增加的结果类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This change was requested by Eclipse users who take advantage of <bpt i="3" x="3">&lt;c3&gt;</bpt>war<ept i="3">&lt;/c3&gt;</ept> or <bpt i="4" x="4">&lt;c4&gt;</bpt>ear<ept i="4">&lt;/c4&gt;</ept> plugin but they don't use Eclipse WTP.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T003326Z" creationid="haohang" creationdate="20150603T003326Z">
        <seg>这种变化是Eclipse用户要求的，他们想利用<bpt i="3" x="3">&lt;c3&gt;</bpt>war<ept i="3">&lt;/c3&gt;</ept>或<bpt i="4" x="4">&lt;c4&gt;</bpt>ear<ept i="4">&lt;/c4&gt;</ept>插件，但又不想用 Eclipse WTP。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This chapter aims to serve as an introduction to plugins and Gradle and the role they play.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141124T095419Z" creationid="msdx" creationdate="20141124T095419Z">
        <seg>这一章旨在作为对插件和 Gradle 及他们扮演的角色的导言。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This chapter also describes “publishing artifacts” using a different mechanism than what is described in this chapter.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170412T153549Z" creationid="95" creationdate="20170412T153549Z">
        <seg>这一章还介绍了使用另一种不同的机制的“发布构件”。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This chapter describes a very simple Groovy project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T065750Z" creationid="msdx" creationdate="20141030T065750Z">
        <seg>这一章描述了一个很简单的Groovy项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This chapter describes how to publish build artifacts in the <bpt i="0" x="0">&lt;a0&gt;</bpt>Apache Ivy<ept i="0">&lt;/a0&gt;</ept> format, usually to a repository for consumption by other builds or projects.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170211T010227Z" creationid="95" creationdate="20170211T010005Z">
        <seg>本章内容主要描述了如何发布使用 <bpt i="0" x="0">&lt;a0&gt;</bpt>Apache Ivy<ept i="0">&lt;/a0&gt;</ept> 格式的构建构件，通常是发布到一个用于其他构建或项目的消费的仓库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This chapter describes how to publish build artifacts to an <bpt i="0" x="0">&lt;a0&gt;</bpt>Apache Maven<ept i="0">&lt;/a0&gt;</ept> Repository.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170412T150822Z" creationid="95" creationdate="20170412T150822Z">
        <seg>这一章介绍的是如何发布构建的构件到一个 <bpt i="0" x="0">&lt;a0&gt;</bpt>Apache Maven<ept i="0">&lt;/a0&gt;</ept> 仓库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This chapter describes the <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>original<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> publishing mechanism available in Gradle 1.0: in Gradle 1.3 a new mechanism for publishing was introduced.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151220T120500Z" creationid="95" creationdate="20151220T120500Z">
        <seg>本章介绍的是在Gradle 1.0版本中的<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>原始的<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>发布机制：在Gradle 1.3 中我们引入了新的发布机制。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This chapter describes the new <bpt i="0" x="0">&lt;a0&gt;</bpt>incubating<ept i="0">&lt;/a0&gt;</ept> Ivy publishing support provided by the “<bpt i="1" x="1">&lt;c1&gt;</bpt>ivy-publish<ept i="1">&lt;/c1&gt;</ept>” plugin.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170211T005545Z" creationid="95" creationdate="20170211T005545Z">
        <seg>本章内容描述了一个新的 <bpt i="0" x="0">&lt;a0&gt;</bpt>孵化中的<ept i="0">&lt;/a0&gt;</ept> 功能，是由“<bpt i="1" x="1">&lt;c1&gt;</bpt>ivy-publish<ept i="1">&lt;/c1&gt;</ept>”插件提供的 Ivy 发布支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This chapter describes the new <bpt i="0" x="0">&lt;a0&gt;</bpt>incubating<ept i="0">&lt;/a0&gt;</ept> Maven publishing support provided by the “<bpt i="1" x="1">&lt;c1&gt;</bpt>maven-publish<ept i="1">&lt;/c1&gt;</ept>” plugin.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170412T150716Z" creationid="95" creationdate="20170412T150716Z">
        <seg>本章内容讲的是一个新的 <bpt i="0" x="0">&lt;a0&gt;</bpt>孵化中的<ept i="0">&lt;/a0&gt;</ept> 功能，是由“<bpt i="1" x="1">&lt;c1&gt;</bpt>maven-publish<ept i="1">&lt;/c1&gt;</ept>”插件提供的 Maven 发布支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This chapter introduces some of the Gradle's support for web applications.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T071550Z" creationid="msdx" creationdate="20141030T071550Z">
        <seg>这一章主要介绍Gradle对Web程序的一些支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This chapter introduces some of the basics of dependency management in Gradle.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150703T101013Z" creationid="haohang" creationdate="20150703T100715Z">
        <seg>本章介绍了 Gradle 依赖管理的一些基础知识。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This chapter introduces the basics of the Gradle command-line.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141212T070815Z" creationid="msdx" creationdate="20141212T070736Z">
        <seg>本章介绍 Gradle 命令行的基础知识。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This chapter is a work in progress</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151228T151811Z" creationid="95" creationdate="20151228T151811Z">
        <seg>此章节还在完善中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This chapter is a work in progress.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T074043Z" creationid="msdx" creationdate="20141030T071411Z">
        <seg>此章节还在完善中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This chapter is about how you declare the outgoing artifacts of your project, and how to work with them (e.g. upload them).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151220T123213Z" creationid="95" creationdate="20151220T120812Z">
        <seg>本章介绍如何声明你的项目的输出构件，以及如何使用它们（例如上传它们）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This chapter is currently a work in progress.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T105003Z" creationid="msdx" creationdate="20150428T105003Z">
        <seg>此章节目前还在完善中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This chapter looks at some of the details of writing a build script.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T034603Z" creationid="msdx" creationdate="20141108T034416Z">
        <seg>这一章着眼于一些编写构建脚本的详细信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This concept, also known from Ivy, models the different levels of maturity that a module transitions through over time.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T012215Z" creationid="95" creationdate="20151129T011546Z">
        <seg>这一概念，也可以从 Ivy 中，随着时间推移，一个模块发展的成熟水平可以得知。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This configuration has by default only the default jar as an element.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151228T152339Z" creationid="95" creationdate="20151228T152339Z">
        <seg>该项配置在默认情况下只包含默认的 jar 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This creates a <bpt i="3" x="3">&lt;c3&gt;</bpt>FileTree<ept i="3">&lt;/c3&gt;</ept> defined with a base directory, and optionally some Ant-style include and exclude patterns.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T120210Z" creationid="msdx" creationdate="20141113T120210Z">
        <seg>它将定义一个基目录创建<bpt i="3" x="3">&lt;c3&gt;</bpt>FileTree<ept i="3">&lt;/c3&gt;</ept>对象，并可以选择加上一些 Ant风格的包含与排除模式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This creates a copy task with no default behavior.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T091841Z" creationid="msdx" creationdate="20141110T090306Z">
        <seg>上面的代码创建了一个什么都没做的复制任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This declares a dependency on Groovy.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T091526Z" creationid="haohang" creationdate="20150801T091453Z">
        <seg>这里定义了一个对 Groovy 的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This default platform does not specify any <bpt i="0" x="0">&lt;c0&gt;</bpt>architecture<ept i="0">&lt;/c0&gt;</ept> or <bpt i="1" x="1">&lt;c1&gt;</bpt>operatingSystem<ept i="1">&lt;/c1&gt;</ept> value, hence using the default values of the first available tool chain.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T092723Z" creationid="haohang" creationdate="20160408T092723Z">
        <seg>该默认平台不指定任何<bpt i="0" x="0">&lt;c0&gt;</bpt>architecture<ept i="0">&lt;/c0&gt;</ept>或<bpt i="1" x="1">&lt;c1&gt;</bpt>operatingSystem<ept i="1">&lt;/c1&gt;</ept>的值，因此会使用第一个可用的工具链的默认值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This dependency has a dependency on <bpt i="6" x="6">&lt;c6&gt;</bpt>commons-codec<ept i="6">&lt;/c6&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T091337Z" creationid="msdx" creationdate="20150503T091301Z">
        <seg>这个依赖又依赖于<bpt i="6" x="6">&lt;c6&gt;</bpt>commons-codec<ept i="6">&lt;/c6&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This dependency will then be used on compile and runtime class paths.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T075808Z" creationid="msdx" creationdate="20150429T075808Z">
        <seg>这个依赖会在编译和运行的类路径时用到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This description is for example displayed when executing <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle tasks<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T015454Z" creationid="msdx" creationdate="20141111T015031Z">
        <seg>例如，当执行<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle tasks<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>时显示这个描述。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This description is shown when running for example <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle tasks<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T065403Z" creationid="msdx" creationdate="20141111T065340Z">
        <seg>当对这个例子运行 <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle tasks<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> 的时候，这个描述会被显示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This determines how much information to write out stack traces when errors occur.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T161005Z" creationid="msdx" creationdate="20141105T161005Z">
        <seg>这决定了当出现错误时，有多少信息定到堆栈跟踪。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This did not work out.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T063343Z" creationid="haohang" creationdate="20160718T063343Z">
        <seg>它并没有成功。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This does not require dependent projects to be rebuilt (same as the -a option).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T154235Z" creationid="msdx" creationdate="20141105T153927Z">
        <seg>这使得重新构建时不去依赖项目（与-a选项一样）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This example performs some custom logging of project evaluation.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T132115Z" creationid="95" creationdate="20160521T132115Z">
        <seg>下面的例子是在执行项目评估的自定义日志记录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This example uses method <bpt i="0" x="0">&lt;c0&gt;</bpt>Project.afterEvaluate()<ept i="0">&lt;/c0&gt;</ept> to add a closure which is executed after the project is evaluated.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T131539Z" creationid="95" creationdate="20160521T131539Z">
        <seg>上面的例子使用了<bpt i="0" x="0">&lt;c0&gt;</bpt>Project.afterEvaluate()<ept i="0">&lt;/c0&gt;</ept>方法添加一个在project 评估之后执行的闭包。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This extension allows the configuration of the JaCoCo specific properties of the test task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T132242Z" creationid="msdx" creationdate="20150506T132242Z">
        <seg>该扩展允许配置 JaCoCo 中的测试任务的一些特定属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This extension provides a container of named publications and a container of named repositories.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170211T022824Z" creationid="95" creationdate="20170211T022824Z">
        <seg>这个扩展提供了两个容器，一个叫publications，一个叫repositories。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This feature is <bpt i="0" x="0">&lt;a0&gt;</bpt>incubating<ept i="0">&lt;/a0&gt;</ept>, but currently offers the ability to change the group, name and/or version of a requested dependency, allowing a dependency to be substituted with a completely different module during resolution.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T060050Z" creationid="95" creationdate="20151115T060050Z">
        <seg>此功能还在<bpt i="0" x="0">&lt;a0&gt;</bpt>孵化中<ept i="0">&lt;/a0&gt;</ept>，但目前提供了对于一个请求的依赖更改组、 名称及版本的功能，允许在解析过程中，把一个依赖替换为另一个完全不同的模块。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This feature is helpful if you work with tasks provided by Gradle.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T055327Z" creationid="msdx" creationdate="20141111T055323Z">
        <seg>如果您使用由 Gradle 提供的任务，那么此功能将非常有用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This feature will be provided once Sonar Runner 2.1 has been released and adopted by the Sonar Runner plugin.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150525T234707Z" creationid="haohang" creationdate="20150525T234707Z">
        <seg>一旦 Sonar Runner 2.1 发布，将提供这个功能，并由 Sonar Runner 插件采用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This filter defines a boolean expression for which Gradle artifact it accepts.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T144418Z" creationid="95" creationdate="20160106T144418Z">
        <seg>这个过滤器为每一个它接受的 Gradle 构件定义了一个布尔表达式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This format is supported by many other tools, such as CI servers.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T084059Z" creationid="msdx" creationdate="20150428T084059Z">
        <seg>这种格式可以被许多工具所支持，比如CI服务器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This functionality is provided by the <bpt i="3" x="3">&lt;c3&gt;</bpt>'windows-resources'<ept i="3">&lt;/c3&gt;</ept> plugin.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160324T153236Z" creationid="95" creationdate="20160324T153212Z">
        <seg>这个功能是由<bpt i="3" x="3">&lt;c3&gt;</bpt>'windows-resources'<ept i="3">&lt;/c3&gt;</ept> 插件所提供的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This has led to external solutions often based on build tools.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150716T073939Z" creationid="haohang" creationdate="20150716T073939Z">
        <seg>这导致了外部的解决方案通常都会基于构建工具。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This has the benefit that the plugin is automatically compiled and included in the classpath of the build script without you having to do anything.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160818T151315Z" creationid="95" creationdate="20160818T151315Z">
        <seg>这样做的好处是，你不需要再做什么，这个插件就能够被自动地编译并且包含到这个构建脚本的类路径当中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This has the benefit that the task class is automatically compiled and included in the classpath of the build script without you having to do anything.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T144059Z" creationid="95" creationdate="20160814T144059Z">
        <seg>这样做的好处是，你不需要再做什么，这个任务类就能够被自动地编译并且包含到这个构建脚本的类路径当中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This include all resource files and all Java source files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T053031Z" creationid="Administrator" creationdate="20150427T053031Z">
        <seg>包含所有的资源文件和Java源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This includes <bpt i="1" x="1">&lt;c1&gt;</bpt>jar<ept i="1">&lt;/c1&gt;</ept>, <bpt i="2" x="2">&lt;c2&gt;</bpt>war<ept i="2">&lt;/c2&gt;</ept> and <bpt i="3" x="3">&lt;c3&gt;</bpt>ear<ept i="3">&lt;/c3&gt;</ept> archives.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161228T150111Z" creationid="95" creationdate="20161228T150111Z">
        <seg>包括<bpt i="1" x="1">&lt;c1&gt;</bpt>jar<ept i="1">&lt;/c1&gt;</ept>， <bpt i="2" x="2">&lt;c2&gt;</bpt>war<ept i="2">&lt;/c2&gt;</ept>和<bpt i="3" x="3">&lt;c3&gt;</bpt>ear<ept i="3">&lt;/c3&gt;</ept> 归档文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This includes all Maven metadata manipulation and works also for Maven snapshots.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160104T153408Z" creationid="95" creationdate="20160104T153408Z">
        <seg>这包括所有的 Maven 元数据操纵，并且 Maven snapshot一样可用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This includes all build scripts, initialization scripts, and other scripts.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T153200Z" creationid="msdx" creationdate="20141109T153200Z">
        <seg>这包括所有构建脚本，初始化脚本和其他脚本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This includes the <bpt i="0" x="0">&lt;c0&gt;</bpt>jar<ept i="0">&lt;/c0&gt;</ept> task for project dependencies included in the <bpt i="1" x="1">&lt;c1&gt;</bpt>compile<ept i="1">&lt;/c1&gt;</ept> configuration.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T174541Z" creationid="Administrator" creationdate="20150425T174541Z">
        <seg>这包括了用于<bpt i="1" x="1">&lt;c1&gt;</bpt>编译<ept i="1">&lt;/c1&gt;</ept>配置中包含的项目依赖关系的<bpt i="0" x="0">&lt;c0&gt;</bpt>jar<ept i="0">&lt;/c0&gt;</ept>任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This includes things such as system properties, JVM arguments, and the Java executable to use.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T140853Z" creationid="Administrator" creationdate="20150427T140853Z">
        <seg>这包括系统属性、 JVM 参数和使用的Java 可执行文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This includes, but is not limited to, projects, tasks, and source sets.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T050525Z" creationid="msdx" creationdate="20141108T050525Z">
        <seg>这包括但并不限于项目（project）、任务（task）和源码集（source set）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This interface extends the SLF4J <bpt i="3" x="3">&lt;c3&gt;</bpt>Logger<ept i="3">&lt;/c3&gt;</ept> interface and adds a few Gradle specific methods to it.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T125840Z" creationid="msdx" creationdate="20141116T125840Z">
        <seg>该接口扩展自 SLF4J的 <bpt i="3" x="3">&lt;c3&gt;</bpt>Logger<ept i="3">&lt;/c3&gt;</ept>接口，并添加了几个 Gradle 的特有方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This is Gradle's default strategy, and is often an appropriate choice as long as versions are backwards-compatible.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150721T061624Z" creationid="haohang" creationdate="20150721T061624Z">
        <seg>这是 Gradle 的默认策略，只要版本都能向后兼容，往往是合适的选择。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This is a container for the project's source sets, of type <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>SourceSetContainer<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T050526Z" creationid="Administrator" creationdate="20150427T050526Z">
        <seg>这是项目的源集的容器，它的类型是 <bpt i="1" x="1">&lt;a1&gt;</bpt> <bpt i="2" x="2">&lt;c2&gt;</bpt>SourceSetContainer<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This is a key feature to create builds that are reliable and reproducible in any environment.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T151034Z" creationid="95" creationdate="20151129T151034Z">
        <seg>这是一个关键的功能，能在任何环境中创建可靠，重复性好的构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This is a multi-project build with a root project <bpt i="0" x="0">&lt;c0&gt;</bpt>water<ept i="0">&lt;/c0&gt;</ept> and a subproject <bpt i="1" x="1">&lt;c1&gt;</bpt>bluewhale<ept i="1">&lt;/c1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160522T125211Z" creationid="95" creationdate="20160522T125134Z">
        <seg>这是一个多项目构建，它有一个根项目<bpt i="0" x="0">&lt;c0&gt;</bpt>water<ept i="0">&lt;/c0&gt;</ept>，和一个子项目<bpt i="1" x="1">&lt;c1&gt;</bpt>bluewhale<ept i="1">&lt;/c1&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This is a reason why some projects prefer to store their libraries in their version control system.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151201T062401Z" creationid="haohang" creationdate="20151201T062401Z">
        <seg>这也是为什么一些项目更愿意把他们的库存储于他们的版本控件系统的原因。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This is a redundancy and not very nice to read.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T092243Z" creationid="msdx" creationdate="20141110T092243Z">
        <seg>这显得很冗余并且很不好读。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This is a reference to an <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>AntBuilder<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept> instance.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141114T143345Z" creationid="msdx" creationdate="20141114T143345Z">
        <seg>它指向一个 <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>AntBuilder<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This is a simple way to 'implement' the <bpt i="4" x="4">&lt;c4&gt;</bpt>FileCollection<ept i="4">&lt;/c4&gt;</ept> interface.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T160715Z" creationid="msdx" creationdate="20141112T160715Z">
        <seg>这是 “实现” <bpt i="4" x="4">&lt;c4&gt;</bpt>FileCollection<ept i="4">&lt;/c4&gt;</ept>接口的简单方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This is a stand alone user interface that can be launched with the <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>--gui<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> option.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T145754Z" creationid="msdx" creationdate="20141105T145754Z">
        <seg>这是一个独立的用户界面，可以通过加上 <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>--gui<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> 参数来启动。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This is a task action method that contains a single <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>IncrementalTaskInputs<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept> parameter, which indicates to Gradle that the action will process the changed inputs only.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160816T144628Z" creationid="95" creationdate="20160816T144628Z">
        <seg>这是一个任务操作方法，它包含了一个简单的 <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>IncrementalTaskInputs<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept> 参数，该参数提示了Gradle 这个操作将只处理那些更改的输入。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This is accessible from a build script, or an init script, or via the embedding API.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T034911Z" creationid="msdx" creationdate="20141116T154217Z">
        <seg>它可以从构建脚本，init 脚本，或者是通过内嵌的 API 访问。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This is also executed during the configuration phase.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T025434Z" creationid="haohang" creationdate="20160519T025434Z">
        <seg>This is also executed during the configuration phase.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This is also nice example for the usage of client modules.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161212T155647Z" creationid="95" creationdate="20161212T155113Z">
        <seg>这对于客户端模块的用法也是一个很好的例子。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This is an alternative to configuration injection.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160727T053024Z" creationid="haohang" creationdate="20160727T053024Z">
        <seg>这是配置注入的另一种方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This is an example of convention-over-configuration via a <bpt i="3" x="3">&lt;s3&gt;</bpt><bpt i="4" x="4">&lt;e4&gt;</bpt>reasonable default<ept i="4">&lt;/e4&gt;</ept><ept i="3">&lt;/s3&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141123T154141Z" creationid="msdx" creationdate="20141123T154141Z">
        <seg>这是通过一个<bpt i="3" x="3">&lt;s3&gt;</bpt><bpt i="4" x="4">&lt;e4&gt;</bpt>合理的默认<ept i="4">&lt;/e4&gt;</ept><ept i="3">&lt;/s3&gt;</ept>的约定优于配置的例子。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This is because these keywords are used in a <bpt i="3" x="3">&lt;c3&gt;</bpt>build.gradle<ept i="3">&lt;/c3&gt;</ept> file, which defines a project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T093700Z" creationid="haohang" creationdate="20160726T093700Z">
        <seg>这是因为这些关键字在 <bpt i="3" x="3">&lt;c3&gt;</bpt>build.gradle<ept i="3">&lt;/c3&gt;</ept> 文件中使用，而这个文件定义了一个project。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This is called when the contents of the collection are queried, and its return value is converted to a set of <bpt i="2" x="2">&lt;c2&gt;</bpt>File<ept i="2">&lt;/c2&gt;</ept> instances.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T160901Z" creationid="msdx" creationdate="20141112T160434Z">
        <seg>它会在查询集合内容，并且它的返回值被转换为一组<bpt i="2" x="2">&lt;c2&gt;</bpt>文件<ept i="2">&lt;/c2&gt;</ept>实例时被调用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This is changing with new services like <bpt i="2" x="2">&lt;a2&gt;</bpt>Bintray<ept i="2">&lt;/a2&gt;</ept> that let developers host and distribute their release binaries using a self-service repository platform.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151201T061224Z" creationid="haohang" creationdate="20151201T061113Z">
        <seg>这种状况通过一些新的服务也改变了，比如<bpt i="2" x="2">&lt;a2&gt;</bpt>Bintray<ept i="2">&lt;/a2&gt;</ept> ，它可以让开发者使用自助服务的仓库平台托管和分发他们发布的二进制文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This is described in more detail in <bpt i="0" x="0">&lt;a0&gt;</bpt>Section 50.4, “How to declare your dependencies”<ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T060515Z" creationid="msdx" creationdate="20141116T060515Z">
        <seg>这在<bpt i="0" x="0">&lt;a0&gt;</bpt> 50.4章节，“如何声明你的依赖关系”<ept i="0">&lt;/a0&gt;</ept>有更详细的描述。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This is discussed in more detail in the following sections.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T083637Z" creationid="Administrator" creationdate="20150426T083637Z">
        <seg>这一点将在以下各节中详细讨论。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This is done as follows:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T091646Z" creationid="msdx" creationdate="20150429T091646Z">
        <seg>以如下方式进行：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This is done by comparing published SHA1 values in the repository with the SHA1 values for existing downloaded artifacts.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T154654Z" creationid="95" creationdate="20151129T154654Z">
        <seg>这是通过比较发布在仓库中的 SHA1 值和现在已经下载好的工件的 SHA1 值来完成的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This is done using the <bpt i="4" x="4">&lt;a4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>PlatformConfigurableToolChain<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/a4&gt;</ept> API.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T094703Z" creationid="haohang" creationdate="20160408T094703Z">
        <seg>它通过 <bpt i="4" x="4">&lt;a4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>PlatformConfigurableToolChain<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/a4&gt;</ept> API来完成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This is done using the following criteria:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151007T024000Z" creationid="95" creationdate="20151007T024000Z">
        <seg>它使用以下标准来完成：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This is done without requiring a separate artifact file store per repository.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T153255Z" creationid="95" creationdate="20151129T153255Z">
        <seg>这不需要让一个单独的文件在每一个仓库中存储就可以做到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This is exactly our intention - we don't expect this chapter to grow very much.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T155642Z" creationid="95" creationdate="20161218T155642Z">
        <seg>这正是我们的意图——我们并不想这章内容变得很长。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This is executed during the configuration phase.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T025431Z" creationid="haohang" creationdate="20160519T025431Z">
        <seg>This is executed during the configuration phase.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This is expected to yield another significant speedup for Scala compilation.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T081842Z" creationid="msdx" creationdate="20150503T081636Z">
        <seg>这将会为 Scala 编译带来另一个方面上的明显加速。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This is expressed as <bpt i="4" x="4">&lt;c4&gt;</bpt>taskB.mustRunAfter(taskA)<ept i="4">&lt;/c4&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T152101Z" creationid="msdx" creationdate="20141110T152054Z">
        <seg>这被表示为 <bpt i="4" x="4">&lt;c4&gt;</bpt>taskB.mustRunAfter(taskA)<ept i="4">&lt;/c4&gt;</ept> 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This is extremely useful because it drives consistency across projects; the consistency regarding naming conventions of archives and their location after the build completed.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T071915Z" creationid="Administrator" creationdate="20150425T071915Z">
        <seg>这是非常有用的，因为它促进了跨项目的一致性 ；完成了有关构件命名规范及构建之后的位置上的一致。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This is generally a better option than inheritance, for a number of reasons: The injection is explicit in the build script, You can inject different logic into different projects, And you can inject any kind of configuration such as repositories, plug-ins, tasks, and so on.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T050919Z" creationid="95" creationdate="20161211T050919Z">
        <seg>通常来说，它是比继承更好的选择，有好几个原因：注入是显示地存在于构建脚本中的，你可以向不同的项目注入不同的逻辑，并且你可以注入任意一种配置，例如仓库，插件，任务等等。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This is interpreted as a relative path.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T061734Z" creationid="haohang" creationdate="20160718T061734Z">
        <seg>这被解释为相对路径。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This is not without problems.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151130T032845Z" creationid="haohang" creationdate="20151130T032845Z">
        <seg>这不是没有问题的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This is often the case with Maven SNAPSHOT artifacts, but can also be true for any artifact which is republished without changing it's identifier.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T152901Z" creationid="95" creationdate="20151129T152901Z">
        <seg>这种常见的情况是 Maven 的快照构件，但任何构件也都可以不改变它的标识符而重新发布。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This is really different to what you are used to with Ant targets.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T160735Z" creationid="msdx" creationdate="20141109T160730Z">
        <seg>这是真正的与你所使用的 Ant 目标（target）的不同之处。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This is reflected in the structure of the Maven POM. We think there are many situations where it makes sense to have more than one artifact per project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T144028Z" creationid="95" creationdate="20160106T144028Z">
        <seg>这也反映在 Maven POM 的结构中。我们认为在很多情况下，有意义一个项目有超多一个的构件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This is similar to the way we would normally configure objects in Java.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T092044Z" creationid="msdx" creationdate="20141110T092044Z">
        <seg>这类似于我们通常在 Java 中配置对象的方式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This is so unrelated tasks may share an output directory without interfering with each other.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T064058Z" creationid="msdx" creationdate="20141111T064055Z">
        <seg>这是不相关的任务可以在不互相干扰的情况下共用一个输出目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This is the same way you declare, for example, the Java compilation classpath.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161212T154051Z" creationid="95" creationdate="20161212T154051Z">
        <seg>这和你定义Java编译classpath是同样的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This is to shield you from false security.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T035744Z" creationid="Administrator" creationdate="20150428T035744Z">
        <seg>这是为了使你不会误以为测试通过。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This is useful for creating, say, a custom build command that explicitly skips tests, documentation, and samples that you could call "fast build".</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T155400Z" creationid="msdx" creationdate="20141105T155400Z">
        <seg>它用于创建一个自定义的命令，来显示地跳过测试，文档，例子。你可以称之为“快速构建”。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This is useful if your project requires some extra setup that is done inside another batch file or shell script (such as specifying an init script).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T161430Z" creationid="msdx" creationdate="20141105T161430Z">
        <seg>这是很有用的。如果你的项目需要在另一个批处理文件或 shell 脚本中做一些额外的配置（比如指定一个初始化脚本）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This is useful when you are developing custom Gradle tasks or plugins in Groovy.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T094821Z" creationid="haohang" creationdate="20150801T094821Z">
        <seg>当你在开发自定义 Gradle 任务或在 Groovy 中的插件时将会很有用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This is useful when you are developing custom Gradle tasks or plugins.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T094648Z" creationid="haohang" creationdate="20150801T094648Z">
        <seg>当你在开发自定义 Gradle 任务或插件时将会很有用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This is usually the most convenient way to perform a publish.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170326T080449Z" creationid="95" creationdate="20170326T080449Z">
        <seg>这通常是执行发布的最方便的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This is very handy for example for adding dependencies not needed for building or testing your software (e.g. additional JDBC drivers to be shipped with your distribution).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T075617Z" creationid="haohang" creationdate="20150722T075617Z">
        <seg>这是非常方便的，例如添加依赖时不需要构建或测试你的软件（比如，将会与发布的软件一起的额外的 JDBC 驱动程序）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This kind of lazy evaluation is a key benefit of accepting any value when setting a file property, then resolving that value when reading the property.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160828T132703Z" creationid="95" creationdate="20160828T132703Z">
        <seg>这种懒评估的主要好处是当设置文件属性时它能够接收任何值，并在读取这个属性的时候去解析这个值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This launching of an extra JVM on every build execution is quite expensive, which is why we highly recommend that you use the Gradle Daemon if you are specifying <bpt i="0" x="0">&lt;c0&gt;</bpt>org.gradle.java.home<ept i="0">&lt;/c0&gt;</ept> or <bpt i="1" x="1">&lt;c1&gt;</bpt>org.gradle.jvmargs<ept i="1">&lt;/c1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141121T141132Z" creationid="msdx" creationdate="20141121T141132Z">
        <seg>在执行每个构建时运行一个额外的 JVM 的代价是非常昂贵的，这就是为什么我们强烈推荐您使用 Gradle 守护进程，如果你指定了<bpt i="0" x="0">&lt;c0&gt;</bpt>org.gradle.java.home<ept i="0">&lt;/c0&gt;</ept>或<bpt i="1" x="1">&lt;c1&gt;</bpt>org.gradle.jvmargs<ept i="1">&lt;/c1&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This lies at the heart of Gradle and makes many things possible which would not be possible otherwise.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160518T032418Z" creationid="haohang" creationdate="20160518T032418Z">
        <seg>这是 Gradle 的核心，它使得很多事情由不可能变得可能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This makes identifying the parameter values for a particular iteration easy.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T144321Z" creationid="msdx" creationdate="20150428T144321Z">
        <seg>这使得在特定的迭代过程，很容易确定参数值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This makes incremental migration to Gradle much easier than the alternative.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150716T040840Z" creationid="haohang" creationdate="20150716T040840Z">
        <seg>这使得增量迁移到 Gradle 比其他的要容易得多。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This makes it possible to use the best language for the job, and to rewrite any class in the other language if needed.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T071240Z" creationid="msdx" creationdate="20150429T071240Z">
        <seg>这样一来，我们就能够在项目中使用最适合的语言，并且在有需要的情况下用其他的语言重写其中的任何类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This makes it unnecessary to execute the clean task explicitly.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T103340Z" creationid="haohang" creationdate="20150624T103340Z">
        <seg>这样一来，我们就没有必要显式执行 clean 任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This makes metadata rules another instrument for customizing dependency resolution.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T092139Z" creationid="95" creationdate="20151115T092139Z">
        <seg>这使得元数据成为自定义依赖解析的另一种手段。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This makes the API easy to bundle in your application.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T153242Z" creationid="95" creationdate="20161218T153242Z">
        <seg>这便于把API捆绑到你的应用程序中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This means neither <bpt i="7" x="7">&lt;c7&gt;</bpt>httpclient<ept i="7">&lt;/c7&gt;</ept> nor <bpt i="8" x="8">&lt;c8&gt;</bpt>commons-codec<ept i="8">&lt;/c8&gt;</ept> is added to your WAR, even if <bpt i="9" x="9">&lt;c9&gt;</bpt>commons-codec<ept i="9">&lt;/c9&gt;</ept> were an explicit dependency of your <bpt i="10" x="10">&lt;c10&gt;</bpt>compile<ept i="10">&lt;/c10&gt;</ept> configuration.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T091518Z" creationid="msdx" creationdate="20150503T091518Z">
        <seg>这意味着 <bpt i="7" x="7">&lt;c7&gt;</bpt>httpclient<ept i="7">&lt;/c7&gt;</ept> 和 <bpt i="8" x="8">&lt;c8&gt;</bpt>commons-codec<ept i="8">&lt;/c8&gt;</ept> 都不会添加到你的 WAR 中，即使 <bpt i="9" x="9">&lt;c9&gt;</bpt>commons-codec<ept i="9">&lt;/c9&gt;</ept> 是 <bpt i="10" x="10">&lt;c10&gt;</bpt>compile<ept i="10">&lt;/c10&gt;</ept> 配置上的一个显示依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This means that 2 tasks from the same project are never executed in parallel.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T091331Z" creationid="haohang" creationdate="20160726T091331Z">
        <seg>这意味着同一个项目的两个任务都永远不会被执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This means that Gradle itself has to be run with Java 6 or higher.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T154440Z" creationid="msdx" creationdate="20150501T154440Z">
        <seg>这意味着 Gradle 本身要使用 Java 6 或其以上版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This means that Gradle must launch a separate JVM process to execute the build after parsing the various <bpt i="0" x="0">&lt;c0&gt;</bpt>gradle.properties<ept i="0">&lt;/c0&gt;</ept> files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141120T081859Z" creationid="msdx" creationdate="20141120T081853Z">
        <seg>这意味着 Gradle 在分析了各种<bpt i="0" x="0">&lt;c0&gt;</bpt>gradle.properties<ept i="0">&lt;/c0&gt;</ept>文件之后，必须启动一个单独的 JVM 进程，以执行构建操作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This means that all of the properties and methods declared by the <bpt i="2" x="2">&lt;c2&gt;</bpt>Script<ept i="2">&lt;/c2&gt;</ept> interface are available in your script.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T044735Z" creationid="msdx" creationdate="20141108T044735Z">
        <seg>这意味着所有由该<bpt i="2" x="2">&lt;c2&gt;</bpt>Script<ept i="2">&lt;/c2&gt;</ept>接口声明的属性和方法在您的脚本中是可用的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This means that even if some daemon is idle but you are running the build with a different version of Gradle, a new daemon will be started.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141117T153451Z" creationid="msdx" creationdate="20141117T153451Z">
        <seg>这意味着即使一些守护进程处于空闲状态，但您正在运行的构建与 Gradle 不同版本，也将启动一个新的守护进程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This means that if a given test class is executed by multiple test tasks, then the test report will include executions of that class, but it can be hard to distinguish individual executions of that class and their output.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T143752Z" creationid="msdx" creationdate="20150428T143752Z">
        <seg>这意味着，如果一个给定的测试类被多个test任务所执行，那么测试报告将包括那个类的所有执行结果，但它难以区分那个类的每次执行和它们的输出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This means that if you want to upload your signatures to your distribution repository along with the artifacts you simply execute the <bpt i="2" x="2">&lt;c2&gt;</bpt>uploadArchives<ept i="2">&lt;/c2&gt;</ept> task as normal.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160126T144609Z" creationid="95" creationdate="20160126T144609Z">
        <seg>这意味着，如果你想要将你的签名以及artifacts上传到你的分布仓库中，正常来讲你只需要执行<bpt i="2" x="2">&lt;c2&gt;</bpt>uploadArchives<ept i="2">&lt;/c2&gt;</ept>任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This means that it is also possible to modify the POM in such a way that it is no longer a valid Maven Pom, so care must be taken when using this feature.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T062518Z" creationid="95" creationdate="20170416T062518Z">
        <seg>这意味着，用这样的方式，可能会把这个POM修改为不再是有效的Maven Pom，所以必须谨慎使用这个功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This means that it is also possible to modify the descriptor in such a way that it is no longer a valid Ivy module descriptor, so care must be taken when using this feature.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170304T032204Z" creationid="95" creationdate="20170304T032204Z">
        <seg>这意味着，用这样的方式，可能会把这个描述符修改为不再是有效的Ivy模块描述符，所以必须谨慎使用这个功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This means that it is incomplete and not yet at regular Gradle production quality.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161219T145400Z" creationid="95" creationdate="20161219T145400Z">
        <seg>这也表示它是不完整的，并且还未成为定期的Gradle产品质量功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This means that subsequent calls to the Tooling API, be it model building requests or task executing requests can be executed in the same long-living process.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T155301Z" creationid="95" creationdate="20161218T155301Z">
        <seg>这意味着对Tooling API的后续调用，无论是模型构建请求还是任务执行请求，都可以在同一个长期存活的进程中执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This means that the 'newest' conflict resolution strategy would still select version <bpt i="4" x="4">&lt;c4&gt;</bpt>1.3<ept i="4">&lt;/c4&gt;</ept> if this version was also pulled transitively.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T085744Z" creationid="95" creationdate="20151115T085607Z">
        <seg>这意味着，如果这个版本也因依赖传递被获取到，“使用最新”的冲突解决策略仍然会选择 <bpt i="4" x="4">&lt;c4&gt;</bpt>1.3<ept i="4">&lt;/c4&gt;</ept> 版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This means that the JAR is available in the classpath of a dependent project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T144617Z" creationid="msdx" creationdate="20150428T144617Z">
        <seg>这意味着这个JAR文件被包含在一个依赖它的项目的类路径中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This means that the closure we are passing gets evaluated <bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;e3&gt;</bpt>after<ept i="3">&lt;/e3&gt;</ept><ept i="2">&lt;/s2&gt;</ept> the build scripts of the subproject are evaluated.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160530T151251Z" creationid="95" creationdate="20160530T151251Z">
        <seg>这意味着我们所传的闭包在子项目的构建脚本评估<bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;e3&gt;</bpt>之后<ept i="3">&lt;/e3&gt;</ept><ept i="2">&lt;/s2&gt;</ept>才被评估。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This means that the existing APIs, namely <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>GradleLauncher<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> and the open API (the UIFactory and friends), are deprecated and will be removed in some future version of Gradle.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T154838Z" creationid="95" creationdate="20161218T154838Z">
        <seg>这意味着，现有的 API，即<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>GradleLauncher<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>和开放的 API（UIFactory 及同类）已经被弃用，且会在以后的 Gradle 版本中移除。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This means that the inclusion of the path 'services:hotels:api' will result in creating 3 projects: 'services', 'services:hotels' and 'services:hotels:api'.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T041843Z" creationid="haohang" creationdate="20160519T041843Z">
        <seg>这意味着，包含路径 'services:hotels:api' 将导致创建3个项目: 'services'、'services:hotels'和'services:hotels:api'。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This means that using any form of shared build script logic or configuration injection (<bpt i="0" x="0">&lt;c0&gt;</bpt>allprojects<ept i="0">&lt;/c0&gt;</ept>, <bpt i="1" x="1">&lt;c1&gt;</bpt>subprojects<ept i="1">&lt;/c1&gt;</ept>, etc.) will cause your projects to be coupled.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T094333Z" creationid="haohang" creationdate="20160726T094333Z">
        <seg>这意味着，使用任何形式的共享构建脚本逻辑或配置注入（<bpt i="0" x="0">&lt;c0&gt;</bpt>allprojects<ept i="0">&lt;/c0&gt;</ept>、<bpt i="1" x="1">&lt;c1&gt;</bpt>subprojects<ept i="1">&lt;/c1&gt;</ept>等）会导致你的项目耦合。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This means that when a single task, from a single project is requested, <bpt i="1" x="1">&lt;s1&gt;</bpt><bpt i="2" x="2">&lt;e2&gt;</bpt>all<ept i="2">&lt;/e2&gt;</ept><ept i="1">&lt;/s1&gt;</ept> projects of multi-project build are configured first.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160522T120317Z" creationid="95" creationdate="20160522T120317Z">
        <seg>这意味着，当从一个项目请求一个任务时，首先会配置多项目构建的<bpt i="1" x="1">&lt;s1&gt;</bpt><bpt i="2" x="2">&lt;e2&gt;</bpt>所有<ept i="2">&lt;/e2&gt;</ept><ept i="1">&lt;/s1&gt;</ept>项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This means that when resolving against one repository Gradle will never overwrite the cached artifact file from a different repository.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T153105Z" creationid="95" creationdate="20151129T153105Z">
        <seg>这意味着，当对一个存储库解析时，Gradle 将永远不会覆盖从一个不同的仓库中缓存的构件文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This means that whenever you are using the STS Gradle plugin for Eclipse or the Gradle support in Intellij IDEA, you're already using the Gradle Daemon.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141117T143014Z" creationid="msdx" creationdate="20141117T142452Z">
        <seg>这意味着当您在 Eclipse中使用 STS Gradle  或在 Intellij IDEA 中使用 Gradle 支持时，您已经在使用 Gradle 守护进程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This means that you can just put you build source code in this directory and stick to the layout convention for a Java/Groovy project (see <bpt i="0" x="0">&lt;a0&gt;</bpt>Table 23.4, “Java plugin - default project layout”<ept i="0">&lt;/a0&gt;</ept>).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T051903Z" creationid="95" creationdate="20161211T051624Z">
        <seg>这意味着你可以只把你的构建源代码放到这个目录当中，并且保留一个 Java/Groovy 项目的约定布局（见<bpt i="0" x="0">&lt;a0&gt;</bpt>表 23.4，“Java 插件 - 默认项目布局”<ept i="0">&lt;/a0&gt;</ept>）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This means that you can use the same API to work with different target versions of Gradle.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T151542Z" creationid="95" creationdate="20161218T151542Z">
        <seg>这意味着，你可以让同样的API与不同的Gradle版本一起使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This means the default Gradle log level will not show any Ant/Ivy output unless it is an error or a warning.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T131051Z" creationid="msdx" creationdate="20141116T131051Z">
        <seg>这意味着默认情况下， Gradle 日志级别将不会显示任何 Ant/Ivy 的输出，除非是错误或警告信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This means they cannot be used outside the current build, but they can be used with the same build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T094334Z" creationid="haohang" creationdate="20150801T094334Z">
        <seg>这意味着它们不能在当前的构建外使用，但它们可以在同一个构建中使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This means you can manipulate and execute the Ant targets in exactly the same way as Gradle tasks.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T060900Z" creationid="msdx" creationdate="20141116T060900Z">
        <seg>这意味着你可以用与 Gradle 任务完全相机的方式操纵和执行 Ant 目标。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This means you can set the property using, for example, a <bpt i="4" x="4">&lt;c4&gt;</bpt>File<ept i="4">&lt;/c4&gt;</ept>, <bpt i="5" x="5">&lt;c5&gt;</bpt>String<ept i="5">&lt;/c5&gt;</ept>, collection, <bpt i="6" x="6">&lt;c6&gt;</bpt>FileCollection<ept i="6">&lt;/c6&gt;</ept> or even a closure.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T123257Z" creationid="msdx" creationdate="20141113T123257Z">
        <seg>这意味着您可以通过如<bpt i="4" x="4">&lt;c4&gt;</bpt>File<ept i="4">&lt;/c4&gt;</ept>、<bpt i="5" x="5">&lt;c5&gt;</bpt>String<ept i="5">&lt;/c5&gt;</ept>、 集合、 <bpt i="6" x="6">&lt;c6&gt;</bpt>FileCollection<ept i="6">&lt;/c6&gt;</ept>对象，或甚至是一个闭包来设置此属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This means you can, for example, create a <bpt i="0" x="0">&lt;c0&gt;</bpt>FileCollection<ept i="0">&lt;/c0&gt;</ept> that represents files which will be created in the future by, say, some task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T161518Z" creationid="msdx" creationdate="20141112T161518Z">
        <seg>这意味着您可以，比如创建一个<bpt i="0" x="0">&lt;c0&gt;</bpt>FileCollection<ept i="0">&lt;/c0&gt;</ept> 对象而里面的文件会在以后才创建，比方说在一些任务中才创建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This means you only need to declare the extra things you need.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T052058Z" creationid="95" creationdate="20161211T052058Z">
        <seg>这意味着，你只需声明你所需要的额外的东西。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This mechanism also supports tools that wish to integrate with Gradle.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161214T142325Z" creationid="95" creationdate="20161214T142325Z">
        <seg>这种机制还支持希望与Gradle集成的工具。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This mechanism has been superseded by 'Test Filtering', described above.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T035229Z" creationid="Administrator" creationdate="20150428T035229Z">
        <seg>这种机制已经被上述的“测试过滤”所取代。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This mechanism is very powerful and flexible.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151227T152810Z" creationid="95" creationdate="20151227T152751Z">
        <seg>这一机制非常强大和灵活。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This metadata typically originates in the module's descriptor.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T091638Z" creationid="95" creationdate="20151115T091638Z">
        <seg>这个元数据通常来源于模块的描述符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This method accepts a task instance, a task name or any other input accepted by <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>Task.dependsOn()<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T123145Z" creationid="msdx" creationdate="20141111T123145Z">
        <seg>这个方法接受一个任务实例、 任务名称或<bpt i="4" x="4">&lt;a4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>Task.dependsOn()<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/a4&gt;</ept>所接受的任何其他输入作为参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This might be a library or a ZIP distribution or any other file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151220T123429Z" creationid="95" creationdate="20151220T123421Z">
        <seg>它可能是一个库，一个 ZIP 文件，或者是任何其他文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This mystery jar was a necessary transitive, fourth-level dependency that was easy to miss because no one had bothered to use managed transitive dependencies.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150721T053914Z" creationid="haohang" creationdate="20150721T053914Z">
        <seg>这个神秘的 jar 包是一个必需传递的，第四级的依赖，很容易被忽略，因为没有人会费心去使用托管的传递依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This new behavior is implemented in a bandwidth and storage efficient way.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T043618Z" creationid="95" creationdate="20151129T043618Z">
        <seg>这一新行为通过带宽和存储空间的有效途径被实现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This object then becomes available as a project property with the same name as the extension object.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T131143Z" creationid="95" creationdate="20160820T131143Z">
        <seg>然后该对象变为有效的一个项目属性，与这个扩展对象的名称相同。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This only needs to be done once.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161217T160604Z" creationid="95" creationdate="20161217T160604Z">
        <seg>这只需要做一次。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This override always forces the output to be shown.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T155956Z" creationid="msdx" creationdate="20141105T155956Z">
        <seg>它会始终强制显示输出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This plugin does not add any tasks.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150526T004447Z" creationid="haohang" creationdate="20150526T004447Z">
        <seg>此插件不会添加任何任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This plugin extends the Java plugin to add Groovy compilation capabilities to your project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T061137Z" creationid="msdx" creationdate="20141030T040304Z">
        <seg>该插件扩展了Java插件，对你的项目增加了Groovy的编译功能.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This plugin is automatically applied if you use the Java plugin.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151227T161006Z" creationid="95" creationdate="20151227T161006Z">
        <seg>这个Base插件会在你使用 Java 插件时自动的添加进来。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This plugin provides a new DSL to support publishing artifacts to Ivy repositories, which improves on the existing DSL.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T032237Z" creationid="Administrator" creationdate="20150425T032237Z">
        <seg>这个插件提供了新的 DSL，用于支持发布文件到 Ivy 存储库，改善了现有的 DSL。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This plugin provides a new DSL to support publishing artifacts to Maven repositories, which improves on the existing DSL.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T032310Z" creationid="Administrator" creationdate="20150425T032310Z">
        <seg>这个插件提供了新的 DSL，用于支持发布文件到 Maven 存储库，改善了现有的 DSL。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This practice also reduces the potential for error.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150716T094031Z" creationid="haohang" creationdate="20150716T094031Z">
        <seg>这种做法也减少了潜在的错误。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This process can be done in parts over time, and you can have a working Gradle build during the entire process.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141114T143151Z" creationid="msdx" creationdate="20141114T143151Z">
        <seg>这个过程可以随着时间一点点完成，并且在这整个过程当中你的 Gradle 构建都可以使用用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This process is described in <bpt i="0" x="0">&lt;a0&gt;</bpt>Chapter 51, <bpt i="1" x="1">&lt;i1&gt;</bpt>Publishing artifacts<ept i="1">&lt;/i1&gt;</ept><ept i="0">&lt;/a0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T160925Z" creationid="msdx" creationdate="20141113T160925Z">
        <seg>这一过程在<bpt i="0" x="0">&lt;a0&gt;</bpt>第 51章，<bpt i="1" x="1">&lt;i1&gt;</bpt>发布文件<ept i="1">&lt;/i1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>中会讲到。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This project is simply a Groovy project that produces a JAR containing the plugin classes.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160828T132813Z" creationid="95" creationdate="20160828T132813Z">
        <seg>这个项目只是一个简单的Groovy项目，它将产生一个包含插件类的JAR包。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This project is simply a Groovy project that produces a JAR containing the task class.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160815T144818Z" creationid="95" creationdate="20160815T144818Z">
        <seg>这个项目只是一个简单的Groovy项目，它将产生一个包含任务类的JAR包。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This project produces and publishes a JAR which you can then use in multiple builds and share with others.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T145059Z" creationid="95" creationdate="20160814T145059Z">
        <seg>这个项目会输出和发布一个JAR文件，然后你可以在多个构建中使用，并且分享出去。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This provides you with an alternate way to launch Gradle commands.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T161319Z" creationid="msdx" creationdate="20141105T161319Z">
        <seg>这为你提供了启动 Gradle 命令行的替代方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This publication determines which artifacts are actually published as well as the details included in the associated Ivy module descriptor file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170211T140125Z" creationid="95" creationdate="20170211T140125Z">
        <seg>这个publication决定了实际上哪些构件会被发布，以及在关联的Ivy模块描述文件中所包含的详细信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This publication determines which artifacts are actually published as well as the details included in the associated POM file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170412T154245Z" creationid="95" creationdate="20170412T154245Z">
        <seg>这个publication决定了实际上哪些构件会被发布，以及在关联的 POM文件中所包含的详细信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This recursive pattern of transitive dependencies results in a tree of dependencies including your project's first-level dependencies, second-level dependencies, and so on.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150720T060754Z" creationid="haohang" creationdate="20150720T060550Z">
        <seg>这种递归模式传递依赖的结果是，在一个依赖树中，会包含你的项目的第一级依赖、第二级依赖，等等。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This rule implementation can be neatly encapsulated in a corporate plugin, and shared across all builds within the organisation.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T070632Z" creationid="95" creationdate="20151115T070632Z">
        <seg>该规则实现可以整齐地封装在一个公司的插件中，并在组织内和所有构建共享。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This sample uses this feature to configure an extra repository to be used only for certain environments.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161215T143334Z" creationid="95" creationdate="20161214T160016Z">
        <seg>该示例使用此功能来配置额外的仓库，以让它仅用于特定的环境。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This section outlines the Gradle project's recommended best practices for managing dependencies.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150716T083711Z" creationid="haohang" creationdate="20150716T083711Z">
        <seg>本节概述 Gradle 项目推荐的管理依赖的最佳实践。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This snapshot contains the set of input files and a hash of the contents of each file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T063355Z" creationid="msdx" creationdate="20141111T063142Z">
        <seg>这个快照包含了输入文件集和每个文件的内容的哈希值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This snapshot contains the set of output files and a hash of the contents of each file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T063348Z" creationid="msdx" creationdate="20141111T063348Z">
        <seg>该快照包含输出文件集和每个文件的内容的哈希值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This solution will include a Visual Studio Project for that component, as well as linking to project files for each depended-on binary.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T095430Z" creationid="haohang" creationdate="20160408T095430Z">
        <seg>这个方案包含了一个该组件的 Visual Studio Project ，并且为每一个依赖的二进制文件链接到项目文件中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This source set should contain the cunit test files for the component sources.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160504T144517Z" creationid="95" creationdate="20160504T144517Z">
        <seg>这个源码集应包含组件源码的 cunit 测试文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This specification is used by the <bpt i="3" x="3">&lt;c3&gt;</bpt>installApp<ept i="3">&lt;/c3&gt;</ept> and <bpt i="4" x="4">&lt;c4&gt;</bpt>distZip<ept i="4">&lt;/c4&gt;</ept> tasks as the specification of what is to be include in the distribution.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150703T100012Z" creationid="haohang" creationdate="20150703T033752Z">
        <seg>这个描述在 <bpt i="3" x="3">&lt;c3&gt;</bpt>installApp<ept i="3">&lt;/c3&gt;</ept> 和 <bpt i="4" x="4">&lt;c4&gt;</bpt>distZip<ept i="4">&lt;/c4&gt;</ept> 任务中会用到，作为这个distribution 都包含了什么内容的描述。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This strategy enforces that all version conflicts are resolved explicitly in the build script.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150721T061744Z" creationid="haohang" creationdate="20150721T061744Z">
        <seg>这种策略强制在构建脚本中明确地解决所有的版本冲突。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This task can be configured to change what is compared.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170109T124812Z" creationid="95" creationdate="20170109T124812Z">
        <seg>这个任务的配置可以修改比较的内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This task depends on all the archives task of the <bpt i="1" x="1">&lt;c1&gt;</bpt>archives<ept i="1">&lt;/c1&gt;</ept> configuration.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T143025Z" creationid="95" creationdate="20160105T143025Z">
        <seg>这个任务依赖于<bpt i="1" x="1">&lt;c1&gt;</bpt>archives<ept i="1">&lt;/c1&gt;</ept>配置的所有archives任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This task doesn't do anything useful, so let's add some behaviour.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T145453Z" creationid="95" creationdate="20160814T145410Z">
        <seg>这个任务没有进行任何有用的操作，所以让我们来添加一些行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This task is given a name based on the name of the publication: "<bpt i="5" x="5">&lt;c5&gt;</bpt>generateDescriptorFileFor«<bpt i="6" x="6">&lt;s6&gt;</bpt><bpt i="7" x="7">&lt;e7&gt;</bpt>NAME OF PUBLICATION<ept i="7">&lt;/e7&gt;</ept><ept i="6">&lt;/s6&gt;</ept>»Publication<ept i="5">&lt;/c5&gt;</ept>".</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T143715Z" creationid="95" creationdate="20170330T143715Z">
        <seg>这个任务被指定为一个基于发布的名称的名字：“<bpt i="5" x="5">&lt;c5&gt;</bpt>generateDescriptorFileFor«<bpt i="6" x="6">&lt;s6&gt;</bpt><bpt i="7" x="7">&lt;e7&gt;</bpt>发布名称<ept i="7">&lt;/e7&gt;</ept><ept i="6">&lt;/s6&gt;</ept>»Publication<ept i="5">&lt;/c5&gt;</ept>”。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This task is only added to the root project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T072552Z" creationid="haohang" creationdate="20150625T072552Z">
        <seg>此任务仅添加到根项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This task is wired into the <bpt i="3" x="3">&lt;c3&gt;</bpt>publish<ept i="3">&lt;/c3&gt;</ept> lifecycle task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T063458Z" creationid="95" creationdate="20170416T063458Z">
        <seg>这个任务会被连接到 <bpt i="3" x="3">&lt;c3&gt;</bpt>publish<ept i="3">&lt;/c3&gt;</ept> 生命周期任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This task is wired into the <bpt i="3" x="3">&lt;c3&gt;</bpt>publishToMavenLocal<ept i="3">&lt;/c3&gt;</ept> lifecycle task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T064252Z" creationid="95" creationdate="20170416T064242Z">
        <seg>这个任务被连线到<bpt i="3" x="3">&lt;c3&gt;</bpt>publishToMavenLocal<ept i="3">&lt;/c3&gt;</ept>生命周期任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This task will generate a Visual Studio Solution file for the named component.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T095306Z" creationid="haohang" creationdate="20160408T095306Z">
        <seg>这个任务会为所命名的组件生成一个 Visual Studio Solution 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This topic is also the most intellectually challenging.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160522T024625Z" creationid="95" creationdate="20160522T024625Z">
        <seg>本主题也是最具智力挑战性的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This type is used when no type was explicitly specified, and no type could be inferred.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T095112Z" creationid="haohang" creationdate="20150707T095112Z">
        <seg>如果没有显示地指定一个类型，或者无法推断出类型时，会使用该类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This type of task is good for implementing one-off tasks in your build script.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T143050Z" creationid="95" creationdate="20160814T143050Z">
        <seg>这个类型的任务适合于实现在构建脚本中只执行一次的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This type will be automatically inferred if such a file exists.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T092519Z" creationid="haohang" creationdate="20150707T092519Z">
        <seg>如果存在这样的文件，将会自动推断此类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This was all about simple tasks.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T160319Z" creationid="msdx" creationdate="20141109T160257Z">
        <seg>这都是简单的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This way the default tasks behave correctly when projects are configured on demand.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160522T124517Z" creationid="95" creationdate="20160522T123957Z">
        <seg>这种方式当项目按需配置时默认任务的行为正确。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This way the dependency declaration is more explicit.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T102148Z" creationid="haohang" creationdate="20150801T102148Z">
        <seg>这种依赖声明的方式更加明确。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This way the typical common configuration is supported (allprojects or subprojects script blocks).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160522T122153Z" creationid="95" creationdate="20160522T122153Z">
        <seg>这种方式的典型常见配置已经支持（allprojects 或subprojects 脚本块）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This way you can force Gradle to rebuild the cache.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T153802Z" creationid="msdx" creationdate="20141109T153802Z">
        <seg>通过这种方式，您可以强制 Gradle 重新生成缓存。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This way, the configuration time of a large multi-project build is greatly improved.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160522T121749Z" creationid="95" creationdate="20160522T121749Z">
        <seg>这种方式，大大提高了大型多项目构建的配置时间。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This will add following tasks to the project:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150701T031310Z" creationid="haohang" creationdate="20150701T031258Z">
        <seg>这将向项目添加下列任务：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This will also apply the Java plugin to the project, if it has not already been applied.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T062257Z" creationid="msdx" creationdate="20141030T062217Z">
        <seg>这段代码同时会将Java插件应用到project中，如果Java插件还没被应用的话。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This will always involve a remote lookup on the repository, however in many cases no download will be required (see<bpt i="2" x="2">&lt;a2&gt;</bpt>Section 50.9.1.3, “Artifact reuse”<ept i="2">&lt;/a2&gt;</ept>, below).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T150650Z" creationid="95" creationdate="20151129T150650Z">
        <seg>这将始终涉及到存储库中的远程查找，然而，在许多情况下都没有下载的需要（见<bpt i="2" x="2">&lt;a2&gt;</bpt>第 50.9.1.3 节，“构件重用”<ept i="2">&lt;/a2&gt;</ept>下文）、。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This will cause the distribution archives to be created with a different name.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150701T034510Z" creationid="haohang" creationdate="20150701T034510Z">
        <seg>这将导致分发的 archives 以不同的名字创建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This will create a task (of type <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Sign<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>) in your project named “<bpt i="2" x="2">&lt;c2&gt;</bpt>signArchives<ept i="2">&lt;/c2&gt;</ept>”, that will build any <bpt i="3" x="3">&lt;c3&gt;</bpt>archives<ept i="3">&lt;/c3&gt;</ept> artifacts (if needed) and then generate signatures for them.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160109T072447Z" creationid="95" creationdate="20160109T072242Z">
        <seg>这将在你的项目中创建一个名为“<bpt i="2" x="2">&lt;c2&gt;</bpt>signArchives<ept i="2">&lt;/c2&gt;</ept>”的任务（<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Sign<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>类型），这个任务会构建任何<bpt i="3" x="3">&lt;c3&gt;</bpt>archives<ept i="3">&lt;/c3&gt;</ept>的artifacts（如果需要），然后为它们生成签名。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This will create a task (of type <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Sign<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>) in your project named “<bpt i="2" x="2">&lt;c2&gt;</bpt>signStuffZip<ept i="2">&lt;/c2&gt;</ept>”, that will build the input task's archive (if needed) and then sign it.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160126T140449Z" creationid="95" creationdate="20160109T073124Z">
        <seg>这将在您的项目创建一个名为“<bpt i="2" x="2">&lt;c2&gt;</bpt>signStuffZip<ept i="2">&lt;/c2&gt;</ept>”的（<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Sign<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>类型） 的任务，这个任务会构建输入任务的archive（如果需要），并进行签字。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This will make the test task only use the includes / excludes to find test classes.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T081854Z" creationid="Administrator" creationdate="20150428T081854Z">
        <seg>这将使test任务只使用includes / excludes 来找到测试类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This works by converting the POM to one or more Gradle files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T081841Z" creationid="haohang" creationdate="20150707T081841Z">
        <seg>这是通过将 POM 转换为一个或多个 Gradle 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This works for <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>any<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T092555Z" creationid="msdx" creationdate="20141110T092547Z">
        <seg>这种方式适用于<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>任何<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This works in a similar way to configuring projects in a multi-project build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161214T155908Z" creationid="95" creationdate="20161214T155908Z">
        <seg>这与在多项目构建中配置项目的方式类似。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This works independent of the project's source directory layout.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T092502Z" creationid="msdx" creationdate="20150512T092502Z">
        <seg>它的分析独立于项目的源目录布局。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This works like any other regular Gradle multi-project build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T052930Z" creationid="95" creationdate="20161211T052930Z">
        <seg>这就像其他常规的Gradle多项目构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This works regardless of the project's source directory layout.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150520T143052Z" creationid="msdx" creationdate="20150520T143052Z">
        <seg>这个过程与project 的源目录布局无关。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This yields a hierarchical view in the Sonar web interface with aggregated metrics and the ability to drill down into subprojects.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T085241Z" creationid="msdx" creationdate="20150512T085241Z">
        <seg>它能够在 Sonar 的 web 界面生成一个层次图，该层次图包含了综合的指标且能够深入到子项目中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>This yields a hierarchical view in the Sonar web interface, with aggregated metrics and the ability to drill down into subprojects.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150514T152136Z" creationid="msdx" creationdate="20150514T152136Z">
        <seg>它能够在 Sonar 的 web 界面生成一个层次图，该层次图包含了综合的指标且能够深入到子项目中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Those configurations have the same scope as the respective <bpt i="2" x="2">&lt;c2&gt;</bpt>compile<ept i="2">&lt;/c2&gt;</ept> and <bpt i="3" x="3">&lt;c3&gt;</bpt>runtime<ept i="3">&lt;/c3&gt;</ept> configurations, except that they are not added to the WAR archive.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T091028Z" creationid="msdx" creationdate="20150503T091028Z">
        <seg>虽然它们有各自的<bpt i="2" x="2">&lt;c2&gt;</bpt>compile<ept i="2">&lt;/c2&gt;</ept>和<bpt i="3" x="3">&lt;c3&gt;</bpt>runtime<ept i="3">&lt;/c3&gt;</ept>配置，但这些配置有相同的作用域，只是它们不会添加到 WAR 文件中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Those directories need to exist as siblings of the root project directory.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T063759Z" creationid="haohang" creationdate="20160519T042127Z">
        <seg>这些目录必须存在，并且与根项目目录同级。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Those elements also provide build-by-convention support for Java, Groovy, OSGi, Web and Scala projects.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141101T035228Z" creationid="msdx" creationdate="20141101T035228Z">
        <seg>这些元素同样也为 Java, Groovy, OSGi, Web 和 Scala 项目提供了基于约定的构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Those levels are <bpt i="1" x="1">&lt;s1&gt;</bpt><bpt i="2" x="2">&lt;e2&gt;</bpt>QUIET<ept i="2">&lt;/e2&gt;</ept><ept i="1">&lt;/s1&gt;</ept> and <bpt i="3" x="3">&lt;s3&gt;</bpt><bpt i="4" x="4">&lt;e4&gt;</bpt>LIFECYCLE<ept i="4">&lt;/e4&gt;</ept><ept i="3">&lt;/s3&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T070607Z" creationid="msdx" creationdate="20141116T070607Z">
        <seg>这两个级别分别是 <bpt i="1" x="1">&lt;s1&gt;</bpt><bpt i="2" x="2">&lt;e2&gt;</bpt>QUIET<ept i="2">&lt;/e2&gt;</ept><ept i="1">&lt;/s1&gt;</ept> 和 <bpt i="3" x="3">&lt;s3&gt;</bpt><bpt i="4" x="4">&lt;e4&gt;</bpt>LIFECYCLE<ept i="4">&lt;/e4&gt;</ept><ept i="3">&lt;/s3&gt;</ept>.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Those tasks assemble and upload the artifacts belonging to the specified configuration.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T070734Z" creationid="Administrator" creationdate="20150425T070734Z">
        <seg>这些任务组装并上传属于指定的配置的构件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Those tasks assemble the artifacts belonging to the specified configuration.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T041506Z" creationid="Administrator" creationdate="20150425T041506Z">
        <seg>这些任务组装成属于指定配置的构件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Those tasks form a <bpt i="0" x="0">&lt;a0&gt;</bpt>Directed Acyclic Graph<ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160518T032016Z" creationid="haohang" creationdate="20160518T032016Z">
        <seg>这些任务形成一个<bpt i="0" x="0">&lt;a0&gt;</bpt>有向无环图<ept i="0">&lt;/a0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Those tasks generate exactly the same content as the command line reports triggered by <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle tasks<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>, <bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>gradle dependencies<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/s2&gt;</ept> and <bpt i="4" x="4">&lt;s4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>gradle properties<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/s4&gt;</ept> (see <bpt i="6" x="6">&lt;a6&gt;</bpt>Section 11.6, “Obtaining information about your build”<ept i="6">&lt;/a6&gt;</ept>).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150626T095654Z" creationid="haohang" creationdate="20150626T095654Z">
        <seg>这些任务生成内容，与由<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle tasks<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>， <bpt i="2" x="2">&lt;s2&gt;</bpt> <bpt i="3" x="3">&lt;c3&gt;</bpt>gradle dependencies<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/s2&gt;</ept>和<bpt i="4" x="4">&lt;s4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>gradle properties<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/s4&gt;</ept>触发的命令行报告的内容完全相同（见<bpt i="6" x="6">&lt;a6&gt;</bpt>第 11.6 节，“获取有关您的构建的信息”<ept i="6">&lt;/a6&gt;</ept>）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Thus providing concise, maintainable and comprehensible builds.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141101T035508Z" creationid="msdx" creationdate="20141101T035508Z">
        <seg>因此，它提供了简明、可维护和易理解的构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To access a Maven repository which uses basic authentication, you specify the username and password to use when you define the repository:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150909T053415Z" creationid="haohang" creationdate="20150909T053415Z">
        <seg>要访问一个使用基本的身份验证的 Maven 仓库，当你在定义该仓库时要指定使用的用户名和密码：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To access a configuration:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T075846Z" creationid="haohang" creationdate="20150722T075846Z">
        <seg>如果要访问配置：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To access a descriptor you can do:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T070340Z" creationid="haohang" creationdate="20160519T070340Z">
        <seg>你可以这样访问一个描述符：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To access a repository:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T133403Z" creationid="95" creationdate="20151006T133403Z">
        <seg>若要访问一个仓库：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To access an Ivy repository which uses basic authentication, you specify the username and password to use when you define the repository:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T133223Z" creationid="95" creationdate="20151006T133223Z">
        <seg>要访问一个使用基本的身份验证的 Ivy 仓库，当你在定义该仓库时要指定使用的用户名和密码：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To access the mapping configuration you can say:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T145314Z" creationid="95" creationdate="20160106T145314Z">
        <seg>要访问映射配置，你可以：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To accommodate that place the <bpt i="2" x="2">&lt;c2&gt;</bpt>META-INF/application.xml<ept i="2">&lt;/c2&gt;</ept> in the right place inside your source folders (see the <bpt i="3" x="3">&lt;c3&gt;</bpt>appDirName<ept i="3">&lt;/c3&gt;</ept> property).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T143748Z" creationid="msdx" creationdate="20150504T143748Z">
        <seg>去把 <bpt i="2" x="2">&lt;c2&gt;</bpt>META-INF/application.xml<ept i="2">&lt;/c2&gt;</ept> 放在你的源文件夹里的正确的位置（请查看 <bpt i="3" x="3">&lt;c3&gt;</bpt>appDirName<ept i="3">&lt;/c3&gt;</ept> 属性）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To achieve this, you can specify that signing is only required under certain conditions.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160126T141354Z" creationid="95" creationdate="20160126T141354Z">
        <seg>要做到这一点，你可以指定只在一定条件下才要求签名。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To add additional content to the POM, the <bpt i="0" x="0">&lt;c0&gt;</bpt>pom.project<ept i="0">&lt;/c0&gt;</ept> builder can be used.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T142813Z" creationid="95" creationdate="20160106T142739Z">
        <seg>如果要向 POM 添加其他的内容，可以使用<bpt i="0" x="0">&lt;c0&gt;</bpt>pom.project<ept i="0">&lt;/c0&gt;</ept> 生成器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To add another bean elements to its parent, you use a closure.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T135220Z" creationid="95" creationdate="20160105T135220Z">
        <seg>如果要添加另一个bean元素到它的parent，你可以使用一个闭包。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To add any kind of repository (you can pretty easy write your own ones) you can do:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T134702Z" creationid="95" creationdate="20151006T134702Z">
        <seg>要添加任何一种仓库 (你可以很简单地编写你自己的) ，你可以：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To add some files as a dependency for a configuration, you simply pass a <bpt i="0" x="0">&lt;a0&gt;</bpt>file collection<ept i="0">&lt;/a0&gt;</ept> as a dependency:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T094136Z" creationid="haohang" creationdate="20150801T094136Z">
        <seg>如果想添加一些文件作为配置的依赖，你只需要传一个<bpt i="0" x="0">&lt;a0&gt;</bpt>文件集合<ept i="0">&lt;/a0&gt;</ept>作为依赖：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To add the JCenter Maven repository (<bpt i="0" x="0">&lt;a0&gt;</bpt>http://jcenter.bintray.com<ept i="0">&lt;/a0&gt;</ept>) simply add this to your build script:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T100514Z" creationid="haohang" creationdate="20150807T100514Z">
        <seg>若要添加 JCenter Maven 仓库（<bpt i="0" x="0">&lt;a0&gt;</bpt>http://jcenter.bintray.com<ept i="0">&lt;/a0&gt;</ept>），只需添加下面的内容到你的构建脚本中：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To add the central Maven 2 repository (<bpt i="0" x="0">&lt;a0&gt;</bpt>http://repo1.maven.org/maven2<ept i="0">&lt;/a0&gt;</ept>) simply add this to your build script:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T095842Z" creationid="haohang" creationdate="20150807T095842Z">
        <seg>若要添加中央 Maven 2 仓库（<bpt i="0" x="0">&lt;a0&gt;</bpt>http://repo1.maven.org/maven2<ept i="0">&lt;/a0&gt;</ept>），只需添加下面的代码到你的构建脚本中：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To adjust memory settings, configure <bpt i="0" x="0">&lt;c0&gt;</bpt>scalaCompileOptions.forkOptions<ept i="0">&lt;/c0&gt;</ept> as needed:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150430T160040Z" creationid="msdx" creationdate="20150430T160040Z">
        <seg>如果要调整内存设置，请根据需要配置<bpt i="0" x="0">&lt;c0&gt;</bpt>scalaCompileOptions.forkOptions<ept i="0">&lt;/c0&gt;</ept> ：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To analyze a project hierarchy, apply the Sonar Runner plugin to the root project of the hierarchy.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150514T152324Z" creationid="msdx" creationdate="20150514T152324Z">
        <seg>要分析一个项目的层次结构， 需要把 Sonar Runner 插件应用于层次结构的最顶层项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To analyze a project hierarchy, the Sonar plugin needs to be applied to the top-most project of the hierarchy.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T085348Z" creationid="msdx" creationdate="20150512T085348Z">
        <seg>要分析项目的层次结构， 需要把 Sonar 插件应用于层次结构的最顶层项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To analyze code written in a language other than Java, install the corresponding <bpt i="0" x="0">&lt;a0&gt;</bpt>Sonar plugin<ept i="0">&lt;/a0&gt;</ept>, and set <bpt i="1" x="1">&lt;c1&gt;</bpt>sonar.project.language<ept i="1">&lt;/c1&gt;</ept> accordingly:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T092626Z" creationid="msdx" creationdate="20150512T092549Z">
        <seg>要分析非 Java 语言编写的代码，请安装相应的<bpt i="0" x="0">&lt;a0&gt;</bpt>Sonar 插件<ept i="0">&lt;/a0&gt;</ept>，并相应地设置<bpt i="1" x="1">&lt;c1&gt;</bpt>sonar.project.language<ept i="1">&lt;/c1&gt;</ept> ：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To build a Groovy project, you use the <bpt i="0" x="0">&lt;e0&gt;</bpt>Groovy plugin<ept i="0">&lt;/e0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T041058Z" creationid="msdx" creationdate="20141030T040256Z">
        <seg>要构建一个Groovy项目，你需要使用<bpt i="0" x="0">&lt;e0&gt;</bpt>Groovy插件<ept i="0">&lt;/e0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To build a WAR file, you apply the War plugin to your project:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T085435Z" creationid="msdx" creationdate="20141030T085047Z">
        <seg>要构建一个WAR文件，你需要在你的项目当中应用War插件：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To build an executable binary, an <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Executable<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> component is added to the <bpt i="2" x="2">&lt;c2&gt;</bpt>executables<ept i="2">&lt;/c2&gt;</ept> container and associated with a set of sources.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160219T065417Z" creationid="haohang" creationdate="20160219T065417Z">
        <seg>为构建一个可执行的二进制，<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Executable<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>组件添加到<bpt i="2" x="2">&lt;c2&gt;</bpt>executables<ept i="2">&lt;/c2&gt;</ept>容器中，并与源码集相关联。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To build either a static or shared native library binary, a <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Library<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> component is added to the <bpt i="2" x="2">&lt;c2&gt;</bpt>libraries<ept i="2">&lt;/c2&gt;</ept> container.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160219T065251Z" creationid="haohang" creationdate="20160219T065251Z">
        <seg>为构建一个静态或共享的原生库二进制文件，一个<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Library<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>组件将添加到<bpt i="2" x="2">&lt;c2&gt;</bpt>libraries<ept i="2">&lt;/c2&gt;</ept>容器中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To capture input, simply add a Java Bean compliant class into the extension container's list of extensions.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T124443Z" creationid="95" creationdate="20160820T124443Z">
        <seg>要获取输入，只需将一个Java Bean兼容类添加到扩展容器的扩展列表中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To change how long Gradle will cache the meta-data and artifacts for a changing module, use:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151130T032414Z" creationid="haohang" creationdate="20151130T032414Z">
        <seg>要修改 Gradle 对变化模块的元数据和构件的缓存时间，请使用：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To change how long Gradle will cache the resolved version for a dynamic version, use:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T154947Z" creationid="95" creationdate="20151129T154947Z">
        <seg>如果要改变Gradle对解析一个动态版本的缓存时间，可以使用：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To change the log level for standard out or error during task execution, tasks also provide a <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>LoggingManager<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T150915Z" creationid="msdx" creationdate="20141116T150915Z">
        <seg>为能在任务执行过程中更改标准输出或错误的日志级别，task也提供了一个 <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>LoggingManager<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To change the the default configuration order to be bottom up, That means that a project configuration depends on the configuration of its child projects, the <bpt i="0" x="0">&lt;c0&gt;</bpt>evaluationDependsOnChildren()<ept i="0">&lt;/c0&gt;</ept> method can be used.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T090405Z" creationid="haohang" creationdate="20160718T090405Z">
        <seg>如果要把默认配置的顺序改为从下到上，这意味着项目配置将会依赖于它的子项目的配置，可以使用<bpt i="0" x="0">&lt;c0&gt;</bpt>evaluationDependsOnChildren()<ept i="0">&lt;/c0&gt;</ept>方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To completely overwrite existing Eclipse files, execute a clean task together with its corresponding generation task, for example <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle cleanEclipse eclipse<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> (in that order).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T103257Z" creationid="haohang" creationdate="20150624T103257Z">
        <seg>若要完全覆盖现有 Eclipse 文件，请执行clean任务和其相应的生成任务，例如<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle cleanEclipse eclipse<ept i="1">&lt;/c1&gt;</ept> <ept i="0">&lt;/s0&gt;</ept> (按此顺序)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To completely overwrite existing IDEA files, execute a clean task together with its corresponding generation task, for example <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle cleanIdea idea<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> (in that order).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T073432Z" creationid="haohang" creationdate="20150625T073432Z">
        <seg>若要完整覆盖现有 IDEA 文件，请执行clean任务和其相应的生成任务，例如<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle cleanIdea idea<ept i="1">&lt;/c1&gt;</ept> <ept i="0">&lt;/s0&gt;</ept> (按此顺序)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To configure a configuration:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T075920Z" creationid="haohang" creationdate="20150722T075920Z">
        <seg>配置一个配置：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To configure a repository:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T133431Z" creationid="95" creationdate="20151006T133431Z">
        <seg>要配置一个仓库：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To configure an existing source set, you simply use one of the above access methods to set the properties of the source set.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T050845Z" creationid="Administrator" creationdate="20150427T050845Z">
        <seg>要配置一个现有的源集，你只需使用上面的其中一种访问方法来设置源集的属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To configure on demand just for given build please see <bpt i="1" x="1">&lt;a1&gt;</bpt>Appendix D, <bpt i="2" x="2">&lt;i2&gt;</bpt>Gradle Command Line<ept i="2">&lt;/i2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160522T125116Z" creationid="95" creationdate="20160522T125116Z">
        <seg>只对指定的构建按需配置，请参见<bpt i="1" x="1">&lt;a1&gt;</bpt>附录 D， <bpt i="2" x="2">&lt;i2&gt;</bpt>Gradle 命令行<ept i="2">&lt;/i2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To configure on demand with every build run see <bpt i="0" x="0">&lt;a0&gt;</bpt>Section 20.1, “Configuring the build environment via gradle.properties”<ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160522T125047Z" creationid="95" creationdate="20160522T125047Z">
        <seg>要在每次构建时都按需配置，请参阅<bpt i="0" x="0">&lt;a0&gt;</bpt>第 20.1 节，“通过 gradle.properties配置构建环境”<ept i="0">&lt;/a0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To configure the simple attributes you pass a map to the bean elements.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T135150Z" creationid="95" creationdate="20160105T135150Z">
        <seg>你可以传一个map到bean元素中，来配置简单的属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To create a <bpt i="1" x="1">&lt;c1&gt;</bpt>Copy<ept i="1">&lt;/c1&gt;</ept> task for your build, you can declare in your build script:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T090208Z" creationid="msdx" creationdate="20141110T090208Z">
        <seg>若要创建<bpt i="1" x="1">&lt;c1&gt;</bpt>Copy<ept i="1">&lt;/c1&gt;</ept>任务，您可以在构建脚本中声明：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To create a custom plugin, you need to write an implementation of <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Plugin<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160818T151718Z" creationid="95" creationdate="20160818T151718Z">
        <seg>想创建一个自定义插件，你需要写一个类实现 <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Plugin<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To customize the settings for the Maven installer (see<bpt i="0" x="0">&lt;a0&gt;</bpt>Section 52.6.3, “Installing to the local repository”<ept i="0">&lt;/a0&gt;</ept>), you can do:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T143436Z" creationid="95" creationdate="20160106T143436Z">
        <seg>要为 Maven installer（见<bpt i="0" x="0">&lt;a0&gt;</bpt>第 52.6.3 条，“安装到本地资源库”<ept i="0">&lt;/a0&gt;</ept>) 自定义设置，你可以：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To customize these you can do:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T142702Z" creationid="95" creationdate="20160106T142702Z">
        <seg>如果要自定义这些你可以这样做：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To deal with problems due to version conflicts, reports with dependency graphs are also very helpful.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150721T092224Z" creationid="haohang" creationdate="20150721T092224Z">
        <seg>为了解决版本冲突问题，报告依赖关系图也是很有帮助的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To define a configuration:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T075852Z" creationid="haohang" creationdate="20150722T075808Z">
        <seg>如果要定义配置：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To define a new source set, you simply reference it in the <bpt i="0" x="0">&lt;c0&gt;</bpt>sourceSets { }<ept i="0">&lt;/c0&gt;</ept> block.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T053322Z" creationid="Administrator" creationdate="20150427T053322Z">
        <seg>要定义一个新的源集，你只需在<bpt i="0" x="0">&lt;c0&gt;</bpt>sourceSets {}<ept i="0">&lt;/c0&gt;</ept>块中引用它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To define an Ivy repository which fetches Ivy files and artifacts from different locations, you can use the pattern layout with separate patterns to use to locate the Ivy files and artifacts:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T111329Z" creationid="95" creationdate="20151006T111329Z">
        <seg>若要定义一个从不同的位置获取 Ivy 文件和 artifacts 的 Ivy 仓库，您可以使用模式布局，每个单独的模式用于定位到 Ivy 文件和 artifacts：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To define an Ivy repository with a non-standard layout, you can define a pattern layout for the repository:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T110614Z" creationid="95" creationdate="20151006T110614Z">
        <seg>若要定义非标准布局的 Ivy 仓库，你可以定义一个仓库模式布局：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To define such a repository, you can do:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150909T053043Z" creationid="haohang" creationdate="20150909T053043Z">
        <seg>要定义一个这样的仓库，你可以这样：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To define the main-class for the application you have to set the <bpt i="0" x="0">&lt;c0&gt;</bpt>mainClassName<ept i="0">&lt;/c0&gt;</ept> property as shown below</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150702T103922Z" creationid="haohang" creationdate="20150702T103922Z">
        <seg>若要为应用程序定义 main-class，你必须如下所示设置<bpt i="0" x="0">&lt;c0&gt;</bpt>mainClassName<ept i="0">&lt;/c0&gt;</ept>属性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To define the name for the distribution you have to set the <bpt i="0" x="0">&lt;c0&gt;</bpt>baseName<ept i="0">&lt;/c0&gt;</ept> property as shown below:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T065936Z" creationid="haohang" creationdate="20150705T084552Z">
        <seg>若要定义 distribution 的名称，必须如下所示设置<bpt i="0" x="0">&lt;c0&gt;</bpt>baseName<ept i="0">&lt;/c0&gt;</ept>属性：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To disable the build of the depended on projects you can run Gradle with the <bpt i="0" x="0">&lt;c0&gt;</bpt>-a<ept i="0">&lt;/c0&gt;</ept> option.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T085414Z" creationid="haohang" creationdate="20160726T085414Z">
        <seg>如果要禁止依赖项目的构建，你可以使用<bpt i="0" x="0">&lt;c0&gt;</bpt>-a<ept i="0">&lt;/c0&gt;</ept> 选项运行 Gradle。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To do so, we add a method to the task and mark it with the <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>TaskAction<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> annotation.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T145536Z" creationid="95" creationdate="20160814T145536Z">
        <seg>要添加一些行为，我们需要添加一个方法到这个任务中，并且使用 <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>TaskAction<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> 注解来标记它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To do the same for project dependencies you need to declare:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T032744Z" creationid="haohang" creationdate="20150807T032744Z">
        <seg>同样的项目依赖，你需要声明：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To do this, you can leverage the <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Project.file()<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> method to resolve values to files as late as possible.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T132232Z" creationid="95" creationdate="20160820T132232Z">
        <seg>为此，你可以利用 <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Project.file()<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> 方法来尽可能晚地把值解析到文件中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To do this, you need to define a custom configuration for the classpath, then add some dependencies to the configuration.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T060440Z" creationid="msdx" creationdate="20141116T060440Z">
        <seg>要做到这一点，你需要定义一个自定义配置的类路径中，然后将一些依赖项添加到配置中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To do this, you use a <bpt i="0" x="0">&lt;c0&gt;</bpt>buildscript { }<ept i="0">&lt;/c0&gt;</ept> block, as described in <bpt i="1" x="1">&lt;a1&gt;</bpt>Section 59.5, “External dependencies for the build script”<ept i="1">&lt;/a1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160815T145548Z" creationid="95" creationdate="20160815T145548Z">
        <seg>要做到这一点，你要使用在<bpt i="1" x="1">&lt;a1&gt;</bpt>第 59.5 节，“构建脚本的外部依赖”<ept i="1">&lt;/a1&gt;</ept>中描述的 <bpt i="0" x="0">&lt;c0&gt;</bpt>buildscript { }<ept i="0">&lt;/c0&gt;</ept> 块。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To enable dynamic resolve mode, you need to set the appropriate option on the repository definition.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T091326Z" creationid="95" creationdate="20151115T091326Z">
        <seg>若要启用动态解析模式，你需要在仓库定义进行合适的设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To enable historical builds, you need to keep all the past libraries and you need a backup.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151201T060721Z" creationid="haohang" creationdate="20151201T060721Z">
        <seg>要启用历史版本，你需要保留所有过去的库，并且需要备份。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To facilitate their manipulation, values still have their "idiomatic" type (<bpt i="1" x="1">&lt;c1&gt;</bpt>File<ept i="1">&lt;/c1&gt;</ept>, <bpt i="2" x="2">&lt;c2&gt;</bpt>List<ept i="2">&lt;/c2&gt;</ept>, etc.).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150525T232935Z" creationid="haohang" creationdate="20150525T232935Z">
        <seg>为了方便它们的操作，这些值值仍然使用它们惯用的类型 （<bpt i="1" x="1">&lt;c1&gt;</bpt>File<ept i="1">&lt;/c1&gt;</ept>，<bpt i="2" x="2">&lt;c2&gt;</bpt>List<ept i="2">&lt;/c2&gt;</ept>等）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To generate the build dashboard, simply include the <bpt i="1" x="1">&lt;c1&gt;</bpt>buildDashboard<ept i="1">&lt;/c1&gt;</ept> task in the list of tasks to execute.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150713T100107Z" creationid="haohang" creationdate="20150713T100107Z">
        <seg>如果要生成 build dashboard，只需在要执行的任务列表中包含 <bpt i="1" x="1">&lt;c1&gt;</bpt>buildDashboard<ept i="1">&lt;/c1&gt;</ept> 任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To get started, apply the JaCoCo plugin to the project you want to calculate code coverage for.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T130208Z" creationid="msdx" creationdate="20150506T130208Z">
        <seg>要想开始，请将 JaCoCo 插件应用于你想要计算代码覆盖率的项目中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To get started, apply the Sonar Runner plugin to the project to be analyzed.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T060730Z" creationid="msdx" creationdate="20150513T060730Z">
        <seg>若要开始，请对要分析的项目配置使用 Sonar Runner 插件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To get the library files of the configuration dependencies you can do:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T034557Z" creationid="haohang" creationdate="20150807T034557Z">
        <seg>要获得配置依赖的library文件，你可以这样：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To have access to the complete API, either with the map or with the string notation, you can assign a single dependency to a configuration together with a closure.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150724T035107Z" creationid="haohang" creationdate="20150724T035107Z">
        <seg>要访问完整的 API，使用 map 或 string 标记法，你可以把单个的依赖与一个闭包一起指定给一个配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To implement a custom task class, you extend <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>DefaultTask<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T145346Z" creationid="95" creationdate="20160814T145346Z">
        <seg>要实现一个自定义任务类，你需要继承<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>DefaultTask<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To improve responsiveness Gradle caches all compiled scripts by default.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T153142Z" creationid="msdx" creationdate="20141109T153142Z">
        <seg>为了提高响应速度，默认情况下 Gradle 会缓存所有已编译的脚本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To include any static files in the distribution, simply arrange them in the <bpt i="1" x="1">&lt;c1&gt;</bpt>src/dist<ept i="1">&lt;/c1&gt;</ept> directory, or add it to the content of the distribution.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T070442Z" creationid="haohang" creationdate="20150707T070442Z">
        <seg>如果要在 distribution 中包括任何的静态文件，只需要把它们放在 <bpt i="1" x="1">&lt;c1&gt;</bpt>src/dist<ept i="1">&lt;/c1&gt;</ept> 目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To include any static files in the distribution, simply arrange them in the <bpt i="8" x="8">&lt;c8&gt;</bpt>src/dist<ept i="8">&lt;/c8&gt;</ept> directory.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150703T100243Z" creationid="haohang" creationdate="20150703T100243Z">
        <seg>如果要在 distribution 中包括任何的静态文件，只需要把它们放在<bpt i="8" x="8">&lt;c8&gt;</bpt>src/dist<ept i="8">&lt;/c8&gt;</ept>目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To learn more about executing external processes with Groovy have a look in 'Groovy in Action' 9.3.2 or at the Groovy wiki</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150330T155827Z" creationid="msdx" creationdate="20141116T063206Z">
        <seg>要了解更多关于使用 Groovy 执行外部进程的内容，可以看一下《Groovy in Action》的9.3.2章节，或者是 Groovy wiki</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To learn more about generic manifest handling, see <bpt i="5" x="5">&lt;a5&gt;</bpt>Section 23.13.1, “Manifest”<ept i="5">&lt;/a5&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150526T004033Z" creationid="haohang" creationdate="20150526T004033Z">
        <seg>要了解常见的清单处理的更多信息，请参阅<bpt i="5" x="5">&lt;a5&gt;</bpt>第 23.13.1节，“Manifest”<ept i="5">&lt;/a5&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To learn more about installing to the local repository, see: <bpt i="1" x="1">&lt;a1&gt;</bpt>Section 52.6.3, “Installing to the local repository”<ept i="1">&lt;/a1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151228T152427Z" creationid="95" creationdate="20151228T152427Z">
        <seg>要了解更多关于安装到本地资源库的内容，请参阅：<bpt i="1" x="1">&lt;a1&gt;</bpt>第 52.6.3 节，“安装到本地仓库”<ept i="1">&lt;/a1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To learn more about the API of the configuration class see the API documentation: <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Configuration<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T091327Z" creationid="haohang" creationdate="20150807T091327Z">
        <seg>想了解更多关于这个配置类的API，可以参阅它的 API 文档：<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Configuration<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To learn more about the Gradle Maven POM object, see <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>MavenPom<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160104T153112Z" creationid="95" creationdate="20160104T153112Z">
        <seg>如果要了解关于 Gradle Maven POM 对象的更多信息，请参阅<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>MavenPom<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To learn more about the available instructions have a look at the <bpt i="1" x="1">&lt;a1&gt;</bpt>BND tool<ept i="1">&lt;/a1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150526T064756Z" creationid="haohang" creationdate="20150526T064756Z">
        <seg>要了解更多关于 instructions 的信息，可以看看<bpt i="1" x="1">&lt;a1&gt;</bpt>BND tool<ept i="1">&lt;/a1&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To learn more about this API have a look at <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>ConfigurationContainer<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T075753Z" creationid="haohang" creationdate="20150722T075753Z">
        <seg>要了解更多关于此 API 的内容，可以看看<bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>ConfigurationContainer<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To learn more about this have a look at <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>PomFilterContainer<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> and its associated classes.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T144459Z" creationid="95" creationdate="20160106T144459Z">
        <seg>要了解更多关于它的信息，你可以看一下<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>PomFilterContainer<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>和其关联的类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To make custom tasks available in your build, you can use the <bpt i="0" x="0">&lt;c0&gt;</bpt>taskdef<ept i="0">&lt;/c0&gt;</ept> (usually easier) or <bpt i="1" x="1">&lt;c1&gt;</bpt>typedef<ept i="1">&lt;/c1&gt;</ept> Ant task, just as you would in a <bpt i="2" x="2">&lt;c2&gt;</bpt>build.xml<ept i="2">&lt;/c2&gt;</ept> file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T011850Z" creationid="msdx" creationdate="20141116T011850Z">
        <seg>要使自定义任务在您的构建中可用，你可以使用Ant 任务 <bpt i="0" x="0">&lt;c0&gt;</bpt>taskdef<ept i="0">&lt;/c0&gt;</ept>（通常更容易） 或<bpt i="1" x="1">&lt;c1&gt;</bpt>typedef<ept i="1">&lt;/c1&gt;</ept>，就像在<bpt i="2" x="2">&lt;c2&gt;</bpt>build.xml<ept i="2">&lt;/c2&gt;</ept>文件中一样。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To meet these needs, the plugins adds a task dependency from <bpt i="1" x="1">&lt;c1&gt;</bpt>sonarRunner<ept i="1">&lt;/c1&gt;</ept> on <bpt i="2" x="2">&lt;c2&gt;</bpt>test<ept i="2">&lt;/c2&gt;</ept> if the <bpt i="3" x="3">&lt;c3&gt;</bpt>java<ept i="3">&lt;/c3&gt;</ept> plugin is applied.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T062335Z" creationid="msdx" creationdate="20150513T061933Z">
        <seg>为了满足这些需要，如果应用了<bpt i="3" x="3">&lt;c3&gt;</bpt>java<ept i="3">&lt;/c3&gt;</ept>插件，Sonar Runner 插件将从<bpt i="1" x="1">&lt;c1&gt;</bpt>sonarRunner<ept i="1">&lt;/c1&gt;</ept>添加一个对 <bpt i="2" x="2">&lt;c2&gt;</bpt>test<ept i="2">&lt;/c2&gt;</ept> 的任务依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To override the Zinc version that Gradle uses by default, add an explicit Zinc dependency (for example <bpt i="1" x="1">&lt;c1&gt;</bpt>zinc "com.typesafe.zinc:zinc:0.1.4"<ept i="1">&lt;/c1&gt;</ept>).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T154842Z" creationid="msdx" creationdate="20150501T154842Z">
        <seg>如果要重写 Gradle 默认情况下使用的 Zinc 版本，请添加一个显式的 Zinc 依赖项 （例如<bpt i="1" x="1">&lt;c1&gt;</bpt>zinc "com.typesafe.zinc:zinc:0.1.4"<ept i="1">&lt;/c1&gt;</ept>）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To refer to a task in another project, you prefix the name of the task with the path of the project it belongs to.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T122022Z" creationid="msdx" creationdate="20141110T121925Z">
        <seg>要引用另一个项目中的任务，你需要把它所属的项目的路径作为前缀加到它的名字中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To refresh all dependencies in the dependency cache, use the <bpt i="0" x="0">&lt;c0&gt;</bpt>--refresh-dependencies<ept i="0">&lt;/c0&gt;</ept> option on the command line.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T154010Z" creationid="95" creationdate="20151129T154010Z">
        <seg>要刷新依赖缓存中的所有依赖项，请使用<bpt i="0" x="0">&lt;c0&gt;</bpt>--refresh-dependencies<ept i="0">&lt;/c0&gt;</ept>命令行选项。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To retrieve classified dependencies from a Maven repository you can write:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150731T100841Z" creationid="haohang" creationdate="20150731T100841Z">
        <seg>如果你想从一个 Maven 仓库中获取 classified 依赖项，你可以这样写：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To run your web application, you apply the Jetty plugin to your project:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T091050Z" creationid="msdx" creationdate="20141030T091050Z">
        <seg>若要运行您的 web 应用程序，您要将 Jetty 插件应用于您的项目：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To show more of the power of configuration injection, let's add another project called <bpt i="0" x="0">&lt;c0&gt;</bpt>tropicalFish<ept i="0">&lt;/c0&gt;</ept> and add more behavior to the build via the build script of the <bpt i="1" x="1">&lt;c1&gt;</bpt>water<ept i="1">&lt;/c1&gt;</ept> project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160527T163741Z" creationid="95" creationdate="20160527T163416Z">
        <seg>若要体现配置注入的更强大之处，让我们添加另一个项目<bpt i="0" x="0">&lt;c0&gt;</bpt>tropicalFish<ept i="0">&lt;/c0&gt;</ept>，并通过<bpt i="1" x="1">&lt;c1&gt;</bpt>water<ept i="1">&lt;/c1&gt;</ept>项目的构建脚本向这个构建添加更多的行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To specify a "must run after" or "should run after" ordering between 2 tasks, you use the <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Task.mustRunAfter()<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> and <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>Task.shouldRunAfter()<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept> methods.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T013709Z" creationid="msdx" creationdate="20141111T013709Z">
        <seg>如果想指定两个任务之间的“必须在之后运行”和“应该在之后运行”排序，可以使用<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Task.mustRunAfter()<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>和<bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>Task.shouldRunAfter()<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To specify a finalizer task you use the <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Task.finalizedBy()<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> method.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T123112Z" creationid="msdx" creationdate="20141111T123040Z">
        <seg>你可以使用<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Task.finalizedBy()<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>方法指定一个析构器任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To specify the destination directory, use the <bpt i="7" x="7">&lt;a7&gt;</bpt><bpt i="8" x="8">&lt;c8&gt;</bpt>CopySpec.into()<ept i="8">&lt;/c8&gt;</ept><ept i="7">&lt;/a7&gt;</ept> method.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T124338Z" creationid="msdx" creationdate="20141113T124338Z">
        <seg>使用<bpt i="7" x="7">&lt;a7&gt;</bpt><bpt i="8" x="8">&lt;c8&gt;</bpt>CopySpec.into()<ept i="8">&lt;/c8&gt;</ept><ept i="7">&lt;/a7&gt;</ept>方法使用目标目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To switch the <bpt i="2" x="2">&lt;c2&gt;</bpt>ScalaCompile<ept i="2">&lt;/c2&gt;</ept> task from the default Ant based compiler to the new Zinc based compiler, set <bpt i="3" x="3">&lt;c3&gt;</bpt>scalaCompileOptions.useAnt<ept i="3">&lt;/c3&gt;</ept> to <bpt i="4" x="4">&lt;c4&gt;</bpt>false<ept i="4">&lt;/c4&gt;</ept>:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T154253Z" creationid="msdx" creationdate="20150501T154253Z">
        <seg>若要把<bpt i="2" x="2">&lt;c2&gt;</bpt>ScalaCompile<ept i="2">&lt;/c2&gt;</ept>任务从默认的基于 Ant 的编译器切换为新的基于 Zinc 的编译器，需要将 <bpt i="3" x="3">&lt;c3&gt;</bpt>scalaCompileOptions.useAnt<ept i="3">&lt;/c3&gt;</ept>设置为<bpt i="4" x="4">&lt;c4&gt;</bpt>false<ept i="4">&lt;/c4&gt;</ept>：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To this end, the core 'native-binary' plugins will attempt to locate and make available supported tool chains.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T085322Z" creationid="haohang" creationdate="20160408T085322Z">
        <seg>为此，核心的“native-binary”将尝试查找并使支持的工具链可用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To try your current build with a different Gradle version, simply add the following to the <bpt i="0" x="0">&lt;c0&gt;</bpt>build.gradle<ept i="0">&lt;/c0&gt;</ept> of the <bpt i="1" x="1">&lt;e1&gt;</bpt>root project<ept i="1">&lt;/e1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170109T125529Z" creationid="95" creationdate="20170109T125356Z">
        <seg>想尝试对你当前的构建使用一个不同的Gradle版本，只需要对 <bpt i="1" x="1">&lt;e1&gt;</bpt>根项目<ept i="1">&lt;/e1&gt;</ept>年的 <bpt i="0" x="0">&lt;c0&gt;</bpt>build.gradle<ept i="0">&lt;/c0&gt;</ept> 添加以下的配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To use Gradle's up-to-date checking, you need to declare the inputs and outputs of the task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T061102Z" creationid="msdx" creationdate="20141111T060919Z">
        <seg>若要使用 Gradle 的最新状态（up-to-date）检查，您需要声明这个任务的输入和输出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To use a plugin in a build script, you need to add the plugin classes to the build script's classpath.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T013605Z" creationid="95" creationdate="20161211T013605Z">
        <seg>要在一个构建脚本中使用一个插件，你需要先将这个插件的类添加到构建脚本的classpath中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To use a task class in a build script, you need to add the class to the build script's classpath.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160815T145445Z" creationid="95" creationdate="20160815T145445Z">
        <seg>想在一个构建脚本中使用一个任务类，你需要把这个类添加到构建脚本的类路径中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To use an Ivy repository with a standard layout:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T110426Z" creationid="95" creationdate="20151006T110426Z">
        <seg>使用一个标准布局的 Ivy 存储库：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To use the <bpt i="0" x="0">&lt;c0&gt;</bpt>Copy<ept i="0">&lt;/c0&gt;</ept> task, you must provide a set of source files to copy, and a destination directory to copy the files to.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T124047Z" creationid="msdx" creationdate="20141113T124047Z">
        <seg>若要使用<bpt i="0" x="0">&lt;c0&gt;</bpt>Copy<ept i="0">&lt;/c0&gt;</ept>任务，您必须提供用于复制的源文件和目标目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To use the ANTLR plugin, include in your build script:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T094856Z" creationid="haohang" creationdate="20150625T094856Z">
        <seg>要使用 ANTLR 插件，请在构建脚本中包含以下语句：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To use the Build Dashboard plugin, include the following in your build script:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150713T095157Z" creationid="haohang" creationdate="20150713T095157Z">
        <seg>要使用 Build Dashboard 插件，请在生成脚本中包括:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To use the Checkstyle plugin, include in your build script:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T151742Z" creationid="msdx" creationdate="20150504T151742Z">
        <seg>要使用 Checkstyle 插件，请在构建脚本中包含以下语句：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To use the CodeNarc plugin, include in your build script:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T133049Z" creationid="msdx" creationdate="20150505T133049Z">
        <seg>要使用 CodeNarc 插件，请在构建脚本中包含以下语句：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To use the Ear plugin, include in your build script:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T094435Z" creationid="msdx" creationdate="20150503T094435Z">
        <seg>要使用 Ear 的插件，请在构建脚本中包含以下语句：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To use the Eclipse plugin, include this in your build script:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T004122Z" creationid="haohang" creationdate="20150603T004122Z">
        <seg>要使用 Eclipse 插件，请在构建脚本中包含以下语句：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To use the FindBugs plugin, include in your build script:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T133613Z" creationid="msdx" creationdate="20150505T133613Z">
        <seg>要使用 FindBugs 插件，请在构建脚本中包含以下语句：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To use the Groovy library that ships with Gradle, declare a <bpt i="0" x="0">&lt;c0&gt;</bpt>localGroovy()<ept i="0">&lt;/c0&gt;</ept> dependency.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T080108Z" creationid="msdx" creationdate="20150429T080108Z">
        <seg>如果要使用 Gradle 所带的 Groovy 库，请声明<bpt i="0" x="0">&lt;c0&gt;</bpt>localGroovy()<ept i="0">&lt;/c0&gt;</ept>依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To use the Groovy plugin, add the following to your build file:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T061653Z" creationid="msdx" creationdate="20141030T061640Z">
        <seg>要使用Groovy插件，你需要在构建脚本文件当中添加以下内容：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To use the Groovy plugin, include in your build script:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T071306Z" creationid="msdx" creationdate="20150429T071306Z">
        <seg>要使用 Groovy 的插件，请在构建脚本中包含以下语句：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To use the IDEA plugin, include this in your build script:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T071723Z" creationid="haohang" creationdate="20150625T071723Z">
        <seg>要使用 IDEA 插件，请在构建脚本中包含以下语句：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To use the JDepend plugin, include in your build script:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T134200Z" creationid="msdx" creationdate="20150505T134200Z">
        <seg>要使用 JDepend 插件，请在构建脚本中包含以下语句：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To use the Java library distribution plugin, include in your build script:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150705T084524Z" creationid="haohang" creationdate="20150705T084524Z">
        <seg>要使用 Java 分发插件，请在构建脚本中加入：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To use the Java plugin, include in your build script:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T073622Z" creationid="Administrator" creationdate="20150425T073622Z">
        <seg>要使用 Java 插件，请在构建脚本中加入：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To use the Jetty plugin, include in your build script:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T150134Z" creationid="msdx" creationdate="20150504T150134Z">
        <seg>要使用 Jetty 的插件，请在构建脚本中包含以下语句：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To use the Maven plugin, include in your build script:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151228T151856Z" creationid="95" creationdate="20151228T151856Z">
        <seg>要使用 Maven 插件，请在构建脚本中包含以下语句：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To use the OSGi plugin, include in your build script:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150526T004254Z" creationid="haohang" creationdate="20150526T004254Z">
        <seg>要使用 OSGi 插件，请在构建脚本中包含以下语句：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To use the PMD plugin, include in your build script:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T135454Z" creationid="msdx" creationdate="20150505T135454Z">
        <seg>要使用 PMD 插件，请在构建脚本中包含以下语句：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To use the Project report plugin, include in your build script:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T061100Z" creationid="haohang" creationdate="20150626T100430Z">
        <seg>要使用项目报告插件，请在构建脚本中包含以下语句：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To use the Scala plugin, include in your build script:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T145129Z" creationid="msdx" creationdate="20150429T145129Z">
        <seg>要使用 Scala 插件，请在构建脚本中包含以下语句：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To use the Signing plugin, include in your build script:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160108T151056Z" creationid="95" creationdate="20160108T151056Z">
        <seg>要使用 Signing 插件，请在构建脚本中包含以下语句：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To use the War plugin, include in your build script:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T085846Z" creationid="msdx" creationdate="20150503T085846Z">
        <seg>要使用 War 的插件，请在构建脚本中包含以下语句：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To use the announce plugin, apply it to your build script:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T063420Z" creationid="haohang" creationdate="20150628T062854Z">
        <seg>要使用 announce 插件，请在构建脚本中包含以下语句：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To use the application plugin, include in your build script:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150702T103839Z" creationid="haohang" creationdate="20150702T103839Z">
        <seg>要使用这个应用程序插件，请在构建脚本中包含以下语句：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To use the build announcements plugin, include in your build script:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T091618Z" creationid="haohang" creationdate="20150628T091618Z">
        <seg>要使用构建公告插件，请在生成脚本中包括:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To use the classpath configuration, use the <bpt i="0" x="0">&lt;c0&gt;</bpt>asPath<ept i="0">&lt;/c0&gt;</ept> property of the custom configuration.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T060557Z" creationid="msdx" creationdate="20141116T060557Z">
        <seg>若要使用类路径配置，请使用自定义配置里的<bpt i="0" x="0">&lt;c0&gt;</bpt>asPath<ept i="0">&lt;/c0&gt;</ept>属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To use the distribution plugin, include in your build script:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150701T025838Z" creationid="haohang" creationdate="20150701T025838Z">
        <seg>要使用分发插件，请在构建脚本中包含以下语句：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To use the groovy compilation tasks, you must also declare the Groovy version to use and where to find the Groovy libraries.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T064833Z" creationid="msdx" creationdate="20141030T064833Z">
        <seg>要使用groovy编译任务，还必须声明要使用的Groovy版本以及从哪里获取Groovy库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To use the local Maven cache as a repository you can do:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T100936Z" creationid="haohang" creationdate="20150807T100922Z">
        <seg>你可以这样把本地的 Maven 缓存作为仓库使用：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To use the plugin, simply execute the task named <bpt i="2" x="2">&lt;c2&gt;</bpt>init<ept i="2">&lt;/c2&gt;</ept> where you would like to create the Gradle build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T071253Z" creationid="haohang" creationdate="20150707T071240Z">
        <seg>如果要使用该插件，只需要在你想要的地方，执行名为<bpt i="2" x="2">&lt;c2&gt;</bpt>init<ept i="2">&lt;/c2&gt;</ept> 的任务，就可以创建 Gradle 构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>To use this task type, you need to define a <bpt i="3" x="3">&lt;c3&gt;</bpt>destinationDir<ept i="3">&lt;/c3&gt;</ept> and the test results to include in the report.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T142659Z" creationid="msdx" creationdate="20150428T142659Z">
        <seg>要使用这个任务类型，你需要定义一个<bpt i="3" x="3">&lt;c3&gt;</bpt>destinationDir<ept i="3">&lt;/c3&gt;</ept>和要包含到报告的测试结果。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Tool Chain</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160128T153339Z" creationid="95" creationdate="20160128T153339Z">
        <seg>工具链</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Tool chain support</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070356Z" creationid="95" creationdate="20170416T070356Z">
        <seg>工具链支持</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Tool chains</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070504Z" creationid="95" creationdate="20170416T070504Z">
        <seg>工具链</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Tooling API and the Gradle Build Daemon</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T071012Z" creationid="95" creationdate="20170416T071012Z">
        <seg>Tooling API 及 Gradle 构建守护进程</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Tooling API can download and install the appropriate Gradle version, similar to the wrapper.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T152619Z" creationid="95" creationdate="20161218T152416Z">
        <seg>Tooling API 可以下载和安装适当的Gradle版本，类似于包装器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Top level element that enables configuration of the Eclipse plugin in a DSL-friendly fashion</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T022353Z" creationid="msdx" creationdate="20150620T034249Z">
        <seg>顶级元素，以DSL友好的方式启用 Eclipse 插件的配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Top level element that enables configuration of the idea plugin in a DSL-friendly fashion</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T072657Z" creationid="haohang" creationdate="20150625T072645Z">
        <seg>顶级元素，以DSL友好的方式启用 idea 插件的配置</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Transitive dependency management is a technique that enables your project to depend on libraries which, in turn, depend on other libraries.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150720T060539Z" creationid="haohang" creationdate="20150720T060539Z">
        <seg>传递依赖管理是一种技术，让你的项目能够依赖那些反过来依赖其他库的库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Troubleshooting</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162155Z" creationid="msdx" creationdate="20141109T162155Z">
        <seg>疑难解答</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Truncated stacktraces are printed.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T104123Z" creationid="msdx" creationdate="20141116T104048Z">
        <seg>输出截断的栈跟踪。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Tutorial - 'This and That'</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T141830Z" creationid="msdx" creationdate="20141109T164916Z">
        <seg>教程 - 杂七杂八</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Tutorials</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162020Z" creationid="msdx" creationdate="20141109T162020Z">
        <seg>教程</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Twitter</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T062800Z" creationid="haohang" creationdate="20150628T062800Z">
        <seg>Twitter</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Two of the configurations are relevant for the usage with artifacts.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151226T085036Z" creationid="95" creationdate="20151221T141758Z">
        <seg>这两个配置都与构件的使用有关。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Two projects are said to be <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>decoupled<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> if they do not directly access each other's project model.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T092823Z" creationid="haohang" creationdate="20160726T092823Z">
        <seg>如果两个项目不能直接访问彼此的项目模型，那么可以说它们是<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>解耦的<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Type</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T044209Z" creationid="msdx" creationdate="20141108T044209Z">
        <seg>类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Typical build types are 'debug' and 'release', but a project is free to define any set of build types.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160401T090243Z" creationid="haohang" creationdate="20160401T090243Z">
        <seg>典型的构建类型是“debug”和“release”，但一个project可以自由定义任意的构建类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Typically (but not necessarily) this will be the root project of the Gradle build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150514T152401Z" creationid="msdx" creationdate="20150514T152401Z">
        <seg>通常（但不是一定）会是这个 Gradle 构建的根项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Typically (but not necessarily) this will be the root project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T085401Z" creationid="msdx" creationdate="20150512T085401Z">
        <seg>通常（但不是一定）会是根项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Typically, these are compile tasks, test tasks, and code coverage tasks.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T061938Z" creationid="msdx" creationdate="20150513T061930Z">
        <seg>通常情况下，它们是编译任务、测试任务和代码覆盖任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Ubuntu</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T065616Z" creationid="haohang" creationdate="20150628T065616Z">
        <seg>Ubuntu</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Under *nix it is probably preferable to run this as a background task (<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>gradle --gui&amp;<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T150011Z" creationid="msdx" creationdate="20141105T145925Z">
        <seg>如果是在linux/unix系统下，则可以通过 (<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;s1&gt;</bpt>gradle --gui&amp;<ept i="1">&lt;/s1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>)让它作为后台任务运行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Understanding how the build language works will help you when you write your build script, and in particular, when you start to write custom plugins and tasks.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T060948Z" creationid="msdx" creationdate="20141108T060948Z">
        <seg>了解构建语言是如何工作的，将有助于你编写构建脚本，特别是当你开始写自定义插件和任务的时候。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Unix file permissions</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070948Z" creationid="95" creationdate="20170416T070948Z">
        <seg>Unix 文件权限</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Unknown build outcomes can be compared in so far as they can be identified to be logically equivalent to an unknown build outcome in the other build, but no meaningful comparison of what the build outcome actually is can be performed.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161228T144845Z" creationid="95" creationdate="20161228T144609Z">
        <seg>目前为止，未知的构建结果是可以被比较的，因为它们可以确定与其他构建的未知构建结果是否为逻辑等价物，但是对于实际上可以被执行的构建结果，这种比较则是没有意义的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Unless <bpt i="4" x="4">&lt;c4&gt;</bpt>groovyOptions.useAnt<ept i="4">&lt;/c4&gt;</ept> is set to <bpt i="5" x="5">&lt;c5&gt;</bpt>true<ept i="5">&lt;/c5&gt;</ept>, Gradle's native Groovy compiler integration is used.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T094418Z" creationid="msdx" creationdate="20150429T094408Z">
        <seg>除非<bpt i="4" x="4">&lt;c4&gt;</bpt>groovyOptions.useAnt<ept i="4">&lt;/c4&gt;</ept>设置为<bpt i="5" x="5">&lt;c5&gt;</bpt>true<ept i="5">&lt;/c5&gt;</ept>，否则将使用 Gradle 集成的本地的 Groovy 编译器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Unless Sonar is run locally and with default settings, it is necessary to configure connection settings for the Sonar server and database.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150510T143638Z" creationid="msdx" creationdate="20150510T143505Z">
        <seg>除非 Sonar 是在本地上运行，并且有默认的配置，否则有必要配置Sonar 服务器及数据库的连接设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Unless a task's <bpt i="0" x="0">&lt;c0&gt;</bpt>groovyClasspath<ept i="0">&lt;/c0&gt;</ept> is configured explicitly, the Groovy (base) plugin will try to infer it from the task's <bpt i="1" x="1">&lt;c1&gt;</bpt>classpath<ept i="1">&lt;/c1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T091621Z" creationid="msdx" creationdate="20150429T091621Z">
        <seg>除非显式配置了一个 task 的<bpt i="0" x="0">&lt;c0&gt;</bpt>groovyClasspath<ept i="0">&lt;/c0&gt;</ept> ，否则 Groovy（基础）插件会尝试推断该 task 的<bpt i="1" x="1">&lt;c1&gt;</bpt>classpath<ept i="1">&lt;/c1&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Unless a task's <bpt i="0" x="0">&lt;c0&gt;</bpt>scalaClasspath<ept i="0">&lt;/c0&gt;</ept> is configured explicitly, the Scala (base) plugin will try to infer it from the task's <bpt i="1" x="1">&lt;c1&gt;</bpt>classpath<ept i="1">&lt;/c1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150430T154531Z" creationid="msdx" creationdate="20150430T154531Z">
        <seg>除非显式配置了一个 task 的<bpt i="0" x="0">&lt;c0&gt;</bpt>scalaClasspath<ept i="0">&lt;/c0&gt;</ept> ，否则 Scala（基础）插件会尝试推断该 task 的<bpt i="1" x="1">&lt;c1&gt;</bpt>classpath<ept i="1">&lt;/c1&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Unless you provide specific number of parallel threads Gradle attempts to choose the right number based on available CPU cores.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T091136Z" creationid="haohang" creationdate="20160726T091136Z">
        <seg>除非你提供了特定数量的并行线程，否则Gradle 将基于可用的 CPU 内核尝试选择正确的线程数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Unlike the Sonar plugin, the Sonar Runner plugin works fine with Sonar 3.4 and higher.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T060612Z" creationid="msdx" creationdate="20150513T060612Z">
        <seg>不同于 Sonar 插件，Sonar Runner 插件与 Sonar 3.4 或更高的版本一起使用时也表现正常。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Unpacking</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162135Z" creationid="msdx" creationdate="20141109T162135Z">
        <seg>解压</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Until then, the Sonar Runner is executed in the main Gradle process.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150525T234752Z" creationid="haohang" creationdate="20150525T234745Z">
        <seg>到那时，Sonar Runner 会在 Gradle 主进程中执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Upload</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083219Z" creationid="msdx" creationdate="20150428T083219Z">
        <seg>Upload</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Uploading</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131833Z" creationid="msdx" creationdate="20150509T131833Z">
        <seg>上传</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Uploading to a Maven repository is described in <bpt i="0" x="0">&lt;a0&gt;</bpt>Section 52.6, “Interacting with Maven repositories”<ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151226T093111Z" creationid="95" creationdate="20151226T093111Z">
        <seg>关于上传到Maven仓库的内容，在<bpt i="0" x="0">&lt;a0&gt;</bpt>52.6节，“与Maven仓库的交互”<ept i="0">&lt;/a0&gt;</ept>中描述。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Uploads the artifacts in the <bpt i="0" x="0">&lt;c0&gt;</bpt>archives<ept i="0">&lt;/c0&gt;</ept> configuration, including the JAR file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T005118Z" creationid="Administrator" creationdate="20150426T005118Z">
        <seg>使用<bpt i="0" x="0">&lt;c0&gt;</bpt>archives<ept i="0">&lt;/c0&gt;</ept>配置上传包括 JAR 文件的构件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Usage</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131614Z" creationid="msdx" creationdate="20150509T131614Z">
        <seg>用法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Usage and troubleshooting</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150508T131800Z" creationid="msdx" creationdate="20150508T131800Z">
        <seg>用法和故障排除</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Use <bpt i="0" x="0">&lt;c0&gt;</bpt>sudo apt-get install libnotify-bin<ept i="0">&lt;/c0&gt;</ept> to install it.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T090835Z" creationid="haohang" creationdate="20150628T090835Z">
        <seg>使用 <bpt i="0" x="0">&lt;c0&gt;</bpt>sudo apt-get install libnotify-bin<ept i="0">&lt;/c0&gt;</ept> 来安装它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Use Custom Gradle Executor - Advanced feature</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T161439Z" creationid="msdx" creationdate="20141105T161253Z">
        <seg>使用自定义的 Gradle 执行器  - 高级功能</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Use external libraries directly in your build file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T044718Z" creationid="95" creationdate="20161211T044718Z">
        <seg>直接在你的构架文件中使用外部libraries。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Used by tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T084146Z" creationid="Administrator" creationdate="20150426T084146Z">
        <seg>在哪些任务中使用</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Used for</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T070712Z" creationid="msdx" creationdate="20141116T070712Z">
        <seg>用于</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Uses <bpt i="0" x="0">&lt;a0&gt;</bpt>JUnit<ept i="0">&lt;/a0&gt;</ept> for testing</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T094202Z" creationid="haohang" creationdate="20150707T094202Z">
        <seg>使用<bpt i="0" x="0">&lt;a0&gt;</bpt>JUnit<ept i="0">&lt;/a0&gt;</ept>测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Uses <bpt i="0" x="0">&lt;a0&gt;</bpt>ScalaTest<ept i="0">&lt;/a0&gt;</ept> is used for testing</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T094440Z" creationid="haohang" creationdate="20150707T094440Z">
        <seg>使用<bpt i="0" x="0">&lt;a0&gt;</bpt>ScalaTest<ept i="0">&lt;/a0&gt;</ept>作为测试</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Uses <bpt i="0" x="0">&lt;a0&gt;</bpt>Spock testing framework<ept i="0">&lt;/a0&gt;</ept> for testing</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T094651Z" creationid="haohang" creationdate="20150707T094632Z">
        <seg>测试使用 <bpt i="0" x="0">&lt;a0&gt;</bpt>Spock testing framework<ept i="0">&lt;/a0&gt;</ept> </seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Uses Groovy 2.x</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T094615Z" creationid="haohang" creationdate="20150707T094608Z">
        <seg>使用 Groovy 2.x</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Uses Scala 2.10</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T094353Z" creationid="haohang" creationdate="20150707T094353Z">
        <seg>使用 Scala 2.10</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Uses effective POM and effective settings (support for POM inheritance, dependency management, properties)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T093331Z" creationid="haohang" creationdate="20150707T093331Z">
        <seg>使用有效的 POM 和有效设置（支持 POM 继承、 依赖管理、 属性）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Uses the " <bpt i="0" x="0">&lt;c0&gt;</bpt>mavenCentral()<ept i="0">&lt;/c0&gt;</ept> dependency repository</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T094155Z" creationid="haohang" creationdate="20150707T094155Z">
        <seg>使用“<bpt i="0" x="0">&lt;c0&gt;</bpt>mavenCentral()<ept i="0">&lt;/c0&gt;</ept>”依赖仓库</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Uses the "<bpt i="0" x="0">&lt;c0&gt;</bpt>groovy<ept i="0">&lt;/c0&gt;</ept>" plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T094605Z" creationid="haohang" creationdate="20150707T094605Z">
        <seg>使用“<bpt i="0" x="0">&lt;c0&gt;</bpt>groovy<ept i="0">&lt;/c0&gt;</ept>”插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Uses the "<bpt i="0" x="0">&lt;c0&gt;</bpt>java<ept i="0">&lt;/c0&gt;</ept>" plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T094134Z" creationid="haohang" creationdate="20150707T094134Z">
        <seg>使用“<bpt i="0" x="0">&lt;c0&gt;</bpt>java<ept i="0">&lt;/c0&gt;</ept>”插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Uses the "<bpt i="0" x="0">&lt;c0&gt;</bpt>scala<ept i="0">&lt;/c0&gt;</ept>" plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T094348Z" creationid="haohang" creationdate="20150707T094348Z">
        <seg>使用“<bpt i="0" x="0">&lt;c0&gt;</bpt>scala<ept i="0">&lt;/c0&gt;</ept>”插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Using Ant Tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163309Z" creationid="msdx" creationdate="20141109T163309Z">
        <seg>调用 Ant 任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Using Ant from Gradle</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150330T141229Z" creationid="Administrator" creationdate="20150330T141229Z">
        <seg>从 Gradle 中调用 Ant</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Using Ant tasks and types in your build</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150330T141238Z" creationid="Administrator" creationdate="20150330T141238Z">
        <seg>在构建中使用 Ant 任务和类型</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Using Clang distributed with XCode.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160128T153450Z" creationid="95" creationdate="20160128T153450Z">
        <seg>使用 XCode 中的 Clang。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Using GCC distributed with XCode.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160128T153439Z" creationid="95" creationdate="20160128T153439Z">
        <seg>使用 XCode 中的 GCC。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Using an init script</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070921Z" creationid="95" creationdate="20170416T070921Z">
        <seg>使用 init 脚本</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Using custom descriptor file</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150514T151813Z" creationid="msdx" creationdate="20150514T151813Z">
        <seg>使用自定义的描述符文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Using extra project properties is another.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160530T144300Z" creationid="95" creationdate="20160530T144300Z">
        <seg>或者是使用额外的项目属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Using methods</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163329Z" creationid="msdx" creationdate="20141109T163329Z">
        <seg>方法抽取</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Using pre-built artifacts in the place of building dependent projects.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T090840Z" creationid="haohang" creationdate="20160726T090840Z">
        <seg>在构建依赖项目时使用预构建的构件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Using the <bpt i="0" x="0">&lt;c0&gt;</bpt>Sync<ept i="0">&lt;/c0&gt;</ept> task</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150330T141204Z" creationid="Administrator" creationdate="20150330T141204Z">
        <seg>使用<bpt i="0" x="0">&lt;c0&gt;</bpt>Sync<ept i="0">&lt;/c0&gt;</ept>任务</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Using the <bpt i="3" x="3">&lt;c3&gt;</bpt>buildSrc<ept i="3">&lt;/c3&gt;</ept> project approach keeps separate the task declaration - that is, what the task should do - from the task implementation - that is, how the task does it.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T144838Z" creationid="95" creationdate="20160814T144503Z">
        <seg>使用 <bpt i="3" x="3">&lt;c3&gt;</bpt>buildSrc<ept i="3">&lt;/c3&gt;</ept> 项目的方法能够保持任务的声明——即它应该做什么，与这个任务的实现——即它是怎么做的，相互独立。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Using the Gradle Command-Line</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163824Z" creationid="msdx" creationdate="20141109T163824Z">
        <seg>使用 Gradle 命令行</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Using the Gradle Graphical User Interface</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T055032Z" creationid="msdx" creationdate="20141108T031048Z">
        <seg>使用Gradle 图形用户界面</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Using the Signing DSL, you can specify that all of the artifacts of this configuration should be signed.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160109T072217Z" creationid="95" creationdate="20160109T072217Z">
        <seg>使用Signing DSL，你可以指定这个配置的所有 artifacts 都应该被签名。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Using the contents of an archive as a file tree</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150330T141150Z" creationid="Administrator" creationdate="20150330T141150Z">
        <seg>使用归档文件的内容作为文件树</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Using the latest Gradle version for the host build will avoid encountering unknown build outcomes.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161228T145153Z" creationid="95" creationdate="20161228T145153Z">
        <seg>对主机构建使用最新的Gradle版本可以避免遇到未知的构建结果。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Using the project name for filtering is one option.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160530T144242Z" creationid="95" creationdate="20160530T144242Z">
        <seg>我们可以选择使用project的名称来筛选，</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Using this descriptor you can change the name, project directory and build file of a project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T070444Z" creationid="haohang" creationdate="20160519T070444Z">
        <seg>使用这个描述符，你可以更改一个项目的名称、项目目录和构建文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Using this method is a useful way to convert some user provided value into an absolute <bpt i="0" x="0">&lt;c0&gt;</bpt>File<ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T143859Z" creationid="msdx" creationdate="20141112T143859Z">
        <seg>这是把一些用户提供的值转换为一个相对路径的<bpt i="0" x="0">&lt;c0&gt;</bpt>File<ept i="0">&lt;/c0&gt;</ept>对象的有用方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Using your project as a library can either happen from within a multi-project build or by retrieving your project from a repository.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151227T160033Z" creationid="95" creationdate="20151227T160033Z">
        <seg>把一个项目作为类库使用，可能是因为多项目构建，也可能是从仓库中获取项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Usually we put the project specific behavior in the build script of the project where we want to apply this specific behavior.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160527T163133Z" creationid="95" creationdate="20160527T162552Z">
        <seg>通常我们会把项目的特定行为放到我们想添加的这个项目的构建脚本里。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Usually, a real project will require more than this.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T065822Z" creationid="msdx" creationdate="20141030T065822Z">
        <seg>通常情况下，一个真实的项目所需要的不止于此。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Usually, there is a method with the same name as the property, which appends to the set of files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T123540Z" creationid="msdx" creationdate="20141113T123344Z">
        <seg>通常情况下，有一个与属性相同名称的方法，可以追加这个文件集合。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Usually, you would pass it a <bpt i="2" x="2">&lt;c2&gt;</bpt>String<ept i="2">&lt;/c2&gt;</ept> or <bpt i="3" x="3">&lt;c3&gt;</bpt>File<ept i="3">&lt;/c3&gt;</ept> instance.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T142848Z" creationid="msdx" creationdate="20141112T043533Z">
        <seg>通常情况下，你会传给它一个<bpt i="2" x="2">&lt;c2&gt;</bpt>String<ept i="2">&lt;/c2&gt;</ept>或<bpt i="3" x="3">&lt;c3&gt;</bpt>File<ept i="3">&lt;/c3&gt;</ept>的实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Utilize a pool of reusable processes available for compilation and testing.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141117T150959Z" creationid="msdx" creationdate="20141117T150959Z">
        <seg>使用可用于编译和测试的一个可复用线程池。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Validating and prompting for user supplied configuration.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T154808Z" creationid="95" creationdate="20161218T154808Z">
        <seg>对用户提供的配置进行验证和输入提示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Value of the current used JVM</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T045816Z" creationid="Administrator" creationdate="20150427T045816Z">
        <seg>当前JVM所使用的值</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Version 1.12</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T161608Z" creationid="msdx" creationdate="20141109T161608Z">
        <seg>版本 1.12</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Versions in jar names increase the expressiveness of your project and make them easier to maintain.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150716T094023Z" creationid="haohang" creationdate="20150716T094023Z">
        <seg>在 jar 文件中包含版本号提高了在你的项目中的表现，并且让它们更易于维护。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Via the <bpt i="2" x="2">&lt;c2&gt;</bpt>-u<ept i="2">&lt;/c2&gt;</ept> command line option, you can tell Gradle not to look in the parent hierarchy for a <bpt i="3" x="3">&lt;c3&gt;</bpt>settings.gradle<ept i="3">&lt;/c3&gt;</ept> file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T075245Z" creationid="haohang" creationdate="20160519T074639Z">
        <seg>通过<bpt i="2" x="2">&lt;c2&gt;</bpt>-u<ept i="2">&lt;/c2&gt;</ept>命令行选项，你可以让 Gradle 不去父目录找<bpt i="3" x="3">&lt;c3&gt;</bpt>settings.gradle<ept i="3">&lt;/c3&gt;</ept>文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Via the string notation you can define a subset of the properties.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150724T034911Z" creationid="haohang" creationdate="20150724T034845Z">
        <seg>通过 string 标记法，你可以定义一个属性的子集。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Visual C++</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160128T153452Z" creationid="95" creationdate="20160128T153452Z">
        <seg>Visual C++</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Visual Studio IDE integration</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070508Z" creationid="95" creationdate="20170416T070508Z">
        <seg>Visual Studio IDE 集成</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>VisualCpp</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T091211Z" creationid="haohang" creationdate="20160408T091211Z">
        <seg>VisualCpp</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>WAR file base name</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T151031Z" creationid="msdx" creationdate="20150504T151031Z">
        <seg>WAR 文件的base name</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>WARNING</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T070727Z" creationid="msdx" creationdate="20141116T070727Z">
        <seg>WARNING</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>War</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T085939Z" creationid="msdx" creationdate="20150503T085939Z">
        <seg>War</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>War Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170211T140605Z" creationid="95" creationdate="20170211T140605Z">
        <seg>War 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>War plugin - tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T090102Z" creationid="msdx" creationdate="20150503T090102Z">
        <seg>War 插件 - tasks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Warning messages</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T070729Z" creationid="msdx" creationdate="20141116T070729Z">
        <seg>警告消息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>We add a property to the producer project and create now a configuration time dependency from consumer on producer.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T072747Z" creationid="haohang" creationdate="20160718T072747Z">
        <seg>我们添加一个属性到生产者项目，并且在生产者上创建一个来自消费者的配置时依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>We also offer inheritance for projects as you will see later.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160527T162007Z" creationid="95" creationdate="20160527T162007Z">
        <seg>稍后您将看到，我们也提供了项目继承。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>We also support the same mechanism for system properties.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T145748Z" creationid="msdx" creationdate="20141109T145644Z">
        <seg>对系统属性我们也支持相同的机制。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>We are not sure how other version control systems deal with this.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T040925Z" creationid="95" creationdate="20161218T040855Z">
        <seg>我们并不确定其他的版本控制系统是怎么处理的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>We are not that happy with the build script of the <bpt i="0" x="0">&lt;c0&gt;</bpt>water<ept i="0">&lt;/c0&gt;</ept> project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160526T155126Z" creationid="95" creationdate="20160526T155126Z">
        <seg>我们对这个 <bpt i="0" x="0">&lt;c0&gt;</bpt>water<ept i="0">&lt;/c0&gt;</ept> 项目的构建脚本不是很满意。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>We assign this library to a new <bpt i="3" x="3">&lt;s3&gt;</bpt><bpt i="4" x="4">&lt;e4&gt;</bpt>dependency configuration<ept i="4">&lt;/e4&gt;</ept><ept i="3">&lt;/s3&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T085137Z" creationid="haohang" creationdate="20160726T085020Z">
        <seg>我们将这个库指定给一个新的<bpt i="3" x="3">&lt;s3&gt;</bpt><bpt i="4" x="4">&lt;e4&gt;</bpt>依赖配置<ept i="4">&lt;/e4&gt;</ept><ept i="3">&lt;/s3&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>We came up with several use cases where the daemon is very useful.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141117T132801Z" creationid="msdx" creationdate="20141117T131823Z">
        <seg>我们准备了几个守护进程非常有用的用例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>We can change this property simply by giving it a new value.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141123T154156Z" creationid="msdx" creationdate="20141123T154156Z">
        <seg>我们可以简单地通过给它一个新的值来更改此属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>We can change where the class files are written via the source set.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141124T074603Z" creationid="msdx" creationdate="20141124T073757Z">
        <seg>我们可以通过这个源码集修改写入类文件的位置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>We can do better.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160526T155223Z" creationid="95" creationdate="20160526T155223Z">
        <seg>我们可以进行改善。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>We can force all of these libraries to use a consistent version:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T061508Z" creationid="95" creationdate="20151115T061445Z">
        <seg>我们可以强制所有这些库使用一致的版本：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>We could add project specific behavior for the <bpt i="0" x="0">&lt;c0&gt;</bpt>bluewhale<ept i="0">&lt;/c0&gt;</ept> project like this:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160527T163148Z" creationid="95" creationdate="20160527T162736Z">
        <seg>我们可以这样为<bpt i="0" x="0">&lt;c0&gt;</bpt>bluewhale<ept i="0">&lt;/c0&gt;</ept>项目添加特定行为︰</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>We could also have used the following syntax:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141122T162227Z" creationid="msdx" creationdate="20141122T162227Z">
        <seg>我们还可以使用下面的语法：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>We could not find a good overview for all possible proxy settings.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141121T142319Z" creationid="msdx" creationdate="20141121T141809Z">
        <seg>我们无法很好地概述所有可能的代理服务器设置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>We define the artifacts of the projects as the files the project provides to the outside world.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151220T123354Z" creationid="95" creationdate="20151220T123354Z">
        <seg>我们把项目的构件定义为项目向外界提供的文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>We don't run CI builds with the daemon (i.e. a long running process) as the CI environment is optimized for consistency and reliability.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141120T051158Z" creationid="msdx" creationdate="20141119T153839Z">
        <seg>由于 CI 环境在一致性和可靠性上的优化，我们不通过守护进程运行 CI 构建（即长时间运行进程） 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>We execute the <bpt i="1" x="1">&lt;c1&gt;</bpt>hello<ept i="1">&lt;/c1&gt;</ept> tasks of the <bpt i="2" x="2">&lt;c2&gt;</bpt>water<ept i="2">&lt;/c2&gt;</ept>, the <bpt i="3" x="3">&lt;c3&gt;</bpt>krill<ept i="3">&lt;/c3&gt;</ept> and the <bpt i="4" x="4">&lt;c4&gt;</bpt>tropicalFish<ept i="4">&lt;/c4&gt;</ept> project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160715T091902Z" creationid="haohang" creationdate="20160715T091817Z">
        <seg>我们执行了<bpt i="2" x="2">&lt;c2&gt;</bpt>water<ept i="2">&lt;/c2&gt;</ept>、<bpt i="3" x="3">&lt;c3&gt;</bpt>krill<ept i="3">&lt;/c3&gt;</ept>和<bpt i="4" x="4">&lt;c4&gt;</bpt>tropicalFish<ept i="4">&lt;/c4&gt;</ept>项目的<bpt i="1" x="1">&lt;c1&gt;</bpt>hello<ept i="1">&lt;/c1&gt;</ept>任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>We fork a separate daemon process if the jvm arguments for the build are sufficiently different.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141117T153038Z" creationid="msdx" creationdate="20141117T153038Z">
        <seg>如果用于构建的jvm的参数足够不同，我们会fork一个单独的守护进程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>We fork a separate daemon process per java home.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141117T152850Z" creationid="msdx" creationdate="20141117T152635Z">
        <seg>对每个java home，我们会fork一个单独的守护进程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>We have already seen how to define tasks using a keyword style in <bpt i="0" x="0">&lt;a0&gt;</bpt>Chapter 6, <bpt i="1" x="1">&lt;i1&gt;</bpt>Build Script Basics<ept i="1">&lt;/i1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T081719Z" creationid="msdx" creationdate="20141109T160905Z">
        <seg>在<bpt i="0" x="0">&lt;a0&gt;</bpt>第 6 章，<bpt i="1" x="1">&lt;i1&gt;</bpt>构建脚本基础<ept i="1">&lt;/i1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> 中我们已经看到如何通过关键字这种风格来定义任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>We have an interesting set of dependencies.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160722T091315Z" creationid="haohang" creationdate="20160722T091315Z">
        <seg>我们有一套有意思的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>We have now declared that the <bpt i="0" x="0">&lt;c0&gt;</bpt>action<ept i="0">&lt;/c0&gt;</ept> task in the <bpt i="1" x="1">&lt;c1&gt;</bpt>consumer<ept i="1">&lt;/c1&gt;</ept> project has an <bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;e3&gt;</bpt>execution dependency<ept i="3">&lt;/e3&gt;</ept><ept i="2">&lt;/s2&gt;</ept> on the <bpt i="4" x="4">&lt;c4&gt;</bpt>action<ept i="4">&lt;/c4&gt;</ept> task on the <bpt i="5" x="5">&lt;c5&gt;</bpt>producer<ept i="5">&lt;/c5&gt;</ept> project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T071859Z" creationid="haohang" creationdate="20160718T071859Z">
        <seg>我们现在声明了<bpt i="1" x="1">&lt;c1&gt;</bpt>consumer<ept i="1">&lt;/c1&gt;</ept>项目的<bpt i="0" x="0">&lt;c0&gt;</bpt>action<ept i="0">&lt;/c0&gt;</ept>任务对<bpt i="5" x="5">&lt;c5&gt;</bpt>producer<ept i="5">&lt;/c5&gt;</ept>项目上的<bpt i="4" x="4">&lt;c4&gt;</bpt>action<ept i="4">&lt;/c4&gt;</ept>任务有<bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;e3&gt;</bpt>执行依赖<ept i="3">&lt;/e3&gt;</ept><ept i="2">&lt;/s2&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>We have said that there is a specific upload task for each configuration.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151226T091610Z" creationid="95" creationdate="20151226T091524Z">
        <seg>我们说过，每一个配置都有一个特定的上传任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>We have seen these in <bpt i="0" x="0">&lt;a0&gt;</bpt>Chapter 15, <bpt i="1" x="1">&lt;i1&gt;</bpt>More about Tasks<ept i="1">&lt;/i1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T143204Z" creationid="95" creationdate="20160814T143204Z">
        <seg>我们在 <bpt i="0" x="0">&lt;a0&gt;</bpt>第十五章 <bpt i="1" x="1">&lt;i1&gt;</bpt>有关任务的详细信息<ept i="1">&lt;/i1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>中看到过它们。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>We have seen these in <bpt i="0" x="0">&lt;a0&gt;</bpt>Chapter 6, <bpt i="1" x="1">&lt;i1&gt;</bpt>Build Script Basics<ept i="1">&lt;/i1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T141041Z" creationid="95" creationdate="20160814T141041Z">
        <seg>这样的任务我们在<bpt i="0" x="0">&lt;a0&gt;</bpt>第六章， <bpt i="1" x="1">&lt;i1&gt;</bpt>构建脚本基础<ept i="1">&lt;/i1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>已经看到过。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>We have seen this already in <bpt i="0" x="0">&lt;a0&gt;</bpt>Section 6.13, “Configure by DAG”<ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T135648Z" creationid="95" creationdate="20160521T135648Z">
        <seg>在<bpt i="0" x="0">&lt;a0&gt;</bpt>第 6.13 章，“使用DAG配置”<ept i="0">&lt;/a0&gt;</ept>我们已经看到进了。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>We have the following project tree.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160522T125130Z" creationid="95" creationdate="20160522T125130Z">
        <seg>我们有以下的项目树。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>We have the projects <bpt i="0" x="0">&lt;c0&gt;</bpt>shared<ept i="0">&lt;/c0&gt;</ept>, <bpt i="1" x="1">&lt;c1&gt;</bpt>api<ept i="1">&lt;/c1&gt;</ept> and<bpt i="2" x="2">&lt;c2&gt;</bpt>personService<ept i="2">&lt;/c2&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T083650Z" creationid="haohang" creationdate="20160726T083559Z">
        <seg>我们有这些项目： <bpt i="0" x="0">&lt;c0&gt;</bpt>shared<ept i="0">&lt;/c0&gt;</ept>， <bpt i="1" x="1">&lt;c1&gt;</bpt>api<ept i="1">&lt;/c1&gt;</ept> 和<bpt i="2" x="2">&lt;c2&gt;</bpt>personService<ept i="2">&lt;/c2&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>We just follow the convention for where the source for the task class should go.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160815T145207Z" creationid="95" creationdate="20160815T145207Z">
        <seg>我们只是按照约定将任务类的源码放在对应的位置。.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>We mention it for the sake of completeness and comparison with other build tools.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151201T064025Z" creationid="haohang" creationdate="20151201T064025Z">
        <seg>我们提到它是为了完整性，以及和其他构建工具进行比较。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>We need something better than this hack.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T070949Z" creationid="haohang" creationdate="20160718T070949Z">
        <seg>我们需要比这种技巧更好的实现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>We plan to add much more to the existing reports and create additional ones in future releases of Gradle.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150626T100211Z" creationid="haohang" creationdate="20150626T100211Z">
        <seg>我们计划在未来发布的版本中，向现有的报告添加更多的内容，以及创建额外的东西。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>We plan to improve the ways of managing / pooling the daemons in future.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141117T154114Z" creationid="msdx" creationdate="20141117T154114Z">
        <seg>我们计划在将来改进守护进程的managing / pooling的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>We recommend this over full stacktraces.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T105740Z" creationid="msdx" creationdate="20141116T105639Z">
        <seg>我们推荐使用这一个选项而不是打印全栈的跟踪信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>We said earlier that the build script defines a project in Gradle.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T044315Z" creationid="msdx" creationdate="20141108T040249Z">
        <seg>我们之前说在 Gradle 中构建脚本定义了一个项目（project）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>We said earlier, that the core of Gradle is a language for dependency based programming.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160518T031511Z" creationid="haohang" creationdate="20160518T031511Z">
        <seg>我们之前说，Gradle 的核心是一种以依赖为基础进行编程的语言。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>We saw in the example above that the Java plugins adds a task named <bpt i="0" x="0">&lt;c0&gt;</bpt>compileJava<ept i="0">&lt;/c0&gt;</ept> that has a property named <bpt i="1" x="1">&lt;c1&gt;</bpt>destinationDir<ept i="1">&lt;/c1&gt;</ept> (that configures where the compiled Java source should be placed).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141123T153755Z" creationid="msdx" creationdate="20141123T153755Z">
        <seg>在上面的示例中我们看到，Java 插件添加了一个任务，名字为<bpt i="0" x="0">&lt;c0&gt;</bpt>compileJava<ept i="0">&lt;/c0&gt;</ept>  ，有一个名为<bpt i="1" x="1">&lt;c1&gt;</bpt>destinationDir<ept i="1">&lt;/c1&gt;</ept> 的属性（即配置编译的 Java 代码存放的地方）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>We simply switch to the <bpt i="0" x="0">&lt;c0&gt;</bpt>consumer<ept i="0">&lt;/c0&gt;</ept> dir and execute the build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T070617Z" creationid="haohang" creationdate="20160718T070617Z">
        <seg>我们简单地切换到<bpt i="0" x="0">&lt;c0&gt;</bpt>consumer<ept i="0">&lt;/c0&gt;</ept>目录并执行构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>We think it provides a very powerful and flexible way of configuring multiproject builds.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160527T162124Z" creationid="95" creationdate="20160527T162124Z">
        <seg>我们认为它提供了配置 multiproject 的构建非常强大和灵活的方式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>We usually put the project specific stuff into the build script of the respective projects.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160727T055235Z" creationid="haohang" creationdate="20160727T055235Z">
        <seg>我们通常把项目的具体东西放到各自的项目的构建脚本里。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>We will grow the the test filtering api and add more kinds of filters.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T023929Z" creationid="Administrator" creationdate="20150428T023929Z">
        <seg>我们将会继续改进测试过滤的API，并添加更多种类的过滤器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>We will have a closer look at this in the next section.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160715T075827Z" creationid="haohang" creationdate="20160715T075827Z">
        <seg>我们将在下一节详细讨论这一点。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>We will improve this in a future release of Gradle.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T092012Z" creationid="haohang" creationdate="20150801T092012Z">
        <seg>我们将在未来版本的 Gradle 修正这一点。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>We will talk more about the <bpt i="2" x="2">&lt;c2&gt;</bpt>runtime<ept i="2">&lt;/c2&gt;</ept> configuration in <bpt i="3" x="3">&lt;a3&gt;</bpt>Section 51.5, “More about project libraries”<ept i="3">&lt;/a3&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151226T085255Z" creationid="95" creationdate="20151226T085255Z">
        <seg>我们将在<bpt i="3" x="3">&lt;a3&gt;</bpt> 51.5 节，“详谈项目库”<ept i="3">&lt;/a3&gt;</ept>中更多地对<bpt i="2" x="2">&lt;c2&gt;</bpt>runtime<ept i="2">&lt;/c2&gt;</ept>配置进行讨论。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Web Application Quickstart</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163743Z" creationid="msdx" creationdate="20141109T163743Z">
        <seg>Web 应用程序快速入门</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Web application sources</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T090144Z" creationid="msdx" creationdate="20150503T090144Z">
        <seg>Web 应用程序源代码</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Weeks later there is an exception on the integration machine which can't be reproduced on anyone's machine.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150716T093706Z" creationid="haohang" creationdate="20150716T093706Z">
        <seg>一周后在集成的机器上可能会有一个异常，而这个异常无法在任何人的机器上复现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>What exactly the Eclipse plugin generates depends on which other plugins are used:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T003532Z" creationid="haohang" creationdate="20150603T003532Z">
        <seg>Eclipse 插件生成的内容完全取决于使用了哪些其他的插件：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>What exactly the IDEA plugin generates depends on which other plugins are used:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T071409Z" creationid="haohang" creationdate="20150625T071409Z">
        <seg>IDEA 插件生成的内容完全取决于使用了哪些其他的插件：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>What if one projects needs the jar produced by another project in its compile path?</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T083341Z" creationid="haohang" creationdate="20160726T083341Z">
        <seg>可能会出现，一个项目在它的编译路径中需要由另一个项目所输出的jar包？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>What is dependency management?</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163533Z" creationid="msdx" creationdate="20141109T163533Z">
        <seg>什么是依赖管理？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>What is published is one or more artifacts created by the build, and an Ivy <bpt i="1" x="1">&lt;e1&gt;</bpt>module descriptor<ept i="1">&lt;/e1&gt;</ept> (normally <bpt i="2" x="2">&lt;c2&gt;</bpt>ivy.xml<ept i="2">&lt;/c2&gt;</ept>) that describes the artifacts and the dependencies of the artifacts, if any.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170211T012735Z" creationid="95" creationdate="20170211T010424Z">
        <seg>发布的内容是一个或多个在构建中创建的构件，以及一个描述了这些构件以及它们的依赖的Ivy <bpt i="1" x="1">&lt;e1&gt;</bpt>模块描述文件<ept i="1">&lt;/e1&gt;</ept>（通常是 <bpt i="2" x="2">&lt;c2&gt;</bpt>ivy.xml<ept i="2">&lt;/c2&gt;</ept>）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>What is the purpose of this behavior?</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T074131Z" creationid="haohang" creationdate="20160519T074131Z">
        <seg>这种行为的目的是什么？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>What plugins do</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131428Z" creationid="msdx" creationdate="20150509T131428Z">
        <seg>插件都做了什么</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>What should always work is to execute <bpt i="0" x="0">&lt;c0&gt;</bpt>sh gradlew<ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T041002Z" creationid="95" creationdate="20161218T041002Z">
        <seg>所以能让它总是可以执行的方法是执行<bpt i="0" x="0">&lt;c0&gt;</bpt>sh gradlew<ept i="0">&lt;/c0&gt;</ept>命令。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>What to set up</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070029Z" creationid="95" creationdate="20170416T070029Z">
        <seg>要设置什么</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When <bpt i="0" x="0">&lt;c0&gt;</bpt>project1<ept i="0">&lt;/c0&gt;</ept> is published, the module descriptor (i.e. the <bpt i="1" x="1">&lt;c1&gt;</bpt>ivy.xml<ept i="1">&lt;/c1&gt;</ept> file) that is produced will look like…</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T154058Z" creationid="95" creationdate="20170330T154014Z">
        <seg>当<bpt i="0" x="0">&lt;c0&gt;</bpt>project1<ept i="0">&lt;/c0&gt;</ept>发布时，产生的模块描述符（即<bpt i="1" x="1">&lt;c1&gt;</bpt>ivy.xml<ept i="1">&lt;/c1&gt;</ept>文件）将是……</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When <bpt i="0" x="0">&lt;c0&gt;</bpt>scalaCompileOptions.fork<ept i="0">&lt;/c0&gt;</ept> is set to <bpt i="1" x="1">&lt;c1&gt;</bpt>true<ept i="1">&lt;/c1&gt;</ept>, compilation will take place in an external process.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150430T155622Z" creationid="msdx" creationdate="20150430T155622Z">
        <seg>当<bpt i="0" x="0">&lt;c0&gt;</bpt>scalaCompileOptions.fork<ept i="0">&lt;/c0&gt;</ept>设置为<bpt i="1" x="1">&lt;c1&gt;</bpt>true<ept i="1">&lt;/c1&gt;</ept>时，编译会在外部进程中进行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When Gradle executes a script, it compiles the script into a class which implements <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Script<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T044619Z" creationid="msdx" creationdate="20141108T044608Z">
        <seg>当 Gradle 执行一个脚本时，它将脚本编译为一个实现了<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Script<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>接口的类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When Gradle has history of a previous task execution, and the only changes to the task execution context since that execution are to input files, then Gradle is able to determine which input files need to be reprocessed by the task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160816T145809Z" creationid="95" creationdate="20160816T145809Z">
        <seg>当Gradle有了前一次任务执行的历史，并且从那一次执行开始任务执行的上下文中只有输入文件有更改，那么Gradle 就能够决定哪些输入文件需要被这个任务重新处理。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When Gradle is executed without the daemon, then a new JVM must be launched for every build execution, unless the JVM launched by the Gradle start script happens to have the same parameters.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141121T140737Z" creationid="msdx" creationdate="20141121T140737Z">
        <seg>当不通过守护进程执行 Gradle 时，在每次构建执行中都必须启动一个新的 JVM ，除非 JVM 是由 Gradle 启动脚本启动的，并且恰好具有相同的参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When a build's dependency tree becomes unwieldy, your build tool shouldn't force you to adopt a single, inflexible approach to dependency management.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150716T035654Z" creationid="haohang" creationdate="20150716T035028Z">
        <seg>当一个构建的依赖树变得笨拙时，你的构建工具不应该强迫你对依赖管理采取单一、不灵活的做法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When a platform does not define an architecture or operating system, the default target of the tool chain is assumed.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T091829Z" creationid="haohang" creationdate="20160408T091829Z">
        <seg>当一个平台并没有定义一个架构或操作系统时，会被认为使用默认的工具链目标。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When a set of build types, target platforms, and flavors is defined for a component, a <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>NativeBinary<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> model element is created for every possible combination of these.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T084240Z" creationid="haohang" creationdate="20160408T084240Z">
        <seg>当为一个组件定义了一组构建类型，目标平台，以及flavor时，将会为它们的每一种可能的组合创建一个<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>NativeBinary<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> 模型元素。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When a task input property modified, Gradle is not able to determine how this property impacted the task outputs, so all input files are assumed to be out of date.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160817T150620Z" creationid="95" creationdate="20160817T150620Z">
        <seg>当一个任务的输入属性被修改时，Gradle 无法确定这个属性是如何影响到这个任务的输出的，因此所有的输入文件都会被认为是out of date的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When an argument resolves to a directory, everything under that directory (but not the directory itself) is recursively copied into the destination directory.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T130444Z" creationid="msdx" creationdate="20141113T124522Z">
        <seg>当参数解析为一个目录时，该目录下的所有文件（不包含目录本身） 都会递归复制到目标目录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When an argument resolves to a file, that file is copied into the destination directory.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T130456Z" creationid="msdx" creationdate="20141113T130456Z">
        <seg>当参数解析为一个文件时，该文件会复制到目标目录中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When an argument resolves to a non-existing file, that argument is ignored.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T130515Z" creationid="msdx" creationdate="20141113T130515Z">
        <seg>当参数解析为一个不存在的文件时，参数会被忽略。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When an existing input file is removed, then re-executing the task results that file being reported to <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>IncrementalTaskInputs.removed()<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160817T150209Z" creationid="95" creationdate="20160817T150209Z">
        <seg>When an existing input file is removed, then re-executing the task results that file being reported to <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>IncrementalTaskInputs.removed()<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When an input file is modified in some way or a new input file is added, then re-executing the task results in those files being reported to <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>IncrementalTaskInputs.outOfDate()<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160817T150142Z" creationid="95" creationdate="20160817T150142Z">
        <seg>当以某种方式修改了一个输入文件，或者新增了一个输入文件时，重新执行这个任务会使这些文件被上报到<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>IncrementalTaskInputs.outOfDate()<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When an output file is deleted (or modified), then Gradle is unable to determine which input files are out of date.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160817T150352Z" creationid="95" creationdate="20160817T150352Z">
        <seg>当输出文件被删除（或更改）时，Gradle是无法确定哪一个输入文件是out of date的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When analyzing a project hierarchy, values set via system properties apply to the root project of the analyzed hierarchy.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150525T234342Z" creationid="haohang" creationdate="20150525T234250Z">
        <seg>当分析项目的层次结构时，通过系统属性设置的值应用于所分析层次结构的根项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When applying plugins within the init script, Gradle instantiates the plugin and calls the plugin instance's <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Plugin.apply()<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> method.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161215T144533Z" creationid="95" creationdate="20161215T144533Z">
        <seg>当把插件应用在 init 脚本中时，Gradle 会实例化该插件，并调用这个插件的实例的<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Plugin.apply()<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When compiling the 'french' variant, a separate macro is defined which leads to a different binary being produced.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T081513Z" creationid="haohang" creationdate="20160408T081213Z">
        <seg>当编译“french”变种时，会定义一个单独的宏，以产生不同的二进制文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When configured, Gradle will run in incubating parallel mode.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141120T053823Z" creationid="msdx" creationdate="20141120T053823Z">
        <seg>如果配置了这一个，Gradle 将在孵化的并行模式下运行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When creating the simple task, you have to set the <bpt i="1" x="1">&lt;c1&gt;</bpt>overwrite<ept i="1">&lt;/c1&gt;</ept> property to true.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T020224Z" creationid="msdx" creationdate="20141111T020147Z">
        <seg>当创建这个简单的任务时，您必须将<bpt i="1" x="1">&lt;c1&gt;</bpt>overwrite<ept i="1">&lt;/c1&gt;</ept>属性设置为 true。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When defining an exclude, you can specify either only the organization or only the module name or both.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T100629Z" creationid="haohang" creationdate="20150801T100427Z">
        <seg>在定义一个 exclude 时，你可以只指定 organization 或者 module 名称，或者是两者都指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When deploying an artifact to a Maven repository, Gradle automatically generates a POM for it.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T143645Z" creationid="95" creationdate="20160105T143645Z">
        <seg>当部署一个artifact 到一个 Maven 库时，Gradle 会自动为它生成一个POM。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When deploying signatures for your artifacts to a Maven repository, you will also want to sign the published POM file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160126T145112Z" creationid="95" creationdate="20160126T144654Z">
        <seg>当为你的artifacts部署签名到 Maven 仓库时，你还想签名发布的 POM 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When developing a web application, where the application is assembled many times.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141117T135332Z" creationid="msdx" creationdate="20141117T133019Z">
        <seg>当开发一个 web 应用程序中，应用程序会被组装多次。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When developing custom tasks and plugins, it's a good idea to be very flexible when accepting input configuration for file locations.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T132138Z" creationid="95" creationdate="20160820T132138Z">
        <seg>当开发自定义任务和插件时，接收输入配置的文件位置能使得在灵活性上表现得更好。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When discovering what a build can do, where <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle tasks<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> is executed a number of times.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141117T135917Z" creationid="msdx" creationdate="20141117T135917Z">
        <seg>当发现构建能做什么，在<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle tasks<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>在哪里会执行多次。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When evaluated, the closure is passed the task whose dependencies are being calculated.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T123248Z" creationid="msdx" creationdate="20141110T122709Z">
        <seg>在计算依赖时，闭包会被传入正在计算依赖的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When it executes, it copies the source files into the destination directory, and then removes any files from the destination directory which it did not copy.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T144733Z" creationid="msdx" creationdate="20141113T144733Z">
        <seg>当它执行时，它会将源文件复制到目标目录中，然后从目标目录移除所有不是它复制的文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When run with <bpt i="0" x="0">&lt;c0&gt;</bpt>--continue<ept i="0">&lt;/c0&gt;</ept>, it is possible for <bpt i="1" x="1">&lt;c1&gt;</bpt>B<ept i="1">&lt;/c1&gt;</ept> to execute in the event that <bpt i="2" x="2">&lt;c2&gt;</bpt>A<ept i="2">&lt;/c2&gt;</ept> fails.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T014703Z" creationid="msdx" creationdate="20141111T014655Z">
        <seg>当<bpt i="0" x="0">&lt;c0&gt;</bpt>--continue<ept i="0">&lt;/c0&gt;</ept>参数运行时，可能会是<bpt i="2" x="2">&lt;c2&gt;</bpt>A<ept i="2">&lt;/c2&gt;</ept>执行失败后<bpt i="1" x="1">&lt;c1&gt;</bpt>B<ept i="1">&lt;/c1&gt;</ept>执行了。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When running with offline, Gradle will never attempt to access the network to perform dependency resolution.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T153751Z" creationid="95" creationdate="20151129T153751Z">
        <seg>在使用离线运行时，Gradle 将不会尝试访问网络来执行依赖解析。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When running with the daemon, a JVM with the correct parameters is started once and reused for each daemon build execution.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141121T140606Z" creationid="msdx" creationdate="20141120T081855Z">
        <seg>当通过守护进程运行时，带有正确参数的 JVM 会启动一次，并在每次的守护进程构建执行时复用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When set to <bpt i="0" x="0">&lt;c0&gt;</bpt>true<ept i="0">&lt;/c0&gt;</ept> the Gradle daemon is to run the build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141119T153604Z" creationid="msdx" creationdate="20141119T153604Z">
        <seg>当设置为<bpt i="0" x="0">&lt;c0&gt;</bpt>true<ept i="0">&lt;/c0&gt;</ept> 时，Gradle 守护进程会运行构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When setting only a single property at a time, the equivalent property syntax is more succinct:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T092211Z" creationid="msdx" creationdate="20150512T092104Z">
        <seg>当一次只设置一个属性时，等效属性的语法更加简洁：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When signing is not required and the POM cannot be signed due to insufficient configuration (i.e. no credentials for signing) then the <bpt i="0" x="0">&lt;c0&gt;</bpt>signPom()<ept i="0">&lt;/c0&gt;</ept> method will silently do nothing.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160126T145716Z" creationid="95" creationdate="20160126T145300Z">
        <seg>当不需要签名，以及由于缺少配置（即没有签名证书）而不能签名 POM 的时候，<bpt i="0" x="0">&lt;c0&gt;</bpt>signPom()<ept i="0">&lt;/c0&gt;</ept>方法将什么都不会做，并且不会进行任何的提示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When specifying what is to be signed via the Signing DSL, the resultant signature artifacts are automatically added to the <bpt i="0" x="0">&lt;c0&gt;</bpt>signatures<ept i="0">&lt;/c0&gt;</ept> and <bpt i="1" x="1">&lt;c1&gt;</bpt>archives<ept i="1">&lt;/c1&gt;</ept> dependency configurations.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160126T144455Z" creationid="95" creationdate="20160126T143830Z">
        <seg>当通过 Signing DSL指定什么要被签名的时候，生成的signature会自动地加入到 <bpt i="0" x="0">&lt;c0&gt;</bpt>signatures<ept i="0">&lt;/c0&gt;</ept> 和 <bpt i="1" x="1">&lt;c1&gt;</bpt>archives<ept i="1">&lt;/c1&gt;</ept> 的依赖配置中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When the <bpt i="0" x="0">&lt;c0&gt;</bpt>visual-studio<ept i="0">&lt;/c0&gt;</ept> plugin is applied, a task name <bpt i="1" x="1">&lt;c1&gt;</bpt>${component.name}VisualStudio<ept i="1">&lt;/c1&gt;</ept> is created for each defined component.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T095242Z" creationid="haohang" creationdate="20160408T095242Z">
        <seg>当应用 <bpt i="0" x="0">&lt;c0&gt;</bpt>visual-studio<ept i="0">&lt;/c0&gt;</ept> 插件后，会为每一个定义的组件创建一个名为 <bpt i="1" x="1">&lt;c1&gt;</bpt>${component.name}VisualStudio<ept i="1">&lt;/c1&gt;</ept> 的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When the Eclipse plugin encounters a Scala project, it adds additional configuration to make the project work with Scala IDE out of the box.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T081956Z" creationid="msdx" creationdate="20150503T081956Z">
        <seg>当 Eclipse 插件遇到 Scala 项目时，它将添加额外的配置，使得项目能够在使用 Scala IDE 时开箱即用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When the IDEA plugin encounters a Scala project, it adds additional configuration to make the project work with IDEA out of the box.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T082121Z" creationid="msdx" creationdate="20150503T082121Z">
        <seg>当 IDEA 插件遇到 Scala 项目时，它将添加额外的配置，使得项目能够在使用 IDEA 时开箱即用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When the archive is generated, a corresponding <bpt i="3" x="3">&lt;c3&gt;</bpt>MANIFEST.MF<ept i="3">&lt;/c3&gt;</ept> file is written into the archive.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T145209Z" creationid="msdx" creationdate="20150428T145209Z">
        <seg>当生成archive时，相应的<bpt i="3" x="3">&lt;c3&gt;</bpt>MANIFEST.MF<ept i="3">&lt;/c3&gt;</ept>文件也会被写入进去。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When the command line option is used, the inclusion filters declared in the build script are ignored.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T023342Z" creationid="Administrator" creationdate="20150428T023342Z">
        <seg>当使用该命令行选项选项时，在构建脚本中声明的列入过滤器的测试将会被忽略。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When the dependency is declared by a static version and a module descriptor file is found in a repository, there is no need to continue searching later repositories and the remainder of the process is short-circuited.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T053701Z" creationid="95" creationdate="20151007T024210Z">
        <seg>当依赖由一个静态版本来声明，并且在仓库中找到模块描述符文件时，将不会再继续搜索后面的仓库，这个过程的其余部分是短路的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When the last parameter of a method is a closure, you can place the closure after the method call:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T063355Z" creationid="msdx" creationdate="20141108T063355Z">
        <seg>当方法的最后一个参数是一个闭包时，你可以把闭包放在方法调用之后：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When these large dependency trees need to change, you'll often have to solve some dependency version conflicts.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150720T064303Z" creationid="haohang" creationdate="20150720T063608Z">
        <seg>当这些大的依赖树需要更改时，你经常得解决一些依赖的版本冲突。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When using JUnit, we scan for both JUnit 3 and 4 test classes.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T040928Z" creationid="Administrator" creationdate="20150428T040928Z">
        <seg>当使用 JUnit 时，我们扫描 JUnit 3 和 4 的测试类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When using TestNG, we scan for methods annotated with <bpt i="0" x="0">&lt;c0&gt;</bpt>@Test<ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T041153Z" creationid="Administrator" creationdate="20150428T041153Z">
        <seg>当使用 TestNG 时，我们扫描所有带有<bpt i="0" x="0">&lt;c0&gt;</bpt>@Test<ept i="0">&lt;/c0&gt;</ept>注解的方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When using test driven development, where the unit tests are executed many times.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141117T132951Z" creationid="msdx" creationdate="20141117T132951Z">
        <seg>当使用测试驱动开发时，单元测试会被执行多次。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When using the <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>VisualCpp<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> tool chain, Gradle is able to compile Window Resource (<bpt i="2" x="2">&lt;c2&gt;</bpt>rc<ept i="2">&lt;/c2&gt;</ept>) files and link them into a native binary.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160324T153208Z" creationid="95" creationdate="20160324T153150Z">
        <seg>当使用<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>VisualCpp<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>工具链时，Gradle 时能够编译Window Resource (<bpt i="2" x="2">&lt;c2&gt;</bpt>rc<ept i="2">&lt;/c2&gt;</ept>) 文件并将它们链接到本地的二进制文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When we have executed the <bpt i="0" x="0">&lt;c0&gt;</bpt>hello<ept i="0">&lt;/c0&gt;</ept> task from the root project dir things behaved in an intuitive way.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160530T151959Z" creationid="95" creationdate="20160530T151924Z">
        <seg>当我们从根项目的目录执行了<bpt i="0" x="0">&lt;c0&gt;</bpt>hello<ept i="0">&lt;/c0&gt;</ept>任务时，事情会以一种直观的方式来表现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When you configure the <bpt i="0" x="0">&lt;c0&gt;</bpt>Wrapper<ept i="0">&lt;/c0&gt;</ept> task, you can specify the Gradle version you wish to use.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161217T161253Z" creationid="95" creationdate="20161217T161253Z">
        <seg>当你配置<bpt i="0" x="0">&lt;c0&gt;</bpt>Wrapper<ept i="0">&lt;/c0&gt;</ept>任务时，你可以指定你想要使用的 Gradle 版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When you declare an enhanced task, you specify the type, or class of the task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T143525Z" creationid="95" creationdate="20160814T143525Z">
        <seg>当你定义一个增强型任务时，你要定义这个任务的类型或者是类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When you define a new source set, the Java plugin adds some dependency configurations for the source set, as shown in <bpt i="0" x="0">&lt;a0&gt;</bpt>Table 23.6, “Java plugin - source set dependency configurations”<ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T132936Z" creationid="Administrator" creationdate="20150427T132936Z">
        <seg>当您定义一个新的源集时，Java 插件会为该源集添加一些依赖配置，如<bpt i="0" x="0">&lt;a0&gt;</bpt>表 23.6，“Java 插件 - 源集依赖项配置”<ept i="0">&lt;/a0&gt;</ept>所示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When you import an Ant build, each Ant target is treated as a Gradle task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T060755Z" creationid="msdx" creationdate="20141116T060755Z">
        <seg>当您导入一个 Ant 构建时，每个 Ant 目标被视为一个 Gradle 任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When you register a logger, only the logging for the interfaces that it implements is replaced.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T155025Z" creationid="msdx" creationdate="20141116T155025Z">
        <seg>当你注册一个logger时，只能替换它实现的接口的日志记录。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When you resolve a <bpt i="6" x="6">&lt;s6&gt;</bpt><bpt i="7" x="7">&lt;e7&gt;</bpt>changing module<ept i="7">&lt;/e7&gt;</ept><ept i="6">&lt;/s6&gt;</ept>, the artifacts are named using the version you requested, but the underlying artifacts may change over time.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T012307Z" creationid="haohang" creationdate="20150722T012307Z">
        <seg>当你解析一个<bpt i="6" x="6">&lt;s6&gt;</bpt><bpt i="7" x="7">&lt;e7&gt;</bpt>变化模块<ept i="7">&lt;/e7&gt;</ept><ept i="6">&lt;/s6&gt;</ept>时，这个 artifacts 使用你请求的版本进行命名，但下层的 artifacts 可能随时会有变化。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When you run Gradle, it checks for the existence of a directory called <bpt i="0" x="0">&lt;c0&gt;</bpt>buildSrc<ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T051158Z" creationid="95" creationdate="20161211T051158Z">
        <seg>当你运行Gradle时，它会检查<bpt i="0" x="0">&lt;c0&gt;</bpt>buildSrc<ept i="0">&lt;/c0&gt;</ept>目录是否存在。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When you set <bpt i="0" x="0">&lt;c0&gt;</bpt>archiveTask.baseName<ept i="0">&lt;/c0&gt;</ept> to a value other than the default, make sure to set <bpt i="1" x="1">&lt;c1&gt;</bpt>uploadTask.repositories.mavenDeployer.pom.artifactId<ept i="1">&lt;/c1&gt;</ept> to the same value.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T142040Z" creationid="95" creationdate="20160106T142040Z">
        <seg>当你将<bpt i="0" x="0">&lt;c0&gt;</bpt>archiveTask.baseName<ept i="0">&lt;/c0&gt;</ept>设置为非默认值时，请确保将<bpt i="1" x="1">&lt;c1&gt;</bpt>uploadTask.repositories.mavenDeployer.pom.artifactId<ept i="1">&lt;/c1&gt;</ept>设置为相同的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>When you start a Gradle build via the wrapper, Gradle will be automatically downloaded and used to run the build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161217T142918Z" creationid="95" creationdate="20161217T142918Z">
        <seg>当你通过包装器启动 Gradle 构建时，Gradle 将被自动下载并用于运行这个构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Where does this method come from?</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T040115Z" creationid="msdx" creationdate="20141108T040115Z">
        <seg>这方法从何而来？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Where to next?</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163421Z" creationid="msdx" creationdate="20141109T163419Z">
        <seg>下一步目标？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Which libraries depend on the protocol you need.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T134456Z" creationid="95" creationdate="20160105T134456Z">
        <seg>具体是哪些库，将取决于你需要的协议。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>While Gradle has strong opinions on dependency management, the tool gives you a choice between two options: follow recommended best practices or support any kind of pattern you can think of.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150716T083718Z" creationid="haohang" creationdate="20150716T083613Z">
        <seg>由于 Gradle 对依赖管理有强烈的主张，该工具使你可以选择两个选项之间：遵循推荐的最佳实践或支持任何你能想到的类型的模式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>While Maven provides a complete build system, Ivy focuses solely on dependency management.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150716T074045Z" creationid="haohang" creationdate="20150716T074045Z">
        <seg>Maven 提供了一个完整的构建系统，而 Ivy 则完全着眼于依赖管理。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>While all tasks of type <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Test<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> are automatically enhanced to provide coverage information when the <bpt i="2" x="2">&lt;c2&gt;</bpt>java<ept i="2">&lt;/c2&gt;</ept> plugin has been applied, any task that implements <bpt i="3" x="3">&lt;a3&gt;</bpt><bpt i="4" x="4">&lt;c4&gt;</bpt>JavaForkOptions<ept i="4">&lt;/c4&gt;</ept><ept i="3">&lt;/a3&gt;</ept> can be enhanced by the JaCoCo plugin.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T135425Z" creationid="msdx" creationdate="20150506T132327Z">
        <seg>虽然<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Test<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>的所有任务会在<bpt i="2" x="2">&lt;c2&gt;</bpt>java<ept i="2">&lt;/c2&gt;</ept>插件被配置使用时会自动增强以提供覆盖率信息，但是任何实现了<bpt i="3" x="3">&lt;a3&gt;</bpt><bpt i="4" x="4">&lt;c4&gt;</bpt>JavaForkOptions<ept i="4">&lt;/c4&gt;</ept><ept i="3">&lt;/a3&gt;</ept>的任务都可以通过 JaCoCo 插件得到增强。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>While certainly useful at times, we do recommend to keep the bulk of the configuration in a (versioned) build script, readily available to everyone.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150525T234201Z" creationid="haohang" creationdate="20150525T234201Z">
        <seg>虽然有时当然很有用，但我们建议在 （版本控制的）构建脚本中，能够方便地让每个人都保持大部分的配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>While it's possible to configure these in your local environment via GRADLE_OPTS or JAVA_OPTS, certain settings like JVM memory settings, Java home, daemon on/off can be more useful if they can versioned with the project in your VCS so that the entire team can work with consistent environment.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141119T152950Z" creationid="msdx" creationdate="20141119T064744Z">
        <seg>当可以通过 GRADLE_OPTS 或 JAVA_OPTS 在你的本地环境中配置这些选项时，如果某些设置如 JVM 内存设置， Java home， 守护进程的开/关，它们可以和你的项目在你的版本控制系统中被版本化的话，将会更有用，这样整个团队就可以使用一致的环境了。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>While many excellent build tools exist for this space of software development, Gradle offers developers it's trademark power and flexibility together with the dependency management practices more traditionally found in the JVM development space.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160128T152540Z" creationid="95" creationdate="20160128T152004Z">
        <seg>虽然对于这种软件开发的空间，已经有许多优秀的构建工具存在，但是Gradle 向开发人员提供的是它的强大特征和灵活性，以及在依赖管理实践上，在JVM开发空间上更为传统的发现。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>While parallel execution does not strictly require decoupling at configuration time, the long-term goal is to provide a powerful set of features that will be available for fully decoupled projects.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T090509Z" creationid="haohang" creationdate="20160726T090509Z">
        <seg>而并行执行并不严格要求在配置时解耦，它的长期目标是提供一套强大的可用于全解耦的项目的功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>While the <bpt i="0" x="0">&lt;c0&gt;</bpt>c<ept i="0">&lt;/c0&gt;</ept> plugin defines these default locations for each <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>CSourceSet<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>, it is possible to extend or override these defaults to allow for a different project layout.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160225T090539Z" creationid="haohang" creationdate="20160225T090539Z">
        <seg>而<bpt i="0" x="0">&lt;c0&gt;</bpt>c<ept i="0">&lt;/c0&gt;</ept>插件为每个<bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>CSourceSet<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>定义了这些默认的位置，且可以扩展或重写这些默认值使能够成为不同的项目布局。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>While the <bpt i="0" x="0">&lt;c0&gt;</bpt>cpp<ept i="0">&lt;/c0&gt;</ept> plugin defines these default locations for each <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>CppSourceSet<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>, it is possible to extend or override these defaults to allow for a different project layout.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160225T085455Z" creationid="haohang" creationdate="20160225T085455Z">
        <seg>而<bpt i="0" x="0">&lt;c0&gt;</bpt>cpp<ept i="0">&lt;/c0&gt;</ept>插件为每个<bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>CppSourceSet<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>定义了这些默认的位置，且可以扩展或重写这些默认值使能够成为不同的项目布局。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>While the <bpt i="1" x="1">&lt;c1&gt;</bpt>build type<ept i="1">&lt;/c1&gt;</ept> and <bpt i="2" x="2">&lt;c2&gt;</bpt>target platform<ept i="2">&lt;/c2&gt;</ept> variant dimensions have a defined meaning in Gradle, each project is free to define any number of flavors and apply meaning to them in any way.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T080853Z" creationid="haohang" creationdate="20160408T080853Z">
        <seg>在Gradle中 <bpt i="1" x="1">&lt;c1&gt;</bpt>build type<ept i="1">&lt;/c1&gt;</ept> 和 <bpt i="2" x="2">&lt;c2&gt;</bpt>target platform<ept i="2">&lt;/c2&gt;</ept> 变种维度是有一个确定的定义的，而每一个project都可以自由地定义数量的flavor并且用任何方式去应用它们的意义。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>While the build continued to work, developers were starting to notice all sorts of surprising (and surprisingly awful) bugs in production.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150721T055631Z" creationid="haohang" creationdate="20150721T055631Z">
        <seg>虽然可以继续构建，开发者已经开始注意到在生产中出现了各种令人惊讶（和惊人可怕）的 bug。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>While the strategies introduced above are usually enough to solve most conflicts, Gradle provides more fine-grained mechanisms to resolve version conflicts:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150721T090203Z" creationid="haohang" creationdate="20150721T083501Z">
        <seg>虽然上面介绍的策略通常足够解决大部分的冲突，但是 Gradle 也提供更细粒度的机制，以解决版本冲突：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>While the version of a jar is usually in the Manifest file, it isn't readily apparent when you are inspecting a project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150716T092308Z" creationid="haohang" creationdate="20150716T092205Z">
        <seg>Jar 的版本通常是在清单文件中，当你要检查一个项目时它并不显而易见。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>While this new mechanism is <bpt i="2" x="2">&lt;a2&gt;</bpt>incubating<ept i="2">&lt;/a2&gt;</ept> and not yet complete, it introduces some new concepts and features that do (and will) make Gradle publishing even more powerful.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151220T120620Z" creationid="95" creationdate="20151220T120615Z">
        <seg>这种新机制现在还在<bpt i="2" x="2">&lt;a2&gt;</bpt>孵化中<ept i="2">&lt;/a2&gt;</ept>而尚未完成，它引入了一些新的概念和特性，它们将使 Gradle 的发布功能更强大。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>While this provides a great deal of power and flexibility to the build author, it also limits the flexibility that Gradle has when building those projects.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T092334Z" creationid="haohang" creationdate="20160726T092334Z">
        <seg>虽然这能为构建作者提供强大的功能和灵活性，但它也限制了在构建这些项目时Gradle 的灵活性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>While you are working in a typical development cycle repeatedly building and testing changes to the :api project (knowing that you are only changing files in this one project), you may not want to even suffer the expense of :shared:compile checking to see what has changed in the :shared project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160727T051820Z" creationid="haohang" creationdate="20160726T095313Z">
        <seg>当你在进行一个典型的开发周期的构建，或者是测试:api项目的修改（要知道你只修改了一个项目的文件），你可能不想经历:shared:compile 花费检查来看在:shared项目里修改了什么内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>While you could try to manage this problem manually, you will quickly find that this approach doesn't scale.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150720T065111Z" creationid="haohang" creationdate="20150720T065111Z">
        <seg>虽然你可以尝试手动管理这个问题，你很快就会发现这种方法不能扩展。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Why Groovy?</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162016Z" creationid="msdx" creationdate="20141109T162016Z">
        <seg>为什么使用 Groovy?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Why are you using the Java plugin?</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T145808Z" creationid="msdx" creationdate="20141113T145808Z">
        <seg>为什么要用 Java 插件？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Wildcard '*' is supported for matching any characters</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T023019Z" creationid="Administrator" creationdate="20150428T023019Z">
        <seg>通配符 “*” 支付匹配任何字符</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Windows</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T065612Z" creationid="haohang" creationdate="20150628T065612Z">
        <seg>Windows</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Windows Resources</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070443Z" creationid="95" creationdate="20170416T070443Z">
        <seg>Windows 资源</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Windows XP and later, Visual C++ 2010 and later.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160128T153521Z" creationid="95" creationdate="20160128T153521Z">
        <seg>Windows XP及以上，Visual C++ 2010 及以上版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Windows XP and later, using GCC distributed with Cygwin.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160128T153546Z" creationid="95" creationdate="20160128T153546Z">
        <seg>Windows XP及以上，使用Cygwin的GCC。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Windows XP and later.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160128T153557Z" creationid="95" creationdate="20160128T153557Z">
        <seg>Windows XP 及以上。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Windows resources to be included in a native binary are provided via a <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>WindowsResourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>, which defines a set of Windows Resource source files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160325T020630Z" creationid="95" creationdate="20160324T153250Z">
        <seg>将 Windows 资源包含进本机二进制文件中，是通过一个<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>WindowsResourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>提供的，它定义了一组Windows Resource源文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Windows, Mac OS X, Ubuntu</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T090847Z" creationid="haohang" creationdate="20150628T090847Z">
        <seg>Windows, Mac OS X, Ubuntu</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>With Gradle or Ivy, the case is different.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150724T042902Z" creationid="haohang" creationdate="20150724T042902Z">
        <seg>而使用 Gradle 或Ivy的话，情况就不同了。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>With Gradle this is simple:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170304T033010Z" creationid="95" creationdate="20170304T033010Z">
        <seg>使用 Gradle 的话很简单︰</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>With Gradle you can deploy to remote Maven repositories or install to your local Maven repository.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160104T153312Z" creationid="95" creationdate="20160104T153312Z">
        <seg>通过 Gradle你可以部署到远程 Maven 仓库，或者是安装到你的本地 Maven 仓库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>With Gradle you can mix and match approaches; for example, you could store your jars in an SCM without XML descriptor files and still use transitive dependency management.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150721T054126Z" creationid="haohang" creationdate="20150721T054126Z">
        <seg>通过 Gradle 你可以混合使用和适配一些方法；例如，你可以在 SCM 中存储你的 jar 包，而不需要 XML 描述符文件，并且仍然使用传递依赖管理。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>With Gradle you just don't configure them via XML but directly via their API.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151007T022547Z" creationid="95" creationdate="20151007T022547Z">
        <seg>通过Gradle，你只是不用通过XML来配置它们，而是通过它们的API。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>With Gradle, it's very simple to implement a task that gets skipped when all of it's inputs and outputs are up to date (see <bpt i="0" x="0">&lt;a0&gt;</bpt>Section 15.9, “Skipping tasks that are up-to-date”<ept i="0">&lt;/a0&gt;</ept>).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160815T152348Z" creationid="95" creationdate="20160815T152348Z">
        <seg>通过Gradle，实现一个当输入和输出都是up to date时自动跳过的任务是非常轻松的（参见<bpt i="0" x="0">&lt;a0&gt;</bpt>第 15.9节，“跳过 up-to-date 的任务”<ept i="0">&lt;/a0&gt;</ept>）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>With Gradle, you can adapt your new build to any existing source of dependencies or dependency metadata.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150716T040813Z" creationid="haohang" creationdate="20150716T040813Z">
        <seg>使用 Gradle，你可以让你的新构建适配任何现有的依赖来源或依赖元数据。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>With a good conflict reporting tool like Gradle, that information can be used to communicate with the entire organization and standardize on a single version.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150721T060708Z" creationid="haohang" creationdate="20150721T060708Z">
        <seg>通过一个好的冲突报告工具，像 Gradle，这些信息可以用于与整个组织沟通，并在一个单一的版本上实现标准化。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>With enhanced tasks, you don't need to implement the task behaviour as you do with simple tasks.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T143316Z" creationid="95" creationdate="20160814T143316Z">
        <seg>使用这些增强型的任务，你不需要像使用简单任务一样去实现这个任务的行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>With hundreds of thousands of interdependent open source components each with a range of versions and incompatibilities, dependency management has a habit of causing problems as builds grow in complexity.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150716T081115Z" creationid="haohang" creationdate="20150716T035020Z">
        <seg>成千上万的开源组件互相依赖，每个组件都有一系列的版本及不兼容性，随着构建变得越来越复杂，依赖管理常常出现各种问题。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>With more and more CPU cores available on developer desktops and CI servers, it is important that Gradle is able to fully utilise these processing resources.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T085555Z" creationid="haohang" creationdate="20160726T085555Z">
        <seg>随着在开发人员的台式机和CI服务器上，有越来越多的CPU内核可用，Gradle 能够充分利用这些处理资源就很重要。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>With the <bpt i="0" x="0">&lt;c0&gt;</bpt>-D<ept i="0">&lt;/c0&gt;</ept> command line option you can pass a system property to the JVM which runs Gradle.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T075831Z" creationid="msdx" creationdate="20141109T073926Z">
        <seg> 从Gradle 启动的 JVM，你可以使用<bpt i="0" x="0">&lt;c0&gt;</bpt>-D<ept i="0">&lt;/c0&gt;</ept>命令行选项向它传入一个系统属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>With the <bpt i="0" x="0">&lt;c0&gt;</bpt>gradle.properties<ept i="0">&lt;/c0&gt;</ept> files you can also set system properties.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T150123Z" creationid="msdx" creationdate="20141109T150123Z">
        <seg>通过<bpt i="0" x="0">&lt;c0&gt;</bpt>gradle.properties<ept i="0">&lt;/c0&gt;</ept>文件，你还可以设置系统属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>With the Zinc based compiler, even Java code will be compiled incrementally.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T155245Z" creationid="msdx" creationdate="20150501T155245Z">
        <seg>使用基于 Zinc 的编译器时，即使是 Java 代码也将会进行增量编译。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>With the coming releases the API will grow to provide more information about the resolution result.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T033819Z" creationid="haohang" creationdate="20150807T033819Z">
        <seg>在未来的版本，这个API 将提供更多有关解析结果的详细信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>With the help of the Project report plugin (see <bpt i="1" x="1">&lt;a1&gt;</bpt>Chapter 41, <bpt i="2" x="2">&lt;i2&gt;</bpt>The Project Report Plugin<ept i="2">&lt;/i2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>) such a report can be created by your build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T033055Z" creationid="haohang" creationdate="20150807T032917Z">
        <seg>通过使用 Project report 插件（参阅 <bpt i="1" x="1">&lt;a1&gt;</bpt>第 41 章， <bpt i="2" x="2">&lt;i2&gt;</bpt>Project Report 插件<ept i="2">&lt;/i2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>），在构建中可以创建一个这样的报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>With the introduction of directory tasks (see <bpt i="1" x="1">&lt;a1&gt;</bpt>Section 14.1, “Directory creation”<ept i="1">&lt;/a1&gt;</ept>) this was no longer possible, as the name of the directory task contains the <bpt i="2" x="2">&lt;c2&gt;</bpt>'/'<ept i="2">&lt;/c2&gt;</ept> character.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T061858Z" creationid="haohang" creationdate="20160718T061858Z">
        <seg>在引入目录任务（见<bpt i="1" x="1">&lt;a1&gt;</bpt>第 14.1节，“创建目录”<ept i="1">&lt;/a1&gt;</ept>）后将不能再这样做，因为目录任务的名称包含<bpt i="2" x="2">&lt;c2&gt;</bpt>/<ept i="2">&lt;/c2&gt;</ept>字符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>With the map notation you can define all properties.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150724T034930Z" creationid="haohang" creationdate="20150724T034930Z">
        <seg>而通过使用 map 标记法，你可以定义所有的属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>With these rules present it is still possible to execute <bpt i="0" x="0">&lt;c0&gt;</bpt>taskA<ept i="0">&lt;/c0&gt;</ept> without <bpt i="1" x="1">&lt;c1&gt;</bpt>taskB<ept i="1">&lt;/c1&gt;</ept> and vice-versa.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T012755Z" creationid="msdx" creationdate="20141111T012610Z">
        <seg>目前使用这些规则仍有可能出现<bpt i="0" x="0">&lt;c0&gt;</bpt>taskA<ept i="0">&lt;/c0&gt;</ept>执行而<bpt i="1" x="1">&lt;c1&gt;</bpt>taskB<ept i="1">&lt;/c1&gt;</ept> 没有执行，或者<bpt i="0" x="0">&lt;c0&gt;</bpt>taskB<ept i="0">&lt;/c0&gt;</ept>执行而<bpt i="1" x="1">&lt;c1&gt;</bpt>taskA<ept i="1">&lt;/c1&gt;</ept> 没有执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>With this builder, any element listed in the <bpt i="1" x="1">&lt;a1&gt;</bpt>Maven POM reference<ept i="1">&lt;/a1&gt;</ept> can be added.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T142919Z" creationid="95" creationdate="20160106T142919Z">
        <seg>通过这个生成器，<bpt i="1" x="1">&lt;a1&gt;</bpt>Maven POM 参考<ept i="1">&lt;/a1&gt;</ept>中列出的任何元素都可以被添加进来。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Within a project you can address a task of the same project just by its name.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T061728Z" creationid="haohang" creationdate="20160718T061728Z">
        <seg>在一个项目内，你可以通过任务的名称得到同一个项目的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Without modifying the <bpt i="0" x="0">&lt;c0&gt;</bpt>build.gradle<ept i="0">&lt;/c0&gt;</ept> file, the wrapper plugin can be auto-applied to the rootproject of the current build by running <bpt i="1" x="1">&lt;c1&gt;</bpt>gradle wrapper<ept i="1">&lt;/c1&gt;</ept> from the commandline.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150710T012800Z" creationid="haohang" creationdate="20150710T012800Z">
        <seg>不需要修改<bpt i="0" x="0">&lt;c0&gt;</bpt>build.gradle<ept i="0">&lt;/c0&gt;</ept>文件，该 wrapper 插件可以通过从命令行运行<bpt i="1" x="1">&lt;c1&gt;</bpt>gradle wrapper<ept i="1">&lt;/c1&gt;</ept>，自动应用到当前构建的 rootproject 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Without this, in the example above, we would have had to reconfigure every object that needs to work with the class files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141124T100039Z" creationid="msdx" creationdate="20141124T095513Z">
        <seg>如果没有这一点，在上面的例子中，我们将不得不重新配置需要使用类文件的每个对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Working With Files</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150330T141113Z" creationid="Administrator" creationdate="20150330T141113Z">
        <seg>使用文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Working through problems</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162241Z" creationid="msdx" creationdate="20141109T162241Z">
        <seg>解决问题</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Working with dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070139Z" creationid="95" creationdate="20170416T070139Z">
        <seg>使用依赖</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Working with files in custom tasks and plugins</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070745Z" creationid="95" creationdate="20170416T070745Z">
        <seg>在自定义任务和插件中使用文件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Working with source sets</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131701Z" creationid="msdx" creationdate="20150509T131701Z">
        <seg>使用source sets</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Works with</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141209T073446Z" creationid="msdx" creationdate="20141126T120900Z">
        <seg>与什么插件一起使用</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Workspace</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T073757Z" creationid="haohang" creationdate="20150625T073757Z">
        <seg>Workspace</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Worse yet, this unintentional downgrade of Spring introduced several security vulnerabilities into the system, which now required a full security audit throughout the organization.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150721T055755Z" creationid="haohang" creationdate="20150721T055755Z">
        <seg>然而，更糟糕的是，无意降低版本的 Spring 向系统引入了几个安全漏洞，现在需要在整个组织中进行全面的安全审核。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Wrapper</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T071604Z" creationid="haohang" creationdate="20150707T071604Z">
        <seg>Wrapper</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Wrapper Plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070045Z" creationid="95" creationdate="20170416T070045Z">
        <seg>Wrapper 插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Writing Build Scripts</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T031200Z" creationid="msdx" creationdate="20141108T031200Z">
        <seg>编写构建脚本</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Writing Custom Plugins</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070721Z" creationid="95" creationdate="20170416T070721Z">
        <seg>编写自定义插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Writing Custom Task Classes</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070654Z" creationid="95" creationdate="20170416T070654Z">
        <seg>编写自定义任务类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Writing a simple plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070735Z" creationid="95" creationdate="20170416T070735Z">
        <seg>编写一个简单的插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Writing a simple task class</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070705Z" creationid="95" creationdate="20170416T070705Z">
        <seg>编写一个简单的任务类</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Writing an init script</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070926Z" creationid="95" creationdate="20170416T070926Z">
        <seg>写一个 init 脚本</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Writing this chapter was pretty exhausting and reading it might have a similar effect.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160727T053713Z" creationid="haohang" creationdate="20160727T053554Z">
        <seg>写这一章相当耗费精力，可能你想起来也有同样的感受。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Writing your own log messages</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150330T141316Z" creationid="Administrator" creationdate="20150330T141316Z">
        <seg>编写自己的日志消息</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>WtpComponent</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T105350Z" creationid="haohang" creationdate="20150624T105350Z">
        <seg>WtpComponent</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>WtpFacet</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T105406Z" creationid="haohang" creationdate="20150624T105406Z">
        <seg>WtpFacet</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>XmlProvider</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T105256Z" creationid="haohang" creationdate="20150624T105256Z">
        <seg>XmlProvider</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Yet Gradle offers complete transitive dependency management.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151201T062536Z" creationid="haohang" creationdate="20151201T062536Z">
        <seg>然而 Gradle 能提供完整的传递依赖管理。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Yet they usually do not contain relevant information for what has gone wrong in <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>your<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> code.)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T113051Z" creationid="msdx" creationdate="20141116T113051Z">
        <seg>然而他们通常不包含<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>你的<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>的代码中哪里错了的相关信息。）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Yet, this approach may not be the most efficient in a very large multi-project builds.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160522T120629Z" creationid="95" creationdate="20160522T120629Z">
        <seg>然而，在一个非常大的多项目构建里，这种方法可能不是最有效的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You also might want to refactor some part of the :api project that is used in other projects.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160727T052419Z" creationid="haohang" creationdate="20160727T052322Z">
        <seg>你也可能想要重构:api 项目中一些被其他项目用到的内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You are able to construct a resource-only library by providing Windows Resource sources with no other language sources, and configure the linker as appropriate:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160325T023053Z" creationid="haohang" creationdate="20160325T023053Z">
        <seg>你能够通过提供没有任何其他语言来源的 Windows Resource 源文件，来构造纯资源库，并适当地配置链接器︰</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You are building with a different version of Gradle.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160816T150235Z" creationid="95" creationdate="20160816T150235Z">
        <seg>你使用一个不同版本的Gradle进行构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can access Ant types in the same way that you access tasks, using the name of the type as the method name.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141115T171109Z" creationid="msdx" creationdate="20141115T162803Z">
        <seg>您可以用访问任务同样的方法，把类型名字作为方法名称，访问 Ant 类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can access a project property in your build script simply by using its name as you would use a variable.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T151349Z" creationid="msdx" creationdate="20141109T151343Z">
        <seg>当你要使用一个变量时，你可以仅通过其名称在构建脚本中访问一个项目的属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can access tasks from any project using the task's path using the <bpt i="0" x="0">&lt;c0&gt;</bpt>tasks.getByPath()<ept i="0">&lt;/c0&gt;</ept> method.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T082149Z" creationid="msdx" creationdate="20141110T081714Z">
        <seg>您可以从任何项目中，使用<bpt i="0" x="0">&lt;c0&gt;</bpt>tasks.getByPath()<ept i="0">&lt;/c0&gt;</ept>方法获取任务路径并且通过这个路径来访问任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can access the source sets of a project using the <bpt i="0" x="0">&lt;c0&gt;</bpt>sourceSets<ept i="0">&lt;/c0&gt;</ept> property.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T050501Z" creationid="Administrator" creationdate="20150427T050501Z">
        <seg>你可以使用<bpt i="0" x="0">&lt;c0&gt;</bpt>sourceSets<ept i="0">&lt;/c0&gt;</ept>属性访问项目的源集。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can achieve this either by using <bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>build sources<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept> or by adding an <bpt i="3" x="3">&lt;a3&gt;</bpt>external library<ept i="3">&lt;/a3&gt;</ept> that contains the plugin.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T044624Z" creationid="95" creationdate="20161211T044624Z">
        <seg>你可以通过使用<bpt i="1" x="1">&lt;a1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>build sources<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/a1&gt;</ept>，或者是添加一个包含了该插件的<bpt i="3" x="3">&lt;a3&gt;</bpt>外部 library<ept i="3">&lt;/a3&gt;</ept>，来获得这个插件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can achieve this with:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T015817Z" creationid="msdx" creationdate="20141111T015817Z">
        <seg>你可以这样实现：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can add a description to your task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T015024Z" creationid="msdx" creationdate="20141111T015024Z">
        <seg>你可以向你的任务添加描述。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can add a task which depends on an Ant target:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T060954Z" creationid="msdx" creationdate="20141116T060954Z">
        <seg>您可以添加一个依赖于 Ant 目标的任务：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can add additional files by configuring the <bpt i="3" x="3">&lt;a3&gt;</bpt><bpt i="4" x="4">&lt;c4&gt;</bpt>Distribution<ept i="4">&lt;/c4&gt;</ept><ept i="3">&lt;/a3&gt;</ept> object that is part of the container.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150701T032421Z" creationid="haohang" creationdate="20150701T032421Z">
        <seg>你可以通过配置作为窗口一部分的 <bpt i="3" x="3">&lt;a3&gt;</bpt><bpt i="4" x="4">&lt;c4&gt;</bpt>Distribution<ept i="4">&lt;/c4&gt;</ept><ept i="3">&lt;/a3&gt;</ept> 对象，来添加额外的文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can add specific behavior on top of the common behavior.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160527T163107Z" creationid="95" creationdate="20160527T162440Z">
        <seg>你可以在共同行为上面再添加特定的行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can add your own custom configuration or let the existing configurations extend from other configurations.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151227T152616Z" creationid="95" creationdate="20151227T152616Z">
        <seg>你可以添加你自己的自定义配置，或者让现有配置继承自扩展配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can also add 2 file collections together using the <bpt i="1" x="1">&lt;c1&gt;</bpt>+<ept i="1">&lt;/c1&gt;</ept> operator, or subtract one file collection from another using the <bpt i="2" x="2">&lt;c2&gt;</bpt>-<ept i="2">&lt;/c2&gt;</ept> operator.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T155814Z" creationid="msdx" creationdate="20141112T155551Z">
        <seg>您还可以使用<bpt i="1" x="1">&lt;c1&gt;</bpt>+<ept i="1">&lt;/c1&gt;</ept>运算符把两个文件集合相加，或使用<bpt i="2" x="2">&lt;c2&gt;</bpt>-<ept i="2">&lt;/c2&gt;</ept>运算符减去一个文件集合。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can also add WAR, ZIP and TAR archives to your project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T145631Z" creationid="msdx" creationdate="20141113T145631Z">
        <seg>您也可以将WAR、 ZIP 和TAG文件添加到您的项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can also add a <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>TaskExecutionGraphListener<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> to the <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>TaskExecutionGraph<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept> to receive these events.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T135731Z" creationid="95" creationdate="20160521T135731Z">
        <seg>你也可以向<bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>TaskExecutionGraph<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>添加一个<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>TaskExecutionGraphListener<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>来接收这些事件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can also add an <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Action<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> to a <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>TaskContainer<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept> to receive these events.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T135230Z" creationid="95" creationdate="20160521T135111Z">
        <seg>你还可以向<bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>TaskContainer<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>添加一个<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Action<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>来接收这些事件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can also add properties directly to your project object via the <bpt i="0" x="0">&lt;c0&gt;</bpt>-P<ept i="0">&lt;/c0&gt;</ept> command line option.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T141157Z" creationid="msdx" creationdate="20141109T141157Z">
        <seg>你也可以通过使用<bpt i="0" x="0">&lt;c0&gt;</bpt>-P<ept i="0">&lt;/c0&gt;</ept>命令行选项来直接向您的项目对象添加属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can also apply the plugin from an init script:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T091735Z" creationid="haohang" creationdate="20150628T091735Z">
        <seg>你还可以从一个 init 脚本应用这个插件：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can also assign collections or arrays of dependency notations to a configuration:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T103635Z" creationid="haohang" creationdate="20150801T103635Z">
        <seg>你也可以向一个配置指定依赖 notations 的集合或数组：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can also configure arbitrary objects using an external script.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T152914Z" creationid="msdx" creationdate="20141109T152914Z">
        <seg>你还可以使用外部脚本配置任意对象</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can also copy a configuration.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T040214Z" creationid="haohang" creationdate="20150807T040214Z">
        <seg>你还可以复制配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can also create dependsOn relations on rule based tasks:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T065626Z" creationid="msdx" creationdate="20141111T065626Z">
        <seg>你也可以对基于规则的任务创建依赖关系：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can also directly add properties to your project objects using properties files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T081010Z" creationid="msdx" creationdate="20141109T081010Z">
        <seg>此外，您也可以通过属性文件向您的project对象添加属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can also find the repository declarations where the Jars are obtained from.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T160252Z" creationid="95" creationdate="20161218T160252Z">
        <seg>你也可以找到获取Jar 的仓库声明。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can also hook into Gradle's logging system from within other classes used in the build (classes from the <bpt i="0" x="0">&lt;c0&gt;</bpt>buildSrc<ept i="0">&lt;/c0&gt;</ept> directory for example).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T033839Z" creationid="msdx" creationdate="20141116T125946Z">
        <seg>您也可以在构建脚本中通过其他使用的类 hook 到 Gradle 的日志系统中（例如 <bpt i="0" x="0">&lt;c0&gt;</bpt>buildSrc<ept i="0">&lt;/c0&gt;</ept> 目录中的类）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can also pass collections, iterables, maps and arrays to the <bpt i="7" x="7">&lt;c7&gt;</bpt>files()<ept i="7">&lt;/c7&gt;</ept> method.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T150811Z" creationid="msdx" creationdate="20141112T150811Z">
        <seg>你也可以将集合，迭代变量，map和数组传递给<bpt i="7" x="7">&lt;c7&gt;</bpt>files()<ept i="7">&lt;/c7&gt;</ept>方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can also pass the <bpt i="0" x="0">&lt;c0&gt;</bpt>files()<ept i="0">&lt;/c0&gt;</ept> method a closure or a <bpt i="1" x="1">&lt;c1&gt;</bpt>Callable<ept i="1">&lt;/c1&gt;</ept> instance.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T160359Z" creationid="msdx" creationdate="20141112T155907Z">
        <seg>你也可以向<bpt i="0" x="0">&lt;c0&gt;</bpt>files()<ept i="0">&lt;/c0&gt;</ept>方法传一个闭包或一个<bpt i="1" x="1">&lt;c1&gt;</bpt>Callable<ept i="1">&lt;/c1&gt;</ept>实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can also specify multiple patterns.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T040224Z" creationid="Administrator" creationdate="20150428T040224Z">
        <seg>你还可以指定多个模式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can also use a <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>TaskExecutionListener<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> to the <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>TaskExecutionGraph<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept> to receive these events.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T140255Z" creationid="95" creationdate="20160521T140146Z">
        <seg>你也可以对<bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>TaskExecutionGraph<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>使用一个<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>TaskExecutionListener<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>来接收这些事件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can also use a configuration closure when you define a task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T095952Z" creationid="msdx" creationdate="20141110T095952Z">
        <seg>您也可以在定义一个任务的时候使用一个配置闭包。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can also use a file to define an artifact:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151226T091036Z" creationid="95" creationdate="20151226T091036Z">
        <seg>你也可以使用一个文件来定义构件：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can also use customization options that the <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Ear<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> task provides, such as <bpt i="2" x="2">&lt;c2&gt;</bpt>from<ept i="2">&lt;/c2&gt;</ept> and <bpt i="3" x="3">&lt;c3&gt;</bpt>metaInf<ept i="3">&lt;/c3&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T143311Z" creationid="msdx" creationdate="20150504T142906Z">
        <seg>你还可以使用<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Ear<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>任务提供的自定义选项，如<bpt i="2" x="2">&lt;c2&gt;</bpt>from<ept i="2">&lt;/c2&gt;</ept>和<bpt i="3" x="3">&lt;c3&gt;</bpt>metaInf<ept i="3">&lt;/c3&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can also use strings for the task names:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T022741Z" creationid="msdx" creationdate="20141110T021721Z">
        <seg>您还可以使用字符串作为任务名称：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can also use the <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Project.copy()<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> method to copy files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T131147Z" creationid="msdx" creationdate="20141113T131132Z">
        <seg>此外，你也可以使用<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Project.copy()<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>方法来复制文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can also use the Ant <bpt i="1" x="1">&lt;c1&gt;</bpt>property<ept i="1">&lt;/c1&gt;</ept> task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T061842Z" creationid="msdx" creationdate="20141116T061842Z">
        <seg>您还可以使用 Ant <bpt i="1" x="1">&lt;c1&gt;</bpt>property<ept i="1">&lt;/c1&gt;</ept> 任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can also visit the contents of the tree, and select a sub-tree using Ant-style patterns:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T120348Z" creationid="msdx" creationdate="20141113T120303Z">
        <seg>你也可以使用Ant风格的模式来访问文件树的内容或选择一个子树：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can always copy a resolved configuration.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T091221Z" creationid="haohang" creationdate="20150807T091221Z">
        <seg>你可以永远复制一个解析了的配置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can call the <bpt i="1" x="1">&lt;c1&gt;</bpt>getByPath()<ept i="1">&lt;/c1&gt;</ept> method with a task name, or a relative path, or an absolute path.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T082106Z" creationid="msdx" creationdate="20141110T082046Z">
        <seg>你可以用任务名称，相对路径或者是绝对路径作为参数调用<bpt i="1" x="1">&lt;c1&gt;</bpt>getByPath()<ept i="1">&lt;/c1&gt;</ept>方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can capture user input by telling the extension container about your plugin.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T124405Z" creationid="95" creationdate="20160820T124405Z">
        <seg>通过你的插件相关的扩展容器，你可以获取用户的输入。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can change the cache expiry times in your build using the <bpt i="1" x="1">&lt;c1&gt;</bpt>resolution strategy<ept i="1">&lt;/c1&gt;</ept> (see <bpt i="2" x="2">&lt;a2&gt;</bpt>Section 50.9.3, “Fine-tuned control over dependency caching”<ept i="2">&lt;/a2&gt;</ept>).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T075048Z" creationid="haohang" creationdate="20150722T074853Z">
        <seg>你可以通过<bpt i="1" x="1">&lt;c1&gt;</bpt>resolution strategy<ept i="1">&lt;/c1&gt;</ept>修改你的构建的缓存到期时间（见<bpt i="2" x="2">&lt;a2&gt;</bpt>第 50.9.3 节，“调整控制依赖缓存”<ept i="2">&lt;/a2&gt;</ept>）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can check if Gradle was able to determine the incremental changes to input files with <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>IncrementalTaskInputs.isIncremental()<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160817T145055Z" creationid="95" creationdate="20160817T145055Z">
        <seg>你可以通过 <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>IncrementalTaskInputs.isIncremental()<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>检查Gradle是否能够对输入的文件确定增量更改。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can choose what is right for your domain and find the right balance between unnecessary indirections, and avoiding redundancy and a hard to maintain code base.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161213T153733Z" creationid="95" creationdate="20161212T155917Z">
        <seg>你可以选择最适合你的领域的方式，并在不必要的间界引用之间找到平衡，避免冗余和难以维护的代码库。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can combine multiple plugins in a single project, so you can use the War and Groovy plugins together to build a Groovy based web application.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T090650Z" creationid="msdx" creationdate="20141030T090650Z">
        <seg>你可以在单个project中组合多个插件，因此你可以一起使用War和Groovy插件来构建一个基于Groovy的web应用程序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can combine this with the <bpt i="4" x="4">&lt;a4&gt;</bpt>Gradle wrapper<ept i="4">&lt;/a4&gt;</ept> as a way to make custom logic available to all builds in your enterprise.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161214T152841Z" creationid="95" creationdate="20161214T152841Z">
        <seg>你可以结合它与<bpt i="4" x="4">&lt;a4&gt;</bpt>Gradle wrapper<ept i="4">&lt;/a4&gt;</ept>作为一种方式，以使自定义逻辑可用于你的企业中的所有构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can configure arbitrary objects in the following very readable way.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T152748Z" creationid="msdx" creationdate="20141109T152725Z">
        <seg>您可以用以下非常易理解的方式配置任意对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can configure the current project using an external build script.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T152207Z" creationid="msdx" creationdate="20141109T152207Z">
        <seg>您可以使用外部构建脚本来配置当前项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can configure the task to not fail on compared outcome differences by setting the <bpt i="0" x="0">&lt;c0&gt;</bpt>ignoreFailures<ept i="0">&lt;/c0&gt;</ept> property to true.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170109T130023Z" creationid="95" creationdate="20170109T130023Z">
        <seg>你也可以通过设置 <bpt i="0" x="0">&lt;c0&gt;</bpt>ignoreFailures<ept i="0">&lt;/c0&gt;</ept> 属性为true，来配置构建结果不同时任务不失败。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can control which tool chain will be used to build by changing the operating system PATH to include the desired tool chain compiler.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160128T153146Z" creationid="95" creationdate="20160128T153146Z">
        <seg>你可以通过更改操作系统的PATH让其包含所需的工具链编译器，来控制使用哪个工具链。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can create a separate project for your plugin.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160818T151523Z" creationid="95" creationdate="20160818T151523Z">
        <seg>你可以为你的插件创建一个单独的项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can create a separate project for your task class.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T145005Z" creationid="95" creationdate="20160814T144929Z">
        <seg>你可以为你的任务类创建一个独立的项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can create stand alone instances of a <bpt i="0" x="0">&lt;c0&gt;</bpt>Manifest<ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T145251Z" creationid="msdx" creationdate="20150428T145251Z">
        <seg>您可以创建一个单独的<bpt i="0" x="0">&lt;c0&gt;</bpt>Manifest<ept i="0">&lt;/c0&gt;</ept>实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can customize these properties:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151226T091147Z" creationid="95" creationdate="20151226T091147Z">
        <seg>你可以自定义这些属性：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can declare a dependency on the API of the current version of Gradle by using the <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>DependencyHandler.gradleApi()<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> method.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T094632Z" creationid="haohang" creationdate="20150801T094632Z">
        <seg>你可以通过使用<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>DependencyHandler.gradleApi()<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>方法，来声明一个当前的 Gradle 版本的 API 上的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can declare a dependency on the Groovy that is distributed with Gradle by using the <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>DependencyHandler.localGroovy()<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> method.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T094806Z" creationid="haohang" creationdate="20150801T094806Z">
        <seg>可以通过使用<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>DependencyHandler.localGroovy()<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>方法，来声明对与 Gradle 一起发布的 Groovy 的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can declare and use plain old Groovy objects (POGOs) directly in your build script.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T043715Z" creationid="95" creationdate="20161211T043715Z">
        <seg>你可以直接在你的构建脚本中定义和使用普通的旧Groovy对象（POGOs）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can declare which tasks produce the files for a file dependency.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T094359Z" creationid="haohang" creationdate="20150801T094359Z">
        <seg>你可以声明哪些任务将产生作为文件依赖的文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can disable the HTML test report using the <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Test.setTestReport()<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> method.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T142123Z" creationid="msdx" creationdate="20150428T142123Z">
        <seg>您可以使用<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Test.setTestReport()<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>方法来禁用 HTML 测试报告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can do this by adding this to the configuration of each project you wish to export:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161212T152627Z" creationid="95" creationdate="20161212T152627Z">
        <seg>你可以通过把它添加到每一个你想导出的项目的配置上来完成：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can do this by using the method <bpt i="0" x="0">&lt;c0&gt;</bpt>hasProperty('propertyName')<ept i="0">&lt;/c0&gt;</ept> which returns <bpt i="1" x="1">&lt;c1&gt;</bpt>true<ept i="1">&lt;/c1&gt;</ept> or <bpt i="2" x="2">&lt;c2&gt;</bpt>false<ept i="2">&lt;/c2&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T152023Z" creationid="msdx" creationdate="20141109T152023Z">
        <seg>你可以通过使用方法<bpt i="0" x="0">&lt;c0&gt;</bpt>hasProperty('propertyName')<ept i="0">&lt;/c0&gt;</ept> 来进行检查，它返回<bpt i="1" x="1">&lt;c1&gt;</bpt>true<ept i="1">&lt;/c1&gt;</ept>或<bpt i="2" x="2">&lt;c2&gt;</bpt>false<ept i="2">&lt;/c2&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can do this with Gradle, but we don't recommend it.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151201T063939Z" creationid="haohang" creationdate="20151201T063939Z">
        <seg>你可以使用 Gradle 来做，但我们不推荐它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can easily depend on these constantly changing dependencies by using a <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>dynamic version<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T010858Z" creationid="haohang" creationdate="20150722T010858Z">
        <seg>你可以通过使用<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>动态版本<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>很容易地依赖这些不断变化的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can easily write a manifest to disk.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T151444Z" creationid="msdx" creationdate="20150428T151444Z">
        <seg>你可以很轻松地把一个manifest写入磁盘中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can even apply other scripts from the external script.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T152349Z" creationid="msdx" creationdate="20141109T152349Z">
        <seg>您甚至可以在外部脚本中应用其他脚本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can exclude a <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>transitive<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept> dependency either by configuration or by dependency:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T094927Z" creationid="haohang" creationdate="20150801T094927Z">
        <seg>通过配置或者是通过依赖，你可以排除一个<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt>传递<ept i="1">&lt;/e1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>依赖：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can execute a build, and listen to stdout and stderr logging and progress (e.g. the stuff shown in the 'status bar' when you run on the command line).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T152413Z" creationid="95" creationdate="20161218T152413Z">
        <seg>你可以执行构建，并且监听标准输出和错误输出的日志和进度（例如当你在命令上运行时显示在“状态栏”上的东西）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can execute the checks by running <bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle check<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T151901Z" creationid="msdx" creationdate="20150504T151901Z">
        <seg>你可以通过运行<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle check<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>执行检查。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can filter the contents of file, rename files, and all the other things you can do with a copy spec.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T154555Z" creationid="msdx" creationdate="20141113T154555Z">
        <seg>您可以通过一个复制规范来筛选文件的内容、 重命名文件和进行其他你可以做的事情。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can find a list of external plugins on the <bpt i="0" x="0">&lt;a0&gt;</bpt>wiki<ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T072534Z" creationid="Administrator" creationdate="20150425T072534Z">
        <seg>你可以在<bpt i="0" x="0">&lt;a0&gt;</bpt>维基<ept i="0">&lt;/a0&gt;</ept>上找到外部插件的列表。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can find more details in the API documentation for <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>SourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T051227Z" creationid="Administrator" creationdate="20150427T051227Z">
        <seg>你可以在<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>SourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>的 API 文档中查看更多的详细信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can find more sample Java projects in the <bpt i="4" x="4">&lt;c4&gt;</bpt>samples/webApplication<ept i="4">&lt;/c4&gt;</ept> directory in the Gradle distribution.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T095946Z" creationid="msdx" creationdate="20141030T095946Z">
        <seg>你可以在Gradle的 <bpt i="4" x="4">&lt;c4&gt;</bpt>samples/webApplication<ept i="4">&lt;/c4&gt;</ept> 目录中找到更多的Java 的示例项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can find out more about closures <bpt i="0" x="0">&lt;a0&gt;</bpt>here<ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T063258Z" creationid="msdx" creationdate="20141108T063258Z">
        <seg>你可以<bpt i="0" x="0">&lt;a0&gt;</bpt>在这里<ept i="0">&lt;/a0&gt;</ept>查看更多有关闭包的资料。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can find out more about the Groovy plugin in <bpt i="0" x="0">&lt;a0&gt;</bpt>Chapter 24, <bpt i="1" x="1">&lt;i1&gt;</bpt>The Groovy Plugin<ept i="1">&lt;/i1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>, and you can find more sample Groovy projects in the <bpt i="2" x="2">&lt;c2&gt;</bpt>samples/groovy<ept i="2">&lt;/c2&gt;</ept> directory in the Gradle distribution.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T070249Z" creationid="msdx" creationdate="20141030T070249Z">
        <seg>你可以在 <bpt i="0" x="0">&lt;a0&gt;</bpt>第24章 <bpt i="1" x="1">&lt;i1&gt;</bpt>Groovy插件<ept i="1">&lt;/i1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>中了解更多关于Groovy 插件的内容，或在Gradle的 <bpt i="2" x="2">&lt;c2&gt;</bpt>samples/groovy<ept i="2">&lt;/c2&gt;</ept>目录中找到更多的Groovy project的例子。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can find out more about the War plugin in <bpt i="0" x="0">&lt;a0&gt;</bpt>Chapter 26, <bpt i="1" x="1">&lt;i1&gt;</bpt>The War Plugin<ept i="1">&lt;/i1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> and the Jetty plugin in <bpt i="2" x="2">&lt;a2&gt;</bpt>Chapter 28, <bpt i="3" x="3">&lt;i3&gt;</bpt>The Jetty Plugin<ept i="3">&lt;/i3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T095829Z" creationid="msdx" creationdate="20141030T095829Z">
        <seg>你可以在 <bpt i="0" x="0">&lt;a0&gt;</bpt>第26章， <bpt i="1" x="1">&lt;i1&gt;</bpt>War插件<ept i="1">&lt;/i1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> 和在<bpt i="2" x="2">&lt;a2&gt;</bpt>第28章 <bpt i="3" x="3">&lt;i3&gt;</bpt>Jetty插件<ept i="3">&lt;/i3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>.中了解到更多有关War插件和Jetty插件的内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can find out more about the copy task in <bpt i="2" x="2">&lt;a2&gt;</bpt>Section 16.6, “Copying files”<ept i="2">&lt;/a2&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T134707Z" creationid="Administrator" creationdate="20150427T134707Z">
        <seg>你可以在<bpt i="2" x="2">&lt;a2&gt;</bpt>16.6章节，“复制文件”<ept i="2">&lt;/a2&gt;</ept>中找到关于copy任务的更多信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can find out more about the listener interfaces in <bpt i="0" x="0">&lt;a0&gt;</bpt>Section 55.6, “Responding to the lifecycle in the build script”<ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T155215Z" creationid="msdx" creationdate="20141116T155215Z">
        <seg>你可以在<bpt i="0" x="0">&lt;a0&gt;</bpt> 55.6章节，“在构建脚本中响应生命周期”<ept i="0">&lt;/a0&gt;</ept>参阅更多有关监听器接口的信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can fine-tune certain aspects of caching using the <bpt i="0" x="0">&lt;c0&gt;</bpt>ResolutionStrategy<ept i="0">&lt;/c0&gt;</ept> for a configuration.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T154822Z" creationid="95" creationdate="20151129T154822Z">
        <seg>你可以在一个配置中通过使用<bpt i="0" x="0">&lt;c0&gt;</bpt>ResolutionStrategy<ept i="0">&lt;/c0&gt;</ept>对缓存的某些方面进行微调。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can fully customize the merge behavior by adding <bpt i="1" x="1">&lt;c1&gt;</bpt>eachEntry<ept i="1">&lt;/c1&gt;</ept> actions in which you have access to a <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>ManifestMergeDetails<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept> instance for each entry of the resulting manifest.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T151256Z" creationid="msdx" creationdate="20150428T151256Z">
        <seg>你可以通过添加<bpt i="1" x="1">&lt;c1&gt;</bpt>eachEntry<ept i="1">&lt;/c1&gt;</ept> action 来完全自定义合并行为，它可以让你对每一项生成的manifest 访问它的一个<bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>ManifestMergeDetails<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can further customize the archive names:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T155608Z" creationid="msdx" creationdate="20141113T155556Z">
        <seg>您可以进一步自定义存档名称：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can generate dependency reports from the command line (see <bpt i="0" x="0">&lt;a0&gt;</bpt>Section 11.6.4, “Listing project dependencies”<ept i="0">&lt;/a0&gt;</ept>).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T032854Z" creationid="haohang" creationdate="20150807T032854Z">
        <seg>你可以从命令行生成依赖报告 （参阅 <bpt i="0" x="0">&lt;a0&gt;</bpt>第11.6.4节，“列出项目依赖”<ept i="0">&lt;/a0&gt;</ept>）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can get the property directly from the <bpt i="0" x="0">&lt;c0&gt;</bpt>AntBuilder<ept i="0">&lt;/c0&gt;</ept> instance.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T062201Z" creationid="msdx" creationdate="20141116T062201Z">
        <seg>你可以直接从<bpt i="0" x="0">&lt;c0&gt;</bpt>AntBuilder<ept i="0">&lt;/c0&gt;</ept>实例获得属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can implement a custom plugin in any language you like, provided the implementation ends up compiled as bytecode.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160818T151120Z" creationid="95" creationdate="20160818T150845Z">
        <seg>你可以使用你喜欢的任何一种语言来实现一个自定义插件，只要这个实现最终能够提供编译的字节码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can implement a custom task class in pretty much any language you like, provided it ends up compiled to bytecode.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T143636Z" creationid="95" creationdate="20160814T143636Z">
        <seg>你可以使用你喜欢的几乎任何一种语言来实现一个自定义任务类，只要它最终能够提供编译的字节码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can include the source for the plugin directly in the build script.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160818T151251Z" creationid="95" creationdate="20160818T151251Z">
        <seg>你可以在构建脚本中直接包含这个插件的源码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can include the task class directly in the build script.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T144001Z" creationid="95" creationdate="20160814T144001Z">
        <seg>你可以在构建脚本中直接包含这个任务类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can influence the location of build dashboard plugin generation via <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>ReportingExtension<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150713T100620Z" creationid="haohang" creationdate="20150713T100620Z">
        <seg>你可以通过 <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>ReportingExtension<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> 修改 build dashboard 插件生成内容的位置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can launch the application in debug mode with <bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>gradle run --debug-jvm<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/s2&gt;</ept> (see <bpt i="4" x="4">&lt;a4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>JavaExec.setDebug()<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/a4&gt;</ept>).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150702T104251Z" creationid="haohang" creationdate="20150702T104251Z">
        <seg>你可以通过<bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>gradle run --debug-jvm<ept i="3">&lt;/c3&gt;</ept> <ept i="2">&lt;/s2&gt;</ept> 在调试模式下启动该应用程序(见<bpt i="4" x="4">&lt;a4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>JavaExec.setDebug()<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/a4&gt;</ept>)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can learn more about how to work with archives in <bpt i="2" x="2">&lt;a2&gt;</bpt>Section 16.8, “Creating archives”<ept i="2">&lt;/a2&gt;</ept> and artifact configurations in <bpt i="3" x="3">&lt;a3&gt;</bpt>Chapter 51, <bpt i="4" x="4">&lt;i4&gt;</bpt>Publishing artifacts<ept i="4">&lt;/i4&gt;</ept><ept i="3">&lt;/a3&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T145012Z" creationid="msdx" creationdate="20150428T144827Z">
        <seg>你可以在<bpt i="2" x="2">&lt;a2&gt;</bpt>第16.8节，“创建档案”<ept i="2">&lt;/a2&gt;</ept>和<bpt i="3" x="3">&lt;a3&gt;</bpt>第51章， <bpt i="4" x="4">&lt;i4&gt;</bpt>发布artifact<ept i="4">&lt;/i4&gt;</ept><ept i="3">&lt;/a3&gt;</ept>中了解如何使用archives和配置artifact。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can locate a file relative to the project directory using the <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Project.file()<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> method.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T043445Z" creationid="msdx" creationdate="20141111T125325Z">
        <seg>你可以使用<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Project.file()<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>方法来找到一个相对于项目目录的文件 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can map a configuration to one and only one scope.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T145037Z" creationid="95" creationdate="20160106T145026Z">
        <seg>你可以把一个configuration映射到一个并且只能是一个scope上。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can merge other manifests into any <bpt i="0" x="0">&lt;c0&gt;</bpt>Manifest<ept i="0">&lt;/c0&gt;</ept> object.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T145414Z" creationid="msdx" creationdate="20150428T145414Z">
        <seg>你可以把其他的manifest 合并到任何一个<bpt i="0" x="0">&lt;c0&gt;</bpt>Manifest<ept i="0">&lt;/c0&gt;</ept>对象中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can modify these descriptors in the settings file at any time.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T070323Z" creationid="haohang" creationdate="20160519T070323Z">
        <seg>你可以在任何时间修改设置文件中的这些描述符。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can navigate from there and find code samples and other instructions.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T155941Z" creationid="95" creationdate="20161218T155941Z">
        <seg>你可以从那里导航和查找代码示例以及其他说明。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can optionally specify that only a subset of dependencies from the original configuration should be copied.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T040303Z" creationid="haohang" creationdate="20150807T040303Z">
        <seg>你可以选择指定只复制原始配置里的一个子集的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can override the default cache modes using <bpt i="0" x="0">&lt;a0&gt;</bpt>command line options<ept i="0">&lt;/a0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T012411Z" creationid="haohang" creationdate="20150722T012411Z">
        <seg>你可以使用<bpt i="0" x="0">&lt;a0&gt;</bpt>命令行选项<ept i="0">&lt;/a0&gt;</ept>重写默认的缓存模式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can pass any object to the <bpt i="0" x="0">&lt;c0&gt;</bpt>file()<ept i="0">&lt;/c0&gt;</ept> method, and it will attempt to convert the value to an absolute <bpt i="1" x="1">&lt;c1&gt;</bpt>File<ept i="1">&lt;/c1&gt;</ept> object.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T142819Z" creationid="msdx" creationdate="20141112T043528Z">
        <seg>您可以把任何对象传递给<bpt i="0" x="0">&lt;c0&gt;</bpt>file()<ept i="0">&lt;/c0&gt;</ept>方法，而它将尝试将其转换为一个绝对路径的<bpt i="1" x="1">&lt;c1&gt;</bpt>File<ept i="1">&lt;/c1&gt;</ept>对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can pass this method any number of objects, which are then converted into a set of <bpt i="3" x="3">&lt;c3&gt;</bpt>File<ept i="3">&lt;/c3&gt;</ept> objects.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T145528Z" creationid="msdx" creationdate="20141112T145528Z">
        <seg>你可以向这个方法传入任意个对象，而它们会被转换为一组 <bpt i="3" x="3">&lt;c3&gt;</bpt>File<ept i="3">&lt;/c3&gt;</ept> 对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can place a <bpt i="0" x="0">&lt;c0&gt;</bpt>gradle.properties<ept i="0">&lt;/c0&gt;</ept> file in the Gradle user home directory (defaults to <bpt i="1" x="1">&lt;c1&gt;</bpt><bpt i="2" x="2">&lt;e2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>USER_HOME<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/e2&gt;</ept>/.gradle<ept i="1">&lt;/c1&gt;</ept>) or in your project directory.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T134109Z" creationid="msdx" creationdate="20141109T092007Z">
        <seg>您可以把一个<bpt i="0" x="0">&lt;c0&gt;</bpt>gradle.properties<ept i="0">&lt;/c0&gt;</ept>文件放在 Gradle 的用户主目录 （默认为<bpt i="1" x="1">&lt;c1&gt;</bpt><bpt i="2" x="2">&lt;e2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>USER_HOME<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/e2&gt;</ept>/.gradle<ept i="1">&lt;/c1&gt;</ept>） ，或您的项目目录中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can put the source for the plugin in the <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>rootProjectDir<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/e1&gt;</ept>/buildSrc/src/main/groovy<ept i="0">&lt;/c0&gt;</ept> directory.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160818T151423Z" creationid="95" creationdate="20160818T151423Z">
        <seg>你可以把插件的源码放在 <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>rootProjectDir<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/e1&gt;</ept>/buildSrc/src/main/groovy<ept i="0">&lt;/c0&gt;</ept> 目录中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can put the source for the task class in the <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>rootProjectDir<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/e1&gt;</ept>/buildSrc/src/main/groovy<ept i="0">&lt;/c0&gt;</ept> directory.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T144248Z" creationid="95" creationdate="20160814T144248Z">
        <seg>你可以把任务类的源码放在 <bpt i="0" x="0">&lt;c0&gt;</bpt><bpt i="1" x="1">&lt;e1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>rootProjectDir<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/e1&gt;</ept>/buildSrc/src/main/groovy<ept i="0">&lt;/c0&gt;</ept> 目录中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can query Gradle for the details of a build, including the project hierarchy and the project dependencies, external dependencies (including source and javadoc jars), source directories and tasks of each project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161218T152208Z" creationid="95" creationdate="20161218T152208Z">
        <seg>你可以查询Gradle 关于构建的详细信息，包括项目层次结构和项目依赖，外部依赖（包括源代码及javadoc jars），源代码目录以及每一个项目的任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can read about the new publishing plugins in <bpt i="0" x="0">&lt;a0&gt;</bpt>Chapter 64, <bpt i="1" x="1">&lt;i1&gt;</bpt>Ivy Publishing (new)<ept i="1">&lt;/i1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> and <bpt i="2" x="2">&lt;a2&gt;</bpt>Chapter 65, <bpt i="3" x="3">&lt;i3&gt;</bpt>Maven Publishing (new)<ept i="3">&lt;/i3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151220T120735Z" creationid="95" creationdate="20151220T120616Z">
        <seg>你可以在<bpt i="0" x="0">&lt;a0&gt;</bpt> 64 章，<bpt i="1" x="1">&lt;i1&gt;</bpt>Ivy 发布（新）<ept i="1">&lt;/i1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>和<bpt i="2" x="2">&lt;a2&gt;</bpt> 65 章， <bpt i="3" x="3">&lt;i3&gt;</bpt>Maven 发布（新）<ept i="3">&lt;/i3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>中读到有关新发布插件的内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can receive a notification immediately after a task is added to a project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T134108Z" creationid="95" creationdate="20160521T134108Z">
        <seg>你可以在有任务添加到项目后立即收到通知。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can receive a notification immediately after the task execution graph has been populated.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T135610Z" creationid="95" creationdate="20160521T135610Z">
        <seg>在任务执行图生成之后你可以立刻收到一个通知。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can receive a notification immediately before and after a project is evaluated.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T124858Z" creationid="95" creationdate="20160521T124858Z">
        <seg>你可以在一个项目评估之前及之后立刻收到通知。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can receive a notification immediately before and after any task is executed.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T135927Z" creationid="95" creationdate="20160521T135923Z">
        <seg>在任一任务执行前你都会马上收到一条通知。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can reorder favorites to your liking and even export them to disk so they can imported by others.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T155515Z" creationid="msdx" creationdate="20141105T155503Z">
        <seg>你可以根据自己的喜好，对收藏夹进行排序，甚至可以把它们导出到磁盘，并在其他地方导入。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can replace much of Gradle's logging UI with your own.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T152941Z" creationid="msdx" creationdate="20141116T152941Z">
        <seg>您可以用您自己的 logging UI大量地替换 Gradle 的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can run "<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle distZip<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>" to package the main distribution as a ZIP, or "<bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>gradle distTar<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/s2&gt;</ept>" to create a GZip compressed TAR file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150701T030548Z" creationid="haohang" creationdate="20150701T030548Z">
        <seg>你可以运行“<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle distZip<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>”把 main distribution 打包为 ZIP，或者是运行“<bpt i="2" x="2">&lt;s2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>gradle distTar<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/s2&gt;</ept>”来创建一个使用 GZip 压缩的 TAR 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can run "<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle installDist<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>" to assembles the distribution content, uncompressed, into "<bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;e3&gt;</bpt><bpt i="4" x="4">&lt;c4&gt;</bpt>$buildDir<ept i="4">&lt;/c4&gt;</ept><ept i="3">&lt;/e3&gt;</ept>/install/<bpt i="5" x="5">&lt;e5&gt;</bpt><bpt i="6" x="6">&lt;c6&gt;</bpt>main<ept i="6">&lt;/c6&gt;</ept><ept i="5">&lt;/e5&gt;</ept><ept i="2">&lt;/c2&gt;</ept>".</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150701T030749Z" creationid="haohang" creationdate="20150701T030655Z">
        <seg>你可以运行“<bpt i="0" x="0">&lt;s0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>gradle installDist<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/s0&gt;</ept>”来组装这些分发内容，解压到“<bpt i="2" x="2">&lt;c2&gt;</bpt><bpt i="3" x="3">&lt;e3&gt;</bpt><bpt i="4" x="4">&lt;c4&gt;</bpt>$buildDir<ept i="4">&lt;/c4&gt;</ept><ept i="3">&lt;/e3&gt;</ept>/install/<bpt i="5" x="5">&lt;e5&gt;</bpt><bpt i="6" x="6">&lt;c6&gt;</bpt>main<ept i="6">&lt;/c6&gt;</ept><ept i="5">&lt;/e5&gt;</ept><ept i="2">&lt;/c2&gt;</ept>”。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can run <bpt i="1" x="1">&lt;s1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>gradle distZip<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/s1&gt;</ept> to create a ZIP containing the distribution.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T070256Z" creationid="haohang" creationdate="20150707T070256Z">
        <seg>你可以运行 <bpt i="1" x="1">&lt;s1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>gradle distZip<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/s1&gt;</ept>  把 distrubution 打包成一个 ZIP 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can run <bpt i="1" x="1">&lt;s1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>gradle installApp<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/s1&gt;</ept> to create an image of the application in <bpt i="3" x="3">&lt;c3&gt;</bpt>build/install/<bpt i="4" x="4">&lt;e4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>projectName<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/e4&gt;</ept><ept i="3">&lt;/c3&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150702T104630Z" creationid="haohang" creationdate="20150702T104621Z">
        <seg>您可以运行<bpt i="1" x="1">&lt;s1&gt;</bpt><bpt i="2" x="2">&lt;c2&gt;</bpt>gradle installApp<ept i="2">&lt;/c2&gt;</ept><ept i="1">&lt;/s1&gt;</ept>，在 <bpt i="3" x="3">&lt;c3&gt;</bpt>build/install/<bpt i="4" x="4">&lt;e4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>projectName<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/e4&gt;</ept><ept i="3">&lt;/c3&gt;</ept> 中创建一张应用程序的图像。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can run <bpt i="6" x="6">&lt;s6&gt;</bpt><bpt i="7" x="7">&lt;c7&gt;</bpt>gradle distZip<ept i="7">&lt;/c7&gt;</ept><ept i="6">&lt;/s6&gt;</ept> to create a ZIP containing the distribution.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150702T104700Z" creationid="haohang" creationdate="20150702T104623Z">
        <seg>你可以运行<bpt i="6" x="6">&lt;s6&gt;</bpt><bpt i="7" x="7">&lt;c7&gt;</bpt>gradle distZip<ept i="7">&lt;/c7&gt;</ept><ept i="6">&lt;/s6&gt;</ept> 把 distrubution 打包成一个 ZIP 文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can select the files to copy using Ant-style include or exclude patterns, or using a closure:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T131107Z" creationid="msdx" creationdate="20141113T130959Z">
        <seg>您可以使用 Ant 风格的包含或排除模式，或使用一个闭包，来选择要复制的文件：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can set custom includes / excludes, only those classes will be scanned.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T040649Z" creationid="Administrator" creationdate="20150428T040649Z">
        <seg>您可以设置自定义的includes 或 excludes，这样就只有这些类才会被扫描。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can set the property directly on the <bpt i="0" x="0">&lt;c0&gt;</bpt>AntBuilder<ept i="0">&lt;/c0&gt;</ept> instance.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T061246Z" creationid="msdx" creationdate="20141116T061246Z">
        <seg>你可以直接在<bpt i="0" x="0">&lt;c0&gt;</bpt>AntBuilder<ept i="0">&lt;/c0&gt;</ept>实例上设置属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can set the value of this property using any of the types supported by the <bpt i="3" x="3">&lt;a3&gt;</bpt>files()<ept i="3">&lt;/a3&gt;</ept> method, which was shown above.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T123137Z" creationid="msdx" creationdate="20141113T123137Z">
        <seg>你可以使用上面所示的<bpt i="3" x="3">&lt;a3&gt;</bpt>files()<ept i="3">&lt;/a3&gt;</ept>方法所支持的任意类型的对象设置此属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can specify that test processes should be restarted after it has executed a certain number of test classes.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150428T013402Z" creationid="Administrator" creationdate="20150428T013402Z">
        <seg>你可以指定在执行了一定数量的测试类之后，重启那个测试进程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can specify where the generated Ivy file will be located by setting the <bpt i="0" x="0">&lt;c0&gt;</bpt>destination<ept i="0">&lt;/c0&gt;</ept> property on the generate task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T143851Z" creationid="95" creationdate="20170330T143851Z">
        <seg>你可以通过在生成任务上设置<bpt i="0" x="0">&lt;c0&gt;</bpt>destination<ept i="0">&lt;/c0&gt;</ept>属性，指定生成的Ivy文件位置。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can specify whether or not to execute your tests in parallel.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T140908Z" creationid="Administrator" creationdate="20150427T140908Z">
        <seg>你可以指定是否要并行运行你的测试。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can then refer to the custom Ant task as you would a built-in Ant task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T060159Z" creationid="msdx" creationdate="20141116T020147Z">
        <seg>然后，您可以像引用内置的 Ant 任务一样引用自定义 Ant 任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can then use the targets of your Ant build as if they were Gradle tasks.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141114T141231Z" creationid="msdx" creationdate="20141114T140930Z">
        <seg>然后你可以使用你的 Ant 构建中的target，就好像它们是 Gradle 任务一样。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can toggle the filter via the Filter button.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T151214Z" creationid="msdx" creationdate="20141105T151214Z">
        <seg>你可以通过过滤器（Filter）按钮切换是否进行过滤。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can use Gradle's Ant integration as a path for migrating your build from Ant to Gradle.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141114T142634Z" creationid="msdx" creationdate="20141114T142305Z">
        <seg>你可以把 Gradle 的 Ant 集成当成一个路径，将你的构建从 Ant 迁移至 Gradle 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can use Gradle's dependency management to assemble the classpath to use for the custom tasks.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T060418Z" creationid="msdx" creationdate="20141116T060418Z">
        <seg>你可以使用 Gradle 的依赖管理组合类路径，以用于自定义任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can use an archive task to define an artifact:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151226T090821Z" creationid="95" creationdate="20151226T090800Z">
        <seg>你可以使用一个archive任务来定义构件：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can use an init script to configure the projects in the build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161214T155814Z" creationid="95" creationdate="20161214T155814Z">
        <seg>你可以使用一个init 脚本来在构建中配置项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can use any of the dependency types described in <bpt i="4" x="4">&lt;a4&gt;</bpt>Section 50.4, “How to declare your dependencies”<ept i="4">&lt;/a4&gt;</ept>, except project dependencies.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161212T154155Z" creationid="95" creationdate="20161212T154155Z">
        <seg>你可以使用在 <bpt i="4" x="4">&lt;a4&gt;</bpt>第50.4节，“如何定义你的依赖”<ept i="4">&lt;/a4&gt;</ept>描述的除了项目依赖之外的任何依赖类型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can use either client module dependencies to express the dependency relations, or artifact dependencies in case a first level dependency has no transitive dependencies.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151201T062812Z" creationid="haohang" creationdate="20151201T062812Z">
        <seg>您可以使用客户端模块依赖，或者是工件依赖来表达依赖关系，后者的情况中第一级依赖是没有传递依赖的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can use either of the <bpt i="2" x="2">&lt;c2&gt;</bpt>dir<ept i="2">&lt;/c2&gt;</ept> or <bpt i="3" x="3">&lt;c3&gt;</bpt>buildFile<ept i="3">&lt;/c3&gt;</ept> properties to specify which build to execute, and the <bpt i="4" x="4">&lt;c4&gt;</bpt>tasks<ept i="4">&lt;/c4&gt;</ept> property to specify which tasks to execute.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161212T153507Z" creationid="95" creationdate="20161212T153507Z">
        <seg>你可以通过使用 <bpt i="2" x="2">&lt;c2&gt;</bpt>dir<ept i="2">&lt;/c2&gt;</ept> 或 <bpt i="3" x="3">&lt;c3&gt;</bpt>buildFile<ept i="3">&lt;/c3&gt;</ept> 属性来指定执行哪一个构建，以及使用 <bpt i="4" x="4">&lt;c4&gt;</bpt>tasks<ept i="4">&lt;/c4&gt;</ept> 属性来指定执行哪一个任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can use individual Ant tasks or entire Ant builds in your Gradle builds.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141114T071514Z" creationid="msdx" creationdate="20141114T071514Z">
        <seg>您可以在你的 Gradle 构建中，使用单独的 Ant 任务或整个 Ant 构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can use that for example, to share manifest information between jars.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T145328Z" creationid="msdx" creationdate="20150428T145328Z">
        <seg>它可以用于共享两个jar包的manifest 信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can use the <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Copy<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> task to copy files.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T123657Z" creationid="msdx" creationdate="20141113T123644Z">
        <seg>你可以使用<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Copy<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>任务来复制文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can use the <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>GradleBuild<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161212T152905Z" creationid="95" creationdate="20161212T152838Z">
        <seg>你可以使用<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>GradleBuild<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> 任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can use the <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Project.copySpec()<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> method to share content between archives.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T160753Z" creationid="msdx" creationdate="20141113T160753Z">
        <seg>你可以使用<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Project.copySpec()<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>方法在归档之间共享内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can use the <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>ProjectBuilder<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> class to create <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>Project<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept> instances to use when you test your plugin implementation.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T014915Z" creationid="95" creationdate="20161211T014915Z">
        <seg>当你要测试你的插件实现时，你可以使用<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>ProjectBuilder<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> 类来创建 <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>Project<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept> 实例去使用你的任务类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can use the <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>ProjectBuilder<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> class to create <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>Project<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept> instances to use when you test your task class.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160815T150108Z" creationid="95" creationdate="20160815T145956Z">
        <seg>当你要测试你的任务类时，你可以使用<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>ProjectBuilder<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> 类来创建 <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>Project<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept> 实例去使用你的任务类。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can use the <bpt i="0" x="0">&lt;c0&gt;</bpt>ant.importBuild()<ept i="0">&lt;/c0&gt;</ept> method to import an Ant build into your Gradle project.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T060737Z" creationid="msdx" creationdate="20141116T060737Z">
        <seg>你可以使用<bpt i="0" x="0">&lt;c0&gt;</bpt>ant.importBuild()<ept i="0">&lt;/c0&gt;</ept>方法来向 Gradle 项目导入一个 Ant 构建。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can use the <bpt i="0" x="0">&lt;c0&gt;</bpt>onlyIf()<ept i="0">&lt;/c0&gt;</ept> method to attach a predicate to a task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T020400Z" creationid="msdx" creationdate="20141111T020313Z">
        <seg>你可以使用<bpt i="0" x="0">&lt;c0&gt;</bpt>onlyIf()<ept i="0">&lt;/c0&gt;</ept>方法将断言附加到一项任务中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can use the archive tasks without using the Java plugin, if you like.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T145942Z" creationid="msdx" creationdate="20141113T145842Z">
        <seg>如果你愿意，使用归档任务时可以不需要Java插件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can use the build comparison functionality to very quickly try a new Gradle version with your build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170109T125349Z" creationid="95" creationdate="20170109T125349Z">
        <seg>你可以使用这个构建比较功能来快速尝试在你的构建中使用新的Gradle版本。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can use the command line argument (<bpt i="0" x="0">&lt;a0&gt;</bpt>Appendix D, <bpt i="1" x="1">&lt;i1&gt;</bpt>Gradle Command Line<ept i="1">&lt;/i1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>) or configure your build environment (<bpt i="2" x="2">&lt;a2&gt;</bpt>Section 20.1, “Configuring the build environment via gradle.properties”<ept i="2">&lt;/a2&gt;</ept>).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T091056Z" creationid="haohang" creationdate="20160726T091056Z">
        <seg>你可以使用命令行参数（<bpt i="0" x="0">&lt;a0&gt;</bpt>附录 D， <bpt i="1" x="1">&lt;i1&gt;</bpt>Gradle 命令行<ept i="1">&lt;/i1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>），或者是配置你的构建环境（<bpt i="2" x="2">&lt;a2&gt;</bpt>第 20.1 节，“通过 gradle.properties 配置构建环境”<ept i="2">&lt;/a2&gt;</ept>）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can use the command line switches shown in <bpt i="0" x="0">&lt;a0&gt;</bpt>Table 18.2, “Log level command-line options”<ept i="0">&lt;/a0&gt;</ept> to choose different log levels.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T095147Z" creationid="msdx" creationdate="20141116T095147Z">
        <seg>您可以使用<bpt i="0" x="0">&lt;a0&gt;</bpt>表 18.2，“日志级别的命令行选项”<ept i="0">&lt;/a0&gt;</ept>中所示的命令行开关来选择不同的日志级别。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can use the configuration injection technique discussed in <bpt i="0" x="0">&lt;a0&gt;</bpt>Section 56.1, “Cross project configuration”<ept i="0">&lt;/a0&gt;</ept> and <bpt i="1" x="1">&lt;a1&gt;</bpt>Section 56.2, “Subproject configuration”<ept i="1">&lt;/a1&gt;</ept> to inject properties and methods into various projects.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T050628Z" creationid="95" creationdate="20161211T050628Z">
        <seg>你可以使用在 <bpt i="0" x="0">&lt;a0&gt;</bpt>第56.1节，“跨项目配置”<ept i="0">&lt;/a0&gt;</ept>和<bpt i="1" x="1">&lt;a1&gt;</bpt>第56.2节，“子项目配置”<ept i="1">&lt;/a1&gt;</ept> 所论述的配置注入技术，来向不同的项目注入属性和方法。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can use the configuration to access the declared dependencies or a subset of those:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T034344Z" creationid="haohang" creationdate="20150807T034344Z">
        <seg>你可以使用配置来访问它们的声明依赖或其中一个子集：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can use the contents of an archive, such as a ZIP or TAR file, as a file tree.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T120455Z" creationid="msdx" creationdate="20141113T120455Z">
        <seg>您可以使用档案的内容，如 ZIP 或者 TAR 文件，作为一个文件树。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can use these configurations to define the compile and runtime dependencies of the source set.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T132956Z" creationid="Administrator" creationdate="20150427T132956Z">
        <seg>你可以使用这些配置来定义源集的编译和运行时的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can use these properties in your build script as though they were properties of the project object (see <bpt i="0" x="0">&lt;a0&gt;</bpt>Section 21.3, “Conventions”<ept i="0">&lt;/a0&gt;</ept>).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T085717Z" creationid="Administrator" creationdate="20150426T085717Z">
        <seg>您可以在构建脚本中使用这些属性，就像它们是project对象的属性一样（见<bpt i="0" x="0">&lt;a0&gt;</bpt>第21.3节，“约定”<ept i="0">&lt;/a0&gt;</ept>）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can use these properties in your build script as though they were properties of the source set object (see <bpt i="0" x="0">&lt;a0&gt;</bpt>Section 21.3, “Conventions”<ept i="0">&lt;/a0&gt;</ept>).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T092935Z" creationid="msdx" creationdate="20150429T092935Z">
        <seg>你可以在你的构建脚本中，把这些属性当成是source set 对象中的属性一样使用 （见<bpt i="0" x="0">&lt;a0&gt;</bpt>第 21.3，“公约”<ept i="0">&lt;/a0&gt;</ept>）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can use this logger the same way as you use the provided logger in the build script.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T034009Z" creationid="msdx" creationdate="20141116T130521Z">
        <seg>你可以在构建脚本中，以与内置的logger 相同的方式来使用这个logger。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can use this to define common configurations, and to extract build logic into methods which can be reused by the sub-projects.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T044933Z" creationid="95" creationdate="20161211T044933Z">
        <seg>你可以通过这个方法去定义共同的配置，然后把构建逻辑抽取到可以被子项目重用的方法里。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can, for example, change the name of the archive:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T155513Z" creationid="msdx" creationdate="20141113T155513Z">
        <seg>你可以，比方说，更改归档文件的名称：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You can, however, set a different language for each project in a multi-project build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T092737Z" creationid="msdx" creationdate="20150512T092737Z">
        <seg>不过，在多项目构建中你可以为不同的项目设置不同的语言。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You cannot publish an <bpt i="3" x="3">&lt;c3&gt;</bpt>IvyPublication<ept i="3">&lt;/c3&gt;</ept> to a Maven repository for example.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170326T073717Z" creationid="95" creationdate="20170326T073717Z">
        <seg>例如，你不能把一个 <bpt i="3" x="3">&lt;c3&gt;</bpt>IvyPublication<ept i="3">&lt;/c3&gt;</ept>发布到一个Maven仓库中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You configure the project layout by configuring the appropriate source set.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150426T083611Z" creationid="Administrator" creationdate="20150426T083611Z">
        <seg>你可以通过配置适当的源集，来配置项目的布局。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You could also do an iteration via <bpt i="3" x="3">&lt;c3&gt;</bpt>allprojects.each<ept i="3">&lt;/c3&gt;</ept>, but that would be more verbose.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160527T161905Z" creationid="95" creationdate="20160527T161905Z">
        <seg>你也可以通过<bpt i="3" x="3">&lt;c3&gt;</bpt>allprojects.each<ept i="3">&lt;/c3&gt;</ept>来进行迭代，不过这样写会比较冗长。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You could also have a mixed strategy.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151201T063508Z" creationid="haohang" creationdate="20151201T063508Z">
        <seg>你也可以使用混合策略。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You could even use Gradle simply as a powerful Ant task scripting tool.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141114T071729Z" creationid="msdx" creationdate="20141114T071729Z">
        <seg>你甚至可以只把 Gradle 当作一个强大的 Ant 任务脚本的工具。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You could use Java or Scala instead, if you want.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160818T151209Z" creationid="95" creationdate="20160818T151209Z">
        <seg>如果你想的话，你也可以使用Java或者是Scala来代替。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You could, for instance, call <bpt i="2" x="2">&lt;c2&gt;</bpt>doFirst()<ept i="2">&lt;/c2&gt;</ept> or <bpt i="3" x="3">&lt;c3&gt;</bpt>doLast()<ept i="3">&lt;/c3&gt;</ept> with a closure in the task constructor to add behaviour.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T145725Z" creationid="95" creationdate="20160814T145725Z">
        <seg>你能够，例如，在构建方法中调用 <bpt i="2" x="2">&lt;c2&gt;</bpt>doFirst()<ept i="2">&lt;/c2&gt;</ept> 或者 <bpt i="3" x="3">&lt;c3&gt;</bpt>doLast()<ept i="3">&lt;/c3&gt;</ept> 并传入一个闭包来添加行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You declare the build script classpath by adding dependencies to the <bpt i="3" x="3">&lt;c3&gt;</bpt>classpath<ept i="3">&lt;/c3&gt;</ept> configuration.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161212T153949Z" creationid="95" creationdate="20161212T153949Z">
        <seg>你可以通过添加依赖到<bpt i="3" x="3">&lt;c3&gt;</bpt>classpath<ept i="3">&lt;/c3&gt;</ept> 配置来定义构建脚本的classpath。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You declare the init script classpath by adding dependencies to the <bpt i="3" x="3">&lt;c3&gt;</bpt>classpath<ept i="3">&lt;/c3&gt;</ept> configuration.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161215T143824Z" creationid="95" creationdate="20161215T143824Z">
        <seg>你可以通过添加依赖到<bpt i="3" x="3">&lt;c3&gt;</bpt>classpath<ept i="3">&lt;/c3&gt;</ept> 配置来定义init 脚本的classpath。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You do all this using a <bpt i="1" x="1">&lt;e1&gt;</bpt>copy spec<ept i="1">&lt;/e1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T124144Z" creationid="msdx" creationdate="20141113T124144Z">
        <seg>你可以使用一个<bpt i="1" x="1">&lt;e1&gt;</bpt>复制规范<ept i="1">&lt;/e1&gt;</ept>来做这些。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You do not need to have `mavenLocal` in your `publishing.repositories` section.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T063923Z" creationid="95" creationdate="20170416T063923Z">
        <seg>你不需要在你的“publishing.repositories”节点中声明“mavenLocal”。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You do this by adding a dependency to the <bpt i="0" x="0">&lt;c0&gt;</bpt>groovy<ept i="0">&lt;/c0&gt;</ept> configuration.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T065053Z" creationid="msdx" creationdate="20141030T065053Z">
        <seg>你可以通过在<bpt i="0" x="0">&lt;c0&gt;</bpt>groovy<ept i="0">&lt;/c0&gt;</ept>配置中添加依赖来完成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You do this using the <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Project.zipTree()<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> and <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>Project.tarTree()<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept> methods.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T122522Z" creationid="msdx" creationdate="20141113T120525Z">
        <seg>你可以通过使用<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Project.zipTree()<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>或<bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>Project.tarTree()<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>方法来实现这一过程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You do this using the <bpt i="0" x="0">&lt;c0&gt;</bpt>buildscript()<ept i="0">&lt;/c0&gt;</ept> method, passing in a closure which declares the build script classpath.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161212T153737Z" creationid="95" creationdate="20161212T153737Z">
        <seg>你可以通过使用<bpt i="0" x="0">&lt;c0&gt;</bpt>buildscript()<ept i="0">&lt;/c0&gt;</ept>方法，传入一个定义构建脚本classpath的闭包。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You do this using the <bpt i="1" x="1">&lt;c1&gt;</bpt>initscript()<ept i="1">&lt;/c1&gt;</ept> method, passing in a closure which declares the init script classpath.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161215T143736Z" creationid="95" creationdate="20161215T143736Z">
        <seg>你可以通过使用<bpt i="0" x="0">&lt;c0&gt;</bpt>initscript()<ept i="0">&lt;/c0&gt;</ept>方法，传入一个定义init 脚本的classpath的闭包。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You don't have to use a method to define the behaviour for the task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T145625Z" creationid="95" creationdate="20160814T145625Z">
        <seg>你不需要使用一个方法来定义这个任务的行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You don't need to provide any further instruction.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T051348Z" creationid="95" creationdate="20161211T051348Z">
        <seg>你不需要再提供任何进一步的指示。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You don't want to expose people who want to build your project, to the downtimes or sometimes very long response times of Maven Central.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151130T051936Z" creationid="haohang" creationdate="20151130T051149Z">
        <seg>你不想曝光给想要对你的项目进行构建的人，Maven 中央仓停机或者有时候响应时间太长。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You execute an Ant task by calling a method on the <bpt i="0" x="0">&lt;c0&gt;</bpt>AntBuilder<ept i="0">&lt;/c0&gt;</ept> instance.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141114T143608Z" creationid="msdx" creationdate="20141114T143608Z">
        <seg>通过调用 <bpt i="0" x="0">&lt;c0&gt;</bpt>AntBuilder<ept i="0">&lt;/c0&gt;</ept>实例上的一个方法，可以执行一个 Ant 任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You have also learned how to add additional behavior to these tasks later on.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T160251Z" creationid="msdx" creationdate="20141109T160143Z">
        <seg>之后您还学习了如何将其他行为添加到这些任务中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You have been making changes, but have not built the entire project since performing a clean.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T095046Z" creationid="haohang" creationdate="20160726T095046Z">
        <seg>你做了一些修改，但从执行clean以来还没有构建整个项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You have to declare the projects taking part in the multiproject build in the settings file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T030227Z" creationid="haohang" creationdate="20160519T030227Z">
        <seg>你需要在settings文件中，声明要加入多项目构建的项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You have to explicitly do this assignment.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151226T091016Z" creationid="95" creationdate="20151226T091016Z">
        <seg>你必须进行显示的指定。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You have to repeat the context (<bpt i="0" x="0">&lt;c0&gt;</bpt>myCopy<ept i="0">&lt;/c0&gt;</ept>) in the configuration statement every time.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T092134Z" creationid="msdx" creationdate="20141110T092122Z">
        <seg>您必须在每一次的配置语句重复上下文 （<bpt i="0" x="0">&lt;c0&gt;</bpt>myCopy<ept i="0">&lt;/c0&gt;</ept>）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You implement the predicate as a closure.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T020439Z" creationid="msdx" creationdate="20141111T020439Z">
        <seg>你可以用一个闭包来实现断言。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You install the wrapper into your project by adding and configuring a <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Wrapper<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> task in your build script, and then executing it.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161217T144015Z" creationid="95" creationdate="20161217T143829Z">
        <seg>你可以通过在你的构建脚本中添加及配置一个 <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Wrapper<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> 任务，然后执行它来把包装器安装到你的项目中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You may also specify how to transform the files as they are copied.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T124121Z" creationid="msdx" creationdate="20141113T124121Z">
        <seg>您还可以在复制文件的时候指定如何转换文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You may configure any number of repositories, each of which is treated independently by Gradle.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T093711Z" creationid="haohang" creationdate="20150807T093711Z">
        <seg>您可以配置任意数量的仓库，每一个都会被Gradle 独立处理。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You may want to compare:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161219T145705Z" creationid="95" creationdate="20161219T145705Z">
        <seg>你可能想要比较：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You may want to start the daemon in <bpt i="0" x="0">&lt;c0&gt;</bpt>--foreground<ept i="0">&lt;/c0&gt;</ept> mode to observe how the build is executed.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141119T030832Z" creationid="msdx" creationdate="20141119T030832Z">
        <seg>你可能想要以<bpt i="0" x="0">&lt;c0&gt;</bpt>--foreground<ept i="0">&lt;/c0&gt;</ept>模式启动守护程序，以观察构建是怎么执行的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You may wish to use the new <bpt i="0" x="0">&lt;a0&gt;</bpt>Sonar Runner Plugin<ept i="0">&lt;/a0&gt;</ept> instead of this plugin.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150507T065225Z" creationid="msdx" creationdate="20150507T065225Z">
        <seg>你可能会想使用新的<bpt i="0" x="0">&lt;a0&gt;</bpt>Sonar Runner 插件<ept i="0">&lt;/a0&gt;</ept>来代替现在这个插件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You might also want to learn where conflicting versions are used and consolidate on a particular version of a dependency across your organization.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150721T060306Z" creationid="haohang" creationdate="20150721T060306Z">
        <seg>你也可能想要了解版本冲突用到的地方，并且在你的整个组织中统一一个指定版本的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You might be wondering why we have implemented a feature we obviously don't like that much.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160727T053424Z" creationid="haohang" creationdate="20160727T053424Z">
        <seg>你可能想知道，为什么我们要实现一个我们显然不喜欢做的功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You might do this when, for example, the files are generated by the build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T094442Z" creationid="haohang" creationdate="20150801T094442Z">
        <seg>例如，你可以在通过构建生成文件的时候这样做。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You might do this, for example, if you want to customize the UI in some way - to log more or less information, or to change the formatting.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T034607Z" creationid="msdx" creationdate="20141116T153100Z">
        <seg>你可以这样，比如，如果您想要以某种方式自定义 UI ——以输出更多或更少的信息，或修改日志格式，</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You might have different group of artifacts which have a different set of dependencies.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151227T152802Z" creationid="95" creationdate="20151227T152744Z">
        <seg>你可以有不同组的构件，它们有不同的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You might need dependencies that are not uploaded to Maven Central yet.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151130T050851Z" creationid="haohang" creationdate="20151130T050851Z">
        <seg>你可能需要还没有上传到Maven 中央仓的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You might need it for example, to add libraries to your build script classpath (see <bpt i="3" x="3">&lt;a3&gt;</bpt>Chapter 59, <bpt i="4" x="4">&lt;i4&gt;</bpt>Organizing Build Logic<ept i="4">&lt;/i4&gt;</ept><ept i="3">&lt;/a3&gt;</ept>).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T025204Z" creationid="haohang" creationdate="20160519T025204Z">
        <seg>你可能需要一个关于将libraries添加到你的构建脚本类路径中的例子（见<bpt i="3" x="3">&lt;a3&gt;</bpt>第59章，<bpt i="4" x="4">&lt;i4&gt;</bpt>组织构建逻辑<ept i="4">&lt;/i4&gt;</ept><ept i="3">&lt;/a3&gt;</ept>）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You might refer to their API documentation to learn more about them.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T040958Z" creationid="Administrator" creationdate="20150425T040958Z">
        <seg>您可能会引用他们的 API 文档，以了解更多关于它们的信息。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You might wish to customize how Gradle logs the events that it generates.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161214T143126Z" creationid="95" creationdate="20161214T143126Z">
        <seg>你可能希望自定义Gradle对生成的事件的日志打印。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You need to declare a filter for each artifact you want to publish.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T144338Z" creationid="95" creationdate="20160106T144338Z">
        <seg>你需要为你想发布的每一个构件声明一个过滤器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You need to make sure the task dependencies are declared correctly to avoid ordering issues.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T092120Z" creationid="haohang" creationdate="20160726T092120Z">
        <seg>你需要确保正确地声明任务，以避免排序的问题。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You need to provide the signing plugin with your key information, which means three things:</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160108T151419Z" creationid="95" creationdate="20160108T151419Z">
        <seg>您需要向签名插件提供你的关键信息，即如下三项信息：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You often need to locate the tasks that you have defined in the build file, for example, to configure them or use them for dependencies.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T080533Z" creationid="msdx" creationdate="20141110T023442Z">
        <seg>你经常需要在构建文件中查找你所定义的任务，例如，为了去配置或是依赖它们。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You only need to specify the leaves of the tree.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T041707Z" creationid="haohang" creationdate="20160519T041707Z">
        <seg>你只需要指定树上的叶子。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You pass nested elements to an Ant task inside a closure.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141115T155121Z" creationid="msdx" creationdate="20141115T154720Z">
        <seg>你可以在一个闭包里把嵌套的元素传给一个 Ant 任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You pass nested text to an Ant task by passing it as a parameter of the task method call.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141115T154821Z" creationid="msdx" creationdate="20141115T154521Z">
        <seg>你可以把一个嵌套文本，通过作为任务方法调用的参数，把它传给一个 Ant 任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You probably want to set-up a repository proxy for this.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151201T070824Z" creationid="haohang" creationdate="20151201T070824Z">
        <seg>你可能需要设置一个仓库代理。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You replace the logging using the <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Gradle.useLogger()<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> method.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T153134Z" creationid="msdx" creationdate="20141116T153134Z">
        <seg>您可以使用 <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>Gradle.useLogger()<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> 方法替换这个logging。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You should note that the <bpt i="0" x="0">&lt;c0&gt;</bpt>TestReport<ept i="0">&lt;/c0&gt;</ept> type combines the results from multiple test tasks and needs to aggregate the results of individual test classes.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T143101Z" creationid="msdx" creationdate="20150428T143101Z">
        <seg>你应该注意到，<bpt i="0" x="0">&lt;c0&gt;</bpt>TestReport<ept i="0">&lt;/c0&gt;</ept>类型组合了多个测试任务的结果，并且需要聚合各个测试类的结果。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You should now be able to browse the analysis results.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T061723Z" creationid="msdx" creationdate="20150513T061723Z">
        <seg>你现在应该能够看到分析结果了。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You simply declare the task and configure the task using its properties.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T143343Z" creationid="95" creationdate="20160814T143343Z">
        <seg>你只需要简单地声明这个任务，并用它的属性来配置它。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You specify the source files using the <bpt i="5" x="5">&lt;a5&gt;</bpt><bpt i="6" x="6">&lt;c6&gt;</bpt>CopySpec.from()<ept i="6">&lt;/c6&gt;</ept><ept i="5">&lt;/a5&gt;</ept> method.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T124344Z" creationid="msdx" creationdate="20141113T124305Z">
        <seg>你可以使用<bpt i="5" x="5">&lt;a5&gt;</bpt><bpt i="6" x="6">&lt;c6&gt;</bpt>CopySpec.from()<ept i="6">&lt;/c6&gt;</ept><ept i="5">&lt;/a5&gt;</ept>方法指定源文件，</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You use a file tree in the same way you use a file collection.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T120306Z" creationid="msdx" creationdate="20141113T120300Z">
        <seg>你可以像使用一个文件集合的方式一样来使用一个文件树。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You use the task name as the method name.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141114T143741Z" creationid="msdx" creationdate="20141114T143741Z">
        <seg>你可以把任务名称当作方法名称使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You use this kind of dependency when you are developing custom Gradle plugins and task types.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T080724Z" creationid="haohang" creationdate="20150722T080724Z">
        <seg>当你正在开发自定义的 Gradle 插件和任务类型时，你可以使用这种类型的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You use this kind of dependency when you want to override the meta-data for the module.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T080626Z" creationid="haohang" creationdate="20150722T080626Z">
        <seg>当你想要重写模块的元数据时，你可以使用这种类型的依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You use this to declare the ANTLR dependency that you wish to use.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T095538Z" creationid="haohang" creationdate="20150625T095538Z">
        <seg>你可以使用它来声明你想要使用的 ANTLR 依赖。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You want to build any necessary supporting jars, but only perform code quality and unit tests on the project you have changed.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T095204Z" creationid="haohang" creationdate="20160726T095204Z">
        <seg>你想要构建出所有必需的支持jar包，但只对这个你修改了的项目进行代码质量和单元测试。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You want to deal properly with wrong metadata in a Maven Central POM file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151130T050919Z" creationid="haohang" creationdate="20151130T050919Z">
        <seg>你想要正确地处理 Maven 中央仓 POM 文件中错误的元数据。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You will find more on this topic in <bpt i="5" x="5">&lt;a5&gt;</bpt>Section 56.6, “Dependencies - Which dependencies?”<ept i="5">&lt;/a5&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160530T151528Z" creationid="95" creationdate="20160530T151516Z">
        <seg>在 <bpt i="5" x="5">&lt;a5&gt;</bpt>第 56.6 节， “依赖——哪些依赖”<ept i="5">&lt;/a5&gt;</ept>，你可以看到更多关于这个主题的内容。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You will need to provide values for some additional properties.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T150016Z" creationid="msdx" creationdate="20141113T145958Z">
        <seg>您需要提供一些值给附加的属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You will notice that in the example above we specify the <bpt i="4" x="4">&lt;c4&gt;</bpt>greetingFile<ept i="4">&lt;/c4&gt;</ept> property value after we have configured to use it for the task.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160828T132447Z" creationid="95" creationdate="20160828T132447Z">
        <seg>你会注意到，在上面的例子中，我们是在已经配置了在作用中使用 <bpt i="4" x="4">&lt;c4&gt;</bpt>greetingFile<ept i="4">&lt;/c4&gt;</ept> 属性之后才指定它的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You will see the console output of the “source” and “target” builds as they are executing.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170109T125635Z" creationid="95" creationdate="20170109T125635Z">
        <seg>当它们执行的时候，你就会看到控件台输出“源构建”和“目标构建”的结果。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>You would use 'should run after' rule when ordering preference for faster feedback, where the ordering is helpful but not strictly required.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T012210Z" creationid="msdx" creationdate="20141111T005440Z">
        <seg>当倾向于更快的反馈时，会使用“应该在之后运行”的规则，因为这种排序很有帮助但要求不严格。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Your <bpt i="1" x="1">&lt;c1&gt;</bpt>webapp<ept i="1">&lt;/c1&gt;</ept> directory may of course contain a <bpt i="2" x="2">&lt;c2&gt;</bpt>WEB-INF<ept i="2">&lt;/c2&gt;</ept> sub-directory, which again may contain a <bpt i="3" x="3">&lt;c3&gt;</bpt>web.xml<ept i="3">&lt;/c3&gt;</ept> file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T093456Z" creationid="msdx" creationdate="20150503T093433Z">
        <seg>你的<bpt i="1" x="1">&lt;c1&gt;</bpt>webapp<ept i="1">&lt;/c1&gt;</ept>目录自然可能包含一个<bpt i="2" x="2">&lt;c2&gt;</bpt>WEB-INF<ept i="2">&lt;/c2&gt;</ept>子目录，这个子目录可能还再包含一个<bpt i="3" x="3">&lt;c3&gt;</bpt>web.xml<ept i="3">&lt;/c3&gt;</ept>文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Your build script can receive notifications as the build progresses through its lifecycle.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160520T124452Z" creationid="95" creationdate="20160520T124452Z">
        <seg>在构建通过其生命周期的时候，你的构建脚本会接收到对应的通知。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Your build script may contain statements like:<bpt i="0" x="0">&lt;c0&gt;</bpt>"ant clean compile".execute()<ept i="0">&lt;/c0&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141114T142059Z" creationid="msdx" creationdate="20141114T142059Z">
        <seg>你的构建脚本可能包含有类似这样的语句：<bpt i="0" x="0">&lt;c0&gt;</bpt>"ant clean compile".execute()<ept i="0">&lt;/c0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Your build script needs properties which values should not be seen by others.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T141859Z" creationid="msdx" creationdate="20141109T141550Z">
        <seg>而你的构建脚本需要一些不能让其他人知道的属性值，</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Your build scripts configure this dependency graph.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160518T032440Z" creationid="haohang" creationdate="20160518T032440Z">
        <seg>你的构建脚本能配置这个依赖关系图。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Your compiled classes are compiled to <bpt i="4" x="4">&lt;c4&gt;</bpt>WEB-INF/classes<ept i="4">&lt;/c4&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T093519Z" creationid="msdx" creationdate="20150503T093452Z">
        <seg>已编译的类被编译进<bpt i="4" x="4">&lt;c4&gt;</bpt>WEB-INF/classes<ept i="4">&lt;/c4&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Your compiled classes, and their runtime dependencies are also included in the WAR file.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T085852Z" creationid="msdx" creationdate="20141030T085852Z">
        <seg>已编译的类文件和他们的运行时依赖也会被包含在WAR文件中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Your logger can implement any of the listener interfaces listed below.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T154912Z" creationid="msdx" creationdate="20141116T154835Z">
        <seg>你的logger可以实现下面列出的任何监听器接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Your project can contain Groovy source code, Java source code, or a mix of the two.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T061208Z" creationid="msdx" creationdate="20141030T040323Z">
        <seg>你的项目可以包含Groovy源码，Java源码，或者两者都包含。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ZIPs and TARs are generated into <bpt i="3" x="3">&lt;c3&gt;</bpt><bpt i="4" x="4">&lt;e4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>project.buildDir<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/e4&gt;</ept>/distributions<ept i="3">&lt;/c3&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T160101Z" creationid="msdx" creationdate="20141113T160040Z">
        <seg>ZIP文件和 TAR文件会生成到 <bpt i="3" x="3">&lt;c3&gt;</bpt><bpt i="4" x="4">&lt;e4&gt;</bpt><bpt i="5" x="5">&lt;c5&gt;</bpt>project.buildDir<ept i="5">&lt;/c5&gt;</ept><ept i="4">&lt;/e4&gt;</ept>/distributions<ept i="3">&lt;/c3&gt;</ept>中。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>Zip</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150701T030820Z" creationid="haohang" creationdate="20150701T030820Z">
        <seg>Zip</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>[<bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>projectDir<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/src/<bpt i="2" x="2">&lt;e2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>name<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/e2&gt;</ept>/antlr]</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T102901Z" creationid="haohang" creationdate="20150625T102901Z">
        <seg>[<bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>projectDir<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/src/<bpt i="2" x="2">&lt;e2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>name<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/e2&gt;</ept>/antlr]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>[<bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>projectDir<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/src/<bpt i="2" x="2">&lt;e2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>name<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/e2&gt;</ept>/groovy]</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T093154Z" creationid="msdx" creationdate="20150429T093154Z">
        <seg>[<bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>projectDir<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/src/<bpt i="2" x="2">&lt;e2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>name<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/e2&gt;</ept>/groovy]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>[<bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>projectDir<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/src/<bpt i="2" x="2">&lt;e2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>name<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/e2&gt;</ept>/java]</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083419Z" creationid="msdx" creationdate="20150428T083419Z">
        <seg>[<bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>projectDir<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/src/<bpt i="2" x="2">&lt;e2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>name<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/e2&gt;</ept>/java]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>[<bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>projectDir<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/src/<bpt i="2" x="2">&lt;e2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>name<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/e2&gt;</ept>/resources]</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083421Z" creationid="msdx" creationdate="20150428T083421Z">
        <seg>[<bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>projectDir<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/src/<bpt i="2" x="2">&lt;e2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>name<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/e2&gt;</ept>/resources]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>[<bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>projectDir<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/src/<bpt i="2" x="2">&lt;e2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>name<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/e2&gt;</ept>/scala]</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150430T154831Z" creationid="msdx" creationdate="20150430T154831Z">
        <seg>[<bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>projectDir<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/src/<bpt i="2" x="2">&lt;e2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>name<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/e2&gt;</ept>/scala]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>[]</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T132309Z" creationid="msdx" creationdate="20150506T132309Z">
        <seg>[]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>[group: <bpt i="5" x="5">&lt;s5&gt;</bpt>'org.springframework'<ept i="5">&lt;/s5&gt;</ept>, name: <bpt i="6" x="6">&lt;s6&gt;</bpt>'spring-core'<ept i="6">&lt;/s6&gt;</ept>, version: <bpt i="7" x="7">&lt;s7&gt;</bpt>'2.5'<ept i="7">&lt;/s7&gt;</ept>],</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T102840Z" creationid="haohang" creationdate="20150722T102833Z">
        <seg>[group: <bpt i="5" x="5">&lt;s5&gt;</bpt>'org.springframework'<ept i="5">&lt;/s5&gt;</ept>, name: <bpt i="6" x="6">&lt;s6&gt;</bpt>'spring-core'<ept i="6">&lt;/s6&gt;</ept>, version: <bpt i="7" x="7">&lt;s7&gt;</bpt>'2.5'<ept i="7">&lt;/s7&gt;</ept>],</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>[group: <bpt i="8" x="8">&lt;s8&gt;</bpt>'org.springframework'<ept i="8">&lt;/s8&gt;</ept>, name: <bpt i="9" x="9">&lt;s9&gt;</bpt>'spring-aop'<ept i="9">&lt;/s9&gt;</ept>, version: <bpt i="10" x="10">&lt;s10&gt;</bpt>'2.5'<ept i="10">&lt;/s10&gt;</ept>]</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T102846Z" creationid="haohang" creationdate="20150722T102837Z">
        <seg>[group: <bpt i="8" x="8">&lt;s8&gt;</bpt>'org.springframework'<ept i="8">&lt;/s8&gt;</ept>, name: <bpt i="9" x="9">&lt;s9&gt;</bpt>'spring-aop'<ept i="9">&lt;/s9&gt;</ept>, version: <bpt i="10" x="10">&lt;s10&gt;</bpt>'2.5'<ept i="10">&lt;/s10&gt;</ept>]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>[installer, deployer]*.pom*.whenConfigured {pom -&gt;</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T143207Z" creationid="95" creationdate="20160106T143207Z">
        <seg>[installer, deployer]*.pom*.whenConfigured {pom -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>a multiproject build, if the <bpt i="0" x="0">&lt;c0&gt;</bpt>settings.gradle<ept i="0">&lt;/c0&gt;</ept> file does define a multiproject hierarchy.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T075356Z" creationid="haohang" creationdate="20160519T075336Z">
        <seg>多项目构建，如果<bpt i="0" x="0">&lt;c0&gt;</bpt>settings.gradle<ept i="0">&lt;/c0&gt;</ept>文件定义了一个多项目的层次结构。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>a single project build, if the <bpt i="0" x="0">&lt;c0&gt;</bpt>settings.gradle<ept i="0">&lt;/c0&gt;</ept> file does not define a multiproject hierarchy</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T075334Z" creationid="haohang" creationdate="20160519T075334Z">
        <seg>单项目构建，如果<bpt i="0" x="0">&lt;c0&gt;</bpt>settings.gradle<ept i="0">&lt;/c0&gt;</ept>文件没有定义一个多项目的层次结构</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>aProducer/</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T070212Z" creationid="haohang" creationdate="20160718T070212Z">
        <seg>aProducer/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>aProducer/build.gradle</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T070215Z" creationid="haohang" creationdate="20160718T070215Z">
        <seg>aProducer/build.gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>add project.repositories.fileRepo</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151226T092052Z" creationid="95" creationdate="20151226T092052Z">
        <seg>add project.repositories.fileRepo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>addFilter(<bpt i="1" x="1">&lt;s1&gt;</bpt>'api'<ept i="1">&lt;/s1&gt;</ept>) {artifact, file -&gt;</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T144207Z" creationid="95" creationdate="20160106T144207Z">
        <seg>addFilter(<bpt i="1" x="1">&lt;s1&gt;</bpt>'api'<ept i="1">&lt;/s1&gt;</ept>) {artifact, file -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>addFilter(<bpt i="3" x="3">&lt;s3&gt;</bpt>'service'<ept i="3">&lt;/s3&gt;</ept>) {artifact, file -&gt;</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T144209Z" creationid="95" creationdate="20160106T144209Z">
        <seg>addFilter(<bpt i="3" x="3">&lt;s3&gt;</bpt>'service'<ept i="3">&lt;/s3&gt;</ept>) {artifact, file -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>address</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T132322Z" creationid="msdx" creationdate="20150506T132322Z">
        <seg>address</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>adds build <bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>ConfigurationName<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept> tasks.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T041215Z" creationid="Administrator" creationdate="20150425T041215Z">
        <seg>添加构建 <bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>ConfigurationName<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>adds upload <bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>ConfigurationName<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept> tasks.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T070714Z" creationid="Administrator" creationdate="20150425T070714Z">
        <seg>添加上传<bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>ConfigurationName<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>任务。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>afterEvaluate { Project project -&gt;</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160530T144430Z" creationid="95" creationdate="20160530T144430Z">
        <seg>afterEvaluate { Project project -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>afterEvaluate { project -&gt;</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T125502Z" creationid="95" creationdate="20160521T125502Z">
        <seg>afterEvaluate { project -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>all { ArtifactRepository repo -&gt;</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161215T144236Z" creationid="95" creationdate="20161215T144236Z">
        <seg>all { ArtifactRepository repo -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>all*.exclude group: <bpt i="1" x="1">&lt;s1&gt;</bpt>'org.gradle.test.excludes'<ept i="1">&lt;/s1&gt;</ept>, module: <bpt i="2" x="2">&lt;s2&gt;</bpt>'reports'<ept i="2">&lt;/s2&gt;</ept>
}

dependencies {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T094943Z" creationid="haohang" creationdate="20150801T094943Z">
        <seg>all*.exclude group: <bpt i="1" x="1">&lt;s1&gt;</bpt>'org.gradle.test.excludes'<ept i="1">&lt;/s1&gt;</ept>, module: <bpt i="2" x="2">&lt;s2&gt;</bpt>'reports'<ept i="2">&lt;/s2&gt;</ept>
}

dependencies {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>allGroovy</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T093413Z" creationid="msdx" creationdate="20150429T093413Z">
        <seg>allGroovy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>allJava</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083421Z" creationid="msdx" creationdate="20150428T083421Z">
        <seg>allJava</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>allScala</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150430T154839Z" creationid="msdx" creationdate="20150430T154839Z">
        <seg>allScala</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>allSource</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083422Z" creationid="msdx" creationdate="20150428T083422Z">
        <seg>allSource</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>alllife
}

dependencies {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T034240Z" creationid="haohang" creationdate="20150807T034240Z">
        <seg>alllife
}

dependencies {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>alllife <bpt i="3" x="3">&lt;s3&gt;</bpt>"air.birds:albatros:1.0"<ept i="3">&lt;/s3&gt;</ept>
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T034244Z" creationid="haohang" creationdate="20150807T034244Z">
        <seg>alllife <bpt i="3" x="3">&lt;s3&gt;</bpt>"air.birds:albatros:1.0"<ept i="3">&lt;/s3&gt;</ept>
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>alllife configurations.sealife</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T034242Z" creationid="haohang" creationdate="20150807T034242Z">
        <seg>alllife configurations.sealife</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>allprojects {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T125502Z" creationid="95" creationdate="20160521T125502Z">
        <seg>allprojects {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>allprojects { ext."signing.keyId" = id }</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160108T152919Z" creationid="95" creationdate="20160108T152919Z">
        <seg>allprojects { ext."signing.keyId" = id }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>allprojects { ext."signing.password" = password }</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160108T152920Z" creationid="95" creationdate="20160108T152920Z">
        <seg>allprojects { ext."signing.password" = password }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>allprojects { ext."signing.secretKeyRingFile" = file }</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160108T152919Z" creationid="95" creationdate="20160108T152919Z">
        <seg>allprojects { ext."signing.secretKeyRingFile" = file }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>an empty manifest</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150427T050033Z" creationid="Administrator" creationdate="20150427T050033Z">
        <seg>一个空的清单</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>announce</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104802Z" creationid="msdx" creationdate="20150428T104802Z">
        <seg>announce</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>announce {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T063126Z" creationid="haohang" creationdate="20150628T063126Z">
        <seg>announce {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>announce.announce(<bpt i="1" x="1">&lt;s1&gt;</bpt>"helloWorld completed!"<ept i="1">&lt;/s1&gt;</ept>, <bpt i="2" x="2">&lt;s2&gt;</bpt>"twitter"<ept i="2">&lt;/s2&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T063537Z" creationid="haohang" creationdate="20150628T063537Z">
        <seg>announce.announce(<bpt i="1" x="1">&lt;s1&gt;</bpt>"helloWorld completed!"<ept i="1">&lt;/s1&gt;</ept>, <bpt i="2" x="2">&lt;s2&gt;</bpt>"twitter"<ept i="2">&lt;/s2&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>announce.announce(<bpt i="3" x="3">&lt;s3&gt;</bpt>"helloWorld completed!"<ept i="3">&lt;/s3&gt;</ept>, <bpt i="4" x="4">&lt;s4&gt;</bpt>"local"<ept i="4">&lt;/s4&gt;</ept>)
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T063538Z" creationid="haohang" creationdate="20150628T063538Z">
        <seg>announce.announce(<bpt i="3" x="3">&lt;s3&gt;</bpt>"helloWorld completed!"<ept i="3">&lt;/s3&gt;</ept>, <bpt i="4" x="4">&lt;s4&gt;</bpt>"local"<ept i="4">&lt;/s4&gt;</ept>)
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>announce_plugin.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104802Z" creationid="msdx" creationdate="20150428T104802Z">
        <seg>announce_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>announce_plugin.html#N145A0</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065925Z" creationid="95" creationdate="20170416T065925Z">
        <seg>announce_plugin.html#N145A0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>announce_plugin.html#N14623</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065927Z" creationid="95" creationdate="20170416T065927Z">
        <seg>announce_plugin.html#N14623</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ant</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T044451Z" creationid="msdx" creationdate="20141108T044451Z">
        <seg>ant</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ant {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161212T155108Z" creationid="95" creationdate="20161212T155108Z">
        <seg>ant {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ant.buildDir = buildDir
ant.properties.buildDir = buildDir
ant.properties[<bpt i="0" x="0">&lt;s0&gt;</bpt>'buildDir'<ept i="0">&lt;/s0&gt;</ept>] = buildDir
ant.property(name: <bpt i="1" x="1">&lt;s1&gt;</bpt>'buildDir'<ept i="1">&lt;/s1&gt;</ept>, location: buildDir)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T062046Z" creationid="msdx" creationdate="20141116T062046Z">
        <seg>ant.buildDir = buildDir
ant.properties.buildDir = buildDir
ant.properties[<bpt i="0" x="0">&lt;s0&gt;</bpt>'buildDir'<ept i="0">&lt;/s0&gt;</ept>] = buildDir
ant.property(name: <bpt i="1" x="1">&lt;s1&gt;</bpt>'buildDir'<ept i="1">&lt;/s1&gt;</ept>, location: buildDir)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ant.checkstyle(config: <bpt i="3" x="3">&lt;s3&gt;</bpt>'checkstyle.xml'<ept i="3">&lt;/s3&gt;</ept>) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T060208Z" creationid="msdx" creationdate="20141116T060208Z">
        <seg>ant.checkstyle(config: <bpt i="3" x="3">&lt;s3&gt;</bpt>'checkstyle.xml'<ept i="3">&lt;/s3&gt;</ept>) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ant.echo(<bpt i="0" x="0">&lt;s0&gt;</bpt>'hello from Ant'<ept i="0">&lt;/s0&gt;</ept>)
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141115T154712Z" creationid="msdx" creationdate="20141115T154712Z">
        <seg>ant.echo(<bpt i="0" x="0">&lt;s0&gt;</bpt>'hello from Ant'<ept i="0">&lt;/s0&gt;</ept>)
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ant.echo(message: greeting)
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141115T153410Z" creationid="msdx" creationdate="20141115T153410Z">
        <seg>ant.echo(message: greeting)
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ant.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T124440Z" creationid="msdx" creationdate="20141111T124440Z">
        <seg>ant.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ant.html#N113E8</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T030404Z" creationid="msdx" creationdate="20150501T030404Z">
        <seg>ant.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ant.html#N11488</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T030405Z" creationid="msdx" creationdate="20150501T030405Z">
        <seg>ant.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ant.html#N114E2</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T030406Z" creationid="msdx" creationdate="20150501T030406Z">
        <seg>ant.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ant.html#N11536</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T030406Z" creationid="msdx" creationdate="20150501T030406Z">
        <seg>ant.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ant.importBuild <bpt i="0" x="0">&lt;s0&gt;</bpt>'build.xml'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T060914Z" creationid="msdx" creationdate="20141116T060914Z">
        <seg>ant.importBuild <bpt i="0" x="0">&lt;s0&gt;</bpt>'build.xml'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ant.importBuild <bpt i="0" x="0">&lt;s0&gt;</bpt>'build.xml'<ept i="0">&lt;/s0&gt;</ept>

hello &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T061046Z" creationid="msdx" creationdate="20141116T061046Z">
        <seg>ant.importBuild <bpt i="0" x="0">&lt;s0&gt;</bpt>'build.xml'<ept i="0">&lt;/s0&gt;</ept>

hello &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ant.importBuild <bpt i="0" x="0">&lt;s0&gt;</bpt>'build.xml'<ept i="0">&lt;/s0&gt;</ept>

task intro &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T061142Z" creationid="msdx" creationdate="20141116T061142Z">
        <seg>ant.importBuild <bpt i="0" x="0">&lt;s0&gt;</bpt>'build.xml'<ept i="0">&lt;/s0&gt;</ept>

task intro &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ant.importBuild <bpt i="0" x="0">&lt;s0&gt;</bpt>'build.xml'<ept i="0">&lt;/s0&gt;</ept>

task intro(dependsOn: hello) &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T061008Z" creationid="msdx" creationdate="20141116T061008Z">
        <seg>ant.importBuild <bpt i="0" x="0">&lt;s0&gt;</bpt>'build.xml'<ept i="0">&lt;/s0&gt;</ept>

task intro(dependsOn: hello) &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ant.path(id: <bpt i="0" x="0">&lt;s0&gt;</bpt>'classpath'<ept i="0">&lt;/s0&gt;</ept>, location: <bpt i="1" x="1">&lt;s1&gt;</bpt>'libs'<ept i="1">&lt;/s1&gt;</ept>)
ant.references.classpath = ant.path(location: <bpt i="2" x="2">&lt;s2&gt;</bpt>'libs'<ept i="2">&lt;/s2&gt;</ept>)
ant.references[<bpt i="3" x="3">&lt;s3&gt;</bpt>'classpath'<ept i="3">&lt;/s3&gt;</ept>] = ant.path(location: <bpt i="4" x="4">&lt;s4&gt;</bpt>'libs'<ept i="4">&lt;/s4&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T062648Z" creationid="msdx" creationdate="20141116T062648Z">
        <seg>ant.path(id: <bpt i="0" x="0">&lt;s0&gt;</bpt>'classpath'<ept i="0">&lt;/s0&gt;</ept>, location: <bpt i="1" x="1">&lt;s1&gt;</bpt>'libs'<ept i="1">&lt;/s1&gt;</ept>)
ant.references.classpath = ant.path(location: <bpt i="2" x="2">&lt;s2&gt;</bpt>'libs'<ept i="2">&lt;/s2&gt;</ept>)
ant.references[<bpt i="3" x="3">&lt;s3&gt;</bpt>'classpath'<ept i="3">&lt;/s3&gt;</ept>] = ant.path(location: <bpt i="4" x="4">&lt;s4&gt;</bpt>'libs'<ept i="4">&lt;/s4&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ant.pmd(shortFilenames: <bpt i="2" x="2">&lt;s2&gt;</bpt>'true'<ept i="2">&lt;/s2&gt;</ept>, failonruleviolation: <bpt i="3" x="3">&lt;s3&gt;</bpt>'true'<ept i="3">&lt;/s3&gt;</ept>, rulesetfiles: file(<bpt i="4" x="4">&lt;s4&gt;</bpt>'pmd-rules.xml'<ept i="4">&lt;/s4&gt;</ept>).toURI().toString()) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T060633Z" creationid="msdx" creationdate="20141116T060633Z">
        <seg>ant.pmd(shortFilenames: <bpt i="2" x="2">&lt;s2&gt;</bpt>'true'<ept i="2">&lt;/s2&gt;</ept>, failonruleviolation: <bpt i="3" x="3">&lt;s3&gt;</bpt>'true'<ept i="3">&lt;/s3&gt;</ept>, rulesetfiles: file(<bpt i="4" x="4">&lt;s4&gt;</bpt>'pmd-rules.xml'<ept i="4">&lt;/s4&gt;</ept>).toURI().toString()) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ant.taskdef(name: <bpt i="0" x="0">&lt;s0&gt;</bpt>'pmd'<ept i="0">&lt;/s0&gt;</ept>, classname: <bpt i="1" x="1">&lt;s1&gt;</bpt>'net.sourceforge.pmd.ant.PMDTask'<ept i="1">&lt;/s1&gt;</ept>, classpath: configurations.pmd.asPath)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T060625Z" creationid="msdx" creationdate="20141116T060625Z">
        <seg>ant.taskdef(name: <bpt i="0" x="0">&lt;s0&gt;</bpt>'pmd'<ept i="0">&lt;/s0&gt;</ept>, classname: <bpt i="1" x="1">&lt;s1&gt;</bpt>'net.sourceforge.pmd.ant.PMDTask'<ept i="1">&lt;/s1&gt;</ept>, classpath: configurations.pmd.asPath)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ant.taskdef(resource: <bpt i="0" x="0">&lt;s0&gt;</bpt>'checkstyletask.properties'<ept i="0">&lt;/s0&gt;</ept>) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T060206Z" creationid="msdx" creationdate="20141116T060206Z">
        <seg>ant.taskdef(resource: <bpt i="0" x="0">&lt;s0&gt;</bpt>'checkstyletask.properties'<ept i="0">&lt;/s0&gt;</ept>) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ant.zip(destfile: <bpt i="0" x="0">&lt;s0&gt;</bpt>'archive.zip'<ept i="0">&lt;/s0&gt;</ept>) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141115T154729Z" creationid="msdx" creationdate="20141115T154729Z">
        <seg>ant.zip(destfile: <bpt i="0" x="0">&lt;s0&gt;</bpt>'archive.zip'<ept i="0">&lt;/s0&gt;</ept>) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>antlr</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141209T073532Z" creationid="msdx" creationdate="20141209T073532Z">
        <seg>antlr</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>antlr <bpt i="0" x="0">&lt;s0&gt;</bpt>'antlr:antlr:2.7.7'<ept i="0">&lt;/s0&gt;</ept>
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T095740Z" creationid="haohang" creationdate="20150625T095740Z">
        <seg>antlr <bpt i="0" x="0">&lt;s0&gt;</bpt>'antlr:antlr:2.7.7'<ept i="0">&lt;/s0&gt;</ept>
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>antlr.srcDirs</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T102849Z" creationid="haohang" creationdate="20150625T102849Z">
        <seg>antlr.srcDirs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>antlr_plugin.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141209T073532Z" creationid="msdx" creationdate="20141209T073532Z">
        <seg>antlr_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>antlr_plugin.html#N14312</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065854Z" creationid="95" creationdate="20170416T065854Z">
        <seg>antlr_plugin.html#N14312</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>antlr_plugin.html#N14321</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065856Z" creationid="95" creationdate="20170416T065856Z">
        <seg>antlr_plugin.html#N14321</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>antlr_plugin.html#N1439F</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065858Z" creationid="95" creationdate="20170416T065858Z">
        <seg>antlr_plugin.html#N1439F</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>antlr_plugin.html#N143D2</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065900Z" creationid="95" creationdate="20170416T065900Z">
        <seg>antlr_plugin.html#N143D2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>antlr_plugin.html#N143E4</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065901Z" creationid="95" creationdate="20170416T065901Z">
        <seg>antlr_plugin.html#N143E4</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>antlr_plugin.html#N143E9</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065903Z" creationid="95" creationdate="20170416T065903Z">
        <seg>antlr_plugin.html#N143E9</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>api(IvyPublication) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170304T033031Z" creationid="95" creationdate="20170304T033031Z">
        <seg>api(IvyPublication) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>api(MavenPublication) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T062608Z" creationid="95" creationdate="20170416T062608Z">
        <seg>api(MavenPublication) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>api/</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T083504Z" creationid="haohang" creationdate="20160726T083504Z">
        <seg>api/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apiImpl/</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T083507Z" creationid="haohang" creationdate="20160726T083507Z">
        <seg>apiImpl/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>appDirName</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T141341Z" creationid="msdx" creationdate="20150504T141341Z">
        <seg>appDirName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>appDirName <bpt i="9" x="9">&lt;s9&gt;</bpt>'src/main/app'<ept i="9">&lt;/s9&gt;</ept>  <bpt i="10" x="10">&lt;s10&gt;</bpt>// use application metadata found in this folder<ept i="10">&lt;/s10&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T142855Z" creationid="msdx" creationdate="20150504T142855Z">
        <seg>appDirName <bpt i="9" x="9">&lt;s9&gt;</bpt>'src/main/app'<ept i="9">&lt;/s9&gt;</ept>  <bpt i="10" x="10">&lt;s10&gt;</bpt>// use application metadata found in this folder<ept i="10">&lt;/s10&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>append</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T132307Z" creationid="msdx" creationdate="20150506T132307Z">
        <seg>append</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>append = false</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T132254Z" creationid="msdx" creationdate="20150506T132254Z">
        <seg>append = false</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>appendix</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T160253Z" creationid="msdx" creationdate="20141113T160253Z">
        <seg>appendix</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>appendix = <bpt i="3" x="3">&lt;s3&gt;</bpt>'wrapper'<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T155759Z" creationid="msdx" creationdate="20141113T155759Z">
        <seg>appendix = <bpt i="3" x="3">&lt;s3&gt;</bpt>'wrapper'<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>application</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104754Z" creationid="msdx" creationdate="20150428T104754Z">
        <seg>application</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>application/</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T135829Z" creationid="msdx" creationdate="20150506T135829Z">
        <seg>application</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>applicationDefaultJvmArgs = [<bpt i="0" x="0">&lt;s0&gt;</bpt>"-Dgreeting.language=en"<ept i="0">&lt;/s0&gt;</ept>]</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150702T104915Z" creationid="haohang" creationdate="20150702T104915Z">
        <seg>applicationDefaultJvmArgs = [<bpt i="0" x="0">&lt;s0&gt;</bpt>"-Dgreeting.language=en"<ept i="0">&lt;/s0&gt;</ept>]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>applicationName = <bpt i="17" x="17">&lt;s17&gt;</bpt>"customear"<ept i="17">&lt;/s17&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T142900Z" creationid="msdx" creationdate="20150504T142900Z">
        <seg>applicationName = <bpt i="17" x="17">&lt;s17&gt;</bpt>"customear"<ept i="17">&lt;/s17&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>application_plugin.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104753Z" creationid="msdx" creationdate="20150428T104753Z">
        <seg>application_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>application_plugin.html#N147CF</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065954Z" creationid="95" creationdate="20170416T065954Z">
        <seg>application_plugin.html#N147CF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>application_plugin.html#N1481C</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065955Z" creationid="95" creationdate="20170416T065955Z">
        <seg>application_plugin.html#N1481C</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>application_plugin.html#N148AF</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065956Z" creationid="95" creationdate="20170416T065956Z">
        <seg>application_plugin.html#N148AF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>application_plugin.html#application_distribution_resources</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065957Z" creationid="95" creationdate="20170416T065957Z">
        <seg>application_plugin.html#application_distribution_resources</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply from: <bpt i="0" x="0">&lt;s0&gt;</bpt>'other.gradle'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T152437Z" creationid="msdx" creationdate="20141109T152437Z">
        <seg>apply from: <bpt i="0" x="0">&lt;s0&gt;</bpt>'other.gradle'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply from: <bpt i="3" x="3">&lt;s3&gt;</bpt>'other.gradle'<ept i="3">&lt;/s3&gt;</ept>, to: pos</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T153044Z" creationid="msdx" creationdate="20141109T153044Z">
        <seg>apply from: <bpt i="3" x="3">&lt;s3&gt;</bpt>'other.gradle'<ept i="3">&lt;/s3&gt;</ept>, to: pos</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: 'compare-gradle-builds'</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170109T124654Z" creationid="95" creationdate="20170109T124654Z">
        <seg>apply plugin: 'compare-gradle-builds'</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: 'compare-gradle-builds'

compareGradleBuilds {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170109T125533Z" creationid="95" creationdate="20170109T125533Z">
        <seg>apply plugin: 'compare-gradle-builds'

compareGradleBuilds {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: 'groovy'
dependencies {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T051616Z" creationid="95" creationdate="20161211T051616Z">
        <seg>apply plugin: 'groovy'
dependencies {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>"application"<ept i="0">&lt;/s0&gt;</ept>
apply plugin: <bpt i="1" x="1">&lt;s1&gt;</bpt>"jacoco"<ept i="1">&lt;/s1&gt;</ept>

mainClassName = <bpt i="2" x="2">&lt;s2&gt;</bpt>"org.gradle.MyMain"<ept i="2">&lt;/s2&gt;</ept>

jacoco {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T135602Z" creationid="msdx" creationdate="20150506T135602Z">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>"application"<ept i="0">&lt;/s0&gt;</ept>
apply plugin: <bpt i="1" x="1">&lt;s1&gt;</bpt>"jacoco"<ept i="1">&lt;/s1&gt;</ept>

mainClassName = <bpt i="2" x="2">&lt;s2&gt;</bpt>"org.gradle.MyMain"<ept i="2">&lt;/s2&gt;</ept>

jacoco {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>"c"<ept i="0">&lt;/s0&gt;</ept>
apply plugin: <bpt i="1" x="1">&lt;s1&gt;</bpt>"cunit"<ept i="1">&lt;/s1&gt;</ept>

model {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160504T151333Z" creationid="95" creationdate="20160504T151333Z">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>"c"<ept i="0">&lt;/s0&gt;</ept>
apply plugin: <bpt i="1" x="1">&lt;s1&gt;</bpt>"cunit"<ept i="1">&lt;/s1&gt;</ept>

model {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>"jacoco"<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T130229Z" creationid="msdx" creationdate="20150506T130229Z">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>"jacoco"<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>"java"<ept i="0">&lt;/s0&gt;</ept>

ext {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T050709Z" creationid="msdx" creationdate="20141108T050709Z">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>"java"<ept i="0">&lt;/s0&gt;</ept>

ext {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>"sonar"<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150510T143422Z" creationid="msdx" creationdate="20150510T143422Z">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>"sonar"<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>"sonar"<ept i="0">&lt;/s0&gt;</ept>

sonar {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T091237Z" creationid="msdx" creationdate="20150512T091237Z">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>"sonar"<ept i="0">&lt;/s0&gt;</ept>

sonar {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>"sonar-runner"<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T060745Z" creationid="msdx" creationdate="20150513T060745Z">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>"sonar-runner"<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'announce'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T063022Z" creationid="haohang" creationdate="20150628T063022Z">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'announce'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'antlr'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T094906Z" creationid="haohang" creationdate="20150625T094906Z">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'antlr'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'assembler'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160313T053831Z" creationid="95" creationdate="20160313T053831Z">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'assembler'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'build-announcements'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T091629Z" creationid="haohang" creationdate="20150628T091629Z">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'build-announcements'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'build-announcements'<ept i="0">&lt;/s0&gt;</ept>
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T091821Z" creationid="haohang" creationdate="20150628T091821Z">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'build-announcements'<ept i="0">&lt;/s0&gt;</ept>
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'build-dashboard'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150713T095213Z" creationid="haohang" creationdate="20150713T095213Z">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'build-dashboard'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'c'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160225T090443Z" creationid="haohang" creationdate="20160225T090443Z">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'c'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'checkstyle'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T151750Z" creationid="msdx" creationdate="20150504T151750Z">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'checkstyle'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'codenarc'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T133100Z" creationid="msdx" creationdate="20150505T133100Z">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'codenarc'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'cpp'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160219T082844Z" creationid="haohang" creationdate="20160219T082844Z">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'cpp'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'distribution'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150701T025858Z" creationid="haohang" creationdate="20150701T025858Z">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'distribution'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'distribution'<ept i="0">&lt;/s0&gt;</ept>

distributions {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150701T032500Z" creationid="haohang" creationdate="20150701T032500Z">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'distribution'<ept i="0">&lt;/s0&gt;</ept>

distributions {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'distribution'<ept i="0">&lt;/s0&gt;</ept>

version = <bpt i="1" x="1">&lt;s1&gt;</bpt>'1.2'<ept i="1">&lt;/s1&gt;</ept>
distributions {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150701T031249Z" creationid="haohang" creationdate="20150701T031249Z">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'distribution'<ept i="0">&lt;/s0&gt;</ept>

version = <bpt i="1" x="1">&lt;s1&gt;</bpt>'1.2'<ept i="1">&lt;/s1&gt;</ept>
distributions {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'ear'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T094446Z" creationid="msdx" creationdate="20150503T094446Z">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'ear'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'ear'<ept i="0">&lt;/s0&gt;</ept>
apply plugin: <bpt i="1" x="1">&lt;s1&gt;</bpt>'java'<ept i="1">&lt;/s1&gt;</ept>

repositories { mavenCentral() }

dependencies {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T142848Z" creationid="msdx" creationdate="20150504T142848Z">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'ear'<ept i="0">&lt;/s0&gt;</ept>
apply plugin: <bpt i="1" x="1">&lt;s1&gt;</bpt>'java'<ept i="1">&lt;/s1&gt;</ept>

repositories { mavenCentral() }

dependencies {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'eclipse'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T004133Z" creationid="haohang" creationdate="20150603T004133Z">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'eclipse'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'eclipse'<ept i="0">&lt;/s0&gt;</ept>
apply plugin: <bpt i="1" x="1">&lt;s1&gt;</bpt>'groovy'<ept i="1">&lt;/s1&gt;</ept>

repositories {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T065503Z" creationid="msdx" creationdate="20141030T065503Z">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'eclipse'<ept i="0">&lt;/s0&gt;</ept>
apply plugin: <bpt i="1" x="1">&lt;s1&gt;</bpt>'groovy'<ept i="1">&lt;/s1&gt;</ept>

repositories {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'eclipse-wtp'<ept i="0">&lt;/s0&gt;</ept>

eclipse.wtp.facet.file.withXml { provider -&gt;</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T070449Z" creationid="haohang" creationdate="20150625T070449Z">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'eclipse-wtp'<ept i="0">&lt;/s0&gt;</ept>

eclipse.wtp.facet.file.withXml { provider -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'findbugs'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T133622Z" creationid="msdx" creationdate="20150505T133622Z">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'findbugs'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'groovy'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104613Z" creationid="msdx" creationdate="20150428T104613Z">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'groovy'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'groovy'<ept i="0">&lt;/s0&gt;</ept>

dependencies {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160815T145034Z" creationid="95" creationdate="20160815T145034Z">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'groovy'<ept i="0">&lt;/s0&gt;</ept>

dependencies {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'idea'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T071741Z" creationid="haohang" creationdate="20150625T071741Z">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'idea'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'ivy-publish'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170211T024758Z" creationid="95" creationdate="20170211T024758Z">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'ivy-publish'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'java'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141122T162031Z" creationid="msdx" creationdate="20141122T162031Z">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'java'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'java'<ept i="0">&lt;/s0&gt;</ept>

compileJava.destinationDir = file(<bpt i="1" x="1">&lt;s1&gt;</bpt>"$buildDir/output/classes"<ept i="1">&lt;/s1&gt;</ept>)

task show &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141123T154211Z" creationid="msdx" creationdate="20141123T154211Z">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'java'<ept i="0">&lt;/s0&gt;</ept>

compileJava.destinationDir = file(<bpt i="1" x="1">&lt;s1&gt;</bpt>"$buildDir/output/classes"<ept i="1">&lt;/s1&gt;</ept>)

task show &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'java'<ept i="0">&lt;/s0&gt;</ept>

sourceSets.main.output.classesDir = file(<bpt i="1" x="1">&lt;s1&gt;</bpt>"$buildDir/output/classes"<ept i="1">&lt;/s1&gt;</ept>)

task show &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141124T073954Z" creationid="msdx" creationdate="20141124T073954Z">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'java'<ept i="0">&lt;/s0&gt;</ept>

sourceSets.main.output.classesDir = file(<bpt i="1" x="1">&lt;s1&gt;</bpt>"$buildDir/output/classes"<ept i="1">&lt;/s1&gt;</ept>)

task show &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'java'<ept i="0">&lt;/s0&gt;</ept>

task show &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141123T151129Z" creationid="msdx" creationdate="20141123T151129Z">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'java'<ept i="0">&lt;/s0&gt;</ept>

task show &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'java'<ept i="0">&lt;/s0&gt;</ept>

task zip(type: Zip) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T145755Z" creationid="msdx" creationdate="20141113T145755Z">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'java'<ept i="0">&lt;/s0&gt;</ept>

task zip(type: Zip) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'java'<ept i="0">&lt;/s0&gt;</ept>

version = <bpt i="1" x="1">&lt;s1&gt;</bpt>1.0<ept i="1">&lt;/s1&gt;</ept>

task myZip(type: Zip) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T154734Z" creationid="msdx" creationdate="20141113T154734Z">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'java'<ept i="0">&lt;/s0&gt;</ept>

version = <bpt i="1" x="1">&lt;s1&gt;</bpt>1.0<ept i="1">&lt;/s1&gt;</ept>

task myZip(type: Zip) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'java'<ept i="0">&lt;/s0&gt;</ept>
apply plugin: <bpt i="1" x="1">&lt;s1&gt;</bpt>'ivy-publish'<ept i="1">&lt;/s1&gt;</ept>

group = <bpt i="2" x="2">&lt;s2&gt;</bpt>'org.gradle.sample'<ept i="2">&lt;/s2&gt;</ept>
version = <bpt i="3" x="3">&lt;s3&gt;</bpt>'1.0'<ept i="3">&lt;/s3&gt;</ept>

publishing {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170326T075059Z" creationid="95" creationdate="20170326T075059Z">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'java'<ept i="0">&lt;/s0&gt;</ept>
apply plugin: <bpt i="1" x="1">&lt;s1&gt;</bpt>'ivy-publish'<ept i="1">&lt;/s1&gt;</ept>

group = <bpt i="2" x="2">&lt;s2&gt;</bpt>'org.gradle.sample'<ept i="2">&lt;/s2&gt;</ept>
version = <bpt i="3" x="3">&lt;s3&gt;</bpt>'1.0'<ept i="3">&lt;/s3&gt;</ept>

publishing {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'java'<ept i="0">&lt;/s0&gt;</ept>
apply plugin: <bpt i="1" x="1">&lt;s1&gt;</bpt>'maven-publish'<ept i="1">&lt;/s1&gt;</ept>

group = <bpt i="2" x="2">&lt;s2&gt;</bpt>'org.gradle.sample'<ept i="2">&lt;/s2&gt;</ept>
version = <bpt i="3" x="3">&lt;s3&gt;</bpt>'1.0'<ept i="3">&lt;/s3&gt;</ept>

publishing {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T063216Z" creationid="95" creationdate="20170416T063216Z">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'java'<ept i="0">&lt;/s0&gt;</ept>
apply plugin: <bpt i="1" x="1">&lt;s1&gt;</bpt>'maven-publish'<ept i="1">&lt;/s1&gt;</ept>

group = <bpt i="2" x="2">&lt;s2&gt;</bpt>'org.gradle.sample'<ept i="2">&lt;/s2&gt;</ept>
version = <bpt i="3" x="3">&lt;s3&gt;</bpt>'1.0'<ept i="3">&lt;/s3&gt;</ept>

publishing {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'java'<ept i="0">&lt;/s0&gt;</ept>
archivesBaseName = <bpt i="1" x="1">&lt;s1&gt;</bpt>'gradle'<ept i="1">&lt;/s1&gt;</ept>
version = <bpt i="2" x="2">&lt;s2&gt;</bpt>1.0<ept i="2">&lt;/s2&gt;</ept>

task myZip(type: Zip) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T155614Z" creationid="msdx" creationdate="20141113T155614Z">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'java'<ept i="0">&lt;/s0&gt;</ept>
archivesBaseName = <bpt i="1" x="1">&lt;s1&gt;</bpt>'gradle'<ept i="1">&lt;/s1&gt;</ept>
version = <bpt i="2" x="2">&lt;s2&gt;</bpt>1.0<ept i="2">&lt;/s2&gt;</ept>

task myZip(type: Zip) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'java'<ept i="0">&lt;/s0&gt;</ept>
version = <bpt i="1" x="1">&lt;s1&gt;</bpt>1.0<ept i="1">&lt;/s1&gt;</ept>

task myZip(type: Zip) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T155545Z" creationid="msdx" creationdate="20141113T155545Z">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'java'<ept i="0">&lt;/s0&gt;</ept>
version = <bpt i="1" x="1">&lt;s1&gt;</bpt>1.0<ept i="1">&lt;/s1&gt;</ept>

task myZip(type: Zip) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'java-library-distribution'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150705T084551Z" creationid="haohang" creationdate="20150705T084551Z">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'java-library-distribution'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'jdepend'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T134208Z" creationid="msdx" creationdate="20150505T134208Z">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'jdepend'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'jetty'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T094212Z" creationid="msdx" creationdate="20141030T094212Z">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'jetty'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'maven'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151228T151904Z" creationid="95" creationdate="20151228T151904Z">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'maven'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'maven'<ept i="0">&lt;/s0&gt;</ept>

uploadArchives {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160104T154207Z" creationid="95" creationdate="20160104T154207Z">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'maven'<ept i="0">&lt;/s0&gt;</ept>

uploadArchives {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'maven-publish'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170412T152702Z" creationid="95" creationdate="20170412T152702Z">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'maven-publish'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'objective-c'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160319T115138Z" creationid="95" creationdate="20160319T115138Z">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'objective-c'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'objective-cpp'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160319T115450Z" creationid="95" creationdate="20160319T115450Z">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'objective-cpp'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'osgi'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150526T004304Z" creationid="haohang" creationdate="20150526T004304Z">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'osgi'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'pmd'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T135525Z" creationid="msdx" creationdate="20150505T135525Z">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'pmd'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'project-report'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T061102Z" creationid="haohang" creationdate="20150628T061102Z">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'project-report'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'scala'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T145324Z" creationid="msdx" creationdate="20150429T145324Z">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'scala'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'signing'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160108T151112Z" creationid="95" creationdate="20160108T151112Z">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'signing'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'war'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T085901Z" creationid="msdx" creationdate="20150503T085901Z">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'war'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'windows-resources'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160324T153249Z" creationid="95" creationdate="20160324T153249Z">
        <seg>apply plugin: <bpt i="0" x="0">&lt;s0&gt;</bpt>'windows-resources'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="1" x="1">&lt;s1&gt;</bpt>"cpp"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160325T033432Z" creationid="haohang" creationdate="20160325T033432Z">
        <seg>apply plugin: <bpt i="1" x="1">&lt;s1&gt;</bpt>"cpp"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="1" x="1">&lt;s1&gt;</bpt>'ivy-publish'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T145155Z" creationid="95" creationdate="20170330T145155Z">
        <seg>apply plugin: <bpt i="1" x="1">&lt;s1&gt;</bpt>'ivy-publish'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="3" x="3">&lt;s3&gt;</bpt>"cpp"<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160325T033440Z" creationid="haohang" creationdate="20160325T033440Z">
        <seg>apply plugin: <bpt i="3" x="3">&lt;s3&gt;</bpt>"cpp"<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: <bpt i="3" x="3">&lt;s3&gt;</bpt>'war'<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160722T091244Z" creationid="haohang" creationdate="20160722T091244Z">
        <seg>apply plugin: <bpt i="3" x="3">&lt;s3&gt;</bpt>'war'<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: DocumentationPlugin

books {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T015220Z" creationid="95" creationdate="20161211T015220Z">
        <seg>apply plugin: DocumentationPlugin

books {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: GreetingPlugin

<bpt i="0" x="0">&lt;s0&gt;</bpt>class<ept i="0">&lt;/s0&gt;</ept> GreetingPlugin <bpt i="1" x="1">&lt;s1&gt;</bpt>implements<ept i="1">&lt;/s1&gt;</ept> Plugin&lt;Project&gt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T123817Z" creationid="95" creationdate="20160820T123817Z">
        <seg>apply plugin: GreetingPlugin

<bpt i="0" x="0">&lt;s0&gt;</bpt>class<ept i="0">&lt;/s0&gt;</ept> GreetingPlugin <bpt i="1" x="1">&lt;s1&gt;</bpt>implements<ept i="1">&lt;/s1&gt;</ept> Plugin&lt;Project&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: GreetingPlugin

greeting {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T131356Z" creationid="95" creationdate="20160820T131356Z">
        <seg>apply plugin: GreetingPlugin

greeting {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: GreetingPlugin

greeting.message = <bpt i="0" x="0">&lt;s0&gt;</bpt>'Hi from Gradle'<ept i="0">&lt;/s0&gt;</ept>

<bpt i="1" x="1">&lt;s1&gt;</bpt>class<ept i="1">&lt;/s1&gt;</ept> GreetingPlugin <bpt i="2" x="2">&lt;s2&gt;</bpt>implements<ept i="2">&lt;/s2&gt;</ept> Plugin&lt;Project&gt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T130728Z" creationid="95" creationdate="20160820T130728Z">
        <seg>apply plugin: GreetingPlugin

greeting.message = <bpt i="0" x="0">&lt;s0&gt;</bpt>'Hi from Gradle'<ept i="0">&lt;/s0&gt;</ept>

<bpt i="1" x="1">&lt;s1&gt;</bpt>class<ept i="1">&lt;/s1&gt;</ept> GreetingPlugin <bpt i="2" x="2">&lt;s2&gt;</bpt>implements<ept i="2">&lt;/s2&gt;</ept> Plugin&lt;Project&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: JavaPlugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141122T162533Z" creationid="msdx" creationdate="20141122T162533Z">
        <seg>apply plugin: JavaPlugin</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin: org.gradle.api.plugins.JavaPlugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141122T162340Z" creationid="msdx" creationdate="20141122T162340Z">
        <seg>apply plugin: org.gradle.api.plugins.JavaPlugin</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin:<bpt i="0" x="0">&lt;s0&gt;</bpt>'application'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150702T103847Z" creationid="haohang" creationdate="20150702T103847Z">
        <seg>apply plugin:<bpt i="0" x="0">&lt;s0&gt;</bpt>'application'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>apply plugin:EnterpriseRepositoryPlugin

<bpt i="0" x="0">&lt;s0&gt;</bpt>class<ept i="0">&lt;/s0&gt;</ept> EnterpriseRepositoryPlugin <bpt i="1" x="1">&lt;s1&gt;</bpt>implements<ept i="1">&lt;/s1&gt;</ept> Plugin&lt;Gradle&gt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161215T144231Z" creationid="95" creationdate="20161215T144231Z">
        <seg>apply plugin:EnterpriseRepositoryPlugin

<bpt i="0" x="0">&lt;s0&gt;</bpt>class<ept i="0">&lt;/s0&gt;</ept> EnterpriseRepositoryPlugin <bpt i="1" x="1">&lt;s1&gt;</bpt>implements<ept i="1">&lt;/s1&gt;</ept> Plugin&lt;Gradle&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>applyTo run
}

task applicationCodeCoverageReport(type:JacocoReport){</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T135603Z" creationid="msdx" creationdate="20150506T135603Z">
        <seg>applyTo run
}

task applicationCodeCoverageReport(type:JacocoReport){</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>architecture <bpt i="1" x="1">&lt;s1&gt;</bpt>"x86"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160405T034024Z" creationid="haohang" creationdate="20160405T034024Z">
        <seg>architecture <bpt i="1" x="1">&lt;s1&gt;</bpt>"x86"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>architecture <bpt i="3" x="3">&lt;s3&gt;</bpt>"x86_64"<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160405T034031Z" creationid="haohang" creationdate="20160405T034031Z">
        <seg>architecture <bpt i="3" x="3">&lt;s3&gt;</bpt>"x86_64"<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>architecture <bpt i="4" x="4">&lt;s4&gt;</bpt>"ia-64"<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160405T034032Z" creationid="haohang" creationdate="20160405T034032Z">
        <seg>architecture <bpt i="4" x="4">&lt;s4&gt;</bpt>"ia-64"<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>archiveName</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T155819Z" creationid="msdx" creationdate="20141113T155819Z">
        <seg>archiveName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>archivePath</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T155927Z" creationid="msdx" creationdate="20141113T155927Z">
        <seg>archivePath</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>archiveTask.extension</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T144045Z" creationid="95" creationdate="20160105T144045Z">
        <seg>archiveTask.extension</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>archives</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083232Z" creationid="msdx" creationdate="20150428T083232Z">
        <seg>archives</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>archives file: generate.destFile, name: <bpt i="1" x="1">&lt;s1&gt;</bpt>'my-artifact'<ept i="1">&lt;/s1&gt;</ept>, type: <bpt i="2" x="2">&lt;s2&gt;</bpt>'text'<ept i="2">&lt;/s2&gt;</ept>, builtBy: generate
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151226T091510Z" creationid="95" creationdate="20151226T091510Z">
        <seg>archives file: generate.destFile, name: <bpt i="1" x="1">&lt;s1&gt;</bpt>'my-artifact'<ept i="1">&lt;/s1&gt;</ept>, type: <bpt i="2" x="2">&lt;s2&gt;</bpt>'text'<ept i="2">&lt;/s2&gt;</ept>, builtBy: generate
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>archives myJar
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151226T090908Z" creationid="95" creationdate="20151226T090908Z">
        <seg>archives myJar
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>archives someFile
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151226T091055Z" creationid="95" creationdate="20151226T091055Z">
        <seg>archives someFile
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>archives(myTask.destFile) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151226T091158Z" creationid="95" creationdate="20151226T091158Z">
        <seg>archives(myTask.destFile) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>archivesBaseName</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083245Z" creationid="msdx" creationdate="20150428T083245Z">
        <seg>archivesBaseName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>artifact <bpt i="2" x="2">&lt;s2&gt;</bpt>"3rd-party-artifacts/[organisation]/[module]/[revision]/[artifact]-[revision].[ext]"<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T111345Z" creationid="95" creationdate="20151006T111345Z">
        <seg>artifact <bpt i="2" x="2">&lt;s2&gt;</bpt>"3rd-party-artifacts/[organisation]/[module]/[revision]/[artifact]-[revision].[ext]"<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>artifact <bpt i="2" x="2">&lt;s2&gt;</bpt>"[module]/[revision]/[type]/[artifact].[ext]"<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T110641Z" creationid="95" creationdate="20151006T110641Z">
        <seg>artifact <bpt i="2" x="2">&lt;s2&gt;</bpt>"[module]/[revision]/[type]/[artifact].[ext]"<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>artifact <bpt i="2" x="2">&lt;s2&gt;</bpt>"[organisation]/[module]/[revision]/[artifact]-[revision].[ext]"<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T111052Z" creationid="95" creationdate="20151006T111052Z">
        <seg>artifact <bpt i="2" x="2">&lt;s2&gt;</bpt>"[organisation]/[module]/[revision]/[artifact]-[revision].[ext]"<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>artifact <bpt i="3" x="3">&lt;s3&gt;</bpt>"company-artifacts/[organisation]/[module]/[revision]/[artifact]-[revision].[ext]"<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T111347Z" creationid="95" creationdate="20151006T111347Z">
        <seg>artifact <bpt i="3" x="3">&lt;s3&gt;</bpt>"company-artifacts/[organisation]/[module]/[revision]/[artifact]-[revision].[ext]"<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>artifact apiJar</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T062614Z" creationid="95" creationdate="20170416T062614Z">
        <seg>artifact apiJar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>artifact sourceJar {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170412T154832Z" creationid="95" creationdate="20170412T154832Z">
        <seg>artifact sourceJar {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>artifact(sourceJar) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20170216T072608Z" creationid="haohang" creationdate="20170216T072608Z">
        <seg>artifact(sourceJar) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>artifact.name == <bpt i="2" x="2">&lt;s2&gt;</bpt>'api'<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T144208Z" creationid="95" creationdate="20160106T144208Z">
        <seg>artifact.name == <bpt i="2" x="2">&lt;s2&gt;</bpt>'api'<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>artifact.name == <bpt i="4" x="4">&lt;s4&gt;</bpt>'service'<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T144210Z" creationid="95" creationdate="20160106T144210Z">
        <seg>artifact.name == <bpt i="4" x="4">&lt;s4&gt;</bpt>'service'<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>artifactId</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T144036Z" creationid="95" creationdate="20160105T144036Z">
        <seg>artifactId</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>artifactId <bpt i="1" x="1">&lt;s1&gt;</bpt>'project1-sample'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T032459Z" creationid="95" creationdate="20170416T032459Z">
        <seg>artifactId <bpt i="1" x="1">&lt;s1&gt;</bpt>'project1-sample'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>artifactId <bpt i="3" x="3">&lt;s3&gt;</bpt>'project2-impl'<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T062605Z" creationid="95" creationdate="20170416T062605Z">
        <seg>artifactId <bpt i="3" x="3">&lt;s3&gt;</bpt>'project2-impl'<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>artifactId <bpt i="6" x="6">&lt;s6&gt;</bpt>'project2-api'<ept i="6">&lt;/s6&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T062611Z" creationid="95" creationdate="20170416T062611Z">
        <seg>artifactId <bpt i="6" x="6">&lt;s6&gt;</bpt>'project2-api'<ept i="6">&lt;/s6&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>artifactPattern <bpt i="1" x="1">&lt;s1&gt;</bpt>"$projectDir/repo/[organisation]/[module]-[revision](-[classifier]).[ext]"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T134715Z" creationid="95" creationdate="20151006T134715Z">
        <seg>artifactPattern <bpt i="1" x="1">&lt;s1&gt;</bpt>"$projectDir/repo/[organisation]/[module]-[revision](-[classifier]).[ext]"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>artifactUrls <bpt i="3" x="3">&lt;s3&gt;</bpt>"http://repo.mycompany.com/jars"<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150909T053118Z" creationid="haohang" creationdate="20150909T053118Z">
        <seg>artifactUrls <bpt i="3" x="3">&lt;s3&gt;</bpt>"http://repo.mycompany.com/jars"<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>artifactUrls <bpt i="4" x="4">&lt;s4&gt;</bpt>"http://repo.mycompany.com/jars2"<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150909T053119Z" creationid="haohang" creationdate="20150909T053119Z">
        <seg>artifactUrls <bpt i="4" x="4">&lt;s4&gt;</bpt>"http://repo.mycompany.com/jars2"<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>artifact_dependencies_tutorial.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T161446Z" creationid="msdx" creationdate="20141105T161446Z">
        <seg>artifact_dependencies_tutorial.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>artifact_dependencies_tutorial.html#N10568</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163517Z" creationid="msdx" creationdate="20141109T163517Z">
        <seg>artifact_dependencies_tutorial.html#N10568</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>artifact_dependencies_tutorial.html#N10586</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163535Z" creationid="msdx" creationdate="20141109T163535Z">
        <seg>artifact_dependencies_tutorial.html#N10586</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>artifact_dependencies_tutorial.html#N105C6</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163610Z" creationid="msdx" creationdate="20141109T163610Z">
        <seg>artifact_dependencies_tutorial.html#N105C6</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>artifact_dependencies_tutorial.html#N10608</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163620Z" creationid="msdx" creationdate="20141109T163620Z">
        <seg>artifact_dependencies_tutorial.html#N10608</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>artifact_dependencies_tutorial.html#N10650</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163640Z" creationid="msdx" creationdate="20141109T163640Z">
        <seg>artifact_dependencies_tutorial.html#N10650</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>artifact_dependencies_tutorial.html#N1068E</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163650Z" creationid="msdx" creationdate="20141109T163650Z">
        <seg>artifact_dependencies_tutorial.html#N1068E</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>artifact_dependencies_tutorial.html#configurations</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163600Z" creationid="msdx" creationdate="20141109T163600Z">
        <seg>artifact_dependencies_tutorial.html#configurations</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>artifact_management.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T160754Z" creationid="msdx" creationdate="20141113T160754Z">
        <seg>artifact_management.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>artifact_management.html#N15370</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070232Z" creationid="95" creationdate="20170416T070232Z">
        <seg>artifact_management.html#N15370</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>artifact_management.html#N15399</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070239Z" creationid="95" creationdate="20170416T070239Z">
        <seg>artifact_management.html#N15399</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>artifact_management.html#N153D7</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070245Z" creationid="95" creationdate="20170416T070245Z">
        <seg>artifact_management.html#N153D7</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>artifact_management.html#artifacts_and_configurations</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070233Z" creationid="95" creationdate="20170416T070233Z">
        <seg>artifact_management.html#artifacts_and_configurations</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>artifact_management.html#project_libraries</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151221T141636Z" creationid="95" creationdate="20151221T141636Z">
        <seg>artifact_management.html#project_libraries</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>artifacts {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T084528Z" creationid="haohang" creationdate="20160726T084528Z">
        <seg>artifacts {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>asNode().appendNode(<bpt i="0" x="0">&lt;s0&gt;</bpt>'description'<ept i="0">&lt;/s0&gt;</ept>, <bpt i="1" x="1">&lt;s1&gt;</bpt>'A demonstration of maven POM customization'<ept i="1">&lt;/s1&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T033108Z" creationid="95" creationdate="20170416T033108Z">
        <seg>asNode().appendNode(<bpt i="0" x="0">&lt;s0&gt;</bpt>'description'<ept i="0">&lt;/s0&gt;</ept>, <bpt i="1" x="1">&lt;s1&gt;</bpt>'A demonstration of maven POM customization'<ept i="1">&lt;/s1&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>asNode().info[<bpt i="0" x="0">&lt;s0&gt;</bpt>0<ept i="0">&lt;/s0&gt;</ept>].appendNode(<bpt i="1" x="1">&lt;s1&gt;</bpt>'description'<ept i="1">&lt;/s1&gt;</ept>, <bpt i="2" x="2">&lt;s2&gt;</bpt>'A demonstration of ivy descriptor customization'<ept i="2">&lt;/s2&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170304T031120Z" creationid="95" creationdate="20170304T031120Z">
        <seg>asNode().info[<bpt i="0" x="0">&lt;s0&gt;</bpt>0<ept i="0">&lt;/s0&gt;</ept>].appendNode(<bpt i="1" x="1">&lt;s1&gt;</bpt>'description'<ept i="1">&lt;/s1&gt;</ept>, <bpt i="2" x="2">&lt;s2&gt;</bpt>'A demonstration of ivy descriptor customization'<ept i="2">&lt;/s2&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>asNode().info[<bpt i="16" x="16">&lt;s16&gt;</bpt>0<ept i="16">&lt;/s16&gt;</ept>].appendNode(<bpt i="17" x="17">&lt;s17&gt;</bpt>'description'<ept i="17">&lt;/s17&gt;</ept>, description)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T145244Z" creationid="95" creationdate="20170330T145244Z">
        <seg>asNode().info[<bpt i="16" x="16">&lt;s16&gt;</bpt>0<ept i="16">&lt;/s16&gt;</ept>].appendNode(<bpt i="17" x="17">&lt;s17&gt;</bpt>'description'<ept i="17">&lt;/s17&gt;</ept>, description)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>assemble</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083225Z" creationid="msdx" creationdate="20150428T083225Z">
        <seg>assemble</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>assembler</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141209T073742Z" creationid="msdx" creationdate="20141209T073742Z">
        <seg>assembler</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>assembler.args <bpt i="1" x="1">&lt;s1&gt;</bpt>"/Zi"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160324T152625Z" creationid="95" creationdate="20160324T152625Z">
        <seg>assembler.args <bpt i="1" x="1">&lt;s1&gt;</bpt>"/Zi"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>assembler.args <bpt i="3" x="3">&lt;s3&gt;</bpt>"-g"<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160324T152626Z" creationid="95" creationdate="20160324T152626Z">
        <seg>assembler.args <bpt i="3" x="3">&lt;s3&gt;</bpt>"-g"<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>assertTrue(project.tasks.hello <bpt i="5" x="5">&lt;s5&gt;</bpt>instanceof<ept i="5">&lt;/s5&gt;</ept> GreetingTask)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T014933Z" creationid="95" creationdate="20161211T014933Z">
        <seg>assertTrue(project.tasks.hello <bpt i="5" x="5">&lt;s5&gt;</bpt>instanceof<ept i="5">&lt;/s5&gt;</ept> GreetingTask)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>assertTrue(task <bpt i="5" x="5">&lt;s5&gt;</bpt>instanceof<ept i="5">&lt;/s5&gt;</ept> GreetingTask)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160815T150133Z" creationid="95" creationdate="20160815T150133Z">
        <seg>assertTrue(task <bpt i="5" x="5">&lt;s5&gt;</bpt>instanceof<ept i="5">&lt;/s5&gt;</ept> GreetingTask)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>attributes key1: <bpt i="0" x="0">&lt;s0&gt;</bpt>'value1'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T145616Z" creationid="msdx" creationdate="20150428T145616Z">
        <seg>attributes key1: <bpt i="0" x="0">&lt;s0&gt;</bpt>'value1'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>attributes(<bpt i="0" x="0">&lt;s0&gt;</bpt>"Implementation-Title"<ept i="0">&lt;/s0&gt;</ept>: <bpt i="1" x="1">&lt;s1&gt;</bpt>"Gradle"<ept i="1">&lt;/s1&gt;</ept>, <bpt i="2" x="2">&lt;s2&gt;</bpt>"Implementation-Version"<ept i="2">&lt;/s2&gt;</ept>: version)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T145225Z" creationid="msdx" creationdate="20150428T145225Z">
        <seg>attributes(<bpt i="0" x="0">&lt;s0&gt;</bpt>"Implementation-Title"<ept i="0">&lt;/s0&gt;</ept>: <bpt i="1" x="1">&lt;s1&gt;</bpt>"Gradle"<ept i="1">&lt;/s1&gt;</ept>, <bpt i="2" x="2">&lt;s2&gt;</bpt>"Implementation-Version"<ept i="2">&lt;/s2&gt;</ept>: version)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>attributes(<bpt i="0" x="0">&lt;s0&gt;</bpt>"Implementation-Title"<ept i="0">&lt;/s0&gt;</ept>: <bpt i="1" x="1">&lt;s1&gt;</bpt>"Gradle"<ept i="1">&lt;/s1&gt;</ept>, <bpt i="2" x="2">&lt;s2&gt;</bpt>"Implementation-Version"<ept i="2">&lt;/s2&gt;</ept>: version)
}
task fooJar(type: Jar) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T145342Z" creationid="msdx" creationdate="20150428T145342Z">
        <seg>attributes(<bpt i="0" x="0">&lt;s0&gt;</bpt>"Implementation-Title"<ept i="0">&lt;/s0&gt;</ept>: <bpt i="1" x="1">&lt;s1&gt;</bpt>"Gradle"<ept i="1">&lt;/s1&gt;</ept>, <bpt i="2" x="2">&lt;s2&gt;</bpt>"Implementation-Version"<ept i="2">&lt;/s2&gt;</ept>: version)
}
task fooJar(type: Jar) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>authentication</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T141905Z" creationid="95" creationdate="20160105T141905Z">
        <seg>authentication</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>authentication(userName: <bpt i="2" x="2">&lt;s2&gt;</bpt>"me"<ept i="2">&lt;/s2&gt;</ept>, password: <bpt i="3" x="3">&lt;s3&gt;</bpt>"myPassword"<ept i="3">&lt;/s3&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T134856Z" creationid="95" creationdate="20160105T134856Z">
        <seg>authentication(userName: <bpt i="2" x="2">&lt;s2&gt;</bpt>"me"<ept i="2">&lt;/s2&gt;</ept>, password: <bpt i="3" x="3">&lt;s3&gt;</bpt>"myPassword"<ept i="3">&lt;/s3&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>auto-generated</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T132320Z" creationid="msdx" creationdate="20150506T132320Z">
        <seg>auto-generated</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>base</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104859Z" creationid="msdx" creationdate="20150428T104859Z">
        <seg>base</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>base.css</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T033818Z" creationid="msdx" creationdate="20141030T033818Z">
        <seg>base.css</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>baseName</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T160146Z" creationid="msdx" creationdate="20141113T160146Z">
        <seg>baseName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>baseName <bpt i="0" x="0">&lt;s0&gt;</bpt>"publishing-api"<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170304T033025Z" creationid="95" creationdate="20170304T033025Z">
        <seg>baseName <bpt i="0" x="0">&lt;s0&gt;</bpt>"publishing-api"<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>baseName = <bpt i="0" x="0">&lt;s0&gt;</bpt>"stuff"<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160109T073059Z" creationid="95" creationdate="20160109T073059Z">
        <seg>baseName = <bpt i="0" x="0">&lt;s0&gt;</bpt>"stuff"<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>baseName = <bpt i="0" x="0">&lt;s0&gt;</bpt>'my-name'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150705T084611Z" creationid="haohang" creationdate="20150705T084611Z">
        <seg>baseName = <bpt i="0" x="0">&lt;s0&gt;</bpt>'my-name'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>baseName = <bpt i="1" x="1">&lt;s1&gt;</bpt>'someName'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150701T032508Z" creationid="haohang" creationdate="20150701T032508Z">
        <seg>baseName = <bpt i="1" x="1">&lt;s1&gt;</bpt>'someName'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>baseName = <bpt i="3" x="3">&lt;s3&gt;</bpt>'customName'<ept i="3">&lt;/s3&gt;</ept>
}

println myZip.archiveName</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T155547Z" creationid="msdx" creationdate="20141113T155547Z">
        <seg>baseName = <bpt i="3" x="3">&lt;s3&gt;</bpt>'customName'<ept i="3">&lt;/s3&gt;</ept>
}

println myZip.archiveName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>baseName = <bpt i="5" x="5">&lt;s5&gt;</bpt>'api-spi'<ept i="5">&lt;/s5&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T084525Z" creationid="haohang" creationdate="20160726T084525Z">
        <seg>baseName = <bpt i="5" x="5">&lt;s5&gt;</bpt>'api-spi'<ept i="5">&lt;/s5&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>beforeDeployment { MavenDeployment deployment -&gt; signing.signPom(deployment) }</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160126T145258Z" creationid="95" creationdate="20160126T145258Z">
        <seg>beforeDeployment { MavenDeployment deployment -&gt; signing.signPom(deployment) }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>beforeMerged { classpath -&gt;</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T064926Z" creationid="haohang" creationdate="20150625T064926Z">
        <seg>beforeMerged { classpath -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>beforeMerged { module -&gt;</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T073922Z" creationid="haohang" creationdate="20150625T073922Z">
        <seg>beforeMerged { module -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>beforeMerged { project -&gt;</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T074117Z" creationid="haohang" creationdate="20150625T074117Z">
        <seg>beforeMerged { project -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>beginIndex = <bpt i="0" x="0">&lt;s0&gt;</bpt>1<ept i="0">&lt;/s0&gt;</ept>;
endIndex = <bpt i="1" x="1">&lt;s1&gt;</bpt>5<ept i="1">&lt;/s1&gt;</ept>;</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T153046Z" creationid="msdx" creationdate="20141109T153046Z">
        <seg>beginIndex = <bpt i="0" x="0">&lt;s0&gt;</bpt>1<ept i="0">&lt;/s0&gt;</ept>;
endIndex = <bpt i="1" x="1">&lt;s1&gt;</bpt>5<ept i="1">&lt;/s1&gt;</ept>;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>beginIndex = <bpt i="2" x="2">&lt;s2&gt;</bpt>1<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T152807Z" creationid="msdx" creationdate="20141109T152807Z">
        <seg>beginIndex = <bpt i="2" x="2">&lt;s2&gt;</bpt>1<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>binaries.all {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160324T151753Z" creationid="95" creationdate="20160324T151753Z">
        <seg>binaries.all {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>binaries.withType(SharedLibraryBinary) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160324T153106Z" creationid="95" creationdate="20160324T153106Z">
        <seg>binaries.withType(SharedLibraryBinary) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>binaries.withType(StaticLibraryBinary) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160504T151339Z" creationid="95" creationdate="20160504T151339Z">
        <seg>binaries.withType(StaticLibraryBinary) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>binaries.withType(TestSuiteExecutableBinary) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160504T151036Z" creationid="95" creationdate="20160504T151036Z">
        <seg>binaries.withType(TestSuiteExecutableBinary) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>bluewhale/</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160522T125259Z" creationid="95" creationdate="20160522T125259Z">
        <seg>bluewhale/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>bluewhale/build.gradle</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160527T163303Z" creationid="95" creationdate="20160527T163303Z">
        <seg>bluewhale/build.gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>books.all {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T015244Z" creationid="95" creationdate="20161211T015244Z">
        <seg>books.all {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>books.each { book -&gt;</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T015225Z" creationid="95" creationdate="20161211T015225Z">
        <seg>books.each { book -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>build</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083226Z" creationid="msdx" creationdate="20150428T083226Z">
        <seg>build</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>build-announcements</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104803Z" creationid="msdx" creationdate="20150428T104803Z">
        <seg>build-announcements</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>build-dashboard</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104921Z" creationid="msdx" creationdate="20150428T104921Z">
        <seg>build-dashboard</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>build-init</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104922Z" creationid="msdx" creationdate="20150428T104922Z">
        <seg>build-init</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>build-resource-only-dll.gradle</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160325T020937Z" creationid="haohang" creationdate="20160325T020937Z">
        <seg>build-resource-only-dll.gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>build.gradle</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T065503Z" creationid="msdx" creationdate="20141030T065503Z">
        <seg>build.gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>build.xml</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T060914Z" creationid="msdx" creationdate="20141116T060914Z">
        <seg>build.xml</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>build/</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T135829Z" creationid="msdx" creationdate="20150506T135829Z">
        <seg>build</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>build<bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>ConfigurationName<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083228Z" creationid="msdx" creationdate="20150428T083228Z">
        <seg>build<bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>ConfigurationName<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>buildDashboard</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150713T100310Z" creationid="haohang" creationdate="20150713T100310Z">
        <seg>buildDashboard</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>buildDashboard_plugin.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104920Z" creationid="msdx" creationdate="20150428T104920Z">
        <seg>buildDashboard_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>buildDashboard_plugin.html#N14B10</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070103Z" creationid="95" creationdate="20170416T070103Z">
        <seg>buildDashboard_plugin.html#N14B10</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>buildDashboard_plugin.html#N14B3A</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070104Z" creationid="95" creationdate="20170416T070104Z">
        <seg>buildDashboard_plugin.html#N14B3A</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>buildDashboard_plugin.html#N14B65</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070105Z" creationid="95" creationdate="20170416T070105Z">
        <seg>buildDashboard_plugin.html#N14B65</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>buildDashboard_plugin.html#N14B6A</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070106Z" creationid="95" creationdate="20170416T070106Z">
        <seg>buildDashboard_plugin.html#N14B6A</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>buildDashboard_plugin.html#N14B6F</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070107Z" creationid="95" creationdate="20170416T070107Z">
        <seg>buildDashboard_plugin.html#N14B6F</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>buildDependents</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083227Z" creationid="msdx" creationdate="20150428T083227Z">
        <seg>buildDependents</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>buildDir</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T044403Z" creationid="msdx" creationdate="20141108T044403Z">
        <seg>buildDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>buildFile = <bpt i="0" x="0">&lt;s0&gt;</bpt>'other.gradle'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161212T153535Z" creationid="95" creationdate="20161212T153535Z">
        <seg>buildFile = <bpt i="0" x="0">&lt;s0&gt;</bpt>'other.gradle'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>buildNeeded</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083227Z" creationid="msdx" creationdate="20150428T083227Z">
        <seg>buildNeeded</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>buildSrc/build.gradle</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T052838Z" creationid="95" creationdate="20161211T052838Z">
        <seg>buildSrc/build.gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>buildTypes {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160401T090259Z" creationid="haohang" creationdate="20160401T090259Z">
        <seg>buildTypes {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>build_announcements_plugin.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104802Z" creationid="msdx" creationdate="20150428T104802Z">
        <seg>build_announcements_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>build_announcements_plugin.html#N1463F</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065937Z" creationid="95" creationdate="20170416T065937Z">
        <seg>build_announcements_plugin.html#N1463F</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>build_environment.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141117T123745Z" creationid="msdx" creationdate="20141117T123745Z">
        <seg>build_environment.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>build_environment.html#sec:accessing_the_web_via_a_proxy</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150508T131819Z" creationid="msdx" creationdate="20150508T131819Z">
        <seg>build_environment.html#sec:accessing_the_web_via_a_proxy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>build_environment.html#sec:gradle_configuration_properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141118T095704Z" creationid="msdx" creationdate="20141118T095704Z">
        <seg>build_environment.html#sec:gradle_configuration_properties</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>build_init_plugin.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104922Z" creationid="msdx" creationdate="20150428T104922Z">
        <seg>build_init_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>build_init_plugin.html#N14996</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070024Z" creationid="95" creationdate="20170416T070024Z">
        <seg>build_init_plugin.html#N14996</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>build_init_plugin.html#N149DC</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070025Z" creationid="95" creationdate="20170416T070025Z">
        <seg>build_init_plugin.html#N149DC</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>build_init_plugin.html#N149FF</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070030Z" creationid="95" creationdate="20170416T070030Z">
        <seg>build_init_plugin.html#N149FF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>build_lifecycle.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T145919Z" creationid="95" creationdate="20160106T145919Z">
        <seg>build_lifecycle.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>build_lifecycle.html#build_lifecycle_events</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T154833Z" creationid="msdx" creationdate="20141116T154833Z">
        <seg>build_lifecycle.html#build_lifecycle_events</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>build_lifecycle.html#sec:build_phases</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160522T025002Z" creationid="95" creationdate="20160522T025002Z">
        <seg>build_lifecycle.html#sec:build_phases</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>build_lifecycle.html#sec:configuration_and_execution_of_a_single_project_build</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070540Z" creationid="95" creationdate="20170416T070540Z">
        <seg>build_lifecycle.html#sec:configuration_and_execution_of_a_single_project_build</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>build_lifecycle.html#sec:initialization</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070538Z" creationid="95" creationdate="20170416T070538Z">
        <seg>build_lifecycle.html#sec:initialization</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>build_lifecycle.html#sec:multi_project_builds</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070534Z" creationid="95" creationdate="20170416T070534Z">
        <seg>build_lifecycle.html#sec:multi_project_builds</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>build_lifecycle.html#sec:settings_file</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070524Z" creationid="95" creationdate="20170416T070524Z">
        <seg>build_lifecycle.html#sec:settings_file</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>buildscript {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160815T145926Z" creationid="95" creationdate="20160815T145926Z">
        <seg>buildscript {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>builtBy <bpt i="1" x="1">&lt;s1&gt;</bpt>'compile'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T094453Z" creationid="haohang" creationdate="20150801T094453Z">
        <seg>builtBy <bpt i="1" x="1">&lt;s1&gt;</bpt>'compile'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>builtBy myTask</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151226T091200Z" creationid="95" creationdate="20151226T091200Z">
        <seg>builtBy myTask</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>c</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141209T074046Z" creationid="msdx" creationdate="20141209T074046Z">
        <seg>c</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>c {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160225T090549Z" creationid="haohang" creationdate="20160225T090549Z">
        <seg>c {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>cCompiler.args <bpt i="2" x="2">&lt;s2&gt;</bpt>"/Zi"<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160324T152308Z" creationid="95" creationdate="20160324T152308Z">
        <seg>cCompiler.args <bpt i="2" x="2">&lt;s2&gt;</bpt>"/Zi"<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>cCompiler.define <bpt i="3" x="3">&lt;s3&gt;</bpt>"DLL_EXPORT"<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160324T152309Z" creationid="95" creationdate="20160324T152309Z">
        <seg>cCompiler.define <bpt i="3" x="3">&lt;s3&gt;</bpt>"DLL_EXPORT"<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>cCompiler.define <bpt i="3" x="3">&lt;s3&gt;</bpt>"PLUS_BROKEN"<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160504T151038Z" creationid="95" creationdate="20160504T151038Z">
        <seg>cCompiler.define <bpt i="3" x="3">&lt;s3&gt;</bpt>"PLUS_BROKEN"<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>cCompiler.define <bpt i="7" x="7">&lt;s7&gt;</bpt>"PLUS_BROKEN"<ept i="7">&lt;/s7&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160504T151359Z" creationid="95" creationdate="20160504T151359Z">
        <seg>cCompiler.define <bpt i="7" x="7">&lt;s7&gt;</bpt>"PLUS_BROKEN"<ept i="7">&lt;/s7&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>check</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083226Z" creationid="msdx" creationdate="20150428T083226Z">
        <seg>check</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>checkstyle</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104803Z" creationid="msdx" creationdate="20150428T104803Z">
        <seg>checkstyle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>checkstyle<bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>SourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T025708Z" creationid="msdx" creationdate="20150505T025708Z">
        <seg>checkstyle<bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>SourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>checkstyleMain</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T024701Z" creationid="msdx" creationdate="20150505T024701Z">
        <seg>checkstyleMain</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>checkstyleTest</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T025651Z" creationid="msdx" creationdate="20150505T025651Z">
        <seg>checkstyleTest</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>checkstyle_plugin.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104803Z" creationid="msdx" creationdate="20150428T104803Z">
        <seg>checkstyle_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>checkstyle_plugin.html#N13341</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150514T151852Z" creationid="msdx" creationdate="20150514T151852Z">
        <seg>checkstyle_plugin.html#N13341</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>checkstyle_plugin.html#N13355</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150514T151856Z" creationid="msdx" creationdate="20150514T151856Z">
        <seg>checkstyle_plugin.html#N13355</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>checkstyle_plugin.html#N133C8</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150514T151902Z" creationid="msdx" creationdate="20150514T151902Z">
        <seg>checkstyle_plugin.html#N133C8</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>checkstyle_plugin.html#N133E4</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150514T151907Z" creationid="msdx" creationdate="20150514T151907Z">
        <seg>checkstyle_plugin.html#N133E4</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>checkstyle_plugin.html#N13400</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150514T151911Z" creationid="msdx" creationdate="20150514T151911Z">
        <seg>checkstyle_plugin.html#N13400</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>child/build.gradle</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T044945Z" creationid="95" creationdate="20161211T044945Z">
        <seg>child/build.gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>child1/build.gradle</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T051042Z" creationid="95" creationdate="20161211T051042Z">
        <seg>child1/build.gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>clang(Clang)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T091226Z" creationid="haohang" creationdate="20160408T091226Z">
        <seg>clang(Clang)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>classDumpFile = file(<bpt i="1" x="1">&lt;s1&gt;</bpt>"$buildDir/jacoco/classpathdumps"<ept i="1">&lt;/s1&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T132255Z" creationid="msdx" creationdate="20150506T132255Z">
        <seg>classDumpFile = file(<bpt i="1" x="1">&lt;s1&gt;</bpt>"$buildDir/jacoco/classpathdumps"<ept i="1">&lt;/s1&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>classDumpPath</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T132323Z" creationid="msdx" creationdate="20150506T132323Z">
        <seg>classDumpPath</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>classes</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083213Z" creationid="msdx" creationdate="20150428T083213Z">
        <seg>classes</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>classesDir = <bpt i="0" x="0">&lt;s0&gt;</bpt>new<ept i="0">&lt;/s0&gt;</ept> File(<bpt i="1" x="1">&lt;s1&gt;</bpt>'build/classes'<ept i="1">&lt;/s1&gt;</ept>)
task resources &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T073303Z" creationid="msdx" creationdate="20141109T073303Z">
        <seg>classesDir = <bpt i="0" x="0">&lt;s0&gt;</bpt>new<ept i="0">&lt;/s0&gt;</ept> File(<bpt i="1" x="1">&lt;s1&gt;</bpt>'build/classes'<ept i="1">&lt;/s1&gt;</ept>)
task resources &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>classesDir.mkdirs()</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T093714Z" creationid="msdx" creationdate="20141109T093714Z">
        <seg>classesDir.mkdirs()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>classifier</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T160405Z" creationid="msdx" creationdate="20141113T160405Z">
        <seg>classifier</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>classifier <bpt i="0" x="0">&lt;s0&gt;</bpt>"source"<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20170216T072606Z" creationid="haohang" creationdate="20170216T072606Z">
        <seg>classifier <bpt i="0" x="0">&lt;s0&gt;</bpt>"source"<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>classifier <bpt i="0" x="0">&lt;s0&gt;</bpt>"sources"<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170412T154843Z" creationid="95" creationdate="20170412T154843Z">
        <seg>classifier <bpt i="0" x="0">&lt;s0&gt;</bpt>"sources"<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>classifier <bpt i="4" x="4">&lt;s4&gt;</bpt>"source"<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T145200Z" creationid="95" creationdate="20170330T145200Z">
        <seg>classifier <bpt i="4" x="4">&lt;s4&gt;</bpt>"source"<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>classifier = <bpt i="4" x="4">&lt;s4&gt;</bpt>'src'<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T155802Z" creationid="msdx" creationdate="20141113T155802Z">
        <seg>classifier = <bpt i="4" x="4">&lt;s4&gt;</bpt>'src'<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>classname: <bpt i="4" x="4">&lt;s4&gt;</bpt>'org.apache.tools.ant.taskdefs.optional.net.FTP'<ept i="4">&lt;/s4&gt;</ept>,</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161212T155109Z" creationid="95" creationdate="20161212T155109Z">
        <seg>classname: <bpt i="4" x="4">&lt;s4&gt;</bpt>'org.apache.tools.ant.taskdefs.optional.net.FTP'<ept i="4">&lt;/s4&gt;</ept>,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>classpath</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083437Z" creationid="msdx" creationdate="20150428T083437Z">
        <seg>classpath</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>classpath = sourceSets.intTest.runtimeClasspath
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083433Z" creationid="msdx" creationdate="20150428T083433Z">
        <seg>classpath = sourceSets.intTest.runtimeClasspath
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>classpath configurations.moreLibs <bpt i="17" x="17">&lt;s17&gt;</bpt>// adds a configuration to the WEB-INF/lib dir.<ept i="17">&lt;/s17&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T093821Z" creationid="msdx" creationdate="20150503T093821Z">
        <seg>classpath configurations.moreLibs <bpt i="17" x="17">&lt;s17&gt;</bpt>// adds a configuration to the WEB-INF/lib dir.<ept i="17">&lt;/s17&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>classpath fileTree(<bpt i="15" x="15">&lt;s15&gt;</bpt>'additionalLibs'<ept i="15">&lt;/s15&gt;</ept>) <bpt i="16" x="16">&lt;s16&gt;</bpt>// adds a file-set to the WEB-INF/lib dir.<ept i="16">&lt;/s16&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T093821Z" creationid="msdx" creationdate="20150503T093821Z">
        <seg>classpath fileTree(<bpt i="15" x="15">&lt;s15&gt;</bpt>'additionalLibs'<ept i="15">&lt;/s15&gt;</ept>) <bpt i="16" x="16">&lt;s16&gt;</bpt>// adds a file-set to the WEB-INF/lib dir.<ept i="16">&lt;/s16&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>classpath group: <bpt i="0" x="0">&lt;s0&gt;</bpt>'commons-codec'<ept i="0">&lt;/s0&gt;</ept>, name: <bpt i="1" x="1">&lt;s1&gt;</bpt>'commons-codec'<ept i="1">&lt;/s1&gt;</ept>, version: <bpt i="2" x="2">&lt;s2&gt;</bpt>'1.2'<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161212T153753Z" creationid="95" creationdate="20161212T153753Z">
        <seg>classpath group: <bpt i="0" x="0">&lt;s0&gt;</bpt>'commons-codec'<ept i="0">&lt;/s0&gt;</ept>, name: <bpt i="1" x="1">&lt;s1&gt;</bpt>'commons-codec'<ept i="1">&lt;/s1&gt;</ept>, version: <bpt i="2" x="2">&lt;s2&gt;</bpt>'1.2'<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>classpath group: <bpt i="0" x="0">&lt;s0&gt;</bpt>'org.apache.commons'<ept i="0">&lt;/s0&gt;</ept>, name: <bpt i="1" x="1">&lt;s1&gt;</bpt>'commons-math'<ept i="1">&lt;/s1&gt;</ept>, version: <bpt i="2" x="2">&lt;s2&gt;</bpt>'2.0'<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161215T143800Z" creationid="95" creationdate="20161215T143800Z">
        <seg>classpath group: <bpt i="0" x="0">&lt;s0&gt;</bpt>'org.apache.commons'<ept i="0">&lt;/s0&gt;</ept>, name: <bpt i="1" x="1">&lt;s1&gt;</bpt>'commons-math'<ept i="1">&lt;/s1&gt;</ept>, version: <bpt i="2" x="2">&lt;s2&gt;</bpt>'2.0'<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>classpath group: <bpt i="1" x="1">&lt;s1&gt;</bpt>'org.apache.commons'<ept i="1">&lt;/s1&gt;</ept>, name: <bpt i="2" x="2">&lt;s2&gt;</bpt>'commons-math'<ept i="2">&lt;/s2&gt;</ept>, version: <bpt i="3" x="3">&lt;s3&gt;</bpt>'2.0'<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161215T144057Z" creationid="95" creationdate="20161215T144057Z">
        <seg>classpath group: <bpt i="1" x="1">&lt;s1&gt;</bpt>'org.apache.commons'<ept i="1">&lt;/s1&gt;</ept>, name: <bpt i="2" x="2">&lt;s2&gt;</bpt>'commons-math'<ept i="2">&lt;/s2&gt;</ept>, version: <bpt i="3" x="3">&lt;s3&gt;</bpt>'2.0'<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>classpath group: <bpt i="1" x="1">&lt;s1&gt;</bpt>'org.gradle'<ept i="1">&lt;/s1&gt;</ept>, name: <bpt i="2" x="2">&lt;s2&gt;</bpt>'customPlugin'<ept i="2">&lt;/s2&gt;</ept>, version: <bpt i="3" x="3">&lt;s3&gt;</bpt>'1.0-SNAPSHOT'<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160815T145928Z" creationid="95" creationdate="20160815T145928Z">
        <seg>classpath group: <bpt i="1" x="1">&lt;s1&gt;</bpt>'org.gradle'<ept i="1">&lt;/s1&gt;</ept>, name: <bpt i="2" x="2">&lt;s2&gt;</bpt>'customPlugin'<ept i="2">&lt;/s2&gt;</ept>, version: <bpt i="3" x="3">&lt;s3&gt;</bpt>'1.0-SNAPSHOT'<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>classpath group: <bpt i="2" x="2">&lt;s2&gt;</bpt>'commons-codec'<ept i="2">&lt;/s2&gt;</ept>, name: <bpt i="3" x="3">&lt;s3&gt;</bpt>'commons-codec'<ept i="3">&lt;/s3&gt;</ept>, version: <bpt i="4" x="4">&lt;s4&gt;</bpt>'1.2'<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161212T154658Z" creationid="95" creationdate="20161212T154658Z">
        <seg>classpath group: <bpt i="2" x="2">&lt;s2&gt;</bpt>'commons-codec'<ept i="2">&lt;/s2&gt;</ept>, name: <bpt i="3" x="3">&lt;s3&gt;</bpt>'commons-codec'<ept i="3">&lt;/s3&gt;</ept>, version: <bpt i="4" x="4">&lt;s4&gt;</bpt>'1.2'<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>classpath {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T060206Z" creationid="msdx" creationdate="20141116T060206Z">
        <seg>classpath {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>classpath.entries.findAll { entry -&gt; entry.kind == <bpt i="0" x="0">&lt;s0&gt;</bpt>'lib'<ept i="0">&lt;/s0&gt;</ept> }*.exported = false</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T065955Z" creationid="haohang" creationdate="20150625T065955Z">
        <seg>classpath.entries.findAll { entry -&gt; entry.kind == <bpt i="0" x="0">&lt;s0&gt;</bpt>'lib'<ept i="0">&lt;/s0&gt;</ept> }*.exported = false</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>classpath.entries.removeAll { entry -&gt; entry.kind == <bpt i="0" x="0">&lt;s0&gt;</bpt>'lib'<ept i="0">&lt;/s0&gt;</ept> || entry.kind == <bpt i="1" x="1">&lt;s1&gt;</bpt>'var'<ept i="1">&lt;/s1&gt;</ept> }</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T064928Z" creationid="haohang" creationdate="20150625T064928Z">
        <seg>classpath.entries.removeAll { entry -&gt; entry.kind == <bpt i="0" x="0">&lt;s0&gt;</bpt>'lib'<ept i="0">&lt;/s0&gt;</ept> || entry.kind == <bpt i="1" x="1">&lt;s1&gt;</bpt>'var'<ept i="1">&lt;/s1&gt;</ept> }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>classpath: configurations.ftpAntTask.asPath)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161212T155110Z" creationid="95" creationdate="20161212T155110Z">
        <seg>classpath: configurations.ftpAntTask.asPath)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>clean</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083219Z" creationid="msdx" creationdate="20150428T083219Z">
        <seg>clean</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>clean<bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>TaskName<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083224Z" creationid="msdx" creationdate="20150428T083224Z">
        <seg>clean<bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>TaskName<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>cleanEclipse</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T004400Z" creationid="haohang" creationdate="20150603T004400Z">
        <seg>cleanEclipse</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>cleanEclipseClasspath</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T004412Z" creationid="haohang" creationdate="20150603T004412Z">
        <seg>cleanEclipseClasspath</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>cleanEclipseJdt</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T004415Z" creationid="haohang" creationdate="20150603T004415Z">
        <seg>cleanEclipseJdt</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>cleanEclipseProject</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T004408Z" creationid="haohang" creationdate="20150603T004408Z">
        <seg>cleanEclipseProject</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>cleanEclipseWtpComponent</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T004419Z" creationid="haohang" creationdate="20150603T004419Z">
        <seg>cleanEclipseWtpComponent</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>cleanEclipseWtpFacet</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T004429Z" creationid="haohang" creationdate="20150603T004429Z">
        <seg>cleanEclipseWtpFacet</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>cleanIdea</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T072336Z" creationid="haohang" creationdate="20150625T072336Z">
        <seg>cleanIdea</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>cleanIdeaModule</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T072441Z" creationid="haohang" creationdate="20150625T072441Z">
        <seg>cleanIdeaModule</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>cleanIdeaProject</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T072350Z" creationid="haohang" creationdate="20150625T072350Z">
        <seg>cleanIdeaProject</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>cleanIdeaWorkspace</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T072458Z" creationid="haohang" creationdate="20150625T072458Z">
        <seg>cleanIdeaWorkspace</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>coberturaReportPath = file(<bpt i="0" x="0">&lt;s0&gt;</bpt>"$buildDir/cobertura.xml"<ept i="0">&lt;/s0&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150510T143856Z" creationid="msdx" creationdate="20150510T143856Z">
        <seg>coberturaReportPath = file(<bpt i="0" x="0">&lt;s0&gt;</bpt>"$buildDir/cobertura.xml"<ept i="0">&lt;/s0&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>codenarc</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104804Z" creationid="msdx" creationdate="20150428T104804Z">
        <seg>codenarc</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>codenarc<bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>SourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T133229Z" creationid="msdx" creationdate="20150505T133229Z">
        <seg>codenarc<bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>SourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>codenarcMain</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T133150Z" creationid="msdx" creationdate="20150505T133150Z">
        <seg>codenarcMain</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>codenarcTest</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T133209Z" creationid="msdx" creationdate="20150505T133209Z">
        <seg>codenarcTest</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>codenarc_plugin.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104804Z" creationid="msdx" creationdate="20150428T104804Z">
        <seg>codenarc_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>codenarc_plugin.html#N13415</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150514T151923Z" creationid="msdx" creationdate="20150514T151923Z">
        <seg>codenarc_plugin.html#N13415</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>codenarc_plugin.html#N13429</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065347Z" creationid="95" creationdate="20170416T065347Z">
        <seg>codenarc_plugin.html#N13429</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>codenarc_plugin.html#N13497</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065350Z" creationid="95" creationdate="20170416T065350Z">
        <seg>codenarc_plugin.html#N13497</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>codenarc_plugin.html#N134B3</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065356Z" creationid="95" creationdate="20170416T065356Z">
        <seg>codenarc_plugin.html#N134B3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>codenarc_plugin.html#N134CF</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065358Z" creationid="95" creationdate="20170416T065358Z">
        <seg>codenarc_plugin.html#N134CF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>collection = files { srcDir.listFiles() }</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T160738Z" creationid="msdx" creationdate="20141112T160738Z">
        <seg>collection = files { srcDir.listFiles() }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>collection.collect { relativePath(it) }.sort().each { println it }</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T160740Z" creationid="msdx" creationdate="20141112T160740Z">
        <seg>collection.collect { relativePath(it) }.sort().each { println it }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>collection.collect { relativePath(it) }.sort().each { println it }
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T160746Z" creationid="msdx" creationdate="20141112T160746Z">
        <seg>collection.collect { relativePath(it) }.sort().each { println it }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>compareGradleBuilds {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170109T124813Z" creationid="95" creationdate="20170109T124813Z">
        <seg>compareGradleBuilds {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>comparing_builds.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151201T070917Z" creationid="haohang" creationdate="20151201T070917Z">
        <seg>comparing_builds.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>comparing_builds.html#N16AEE</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T071024Z" creationid="95" creationdate="20170416T071024Z">
        <seg>comparing_builds.html#N16AEE</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>comparing_builds.html#N16B24</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T071028Z" creationid="95" creationdate="20170416T071028Z">
        <seg>comparing_builds.html#N16B24</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>comparing_builds.html#N16B4D</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T071038Z" creationid="95" creationdate="20170416T071038Z">
        <seg>comparing_builds.html#N16B4D</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>compile</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083215Z" creationid="msdx" creationdate="20150428T083215Z">
        <seg>compile</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>compile
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T075824Z" creationid="haohang" creationdate="20150722T075824Z">
        <seg>compile
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>compile <bpt i="0" x="0">&lt;s0&gt;</bpt>"org.gradle.test.classifiers:service:1.0:jdk15@jar"<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150731T100858Z" creationid="haohang" creationdate="20150731T100858Z">
        <seg>compile <bpt i="0" x="0">&lt;s0&gt;</bpt>"org.gradle.test.classifiers:service:1.0:jdk15@jar"<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>compile <bpt i="0" x="0">&lt;s0&gt;</bpt>'org.codehaus.groovy:groovy-all:2.2.0'<ept i="0">&lt;/s0&gt;</ept>
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104655Z" creationid="msdx" creationdate="20150428T104655Z">
        <seg>compile <bpt i="0" x="0">&lt;s0&gt;</bpt>'org.codehaus.groovy:groovy-all:2.2.0'<ept i="0">&lt;/s0&gt;</ept>
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>compile <bpt i="0" x="0">&lt;s0&gt;</bpt>'org.scala-lang:scala-library:2.9.1'<ept i="0">&lt;/s0&gt;</ept>
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T152946Z" creationid="msdx" creationdate="20150429T152946Z">
        <seg>compile <bpt i="0" x="0">&lt;s0&gt;</bpt>'org.scala-lang:scala-library:2.9.1'<ept i="0">&lt;/s0&gt;</ept>
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>compile <bpt i="11" x="11">&lt;s11&gt;</bpt>'commons-collections:commons-collections:3.1'<ept i="11">&lt;/s11&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T145221Z" creationid="95" creationdate="20170330T145221Z">
        <seg>compile <bpt i="11" x="11">&lt;s11&gt;</bpt>'commons-collections:commons-collections:3.1'<ept i="11">&lt;/s11&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>compile <bpt i="2" x="2">&lt;s2&gt;</bpt>'org.codehaus.groovy:groovy-all:2.2.0'<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T065506Z" creationid="msdx" creationdate="20141030T065506Z">
        <seg>compile <bpt i="2" x="2">&lt;s2&gt;</bpt>'org.codehaus.groovy:groovy-all:2.2.0'<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>compile <bpt i="4" x="4">&lt;s4&gt;</bpt>"javax.servlet:servlet-api:2.5"<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160722T091246Z" creationid="haohang" creationdate="20160722T091246Z">
        <seg>compile <bpt i="4" x="4">&lt;s4&gt;</bpt>"javax.servlet:servlet-api:2.5"<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>compile <bpt i="7" x="7">&lt;s7&gt;</bpt>'junit:junit:4.11'<ept i="7">&lt;/s7&gt;</ept>, project(<bpt i="8" x="8">&lt;s8&gt;</bpt>':project2'<ept i="8">&lt;/s8&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T145206Z" creationid="95" creationdate="20170330T145206Z">
        <seg>compile <bpt i="7" x="7">&lt;s7&gt;</bpt>'junit:junit:4.11'<ept i="7">&lt;/s7&gt;</ept>, project(<bpt i="8" x="8">&lt;s8&gt;</bpt>':project2'<ept i="8">&lt;/s8&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>compile files(<bpt i="0" x="0">&lt;s0&gt;</bpt>"$buildDir/classes"<ept i="0">&lt;/s0&gt;</ept>) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T094452Z" creationid="haohang" creationdate="20150801T094452Z">
        <seg>compile files(<bpt i="0" x="0">&lt;s0&gt;</bpt>"$buildDir/classes"<ept i="0">&lt;/s0&gt;</ept>) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>compile gradleApi()</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160815T145036Z" creationid="95" creationdate="20160815T145036Z">
        <seg>compile gradleApi()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>compile gradleApi()
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T094658Z" creationid="haohang" creationdate="20150801T094658Z">
        <seg>compile gradleApi()
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>compile localGroovy()
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T080609Z" creationid="msdx" creationdate="20150429T080609Z">
        <seg>compile localGroovy()
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>compile module(<bpt i="1" x="1">&lt;s1&gt;</bpt>":compile:1.0"<ept i="1">&lt;/s1&gt;</ept>) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T093818Z" creationid="msdx" creationdate="20150503T093818Z">
        <seg>compile module(<bpt i="1" x="1">&lt;s1&gt;</bpt>":compile:1.0"<ept i="1">&lt;/s1&gt;</ept>) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>compile module(<bpt i="1" x="1">&lt;s1&gt;</bpt>'org.codehaus.groovy:groovy:1.6.0'<ept i="1">&lt;/s1&gt;</ept>) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T080911Z" creationid="msdx" creationdate="20150429T080911Z">
        <seg>compile module(<bpt i="1" x="1">&lt;s1&gt;</bpt>'org.codehaus.groovy:groovy:1.6.0'<ept i="1">&lt;/s1&gt;</ept>) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>compile project(<bpt i="0" x="0">&lt;s0&gt;</bpt>':shared'<ept i="0">&lt;/s0&gt;</ept>)
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T092519Z" creationid="haohang" creationdate="20150801T092519Z">
        <seg>compile project(<bpt i="0" x="0">&lt;s0&gt;</bpt>':shared'<ept i="0">&lt;/s0&gt;</ept>)
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>compile project(<bpt i="4" x="4">&lt;s4&gt;</bpt>':shared'<ept i="4">&lt;/s4&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T084523Z" creationid="haohang" creationdate="20160726T084523Z">
        <seg>compile project(<bpt i="4" x="4">&lt;s4&gt;</bpt>':shared'<ept i="4">&lt;/s4&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>compile project(<bpt i="5" x="5">&lt;s5&gt;</bpt>':shared'<ept i="5">&lt;/s5&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T083846Z" creationid="haohang" creationdate="20160726T083846Z">
        <seg>compile project(<bpt i="5" x="5">&lt;s5&gt;</bpt>':shared'<ept i="5">&lt;/s5&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>compile project(<bpt i="7" x="7">&lt;s7&gt;</bpt>':shared'<ept i="7">&lt;/s7&gt;</ept>), project(<bpt i="8" x="8">&lt;s8&gt;</bpt>':api'<ept i="8">&lt;/s8&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T083851Z" creationid="haohang" creationdate="20160726T083851Z">
        <seg>compile project(<bpt i="7" x="7">&lt;s7&gt;</bpt>':shared'<ept i="7">&lt;/s7&gt;</ept>), project(<bpt i="8" x="8">&lt;s8&gt;</bpt>':api'<ept i="8">&lt;/s8&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>compile project(<bpt i="8" x="8">&lt;s8&gt;</bpt>':shared'<ept i="8">&lt;/s8&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T084539Z" creationid="haohang" creationdate="20160726T084539Z">
        <seg>compile project(<bpt i="8" x="8">&lt;s8&gt;</bpt>':shared'<ept i="8">&lt;/s8&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>compile project(path: <bpt i="0" x="0">&lt;s0&gt;</bpt>':api'<ept i="0">&lt;/s0&gt;</ept>, configuration: <bpt i="1" x="1">&lt;s1&gt;</bpt>'spi'<ept i="1">&lt;/s1&gt;</ept>)
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T032801Z" creationid="haohang" creationdate="20150807T032801Z">
        <seg>compile project(path: <bpt i="0" x="0">&lt;s0&gt;</bpt>':api'<ept i="0">&lt;/s0&gt;</ept>, configuration: <bpt i="1" x="1">&lt;s1&gt;</bpt>'spi'<ept i="1">&lt;/s1&gt;</ept>)
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>compile project(path: <bpt i="9" x="9">&lt;s9&gt;</bpt>':api'<ept i="9">&lt;/s9&gt;</ept>, configuration: <bpt i="10" x="10">&lt;s10&gt;</bpt>'spi'<ept i="10">&lt;/s10&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T084542Z" creationid="haohang" creationdate="20160726T084542Z">
        <seg>compile project(path: <bpt i="9" x="9">&lt;s9&gt;</bpt>':api'<ept i="9">&lt;/s9&gt;</ept>, configuration: <bpt i="10" x="10">&lt;s10&gt;</bpt>'spi'<ept i="10">&lt;/s10&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>compile {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T123631Z" creationid="msdx" creationdate="20141113T123631Z">
        <seg>compile {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>compile(<bpt i="3" x="3">&lt;s3&gt;</bpt>"org.gradle.test.excludes:api:1.0"<ept i="3">&lt;/s3&gt;</ept>) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T094944Z" creationid="haohang" creationdate="20150801T094944Z">
        <seg>compile(<bpt i="3" x="3">&lt;s3&gt;</bpt>"org.gradle.test.excludes:api:1.0"<ept i="3">&lt;/s3&gt;</ept>) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>compile.exclude module: <bpt i="0" x="0">&lt;s0&gt;</bpt>'commons'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T094942Z" creationid="haohang" creationdate="20150801T094942Z">
        <seg>compile.exclude module: <bpt i="0" x="0">&lt;s0&gt;</bpt>'commons'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>compile<bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>SourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>Groovy</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T071435Z" creationid="msdx" creationdate="20150429T071435Z">
        <seg>compile<bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>SourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>Groovy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>compile<bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>SourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>Java</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083224Z" creationid="msdx" creationdate="20150428T083224Z">
        <seg>compile<bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>SourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>Java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>compile<bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>SourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>Scala</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T145506Z" creationid="msdx" creationdate="20150429T145506Z">
        <seg>compile<bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>SourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>Scala</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>compileClasspath</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083252Z" creationid="msdx" creationdate="20150428T083252Z">
        <seg>compileClasspath</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>compileGroovy</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T071352Z" creationid="msdx" creationdate="20150429T071352Z">
        <seg>compileGroovy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>compileJava</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083210Z" creationid="msdx" creationdate="20150428T083210Z">
        <seg>compileJava</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>compileScala</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T145447Z" creationid="msdx" creationdate="20150429T145447Z">
        <seg>compileScala</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>compileScala {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150430T155213Z" creationid="msdx" creationdate="20150430T155213Z">
        <seg>compileScala</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>compileTestGroovy</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T071419Z" creationid="msdx" creationdate="20150429T071419Z">
        <seg>compileTestGroovy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>compileTestJava</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083213Z" creationid="msdx" creationdate="20150428T083213Z">
        <seg>compileTestJava</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>compileTestScala</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T145459Z" creationid="msdx" creationdate="20150429T145459Z">
        <seg>compileTestScala</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>components {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T041818Z" creationid="95" creationdate="20151129T041818Z">
        <seg>components {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>conf <bpt i="15" x="15">&lt;s15&gt;</bpt>"runtime"<ept i="15">&lt;/s15&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T145241Z" creationid="95" creationdate="20170330T145241Z">
        <seg>conf <bpt i="15" x="15">&lt;s15&gt;</bpt>"runtime"<ept i="15">&lt;/s15&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>conf <bpt i="2" x="2">&lt;s2&gt;</bpt>"runtime"<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20170216T072612Z" creationid="haohang" creationdate="20170216T072612Z">
        <seg>conf <bpt i="2" x="2">&lt;s2&gt;</bpt>"runtime"<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>conf2ScopeMappings</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151228T152745Z" creationid="95" creationdate="20151228T152745Z">
        <seg>conf2ScopeMappings</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>config/checkstyle/checkstyle.xml</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T132636Z" creationid="msdx" creationdate="20150505T132636Z">
        <seg>config/checkstyle/checkstyle.xml</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>config/codenarc/codenarc.xml</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T133420Z" creationid="msdx" creationdate="20150505T133420Z">
        <seg>config/codenarc/codenarc.xml</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>config1 <bpt i="0" x="0">&lt;s0&gt;</bpt>"sea.fish:tuna:latest.integration"<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T041617Z" creationid="95" creationdate="20151129T041617Z">
        <seg>config1 <bpt i="0" x="0">&lt;s0&gt;</bpt>"sea.fish:tuna:latest.integration"<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>config2 <bpt i="1" x="1">&lt;s1&gt;</bpt>"sea.fish:tuna:latest.release"<ept i="1">&lt;/s1&gt;</ept>
}

task listFish &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T041618Z" creationid="95" creationdate="20151129T041618Z">
        <seg>config2 <bpt i="1" x="1">&lt;s1&gt;</bpt>"sea.fish:tuna:latest.release"<ept i="1">&lt;/s1&gt;</ept>
}

task listFish &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>config3 <bpt i="0" x="0">&lt;s0&gt;</bpt>"air.birds:albatros:latest.silver"<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T041818Z" creationid="95" creationdate="20151129T041818Z">
        <seg>config3 <bpt i="0" x="0">&lt;s0&gt;</bpt>"air.birds:albatros:latest.silver"<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>configuration = configurations.deployerJars</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T134854Z" creationid="95" creationdate="20160105T134854Z">
        <seg>configuration = configurations.deployerJars</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>configurations {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T060529Z" creationid="msdx" creationdate="20141116T060529Z">
        <seg>configurations {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>configurations.all {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T061530Z" creationid="95" creationdate="20151115T061530Z">
        <seg>configurations.all {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>configurations.alllife.allDependencies.each { dep -&gt; println dep.name }</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T034359Z" creationid="haohang" creationdate="20150807T034359Z">
        <seg>configurations.alllife.allDependencies.each { dep -&gt; println dep.name }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>configurations.alllife.allDependencies.findAll { dep -&gt; dep.name != <bpt i="0" x="0">&lt;s0&gt;</bpt>'orca'<ept i="0">&lt;/s0&gt;</ept> }.each { dep -&gt; println dep.name }
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T034400Z" creationid="haohang" creationdate="20150807T034400Z">
        <seg>configurations.alllife.allDependencies.findAll { dep -&gt; dep.name != <bpt i="0" x="0">&lt;s0&gt;</bpt>'orca'<ept i="0">&lt;/s0&gt;</ept> }.each { dep -&gt; println dep.name }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>configurations.alllife.copy().allDependencies.each { dep -&gt;</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T040604Z" creationid="haohang" creationdate="20150807T040604Z">
        <seg>configurations.alllife.copy().allDependencies.each { dep -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>configurations.alllife.copyRecursive { dep -&gt; dep.name != <bpt i="0" x="0">&lt;s0&gt;</bpt>'orca'<ept i="0">&lt;/s0&gt;</ept> }.allDependencies.each { dep -&gt;</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T040602Z" creationid="haohang" creationdate="20150807T040602Z">
        <seg>configurations.alllife.copyRecursive { dep -&gt; dep.name != <bpt i="0" x="0">&lt;s0&gt;</bpt>'orca'<ept i="0">&lt;/s0&gt;</ept> }.allDependencies.each { dep -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>configurations.alllife.dependencies.each { dep -&gt; println dep.name }</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T034358Z" creationid="haohang" creationdate="20150807T034358Z">
        <seg>configurations.alllife.dependencies.each { dep -&gt; println dep.name }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>configurations.compile.each { File file -&gt; println file.name }
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T091159Z" creationid="haohang" creationdate="20150801T091159Z">
        <seg>configurations.compile.each { File file -&gt; println file.name }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>configurations.config1.each { println it.name }</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T041619Z" creationid="95" creationdate="20151129T041619Z">
        <seg>configurations.config1.each { println it.name }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>configurations.config2.each { println it.name}
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T041643Z" creationid="95" creationdate="20151129T041643Z">
        <seg>configurations.config2.each { println it.name}
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>configurations.config3.each { println it.name }
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T041825Z" creationid="95" creationdate="20151129T041825Z">
        <seg>configurations.config3.each { println it.name }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>configurations.sealife.copyRecursive { dep -&gt; dep.name == <bpt i="0" x="0">&lt;s0&gt;</bpt>'orca'<ept i="0">&lt;/s0&gt;</ept> }.each { file -&gt;</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T041230Z" creationid="haohang" creationdate="20150807T041230Z">
        <seg>configurations.sealife.copyRecursive { dep -&gt; dep.name == <bpt i="0" x="0">&lt;s0&gt;</bpt>'orca'<ept i="0">&lt;/s0&gt;</ept> }.each { file -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>configurations.sealife.files { dep -&gt; dep.name == <bpt i="0" x="0">&lt;s0&gt;</bpt>'orca'<ept i="0">&lt;/s0&gt;</ept> }.each { file -&gt;</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T034743Z" creationid="haohang" creationdate="20150807T034743Z">
        <seg>configurations.sealife.files { dep -&gt; dep.name == <bpt i="0" x="0">&lt;s0&gt;</bpt>'orca'<ept i="0">&lt;/s0&gt;</ept> }.each { file -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>configurations.sealife.files { dep -&gt; dep.name == <bpt i="1" x="1">&lt;s1&gt;</bpt>'orca'<ept i="1">&lt;/s1&gt;</ept> }.each { file -&gt;</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T041232Z" creationid="haohang" creationdate="20150807T041232Z">
        <seg>configurations.sealife.files { dep -&gt; dep.name == <bpt i="1" x="1">&lt;s1&gt;</bpt>'orca'<ept i="1">&lt;/s1&gt;</ept> }.each { file -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>configurations.sealife.files.each { file -&gt;</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T034609Z" creationid="haohang" creationdate="20150807T034609Z">
        <seg>configurations.sealife.files.each { file -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>configure(scalaCompileOptions.forkOptions) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150430T160054Z" creationid="msdx" creationdate="20150430T160054Z">
        <seg>configure(scalaCompileOptions.forkOptions) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>configures reasonable default values for all archive tasks (e.g. tasks that inherit from <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>AbstractArchiveTask<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>).</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T070908Z" creationid="Administrator" creationdate="20150425T070908Z">
        <seg>为所有归档任务配置合适的默认值（比如从<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>AbstractArchiveTask<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>继承来任务）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>console.printf "\nThanks.\n\n"</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160108T152921Z" creationid="95" creationdate="20160108T152921Z">
        <seg>console.printf "\nThanks.\n\n"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>console.printf "\n\nWe have to sign some things in this build.\n\nPlease enter your signing details.\n\n"</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160108T152907Z" creationid="95" creationdate="20160108T152907Z">
        <seg>console.printf "\n\nWe have to sign some things in this build.\n\nPlease enter your signing details.\n\n"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>consumer/</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T062303Z" creationid="haohang" creationdate="20160718T062303Z">
        <seg>consumer/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>consumer/build.gradle</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T062357Z" creationid="haohang" creationdate="20160718T062357Z">
        <seg>consumer/build.gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>contents {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150701T032508Z" creationid="haohang" creationdate="20150701T032508Z">
        <seg>contents {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>contextPath</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T151016Z" creationid="msdx" creationdate="20150504T151016Z">
        <seg>contextPath</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>copy {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T131756Z" creationid="msdx" creationdate="20141113T131756Z">
        <seg>copy {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>cpp</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141209T074117Z" creationid="msdx" creationdate="20141209T074117Z">
        <seg>cpp</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>cpp {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160225T085519Z" creationid="haohang" creationdate="20160225T085519Z">
        <seg>cpp {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>cppCompiler.args <bpt i="1" x="1">&lt;s1&gt;</bpt>"-g"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160401T090612Z" creationid="haohang" creationdate="20160401T090612Z">
        <seg>cppCompiler.args <bpt i="1" x="1">&lt;s1&gt;</bpt>"-g"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>cppCompiler.args <bpt i="3" x="3">&lt;s3&gt;</bpt>'/Zi'<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160401T090620Z" creationid="haohang" creationdate="20160401T090620Z">
        <seg>cppCompiler.args <bpt i="3" x="3">&lt;s3&gt;</bpt>'/Zi'<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>cppCompiler.args <bpt i="4" x="4">&lt;s4&gt;</bpt>"-O2"<ept i="4">&lt;/s4&gt;</ept>, <bpt i="5" x="5">&lt;s5&gt;</bpt>"-fno-access-control"<ept i="5">&lt;/s5&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160324T151759Z" creationid="95" creationdate="20160324T151759Z">
        <seg>cppCompiler.args <bpt i="4" x="4">&lt;s4&gt;</bpt>"-O2"<ept i="4">&lt;/s4&gt;</ept>, <bpt i="5" x="5">&lt;s5&gt;</bpt>"-fno-access-control"<ept i="5">&lt;/s5&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>cppCompiler.args <bpt i="9" x="9">&lt;s9&gt;</bpt>"/Zi"<ept i="9">&lt;/s9&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160324T151801Z" creationid="95" creationdate="20160324T151801Z">
        <seg>cppCompiler.args <bpt i="9" x="9">&lt;s9&gt;</bpt>"/Zi"<ept i="9">&lt;/s9&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>cppCompiler.define <bpt i="1" x="1">&lt;s1&gt;</bpt>"DLL_EXPORT"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160324T153108Z" creationid="95" creationdate="20160324T153108Z">
        <seg>cppCompiler.define <bpt i="1" x="1">&lt;s1&gt;</bpt>"DLL_EXPORT"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>cppCompiler.define <bpt i="1" x="1">&lt;s1&gt;</bpt>"FRENCH"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T081121Z" creationid="haohang" creationdate="20160408T081121Z">
        <seg>cppCompiler.define <bpt i="1" x="1">&lt;s1&gt;</bpt>"FRENCH"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>cppCompiler.define <bpt i="1" x="1">&lt;s1&gt;</bpt>"NDEBUG"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160324T151756Z" creationid="95" creationdate="20160324T151756Z">
        <seg>cppCompiler.define <bpt i="1" x="1">&lt;s1&gt;</bpt>"NDEBUG"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>cppCompiler.define <bpt i="4" x="4">&lt;s4&gt;</bpt>'DEBUG'<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160401T090621Z" creationid="haohang" creationdate="20160401T090621Z">
        <seg>cppCompiler.define <bpt i="4" x="4">&lt;s4&gt;</bpt>'DEBUG'<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>credentials {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150909T053440Z" creationid="haohang" creationdate="20150909T053440Z">
        <seg>credentials {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>csv.enabled false</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T132001Z" creationid="msdx" creationdate="20150506T132001Z">
        <seg>csv.enabled false</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>cunit</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104923Z" creationid="msdx" creationdate="20150428T104923Z">
        <seg>cunit</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>cunit {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160504T151337Z" creationid="95" creationdate="20160504T151337Z">
        <seg>cunit {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>custom {}
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150701T031256Z" creationid="haohang" creationdate="20150701T031256Z">
        <seg>custom {}
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>customDistTar</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150701T031311Z" creationid="haohang" creationdate="20150701T031311Z">
        <seg>customDistTar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>customDistZip</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150701T031310Z" creationid="haohang" creationdate="20150701T031310Z">
        <seg>customDistZip</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>custom_plugins.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141123T150631Z" creationid="msdx" creationdate="20141123T150631Z">
        <seg>custom_plugins.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>custom_plugins.html#N16666</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070723Z" creationid="95" creationdate="20170416T070723Z">
        <seg>custom_plugins.html#N16666</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>custom_plugins.html#N1668F</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070729Z" creationid="95" creationdate="20170416T070729Z">
        <seg>custom_plugins.html#N16666</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>custom_plugins.html#N166B3</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070736Z" creationid="95" creationdate="20170416T070736Z">
        <seg>custom_plugins.html#N166B3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>custom_plugins.html#N166FF</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070741Z" creationid="95" creationdate="20170416T070741Z">
        <seg>custom_plugins.html#N166FF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>custom_plugins.html#N16729</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070746Z" creationid="95" creationdate="20170416T070746Z">
        <seg>custom_plugins.html#N16729</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>custom_plugins.html#N1678C</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070748Z" creationid="95" creationdate="20170416T070748Z">
        <seg>custom_plugins.html#N1678C</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>custom_tasks.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T134204Z" creationid="msdx" creationdate="20141113T134204Z">
        <seg>custom_tasks.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>custom_tasks.html#N16475</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070655Z" creationid="95" creationdate="20170416T070655Z">
        <seg>custom_tasks.html#N16475</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>custom_tasks.html#N164A1</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070702Z" creationid="95" creationdate="20170416T070702Z">
        <seg>custom_tasks.html#N164A1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>custom_tasks.html#N164EA</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070706Z" creationid="95" creationdate="20170416T070706Z">
        <seg>custom_tasks.html#N164EA</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>custom_tasks.html#incremental_tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070710Z" creationid="95" creationdate="20170416T070710Z">
        <seg>custom_tasks.html#incremental_tasks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>custom_tasks.html#taskDefinition</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160817T145156Z" creationid="95" creationdate="20160817T145156Z">
        <seg>custom_tasks.html#taskDefinition</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>database {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150510T143650Z" creationid="msdx" creationdate="20150510T143650Z">
        <seg>database {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>database.driverClassName</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T053935Z" creationid="msdx" creationdate="20150513T053935Z">
        <seg>database.driverClassName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>database.password</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T053935Z" creationid="msdx" creationdate="20150513T053935Z">
        <seg>database.password</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>database.url</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T053935Z" creationid="msdx" creationdate="20150513T053935Z">
        <seg>database.url</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>database.username</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T053935Z" creationid="msdx" creationdate="20150513T053935Z">
        <seg>database.username</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>date/</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160722T091203Z" creationid="haohang" creationdate="20160722T091203Z">
        <seg>date/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>debug</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160401T090301Z" creationid="haohang" creationdate="20160401T090301Z">
        <seg>debug</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>def <bpt i="5" x="5">&lt;s5&gt;</bpt>byte<ept i="5">&lt;/s5&gt;</ept>[] encodedString = <bpt i="6" x="6">&lt;s6&gt;</bpt>new<ept i="6">&lt;/s6&gt;</ept> Base6<bpt i="7" x="7">&lt;s7&gt;</bpt>4<ept i="7">&lt;/s7&gt;</ept>().encode(<bpt i="8" x="8">&lt;s8&gt;</bpt>'hello world\n'<ept i="8">&lt;/s8&gt;</ept>.getBytes())</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161212T154701Z" creationid="95" creationdate="20161212T154701Z">
        <seg>def <bpt i="5" x="5">&lt;s5&gt;</bpt>byte<ept i="5">&lt;/s5&gt;</ept>[] encodedString = <bpt i="6" x="6">&lt;s6&gt;</bpt>new<ept i="6">&lt;/s6&gt;</ept> Base6<bpt i="7" x="7">&lt;s7&gt;</bpt>4<ept i="7">&lt;/s7&gt;</ept>().encode(<bpt i="8" x="8">&lt;s8&gt;</bpt>'hello world\n'<ept i="8">&lt;/s8&gt;</ept>.getBytes())</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>def File inputDir</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160816T144959Z" creationid="95" creationdate="20160816T144959Z">
        <seg>def File inputDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>def File outputDir</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160816T145001Z" creationid="95" creationdate="20160816T145001Z">
        <seg>def File outputDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>def String message = <bpt i="9" x="9">&lt;s9&gt;</bpt>'Hello from GreetingPlugin'<ept i="9">&lt;/s9&gt;</ept>
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T130740Z" creationid="95" creationdate="20160820T130740Z">
        <seg>def String message = <bpt i="9" x="9">&lt;s9&gt;</bpt>'Hello from GreetingPlugin'<ept i="9">&lt;/s9&gt;</ept>
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>def books = project.container(Book)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T015243Z" creationid="95" creationdate="20161211T015243Z">
        <seg>def books = project.container(Book)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>def dest = <bpt i="0" x="0">&lt;s0&gt;</bpt>"dest"<ept i="0">&lt;/s0&gt;</ept>

task copy(type: Copy) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T045150Z" creationid="msdx" creationdate="20141108T045150Z">
        <seg>def dest = <bpt i="0" x="0">&lt;s0&gt;</bpt>"dest"<ept i="0">&lt;/s0&gt;</ept>

task copy(type: Copy) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>def destFile = <bpt i="7" x="7">&lt;s7&gt;</bpt>new<ept i="7">&lt;/s7&gt;</ept> File(destDir, <bpt i="8" x="8">&lt;s8&gt;</bpt>"${name}.txt"<ept i="8">&lt;/s8&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T060328Z" creationid="msdx" creationdate="20141111T060328Z">
        <seg>def destFile = <bpt i="7" x="7">&lt;s7&gt;</bpt>new<ept i="7">&lt;/s7&gt;</ept> File(destDir, <bpt i="8" x="8">&lt;s8&gt;</bpt>"${name}.txt"<ept i="8">&lt;/s8&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>def destination</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T132301Z" creationid="95" creationdate="20160820T132301Z">
        <seg>def destination</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>def docs = file(<bpt i="0" x="0">&lt;s0&gt;</bpt>"$buildDir/docs"<ept i="0">&lt;/s0&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150703T100424Z" creationid="haohang" creationdate="20150703T100424Z">
        <seg>def docs = file(<bpt i="0" x="0">&lt;s0&gt;</bpt>"$buildDir/docs"<ept i="0">&lt;/s0&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>def file = console.readLine("PGP Secret Key Ring File (absolute path): ")</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160108T152917Z" creationid="95" creationdate="20160108T152917Z">
        <seg>def file = console.readLine("PGP Secret Key Ring File (absolute path): ")</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>def file = getDestination()</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T132303Z" creationid="95" creationdate="20160820T132303Z">
        <seg>def file = getDestination()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>def greet() {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T145742Z" creationid="95" creationdate="20160814T145742Z">
        <seg>def greet() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>def height = mountain.height[<bpt i="6" x="6">&lt;s6&gt;</bpt>0<ept i="6">&lt;/s6&gt;</ept>].text()</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T060328Z" creationid="msdx" creationdate="20141111T060328Z">
        <seg>def height = mountain.height[<bpt i="6" x="6">&lt;s6&gt;</bpt>0<ept i="6">&lt;/s6&gt;</ept>].text()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>def id = console.readLine("PGP Key Id: ")</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160108T152908Z" creationid="95" creationdate="20160108T152908Z">
        <seg>def id = console.readLine("PGP Key Id: ")</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>def inputProperty</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160816T145002Z" creationid="95" creationdate="20160816T145002Z">
        <seg>def inputProperty</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>def mountains = <bpt i="4" x="4">&lt;s4&gt;</bpt>new<ept i="4">&lt;/s4&gt;</ept> XmlParser().parse(srcFile)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T060325Z" creationid="msdx" creationdate="20141111T060325Z">
        <seg>def mountains = <bpt i="4" x="4">&lt;s4&gt;</bpt>new<ept i="4">&lt;/s4&gt;</ept> XmlParser().parse(srcFile)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>def name = mountain.name[<bpt i="5" x="5">&lt;s5&gt;</bpt>0<ept i="5">&lt;/s5&gt;</ept>].text()</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T060326Z" creationid="msdx" creationdate="20141111T060326Z">
        <seg>def name = mountain.name[<bpt i="5" x="5">&lt;s5&gt;</bpt>0<ept i="5">&lt;/s5&gt;</ept>].text()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>def password = console.readPassword("PGP Private Key Password: ")</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160108T152918Z" creationid="95" creationdate="20160108T152918Z">
        <seg>def password = console.readPassword("PGP Private Key Password: ")</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>def path = ant.path {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T011226Z" creationid="msdx" creationdate="20141116T011226Z">
        <seg>def path = ant.path {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>def someFile = file(<bpt i="0" x="0">&lt;s0&gt;</bpt>'build/somefile.txt'<ept i="0">&lt;/s0&gt;</ept>)

artifacts {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151226T091054Z" creationid="95" creationdate="20151226T091054Z">
        <seg>def someFile = file(<bpt i="0" x="0">&lt;s0&gt;</bpt>'build/somefile.txt'<ept i="0">&lt;/s0&gt;</ept>)

artifacts {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>def targetFile = <bpt i="10" x="10">&lt;s10&gt;</bpt>new<ept i="10">&lt;/s10&gt;</ept> File(outputDir, change.file.name)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160816T145029Z" creationid="95" creationdate="20160816T145029Z">
        <seg>def targetFile = <bpt i="10" x="10">&lt;s10&gt;</bpt>new<ept i="10">&lt;/s10&gt;</ept> File(outputDir, change.file.name)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>def targetFile = <bpt i="12" x="12">&lt;s12&gt;</bpt>new<ept i="12">&lt;/s12&gt;</ept> File(outputDir, change.file.name)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160816T145041Z" creationid="95" creationdate="20160816T145041Z">
        <seg>def targetFile = <bpt i="12" x="12">&lt;s12&gt;</bpt>new<ept i="12">&lt;/s12&gt;</ept> File(outputDir, change.file.name)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>def task = project.task(<bpt i="4" x="4">&lt;s4&gt;</bpt>'greeting'<ept i="4">&lt;/s4&gt;</ept>, type: GreetingTask)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160815T150132Z" creationid="95" creationdate="20160815T150132Z">
        <seg>def task = project.task(<bpt i="4" x="4">&lt;s4&gt;</bpt>'greeting'<ept i="4">&lt;/s4&gt;</ept>, type: GreetingTask)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>def version = findDefaultVersionInCatalog(details.requested.group, details.requested.name)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T070653Z" creationid="95" creationdate="20151115T070653Z">
        <seg>def version = findDefaultVersionInCatalog(details.requested.group, details.requested.name)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>default</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083232Z" creationid="msdx" creationdate="20150428T083232Z">
        <seg>default</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dependencies <bpt i="2" x="2">&lt;s2&gt;</bpt>"oro:oro:2.0.8:jar"<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161212T155102Z" creationid="95" creationdate="20161212T155102Z">
        <seg>dependencies <bpt i="2" x="2">&lt;s2&gt;</bpt>"oro:oro:2.0.8:jar"<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dependencies <bpt i="5" x="5">&lt;s5&gt;</bpt>"org.apache.ant:ant-launcher:1.9.3@jar"<ept i="5">&lt;/s5&gt;</ept>, <bpt i="6" x="6">&lt;s6&gt;</bpt>"org.apache.ant:ant-junit:1.9.3"<ept i="6">&lt;/s6&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T091427Z" creationid="haohang" creationdate="20150801T091427Z">
        <seg>dependencies <bpt i="5" x="5">&lt;s5&gt;</bpt>"org.apache.ant:ant-launcher:1.9.3@jar"<ept i="5">&lt;/s5&gt;</ept>, <bpt i="6" x="6">&lt;s6&gt;</bpt>"org.apache.ant:ant-junit:1.9.3"<ept i="6">&lt;/s6&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dependencies {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T080015Z" creationid="msdx" creationdate="20150429T080015Z">
        <seg>dependencies {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dependencies(<bpt i="6" x="6">&lt;s6&gt;</bpt>'org.apache.ant:ant-junit:1.9.3@jar'<ept i="6">&lt;/s6&gt;</ept>, <bpt i="7" x="7">&lt;s7&gt;</bpt>'org.apache.ant:ant-launcher:1.9.3'<ept i="7">&lt;/s7&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T080914Z" creationid="msdx" creationdate="20150429T080914Z">
        <seg>dependencies(<bpt i="6" x="6">&lt;s6&gt;</bpt>'org.apache.ant:ant-junit:1.9.3@jar'<ept i="6">&lt;/s6&gt;</ept>, <bpt i="7" x="7">&lt;s7&gt;</bpt>'org.apache.ant:ant-launcher:1.9.3'<ept i="7">&lt;/s7&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dependency <bpt i="2" x="2">&lt;s2&gt;</bpt>":compile-transitive-1.0@jar"<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T093818Z" creationid="msdx" creationdate="20150503T093818Z">
        <seg>dependency <bpt i="2" x="2">&lt;s2&gt;</bpt>":compile-transitive-1.0@jar"<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dependency <bpt i="3" x="3">&lt;s3&gt;</bpt>":providedCompile-transitive:1.0@jar"<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T093818Z" creationid="msdx" creationdate="20150503T093818Z">
        <seg>dependency <bpt i="3" x="3">&lt;s3&gt;</bpt>":providedCompile-transitive:1.0@jar"<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dependency <bpt i="6" x="6">&lt;s6&gt;</bpt>":providedCompile-transitive:1.0@jar"<ept i="6">&lt;/s6&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T093819Z" creationid="msdx" creationdate="20150503T093819Z">
        <seg>dependency <bpt i="3" x="3">&lt;s3&gt;</bpt>":providedCompile-transitive:1.0@jar"<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dependency(<bpt i="1" x="1">&lt;s1&gt;</bpt>"commons-cli:commons-cli:1.0"<ept i="1">&lt;/s1&gt;</ept>) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T091423Z" creationid="haohang" creationdate="20150801T091423Z">
        <seg>dependency(<bpt i="1" x="1">&lt;s1&gt;</bpt>"commons-cli:commons-cli:1.0"<ept i="1">&lt;/s1&gt;</ept>) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dependency(<bpt i="2" x="2">&lt;s2&gt;</bpt>'asm:asm-all:2.2.3'<ept i="2">&lt;/s2&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T080911Z" creationid="msdx" creationdate="20150429T080911Z">
        <seg>dependency(<bpt i="2" x="2">&lt;s2&gt;</bpt>'asm:asm-all:2.2.3'<ept i="2">&lt;/s2&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dependency(<bpt i="3" x="3">&lt;s3&gt;</bpt>'antlr:antlr:2.7.7'<ept i="3">&lt;/s3&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T080912Z" creationid="msdx" creationdate="20150429T080912Z">
        <seg>dependency(<bpt i="3" x="3">&lt;s3&gt;</bpt>'antlr:antlr:2.7.7'<ept i="3">&lt;/s3&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dependency(<bpt i="4" x="4">&lt;s4&gt;</bpt>'commons-cli:commons-cli:1.2'<ept i="4">&lt;/s4&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T080912Z" creationid="msdx" creationdate="20150429T080912Z">
        <seg>dependency(<bpt i="4" x="4">&lt;s4&gt;</bpt>'commons-cli:commons-cli:1.2'<ept i="4">&lt;/s4&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dependency-cache</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083243Z" creationid="msdx" creationdate="20150428T083243Z">
        <seg>dependency-cache</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dependencyCacheDir</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083244Z" creationid="msdx" creationdate="20150428T083244Z">
        <seg>dependencyCacheDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dependencyCacheDirName</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083243Z" creationid="msdx" creationdate="20150428T083243Z">
        <seg>dependencyCacheDirName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dependencyReport</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T061142Z" creationid="haohang" creationdate="20150628T061142Z">
        <seg>dependencyReport</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dependency_management.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150710T013140Z" creationid="haohang" creationdate="20150710T013140Z">
        <seg>dependency_management.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dependency_management.html#N1513F</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070158Z" creationid="95" creationdate="20170416T070158Z">
        <seg>dependency_management.html#N1513F</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dependency_management.html#para:dependencies_with_empty_attributes</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150910T012138Z" creationid="haohang" creationdate="20150910T012138Z">
        <seg>dependency_management.html#para:dependencies_with_empty_attributes</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dependency_management.html#para:notation_collections</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151201T064026Z" creationid="haohang" creationdate="20151201T064026Z">
        <seg>dependency_management.html#para:notation_collections</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dependency_management.html#sec:Introduction</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070111Z" creationid="95" creationdate="20170416T070111Z">
        <seg>dependency_management.html#sec:Introduction</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dependency_management.html#sec:blacklisting_version</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T054351Z" creationid="95" creationdate="20151115T054351Z">
        <seg>dependency_management.html#sec:blacklisting_version</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dependency_management.html#sec:cache_command_line_options</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T012309Z" creationid="haohang" creationdate="20150722T012309Z">
        <seg>dependency_management.html#sec:cache_command_line_options</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dependency_management.html#sec:controlling_caching</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T012310Z" creationid="haohang" creationdate="20150722T012310Z">
        <seg>dependency_management.html#sec:controlling_caching</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dependency_management.html#sec:dependency_cache</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070203Z" creationid="95" creationdate="20170416T070203Z">
        <seg>dependency_management.html#sec:dependency_cache</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dependency_management.html#sec:dependency_configurations</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151227T152814Z" creationid="95" creationdate="20151227T152814Z">
        <seg>dependency_management.html#sec:dependency_configurations</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dependency_management.html#sec:dependency_management_overview</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070113Z" creationid="95" creationdate="20170416T070113Z">
        <seg>dependency_management.html#sec:dependency_management_overview</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dependency_management.html#sec:dependency_resolution</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070142Z" creationid="95" creationdate="20170416T070142Z">
        <seg>dependency_management.html#sec:dependency_resolution</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dependency_management.html#sec:flat_dir_resolver</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T095702Z" creationid="haohang" creationdate="20150807T095702Z">
        <seg>dependency_management.html#sec:flat_dir_resolver</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dependency_management.html#sec:how_to_declare_your_dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T060209Z" creationid="msdx" creationdate="20141116T060209Z">
        <seg>dependency_management.html#sec:how_to_declare_your_dependencies</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dependency_management.html#sec:ivy_repositories</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T095651Z" creationid="haohang" creationdate="20150807T095651Z">
        <seg>dependency_management.html#sec:ivy_repositories</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dependency_management.html#sec:repositories</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T103053Z" creationid="haohang" creationdate="20150801T103053Z">
        <seg>dependency_management.html#sec:repositories</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dependency_management.html#sec:strategies_of_transitive_dependency_management</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070208Z" creationid="95" creationdate="20170416T070208Z">
        <seg>dependency_management.html#sec:strategies_of_transitive_dependency_management</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dependency_management.html#sec:working_with_dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070135Z" creationid="95" creationdate="20170416T070135Z">
        <seg>dependency_management.html#sec:working_with_dependencies</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dependency_management.html#sub:api_dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T080630Z" creationid="haohang" creationdate="20150722T080630Z">
        <seg>dependency_management.html#sub:api_dependencies</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dependency_management.html#sub:cache_artifact_reuse</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T045619Z" creationid="95" creationdate="20151129T045619Z">
        <seg>dependency_management.html#sub:cache_artifact_reuse</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dependency_management.html#sub:client_module_dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T080442Z" creationid="haohang" creationdate="20150722T080442Z">
        <seg>dependency_management.html#sub:client_module_dependencies</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dependency_management.html#sub:configurations</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T144838Z" creationid="msdx" creationdate="20141112T144838Z">
        <seg>dependency_management.html#sub:configurations</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dependency_management.html#sub:dependency_management_and_java</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150721T055757Z" creationid="haohang" creationdate="20150721T055757Z">
        <seg>dependency_management.html#sub:dependency_management_and_java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dependency_management.html#sub:file_dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T080428Z" creationid="haohang" creationdate="20150722T080428Z">
        <seg>dependency_management.html#sub:file_dependencies</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dependency_management.html#sub:groovy_dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T080726Z" creationid="haohang" creationdate="20150722T080726Z">
        <seg>dependency_management.html#sub:groovy_dependencies</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dependency_management.html#sub:maven_central</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T094110Z" creationid="haohang" creationdate="20150807T094110Z">
        <seg>dependency_management.html#sub:maven_central</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dependency_management.html#sub:maven_jcenter</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T094158Z" creationid="haohang" creationdate="20150807T094158Z">
        <seg>dependency_management.html#sub:maven_jcenter</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dependency_management.html#sub:maven_local</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T095556Z" creationid="haohang" creationdate="20150807T095556Z">
        <seg>dependency_management.html#sub:maven_local</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dependency_management.html#sub:maven_repo</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T095617Z" creationid="haohang" creationdate="20150807T095617Z">
        <seg>dependency_management.html#sub:maven_repo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dependency_management.html#sub:module_dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T080039Z" creationid="haohang" creationdate="20150722T080039Z">
        <seg>dependency_management.html#sub:module_dependencies</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dependency_management.html#sub:more_about_ivy_resolvers</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151226T092101Z" creationid="95" creationdate="20151226T092101Z">
        <seg>dependency_management.html#sub:more_about_ivy_resolvers</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dependency_management.html#sub:project_dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T080348Z" creationid="haohang" creationdate="20150722T080348Z">
        <seg>dependency_management.html#sub:project_dependencies</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dependency_management.html#sub:version_conflicts</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T101744Z" creationid="haohang" creationdate="20150801T101744Z">
        <seg>dependency_management.html#sub:version_conflicts</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dependsOn binaries.withType(ExecutableBinary).matching {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T084719Z" creationid="haohang" creationdate="20160408T084719Z">
        <seg>dependsOn binaries.withType(ExecutableBinary).matching {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dependsOn classes</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T084525Z" creationid="haohang" creationdate="20160726T084525Z">
        <seg>dependsOn classes</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dependsOn pingServer1, pingServer2
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T065650Z" creationid="msdx" creationdate="20141111T065650Z">
        <seg>dependsOn pingServer1, pingServer2
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>deploy project(<bpt i="3" x="3">&lt;s3&gt;</bpt>':war'<ept i="3">&lt;/s3&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T142849Z" creationid="msdx" creationdate="20150504T142849Z">
        <seg>deploy project(<bpt i="3" x="3">&lt;s3&gt;</bpt>':war'<ept i="3">&lt;/s3&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>deployerJars
}

repositories {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T134850Z" creationid="95" creationdate="20160105T134850Z">
        <seg>deployerJars
}

repositories {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>deployerJars <bpt i="0" x="0">&lt;s0&gt;</bpt>"org.apache.maven.wagon:wagon-ssh:2.2"<ept i="0">&lt;/s0&gt;</ept>
}

uploadArchives {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T134852Z" creationid="95" creationdate="20160105T134852Z">
        <seg>deployerJars <bpt i="0" x="0">&lt;s0&gt;</bpt>"org.apache.maven.wagon:wagon-ssh:2.2"<ept i="0">&lt;/s0&gt;</ept>
}

uploadArchives {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>deploymentDescriptor</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T141717Z" creationid="msdx" creationdate="20150504T141717Z">
        <seg>deploymentDescriptor</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>deploymentDescriptor {  <bpt i="14" x="14">&lt;s14&gt;</bpt>// custom entries for application.xml:<ept i="14">&lt;/s14&gt;</ept>
<bpt i="15" x="15">&lt;s15&gt;</bpt>//      fileName = "application.xml"  // same as the default value<ept i="15">&lt;/s15&gt;</ept>
<bpt i="16" x="16">&lt;s16&gt;</bpt>//      version = "6"  // same as the default value<ept i="16">&lt;/s16&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T142900Z" creationid="msdx" creationdate="20150504T142900Z">
        <seg>deploymentDescriptor {  <bpt i="14" x="14">&lt;s14&gt;</bpt>// custom entries for application.xml:<ept i="14">&lt;/s14&gt;</ept>
<bpt i="15" x="15">&lt;s15&gt;</bpt>//      fileName = "application.xml"  // same as the default value<ept i="15">&lt;/s15&gt;</ept>
<bpt i="16" x="16">&lt;s16&gt;</bpt>//      version = "6"  // same as the default value<ept i="16">&lt;/s16&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>description</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T044337Z" creationid="msdx" creationdate="20141108T044337Z">
        <seg>description</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>description <bpt i="0" x="0">&lt;s0&gt;</bpt>'Copies the resource directory to the target directory.'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T015507Z" creationid="msdx" creationdate="20141111T015507Z">
        <seg>description <bpt i="0" x="0">&lt;s0&gt;</bpt>'Copies the resource directory to the target directory.'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>description = <bpt i="0" x="0">&lt;s0&gt;</bpt>'compile classpath'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T075930Z" creationid="haohang" creationdate="20150722T075930Z">
        <seg>description = <bpt i="0" x="0">&lt;s0&gt;</bpt>'compile classpath'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>description = <bpt i="10" x="10">&lt;s10&gt;</bpt>"The second project"<ept i="10">&lt;/s10&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T145216Z" creationid="95" creationdate="20170330T145216Z">
        <seg>description = <bpt i="10" x="10">&lt;s10&gt;</bpt>"The second project"<ept i="10">&lt;/s10&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>description = <bpt i="1" x="1">&lt;s1&gt;</bpt>'compile classpath'<ept i="1">&lt;/s1&gt;</ept>
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T075939Z" creationid="haohang" creationdate="20150722T075939Z">
        <seg>description = <bpt i="1" x="1">&lt;s1&gt;</bpt>'compile classpath'<ept i="1">&lt;/s1&gt;</ept>
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>description = <bpt i="20" x="20">&lt;s20&gt;</bpt>"My customized EAR for the Gradle documentation"<ept i="20">&lt;/s20&gt;</ept>  <bpt i="21" x="21">&lt;s21&gt;</bpt>// defaults to project.description<ept i="21">&lt;/s21&gt;</ept>
<bpt i="22" x="22">&lt;s22&gt;</bpt>//      libraryDirectory = "APP-INF/lib"  // not needed, because setting libDirName above did this for us<ept i="22">&lt;/s22&gt;</ept>
<bpt i="23" x="23">&lt;s23&gt;</bpt>//      module("my.jar", "java")  // wouldn't deploy since my.jar isn't a deploy dependency<ept i="23">&lt;/s23&gt;</ept>
<bpt i="24" x="24">&lt;s24&gt;</bpt>//      webModule("my.war", "/")  // wouldn't deploy since my.war isn't a deploy dependency<ept i="24">&lt;/s24&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T142901Z" creationid="msdx" creationdate="20150504T142901Z">
        <seg>description = <bpt i="20" x="20">&lt;s20&gt;</bpt>"My customized EAR for the Gradle documentation"<ept i="20">&lt;/s20&gt;</ept>  <bpt i="21" x="21">&lt;s21&gt;</bpt>// defaults to project.description<ept i="21">&lt;/s21&gt;</ept>
<bpt i="22" x="22">&lt;s22&gt;</bpt>//      libraryDirectory = "APP-INF/lib"  // not needed, because setting libDirName above did this for us<ept i="22">&lt;/s22&gt;</ept>
<bpt i="23" x="23">&lt;s23&gt;</bpt>//      module("my.jar", "java")  // wouldn't deploy since my.jar isn't a deploy dependency<ept i="23">&lt;/s23&gt;</ept>
<bpt i="24" x="24">&lt;s24&gt;</bpt>//      webModule("my.war", "/")  // wouldn't deploy since my.war isn't a deploy dependency<ept i="24">&lt;/s24&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>description = <bpt i="6" x="6">&lt;s6&gt;</bpt>"The first project"<ept i="6">&lt;/s6&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T145204Z" creationid="95" creationdate="20170330T145204Z">
        <seg>description = <bpt i="6" x="6">&lt;s6&gt;</bpt>"The first project"<ept i="6">&lt;/s6&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>descriptor.status = <bpt i="3" x="3">&lt;s3&gt;</bpt>'milestone'<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20170217T083156Z" creationid="haohang" creationdate="20170217T083156Z">
        <seg>descriptor.status = <bpt i="3" x="3">&lt;s3&gt;</bpt>'milestone'<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>descriptor.withXml {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170304T031119Z" creationid="95" creationdate="20170304T031119Z">
        <seg>descriptor.withXml {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>destDir.mkdirs()</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T060325Z" creationid="msdx" creationdate="20141111T060325Z">
        <seg>destDir.mkdirs()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>destFile = file(<bpt i="0" x="0">&lt;s0&gt;</bpt>'build/somefile.txt'<ept i="0">&lt;/s0&gt;</ept>)
}

artifacts {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151226T091157Z" creationid="95" creationdate="20151226T091157Z">
        <seg>destFile = file(<bpt i="0" x="0">&lt;s0&gt;</bpt>'build/somefile.txt'<ept i="0">&lt;/s0&gt;</ept>)
}

artifacts {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>destFile.text = <bpt i="9" x="9">&lt;s9&gt;</bpt>"$name -&gt; ${height}\n"<ept i="9">&lt;/s9&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T060330Z" creationid="msdx" creationdate="20141111T060330Z">
        <seg>destFile.text = <bpt i="9" x="9">&lt;s9&gt;</bpt>"$name -&gt; ${height}\n"<ept i="9">&lt;/s9&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>destPath</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T132307Z" creationid="msdx" creationdate="20150506T132307Z">
        <seg>destPath</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>destination = file(<bpt i="0" x="0">&lt;s0&gt;</bpt>"$buildDir/generated-ivy.xml"<ept i="0">&lt;/s0&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T144006Z" creationid="95" creationdate="20170330T144006Z">
        <seg>destination = file(<bpt i="0" x="0">&lt;s0&gt;</bpt>"$buildDir/generated-ivy.xml"<ept i="0">&lt;/s0&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>destination = file(<bpt i="0" x="0">&lt;s0&gt;</bpt>"$buildDir/generated-pom.xml"<ept i="0">&lt;/s0&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T064810Z" creationid="95" creationdate="20170416T064806Z">
        <seg>destination = file(<bpt i="0" x="0">&lt;s0&gt;</bpt>"$buildDir/generated-pom.xml"<ept i="0">&lt;/s0&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>destination = { project.greetingFile }
}

task sayGreeting(dependsOn: greet) &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T132305Z" creationid="95" creationdate="20160820T132305Z">
        <seg>destination = { project.greetingFile }
}

task sayGreeting(dependsOn: greet) &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>destinationDir</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T155941Z" creationid="msdx" creationdate="20141113T155941Z">
        <seg>destinationDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>destinationDir = file(<bpt i="2" x="2">&lt;s2&gt;</bpt>"$buildDir/reports/allTests"<ept i="2">&lt;/s2&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T142810Z" creationid="msdx" creationdate="20150428T142810Z">
        <seg>destinationDir = file(<bpt i="2" x="2">&lt;s2&gt;</bpt>"$buildDir/reports/allTests"<ept i="2">&lt;/s2&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>destinationFile = file(<bpt i="0" x="0">&lt;s0&gt;</bpt>"$buildDir/jacoco/jacocoTest.exec"<ept i="0">&lt;/s0&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T132254Z" creationid="msdx" creationdate="20150506T132254Z">
        <seg>destinationFile = file(<bpt i="0" x="0">&lt;s0&gt;</bpt>"$buildDir/jacoco/jacocoTest.exec"<ept i="0">&lt;/s0&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>details.exclude()</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T145618Z" creationid="msdx" creationdate="20150428T145618Z">
        <seg>details.exclude()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>details.statusScheme = [<bpt i="3" x="3">&lt;s3&gt;</bpt>"bronze"<ept i="3">&lt;/s3&gt;</ept>, <bpt i="4" x="4">&lt;s4&gt;</bpt>"silver"<ept i="4">&lt;/s4&gt;</ept>, <bpt i="5" x="5">&lt;s5&gt;</bpt>"gold"<ept i="5">&lt;/s5&gt;</ept>, <bpt i="6" x="6">&lt;s6&gt;</bpt>"platinum"<ept i="6">&lt;/s6&gt;</ept>]</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T041821Z" creationid="95" creationdate="20151129T041821Z">
        <seg>details.statusScheme = [<bpt i="3" x="3">&lt;s3&gt;</bpt>"bronze"<ept i="3">&lt;/s3&gt;</ept>, <bpt i="4" x="4">&lt;s4&gt;</bpt>"silver"<ept i="4">&lt;/s4&gt;</ept>, <bpt i="5" x="5">&lt;s5&gt;</bpt>"gold"<ept i="5">&lt;/s5&gt;</ept>, <bpt i="6" x="6">&lt;s6&gt;</bpt>"platinum"<ept i="6">&lt;/s6&gt;</ept>]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>details.useTarget <bpt i="7" x="7">&lt;s7&gt;</bpt>"org.slf4j:log4j-over-slf4j:1.7.5"<ept i="7">&lt;/s7&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T090645Z" creationid="95" creationdate="20151115T090645Z">
        <seg>details.useTarget <bpt i="7" x="7">&lt;s7&gt;</bpt>"org.slf4j:log4j-over-slf4j:1.7.5"<ept i="7">&lt;/s7&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>details.useTarget group: details.requested.group, name: <bpt i="3" x="3">&lt;s3&gt;</bpt>'groovy'<ept i="3">&lt;/s3&gt;</ept>, version: details.requested.version</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T090642Z" creationid="95" creationdate="20151115T090642Z">
        <seg>details.useTarget group: details.requested.group, name: <bpt i="3" x="3">&lt;s3&gt;</bpt>'groovy'<ept i="3">&lt;/s3&gt;</ept>, version: details.requested.version</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>details.useVersion <bpt i="2" x="2">&lt;s2&gt;</bpt>'1.4'<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T061534Z" creationid="95" creationdate="20151115T061534Z">
        <seg>details.useVersion <bpt i="2" x="2">&lt;s2&gt;</bpt>'1.4'<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>details.useVersion <bpt i="5" x="5">&lt;s5&gt;</bpt>'1.2.1'<ept i="5">&lt;/s5&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T085849Z" creationid="95" creationdate="20151115T085849Z">
        <seg>details.useVersion <bpt i="5" x="5">&lt;s5&gt;</bpt>'1.2.1'<ept i="5">&lt;/s5&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>details.useVersion version</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T070654Z" creationid="95" creationdate="20151115T070654Z">
        <seg>details.useVersion version</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>details.value = baseValue</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T145617Z" creationid="msdx" creationdate="20150428T145617Z">
        <seg>details.value = baseValue</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>developerGuide {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T015223Z" creationid="95" creationdate="20161211T015223Z">
        <seg>developerGuide {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dir</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083441Z" creationid="msdx" creationdate="20150428T083441Z">
        <seg>dir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dirs <bpt i="0" x="0">&lt;s0&gt;</bpt>'lib'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150910T012111Z" creationid="haohang" creationdate="20150910T012111Z">
        <seg>dirs <bpt i="0" x="0">&lt;s0&gt;</bpt>'lib'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dirs <bpt i="1" x="1">&lt;s1&gt;</bpt>"repo"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151226T092022Z" creationid="95" creationdate="20151226T092022Z">
        <seg>dirs <bpt i="1" x="1">&lt;s1&gt;</bpt>"repo"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dirs <bpt i="1" x="1">&lt;s1&gt;</bpt>'lib'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T133454Z" creationid="95" creationdate="20151006T133454Z">
        <seg>dirs <bpt i="1" x="1">&lt;s1&gt;</bpt>'lib'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dirs <bpt i="1" x="1">&lt;s1&gt;</bpt>'lib1'<ept i="1">&lt;/s1&gt;</ept>, <bpt i="2" x="2">&lt;s2&gt;</bpt>'lib2'<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150910T012123Z" creationid="haohang" creationdate="20150910T012123Z">
        <seg>dirs <bpt i="1" x="1">&lt;s1&gt;</bpt>'lib1'<ept i="1">&lt;/s1&gt;</ept>, <bpt i="2" x="2">&lt;s2&gt;</bpt>'lib2'<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dirs <bpt i="2" x="2">&lt;s2&gt;</bpt>'lib'<ept i="2">&lt;/s2&gt;</ept>
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T133506Z" creationid="95" creationdate="20151006T133506Z">
        <seg>dirs <bpt i="2" x="2">&lt;s2&gt;</bpt>'lib'<ept i="2">&lt;/s2&gt;</ept>
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>displayName = <bpt i="18" x="18">&lt;s18&gt;</bpt>"Custom Ear"<ept i="18">&lt;/s18&gt;</ept>  <bpt i="19" x="19">&lt;s19&gt;</bpt>// defaults to project.name<ept i="19">&lt;/s19&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T142901Z" creationid="msdx" creationdate="20150504T142901Z">
        <seg>displayName = <bpt i="18" x="18">&lt;s18&gt;</bpt>"Custom Ear"<ept i="18">&lt;/s18&gt;</ept>  <bpt i="19" x="19">&lt;s19&gt;</bpt>// defaults to project.name<ept i="19">&lt;/s19&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>distTar</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150701T030852Z" creationid="haohang" creationdate="20150701T030852Z">
        <seg>distTar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>distZip</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150701T030819Z" creationid="haohang" creationdate="20150701T030819Z">
        <seg>distZip</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>distribution</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104800Z" creationid="msdx" creationdate="20150428T104800Z">
        <seg>distribution</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>distribution <bpt i="3" x="3">&lt;s3&gt;</bpt>'repo'<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160104T152819Z" creationid="95" creationdate="20160104T152819Z">
        <seg>distribution <bpt i="3" x="3">&lt;s3&gt;</bpt>'repo'<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>distribution_plugin.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104800Z" creationid="msdx" creationdate="20150428T104800Z">
        <seg>distribution_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>distribution_plugin.html#N1466F</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065942Z" creationid="95" creationdate="20170416T065942Z">
        <seg>distribution_plugin.html#N1466F</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>distribution_plugin.html#N146AC</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065944Z" creationid="95" creationdate="20170416T065944Z">
        <seg>distribution_plugin.html#N146AC</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>distribution_plugin.html#N147A0</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065945Z" creationid="95" creationdate="20170416T065945Z">
        <seg>distribution_plugin.html#N147A0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>distributions</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083242Z" creationid="msdx" creationdate="20150428T083242Z">
        <seg>distributions</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>distributions {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150705T084608Z" creationid="haohang" creationdate="20150705T084608Z">
        <seg>distributions {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>distsDir</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083242Z" creationid="msdx" creationdate="20150428T083242Z">
        <seg>distsDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>distsDirName</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083241Z" creationid="msdx" creationdate="20150428T083241Z">
        <seg>distsDirName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>doFirst {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T150936Z" creationid="msdx" creationdate="20141116T150936Z">
        <seg>doFirst {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>doLast {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T060323Z" creationid="msdx" creationdate="20141111T060323Z">
        <seg>doLast {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>doLast {println <bpt i="1" x="1">&lt;s1&gt;</bpt>"- I depend on water"<ept i="1">&lt;/s1&gt;</ept>}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160530T144429Z" creationid="95" creationdate="20160530T144429Z">
        <seg>doLast {println <bpt i="1" x="1">&lt;s1&gt;</bpt>"- I depend on water"<ept i="1">&lt;/s1&gt;</ept>}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>doLast{</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T134202Z" creationid="msdx" creationdate="20141113T134202Z">
        <seg>doLast{</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>docs</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083243Z" creationid="msdx" creationdate="20150428T083243Z">
        <seg>docs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>docs.css</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T033829Z" creationid="msdx" creationdate="20141030T033829Z">
        <seg>docs.css</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>docs.mkdirs()</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150703T100425Z" creationid="haohang" creationdate="20150703T100425Z">
        <seg>docs.mkdirs()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>docsDir</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083243Z" creationid="msdx" creationdate="20150428T083243Z">
        <seg>docsDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>docsDirName</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083242Z" creationid="msdx" creationdate="20150428T083242Z">
        <seg>docsDirName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>driverClassName = <bpt i="2" x="2">&lt;s2&gt;</bpt>"com.mysql.jdbc.Driver"<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150510T143651Z" creationid="msdx" creationdate="20150510T143651Z">
        <seg>driverClassName = <bpt i="2" x="2">&lt;s2&gt;</bpt>"com.mysql.jdbc.Driver"<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>driverClassName = <bpt i="3" x="3">&lt;s3&gt;</bpt>"com.mysql.jdbc.Driver"<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T091239Z" creationid="msdx" creationdate="20150512T091239Z">
        <seg>driverClassName = <bpt i="2" x="2">&lt;s2&gt;</bpt>"com.mysql.jdbc.Driver"<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>dumpOnExit</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T132321Z" creationid="msdx" creationdate="20150506T132321Z">
        <seg>dumpOnExit</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>eachComponent { ComponentMetadataDetails details -&gt;</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T041819Z" creationid="95" creationdate="20151129T041819Z">
        <seg>eachComponent { ComponentMetadataDetails details -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>eachEntry { details -&gt;</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T145617Z" creationid="msdx" creationdate="20150428T145617Z">
        <seg>eachEntry { details -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ear</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104756Z" creationid="msdx" creationdate="20150428T104756Z">
        <seg>ear</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ear_plugin.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104754Z" creationid="msdx" creationdate="20150428T104754Z">
        <seg>ear_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ear_plugin.html#N1310D</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T132233Z" creationid="msdx" creationdate="20150509T132233Z">
        <seg>ear_plugin.html#N1310D</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ear_plugin.html#N1311C</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T132237Z" creationid="msdx" creationdate="20150509T132237Z">
        <seg>ear_plugin.html#N1311C</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ear_plugin.html#N1315C</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T132240Z" creationid="msdx" creationdate="20150509T132240Z">
        <seg>ear_plugin.html#N1315C</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ear_plugin.html#N13176</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T132243Z" creationid="msdx" creationdate="20150509T132243Z">
        <seg>ear_plugin.html#N13176</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ear_plugin.html#N1318D</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T132245Z" creationid="msdx" creationdate="20150509T132245Z">
        <seg>ear_plugin.html#N1318D</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ear_plugin.html#sec:customizing</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T084855Z" creationid="msdx" creationdate="20150513T084855Z">
        <seg>ear_plugin.html#sec:customizing</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ear_plugin.html#sec:default_settings</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T132248Z" creationid="msdx" creationdate="20150509T132248Z">
        <seg>ear_plugin.html#sec:default_settings</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ear_plugin.html#sec:using_custom_app_xml</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150514T151805Z" creationid="msdx" creationdate="20150514T151805Z">
        <seg>ear_plugin.html#sec:using_custom_app_xml</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>earlib group: <bpt i="5" x="5">&lt;s5&gt;</bpt>'log4j'<ept i="5">&lt;/s5&gt;</ept>, name: <bpt i="6" x="6">&lt;s6&gt;</bpt>'log4j'<ept i="6">&lt;/s6&gt;</ept>, version: <bpt i="7" x="7">&lt;s7&gt;</bpt>'1.2.15'<ept i="7">&lt;/s7&gt;</ept>, ext: <bpt i="8" x="8">&lt;s8&gt;</bpt>'jar'<ept i="8">&lt;/s8&gt;</ept>
}

ear {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T142851Z" creationid="msdx" creationdate="20150504T142851Z">
        <seg>earlib group: <bpt i="5" x="5">&lt;s5&gt;</bpt>'log4j'<ept i="5">&lt;/s5&gt;</ept>, name: <bpt i="6" x="6">&lt;s6&gt;</bpt>'log4j'<ept i="6">&lt;/s6&gt;</ept>, version: <bpt i="7" x="7">&lt;s7&gt;</bpt>'1.2.15'<ept i="7">&lt;/s7&gt;</ept>, ext: <bpt i="8" x="8">&lt;s8&gt;</bpt>'jar'<ept i="8">&lt;/s8&gt;</ept>
}

ear {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>eclipse</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104806Z" creationid="msdx" creationdate="20150428T104806Z">
        <seg>eclipse</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>eclipse-wtp</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104807Z" creationid="msdx" creationdate="20150428T104807Z">
        <seg>eclipse-wtp</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>eclipse.classpath</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T022415Z" creationid="haohang" creationdate="20150624T022415Z">
        <seg>eclipse.classpath</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>eclipse.classpath.file {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T064926Z" creationid="haohang" creationdate="20150625T064926Z">
        <seg>eclipse.classpath.file {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>eclipse.jdt</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T022429Z" creationid="haohang" creationdate="20150624T022429Z">
        <seg>eclipse.jdt</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>eclipse.project</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T022404Z" creationid="haohang" creationdate="20150624T022404Z">
        <seg>eclipse.project</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>eclipse.project.file.beforeMerged { project -&gt;</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T065750Z" creationid="haohang" creationdate="20150625T065750Z">
        <seg>eclipse.project.file.beforeMerged { project -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>eclipse.wtp.component</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T022456Z" creationid="haohang" creationdate="20150624T022456Z">
        <seg>eclipse.wtp.component</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>eclipse.wtp.facet</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T022526Z" creationid="haohang" creationdate="20150624T022526Z">
        <seg>eclipse.wtp.facet</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>eclipseClasspath</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T004447Z" creationid="haohang" creationdate="20150603T004447Z">
        <seg>eclipseClasspath</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>eclipseJdt</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T004457Z" creationid="haohang" creationdate="20150603T004457Z">
        <seg>eclipseJdt</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>eclipseProject</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T004430Z" creationid="haohang" creationdate="20150603T004430Z">
        <seg>eclipseProject</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>eclipseWtpComponent</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T004508Z" creationid="haohang" creationdate="20150603T004508Z">
        <seg>eclipseWtpComponent</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>eclipseWtpFacet</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150603T004538Z" creationid="haohang" creationdate="20150603T004538Z">
        <seg>eclipseWtpFacet</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>eclipse_plugin.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104806Z" creationid="msdx" creationdate="20150428T104806Z">
        <seg>eclipse_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>eclipse_plugin.html#N13D63</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065814Z" creationid="95" creationdate="20170416T065814Z">
        <seg>eclipse_plugin.html#N13D63</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>eclipse_plugin.html#N13D7A</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065817Z" creationid="95" creationdate="20170416T065817Z">
        <seg>eclipse_plugin.html#N13D7A</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>eclipse_plugin.html#N13EE4</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065819Z" creationid="95" creationdate="20170416T065819Z">
        <seg>eclipse_plugin.html#N13EE4</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>eclipse_plugin.html#N13F63</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065822Z" creationid="95" creationdate="20170416T065822Z">
        <seg>eclipse_plugin.html#N13F63</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>eclipse_plugin.html#sec:complete-overwrite</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150624T105547Z" creationid="haohang" creationdate="20150624T105547Z">
        <seg>eclipse_plugin.html#sec:complete-overwrite</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>emailNotification = <bpt i="2" x="2">&lt;s2&gt;</bpt>"build@master.org"<ept i="2">&lt;/s2&gt;</ept>
}

sourceSets.all { ext.purpose = null }

sourceSets {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T050711Z" creationid="msdx" creationdate="20141108T050711Z">
        <seg>emailNotification = <bpt i="2" x="2">&lt;s2&gt;</bpt>"build@master.org"<ept i="2">&lt;/s2&gt;</ept>
}

sourceSets.all { ext.purpose = null }

sourceSets {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>embedding.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141117T142230Z" creationid="msdx" creationdate="20141117T142230Z">
        <seg>embedding.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>embedding.html#sec:embedding_daemon</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T071009Z" creationid="95" creationdate="20170416T071009Z">
        <seg>embedding.html#sec:embedding_daemon</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>embedding.html#sec:embedding_introduction</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070955Z" creationid="95" creationdate="20170416T070955Z">
        <seg>embedding.html#sec:embedding_introduction</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>embedding.html#sec:embedding_quickstart</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T071013Z" creationid="95" creationdate="20170416T071013Z">
        <seg>embedding.html#sec:embedding_quickstart</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>enabled</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T132306Z" creationid="msdx" creationdate="20150506T132306Z">
        <seg>enabled</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>endIndex = <bpt i="3" x="3">&lt;s3&gt;</bpt>5<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T152808Z" creationid="msdx" creationdate="20141109T152808Z">
        <seg>endIndex = <bpt i="3" x="3">&lt;s3&gt;</bpt>5<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>english</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T081114Z" creationid="haohang" creationdate="20160408T081114Z">
        <seg>english</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>evaluationDependsOn(<bpt i="0" x="0">&lt;s0&gt;</bpt>':producer'<ept i="0">&lt;/s0&gt;</ept>)

message = rootProject.producerMessage

task consume &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T074959Z" creationid="haohang" creationdate="20160718T074959Z">
        <seg>evaluationDependsOn(<bpt i="0" x="0">&lt;s0&gt;</bpt>':producer'<ept i="0">&lt;/s0&gt;</ept>)

message = rootProject.producerMessage

task consume &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>exclude <bpt i="1" x="1">&lt;s1&gt;</bpt>'**/*staging*'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T143852Z" creationid="msdx" creationdate="20141113T143852Z">
        <seg>exclude <bpt i="1" x="1">&lt;s1&gt;</bpt>'**/*staging*'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>exclude <bpt i="1" x="1">&lt;s1&gt;</bpt>'**/impl/**'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170304T033025Z" creationid="95" creationdate="20170304T033025Z">
        <seg>exclude <bpt i="1" x="1">&lt;s1&gt;</bpt>'**/impl/**'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>exclude module: <bpt i="4" x="4">&lt;s4&gt;</bpt>'shared'<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T094945Z" creationid="haohang" creationdate="20150801T094945Z">
        <seg>exclude module: <bpt i="4" x="4">&lt;s4&gt;</bpt>'shared'<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>exclude { details -&gt; details.file.name.endsWith(<bpt i="4" x="4">&lt;s4&gt;</bpt>'.html'<ept i="4">&lt;/s4&gt;</ept>) &amp;&amp; details.file.text.contains(<bpt i="5" x="5">&lt;s5&gt;</bpt>'staging'<ept i="5">&lt;/s5&gt;</ept>) }
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T131124Z" creationid="msdx" creationdate="20141113T131124Z">
        <seg>exclude { details -&gt; details.file.name.endsWith(<bpt i="4" x="4">&lt;s4&gt;</bpt>'.html'<ept i="4">&lt;/s4&gt;</ept>) &amp;&amp; details.file.text.contains(<bpt i="5" x="5">&lt;s5&gt;</bpt>'staging'<ept i="5">&lt;/s5&gt;</ept>) }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>exclude(name: <bpt i="3" x="3">&lt;s3&gt;</bpt>'**.java'<ept i="3">&lt;/s3&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141115T162756Z" creationid="msdx" creationdate="20141115T162756Z">
        <seg>exclude(name: <bpt i="3" x="3">&lt;s3&gt;</bpt>'**.java'<ept i="3">&lt;/s3&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>excludeCategories <bpt i="1" x="1">&lt;s1&gt;</bpt>'org.gradle.junit.CategoryB'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T082903Z" creationid="msdx" creationdate="20150428T082903Z">
        <seg>excludeCategories <bpt i="1" x="1">&lt;s1&gt;</bpt>'org.gradle.junit.CategoryB'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>excludeClassLoaders</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T132314Z" creationid="msdx" creationdate="20150506T132314Z">
        <seg>excludeClassLoaders</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>excludeGroups <bpt i="0" x="0">&lt;s0&gt;</bpt>'integrationTests'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083148Z" creationid="msdx" creationdate="20150428T083148Z">
        <seg>excludeGroups <bpt i="0" x="0">&lt;s0&gt;</bpt>'integrationTests'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>excludes</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T132309Z" creationid="msdx" creationdate="20150506T132309Z">
        <seg>excludes</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>executables {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160219T065425Z" creationid="haohang" creationdate="20160219T065425Z">
        <seg>executables {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>executionData run</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T135604Z" creationid="msdx" creationdate="20150506T135604Z">
        <seg>executionData run</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>expand(copyright: <bpt i="5" x="5">&lt;s5&gt;</bpt>'2009'<ept i="5">&lt;/s5&gt;</ept>, version: <bpt i="6" x="6">&lt;s6&gt;</bpt>'2.3.1'<ept i="6">&lt;/s6&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T140844Z" creationid="msdx" creationdate="20141113T140844Z">
        <seg>expand(copyright: <bpt i="5" x="5">&lt;s5&gt;</bpt>'2009'<ept i="5">&lt;/s5&gt;</ept>, version: <bpt i="6" x="6">&lt;s6&gt;</bpt>'2.3.1'<ept i="6">&lt;/s6&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>expand(project.properties)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T140845Z" creationid="msdx" creationdate="20141113T140845Z">
        <seg>expand(project.properties)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>exportedHeaders {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160225T090554Z" creationid="haohang" creationdate="20160225T090554Z">
        <seg>exportedHeaders {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ext.arctic = false</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160530T144427Z" creationid="95" creationdate="20160530T144427Z">
        <seg>ext.arctic = false</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ext.arctic = true
hello &lt;&lt; { println <bpt i="0" x="0">&lt;s0&gt;</bpt>"- I'm the largest animal that has ever lived on this planet."<ept i="0">&lt;/s0&gt;</ept> }

task distanceToIceberg &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160715T075946Z" creationid="haohang" creationdate="20160715T075946Z">
        <seg>ext.arctic = true
hello &lt;&lt; { println <bpt i="0" x="0">&lt;s0&gt;</bpt>"- I'm the largest animal that has ever lived on this planet."<ept i="0">&lt;/s0&gt;</ept> }

task distanceToIceberg &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ext.arctic = true
hello &lt;&lt; { println <bpt i="0" x="0">&lt;s0&gt;</bpt>"- The weight of my species in summer is twice as heavy as all human beings."<ept i="0">&lt;/s0&gt;</ept> }

task distanceToIceberg &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160715T075951Z" creationid="haohang" creationdate="20160715T075951Z">
        <seg>ext.arctic = true
hello &lt;&lt; { println <bpt i="0" x="0">&lt;s0&gt;</bpt>"- The weight of my species in summer is twice as heavy as all human beings."<ept i="0">&lt;/s0&gt;</ept> }

task distanceToIceberg &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ext.arctic = true
hello.doLast {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160530T144425Z" creationid="95" creationdate="20160530T144425Z">
        <seg>ext.arctic = true
hello.doLast {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ext.arctic = true
hello.doLast { println <bpt i="0" x="0">&lt;s0&gt;</bpt>"- I'm the largest animal that has ever lived on this planet."<ept i="0">&lt;/s0&gt;</ept> }</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160530T144412Z" creationid="95" creationdate="20160530T144412Z">
        <seg>ext.arctic = true
hello.doLast { println <bpt i="0" x="0">&lt;s0&gt;</bpt>"- I'm the largest animal that has ever lived on this planet."<ept i="0">&lt;/s0&gt;</ept> }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ext.destDir = <bpt i="1" x="1">&lt;s1&gt;</bpt>new<ept i="1">&lt;/s1&gt;</ept> File(buildDir, <bpt i="2" x="2">&lt;s2&gt;</bpt>'generated'<ept i="2">&lt;/s2&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T060322Z" creationid="msdx" creationdate="20141111T060322Z">
        <seg>ext.destDir = <bpt i="1" x="1">&lt;s1&gt;</bpt>new<ept i="1">&lt;/s1&gt;</ept> File(buildDir, <bpt i="2" x="2">&lt;s2&gt;</bpt>'generated'<ept i="2">&lt;/s2&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ext.sharedManifest = manifest {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T145342Z" creationid="msdx" creationdate="20150428T145342Z">
        <seg>ext.sharedManifest = manifest {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ext.srcFile = file(<bpt i="0" x="0">&lt;s0&gt;</bpt>'mountains.xml'<ept i="0">&lt;/s0&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T060321Z" creationid="msdx" creationdate="20141111T060321Z">
        <seg>ext.srcFile = file(<bpt i="0" x="0">&lt;s0&gt;</bpt>'mountains.xml'<ept i="0">&lt;/s0&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>extendsFrom compile</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T075936Z" creationid="haohang" creationdate="20150722T075936Z">
        <seg>extendsFrom compile</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>extension</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T160418Z" creationid="msdx" creationdate="20141113T160418Z">
        <seg>extension</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>failing</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160504T151335Z" creationid="95" creationdate="20160504T151335Z">
        <seg>failing</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>false</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T132324Z" creationid="msdx" creationdate="20150506T132324Z">
        <seg>false</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>feature_lifecycle.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T124114Z" creationid="msdx" creationdate="20141110T124114Z">
        <seg>feature_lifecycle.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>feature_lifecycle.html#sec:incubating_state</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T065727Z" creationid="msdx" creationdate="20141111T065727Z">
        <seg>feature_lifecycle.html#sec:incubating_state</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>file</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T141839Z" creationid="95" creationdate="20160105T141839Z">
        <seg>file</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>file(<bpt i="0" x="0">&lt;s0&gt;</bpt>"$buildDir/outputs/1.txt"<ept i="0">&lt;/s0&gt;</ept>).delete()
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160817T150447Z" creationid="95" creationdate="20160817T150447Z">
        <seg>file(<bpt i="0" x="0">&lt;s0&gt;</bpt>"$buildDir/outputs/1.txt"<ept i="0">&lt;/s0&gt;</ept>).delete()
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>file(<bpt i="0" x="0">&lt;s0&gt;</bpt>'inputs/1.txt'<ept i="0">&lt;/s0&gt;</ept>).text = <bpt i="1" x="1">&lt;s1&gt;</bpt>"Changed content for existing file 1."<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160817T150204Z" creationid="95" creationdate="20160817T150204Z">
        <seg>file(<bpt i="0" x="0">&lt;s0&gt;</bpt>'inputs/1.txt'<ept i="0">&lt;/s0&gt;</ept>).text = <bpt i="1" x="1">&lt;s1&gt;</bpt>"Changed content for existing file 1."<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>file(<bpt i="0" x="0">&lt;s0&gt;</bpt>'inputs/3.txt'<ept i="0">&lt;/s0&gt;</ept>).delete()
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160817T150258Z" creationid="95" creationdate="20160817T150258Z">
        <seg>file(<bpt i="0" x="0">&lt;s0&gt;</bpt>'inputs/3.txt'<ept i="0">&lt;/s0&gt;</ept>).delete()
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>file(<bpt i="12" x="12">&lt;s12&gt;</bpt>'src'<ept i="12">&lt;/s12&gt;</ept>).listFiles().findAll {it.name.endsWith(<bpt i="13" x="13">&lt;s13&gt;</bpt>'.zip'<ept i="13">&lt;/s13&gt;</ept>)}.collect { zipTree(it) }</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T123340Z" creationid="msdx" creationdate="20141113T123340Z">
        <seg>file(<bpt i="12" x="12">&lt;s12&gt;</bpt>'src'<ept i="12">&lt;/s12&gt;</ept>).listFiles().findAll {it.name.endsWith(<bpt i="13" x="13">&lt;s13&gt;</bpt>'.zip'<ept i="13">&lt;/s13&gt;</ept>)}.collect { zipTree(it) }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>file(<bpt i="2" x="2">&lt;s2&gt;</bpt>'inputs/4.txt'<ept i="2">&lt;/s2&gt;</ept>).text = <bpt i="3" x="3">&lt;s3&gt;</bpt>"Content for new file 4."<ept i="3">&lt;/s3&gt;</ept>
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160817T150205Z" creationid="95" creationdate="20160817T150205Z">
        <seg>file(<bpt i="2" x="2">&lt;s2&gt;</bpt>'inputs/4.txt'<ept i="2">&lt;/s2&gt;</ept>).text = <bpt i="3" x="3">&lt;s3&gt;</bpt>"Content for new file 4."<ept i="3">&lt;/s3&gt;</ept>
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>file.parentFile.mkdirs()</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T132303Z" creationid="95" creationdate="20160820T132303Z">
        <seg>file.parentFile.mkdirs()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>file.write <bpt i="3" x="3">&lt;s3&gt;</bpt>"Hello!"<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T132304Z" creationid="95" creationdate="20160820T132304Z">
        <seg>file.write <bpt i="3" x="3">&lt;s3&gt;</bpt>"Hello!"<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>fileName.replace(<bpt i="3" x="3">&lt;s3&gt;</bpt>'-staging-'<ept i="3">&lt;/s3&gt;</ept>, <bpt i="4" x="4">&lt;s4&gt;</bpt>''<ept i="4">&lt;/s4&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T140713Z" creationid="msdx" creationdate="20141113T140713Z">
        <seg>fileName.replace(<bpt i="3" x="3">&lt;s3&gt;</bpt>'-staging-'<ept i="3">&lt;/s3&gt;</ept>, <bpt i="4" x="4">&lt;s4&gt;</bpt>''<ept i="4">&lt;/s4&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>fileset(dir: <bpt i="0" x="0">&lt;s0&gt;</bpt>'libs'<ept i="0">&lt;/s0&gt;</ept>, includes: <bpt i="1" x="1">&lt;s1&gt;</bpt>'*.jar'<ept i="1">&lt;/s1&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T011227Z" creationid="msdx" creationdate="20141116T011227Z">
        <seg>fileset(dir: <bpt i="0" x="0">&lt;s0&gt;</bpt>'libs'<ept i="0">&lt;/s0&gt;</ept>, includes: <bpt i="1" x="1">&lt;s1&gt;</bpt>'*.jar'<ept i="1">&lt;/s1&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>fileset(dir: <bpt i="1" x="1">&lt;s1&gt;</bpt>'libs'<ept i="1">&lt;/s1&gt;</ept>, includes: <bpt i="2" x="2">&lt;s2&gt;</bpt>'*.jar'<ept i="2">&lt;/s2&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T060207Z" creationid="msdx" creationdate="20141116T060207Z">
        <seg>fileset(dir: <bpt i="1" x="1">&lt;s1&gt;</bpt>'libs'<ept i="1">&lt;/s1&gt;</ept>, includes: <bpt i="2" x="2">&lt;s2&gt;</bpt>'*.jar'<ept i="2">&lt;/s2&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>fileset(dir: <bpt i="1" x="1">&lt;s1&gt;</bpt>'src'<ept i="1">&lt;/s1&gt;</ept>) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141115T162754Z" creationid="msdx" creationdate="20141115T162754Z">
        <seg>fileset(dir: <bpt i="1" x="1">&lt;s1&gt;</bpt>'src'<ept i="1">&lt;/s1&gt;</ept>) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>fileset(dir: <bpt i="4" x="4">&lt;s4&gt;</bpt>'src'<ept i="4">&lt;/s4&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T060208Z" creationid="msdx" creationdate="20141116T060208Z">
        <seg>fileset(dir: <bpt i="4" x="4">&lt;s4&gt;</bpt>'src'<ept i="4">&lt;/s4&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>fileset(dir: <bpt i="7" x="7">&lt;s7&gt;</bpt>'src'<ept i="7">&lt;/s7&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T060635Z" creationid="msdx" creationdate="20141116T060635Z">
        <seg>fileset(dir: <bpt i="7" x="7">&lt;s7&gt;</bpt>'src'<ept i="7">&lt;/s7&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>fileset(dir: <bpt i="8" x="8">&lt;s8&gt;</bpt>"htdocs/manual"<ept i="8">&lt;/s8&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161212T155111Z" creationid="95" creationdate="20161212T155111Z">
        <seg>fileset(dir: <bpt i="8" x="8">&lt;s8&gt;</bpt>"htdocs/manual"<ept i="8">&lt;/s8&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>filter {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083451Z" creationid="msdx" creationdate="20150428T083451Z">
        <seg>filter {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>filter { String line -&gt;</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T140854Z" creationid="msdx" creationdate="20141113T140854Z">
        <seg>filter { String line -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>filter(FixCrLfFilter)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T140847Z" creationid="msdx" creationdate="20141113T140847Z">
        <seg>filter(FixCrLfFilter)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>filter(ReplaceTokens, tokens: [copyright: <bpt i="8" x="8">&lt;s8&gt;</bpt>'2009'<ept i="8">&lt;/s8&gt;</ept>, version: <bpt i="9" x="9">&lt;s9&gt;</bpt>'2.3.1'<ept i="9">&lt;/s9&gt;</ept>])</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T140852Z" creationid="msdx" creationdate="20141113T140852Z">
        <seg>filter(ReplaceTokens, tokens: [copyright: <bpt i="8" x="8">&lt;s8&gt;</bpt>'2009'<ept i="8">&lt;/s8&gt;</ept>, version: <bpt i="9" x="9">&lt;s9&gt;</bpt>'2.3.1'<ept i="9">&lt;/s9&gt;</ept>])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>findbugs</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104850Z" creationid="msdx" creationdate="20150428T104850Z">
        <seg>findbugs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>findbugs<bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>SourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T133713Z" creationid="msdx" creationdate="20150505T133713Z">
        <seg>findbugs<bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>SourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>findbugsMain</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T133646Z" creationid="msdx" creationdate="20150505T133646Z">
        <seg>findbugsMain</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>findbugsTest</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T133701Z" creationid="msdx" creationdate="20150505T133701Z">
        <seg>findbugsTest</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>findbugs_plugin.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104850Z" creationid="msdx" creationdate="20150428T104850Z">
        <seg>findbugs_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>findbugs_plugin.html#N134E4</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065408Z" creationid="95" creationdate="20170416T065408Z">
        <seg>findbugs_plugin.html#N134E4</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>findbugs_plugin.html#N134F8</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065410Z" creationid="95" creationdate="20170416T065410Z">
        <seg>findbugs_plugin.html#N134F8</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>findbugs_plugin.html#N1356D</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065430Z" creationid="95" creationdate="20170416T065430Z">
        <seg>findbugs_plugin.html#N1356D</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>findbugs_plugin.html#N13589</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065432Z" creationid="95" creationdate="20170416T065432Z">
        <seg>findbugs_plugin.html#N13589</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>flatDir {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150910T012111Z" creationid="haohang" creationdate="20150910T012111Z">
        <seg>flatDir {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>flatDir { dirs <bpt i="0" x="0">&lt;s0&gt;</bpt>"lib"<ept i="0">&lt;/s0&gt;</ept> }</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T093817Z" creationid="msdx" creationdate="20150503T093817Z">
        <seg>flatDir { dirs <bpt i="0" x="0">&lt;s0&gt;</bpt>"lib"<ept i="0">&lt;/s0&gt;</ept> }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>flatDir { dirs <bpt i="0" x="0">&lt;s0&gt;</bpt>'lib'<ept i="0">&lt;/s0&gt;</ept> }
}

dependencies {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T080910Z" creationid="msdx" creationdate="20150429T080910Z">
        <seg>flatDir { dirs <bpt i="0" x="0">&lt;s0&gt;</bpt>'lib'<ept i="0">&lt;/s0&gt;</ept> }
}

dependencies {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>flavors {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T081113Z" creationid="haohang" creationdate="20160408T081113Z">
        <seg>flavors {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>forceAnalysis</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T053936Z" creationid="msdx" creationdate="20150513T053936Z">
        <seg>forceAnalysis</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>formatter(type: <bpt i="5" x="5">&lt;s5&gt;</bpt>'text'<ept i="5">&lt;/s5&gt;</ept>, toConsole: <bpt i="6" x="6">&lt;s6&gt;</bpt>'true'<ept i="6">&lt;/s6&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T060634Z" creationid="msdx" creationdate="20141116T060634Z">
        <seg>formatter(type: <bpt i="5" x="5">&lt;s5&gt;</bpt>'text'<ept i="5">&lt;/s5&gt;</ept>, toConsole: <bpt i="6" x="6">&lt;s6&gt;</bpt>'true'<ept i="6">&lt;/s6&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>french</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T081115Z" creationid="haohang" creationdate="20160408T081115Z">
        <seg>french</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>from <bpt i="0" x="0">&lt;c0&gt;</bpt>gradle.properties<ept i="0">&lt;/c0&gt;</ept> located in <bpt i="1" x="1">&lt;c1&gt;</bpt>gradle user home<ept i="1">&lt;/c1&gt;</ept>.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141119T153444Z" creationid="msdx" creationdate="20141119T153421Z">
        <seg>位于<bpt i="1" x="1">&lt;c1&gt;</bpt>gradle 用户主目录<ept i="1">&lt;/c1&gt;</ept>的<bpt i="0" x="0">&lt;c0&gt;</bpt>gradle.properties<ept i="0">&lt;/c0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>from <bpt i="0" x="0">&lt;c0&gt;</bpt>gradle.properties<ept i="0">&lt;/c0&gt;</ept> located in project build dir.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141119T153441Z" creationid="msdx" creationdate="20141119T153324Z">
        <seg>位于项目构建目录的<bpt i="0" x="0">&lt;c0&gt;</bpt>gradle.properties<ept i="0">&lt;/c0&gt;</ept>。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>from <bpt i="0" x="0">&lt;s0&gt;</bpt>'resources'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T092538Z" creationid="msdx" creationdate="20141110T092538Z">
        <seg>from <bpt i="0" x="0">&lt;s0&gt;</bpt>'resources'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>from <bpt i="0" x="0">&lt;s0&gt;</bpt>'src/main/webapp'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T124407Z" creationid="msdx" creationdate="20141113T124407Z">
        <seg>from <bpt i="0" x="0">&lt;s0&gt;</bpt>'src/main/webapp'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>from <bpt i="11" x="11">&lt;s11&gt;</bpt>'src/rootContent'<ept i="11">&lt;/s11&gt;</ept> <bpt i="12" x="12">&lt;s12&gt;</bpt>// adds a file-set to the root of the archive<ept i="12">&lt;/s12&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T093820Z" creationid="msdx" creationdate="20150503T093820Z">
        <seg>from <bpt i="11" x="11">&lt;s11&gt;</bpt>'src/rootContent'<ept i="11">&lt;/s11&gt;</ept> <bpt i="12" x="12">&lt;s12&gt;</bpt>// adds a file-set to the root of the archive<ept i="12">&lt;/s12&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>from <bpt i="1" x="1">&lt;s1&gt;</bpt>"source"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T045151Z" creationid="msdx" creationdate="20141108T045151Z">
        <seg>from <bpt i="1" x="1">&lt;s1&gt;</bpt>"source"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>from <bpt i="1" x="1">&lt;s1&gt;</bpt>"src/stuff"<ept i="1">&lt;/s1&gt;</ept>
}

signing {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160109T073101Z" creationid="95" creationdate="20160109T073101Z">
        <seg>from <bpt i="1" x="1">&lt;s1&gt;</bpt>"src/stuff"<ept i="1">&lt;/s1&gt;</ept>
}

signing {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>from <bpt i="1" x="1">&lt;s1&gt;</bpt>'resources'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T015509Z" creationid="msdx" creationdate="20141111T015509Z">
        <seg>from <bpt i="1" x="1">&lt;s1&gt;</bpt>'resources'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>from <bpt i="1" x="1">&lt;s1&gt;</bpt>'src/dist'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T145755Z" creationid="msdx" creationdate="20141113T145755Z">
        <seg>from <bpt i="1" x="1">&lt;s1&gt;</bpt>'src/dist'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>from <bpt i="1" x="1">&lt;s1&gt;</bpt>'src/main/webapp'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T130949Z" creationid="msdx" creationdate="20141113T130949Z">
        <seg>from <bpt i="1" x="1">&lt;s1&gt;</bpt>'src/main/webapp'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>from <bpt i="2" x="2">&lt;s2&gt;</bpt>'somedir'<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T155546Z" creationid="msdx" creationdate="20141113T155546Z">
        <seg>from <bpt i="2" x="2">&lt;s2&gt;</bpt>'somedir'<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>from <bpt i="2" x="2">&lt;s2&gt;</bpt>'somedir'<ept i="2">&lt;/s2&gt;</ept>
}

println myZip.archiveName
println relativePath(myZip.destinationDir)
println relativePath(myZip.archivePath)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T154735Z" creationid="msdx" creationdate="20141113T154735Z">
        <seg>from <bpt i="2" x="2">&lt;s2&gt;</bpt>'somedir'<ept i="2">&lt;/s2&gt;</ept>
}

println myZip.archiveName
println relativePath(myZip.destinationDir)
println relativePath(myZip.archivePath)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>from <bpt i="2" x="2">&lt;s2&gt;</bpt>'src/main/webapp'<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T140843Z" creationid="msdx" creationdate="20141113T140843Z">
        <seg>from <bpt i="2" x="2">&lt;s2&gt;</bpt>'src/main/webapp'<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>from <bpt i="3" x="3">&lt;s3&gt;</bpt>'src/staging/index.html'<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T130950Z" creationid="msdx" creationdate="20141113T130950Z">
        <seg>from <bpt i="3" x="3">&lt;s3&gt;</bpt>'src/staging/index.html'<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>from <bpt i="5" x="5">&lt;s5&gt;</bpt>'somedir'<ept i="5">&lt;/s5&gt;</ept>
}

println myZip.archiveName</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T155803Z" creationid="msdx" creationdate="20141113T155803Z">
        <seg>from <bpt i="5" x="5">&lt;s5&gt;</bpt>'somedir'<ept i="5">&lt;/s5&gt;</ept>
}

println myZip.archiveName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>from archiveTask.archivePath</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160722T091251Z" creationid="haohang" creationdate="20160722T091251Z">
        <seg>from archiveTask.archivePath</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>from components.java</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170211T140820Z" creationid="95" creationdate="20170211T140820Z">
        <seg>from components.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>from configurations.runtime</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T143854Z" creationid="msdx" creationdate="20141113T143854Z">
        <seg>from configurations.runtime</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>from copyTask</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T130952Z" creationid="msdx" creationdate="20141113T130952Z">
        <seg>from copyTask</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>from copyTaskWithPatterns.outputs</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T130953Z" creationid="msdx" creationdate="20141113T130953Z">
        <seg>from copyTaskWithPatterns.outputs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>from sharedManifest</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T145343Z" creationid="msdx" creationdate="20150428T145343Z">
        <seg>from sharedManifest</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>from sharedManifest, <bpt i="1" x="1">&lt;s1&gt;</bpt>'src/config/basemanifest.txt'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T145616Z" creationid="msdx" creationdate="20150428T145616Z">
        <seg>from sharedManifest, <bpt i="1" x="1">&lt;s1&gt;</bpt>'src/config/basemanifest.txt'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>from sourceSets.intTest.output
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083429Z" creationid="msdx" creationdate="20150428T083429Z">
        <seg>from sourceSets.intTest.output
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>from sourceSets.main.allJava
}

publishing {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170412T154830Z" creationid="95" creationdate="20170412T154830Z">
        <seg>from sourceSets.main.allJava
}

publishing {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>from sourceSets.main.java</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20170216T072606Z" creationid="haohang" creationdate="20170216T072606Z">
        <seg>from sourceSets.main.java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>from sourceSets.main.output</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T084526Z" creationid="haohang" creationdate="20160726T084526Z">
        <seg>from sourceSets.main.output</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>from system properties, e.g. when <bpt i="0" x="0">&lt;c0&gt;</bpt>-Dsome.property<ept i="0">&lt;/c0&gt;</ept> is used in the command line.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141119T153508Z" creationid="msdx" creationdate="20141119T153436Z">
        <seg>系统属性，例如当在命令行中使用 <bpt i="0" x="0">&lt;c0&gt;</bpt>-Dsome.property<ept i="0">&lt;/c0&gt;</ept> 时。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>from zipTree(<bpt i="7" x="7">&lt;s7&gt;</bpt>'src/main/assets.zip'<ept i="7">&lt;/s7&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T130956Z" creationid="msdx" creationdate="20141113T130956Z">
        <seg>from zipTree(<bpt i="7" x="7">&lt;s7&gt;</bpt>'src/main/assets.zip'<ept i="7">&lt;/s7&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>from { <bpt i="1" x="1">&lt;s1&gt;</bpt>'src/dist'<ept i="1">&lt;/s1&gt;</ept> }</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T070505Z" creationid="haohang" creationdate="20150707T070505Z">
        <seg>from { <bpt i="1" x="1">&lt;s1&gt;</bpt>'src/dist'<ept i="1">&lt;/s1&gt;</ept> }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>from { <bpt i="2" x="2">&lt;s2&gt;</bpt>'src/readme'<ept i="2">&lt;/s2&gt;</ept> }</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150701T032509Z" creationid="haohang" creationdate="20150701T032509Z">
        <seg>from { <bpt i="2" x="2">&lt;s2&gt;</bpt>'src/readme'<ept i="2">&lt;/s2&gt;</ept> }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>from(<bpt i="2" x="2">&lt;s2&gt;</bpt>'src/config/javabasemanifest.txt'<ept i="2">&lt;/s2&gt;</ept>, <bpt i="3" x="3">&lt;s3&gt;</bpt>'src/config/libbasemanifest.txt'<ept i="3">&lt;/s3&gt;</ept>) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T145616Z" creationid="msdx" creationdate="20150428T145616Z">
        <seg>from(<bpt i="2" x="2">&lt;s2&gt;</bpt>'src/config/javabasemanifest.txt'<ept i="2">&lt;/s2&gt;</ept>, <bpt i="3" x="3">&lt;s3&gt;</bpt>'src/config/libbasemanifest.txt'<ept i="3">&lt;/s3&gt;</ept>) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>from(<bpt i="2" x="2">&lt;s2&gt;</bpt>'src/dist'<ept i="2">&lt;/s2&gt;</ept>) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T143853Z" creationid="msdx" creationdate="20141113T143853Z">
        <seg>from(<bpt i="2" x="2">&lt;s2&gt;</bpt>'src/dist'<ept i="2">&lt;/s2&gt;</ept>) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>from(file(<bpt i="1" x="1">&lt;s1&gt;</bpt>'srcDir'<ept i="1">&lt;/s1&gt;</ept>))</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T021259Z" creationid="msdx" creationdate="20141110T021259Z">
        <seg>from(file(<bpt i="1" x="1">&lt;s1&gt;</bpt>'srcDir'<ept i="1">&lt;/s1&gt;</ept>))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>from(file(<bpt i="3" x="3">&lt;s3&gt;</bpt>'srcDir'<ept i="3">&lt;/s3&gt;</ept>))</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T022747Z" creationid="msdx" creationdate="20141110T022747Z">
        <seg>from(file(<bpt i="3" x="3">&lt;s3&gt;</bpt>'srcDir'<ept i="3">&lt;/s3&gt;</ept>))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ftp</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T141833Z" creationid="95" creationdate="20160105T141833Z">
        <seg>ftp</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ftp(server: <bpt i="5" x="5">&lt;s5&gt;</bpt>"ftp.apache.org"<ept i="5">&lt;/s5&gt;</ept>, userid: <bpt i="6" x="6">&lt;s6&gt;</bpt>"anonymous"<ept i="6">&lt;/s6&gt;</ept>, password: <bpt i="7" x="7">&lt;s7&gt;</bpt>"me@myorg.com"<ept i="7">&lt;/s7&gt;</ept>) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161212T155110Z" creationid="95" creationdate="20161212T155110Z">
        <seg>ftp(server: <bpt i="5" x="5">&lt;s5&gt;</bpt>"ftp.apache.org"<ept i="5">&lt;/s5&gt;</ept>, userid: <bpt i="6" x="6">&lt;s6&gt;</bpt>"anonymous"<ept i="6">&lt;/s6&gt;</ept>, password: <bpt i="7" x="7">&lt;s7&gt;</bpt>"me@myorg.com"<ept i="7">&lt;/s7&gt;</ept>) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ftpAntTask
}

dependencies {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161212T155100Z" creationid="95" creationdate="20161212T155100Z">
        <seg>ftpAntTask
}

dependencies {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ftpAntTask(<bpt i="0" x="0">&lt;s0&gt;</bpt>"org.apache.ant:ant-commons-net:1.9.3"<ept i="0">&lt;/s0&gt;</ept>) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161212T155101Z" creationid="95" creationdate="20161212T155101Z">
        <seg>ftpAntTask(<bpt i="0" x="0">&lt;s0&gt;</bpt>"org.apache.ant:ant-commons-net:1.9.3"<ept i="0">&lt;/s0&gt;</ept>) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>gcc(Gcc) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T091224Z" creationid="haohang" creationdate="20160408T091224Z">
        <seg>gcc(Gcc) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>generate<bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>SourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>GrammarSource</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T095026Z" creationid="haohang" creationdate="20150625T095026Z">
        <seg>generate<bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>SourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>GrammarSource</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>generateGrammarSource</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T094928Z" creationid="haohang" creationdate="20150625T094928Z">
        <seg>generateGrammarSource</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>generateTestGrammarSource</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T095016Z" creationid="haohang" creationdate="20150625T095016Z">
        <seg>generateTestGrammarSource</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>gradle --gui</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T145801Z" creationid="msdx" creationdate="20141105T145801Z">
        <seg>gradle --gui</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>gradle -DintegTest.single=*IntegrationTest integTest</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083459Z" creationid="msdx" creationdate="20150428T083459Z">
        <seg>gradle -DintegTest.single=*IntegrationTest integTest</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>gradle -DintegTest.single=c/d/ :proj1:integTest</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083500Z" creationid="msdx" creationdate="20150428T083500Z">
        <seg>gradle -DintegTest.single=c/d/ :proj1:integTest</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>gradle -Dtest.single=:proj1:test:Customer build</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083500Z" creationid="msdx" creationdate="20150428T083500Z">
        <seg>gradle -Dtest.single=:proj1:test:Customer build</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>gradle -Dtest.single=ThisUniquelyNamedTest test</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083459Z" creationid="msdx" creationdate="20150428T083459Z">
        <seg>gradle -Dtest.single=ThisUniquelyNamedTest test</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>gradle -Dtest.single=a/b/ test</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083459Z" creationid="msdx" creationdate="20150428T083459Z">
        <seg>gradle -Dtest.single=a/b/ test</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>gradle someTestTask --tests *UiTest someOtherTestTask --tests *WebTest*ui</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083458Z" creationid="msdx" creationdate="20150428T083458Z">
        <seg>gradle someTestTask --tests *UiTest someOtherTestTask --tests *WebTest*ui</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>gradle sonarAnalyze --server.url=http://sonar.mycompany.com --database.password=myPassword --verbose</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T053953Z" creationid="msdx" creationdate="20150513T053953Z">
        <seg>gradle sonarAnalyze --server.url=http://sonar.mycompany.com --database.password=myPassword --verbose</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>gradle sonarRunner -Dsonar.host.url=http://sonar.mycompany.com -Dsonar.jdbc.password=myPassword -Dsonar.verbose=true</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150525T233823Z" creationid="haohang" creationdate="20150525T233823Z">
        <seg>gradle sonarRunner -Dsonar.host.url=http://sonar.mycompany.com -Dsonar.jdbc.password=myPassword -Dsonar.verbose=true</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>gradle test --tests *IntegTest</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083458Z" creationid="msdx" creationdate="20150428T083458Z">
        <seg>gradle test --tests *IntegTest</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>gradle test --tests *IntegTest*ui*</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083458Z" creationid="msdx" creationdate="20150428T083458Z">
        <seg>gradle test --tests *IntegTest*ui*</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>gradle test --tests *SomeSpecificTest</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083457Z" creationid="msdx" creationdate="20150428T083457Z">
        <seg>gradle test --tests *SomeSpecificTest</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>gradle test --tests *SomeTest.someSpecificFeature</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083457Z" creationid="msdx" creationdate="20150428T083457Z">
        <seg>gradle test --tests *SomeTest.someSpecificFeature</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>gradle test --tests all.in.specific.package*</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083457Z" creationid="msdx" creationdate="20150428T083457Z">
        <seg>gradle test --tests all.in.specific.package*</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>gradle test --tests org.gradle.SomeTest.someSpecificFeature</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083456Z" creationid="msdx" creationdate="20150428T083456Z">
        <seg>gradle test --tests org.gradle.SomeTest.someSpecificFeature</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>gradle-wrapper.jar</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161217T160536Z" creationid="95" creationdate="20161217T160536Z">
        <seg>gradle-wrapper.jar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>gradle-wrapper.properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161217T160537Z" creationid="95" creationdate="20161217T160537Z">
        <seg>gradle-wrapper.properties</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>gradle.afterProject {project, projectState -&gt;</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T132215Z" creationid="95" creationdate="20160521T132215Z">
        <seg>gradle.afterProject {project, projectState -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>gradle.allprojects{ project -&gt;</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161215T144234Z" creationid="95" creationdate="20161215T144234Z">
        <seg>gradle.allprojects{ project -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>gradle.properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T151055Z" creationid="msdx" creationdate="20141109T151055Z">
        <seg>gradle.properties</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>gradle/wrapper/</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161217T160536Z" creationid="95" creationdate="20161217T160536Z">
        <seg>gradle/wrapper/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>gradlePropertiesProp=gradlePropertiesValue
systemProjectProp=shouldBeOverWrittenBySystemProp
envProjectProp=shouldBeOverWrittenByEnvProp
systemProp.system=systemValue</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T151057Z" creationid="msdx" creationdate="20141109T151057Z">
        <seg>gradlePropertiesProp=gradlePropertiesValue
systemProjectProp=shouldBeOverWrittenBySystemProp
envProjectProp=shouldBeOverWrittenByEnvProp
systemProp.system=systemValue</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>gradleVersion "1.1"</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170109T124817Z" creationid="95" creationdate="20170109T124817Z">
        <seg>gradleVersion "1.1"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>gradleVersion "1.2"</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170109T124820Z" creationid="95" creationdate="20170109T124820Z">
        <seg>gradleVersion "1.2"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>gradleVersion = <bpt i="0" x="0">&lt;s0&gt;</bpt>'1.4'<ept i="0">&lt;/s0&gt;</ept>
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161217T144029Z" creationid="95" creationdate="20161217T144029Z">
        <seg>gradleVersion = <bpt i="0" x="0">&lt;s0&gt;</bpt>'1.4'<ept i="0">&lt;/s0&gt;</ept>
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>gradle_command_line.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141118T095702Z" creationid="msdx" creationdate="20141118T095702Z">
        <seg>gradle_command_line.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>gradle_daemon.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T063502Z" creationid="msdx" creationdate="20141116T063502Z">
        <seg>gradle_daemon.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>gradle_daemon.html#daemon_usage_and_troubleshooting</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150508T131755Z" creationid="msdx" creationdate="20150508T131755Z">
        <seg>gradle_daemon.html#daemon_usage_and_troubleshooting</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>gradle_daemon.html#enter_the_daemon</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150508T131738Z" creationid="msdx" creationdate="20150508T131738Z">
        <seg>gradle_daemon.html#enter_the_daemon</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>gradle_daemon.html#reusing_daemons</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150508T131745Z" creationid="msdx" creationdate="20150508T131745Z">
        <seg>gradle_daemon.html#reusing_daemons</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>gradle_daemon.html#sec:daemon_properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150508T131801Z" creationid="msdx" creationdate="20150508T131801Z">
        <seg>gradle_daemon.html#sec:daemon_properties</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>gradle_wrapper.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T095643Z" creationid="msdx" creationdate="20150503T095643Z">
        <seg>gradle_wrapper.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>gradle_wrapper.html#sec:configuration</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070942Z" creationid="95" creationdate="20170416T070942Z">
        <seg>gradle_wrapper.html#sec:configuration</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>gradle_wrapper.html#sec:unix_file_permissions</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070943Z" creationid="95" creationdate="20170416T070943Z">
        <seg>gradle_wrapper.html#sec:unix_file_permissions</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>gradlew</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161217T160535Z" creationid="95" creationdate="20161217T160535Z">
        <seg>gradlew</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>gradlew.bat</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161217T160536Z" creationid="95" creationdate="20161217T160536Z">
        <seg>gradlew.bat</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>greeter = <bpt i="1" x="1">&lt;s1&gt;</bpt>'Gradle'<ept i="1">&lt;/s1&gt;</ept>
}

<bpt i="2" x="2">&lt;s2&gt;</bpt>class<ept i="2">&lt;/s2&gt;</ept> GreetingPlugin <bpt i="3" x="3">&lt;s3&gt;</bpt>implements<ept i="3">&lt;/s3&gt;</ept> Plugin&lt;Project&gt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T131357Z" creationid="95" creationdate="20160820T131357Z">
        <seg>greeter = <bpt i="1" x="1">&lt;s1&gt;</bpt>'Gradle'<ept i="1">&lt;/s1&gt;</ept>
}

<bpt i="2" x="2">&lt;s2&gt;</bpt>class<ept i="2">&lt;/s2&gt;</ept> GreetingPlugin <bpt i="3" x="3">&lt;s3&gt;</bpt>implements<ept i="3">&lt;/s3&gt;</ept> Plugin&lt;Project&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>greeting = <bpt i="2" x="2">&lt;s2&gt;</bpt>'greetings from GreetingTask'<ept i="2">&lt;/s2&gt;</ept>
}

<bpt i="3" x="3">&lt;s3&gt;</bpt>class<ept i="3">&lt;/s3&gt;</ept> GreetingTask <bpt i="4" x="4">&lt;s4&gt;</bpt>extends<ept i="4">&lt;/s4&gt;</ept> DefaultTask {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T151532Z" creationid="95" creationdate="20160814T151532Z">
        <seg>greeting = <bpt i="2" x="2">&lt;s2&gt;</bpt>'greetings from GreetingTask'<ept i="2">&lt;/s2&gt;</ept>
}

<bpt i="3" x="3">&lt;s3&gt;</bpt>class<ept i="3">&lt;/s3&gt;</ept> GreetingTask <bpt i="4" x="4">&lt;s4&gt;</bpt>extends<ept i="4">&lt;/s4&gt;</ept> DefaultTask {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>greeting = <bpt i="4" x="4">&lt;s4&gt;</bpt>'howdy!'<ept i="4">&lt;/s4&gt;</ept>
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160815T145930Z" creationid="95" creationdate="20160815T145930Z">
        <seg>greeting = <bpt i="4" x="4">&lt;s4&gt;</bpt>'howdy!'<ept i="4">&lt;/s4&gt;</ept>
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>groovy</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141126T121042Z" creationid="msdx" creationdate="20141126T121042Z">
        <seg>groovy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>groovy {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T075353Z" creationid="msdx" creationdate="20150429T075353Z">
        <seg>groovy {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>groovy-base</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104804Z" creationid="msdx" creationdate="20150428T104804Z">
        <seg>groovy-base</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>groovy.srcDirs</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T093152Z" creationid="msdx" creationdate="20150429T093152Z">
        <seg>groovy.srcDirs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>groovyClasspath</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T094545Z" creationid="msdx" creationdate="20150429T094545Z">
        <seg>groovyClasspath</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>groovy_plugin.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T070002Z" creationid="msdx" creationdate="20141030T070002Z">
        <seg>groovy_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>groovy_plugin.html#N129EF</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131844Z" creationid="msdx" creationdate="20150509T131844Z">
        <seg>groovy_plugin.html#N129EF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>groovy_plugin.html#N129FE</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131846Z" creationid="msdx" creationdate="20150509T131846Z">
        <seg>groovy_plugin.html#N129EF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>groovy_plugin.html#N12A93</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131847Z" creationid="msdx" creationdate="20150509T131847Z">
        <seg>groovy_plugin.html#N129EF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>groovy_plugin.html#N12B36</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131853Z" creationid="msdx" creationdate="20150509T131853Z">
        <seg>groovy_plugin.html#N12B36</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>groovy_plugin.html#N12B7A</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131857Z" creationid="msdx" creationdate="20150509T131857Z">
        <seg>groovy_plugin.html#N12B7A</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>groovy_plugin.html#N12BB3</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131909Z" creationid="msdx" creationdate="20150509T131909Z">
        <seg>groovy_plugin.html#N12BB3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>groovy_plugin.html#N12BB8</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131924Z" creationid="msdx" creationdate="20150509T131924Z">
        <seg>groovy_plugin.html#N12BB8</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>groovy_plugin.html#groovylayout</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T071811Z" creationid="msdx" creationdate="20150429T071811Z">
        <seg>groovy_plugin.html#groovylayout</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>groovy_plugin.html#sec:groovyCompile</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131937Z" creationid="msdx" creationdate="20150509T131937Z">
        <seg>groovy_plugin.html#sec:groovyCompile</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>groovydoc</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T071454Z" creationid="msdx" creationdate="20150429T071454Z">
        <seg>groovydoc</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>group</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T044426Z" creationid="msdx" creationdate="20141108T044426Z">
        <seg>group</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>group = <bpt i="1" x="1">&lt;s1&gt;</bpt>'org.gradle.sample'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160722T091241Z" creationid="haohang" creationdate="20160722T091241Z">
        <seg>group = <bpt i="1" x="1">&lt;s1&gt;</bpt>'org.gradle.sample'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>group = <bpt i="3" x="3">&lt;s3&gt;</bpt>'org.gradle.sample'<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T145159Z" creationid="95" creationdate="20170330T145159Z">
        <seg>group = <bpt i="3" x="3">&lt;s3&gt;</bpt>'org.gradle.sample'<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>groupId</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T144034Z" creationid="95" creationdate="20160105T144034Z">
        <seg>groupId</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>groupId <bpt i="0" x="0">&lt;s0&gt;</bpt>'org.gradle.sample'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T032458Z" creationid="95" creationdate="20170416T032458Z">
        <seg>groupId <bpt i="0" x="0">&lt;s0&gt;</bpt>'org.gradle.sample'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>groupId <bpt i="2" x="2">&lt;s2&gt;</bpt>'org.gradle.sample.impl'<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T062605Z" creationid="95" creationdate="20170416T062605Z">
        <seg>groupId <bpt i="2" x="2">&lt;s2&gt;</bpt>'org.gradle.sample.impl'<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>groupId <bpt i="5" x="5">&lt;s5&gt;</bpt>'org.gradle.sample'<ept i="5">&lt;/s5&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T062610Z" creationid="95" creationdate="20170416T062610Z">
        <seg>groupId <bpt i="5" x="5">&lt;s5&gt;</bpt>'org.gradle.sample'<ept i="5">&lt;/s5&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>growl</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T065613Z" creationid="haohang" creationdate="20150628T065613Z">
        <seg>growl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>hasTests = true</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T125520Z" creationid="95" creationdate="20160521T125520Z">
        <seg>hasTests = true</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>headers.srcDir <bpt i="2" x="2">&lt;s2&gt;</bpt>"lib/cunit/2.1-2/include"<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160504T151338Z" creationid="95" creationdate="20160504T151338Z">
        <seg>headers.srcDir <bpt i="2" x="2">&lt;s2&gt;</bpt>"lib/cunit/2.1-2/include"<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>hello &lt;&lt; {println <bpt i="1" x="1">&lt;s1&gt;</bpt>"- I depend on water"<ept i="1">&lt;/s1&gt;</ept>}
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160527T162340Z" creationid="95" creationdate="20160527T162340Z">
        <seg>hello &lt;&lt; {println <bpt i="1" x="1">&lt;s1&gt;</bpt>"- I depend on water"<ept i="1">&lt;/s1&gt;</ept>}
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>hello &lt;&lt; {println <bpt i="1" x="1">&lt;s1&gt;</bpt>"- I depend on water"<ept i="1">&lt;/s1&gt;</ept>}
}
configure(subprojects.findAll {it.name != <bpt i="2" x="2">&lt;s2&gt;</bpt>'tropicalFish'<ept i="2">&lt;/s2&gt;</ept>}) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160527T163820Z" creationid="95" creationdate="20160527T163820Z">
        <seg>hello &lt;&lt; {println <bpt i="1" x="1">&lt;s1&gt;</bpt>"- I depend on water"<ept i="1">&lt;/s1&gt;</ept>}
}
configure(subprojects.findAll {it.name != <bpt i="2" x="2">&lt;s2&gt;</bpt>'tropicalFish'<ept i="2">&lt;/s2&gt;</ept>}) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>hello &lt;&lt; {println <bpt i="1" x="1">&lt;s1&gt;</bpt>"- I depend on water"<ept i="1">&lt;/s1&gt;</ept>}
}
project(<bpt i="2" x="2">&lt;s2&gt;</bpt>':bluewhale'<ept i="2">&lt;/s2&gt;</ept>).hello &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160527T162900Z" creationid="95" creationdate="20160527T162900Z">
        <seg>hello &lt;&lt; {println <bpt i="1" x="1">&lt;s1&gt;</bpt>"- I depend on water"<ept i="1">&lt;/s1&gt;</ept>}
}
project(<bpt i="2" x="2">&lt;s2&gt;</bpt>':bluewhale'<ept i="2">&lt;/s2&gt;</ept>).hello &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>hello &lt;&lt; {println <bpt i="3" x="3">&lt;s3&gt;</bpt>'- I love to spend time in the arctic waters.'<ept i="3">&lt;/s3&gt;</ept>}
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160527T163821Z" creationid="95" creationdate="20160527T163821Z">
        <seg>hello &lt;&lt; {println <bpt i="3" x="3">&lt;s3&gt;</bpt>'- I love to spend time in the arctic waters.'<ept i="3">&lt;/s3&gt;</ept>}
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>hello {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160225T090546Z" creationid="haohang" creationdate="20160225T090546Z">
        <seg>hello {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>hello {}
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160219T065322Z" creationid="haohang" creationdate="20160219T065322Z">
        <seg>hello {}
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>hello.doLast {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160527T163309Z" creationid="95" creationdate="20160527T163309Z">
        <seg>hello.doLast {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>hello.doLast { println <bpt i="0" x="0">&lt;s0&gt;</bpt>"- I'm the largest animal that has ever lived on this planet."<ept i="0">&lt;/s0&gt;</ept> }</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160527T163307Z" creationid="95" creationdate="20160527T163307Z">
        <seg>hello.doLast { println <bpt i="0" x="0">&lt;s0&gt;</bpt>"- I'm the largest animal that has ever lived on this planet."<ept i="0">&lt;/s0&gt;</ept> }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>hello/</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160722T091212Z" creationid="haohang" creationdate="20160722T091212Z">
        <seg>hello/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>helloRes {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160325T020938Z" creationid="haohang" creationdate="20160325T020938Z">
        <seg>helloRes {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>html.destination <bpt i="0" x="0">&lt;s0&gt;</bpt>"${buildDir}/jacocoHtml"<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T132002Z" creationid="msdx" creationdate="20150506T132002Z">
        <seg>html.destination <bpt i="0" x="0">&lt;s0&gt;</bpt>"${buildDir}/jacocoHtml"<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>htmlDependencyReport</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T061235Z" creationid="haohang" creationdate="20150628T061235Z">
        <seg>htmlDependencyReport</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T141826Z" creationid="95" creationdate="20160105T141826Z">
        <seg>http</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http://ant.apache.org/ivy/</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170211T010002Z" creationid="95" creationdate="20170211T010002Z">
        <seg>http://ant.apache.org/ivy/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http://ant.apache.org/ivy/history/latest-milestone/concept.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151201T070440Z" creationid="haohang" creationdate="20151201T070440Z">
        <seg>http://ant.apache.org/ivy/history/latest-milestone/concept.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http://ant.apache.org/ivy/history/latest-milestone/settings/resolvers.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T134739Z" creationid="95" creationdate="20151006T134739Z">
        <seg>http://ant.apache.org/ivy/history/latest-milestone/settings/resolvers.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http://bintray.com</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T095937Z" creationid="haohang" creationdate="20150807T095937Z">
        <seg>http://bintray.com</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http://books.sonatype.com/mvnref-book/reference/pom-relationships-sect-project-relationships.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151201T070430Z" creationid="haohang" creationdate="20151201T070430Z">
        <seg>http://books.sonatype.com/mvnref-book/reference/pom-relationships-sect-project-relationships.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http://checkstyle.sourceforge.net/index.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104804Z" creationid="msdx" creationdate="20150428T104804Z">
        <seg>http://checkstyle.sourceforge.net/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http://clang.llvm.org</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160128T153345Z" creationid="95" creationdate="20160128T153345Z">
        <seg>http://clang.llvm.org</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http://clarkware.com/software/JDepend.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104853Z" creationid="msdx" creationdate="20150428T104853Z">
        <seg>http://clarkware.com/software/JDepend.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http://code.google.com/p/spock/</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T094609Z" creationid="haohang" creationdate="20150707T094609Z">
        <seg>http://code.google.com/p/spock/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http://codenarc.sourceforge.net/index.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104805Z" creationid="msdx" creationdate="20150428T104805Z">
        <seg>http://codenarc.sourceforge.net/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http://cunit.sourceforge.net</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104923Z" creationid="msdx" creationdate="20150428T104923Z">
        <seg>http://cunit.sourceforge.net</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http://docs.codehaus.org/display/SONAR/Analysis+Parameters</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T101430Z" creationid="msdx" creationdate="20150512T101430Z">
        <seg>http://docs.codehaus.org/display/SONAR/Analysis+Parameters</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http://docs.codehaus.org/display/SONAR/Analyzing+with+Sonar+Runner</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150507T065259Z" creationid="msdx" creationdate="20150507T065259Z">
        <seg>http://docs.codehaus.org/display/SONAR/Analyzing+with+Sonar+Runner</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http://download.oracle.com/javase/1.5.0/docs/tooldocs/windows/javadoc.html#referenceguide</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083435Z" creationid="msdx" creationdate="20150428T083435Z">
        <seg>http://download.oracle.com/javase/1.5.0/docs/tooldocs/windows/javadoc.html#referenceguide</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http://download.oracle.com/javase/6/docs/technotes/guides/net/properties.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141121T141807Z" creationid="msdx" creationdate="20141121T141807Z">
        <seg>http://download.oracle.com/javase/6/docs/technotes/guides/net/properties.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http://eclipse.org</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104807Z" creationid="msdx" creationdate="20150428T104807Z">
        <seg>http://eclipse.org</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http://en.wikipedia.org/wiki/Continuous_integration</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161217T142920Z" creationid="95" creationdate="20161217T142920Z">
        <seg>http://en.wikipedia.org/wiki/Continuous_integration</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http://en.wikipedia.org/wiki/Directed_acyclic_graph</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160518T031249Z" creationid="haohang" creationdate="20160518T031249Z">
        <seg>http://en.wikipedia.org/wiki/Directed_acyclic_graph</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http://en.wikipedia.org/wiki/The_Magical_Number_Seven,_Plus_or_Minus_Two</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160727T055237Z" creationid="haohang" creationdate="20160727T055237Z">
        <seg>http://en.wikipedia.org/wiki/The_Magical_Number_Seven,_Plus_or_Minus_Two</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http://findbugs.sourceforge.net</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104851Z" creationid="msdx" creationdate="20150428T104851Z">
        <seg>http://findbugs.sourceforge.net</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http://gant.codehaus.org</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T094737Z" creationid="msdx" creationdate="20150429T094737Z">
        <seg>http://gant.codehaus.org</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http://gcc.gnu.org/</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160128T153343Z" creationid="95" creationdate="20160128T153343Z">
        <seg>http://gcc.gnu.org/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http://gradle.org/docs/current/dsl/org.gradle.api.tasks.scala.ScalaCompile.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T154310Z" creationid="msdx" creationdate="20150501T154310Z">
        <seg>http://gradle.org/docs/current/dsl/org.gradle.api.tasks.scala.ScalaCompile.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http://groovy.codehaus.org/Using+Ant+from+Groovy</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T011230Z" creationid="msdx" creationdate="20141116T011230Z">
        <seg>http://groovy.codehaus.org/Using+Ant+from+Groovy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http://groovy.codehaus.org/groovy-jdk/</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150710T013024Z" creationid="haohang" creationdate="20150710T013024Z">
        <seg>http://groovy.codehaus.org/groovy-jdk/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http://growl.info/</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T062805Z" creationid="haohang" creationdate="20150628T062805Z">
        <seg>http://growl.info/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http://jcenter.bintray.com</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T100435Z" creationid="haohang" creationdate="20150807T100435Z">
        <seg>http://jcenter.bintray.com</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http://junit.org</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T094156Z" creationid="haohang" creationdate="20150707T094156Z">
        <seg>http://junit.org</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http://lucene.apache.org/solr</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160727T054323Z" creationid="haohang" creationdate="20160727T054323Z">
        <seg>http://lucene.apache.org/solr</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http://manpages.ubuntu.com/manpages/gutsy/man1/notify-send.1.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T062801Z" creationid="haohang" creationdate="20150628T062801Z">
        <seg>http://manpages.ubuntu.com/manpages/gutsy/man1/notify-send.1.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http://maven.apache.org/</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170412T150743Z" creationid="95" creationdate="20170412T150743Z">
        <seg>http://maven.apache.org/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http://maven.apache.org/ant-tasks/apidocs/org/apache/maven/artifact/ant/Authentication.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T141907Z" creationid="95" creationdate="20160105T141907Z">
        <seg>http://maven.apache.org/ant-tasks/apidocs/org/apache/maven/artifact/ant/Authentication.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http://maven.apache.org/ant-tasks/apidocs/org/apache/maven/artifact/ant/Proxy.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T141914Z" creationid="95" creationdate="20160105T141914Z">
        <seg>http://maven.apache.org/ant-tasks/apidocs/org/apache/maven/artifact/ant/Proxy.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http://maven.apache.org/ant-tasks/apidocs/org/apache/maven/artifact/ant/RemoteRepository.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T141903Z" creationid="95" creationdate="20160105T141903Z">
        <seg>http://maven.apache.org/ant-tasks/apidocs/org/apache/maven/artifact/ant/RemoteRepository.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http://maven.apache.org/ant-tasks/apidocs/org/apache/maven/artifact/ant/RepositoryPolicy.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T141910Z" creationid="95" creationdate="20160105T141910Z">
        <seg>http://maven.apache.org/ant-tasks/apidocs/org/apache/maven/artifact/ant/RepositoryPolicy.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http://maven.apache.org/pom.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T142736Z" creationid="95" creationdate="20160106T142736Z">
        <seg>http://maven.apache.org/pom.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http://pmd.sourceforge.net</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104856Z" creationid="msdx" creationdate="20150428T104856Z">
        <seg>http://pmd.sourceforge.net</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http://repo1.maven.org/maven2</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T095741Z" creationid="haohang" creationdate="20150807T095741Z">
        <seg>http://repo1.maven.org/maven2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http://svn.apache.org/viewvc/ant/core/trunk/src/main/org/apache/tools/ant/util/ProxySetup.java?view=markup&amp;pathrev=556977</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141121T141806Z" creationid="msdx" creationdate="20141121T141806Z">
        <seg>http://svn.apache.org/viewvc/ant/core/trunk/src/main/org/apache/tools/ant/util/ProxySetup.java?view=markup&amp;pathrev=556977</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http://testng.org/doc/documentation-main.html#parameters</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T143801Z" creationid="msdx" creationdate="20150428T143801Z">
        <seg>http://testng.org/doc/documentation-main.html#parameters</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http://testng.org/doc/documentation-main.html#test-groups</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T151625Z" creationid="msdx" creationdate="20150428T151625Z">
        <seg>http://testng.org/doc/documentation-main.html#test-groups</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http://twitter.com</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T062759Z" creationid="haohang" creationdate="20150628T062759Z">
        <seg>http://twitter.com</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http://wiki.gradle.org/display/GRADLE/Plugins</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104932Z" creationid="msdx" creationdate="20150428T104932Z">
        <seg>http://wiki.gradle.org/display/GRADLE/Plugins</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http://www.antlr.org/</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T063338Z" creationid="msdx" creationdate="20141116T063338Z">
        <seg>http://www.antlr.org/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http://www.aqute.biz/Code/Bnd</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150526T004140Z" creationid="haohang" creationdate="20150526T004140Z">
        <seg>http://www.aqute.biz/Code/Bnd</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http://www.eclemma.org/jacoco/</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104925Z" creationid="msdx" creationdate="20150428T104925Z">
        <seg>http://www.eclemma.org/jacoco/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http://www.gnupg.org/</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160108T151155Z" creationid="95" creationdate="20160108T151155Z">
        <seg>http://www.gnupg.org/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http://www.gnupg.org/documentation/howtos.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160108T151156Z" creationid="95" creationdate="20160108T151156Z">
        <seg>http://www.gnupg.org/documentation/howtos.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http://www.jetbrains.com/idea/</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T070616Z" creationid="haohang" creationdate="20150625T070616Z">
        <seg>http://www.jetbrains.com/idea/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http://www.jetbrains.com/idea/index.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104852Z" creationid="msdx" creationdate="20150428T104852Z">
        <seg>http://www.jetbrains.com/idea/index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http://www.microsoft.com/visualstudio/en-us</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160128T153451Z" creationid="95" creationdate="20160128T153451Z">
        <seg>http://www.microsoft.com/visualstudio/en-us</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http://www.mingw.org/</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160128T153547Z" creationid="95" creationdate="20160128T153547Z">
        <seg>http://www.mingw.org/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http://www.pgpi.org/</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160108T150722Z" creationid="95" creationdate="20160108T150722Z">
        <seg>http://www.pgpi.org/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http://www.scala-lang.org/docu/files/tools/fsc.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150430T155005Z" creationid="msdx" creationdate="20150430T155005Z">
        <seg>http://www.scala-lang.org/docu/files/tools/fsc.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http://www.scalatest.org</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T094355Z" creationid="haohang" creationdate="20150707T094355Z">
        <seg>http://www.scalatest.org</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http://www.sonarsource.com/products/plugins/languages/</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T092546Z" creationid="msdx" creationdate="20150512T092546Z">
        <seg>http://www.sonarsource.com/products/plugins/languages/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>http://www.sonarsource.org</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104919Z" creationid="msdx" creationdate="20150428T104919Z">
        <seg>http://www.sonarsource.org</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>httpPort</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T151122Z" creationid="msdx" creationdate="20150504T151122Z">
        <seg>httpPort</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>https://docs.sonatype.org/display/Repository/Central+Sync+Requirements</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160108T150723Z" creationid="95" creationdate="20160108T150723Z">
        <seg>https://docs.sonatype.org/display/Repository/Central+Sync+Requirements</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>https://github.com/harrah/xsbt</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T154014Z" creationid="msdx" creationdate="20150501T154014Z">
        <seg>https://github.com/harrah/xsbt</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>https://github.com/jbaruch/maven2gradle</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T092520Z" creationid="haohang" creationdate="20150707T092520Z">
        <seg>https://github.com/jbaruch/maven2gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>https://github.com/junit-team/junit/wiki/Categories</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T151602Z" creationid="msdx" creationdate="20150428T151602Z">
        <seg>https://github.com/junit-team/junit/wiki/Categories</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>https://github.com/typesafehub/zinc</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T154013Z" creationid="msdx" creationdate="20150501T154013Z">
        <seg>https://github.com/typesafehub/zinc</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>https://sites.google.com/site/snarlapp/home</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T062803Z" creationid="haohang" creationdate="20150628T062803Z">
        <seg>https://sites.google.com/site/snarlapp/home</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ide_support.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T124043Z" creationid="msdx" creationdate="20141111T124043Z">
        <seg>ide_support.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>idea</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104851Z" creationid="msdx" creationdate="20150428T104851Z">
        <seg>idea</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>idea.module</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T072709Z" creationid="haohang" creationdate="20150625T072709Z">
        <seg>idea.module</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>idea.module.iml {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T073921Z" creationid="haohang" creationdate="20150625T073921Z">
        <seg>idea.module.iml {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>idea.project</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T072700Z" creationid="haohang" creationdate="20150625T072700Z">
        <seg>idea.project</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>idea.project.ipr {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T074116Z" creationid="haohang" creationdate="20150625T074116Z">
        <seg>idea.project.ipr {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>idea.workspace</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T072717Z" creationid="haohang" creationdate="20150625T072717Z">
        <seg>idea.workspace</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ideaModule</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T072553Z" creationid="haohang" creationdate="20150625T072553Z">
        <seg>ideaModule</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ideaProject</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T072514Z" creationid="haohang" creationdate="20150625T072514Z">
        <seg>ideaProject</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ideaWorkspace</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T072602Z" creationid="haohang" creationdate="20150625T072602Z">
        <seg>ideaWorkspace</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>idea_plugin.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T063312Z" creationid="msdx" creationdate="20141116T063312Z">
        <seg>idea_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>idea_plugin.html#N140BA</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065833Z" creationid="95" creationdate="20170416T065833Z">
        <seg>idea_plugin.html#N140BA</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>idea_plugin.html#N140D1</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065835Z" creationid="95" creationdate="20170416T065835Z">
        <seg>idea_plugin.html#N140D1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>idea_plugin.html#N141B5</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065837Z" creationid="95" creationdate="20170416T065837Z">
        <seg>idea_plugin.html#N141B5</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>idea_plugin.html#N1420C</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065840Z" creationid="95" creationdate="20170416T065840Z">
        <seg>idea_plugin.html#N1420C</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>idea_plugin.html#N142FB</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065842Z" creationid="95" creationdate="20170416T065842Z">
        <seg>idea_plugin.html#N142FB</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>if (taskGraph.allTasks.any { it instanceof Sign }) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160108T152851Z" creationid="95" creationdate="20160108T152851Z">
        <seg>if (taskGraph.allTasks.any { it instanceof Sign }) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ignoreFailures = true
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170109T130024Z" creationid="95" creationdate="20170109T130024Z">
        <seg>ignoreFailures = true
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>img/groovyPluginTasks.png</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T071745Z" creationid="msdx" creationdate="20150429T071745Z">
        <seg>img/groovyPluginTasks.png</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>img/guiSetup.png</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141211T024659Z" creationid="msdx" creationdate="20141211T024659Z">
        <seg>img/guiSetup.png</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>img/guiTaskTree.png</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T150124Z" creationid="msdx" creationdate="20141105T150124Z">
        <seg>img/guiTaskTree.png</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>img/jacocoHtmlReport.png</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T132003Z" creationid="msdx" creationdate="20150506T132003Z">
        <seg>img/jacocoHtmlReport.png</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>img/javaPluginConfigurations.png</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083233Z" creationid="msdx" creationdate="20150428T083233Z">
        <seg>img/javaPluginConfigurations.png</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>img/javaPluginTasks.png</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083228Z" creationid="msdx" creationdate="20150428T083228Z">
        <seg>img/javaPluginTasks.png</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>img/jettyPluginTasks.png</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T150534Z" creationid="msdx" creationdate="20150504T150534Z">
        <seg>img/jettyPluginTasks.png</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>img/scalaPluginTasks.png</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T152446Z" creationid="msdx" creationdate="20150429T152446Z">
        <seg>img/scalaPluginTasks.png</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>img/warPluginTasks.png</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T090104Z" creationid="msdx" creationdate="20150503T090104Z">
        <seg>img/warPluginTasks.png</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>impl(IvyPublication) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170304T033026Z" creationid="95" creationdate="20170304T033026Z">
        <seg>impl(IvyPublication) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>impl(MavenPublication) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T062604Z" creationid="95" creationdate="20170416T062604Z">
        <seg>impl(MavenPublication) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>implementation-class=org.gradle.GreetingPlugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160828T133455Z" creationid="95" creationdate="20160828T133455Z">
        <seg>implementation-class=org.gradle.GreetingPlugin</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>import org.gradle.plugins.signing.Sign

gradle.taskGraph.whenReady { taskGraph -&gt;</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160108T152850Z" creationid="95" creationdate="20160108T152850Z">
        <seg>import org.gradle.plugins.signing.Sign

gradle.taskGraph.whenReady { taskGraph -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>inceptionYear <bpt i="0" x="0">&lt;s0&gt;</bpt>'2008'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160104T152813Z" creationid="95" creationdate="20160104T152813Z">
        <seg>inceptionYear <bpt i="0" x="0">&lt;s0&gt;</bpt>'2008'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>include <bpt i="0" x="0">&lt;s0&gt;</bpt>'api'<ept i="0">&lt;/s0&gt;</ept>, <bpt i="1" x="1">&lt;s1&gt;</bpt>'shared'<ept i="1">&lt;/s1&gt;</ept>, <bpt i="2" x="2">&lt;s2&gt;</bpt>'services:personService'<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T083730Z" creationid="haohang" creationdate="20160726T083730Z">
        <seg>include <bpt i="0" x="0">&lt;s0&gt;</bpt>'api'<ept i="0">&lt;/s0&gt;</ept>, <bpt i="1" x="1">&lt;s1&gt;</bpt>'shared'<ept i="1">&lt;/s1&gt;</ept>, <bpt i="2" x="2">&lt;s2&gt;</bpt>'services:personService'<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>include <bpt i="0" x="0">&lt;s0&gt;</bpt>'bluewhale'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160522T125536Z" creationid="95" creationdate="20160522T125536Z">
        <seg>include <bpt i="0" x="0">&lt;s0&gt;</bpt>'bluewhale'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>include <bpt i="0" x="0">&lt;s0&gt;</bpt>'bluewhale'<ept i="0">&lt;/s0&gt;</ept>, <bpt i="1" x="1">&lt;s1&gt;</bpt>'krill'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160526T155400Z" creationid="95" creationdate="20160526T155400Z">
        <seg>include <bpt i="0" x="0">&lt;s0&gt;</bpt>'bluewhale'<ept i="0">&lt;/s0&gt;</ept>, <bpt i="1" x="1">&lt;s1&gt;</bpt>'krill'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>include <bpt i="0" x="0">&lt;s0&gt;</bpt>'bluewhale'<ept i="0">&lt;/s0&gt;</ept>, <bpt i="1" x="1">&lt;s1&gt;</bpt>'krill'<ept i="1">&lt;/s1&gt;</ept>, <bpt i="2" x="2">&lt;s2&gt;</bpt>'tropicalFish'<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160527T163819Z" creationid="95" creationdate="20160527T163819Z">
        <seg>include <bpt i="0" x="0">&lt;s0&gt;</bpt>'bluewhale'<ept i="0">&lt;/s0&gt;</ept>, <bpt i="1" x="1">&lt;s1&gt;</bpt>'krill'<ept i="1">&lt;/s1&gt;</ept>, <bpt i="2" x="2">&lt;s2&gt;</bpt>'tropicalFish'<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>include <bpt i="0" x="0">&lt;s0&gt;</bpt>'consumer'<ept i="0">&lt;/s0&gt;</ept>, <bpt i="1" x="1">&lt;s1&gt;</bpt>'aProducer'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T070213Z" creationid="haohang" creationdate="20160718T070213Z">
        <seg>include <bpt i="0" x="0">&lt;s0&gt;</bpt>'consumer'<ept i="0">&lt;/s0&gt;</ept>, <bpt i="1" x="1">&lt;s1&gt;</bpt>'aProducer'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>include <bpt i="0" x="0">&lt;s0&gt;</bpt>'consumer'<ept i="0">&lt;/s0&gt;</ept>, <bpt i="1" x="1">&lt;s1&gt;</bpt>'producer'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T062356Z" creationid="haohang" creationdate="20160718T062356Z">
        <seg>include <bpt i="0" x="0">&lt;s0&gt;</bpt>'consumer'<ept i="0">&lt;/s0&gt;</ept>, <bpt i="1" x="1">&lt;s1&gt;</bpt>'producer'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>include <bpt i="0" x="0">&lt;s0&gt;</bpt>'date'<ept i="0">&lt;/s0&gt;</ept>, <bpt i="1" x="1">&lt;s1&gt;</bpt>'hello'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160722T091240Z" creationid="haohang" creationdate="20160722T091240Z">
        <seg>include <bpt i="0" x="0">&lt;s0&gt;</bpt>'date'<ept i="0">&lt;/s0&gt;</ept>, <bpt i="1" x="1">&lt;s1&gt;</bpt>'hello'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>include <bpt i="0" x="0">&lt;s0&gt;</bpt>'project1'<ept i="0">&lt;/s0&gt;</ept>, <bpt i="1" x="1">&lt;s1&gt;</bpt>'project2:child'<ept i="1">&lt;/s1&gt;</ept>, <bpt i="2" x="2">&lt;s2&gt;</bpt>'project3:child1'<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T041332Z" creationid="haohang" creationdate="20160519T041332Z">
        <seg>include <bpt i="0" x="0">&lt;s0&gt;</bpt>'project1'<ept i="0">&lt;/s0&gt;</ept>, <bpt i="1" x="1">&lt;s1&gt;</bpt>'project2:child'<ept i="1">&lt;/s1&gt;</ept>, <bpt i="2" x="2">&lt;s2&gt;</bpt>'project3:child1'<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>include <bpt i="10" x="10">&lt;s10&gt;</bpt>'**/*.java'<ept i="10">&lt;/s10&gt;</ept>
}

<bpt i="11" x="11">&lt;s11&gt;</bpt>// Create a tree using a map<ept i="11">&lt;/s11&gt;</ept>
tree = fileTree(dir: <bpt i="12" x="12">&lt;s12&gt;</bpt>'src'<ept i="12">&lt;/s12&gt;</ept>, include: <bpt i="13" x="13">&lt;s13&gt;</bpt>'**/*.java'<ept i="13">&lt;/s13&gt;</ept>)
tree = fileTree(dir: <bpt i="14" x="14">&lt;s14&gt;</bpt>'src'<ept i="14">&lt;/s14&gt;</ept>, includes: [<bpt i="15" x="15">&lt;s15&gt;</bpt>'**/*.java'<ept i="15">&lt;/s15&gt;</ept>, <bpt i="16" x="16">&lt;s16&gt;</bpt>'**/*.xml'<ept i="16">&lt;/s16&gt;</ept>])
tree = fileTree(dir: <bpt i="17" x="17">&lt;s17&gt;</bpt>'src'<ept i="17">&lt;/s17&gt;</ept>, include: <bpt i="18" x="18">&lt;s18&gt;</bpt>'**/*.java'<ept i="18">&lt;/s18&gt;</ept>, exclude: <bpt i="19" x="19">&lt;s19&gt;</bpt>'**/*test*/**'<ept i="19">&lt;/s19&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T120223Z" creationid="msdx" creationdate="20141113T120223Z">
        <seg>include <bpt i="10" x="10">&lt;s10&gt;</bpt>'**/*.java'<ept i="10">&lt;/s10&gt;</ept>
}

<bpt i="11" x="11">&lt;s11&gt;</bpt>// Create a tree using a map<ept i="11">&lt;/s11&gt;</ept>
tree = fileTree(dir: <bpt i="12" x="12">&lt;s12&gt;</bpt>'src'<ept i="12">&lt;/s12&gt;</ept>, include: <bpt i="13" x="13">&lt;s13&gt;</bpt>'**/*.java'<ept i="13">&lt;/s13&gt;</ept>)
tree = fileTree(dir: <bpt i="14" x="14">&lt;s14&gt;</bpt>'src'<ept i="14">&lt;/s14&gt;</ept>, includes: [<bpt i="15" x="15">&lt;s15&gt;</bpt>'**/*.java'<ept i="15">&lt;/s15&gt;</ept>, <bpt i="16" x="16">&lt;s16&gt;</bpt>'**/*.xml'<ept i="16">&lt;/s16&gt;</ept>])
tree = fileTree(dir: <bpt i="17" x="17">&lt;s17&gt;</bpt>'src'<ept i="17">&lt;/s17&gt;</ept>, include: <bpt i="18" x="18">&lt;s18&gt;</bpt>'**/*.java'<ept i="18">&lt;/s18&gt;</ept>, exclude: <bpt i="19" x="19">&lt;s19&gt;</bpt>'**/*test*/**'<ept i="19">&lt;/s19&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>include <bpt i="1" x="1">&lt;s1&gt;</bpt>"**/*.c"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160225T090551Z" creationid="haohang" creationdate="20160225T090551Z">
        <seg>include <bpt i="1" x="1">&lt;s1&gt;</bpt>"**/*.c"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>include <bpt i="1" x="1">&lt;s1&gt;</bpt>"**/*.cpp"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160225T085545Z" creationid="haohang" creationdate="20160225T085545Z">
        <seg>include <bpt i="1" x="1">&lt;s1&gt;</bpt>"**/*.cpp"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>include <bpt i="2" x="2">&lt;s2&gt;</bpt>'**/*.html'<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T131123Z" creationid="msdx" creationdate="20141113T131123Z">
        <seg>include <bpt i="2" x="2">&lt;s2&gt;</bpt>'**/*.html'<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>include <bpt i="2" x="2">&lt;s2&gt;</bpt>'org/gradle/api/**'<ept i="2">&lt;/s2&gt;</ept>
}

<bpt i="3" x="3">&lt;s3&gt;</bpt>// Add trees together<ept i="3">&lt;/s3&gt;</ept>
FileTree sum = tree + fileTree(dir: <bpt i="4" x="4">&lt;s4&gt;</bpt>'src/test'<ept i="4">&lt;/s4&gt;</ept>)

<bpt i="5" x="5">&lt;s5&gt;</bpt>// Visit the elements of the tree<ept i="5">&lt;/s5&gt;</ept>
tree.visit {element -&gt;</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T120400Z" creationid="msdx" creationdate="20141113T120400Z">
        <seg>include <bpt i="2" x="2">&lt;s2&gt;</bpt>'org/gradle/api/**'<ept i="2">&lt;/s2&gt;</ept>
}

<bpt i="3" x="3">&lt;s3&gt;</bpt>// Add trees together<ept i="3">&lt;/s3&gt;</ept>
FileTree sum = tree + fileTree(dir: <bpt i="4" x="4">&lt;s4&gt;</bpt>'src/test'<ept i="4">&lt;/s4&gt;</ept>)

<bpt i="5" x="5">&lt;s5&gt;</bpt>// Visit the elements of the tree<ept i="5">&lt;/s5&gt;</ept>
tree.visit {element -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>include <bpt i="3" x="3">&lt;s3&gt;</bpt>'**/*.html'<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T143853Z" creationid="msdx" creationdate="20141113T143853Z">
        <seg>include <bpt i="3" x="3">&lt;s3&gt;</bpt>'**/*.html'<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>include <bpt i="3" x="3">&lt;s3&gt;</bpt>'**/*.jsp'<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T131124Z" creationid="msdx" creationdate="20141113T131124Z">
        <seg>include <bpt i="3" x="3">&lt;s3&gt;</bpt>'**/*.jsp'<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>include(<bpt i="2" x="2">&lt;s2&gt;</bpt>'**/*.txt'<ept i="2">&lt;/s2&gt;</ept>, <bpt i="3" x="3">&lt;s3&gt;</bpt>'**/*.xml'<ept i="3">&lt;/s3&gt;</ept>, <bpt i="4" x="4">&lt;s4&gt;</bpt>'**/*.properties'<ept i="4">&lt;/s4&gt;</ept>)
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T092541Z" creationid="msdx" creationdate="20141110T092541Z">
        <seg>include(<bpt i="2" x="2">&lt;s2&gt;</bpt>'**/*.txt'<ept i="2">&lt;/s2&gt;</ept>, <bpt i="3" x="3">&lt;s3&gt;</bpt>'**/*.xml'<ept i="3">&lt;/s3&gt;</ept>, <bpt i="4" x="4">&lt;s4&gt;</bpt>'**/*.properties'<ept i="4">&lt;/s4&gt;</ept>)
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>include(<bpt i="3" x="3">&lt;s3&gt;</bpt>'**/*.txt'<ept i="3">&lt;/s3&gt;</ept>, <bpt i="4" x="4">&lt;s4&gt;</bpt>'**/*.xml'<ept i="4">&lt;/s4&gt;</ept>, <bpt i="5" x="5">&lt;s5&gt;</bpt>'**/*.properties'<ept i="5">&lt;/s5&gt;</ept>)
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T015513Z" creationid="msdx" creationdate="20141111T015513Z">
        <seg>include(<bpt i="3" x="3">&lt;s3&gt;</bpt>'**/*.txt'<ept i="3">&lt;/s3&gt;</ept>, <bpt i="4" x="4">&lt;s4&gt;</bpt>'**/*.xml'<ept i="4">&lt;/s4&gt;</ept>, <bpt i="5" x="5">&lt;s5&gt;</bpt>'**/*.properties'<ept i="5">&lt;/s5&gt;</ept>)
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>include(<bpt i="6" x="6">&lt;s6&gt;</bpt>'org/gradle/sample/api/**'<ept i="6">&lt;/s6&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T084527Z" creationid="haohang" creationdate="20160726T084527Z">
        <seg>include(<bpt i="6" x="6">&lt;s6&gt;</bpt>'org/gradle/sample/api/**'<ept i="6">&lt;/s6&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>include(name: <bpt i="2" x="2">&lt;s2&gt;</bpt>'**.xml'<ept i="2">&lt;/s2&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141115T162755Z" creationid="msdx" creationdate="20141115T162755Z">
        <seg>include(name: <bpt i="2" x="2">&lt;s2&gt;</bpt>'**.xml'<ept i="2">&lt;/s2&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>includeCategories <bpt i="0" x="0">&lt;s0&gt;</bpt>'org.gradle.junit.CategoryA'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T082902Z" creationid="msdx" creationdate="20150428T082902Z">
        <seg>includeCategories <bpt i="0" x="0">&lt;s0&gt;</bpt>'org.gradle.junit.CategoryA'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>includeFlat <bpt i="0" x="0">&lt;s0&gt;</bpt>'project3'<ept i="0">&lt;/s0&gt;</ept>, <bpt i="1" x="1">&lt;s1&gt;</bpt>'project4'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T041858Z" creationid="haohang" creationdate="20160519T041858Z">
        <seg>includeFlat <bpt i="0" x="0">&lt;s0&gt;</bpt>'project3'<ept i="0">&lt;/s0&gt;</ept>, <bpt i="1" x="1">&lt;s1&gt;</bpt>'project4'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>includeGroups <bpt i="1" x="1">&lt;s1&gt;</bpt>'unitTests'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083149Z" creationid="msdx" creationdate="20150428T083149Z">
        <seg>includeGroups <bpt i="1" x="1">&lt;s1&gt;</bpt>'unitTests'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>includeTestsMatching <bpt i="1" x="1">&lt;s1&gt;</bpt>"*UiCheck"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083454Z" creationid="msdx" creationdate="20150428T083454Z">
        <seg>includeTestsMatching <bpt i="1" x="1">&lt;s1&gt;</bpt>"*UiCheck"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>includeTestsMatching <bpt i="3" x="3">&lt;s3&gt;</bpt>"org.gradle.internal.*"<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083455Z" creationid="msdx" creationdate="20150428T083455Z">
        <seg>includeTestsMatching <bpt i="3" x="3">&lt;s3&gt;</bpt>"org.gradle.internal.*"<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>includeTestsMatching <bpt i="5" x="5">&lt;s5&gt;</bpt>"*IntegTest"<ept i="5">&lt;/s5&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083455Z" creationid="msdx" creationdate="20150428T083455Z">
        <seg>includeTestsMatching <bpt i="5" x="5">&lt;s5&gt;</bpt>"*IntegTest"<ept i="5">&lt;/s5&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>includes</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T132308Z" creationid="msdx" creationdate="20150506T132308Z">
        <seg>includes</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>incrementalTask/</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160817T145705Z" creationid="95" creationdate="20160817T145705Z">
        <seg>incrementalTask/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>index.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T135831Z" creationid="msdx" creationdate="20150506T135831Z">
        <seg>index.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>init</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T071552Z" creationid="haohang" creationdate="20150707T071552Z">
        <seg>init</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>init.gradle</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T154814Z" creationid="msdx" creationdate="20141116T154814Z">
        <seg>init.gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>init_scripts.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T020821Z" creationid="95" creationdate="20161211T020821Z">
        <seg>init_scripts.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>init_scripts.html#N1693C</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070917Z" creationid="95" creationdate="20170416T070917Z">
        <seg>init_scripts.html#N1693C</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>init_scripts.html#N16972</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070923Z" creationid="95" creationdate="20170416T070923Z">
        <seg>init_scripts.html#N16972</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>init_scripts.html#N169DC</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070931Z" creationid="95" creationdate="20170416T070931Z">
        <seg>init_scripts.html#N169DC</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>init_scripts.html#sec:basic_usage</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070911Z" creationid="95" creationdate="20170416T070911Z">
        <seg>init_scripts.html#sec:basic_usage</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>init_scripts.html#sec:custom_classpath</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161215T144424Z" creationid="95" creationdate="20161215T144424Z">
        <seg>init_scripts.html#sec:custom_classpath</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>initializeInOrder = true</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T142901Z" creationid="msdx" creationdate="20150504T142901Z">
        <seg>initializeInOrder = true</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>initscript {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161215T143759Z" creationid="95" creationdate="20161215T143759Z">
        <seg>initscript {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>inputDir = file(<bpt i="0" x="0">&lt;s0&gt;</bpt>'inputs'<ept i="0">&lt;/s0&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160817T145702Z" creationid="95" creationdate="20160817T145702Z">
        <seg>inputDir = file(<bpt i="0" x="0">&lt;s0&gt;</bpt>'inputs'<ept i="0">&lt;/s0&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>inputProperty = project.properties[<bpt i="2" x="2">&lt;s2&gt;</bpt>'taskInputProperty'<ept i="2">&lt;/s2&gt;</ept>] ?: <bpt i="3" x="3">&lt;s3&gt;</bpt>"original"<ept i="3">&lt;/s3&gt;</ept>
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160817T145704Z" creationid="95" creationdate="20160817T145704Z">
        <seg>inputProperty = project.properties[<bpt i="2" x="2">&lt;s2&gt;</bpt>'taskInputProperty'<ept i="2">&lt;/s2&gt;</ept>] ?: <bpt i="3" x="3">&lt;s3&gt;</bpt>"original"<ept i="3">&lt;/s3&gt;</ept>
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>inputs.file copyTask <bpt i="0" x="0">&lt;s0&gt;</bpt>// up-to-date check for inputs, plus add copyTask as dependency<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T134159Z" creationid="msdx" creationdate="20141113T134159Z">
        <seg>inputs.file copyTask <bpt i="0" x="0">&lt;s0&gt;</bpt>// up-to-date check for inputs, plus add copyTask as dependency<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>inputs.file srcFile</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T061312Z" creationid="msdx" creationdate="20141111T061312Z">
        <seg>inputs.file srcFile</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>inputs.outOfDate { change -&gt;</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160816T145025Z" creationid="95" creationdate="20160816T145025Z">
        <seg>inputs.outOfDate { change -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>inputs.removed { change -&gt;</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160816T145032Z" creationid="95" creationdate="20160816T145032Z">
        <seg>inputs.removed { change -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>inputs/</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160817T145709Z" creationid="95" creationdate="20160817T145709Z">
        <seg>inputs/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>install</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151228T151927Z" creationid="95" creationdate="20151228T151927Z">
        <seg>install</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>install {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T143450Z" creationid="95" creationdate="20160106T143450Z">
        <seg>install {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>install<bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>${distribution.name.capitalize()}<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>Dist</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150701T031239Z" creationid="haohang" creationdate="20150701T031239Z">
        <seg>install<bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>${distribution.name.capitalize()}<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>Dist</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>installApp</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150702T105052Z" creationid="haohang" creationdate="20150702T105052Z">
        <seg>installApp</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>installCustomDist</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150701T031312Z" creationid="haohang" creationdate="20150701T031312Z">
        <seg>installCustomDist</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>installDist</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150701T030902Z" creationid="haohang" creationdate="20150701T030902Z">
        <seg>installDist</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>installation.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162026Z" creationid="msdx" creationdate="20141109T162026Z">
        <seg>installation.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>installation.html#N10116</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162030Z" creationid="msdx" creationdate="20141109T162030Z">
        <seg>installation.html#N10116</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>installation.html#N10123</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162124Z" creationid="msdx" creationdate="20141109T162124Z">
        <seg>installation.html#N10123</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>installation.html#N1012C</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162127Z" creationid="msdx" creationdate="20141109T162127Z">
        <seg>installation.html#N1012C</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>installation.html#N10148</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162136Z" creationid="msdx" creationdate="20141109T162136Z">
        <seg>installation.html#N10148</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>installation.html#N10155</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162143Z" creationid="msdx" creationdate="20141109T162143Z">
        <seg>installation.html#N10155</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>installation.html#N10160</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162148Z" creationid="msdx" creationdate="20141109T162148Z">
        <seg>installation.html#N10160</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>instruction <bpt i="11" x="11">&lt;s11&gt;</bpt>'Bundle-Vendor'<ept i="11">&lt;/s11&gt;</ept>, <bpt i="12" x="12">&lt;s12&gt;</bpt>'MyCompany'<ept i="12">&lt;/s12&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150526T064446Z" creationid="haohang" creationdate="20150526T064446Z">
        <seg>~instruction <bpt i="5" x="5">&lt;s5&gt;</bpt>'Bundle-Vendor'<ept i="5">&lt;/s5&gt;</ept>, <bpt i="6" x="6">&lt;s6&gt;</bpt>'MyCompany'<ept i="6">&lt;/s6&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>instruction <bpt i="2" x="2">&lt;s2&gt;</bpt>'Private-Package'<ept i="2">&lt;/s2&gt;</ept>,</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150526T064440Z" creationid="haohang" creationdate="20150526T064440Z">
        <seg>instruction <bpt i="2" x="2">&lt;s2&gt;</bpt>'Private-Package'<ept i="2">&lt;/s2&gt;</ept>,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>instruction <bpt i="5" x="5">&lt;s5&gt;</bpt>'Bundle-Vendor'<ept i="5">&lt;/s5&gt;</ept>, <bpt i="6" x="6">&lt;s6&gt;</bpt>'MyCompany'<ept i="6">&lt;/s6&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150526T064442Z" creationid="haohang" creationdate="20150526T064442Z">
        <seg>instruction <bpt i="5" x="5">&lt;s5&gt;</bpt>'Bundle-Vendor'<ept i="5">&lt;/s5&gt;</ept>, <bpt i="6" x="6">&lt;s6&gt;</bpt>'MyCompany'<ept i="6">&lt;/s6&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>instruction <bpt i="7" x="7">&lt;s7&gt;</bpt>'Bundle-Description'<ept i="7">&lt;/s7&gt;</ept>, <bpt i="8" x="8">&lt;s8&gt;</bpt>'Platform2: Metrics 2 Measures Framework'<ept i="8">&lt;/s8&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150526T064443Z" creationid="haohang" creationdate="20150526T064443Z">
        <seg>instruction <bpt i="7" x="7">&lt;s7&gt;</bpt>'Bundle-Description'<ept i="7">&lt;/s7&gt;</ept>, <bpt i="8" x="8">&lt;s8&gt;</bpt>'Platform2: Metrics 2 Measures Framework'<ept i="8">&lt;/s8&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>instruction <bpt i="9" x="9">&lt;s9&gt;</bpt>'Bundle-DocURL'<ept i="9">&lt;/s9&gt;</ept>, <bpt i="10" x="10">&lt;s10&gt;</bpt>'http://www.mycompany.com'<ept i="10">&lt;/s10&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150526T064444Z" creationid="haohang" creationdate="20150526T064444Z">
        <seg>instruction <bpt i="9" x="9">&lt;s9&gt;</bpt>'Bundle-DocURL'<ept i="9">&lt;/s9&gt;</ept>, <bpt i="10" x="10">&lt;s10&gt;</bpt>'http://www.mycompany.com'<ept i="10">&lt;/s10&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>intTest
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083422Z" creationid="msdx" creationdate="20150428T083422Z">
        <seg>intTest
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>intTest
}

dependencies {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083424Z" creationid="msdx" creationdate="20150428T083424Z">
        <seg>intTest
}

dependencies {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>intTestCompile <bpt i="0" x="0">&lt;s0&gt;</bpt>'junit:junit:4.11'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083424Z" creationid="msdx" creationdate="20150428T083424Z">
        <seg>intTestCompile <bpt i="0" x="0">&lt;s0&gt;</bpt>'junit:junit:4.11'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>intTestRuntime <bpt i="1" x="1">&lt;s1&gt;</bpt>'org.ow2.asm:asm-all:4.0'<ept i="1">&lt;/s1&gt;</ept>
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083425Z" creationid="msdx" creationdate="20150428T083425Z">
        <seg>intTestRuntime <bpt i="1" x="1">&lt;s1&gt;</bpt>'org.ow2.asm:asm-all:4.0'<ept i="1">&lt;/s1&gt;</ept>
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>into <bpt i="0" x="0">&lt;s0&gt;</bpt>"$buildDir/libs"<ept i="0">&lt;/s0&gt;</ept>
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T145437Z" creationid="msdx" creationdate="20141113T145437Z">
        <seg>into <bpt i="0" x="0">&lt;s0&gt;</bpt>"$buildDir/libs"<ept i="0">&lt;/s0&gt;</ept>
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>into <bpt i="0" x="0">&lt;s0&gt;</bpt>'build/explodedWar'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T143852Z" creationid="msdx" creationdate="20141113T143852Z">
        <seg>into <bpt i="0" x="0">&lt;s0&gt;</bpt>'build/explodedWar'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>into <bpt i="1" x="1">&lt;s1&gt;</bpt>'build/explodedWar'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T131123Z" creationid="msdx" creationdate="20141113T131123Z">
        <seg>into <bpt i="1" x="1">&lt;s1&gt;</bpt>'build/explodedWar'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>into <bpt i="1" x="1">&lt;s1&gt;</bpt>'build/explodedWar'<ept i="1">&lt;/s1&gt;</ept>
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T124408Z" creationid="msdx" creationdate="20141113T124408Z">
        <seg>into <bpt i="1" x="1">&lt;s1&gt;</bpt>'build/explodedWar'<ept i="1">&lt;/s1&gt;</ept>
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>into <bpt i="1" x="1">&lt;s1&gt;</bpt>'target'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T092539Z" creationid="msdx" creationdate="20141110T092539Z">
        <seg>into <bpt i="1" x="1">&lt;s1&gt;</bpt>'target'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>into <bpt i="2" x="2">&lt;s2&gt;</bpt>'target'<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T015510Z" creationid="msdx" creationdate="20141111T015510Z">
        <seg>into <bpt i="2" x="2">&lt;s2&gt;</bpt>'target'<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>into <bpt i="3" x="3">&lt;s3&gt;</bpt>'build/explodedWar'<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T140843Z" creationid="msdx" creationdate="20141113T140843Z">
        <seg>into <bpt i="3" x="3">&lt;s3&gt;</bpt>'build/explodedWar'<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>into <bpt i="4" x="4">&lt;s4&gt;</bpt>"docs"<ept i="4">&lt;/s4&gt;</ept>
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150703T100432Z" creationid="haohang" creationdate="20150703T100432Z">
        <seg>into <bpt i="4" x="4">&lt;s4&gt;</bpt>"docs"<ept i="4">&lt;/s4&gt;</ept>
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>into <bpt i="4" x="4">&lt;s4&gt;</bpt>'some-dir'<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T134203Z" creationid="msdx" creationdate="20141113T134203Z">
        <seg>into <bpt i="4" x="4">&lt;s4&gt;</bpt>'some-dir'<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>into dest
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T045152Z" creationid="msdx" creationdate="20141108T045152Z">
        <seg>into dest
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>into explodedDist</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160722T091252Z" creationid="haohang" creationdate="20160722T091252Z">
        <seg>into explodedDist</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>into { getDestDir() }
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T130957Z" creationid="msdx" creationdate="20141113T130957Z">
        <seg>into { getDestDir() }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>into(<bpt i="2" x="2">&lt;s2&gt;</bpt>'libs'<ept i="2">&lt;/s2&gt;</ept>) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T145756Z" creationid="msdx" creationdate="20141113T145756Z">
        <seg>into(<bpt i="2" x="2">&lt;s2&gt;</bpt>'libs'<ept i="2">&lt;/s2&gt;</ept>) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>into(<bpt i="4" x="4">&lt;s4&gt;</bpt>'libs'<ept i="4">&lt;/s4&gt;</ept>) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T143854Z" creationid="msdx" creationdate="20141113T143854Z">
        <seg>into(<bpt i="4" x="4">&lt;s4&gt;</bpt>'libs'<ept i="4">&lt;/s4&gt;</ept>) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>into(buildDir)
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T021302Z" creationid="msdx" creationdate="20141110T021302Z">
        <seg>into(buildDir)
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>introduction.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141101T034300Z" creationid="msdx" creationdate="20141101T034300Z">
        <seg>introduction.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>introduction.html#N10048</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T161842Z" creationid="msdx" creationdate="20141109T161842Z">
        <seg>introduction.html#N10048</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>it.buildable</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T084720Z" creationid="haohang" creationdate="20160408T084720Z">
        <seg>it.buildable</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>itanium {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160405T034031Z" creationid="haohang" creationdate="20160405T034031Z">
        <seg>itanium {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ivy <bpt i="4" x="4">&lt;s4&gt;</bpt>"ivy-files/[organisation]/[module]/[revision]/ivy.xml"<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T111348Z" creationid="95" creationdate="20151006T111348Z">
        <seg>ivy <bpt i="4" x="4">&lt;s4&gt;</bpt>"ivy-files/[organisation]/[module]/[revision]/ivy.xml"<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ivy {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T110441Z" creationid="95" creationdate="20151006T110441Z">
        <seg>ivy {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ivy(IvyPublication) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20170216T072608Z" creationid="haohang" creationdate="20170216T072608Z">
        <seg>ivy(IvyPublication) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ivy-publish</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104801Z" creationid="msdx" creationdate="20150428T104801Z">
        <seg>ivy-publish</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ivyCustom(IvyPublication) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170304T031119Z" creationid="95" creationdate="20170304T031119Z">
        <seg>ivyCustom(IvyPublication) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ivyJava(IvyPublication) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170211T140819Z" creationid="95" creationdate="20170211T140819Z">
        <seg>ivyJava(IvyPublication) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ivyPattern <bpt i="0" x="0">&lt;s0&gt;</bpt>"$projectDir/repo/[organisation]/[module]-ivy-[revision].xml"<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T133502Z" creationid="95" creationdate="20151006T133502Z">
        <seg>ivyPattern <bpt i="0" x="0">&lt;s0&gt;</bpt>"$projectDir/repo/[organisation]/[module]-ivy-[revision].xml"<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>jacoco</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104924Z" creationid="msdx" creationdate="20150428T104924Z">
        <seg>jacoco</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>jacoco {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T131554Z" creationid="msdx" creationdate="20150506T131554Z">
        <seg>jacoco</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>jacoco/</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T135830Z" creationid="msdx" creationdate="20150506T135830Z">
        <seg>jacoco</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>jacocoAgent</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T140034Z" creationid="msdx" creationdate="20150506T140034Z">
        <seg>jacocoAgent</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>jacocoAnt</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T140006Z" creationid="msdx" creationdate="20150506T140006Z">
        <seg>jacocoAnt</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>jacocoTestReport</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T140302Z" creationid="msdx" creationdate="20150506T135918Z">
        <seg>jacocoTestReport</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>jacocoTestReport {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T132000Z" creationid="msdx" creationdate="20150506T132000Z">
        <seg>jacocoTestReport {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>jacoco_plugin.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104924Z" creationid="msdx" creationdate="20150428T104924Z">
        <seg>jacoco_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>jacoco_plugin.html#N13713</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065506Z" creationid="95" creationdate="20170416T065506Z">
        <seg>jacoco_plugin.html#N13713</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>jacoco_plugin.html#N1372F</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065509Z" creationid="95" creationdate="20170416T065509Z">
        <seg>jacoco_plugin.html#N1372F</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>jacoco_plugin.html#N1375D</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065516Z" creationid="95" creationdate="20170416T065516Z">
        <seg>jacoco_plugin.html#N1375D</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>jacoco_plugin.html#N13780</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065526Z" creationid="95" creationdate="20170416T065526Z">
        <seg>jacoco_plugin.html#N13780</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>jacoco_plugin.html#N13853</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065552Z" creationid="95" creationdate="20170416T065552Z">
        <seg>jacoco_plugin.html#N13853</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>jacoco_plugin.html#N13880</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065555Z" creationid="95" creationdate="20170416T065555Z">
        <seg>jacoco_plugin.html#N13880</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>jar</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083214Z" creationid="msdx" creationdate="20150428T083214Z">
        <seg>jar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>jar {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T145224Z" creationid="msdx" creationdate="20150428T145224Z">
        <seg>jar {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>jar.manifest.writeTo(<bpt i="0" x="0">&lt;s0&gt;</bpt>"$buildDir/mymanifest.mf"<ept i="0">&lt;/s0&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T151508Z" creationid="msdx" creationdate="20150428T151508Z">
        <seg>jar.manifest.writeTo(<bpt i="0" x="0">&lt;s0&gt;</bpt>"$buildDir/mymanifest.mf"<ept i="0">&lt;/s0&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>java</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141126T120902Z" creationid="msdx" creationdate="20141126T120902Z">
        <seg>java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>java {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083230Z" creationid="msdx" creationdate="20150428T083230Z">
        <seg>java {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>java-base</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141126T120902Z" creationid="msdx" creationdate="20141126T120902Z">
        <seg>java-base</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>java-base, java, jacoco</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104919Z" creationid="msdx" creationdate="20150428T104919Z">
        <seg>java-base，java，jacoco</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>java-library-distribution</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104801Z" creationid="msdx" creationdate="20150428T104801Z">
        <seg>java-library-distribution</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>java.srcDirs</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083417Z" creationid="msdx" creationdate="20150428T083417Z">
        <seg>java.srcDirs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>java/</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T083502Z" creationid="haohang" creationdate="20160726T083502Z">
        <seg>java/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>javaLibraryDistribution_plugin.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141121T142753Z" creationid="msdx" creationdate="20141121T142753Z">
        <seg>javaLibraryDistribution_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>javaLibraryDistribution_plugin.html#N14905</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070015Z" creationid="95" creationdate="20170416T070015Z">
        <seg>javaLibraryDistribution_plugin.html#N14905</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>javaLibraryDistribution_plugin.html#N1492B</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070016Z" creationid="95" creationdate="20170416T070016Z">
        <seg>javaLibraryDistribution_plugin.html#N1492B</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>javaLibraryDistribution_plugin.html#java_library_distribution_resources</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070018Z" creationid="95" creationdate="20170416T070018Z">
        <seg>javaLibraryDistribution_plugin.html#java_library_distribution_resources</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>java_plugin.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141124T100518Z" creationid="msdx" creationdate="20141124T100518Z">
        <seg>java_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>java_plugin.html#N11E80</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131609Z" creationid="msdx" creationdate="20150509T131609Z">
        <seg>java_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>java_plugin.html#N11E8F</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131614Z" creationid="msdx" creationdate="20150509T131614Z">
        <seg>java_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>java_plugin.html#N11EA7</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131625Z" creationid="msdx" creationdate="20150509T131625Z">
        <seg>java_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>java_plugin.html#N12119</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131636Z" creationid="msdx" creationdate="20150509T131636Z">
        <seg>java_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>java_plugin.html#N1223E</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131645Z" creationid="msdx" creationdate="20150509T131645Z">
        <seg>java_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>java_plugin.html#N12970</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131816Z" creationid="msdx" creationdate="20150509T131816Z">
        <seg>java_plugin.html#N12970</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>java_plugin.html#java_source_set_configurations</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083423Z" creationid="msdx" creationdate="20150428T083423Z">
        <seg>java_plugin.html#java_source_set_configurations</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>java_plugin.html#java_source_set_tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083425Z" creationid="msdx" creationdate="20150428T083425Z">
        <seg>java_plugin.html#java_source_set_tasks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>java_plugin.html#javalayout</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T051620Z" creationid="95" creationdate="20161211T051620Z">
        <seg>java_plugin.html#javalayout</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>java_plugin.html#sec:clean</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131703Z" creationid="msdx" creationdate="20150509T131703Z">
        <seg>java_plugin.html#sec:clean</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>java_plugin.html#sec:compile</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T094144Z" creationid="msdx" creationdate="20150429T094144Z">
        <seg>java_plugin.html#sec:compile</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>java_plugin.html#sec:java_plugin_and_dependency_management</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131640Z" creationid="msdx" creationdate="20150509T131640Z">
        <seg>java_plugin.html#sec:java_plugin_and_dependency_management</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>java_plugin.html#sec:java_test</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131806Z" creationid="msdx" creationdate="20150509T131806Z">
        <seg>java_plugin.html#sec:java_test</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>java_plugin.html#sec:javadoc</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131701Z" creationid="msdx" creationdate="20150509T131701Z">
        <seg>java_plugin.html#sec:javadoc</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>java_plugin.html#sec:resources</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131753Z" creationid="msdx" creationdate="20150509T131753Z">
        <seg>java_plugin.html#sec:resources</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>java_plugin.html#sec:source_sets</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T161531Z" creationid="msdx" creationdate="20141112T161531Z">
        <seg>java_plugin.html#sec:source_sets</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>java_plugin.html#sec:upload</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131828Z" creationid="msdx" creationdate="20150509T131828Z">
        <seg>java_plugin.html#sec:upload</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>java_plugin.html#sub:manifest</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150526T003804Z" creationid="haohang" creationdate="20150526T003804Z">
        <seg>java_plugin.html#sub:manifest</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>java_plugin.html#tab:configurations</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151221T141635Z" creationid="95" creationdate="20151221T141635Z">
        <seg>java_plugin.html#tab:configurations</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>javadoc</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083216Z" creationid="msdx" creationdate="20150428T083216Z">
        <seg>javadoc</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>jcenter()
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T100536Z" creationid="haohang" creationdate="20150807T100536Z">
        <seg>jcenter()
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>jdepend</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104853Z" creationid="msdx" creationdate="20150428T104853Z">
        <seg>jdepend</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>jdepend<bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>SourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T134258Z" creationid="msdx" creationdate="20150505T134258Z">
        <seg>jdepend<bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>SourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>jdependMain</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T134229Z" creationid="msdx" creationdate="20150505T134229Z">
        <seg>jdependMain</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>jdependTest</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T134239Z" creationid="msdx" creationdate="20150505T134239Z">
        <seg>jdependTest</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>jdepend_plugin.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141124T100504Z" creationid="msdx" creationdate="20141124T100504Z">
        <seg>jdepend_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>jdepend_plugin.html#N1359E</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065439Z" creationid="95" creationdate="20170416T065439Z">
        <seg>jdepend_plugin.html#N1359E</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>jdepend_plugin.html#N135B2</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065441Z" creationid="95" creationdate="20170416T065441Z">
        <seg>jdepend_plugin.html#N135B2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>jdepend_plugin.html#N13627</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065442Z" creationid="95" creationdate="20170416T065442Z">
        <seg>jdepend_plugin.html#N13627</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>jdepend_plugin.html#N13643</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065444Z" creationid="95" creationdate="20170416T065444Z">
        <seg>jdepend_plugin.html#N13643</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>jetty</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104757Z" creationid="msdx" creationdate="20150428T104757Z">
        <seg>jetty</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>jettyRun</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T150215Z" creationid="msdx" creationdate="20150504T150215Z">
        <seg>jettyRun</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>jettyRunWar</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T150420Z" creationid="msdx" creationdate="20150504T150420Z">
        <seg>jettyRunWar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>jettyStop</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T150445Z" creationid="msdx" creationdate="20150504T150445Z">
        <seg>jettyStop</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>jetty_plugin.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104756Z" creationid="msdx" creationdate="20150428T104756Z">
        <seg>jetty_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>jetty_plugin.html#N13247</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150514T151824Z" creationid="msdx" creationdate="20150514T151824Z">
        <seg>jetty_plugin.html#N13247</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>jetty_plugin.html#N13256</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150514T151828Z" creationid="msdx" creationdate="20150514T151828Z">
        <seg>jetty_plugin.html#N13256</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>jetty_plugin.html#N132B5</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150514T151830Z" creationid="msdx" creationdate="20150514T151830Z">
        <seg>jetty_plugin.html#N132B5</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>jetty_plugin.html#N132BA</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150514T151833Z" creationid="msdx" creationdate="20150514T151833Z">
        <seg>jetty_plugin.html#N132BA</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>jetty_plugin.html#N132BF</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150514T151836Z" creationid="msdx" creationdate="20150514T151836Z">
        <seg>jetty_plugin.html#N132BF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>jmx</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T132323Z" creationid="msdx" creationdate="20150506T132323Z">
        <seg>jmx</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>jvmArgs = [<bpt i="1" x="1">&lt;s1&gt;</bpt>'-XX:MaxPermSize=512m'<ept i="1">&lt;/s1&gt;</ept>]</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150430T160055Z" creationid="msdx" creationdate="20150430T160055Z">
        <seg>jvmArgs = [<bpt i="1" x="1">&lt;s1&gt;</bpt>'-XX:MaxPermSize=512m'<ept i="1">&lt;/s1&gt;</ept>]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>krill/</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160526T155321Z" creationid="95" creationdate="20160526T155321Z">
        <seg>krill/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>krill/build.gradle</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160527T163308Z" creationid="95" creationdate="20160527T163308Z">
        <seg>krill/build.gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>language = <bpt i="0" x="0">&lt;s0&gt;</bpt>"grvy"<ept i="0">&lt;/s0&gt;</ept> <bpt i="1" x="1">&lt;s1&gt;</bpt>// set language to Groovy<ept i="1">&lt;/s1&gt;</ept>
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T092637Z" creationid="msdx" creationdate="20150512T092637Z">
        <seg>language = <bpt i="0" x="0">&lt;s0&gt;</bpt>"grvy"<ept i="0">&lt;/s0&gt;</ept> <bpt i="1" x="1">&lt;s1&gt;</bpt>// set language to Groovy<ept i="1">&lt;/s1&gt;</ept>
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>language = <bpt i="1" x="1">&lt;s1&gt;</bpt>"groovy"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T092010Z" creationid="msdx" creationdate="20150512T092010Z">
        <seg>language = <bpt i="1" x="1">&lt;s1&gt;</bpt>"groovy"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>language = System.getProperty(<bpt i="0" x="0">&lt;s0&gt;</bpt>"sonar.language"<ept i="0">&lt;/s0&gt;</ept>, <bpt i="1" x="1">&lt;s1&gt;</bpt>"java"<ept i="1">&lt;/s1&gt;</ept>)
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T054036Z" creationid="msdx" creationdate="20150513T054036Z">
        <seg>language = System.getProperty(<bpt i="0" x="0">&lt;s0&gt;</bpt>"sonar.language"<ept i="0">&lt;/s0&gt;</ept>, <bpt i="1" x="1">&lt;s1&gt;</bpt>"java"<ept i="1">&lt;/s1&gt;</ept>)
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>layout <bpt i="1" x="1">&lt;s1&gt;</bpt>"maven"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T110443Z" creationid="95" creationdate="20151006T110443Z">
        <seg>layout <bpt i="1" x="1">&lt;s1&gt;</bpt>"maven"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>layout <bpt i="1" x="1">&lt;s1&gt;</bpt>"pattern"<ept i="1">&lt;/s1&gt;</ept>, {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T110640Z" creationid="95" creationdate="20151006T110640Z">
        <seg>layout <bpt i="1" x="1">&lt;s1&gt;</bpt>"pattern"<ept i="1">&lt;/s1&gt;</ept>, {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>lib</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T141507Z" creationid="msdx" creationdate="20150504T141507Z">
        <seg>into(<bpt i="2" x="2">&lt;s2&gt;</bpt>'libs'<ept i="2">&lt;/s2&gt;</ept>) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>lib libraries.hello</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160325T032909Z" creationid="haohang" creationdate="20160325T032909Z">
        <seg>lib libraries.hello</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>lib libraries.hello.<bpt i="1" x="1">&lt;s1&gt;</bpt>static<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160325T033132Z" creationid="haohang" creationdate="20160325T033132Z">
        <seg>lib libraries.hello.<bpt i="1" x="1">&lt;s1&gt;</bpt>static<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>lib library: <bpt i="0" x="0">&lt;s0&gt;</bpt>"cunit"<ept i="0">&lt;/s0&gt;</ept>, linkage: <bpt i="1" x="1">&lt;s1&gt;</bpt>"static"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160504T151037Z" creationid="95" creationdate="20160504T151037Z">
        <seg>lib library: <bpt i="0" x="0">&lt;s0&gt;</bpt>"cunit"<ept i="0">&lt;/s0&gt;</ept>, linkage: <bpt i="1" x="1">&lt;s1&gt;</bpt>"static"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>lib library: <bpt i="4" x="4">&lt;s4&gt;</bpt>"cunit"<ept i="4">&lt;/s4&gt;</ept>, linkage: <bpt i="5" x="5">&lt;s5&gt;</bpt>"static"<ept i="5">&lt;/s5&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160504T151355Z" creationid="95" creationdate="20160504T151355Z">
        <seg>lib library: <bpt i="4" x="4">&lt;s4&gt;</bpt>"cunit"<ept i="4">&lt;/s4&gt;</ept>, linkage: <bpt i="5" x="5">&lt;s5&gt;</bpt>"static"<ept i="5">&lt;/s5&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>lib project: <bpt i="4" x="4">&lt;s4&gt;</bpt>':lib'<ept i="4">&lt;/s4&gt;</ept>, library: <bpt i="5" x="5">&lt;s5&gt;</bpt>'main'<ept i="5">&lt;/s5&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160325T033442Z" creationid="haohang" creationdate="20160325T033442Z">
        <seg>lib project: <bpt i="4" x="4">&lt;s4&gt;</bpt>':lib'<ept i="4">&lt;/s4&gt;</ept>, library: <bpt i="5" x="5">&lt;s5&gt;</bpt>'main'<ept i="5">&lt;/s5&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>libDirName</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T141507Z" creationid="msdx" creationdate="20150504T141507Z">
        <seg>libDirName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>libDirName <bpt i="11" x="11">&lt;s11&gt;</bpt>'APP-INF/lib'<ept i="11">&lt;/s11&gt;</ept>  <bpt i="12" x="12">&lt;s12&gt;</bpt>// put dependency libraries into APP-INF/lib inside the generated EAR;<ept i="12">&lt;/s12&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T142900Z" creationid="msdx" creationdate="20150504T142900Z">
        <seg>libDirName <bpt i="11" x="11">&lt;s11&gt;</bpt>'APP-INF/lib'<ept i="11">&lt;/s11&gt;</ept>  <bpt i="12" x="12">&lt;s12&gt;</bpt>// put dependency libraries into APP-INF/lib inside the generated EAR;<ept i="12">&lt;/s12&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>libraries {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160219T065319Z" creationid="haohang" creationdate="20160219T065319Z">
        <seg>libraries {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>libs</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083240Z" creationid="msdx" creationdate="20150428T083240Z">
        <seg>libs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>libs(PrebuiltLibraries) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160504T151335Z" creationid="95" creationdate="20160504T151335Z">
        <seg>libs(PrebuiltLibraries) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>libsDir</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083241Z" creationid="msdx" creationdate="20150428T083241Z">
        <seg>libsDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>libsDirName</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083240Z" creationid="msdx" creationdate="20150428T083240Z">
        <seg>libsDirName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>license {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160104T152816Z" creationid="95" creationdate="20160104T152816Z">
        <seg>license {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>licenses {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160104T152814Z" creationid="95" creationdate="20160104T152814Z">
        <seg>licenses {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>linker.args <bpt i="10" x="10">&lt;s10&gt;</bpt>"/DEBUG"<ept i="10">&lt;/s10&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160324T151802Z" creationid="95" creationdate="20160324T151802Z">
        <seg>linker.args <bpt i="10" x="10">&lt;s10&gt;</bpt>"/DEBUG"<ept i="10">&lt;/s10&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>linker.args <bpt i="1" x="1">&lt;s1&gt;</bpt>"/noentry"<ept i="1">&lt;/s1&gt;</ept>, <bpt i="2" x="2">&lt;s2&gt;</bpt>"/machine:x86"<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160325T023108Z" creationid="haohang" creationdate="20160325T023108Z">
        <seg>linker.args <bpt i="1" x="1">&lt;s1&gt;</bpt>"/noentry"<ept i="1">&lt;/s1&gt;</ept>, <bpt i="2" x="2">&lt;s2&gt;</bpt>"/machine:x86"<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>linker.args <bpt i="5" x="5">&lt;s5&gt;</bpt>'/DEBUG'<ept i="5">&lt;/s5&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160401T090626Z" creationid="haohang" creationdate="20160401T090626Z">
        <seg>linker.args <bpt i="5" x="5">&lt;s5&gt;</bpt>'/DEBUG'<ept i="5">&lt;/s5&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>linker.args <bpt i="6" x="6">&lt;s6&gt;</bpt>"-Xlinker"<ept i="6">&lt;/s6&gt;</ept>, <bpt i="7" x="7">&lt;s7&gt;</bpt>"-S"<ept i="7">&lt;/s7&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160324T151759Z" creationid="95" creationdate="20160324T151759Z">
        <seg>linker.args <bpt i="6" x="6">&lt;s6&gt;</bpt>"-Xlinker"<ept i="6">&lt;/s6&gt;</ept>, <bpt i="7" x="7">&lt;s7&gt;</bpt>"-S"<ept i="7">&lt;/s7&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>local</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T090846Z" creationid="haohang" creationdate="20150628T090846Z">
        <seg>local</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>local Maven repository)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150707T093731Z" creationid="haohang" creationdate="20150707T093731Z">
        <seg>本地 Maven 存储库）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>localRepository {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T133452Z" creationid="95" creationdate="20151006T133452Z">
        <seg>localRepository {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>logger.quiet(<bpt i="0" x="0">&lt;s0&gt;</bpt>'An info log message which is always logged.'<ept i="0">&lt;/s0&gt;</ept>)
logger.error(<bpt i="1" x="1">&lt;s1&gt;</bpt>'An error log message.'<ept i="1">&lt;/s1&gt;</ept>)
logger.warn(<bpt i="2" x="2">&lt;s2&gt;</bpt>'A warning log message.'<ept i="2">&lt;/s2&gt;</ept>)
logger.lifecycle(<bpt i="3" x="3">&lt;s3&gt;</bpt>'A lifecycle info log message.'<ept i="3">&lt;/s3&gt;</ept>)
logger.info(<bpt i="4" x="4">&lt;s4&gt;</bpt>'An info log message.'<ept i="4">&lt;/s4&gt;</ept>)
logger.debug(<bpt i="5" x="5">&lt;s5&gt;</bpt>'A debug log message.'<ept i="5">&lt;/s5&gt;</ept>)
logger.trace(<bpt i="6" x="6">&lt;s6&gt;</bpt>'A trace log message.'<ept i="6">&lt;/s6&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T125915Z" creationid="msdx" creationdate="20141116T125915Z">
        <seg>logger.quiet(<bpt i="0" x="0">&lt;s0&gt;</bpt>'An info log message which is always logged.'<ept i="0">&lt;/s0&gt;</ept>)
logger.error(<bpt i="1" x="1">&lt;s1&gt;</bpt>'An error log message.'<ept i="1">&lt;/s1&gt;</ept>)
logger.warn(<bpt i="2" x="2">&lt;s2&gt;</bpt>'A warning log message.'<ept i="2">&lt;/s2&gt;</ept>)
logger.lifecycle(<bpt i="3" x="3">&lt;s3&gt;</bpt>'A lifecycle info log message.'<ept i="3">&lt;/s3&gt;</ept>)
logger.info(<bpt i="4" x="4">&lt;s4&gt;</bpt>'An info log message.'<ept i="4">&lt;/s4&gt;</ept>)
logger.debug(<bpt i="5" x="5">&lt;s5&gt;</bpt>'A debug log message.'<ept i="5">&lt;/s5&gt;</ept>)
logger.trace(<bpt i="6" x="6">&lt;s6&gt;</bpt>'A trace log message.'<ept i="6">&lt;/s6&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>logging.captureStandardOutput LogLevel.INFO</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T150935Z" creationid="msdx" creationdate="20141116T150935Z">
        <seg>logging.captureStandardOutput LogLevel.INFO</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>logging.captureStandardOutput LogLevel.INFO
println <bpt i="0" x="0">&lt;s0&gt;</bpt>'A message which is logged at INFO level'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T150313Z" creationid="msdx" creationdate="20141116T150313Z">
        <seg>logging.captureStandardOutput LogLevel.INFO
println <bpt i="0" x="0">&lt;s0&gt;</bpt>'A message which is logged at INFO level'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>logging.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T161648Z" creationid="msdx" creationdate="20141113T161648Z">
        <seg>logging.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>logging.html#logLevelCommandLineOptions</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T070959Z" creationid="msdx" creationdate="20141116T070959Z">
        <seg>logging.html#logLevelCommandLineOptions</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>logging.html#logLevels</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T063519Z" creationid="msdx" creationdate="20141116T063519Z">
        <seg>logging.html#logLevels</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>logging.html#sec:changing_what_gradle_logs</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T030410Z" creationid="msdx" creationdate="20150501T030410Z">
        <seg>logging.html#sec:changing_what_gradle_logs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>logging.html#sec:choosing_a_log_level</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T030408Z" creationid="msdx" creationdate="20150501T030408Z">
        <seg>logging.html#sec:choosing_a_log_level</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>logging.html#sec:external_tools</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T030409Z" creationid="msdx" creationdate="20150501T030409Z">
        <seg>logging.html#sec:external_tools</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>logging.html#sec:sending_your_own_log_messages</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T030409Z" creationid="msdx" creationdate="20150501T030409Z">
        <seg>logging.html#sec:sending_your_own_log_messages</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>logging.html#stacktraces</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T071013Z" creationid="msdx" creationdate="20141116T071013Z">
        <seg>logging.html#stacktraces</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>m2compatible = true</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T111055Z" creationid="95" creationdate="20151006T111055Z">
        <seg>m2compatible = true</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>main {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T050712Z" creationid="msdx" creationdate="20141108T050712Z">
        <seg>main {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>main {}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160325T033434Z" creationid="haohang" creationdate="20160325T033434Z">
        <seg>main {}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>main {}
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160219T065432Z" creationid="haohang" creationdate="20160219T065432Z">
        <seg>main {}
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>main/java/</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T083509Z" creationid="haohang" creationdate="20160726T083509Z">
        <seg>main/java/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>mainClassName = <bpt i="0" x="0">&lt;s0&gt;</bpt>"org.gradle.sample.Main"<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150702T103935Z" creationid="haohang" creationdate="20150702T103935Z">
        <seg>mainClassName = <bpt i="0" x="0">&lt;s0&gt;</bpt>"org.gradle.sample.Main"<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>main{</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150705T084609Z" creationid="haohang" creationdate="20150705T084609Z">
        <seg>main{</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>manifest</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083246Z" creationid="msdx" creationdate="20150428T083246Z">
        <seg>manifest</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>manifest = osgiManifest {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150526T064445Z" creationid="haohang" creationdate="20150526T064445Z">
        <seg>manifest = osgiManifest {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>manifest = project.manifest {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T145343Z" creationid="msdx" creationdate="20150428T145343Z">
        <seg>manifest = project.manifest {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>manifest {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T145224Z" creationid="msdx" creationdate="20150428T145224Z">
        <seg>manifest {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>manifest { <bpt i="0" x="0">&lt;s0&gt;</bpt>// the manifest of the default jar is of type OsgiManifest<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150526T064438Z" creationid="haohang" creationdate="20150526T064438Z">
        <seg>manifest { <bpt i="0" x="0">&lt;s0&gt;</bpt>// the manifest of the default jar is of type OsgiManifest<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>manufactured viewport for HTML img</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T150123Z" creationid="msdx" creationdate="20141105T150123Z">
        <seg>manufactured viewport for HTML img</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>maven</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104758Z" creationid="msdx" creationdate="20150428T104758Z">
        <seg>maven</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>maven {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150909T052927Z" creationid="haohang" creationdate="20150909T052927Z">
        <seg>maven {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>maven(MavenPublication) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T032458Z" creationid="95" creationdate="20170416T032458Z">
        <seg>maven(MavenPublication) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>maven-publish</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104802Z" creationid="msdx" creationdate="20150428T104802Z">
        <seg>maven-publish</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>mavenCentral()</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160722T091246Z" creationid="haohang" creationdate="20160722T091246Z">
        <seg>mavenCentral()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>mavenCentral()
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T095902Z" creationid="haohang" creationdate="20150807T095902Z">
        <seg>mavenCentral()
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>mavenCentral()
}

dependencies {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T065504Z" creationid="msdx" creationdate="20141030T065504Z">
        <seg>mavenCentral()
}

dependencies {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>mavenCentral()
}

task showRepos &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161215T143416Z" creationid="95" creationdate="20161215T143416Z">
        <seg>mavenCentral()
}

task showRepos &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>mavenCustom(MavenPublication) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T033106Z" creationid="95" creationdate="20170416T033106Z">
        <seg>mavenCustom(MavenPublication) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>mavenDeployer {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160104T154208Z" creationid="95" creationdate="20160104T154208Z">
        <seg>mavenDeployer {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>mavenJava(MavenPublication) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170412T154511Z" creationid="95" creationdate="20170412T154511Z">
        <seg>mavenJava(MavenPublication) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>mavenLocal()</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161215T143419Z" creationid="95" creationdate="20161215T143419Z">
        <seg>mavenLocal()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>mavenLocal()
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T101038Z" creationid="haohang" creationdate="20150807T101038Z">
        <seg>mavenLocal()
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>maven_plugin.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104758Z" creationid="msdx" creationdate="20150428T104758Z">
        <seg>maven_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>maven_plugin.html#N1542C</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070300Z" creationid="95" creationdate="20170416T070300Z">
        <seg>maven_plugin.html#N1542C</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>maven_plugin.html#N1543B</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070301Z" creationid="95" creationdate="20170416T070301Z">
        <seg>maven_plugin.html#N1543B</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>maven_plugin.html#N1546B</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070302Z" creationid="95" creationdate="20170416T070302Z">
        <seg>maven_plugin.html#N1546B</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>maven_plugin.html#N15470</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070303Z" creationid="95" creationdate="20170416T070303Z">
        <seg>maven_plugin.html#N15470</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>maven_plugin.html#N154DD</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070304Z" creationid="95" creationdate="20170416T070304Z">
        <seg>maven_plugin.html#N154DD</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>maven_plugin.html#deployerConfig</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T134857Z" creationid="95" creationdate="20160105T134857Z">
        <seg>maven_plugin.html#deployerConfig</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>maven_plugin.html#sub:dependency_mapping</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151228T152803Z" creationid="95" creationdate="20151228T152803Z">
        <seg>maven_plugin.html#sub:dependency_mapping</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>maven_plugin.html#sub:installing_to_the_local_repository</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151228T152038Z" creationid="95" creationdate="20151228T152038Z">
        <seg>maven_plugin.html#sub:installing_to_the_local_repository</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>maven_plugin.html#sub:multiple_artifacts_per_project</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T143214Z" creationid="95" creationdate="20160106T143214Z">
        <seg>maven_plugin.html#sub:multiple_artifacts_per_project</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>maven_plugin.html#uploading_to_maven_repositories</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151226T093006Z" creationid="95" creationdate="20151226T093006Z">
        <seg>maven_plugin.html#uploading_to_maven_repositories</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>maven_plugin.html#wagonLibs</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160104T154621Z" creationid="95" creationdate="20160104T154621Z">
        <seg>maven_plugin.html#wagonLibs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>memoryMaximumSize = <bpt i="0" x="0">&lt;s0&gt;</bpt>'1g'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150430T160055Z" creationid="msdx" creationdate="20150430T160055Z">
        <seg>memoryMaximumSize = <bpt i="0" x="0">&lt;s0&gt;</bpt>'1g'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>message = <bpt i="0" x="0">&lt;s0&gt;</bpt>'Hi'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T131356Z" creationid="95" creationdate="20160820T131356Z">
        <seg>message = <bpt i="0" x="0">&lt;s0&gt;</bpt>'Hi'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>message = rootProject.producerMessage

task consume &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T072756Z" creationid="haohang" creationdate="20160718T072756Z">
        <seg>message = rootProject.producerMessage

task consume &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>messages/</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T062257Z" creationid="haohang" creationdate="20160718T062257Z">
        <seg>messages/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>model {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160401T090258Z" creationid="haohang" creationdate="20160401T090258Z">
        <seg>model {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>module <bpt i="1" x="1">&lt;s1&gt;</bpt>'project1-sample'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20170217T083153Z" creationid="haohang" creationdate="20170217T083153Z">
        <seg>module <bpt i="1" x="1">&lt;s1&gt;</bpt>'project1-sample'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>module <bpt i="3" x="3">&lt;s3&gt;</bpt>'project2-impl'<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170304T033028Z" creationid="95" creationdate="20170304T033028Z">
        <seg>module <bpt i="3" x="3">&lt;s3&gt;</bpt>'project2-impl'<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>module <bpt i="6" x="6">&lt;s6&gt;</bpt>'project2-api'<ept i="6">&lt;/s6&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170304T033035Z" creationid="95" creationdate="20170304T033035Z">
        <seg>module <bpt i="6" x="6">&lt;s6&gt;</bpt>'project2-api'<ept i="6">&lt;/s6&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>module(<bpt i="1" x="1">&lt;s1&gt;</bpt>"commons-net:commons-net:1.4.1"<ept i="1">&lt;/s1&gt;</ept>) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161212T155101Z" creationid="95" creationdate="20161212T155101Z">
        <seg>module(<bpt i="1" x="1">&lt;s1&gt;</bpt>"commons-net:commons-net:1.4.1"<ept i="1">&lt;/s1&gt;</ept>) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>module(<bpt i="5" x="5">&lt;s5&gt;</bpt>'org.apache.ant:ant:1.9.3'<ept i="5">&lt;/s5&gt;</ept>) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T080913Z" creationid="msdx" creationdate="20150429T080913Z">
        <seg>module(<bpt i="5" x="5">&lt;s5&gt;</bpt>'org.apache.ant:ant:1.9.3'<ept i="5">&lt;/s5&gt;</ept>) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>module(group: <bpt i="2" x="2">&lt;s2&gt;</bpt>'org.apache.ant'<ept i="2">&lt;/s2&gt;</ept>, name: <bpt i="3" x="3">&lt;s3&gt;</bpt>'ant'<ept i="3">&lt;/s3&gt;</ept>, version: <bpt i="4" x="4">&lt;s4&gt;</bpt>'1.9.3'<ept i="4">&lt;/s4&gt;</ept>) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T091426Z" creationid="haohang" creationdate="20150801T091426Z">
        <seg>module(group: <bpt i="2" x="2">&lt;s2&gt;</bpt>'org.apache.ant'<ept i="2">&lt;/s2&gt;</ept>, name: <bpt i="3" x="3">&lt;s3&gt;</bpt>'ant'<ept i="3">&lt;/s3&gt;</ept>, version: <bpt i="4" x="4">&lt;s4&gt;</bpt>'1.9.3'<ept i="4">&lt;/s4&gt;</ept>) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>module.dependencies*.exported = true</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T074614Z" creationid="haohang" creationdate="20150625T074614Z">
        <seg>module.dependencies*.exported = true</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>module.dependencies.clear()</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T073923Z" creationid="haohang" creationdate="20150625T073923Z">
        <seg>module.dependencies.clear()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>moreLibs
}

repositories {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T093817Z" creationid="msdx" creationdate="20150503T093817Z">
        <seg>moreLibs
}

repositories {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>moreLibs <bpt i="10" x="10">&lt;s10&gt;</bpt>":otherLib:1.0"<ept i="10">&lt;/s10&gt;</ept>
}

war {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T093820Z" creationid="msdx" creationdate="20150503T093820Z">
        <seg>moreLibs <bpt i="10" x="10">&lt;s10&gt;</bpt>":otherLib:1.0"<ept i="10">&lt;/s10&gt;</ept>
}

war {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>more_about_tasks.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T092518Z" creationid="msdx" creationdate="20141109T092518Z">
        <seg>more_about_tasks.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>more_about_tasks.html#N10CBF</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T165025Z" creationid="msdx" creationdate="20141109T165025Z">
        <seg>more_about_tasks.html#N10CBF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>more_about_tasks.html#N10CF6</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T030352Z" creationid="msdx" creationdate="20150501T030352Z">
        <seg>more_about_tasks.html#N10CBF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>more_about_tasks.html#N10E91</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T030355Z" creationid="msdx" creationdate="20150501T030355Z">
        <seg>more_about_tasks.html#N10CBF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>more_about_tasks.html#N10EA3</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T030356Z" creationid="msdx" creationdate="20150501T030356Z">
        <seg>more_about_tasks.html#N10CBF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>more_about_tasks.html#N10EC0</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T030357Z" creationid="msdx" creationdate="20150501T030357Z">
        <seg>more_about_tasks.html#N10CBF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>more_about_tasks.html#N10F94</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T030357Z" creationid="msdx" creationdate="20150501T030357Z">
        <seg>more_about_tasks.html#N10CBF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>more_about_tasks.html#N10FC0</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T030358Z" creationid="msdx" creationdate="20150501T030358Z">
        <seg>more_about_tasks.html#N10CBF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>more_about_tasks.html#sec:adding_dependencies_to_tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T030354Z" creationid="msdx" creationdate="20150501T030354Z">
        <seg>more_about_tasks.html#sec:adding_dependencies_to_tasks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>more_about_tasks.html#sec:configuring_tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T030353Z" creationid="msdx" creationdate="20150501T030353Z">
        <seg>more_about_tasks.html#sec:configuring_tasks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>more_about_tasks.html#sec:ordering_tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T030355Z" creationid="msdx" creationdate="20150501T030355Z">
        <seg>more_about_tasks.html#sec:ordering_tasks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>more_about_tasks.html#sec:task_inputs_outputs</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150703T100435Z" creationid="haohang" creationdate="20150703T100435Z">
        <seg>more_about_tasks.html#sec:task_inputs_outputs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>more_about_tasks.html#sec:the_idea_behind_gradle_tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T030359Z" creationid="msdx" creationdate="20150501T030359Z">
        <seg>more_about_tasks.html#sec:the_idea_behind_gradle_tasks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>more_about_tasks.html#sec:up_to_date_checks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T131127Z" creationid="msdx" creationdate="20141113T131127Z">
        <seg>more_about_tasks.html#sec:up_to_date_checks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>mountains.mountain.each { mountain -&gt;</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T060326Z" creationid="msdx" creationdate="20141111T060326Z">
        <seg>mountains.mountain.each { mountain -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>multi_project_builds.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T092535Z" creationid="haohang" creationdate="20150801T092535Z">
        <seg>multi_project_builds.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>multi_project_builds.html#N16445</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070649Z" creationid="95" creationdate="20170416T070649Z">
        <seg>multi_project_builds.html#N16445</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>multi_project_builds.html#javadependencies_2</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T094809Z" creationid="haohang" creationdate="20160726T094809Z">
        <seg>multi_project_builds.html#javadependencies_2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>multi_project_builds.html#sec:configuration_on_demand</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141120T052430Z" creationid="msdx" creationdate="20141120T052430Z">
        <seg>multi_project_builds.html#sec:configuration_on_demand</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>multi_project_builds.html#sec:cross_project_configuration</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T093151Z" creationid="haohang" creationdate="20160726T093151Z">
        <seg>multi_project_builds.html#sec:cross_project_configuration</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>multi_project_builds.html#sec:decoupled_projects</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160522T121412Z" creationid="95" creationdate="20160522T121412Z">
        <seg>multi_project_builds.html#sec:decoupled_projects</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>multi_project_builds.html#sec:dependencies_which_dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160530T144447Z" creationid="95" creationdate="20160530T144447Z">
        <seg>multi_project_builds.html#sec:dependencies_which_dependencies</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>multi_project_builds.html#sec:execution_rules_for_multi_project_builds</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070558Z" creationid="95" creationdate="20170416T070558Z">
        <seg>multi_project_builds.html#sec:execution_rules_for_multi_project_builds</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>multi_project_builds.html#sec:multiproject_build_and_test</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070639Z" creationid="95" creationdate="20170416T070639Z">
        <seg>multi_project_builds.html#sec:multiproject_build_and_test</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>multi_project_builds.html#sec:parallel_execution</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070618Z" creationid="95" creationdate="20170416T070618Z">
        <seg>multi_project_builds.html#sec:parallel_execution</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>multi_project_builds.html#sec:project_and_task_paths</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160715T091100Z" creationid="haohang" creationdate="20160715T091100Z">
        <seg>multi_project_builds.html#sec:project_and_task_paths</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>multi_project_builds.html#sec:project_jar_dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070614Z" creationid="95" creationdate="20170416T070614Z">
        <seg>multi_project_builds.html#sec:project_jar_dependencies</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>multi_project_builds.html#sec:property_and_method_inheritance</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070643Z" creationid="95" creationdate="20170416T070643Z">
        <seg>multi_project_builds.html#sec:property_and_method_inheritance</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>multi_project_builds.html#sec:running_partial_build_from_the_root</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T075358Z" creationid="haohang" creationdate="20160519T075358Z">
        <seg>multi_project_builds.html#sec:running_partial_build_from_the_root</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>multi_project_builds.html#sec:subproject_configuration</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T045005Z" creationid="95" creationdate="20161211T045005Z">
        <seg>multi_project_builds.html#sec:subproject_configuration</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>n/a</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151228T152801Z" creationid="95" creationdate="20151228T152801Z">
        <seg>n/a</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>name</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T044233Z" creationid="msdx" creationdate="20141108T044233Z">
        <seg>name</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>name <bpt i="0" x="0">&lt;s0&gt;</bpt>"fileRepo"<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151226T092021Z" creationid="95" creationdate="20151226T092021Z">
        <seg>name <bpt i="0" x="0">&lt;s0&gt;</bpt>"fileRepo"<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>name <bpt i="0" x="0">&lt;s0&gt;</bpt>'localRepository'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T133449Z" creationid="95" creationdate="20151006T133449Z">
        <seg>name <bpt i="0" x="0">&lt;s0&gt;</bpt>'localRepository'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>name <bpt i="12" x="12">&lt;s12&gt;</bpt>"STANDARD_ENTERPRISE_REPO"<ept i="12">&lt;/s12&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161215T144241Z" creationid="95" creationdate="20161215T144241Z">
        <seg>name <bpt i="12" x="12">&lt;s12&gt;</bpt>"STANDARD_ENTERPRISE_REPO"<ept i="12">&lt;/s12&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>name <bpt i="1" x="1">&lt;s1&gt;</bpt>'The Apache Software License, Version 2.0'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160104T152817Z" creationid="95" creationdate="20160104T152817Z">
        <seg>name <bpt i="1" x="1">&lt;s1&gt;</bpt>'The Apache Software License, Version 2.0'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>name <bpt i="1" x="1">&lt;s1&gt;</bpt>'my-artifact'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151226T091159Z" creationid="95" creationdate="20151226T091159Z">
        <seg>name <bpt i="1" x="1">&lt;s1&gt;</bpt>'my-artifact'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>name = <bpt i="1" x="1">&lt;s1&gt;</bpt>'overwrittenSpecialOsgiName'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150526T064439Z" creationid="haohang" creationdate="20150526T064439Z">
        <seg>name = <bpt i="1" x="1">&lt;s1&gt;</bpt>'overwrittenSpecialOsgiName'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>native language plugins</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="Administrator" changedate="20150425T040444Z" creationid="Administrator" creationdate="20150425T040444Z">
        <seg>本机语言插件</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>nativeBinaries.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141209T073741Z" creationid="msdx" creationdate="20141209T073741Z">
        <seg>nativeBinaries.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>nativeBinaries.html#N15851</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070357Z" creationid="95" creationdate="20170416T070357Z">
        <seg>nativeBinaries.html#N15851</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>nativeBinaries.html#N158AA</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070403Z" creationid="95" creationdate="20170416T070403Z">
        <seg>nativeBinaries.html#N158AA</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>nativeBinaries.html#N15A23</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070416Z" creationid="95" creationdate="20170416T070416Z">
        <seg>nativeBinaries.html#N15A23</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>nativeBinaries.html#N15ABD</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070444Z" creationid="95" creationdate="20170416T070444Z">
        <seg>nativeBinaries.html#N15ABD</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>nativeBinaries.html#native-binaries:tool-chain-support</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070352Z" creationid="95" creationdate="20170416T070352Z">
        <seg>nativeBinaries.html#native-binaries:tool-chain-support</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>nativeBinaries.html#native_binaries:build_type</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160401T064011Z" creationid="haohang" creationdate="20160401T064011Z">
        <seg>nativeBinaries.html#native_binaries:build_type</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>nativeBinaries.html#native_binaries:cunit</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070509Z" creationid="95" creationdate="20170416T070509Z">
        <seg>nativeBinaries.html#native_binaries:cunit</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>nativeBinaries.html#native_binaries:flavor</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160401T064013Z" creationid="haohang" creationdate="20160401T064013Z">
        <seg>nativeBinaries.html#native_binaries:flavor</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>nativeBinaries.html#native_binaries:languages</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070404Z" creationid="95" creationdate="20170416T070404Z">
        <seg>nativeBinaries.html#native_binaries:languages</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>nativeBinaries.html#native_binaries:platform</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160401T064012Z" creationid="haohang" creationdate="20160401T064012Z">
        <seg>nativeBinaries.html#native_binaries:platform</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>nativeBinaries.html#native_binaries:tool_chain</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160405T034034Z" creationid="haohang" creationdate="20160405T034034Z">
        <seg>nativeBinaries.html#native_binaries:tool_chain</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>nativeBinaries.html#native_binaries:variants</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070449Z" creationid="95" creationdate="20170416T070449Z">
        <seg>nativeBinaries.html#native_binaries:variants</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>nativeBinaries.html#native_binaries:visual_studio</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070505Z" creationid="95" creationdate="20170416T070505Z">
        <seg>nativeBinaries.html#native_binaries:visual_studio</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>nativeBinaries.html#native_binaries:windows-resources</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070420Z" creationid="95" creationdate="20170416T070420Z">
        <seg>nativeBinaries.html#native_binaries:windows-resources</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>no logging options</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T102909Z" creationid="msdx" creationdate="20141116T102909Z">
        <seg>没有日志选项</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>notify-send</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T065616Z" creationid="haohang" creationdate="20150628T065616Z">
        <seg>notify-send</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>null</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T160253Z" creationid="msdx" creationdate="20141113T160253Z">
        <seg>null</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>objective-c</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141209T074139Z" creationid="msdx" creationdate="20141209T074139Z">
        <seg>objective-c</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>objective-cpp</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141209T074200Z" creationid="msdx" creationdate="20141209T074200Z">
        <seg>objective-cpp</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>operators {}
}
binaries.withType(TestSuiteExecutableBinary) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160504T151341Z" creationid="95" creationdate="20160504T151341Z">
        <seg>operators {}
}
binaries.withType(TestSuiteExecutableBinary) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>orca-1.0 -&gt; seal-1.0</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T034314Z" creationid="haohang" creationdate="20150807T034314Z">
        <seg>orca-1.0 -&gt; seal-1.0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>org.apache.maven.artifact.ant.Authentication</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T141908Z" creationid="95" creationdate="20160105T141908Z">
        <seg>org.apache.maven.artifact.ant.Authentication</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>org.apache.maven.artifact.ant.Proxy</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T141915Z" creationid="95" creationdate="20160105T141915Z">
        <seg>org.apache.maven.artifact.ant.Proxy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>org.apache.maven.artifact.ant.RemoteRepository</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T141904Z" creationid="95" creationdate="20160105T141904Z">
        <seg>org.apache.maven.artifact.ant.RemoteRepository</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>org.apache.maven.artifact.ant.RepositoryPolicy</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T141910Z" creationid="95" creationdate="20160105T141910Z">
        <seg>org.apache.maven.artifact.ant.RepositoryPolicy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>org.apache.maven.wagon:wagon-ftp:2.2</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T141834Z" creationid="95" creationdate="20160105T141834Z">
        <seg>org.apache.maven.wagon:wagon-ftp:2.2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>org.apache.maven.wagon:wagon-http:2.2</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T141829Z" creationid="95" creationdate="20160105T141829Z">
        <seg>org.apache.maven.wagon:wagon-http:2.2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>org.apache.maven.wagon:wagon-ssh-external:2.2</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T141832Z" creationid="95" creationdate="20160105T141832Z">
        <seg>org.apache.maven.wagon:wagon-ssh-external:2.2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>org.apache.maven.wagon:wagon-ssh:2.2</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T141831Z" creationid="95" creationdate="20160105T141831Z">
        <seg>org.apache.maven.wagon:wagon-ssh:2.2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>org.apache.maven.wagon:wagon-webdav:1.0-beta-2</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T141835Z" creationid="95" creationdate="20160105T141835Z">
        <seg>org.apache.maven.wagon:wagon-webdav:1.0-beta-2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>org.gradle.configureondemand</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141120T052427Z" creationid="msdx" creationdate="20141120T052427Z">
        <seg>org.gradle.configureondemand</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>org.gradle.daemon</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141119T153525Z" creationid="msdx" creationdate="20141119T153525Z">
        <seg>org.gradle.daemon</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>org.gradle.java.home</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141120T051200Z" creationid="msdx" creationdate="20141120T051200Z">
        <seg>org.gradle.java.home</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>org.gradle.jvmargs</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141120T051940Z" creationid="msdx" creationdate="20141120T051940Z">
        <seg>org.gradle.jvmargs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>org.gradle.parallel</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141120T053747Z" creationid="msdx" creationdate="20141120T053747Z">
        <seg>org.gradle.parallel</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>org.gradle.plugins.ear.descriptor.DeploymentDescriptor</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T141727Z" creationid="msdx" creationdate="20150504T141727Z">
        <seg>org.gradle.plugins.ear.descriptor.DeploymentDescriptor</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>org/gradle/sample/</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160722T091208Z" creationid="haohang" creationdate="20160722T091208Z">
        <seg>org/gradle/sample/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>org/gradle/sample/services/</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T083510Z" creationid="haohang" creationdate="20160726T083510Z">
        <seg>org/gradle/sample/services/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>org/gradle/sample/shared/</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T083514Z" creationid="haohang" creationdate="20160726T083514Z">
        <seg>org/gradle/sample/shared/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>organisation <bpt i="0" x="0">&lt;s0&gt;</bpt>'org.gradle.sample'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20170217T083153Z" creationid="haohang" creationdate="20170217T083153Z">
        <seg>organisation <bpt i="0" x="0">&lt;s0&gt;</bpt>'org.gradle.sample'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>organisation <bpt i="2" x="2">&lt;s2&gt;</bpt>'org.gradle.sample.impl'<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170304T033027Z" creationid="95" creationdate="20170304T033027Z">
        <seg>organisation <bpt i="2" x="2">&lt;s2&gt;</bpt>'org.gradle.sample.impl'<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>organisation <bpt i="5" x="5">&lt;s5&gt;</bpt>'org.gradle.sample'<ept i="5">&lt;/s5&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170304T033033Z" creationid="95" creationdate="20170304T033033Z">
        <seg>organisation <bpt i="5" x="5">&lt;s5&gt;</bpt>'org.gradle.sample'<ept i="5">&lt;/s5&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>organizing_build_logic.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T024720Z" creationid="haohang" creationdate="20160519T024720Z">
        <seg>organizing_build_logic.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>organizing_build_logic.html#sec:ant_optional_dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070843Z" creationid="95" creationdate="20170416T070843Z">
        <seg>organizing_build_logic.html#sec:ant_optional_dependencies</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>organizing_build_logic.html#sec:build_sources</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T044008Z" creationid="95" creationdate="20161211T044008Z">
        <seg>organizing_build_logic.html#sec:build_sources</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>organizing_build_logic.html#sec:external_build</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T044625Z" creationid="95" creationdate="20161211T044625Z">
        <seg>organizing_build_logic.html#sec:external_build</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>organizing_build_logic.html#sec:external_dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141122T162843Z" creationid="msdx" creationdate="20141122T162843Z">
        <seg>organizing_build_logic.html#sec:external_dependencies</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>organizing_build_logic.html#sec:inherited_properties_and_methods</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T043823Z" creationid="95" creationdate="20161211T043823Z">
        <seg>organizing_build_logic.html#sec:inherited_properties_and_methods</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>organizing_build_logic.html#sec:injected_configuration</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T043920Z" creationid="95" creationdate="20161211T043920Z">
        <seg>organizing_build_logic.html#sec:injected_configuration</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>organizing_build_logic.html#sec:philosophy</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070847Z" creationid="95" creationdate="20170416T070847Z">
        <seg>organizing_build_logic.html#sec:philosophy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>osgi</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104759Z" creationid="msdx" creationdate="20150428T104759Z">
        <seg>osgi</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>osgiManifest()</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150526T004705Z" creationid="haohang" creationdate="20150526T004705Z">
        <seg>osgiManifest()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>osgiManifest(Closure cl)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150526T004718Z" creationid="haohang" creationdate="20150526T004718Z">
        <seg>osgiManifest(Closure cl)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>osgi_plugin.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104759Z" creationid="msdx" creationdate="20150428T104759Z">
        <seg>osgi_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>osgi_plugin.html#N13C55</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065746Z" creationid="95" creationdate="20170416T065746Z">
        <seg>osgi_plugin.html#N13C55</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>osgi_plugin.html#N13C64</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065748Z" creationid="95" creationdate="20170416T065748Z">
        <seg>osgi_plugin.html#N13C64</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>osgi_plugin.html#N13C69</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065754Z" creationid="95" creationdate="20170416T065754Z">
        <seg>osgi_plugin.html#N13C69</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>osgi_plugin.html#N13C6E</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065757Z" creationid="95" creationdate="20170416T065757Z">
        <seg>osgi_plugin.html#N13C6E</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>osgi_plugin.html#N13C73</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065759Z" creationid="95" creationdate="20170416T065759Z">
        <seg>osgi_plugin.html#N13C73</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>osgi_plugin.html#N13CB6</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065804Z" creationid="95" creationdate="20170416T065804Z">
        <seg>osgi_plugin.html#N13CB6</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>other.gradle</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T152440Z" creationid="msdx" creationdate="20141109T152440Z">
        <seg>other.gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>otherConf group: <bpt i="1" x="1">&lt;s1&gt;</bpt>'org.gradle.test.classifiers'<ept i="1">&lt;/s1&gt;</ept>, name: <bpt i="2" x="2">&lt;s2&gt;</bpt>'service'<ept i="2">&lt;/s2&gt;</ept>, version: <bpt i="3" x="3">&lt;s3&gt;</bpt>'1.0'<ept i="3">&lt;/s3&gt;</ept>, classifier: <bpt i="4" x="4">&lt;s4&gt;</bpt>'jdk14'<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150731T100900Z" creationid="haohang" creationdate="20150731T100900Z">
        <seg>otherConf group: <bpt i="1" x="1">&lt;s1&gt;</bpt>'org.gradle.test.classifiers'<ept i="1">&lt;/s1&gt;</ept>, name: <bpt i="2" x="2">&lt;s2&gt;</bpt>'service'<ept i="2">&lt;/s2&gt;</ept>, version: <bpt i="3" x="3">&lt;s3&gt;</bpt>'1.0'<ept i="3">&lt;/s3&gt;</ept>, classifier: <bpt i="4" x="4">&lt;s4&gt;</bpt>'jdk14'<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>output</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083250Z" creationid="msdx" creationdate="20150428T083250Z">
        <seg>output</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>output-ivy.xml</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T154220Z" creationid="95" creationdate="20170330T154220Z">
        <seg>output-ivy.xml</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>output.classesDir</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083251Z" creationid="msdx" creationdate="20150428T083251Z">
        <seg>output.classesDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>output.resourcesDir</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083251Z" creationid="msdx" creationdate="20150428T083251Z">
        <seg>output.resourcesDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>outputDir = file(<bpt i="1" x="1">&lt;s1&gt;</bpt>"$buildDir/outputs"<ept i="1">&lt;/s1&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160817T145703Z" creationid="95" creationdate="20160817T145703Z">
        <seg>outputDir = file(<bpt i="1" x="1">&lt;s1&gt;</bpt>"$buildDir/outputs"<ept i="1">&lt;/s1&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>outputs.dir <bpt i="1" x="1">&lt;s1&gt;</bpt>'some-dir'<ept i="1">&lt;/s1&gt;</ept> <bpt i="2" x="2">&lt;s2&gt;</bpt>// up-to-date check for outputs<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T134159Z" creationid="msdx" creationdate="20141113T134159Z">
        <seg>outputs.dir <bpt i="1" x="1">&lt;s1&gt;</bpt>'some-dir'<ept i="1">&lt;/s1&gt;</ept> <bpt i="2" x="2">&lt;s2&gt;</bpt>// up-to-date check for outputs<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>outputs.dir destDir</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T061314Z" creationid="msdx" creationdate="20141111T061314Z">
        <seg>outputs.dir destDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>outputs.dir docs</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150703T100424Z" creationid="haohang" creationdate="20150703T100424Z">
        <seg>outputs.dir docs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>overview.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T161849Z" creationid="msdx" creationdate="20141109T161849Z">
        <seg>overview.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>overview.html#sec:special_feature_of_gradle</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T161853Z" creationid="msdx" creationdate="20141109T161853Z">
        <seg>overview.html#sec:special_feature_of_gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>overview.html#sec:why_groovy</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T161958Z" creationid="msdx" creationdate="20141109T161958Z">
        <seg>overview.html#sec:why_groovy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>packaging</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T144038Z" creationid="95" creationdate="20160105T144038Z">
        <seg>packaging</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>passing</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160504T151334Z" creationid="95" creationdate="20160504T151334Z">
        <seg>passing</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>password <bpt i="1" x="1">&lt;s1&gt;</bpt>'password'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150909T053441Z" creationid="haohang" creationdate="20150909T053441Z">
        <seg>password <bpt i="1" x="1">&lt;s1&gt;</bpt>'password'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>password <bpt i="2" x="2">&lt;s2&gt;</bpt>'password'<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T133237Z" creationid="95" creationdate="20151006T133237Z">
        <seg>password <bpt i="2" x="2">&lt;s2&gt;</bpt>'password'<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>password <bpt i="3" x="3">&lt;s3&gt;</bpt>"pw"<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151226T092054Z" creationid="95" creationdate="20151226T092054Z">
        <seg>password <bpt i="3" x="3">&lt;s3&gt;</bpt>"pw"<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>password = <bpt i="1" x="1">&lt;s1&gt;</bpt>'myPassword'<ept i="1">&lt;/s1&gt;</ept>
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T063506Z" creationid="haohang" creationdate="20150628T063506Z">
        <seg>password = <bpt i="1" x="1">&lt;s1&gt;</bpt>'myPassword'<ept i="1">&lt;/s1&gt;</ept>
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>password = <bpt i="4" x="4">&lt;s4&gt;</bpt>"very clever"<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150510T143652Z" creationid="msdx" creationdate="20150510T143652Z">
        <seg>password = <bpt i="4" x="4">&lt;s4&gt;</bpt>"very clever"<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>password = <bpt i="5" x="5">&lt;s5&gt;</bpt>"very clever"<ept i="5">&lt;/s5&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T091240Z" creationid="msdx" creationdate="20150512T091240Z">
        <seg>password = <bpt i="4" x="4">&lt;s4&gt;</bpt>"very clever"<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>path</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T044249Z" creationid="msdx" creationdate="20141108T044249Z">
        <seg>path</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>path.list().each {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T011228Z" creationid="msdx" creationdate="20141116T011228Z">
        <seg>path.list().each {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>platforms {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160405T034022Z" creationid="haohang" creationdate="20160405T034022Z">
        <seg>platforms {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>plugin {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150710T012934Z" creationid="haohang" creationdate="20150710T012934Z">
        <seg>plugin {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>plugins.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141119T031528Z" creationid="msdx" creationdate="20141119T031528Z">
        <seg>plugins.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>plugins.html#N1185A</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131420Z" creationid="msdx" creationdate="20150509T131420Z">
        <seg>plugins.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>plugins.html#N118FD</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131513Z" creationid="msdx" creationdate="20150509T131513Z">
        <seg>plugins.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>plugins.html#sec:using_plugins</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131414Z" creationid="msdx" creationdate="20150509T131414Z">
        <seg>plugins.html#sec:using_plugins</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>plugins.html#sub:more_about_convention_objects</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083234Z" creationid="msdx" creationdate="20150428T083234Z">
        <seg>plugins.html#sub:more_about_convention_objects</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>pmd</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104855Z" creationid="msdx" creationdate="20150428T104855Z">
        <seg>pmd</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>pmd
}

dependencies {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T060533Z" creationid="msdx" creationdate="20141116T060533Z">
        <seg>pmd
}

dependencies {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>pmd group: <bpt i="0" x="0">&lt;s0&gt;</bpt>'pmd'<ept i="0">&lt;/s0&gt;</ept>, name: <bpt i="1" x="1">&lt;s1&gt;</bpt>'pmd'<ept i="1">&lt;/s1&gt;</ept>, version: <bpt i="2" x="2">&lt;s2&gt;</bpt>'4.2.5'<ept i="2">&lt;/s2&gt;</ept>
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T060538Z" creationid="msdx" creationdate="20141116T060538Z">
        <seg>pmd group: <bpt i="0" x="0">&lt;s0&gt;</bpt>'pmd'<ept i="0">&lt;/s0&gt;</ept>, name: <bpt i="1" x="1">&lt;s1&gt;</bpt>'pmd'<ept i="1">&lt;/s1&gt;</ept>, version: <bpt i="2" x="2">&lt;s2&gt;</bpt>'4.2.5'<ept i="2">&lt;/s2&gt;</ept>
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>pmd<bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>SourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T135558Z" creationid="msdx" creationdate="20150505T135558Z">
        <seg>pmd<bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>SourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>pmdMain</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T135543Z" creationid="msdx" creationdate="20150505T135543Z">
        <seg>pmdMain</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>pmdTest</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150505T135552Z" creationid="msdx" creationdate="20150505T135552Z">
        <seg>pmdTest</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>pmd_plugin.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104854Z" creationid="msdx" creationdate="20150428T104854Z">
        <seg>pmd_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>pmd_plugin.html#N13658</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065452Z" creationid="95" creationdate="20170416T065452Z">
        <seg>pmd_plugin.html#N13658</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>pmd_plugin.html#N1366C</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065454Z" creationid="95" creationdate="20170416T065454Z">
        <seg>pmd_plugin.html#N1366C</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>pmd_plugin.html#N136DA</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065456Z" creationid="95" creationdate="20170416T065456Z">
        <seg>pmd_plugin.html#N136DA</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>pmd_plugin.html#N136F6</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065457Z" creationid="95" creationdate="20170416T065457Z">
        <seg>pmd_plugin.html#N136F6</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>pom {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160104T152812Z" creationid="95" creationdate="20160104T152812Z">
        <seg>pom {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>pom(<bpt i="5" x="5">&lt;s5&gt;</bpt>'api'<ept i="5">&lt;/s5&gt;</ept>).version = <bpt i="6" x="6">&lt;s6&gt;</bpt>'mySpecialMavenVersion'<ept i="6">&lt;/s6&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T144211Z" creationid="95" creationdate="20160106T144211Z">
        <seg>pom(<bpt i="5" x="5">&lt;s5&gt;</bpt>'api'<ept i="5">&lt;/s5&gt;</ept>).version = <bpt i="6" x="6">&lt;s6&gt;</bpt>'mySpecialMavenVersion'<ept i="6">&lt;/s6&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>pom.artifactId = <bpt i="1" x="1">&lt;s1&gt;</bpt>'myName'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T143458Z" creationid="95" creationdate="20160106T143458Z">
        <seg>pom.artifactId = <bpt i="1" x="1">&lt;s1&gt;</bpt>'myName'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>pom.artifactId = <bpt i="2" x="2">&lt;s2&gt;</bpt>'myMavenName'<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T142734Z" creationid="95" creationdate="20160106T142734Z">
        <seg>pom.artifactId = <bpt i="2" x="2">&lt;s2&gt;</bpt>'myMavenName'<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>pom.dependencies.find {dep -&gt; dep.groupId == <bpt i="0" x="0">&lt;s0&gt;</bpt>'group3'<ept i="0">&lt;/s0&gt;</ept> &amp;&amp; dep.artifactId == <bpt i="1" x="1">&lt;s1&gt;</bpt>'runtime'<ept i="1">&lt;/s1&gt;</ept> }.optional = true
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T143213Z" creationid="95" creationdate="20160106T143213Z">
        <seg>pom.dependencies.find {dep -&gt; dep.groupId == <bpt i="0" x="0">&lt;s0&gt;</bpt>'group3'<ept i="0">&lt;/s0&gt;</ept> &amp;&amp; dep.artifactId == <bpt i="1" x="1">&lt;s1&gt;</bpt>'runtime'<ept i="1">&lt;/s1&gt;</ept> }.optional = true
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>pom.project {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T143106Z" creationid="95" creationdate="20160106T143106Z">
        <seg>pom.project {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>pom.version = <bpt i="0" x="0">&lt;s0&gt;</bpt>'1.0Maven'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T143453Z" creationid="95" creationdate="20160106T143453Z">
        <seg>pom.version = <bpt i="0" x="0">&lt;s0&gt;</bpt>'1.0Maven'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>pom.version = <bpt i="1" x="1">&lt;s1&gt;</bpt>'1.0Maven'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T142733Z" creationid="95" creationdate="20160106T142733Z">
        <seg>pom.version = <bpt i="1" x="1">&lt;s1&gt;</bpt>'1.0Maven'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>pom.withXml {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T033107Z" creationid="95" creationdate="20170416T033107Z">
        <seg>pom.withXml {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>pomDir</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151228T152713Z" creationid="95" creationdate="20151228T152713Z">
        <seg>pomDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>pomDirName</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151228T152522Z" creationid="95" creationdate="20151228T152522Z">
        <seg>pomDirName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>poms</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151228T152523Z" creationid="95" creationdate="20151228T152523Z">
        <seg>poms</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>port</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T132322Z" creationid="msdx" creationdate="20150506T132322Z">
        <seg>port</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>pos = <bpt i="0" x="0">&lt;s0&gt;</bpt>new<ept i="0">&lt;/s0&gt;</ept> java.text.FieldPosition(<bpt i="1" x="1">&lt;s1&gt;</bpt>10<ept i="1">&lt;/s1&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T153041Z" creationid="msdx" creationdate="20141109T153041Z">
        <seg>pos = <bpt i="0" x="0">&lt;s0&gt;</bpt>new<ept i="0">&lt;/s0&gt;</ept> java.text.FieldPosition(<bpt i="1" x="1">&lt;s1&gt;</bpt>10<ept i="1">&lt;/s1&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>pos = configure(<bpt i="0" x="0">&lt;s0&gt;</bpt>new<ept i="0">&lt;/s0&gt;</ept> java.text.FieldPosition(<bpt i="1" x="1">&lt;s1&gt;</bpt>10<ept i="1">&lt;/s1&gt;</ept>)) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T152807Z" creationid="msdx" creationdate="20141109T152807Z">
        <seg>pos = configure(<bpt i="0" x="0">&lt;s0&gt;</bpt>new<ept i="0">&lt;/s0&gt;</ept> java.text.FieldPosition(<bpt i="1" x="1">&lt;s1&gt;</bpt>10<ept i="1">&lt;/s1&gt;</ept>)) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="0" x="0">&lt;s0&gt;</bpt>"- The weight of my species in summer is twice as heavy as all human beings."<ept i="0">&lt;/s0&gt;</ept>
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160527T163310Z" creationid="95" creationdate="20160527T163310Z">
        <seg>println <bpt i="0" x="0">&lt;s0&gt;</bpt>"- The weight of my species in summer is twice as heavy as all human beings."<ept i="0">&lt;/s0&gt;</ept>
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="0" x="0">&lt;s0&gt;</bpt>"All repos:"<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161215T143417Z" creationid="95" creationdate="20161215T143417Z">
        <seg>println <bpt i="0" x="0">&lt;s0&gt;</bpt>"All repos:"<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="0" x="0">&lt;s0&gt;</bpt>"Hello, world!"<ept i="0">&lt;/s0&gt;</ept>
}  

helloWorld.doLast {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T063535Z" creationid="haohang" creationdate="20150628T063535Z">
        <seg>println <bpt i="0" x="0">&lt;s0&gt;</bpt>"Hello, world!"<ept i="0">&lt;/s0&gt;</ept>
}  

helloWorld.doLast {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="0" x="0">&lt;s0&gt;</bpt>"Producing message:"<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T062405Z" creationid="haohang" creationdate="20160718T062405Z">
        <seg>println <bpt i="0" x="0">&lt;s0&gt;</bpt>"Producing message:"<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="0" x="0">&lt;s0&gt;</bpt>"configuring $project"<ept i="0">&lt;/s0&gt;</ept>
task hello &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T152441Z" creationid="msdx" creationdate="20141109T152441Z">
        <seg>println <bpt i="0" x="0">&lt;s0&gt;</bpt>"configuring $project"<ept i="0">&lt;/s0&gt;</ept>
task hello &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="0" x="0">&lt;s0&gt;</bpt>"hello from the other build."<ept i="0">&lt;/s0&gt;</ept>
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161212T153539Z" creationid="95" creationdate="20161212T153539Z">
        <seg>println <bpt i="0" x="0">&lt;s0&gt;</bpt>"hello from the other build."<ept i="0">&lt;/s0&gt;</ept>
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="0" x="0">&lt;s0&gt;</bpt>"hello"<ept i="0">&lt;/s0&gt;</ept>
}

task(copy, type: Copy) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T021257Z" creationid="msdx" creationdate="20141110T021257Z">
        <seg>println <bpt i="0" x="0">&lt;s0&gt;</bpt>"hello"<ept i="0">&lt;/s0&gt;</ept>
}

task(copy, type: Copy) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="0" x="0">&lt;s0&gt;</bpt>"repository: ${it.name} ('${it.url}')"<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161215T144247Z" creationid="95" creationdate="20161215T144247Z">
        <seg>println <bpt i="0" x="0">&lt;s0&gt;</bpt>"repository: ${it.name} ('${it.url}')"<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="0" x="0">&lt;s0&gt;</bpt>'A message which is logged at QUIET level'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T122540Z" creationid="msdx" creationdate="20141116T122540Z">
        <seg>println <bpt i="0" x="0">&lt;s0&gt;</bpt>'A message which is logged at QUIET level'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="0" x="0">&lt;s0&gt;</bpt>'A task message which is logged at INFO level'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T150936Z" creationid="msdx" creationdate="20141116T150936Z">
        <seg>println <bpt i="0" x="0">&lt;s0&gt;</bpt>'A task message which is logged at INFO level'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="0" x="0">&lt;s0&gt;</bpt>'This is executed during the configuration phase.'<ept i="0">&lt;/s0&gt;</ept>

task configured {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T025307Z" creationid="haohang" creationdate="20160519T025307Z">
        <seg>println <bpt i="0" x="0">&lt;s0&gt;</bpt>'This is executed during the configuration phase.'<ept i="0">&lt;/s0&gt;</ept>

task configured {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="0" x="0">&lt;s0&gt;</bpt>'This is executed during the initialization phase.'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T025306Z" creationid="haohang" creationdate="20160519T025306Z">
        <seg>println <bpt i="0" x="0">&lt;s0&gt;</bpt>'This is executed during the initialization phase.'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="0" x="0">&lt;s0&gt;</bpt>'This should not be printed if the task is disabled.'<ept i="0">&lt;/s0&gt;</ept>
}
disableMe.enabled = false</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T055744Z" creationid="msdx" creationdate="20141111T055744Z">
        <seg>println <bpt i="0" x="0">&lt;s0&gt;</bpt>'This should not be printed if the task is disabled.'<ept i="0">&lt;/s0&gt;</ept>
}
disableMe.enabled = false</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="0" x="0">&lt;s0&gt;</bpt>'We are doing the compile.'<ept i="0">&lt;/s0&gt;</ept>
}

compile.doFirst {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T054822Z" creationid="msdx" creationdate="20141111T054822Z">
        <seg>println <bpt i="0" x="0">&lt;s0&gt;</bpt>'We are doing the compile.'<ept i="0">&lt;/s0&gt;</ept>
}

compile.doFirst {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="0" x="0">&lt;s0&gt;</bpt>'hello world'<ept i="0">&lt;/s0&gt;</ept>
}

hello.onlyIf { !project.hasProperty(<bpt i="1" x="1">&lt;s1&gt;</bpt>'skipHello'<ept i="1">&lt;/s1&gt;</ept>) }</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T021016Z" creationid="msdx" creationdate="20141111T021016Z">
        <seg>println <bpt i="0" x="0">&lt;s0&gt;</bpt>'hello world'<ept i="0">&lt;/s0&gt;</ept>
}

hello.onlyIf { !project.hasProperty(<bpt i="1" x="1">&lt;s1&gt;</bpt>'skipHello'<ept i="1">&lt;/s1&gt;</ept>) }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="0" x="0">&lt;s0&gt;</bpt>'taskX'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T070351Z" creationid="msdx" creationdate="20141111T070351Z">
        <seg>println <bpt i="0" x="0">&lt;s0&gt;</bpt>'taskX'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="0" x="0">&lt;s0&gt;</bpt>'taskX'<ept i="0">&lt;/s0&gt;</ept>
}

task taskY &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T122607Z" creationid="msdx" creationdate="20141110T122607Z">
        <seg>println <bpt i="0" x="0">&lt;s0&gt;</bpt>'taskX'<ept i="0">&lt;/s0&gt;</ept>
}

task taskY &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="0" x="0">&lt;s0&gt;</bpt>'taskX'<ept i="0">&lt;/s0&gt;</ept>
}

taskX.dependsOn {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T123904Z" creationid="msdx" creationdate="20141110T123904Z">
        <seg>println <bpt i="0" x="0">&lt;s0&gt;</bpt>'taskX'<ept i="0">&lt;/s0&gt;</ept>
}

taskX.dependsOn {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="0" x="0">&lt;s0&gt;</bpt>'taskX'<ept i="0">&lt;/s0&gt;</ept>
}
task taskY &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T012835Z" creationid="msdx" creationdate="20141111T012835Z">
        <seg>println <bpt i="0" x="0">&lt;s0&gt;</bpt>'taskX'<ept i="0">&lt;/s0&gt;</ept>
}
task taskY &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="11" x="11">&lt;s11&gt;</bpt>"removed: ${change.file.name}"<ept i="11">&lt;/s11&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160816T145039Z" creationid="95" creationdate="20160816T145039Z">
        <seg>println <bpt i="11" x="11">&lt;s11&gt;</bpt>"removed: ${change.file.name}"<ept i="11">&lt;/s11&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="11" x="11">&lt;s11&gt;</bpt>'build completed'<ept i="11">&lt;/s11&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T154819Z" creationid="msdx" creationdate="20141116T154819Z">
        <seg>println <bpt i="11" x="11">&lt;s11&gt;</bpt>'build completed'<ept i="11">&lt;/s11&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="1" x="1">&lt;s1&gt;</bpt>"$book.name -&gt; $book.sourceFile"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T015225Z" creationid="95" creationdate="20161211T015225Z">
        <seg>println <bpt i="1" x="1">&lt;s1&gt;</bpt>"$book.name -&gt; $book.sourceFile"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="1" x="1">&lt;s1&gt;</bpt>"Adding test task to $project"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T125505Z" creationid="95" creationdate="20160521T125505Z">
        <seg>println <bpt i="1" x="1">&lt;s1&gt;</bpt>"Adding test task to $project"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="1" x="1">&lt;s1&gt;</bpt>"Evaluation of $project FAILED"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T132217Z" creationid="95" creationdate="20160521T132217Z">
        <seg>println <bpt i="1" x="1">&lt;s1&gt;</bpt>"Evaluation of $project FAILED"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="1" x="1">&lt;s1&gt;</bpt>"hello"<ept i="1">&lt;/s1&gt;</ept>
}

task(<bpt i="2" x="2">&lt;s2&gt;</bpt>'copy'<ept i="2">&lt;/s2&gt;</ept>, type: Copy) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T022746Z" creationid="msdx" creationdate="20141110T022746Z">
        <seg>println <bpt i="1" x="1">&lt;s1&gt;</bpt>"hello"<ept i="1">&lt;/s1&gt;</ept>
}

task(<bpt i="2" x="2">&lt;s2&gt;</bpt>'copy'<ept i="2">&lt;/s2&gt;</ept>, type: Copy) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="1" x="1">&lt;s1&gt;</bpt>"hello"<ept i="1">&lt;/s1&gt;</ept>
}

tasks.create(name: <bpt i="2" x="2">&lt;s2&gt;</bpt>'copy'<ept i="2">&lt;/s2&gt;</ept>, type: Copy) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T023139Z" creationid="msdx" creationdate="20141110T023139Z">
        <seg>println <bpt i="1" x="1">&lt;s1&gt;</bpt>"hello"<ept i="1">&lt;/s1&gt;</ept>
}

tasks.create(name: <bpt i="2" x="2">&lt;s2&gt;</bpt>'copy'<ept i="2">&lt;/s2&gt;</ept>, type: Copy) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="1" x="1">&lt;s1&gt;</bpt>'20 nautical miles'<ept i="1">&lt;/s1&gt;</ept>
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160715T075948Z" creationid="haohang" creationdate="20160715T075948Z">
        <seg>println <bpt i="1" x="1">&lt;s1&gt;</bpt>'20 nautical miles'<ept i="1">&lt;/s1&gt;</ept>
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="1" x="1">&lt;s1&gt;</bpt>'5 nautical miles'<ept i="1">&lt;/s1&gt;</ept>
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160715T075955Z" creationid="haohang" creationdate="20160715T075955Z">
        <seg>println <bpt i="1" x="1">&lt;s1&gt;</bpt>'5 nautical miles'<ept i="1">&lt;/s1&gt;</ept>
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="1" x="1">&lt;s1&gt;</bpt>'Hello, from Gradle'<ept i="1">&lt;/s1&gt;</ept>
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T061010Z" creationid="msdx" creationdate="20141116T061010Z">
        <seg>println <bpt i="1" x="1">&lt;s1&gt;</bpt>'Hello, from Gradle'<ept i="1">&lt;/s1&gt;</ept>
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="1" x="1">&lt;s1&gt;</bpt>'This is also executed during the configuration phase.'<ept i="1">&lt;/s1&gt;</ept>
}

task test &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T025319Z" creationid="haohang" creationdate="20160519T025319Z">
        <seg>println <bpt i="1" x="1">&lt;s1&gt;</bpt>'This is also executed during the configuration phase.'<ept i="1">&lt;/s1&gt;</ept>
}

task test &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="1" x="1">&lt;s1&gt;</bpt>'hello from other script'<ept i="1">&lt;/s1&gt;</ept>
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T152441Z" creationid="msdx" creationdate="20141109T152441Z">
        <seg>println <bpt i="1" x="1">&lt;s1&gt;</bpt>'hello from other script'<ept i="1">&lt;/s1&gt;</ept>
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="1" x="1">&lt;s1&gt;</bpt>'srcDirName: '<ept i="1">&lt;/s1&gt;</ept> + srcDirName</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T044947Z" creationid="95" creationdate="20161211T044947Z">
        <seg>println <bpt i="1" x="1">&lt;s1&gt;</bpt>'srcDirName: '<ept i="1">&lt;/s1&gt;</ept> + srcDirName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="1" x="1">&lt;s1&gt;</bpt>'taskY'<ept i="1">&lt;/s1&gt;</ept>
}

taskX.dependsOn taskY</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T122608Z" creationid="msdx" creationdate="20141110T122608Z">
        <seg>println <bpt i="1" x="1">&lt;s1&gt;</bpt>'taskY'<ept i="1">&lt;/s1&gt;</ept>
}

taskX.dependsOn taskY</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="1" x="1">&lt;s1&gt;</bpt>'taskY'<ept i="1">&lt;/s1&gt;</ept>
}

taskX.finalizedBy taskY</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T070207Z" creationid="msdx" creationdate="20141111T070207Z">
        <seg>println <bpt i="1" x="1">&lt;s1&gt;</bpt>'taskY'<ept i="1">&lt;/s1&gt;</ept>
}

taskX.finalizedBy taskY</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="1" x="1">&lt;s1&gt;</bpt>'taskY'<ept i="1">&lt;/s1&gt;</ept>
}
task taskZ &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T014953Z" creationid="msdx" creationdate="20141111T014953Z">
        <seg>println <bpt i="1" x="1">&lt;s1&gt;</bpt>'taskY'<ept i="1">&lt;/s1&gt;</ept>
}
task taskZ &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="1" x="1">&lt;s1&gt;</bpt>'taskY'<ept i="1">&lt;/s1&gt;</ept>
}
taskY.mustRunAfter taskX</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T012836Z" creationid="msdx" creationdate="20141111T012836Z">
        <seg>println <bpt i="1" x="1">&lt;s1&gt;</bpt>'taskY'<ept i="1">&lt;/s1&gt;</ept>
}
taskY.mustRunAfter taskX</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="1" x="1">&lt;s1&gt;</bpt>'taskY'<ept i="1">&lt;/s1&gt;</ept>
}
taskY.shouldRunAfter taskX</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T012914Z" creationid="msdx" creationdate="20141111T012914Z">
        <seg>println <bpt i="1" x="1">&lt;s1&gt;</bpt>'taskY'<ept i="1">&lt;/s1&gt;</ept>
}
taskY.shouldRunAfter taskX</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="2" x="2">&lt;s2&gt;</bpt>"Contents of $srcDir.name"<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T160739Z" creationid="msdx" creationdate="20141112T160739Z">
        <seg>println <bpt i="2" x="2">&lt;s2&gt;</bpt>"Contents of $srcDir.name"<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="2" x="2">&lt;s2&gt;</bpt>'This is executed during the execution phase.'<ept i="2">&lt;/s2&gt;</ept>
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T025338Z" creationid="haohang" creationdate="20160519T025338Z">
        <seg>println <bpt i="2" x="2">&lt;s2&gt;</bpt>'This is executed during the execution phase.'<ept i="2">&lt;/s2&gt;</ept>
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="2" x="2">&lt;s2&gt;</bpt>'compiling classes'<ept i="2">&lt;/s2&gt;</ept>
}

task list(dependsOn: configurations.compile) &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T094500Z" creationid="haohang" creationdate="20150801T094500Z">
        <seg>println <bpt i="2" x="2">&lt;s2&gt;</bpt>'compiling classes'<ept i="2">&lt;/s2&gt;</ept>
}

task list(dependsOn: configurations.compile) &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="2" x="2">&lt;s2&gt;</bpt>'lib1'<ept i="2">&lt;/s2&gt;</ept>
}

task lib2 &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T123905Z" creationid="msdx" creationdate="20141110T123905Z">
        <seg>println <bpt i="2" x="2">&lt;s2&gt;</bpt>'lib1'<ept i="2">&lt;/s2&gt;</ept>
}

task lib2 &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="2" x="2">&lt;s2&gt;</bpt>'taskX'<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T122313Z" creationid="msdx" creationdate="20141110T122313Z">
        <seg>println <bpt i="2" x="2">&lt;s2&gt;</bpt>'taskX'<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="2" x="2">&lt;s2&gt;</bpt>'taskZ'<ept i="2">&lt;/s2&gt;</ept>
}
taskX.dependsOn taskY
taskY.dependsOn taskZ
taskZ.shouldRunAfter taskX</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T014956Z" creationid="msdx" creationdate="20141111T014956Z">
        <seg>println <bpt i="2" x="2">&lt;s2&gt;</bpt>'taskZ'<ept i="2">&lt;/s2&gt;</ept>
}
taskX.dependsOn taskY
taskY.dependsOn taskZ
taskZ.shouldRunAfter taskX</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="3" x="3">&lt;s3&gt;</bpt>"- I'm the largest animal that has ever lived on this planet."<ept i="3">&lt;/s3&gt;</ept>
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160527T162902Z" creationid="95" creationdate="20160527T162902Z">
        <seg>println <bpt i="3" x="3">&lt;s3&gt;</bpt>"- I'm the largest animal that has ever lived on this planet."<ept i="3">&lt;/s3&gt;</ept>
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="3" x="3">&lt;s3&gt;</bpt>"Evaluation of $project succeeded"<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T132218Z" creationid="95" creationdate="20160521T132218Z">
        <seg>println <bpt i="3" x="3">&lt;s3&gt;</bpt>"Evaluation of $project succeeded"<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="3" x="3">&lt;s3&gt;</bpt>"Pinging: "<ept i="3">&lt;/s3&gt;</ept> + (taskName - <bpt i="4" x="4">&lt;s4&gt;</bpt>'ping'<ept i="4">&lt;/s4&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T065004Z" creationid="msdx" creationdate="20141111T065004Z">
        <seg>println <bpt i="3" x="3">&lt;s3&gt;</bpt>"Pinging: "<ept i="3">&lt;/s3&gt;</ept> + (taskName - <bpt i="4" x="4">&lt;s4&gt;</bpt>'ping'<ept i="4">&lt;/s4&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="3" x="3">&lt;s3&gt;</bpt>"Running tests for $project"<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T125516Z" creationid="95" creationdate="20160521T125516Z">
        <seg>println <bpt i="3" x="3">&lt;s3&gt;</bpt>"Running tests for $project"<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="3" x="3">&lt;s3&gt;</bpt>"Transforming source file."<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T060324Z" creationid="msdx" creationdate="20141111T060324Z">
        <seg>println <bpt i="3" x="3">&lt;s3&gt;</bpt>"Transforming source file."<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="3" x="3">&lt;s3&gt;</bpt>"classpath = ${configurations.compile.collect {File file -&gt; file.name}}"<ept i="3">&lt;/s3&gt;</ept>
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T094503Z" creationid="haohang" creationdate="20150801T094503Z">
        <seg>println <bpt i="3" x="3">&lt;s3&gt;</bpt>"classpath = ${configurations.compile.collect {File file -&gt; file.name}}"<ept i="3">&lt;/s3&gt;</ept>
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="3" x="3">&lt;s3&gt;</bpt>"executing $task ..."<ept i="3">&lt;/s3&gt;</ept>
}

gradle.taskGraph.afterTask { Task task, TaskState state -&gt;</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T140116Z" creationid="95" creationdate="20160521T140116Z">
        <seg>println <bpt i="3" x="3">&lt;s3&gt;</bpt>"executing $task ..."<ept i="3">&lt;/s3&gt;</ept>
}

gradle.taskGraph.afterTask { Task task, TaskState state -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="3" x="3">&lt;s3&gt;</bpt>'- I love to spend time in the arctic waters.'<ept i="3">&lt;/s3&gt;</ept> }</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160530T144439Z" creationid="95" creationdate="20160530T144439Z">
        <seg>println <bpt i="3" x="3">&lt;s3&gt;</bpt>'- I love to spend time in the arctic waters.'<ept i="3">&lt;/s3&gt;</ept> }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="3" x="3">&lt;s3&gt;</bpt>'hello from GreetingTask'<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T145743Z" creationid="95" creationdate="20160814T145743Z">
        <seg>println <bpt i="3" x="3">&lt;s3&gt;</bpt>'hello from GreetingTask'<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="3" x="3">&lt;s3&gt;</bpt>'lib2'<ept i="3">&lt;/s3&gt;</ept>
}

task notALib &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T123906Z" creationid="msdx" creationdate="20141110T123906Z">
        <seg>println <bpt i="3" x="3">&lt;s3&gt;</bpt>'lib2'<ept i="3">&lt;/s3&gt;</ept>
}

task notALib &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="3" x="3">&lt;s3&gt;</bpt>'project: '<ept i="3">&lt;/s3&gt;</ept> + project.path</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T051006Z" creationid="95" creationdate="20161211T051006Z">
        <seg>println <bpt i="3" x="3">&lt;s3&gt;</bpt>'project: '<ept i="3">&lt;/s3&gt;</ept> + project.path</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="3" x="3">&lt;s3&gt;</bpt>'srcDir: '<ept i="3">&lt;/s3&gt;</ept> + rootProject.relativePath(srcDir)
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T044950Z" creationid="95" creationdate="20161211T044950Z">
        <seg>println <bpt i="3" x="3">&lt;s3&gt;</bpt>'srcDir: '<ept i="3">&lt;/s3&gt;</ept> + rootProject.relativePath(srcDir)
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="3" x="3">&lt;s3&gt;</bpt>'taskY'<ept i="3">&lt;/s3&gt;</ept>
}

taskX.finalizedBy taskY</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T070353Z" creationid="msdx" creationdate="20141111T070353Z">
        <seg>println <bpt i="3" x="3">&lt;s3&gt;</bpt>'taskY'<ept i="3">&lt;/s3&gt;</ept>
}

taskX.finalizedBy taskY</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="4" x="4">&lt;s4&gt;</bpt>"Contents of $srcDir.name"<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T160741Z" creationid="msdx" creationdate="20141112T160741Z">
        <seg>println <bpt i="4" x="4">&lt;s4&gt;</bpt>"Contents of $srcDir.name"<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="4" x="4">&lt;s4&gt;</bpt>"Hello from the GreetingPlugin"<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T123819Z" creationid="95" creationdate="20160820T123819Z">
        <seg>println <bpt i="4" x="4">&lt;s4&gt;</bpt>"Hello from the GreetingPlugin"<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="4" x="4">&lt;s4&gt;</bpt>'notALib'<ept i="4">&lt;/s4&gt;</ept>
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T123906Z" creationid="msdx" creationdate="20141110T123906Z">
        <seg>println <bpt i="4" x="4">&lt;s4&gt;</bpt>'notALib'<ept i="4">&lt;/s4&gt;</ept>
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="4" x="4">&lt;s4&gt;</bpt>'srcDirName: '<ept i="4">&lt;/s4&gt;</ept> + srcDirName</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T051023Z" creationid="95" creationdate="20161211T051023Z">
        <seg>println <bpt i="4" x="4">&lt;s4&gt;</bpt>'srcDirName: '<ept i="4">&lt;/s4&gt;</ept> + srcDirName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="4" x="4">&lt;s4&gt;</bpt>'taskY'<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T122319Z" creationid="msdx" creationdate="20141110T122319Z">
        <seg>println <bpt i="4" x="4">&lt;s4&gt;</bpt>'taskY'<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="5" x="5">&lt;s5&gt;</bpt>"FAILED"<ept i="5">&lt;/s5&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T140117Z" creationid="95" creationdate="20160521T140117Z">
        <seg>println <bpt i="5" x="5">&lt;s5&gt;</bpt>"FAILED"<ept i="5">&lt;/s5&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <it pos="begin" x="5">&lt;s5&gt;</it>'The class directory exists.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T093718Z" creationid="msdx" creationdate="20141109T093718Z">
        <seg>println <it pos="begin" x="5">&lt;s5&gt;</it>'The class directory exists.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="5" x="5">&lt;s5&gt;</bpt>'srcDir: '<ept i="5">&lt;/s5&gt;</ept> + rootProject.relativePath(srcDir)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T051038Z" creationid="95" creationdate="20161211T051038Z">
        <seg>println <bpt i="5" x="5">&lt;s5&gt;</bpt>'srcDir: '<ept i="5">&lt;/s5&gt;</ept> + rootProject.relativePath(srcDir)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="6" x="6">&lt;s6&gt;</bpt>"$element.relativePath =&gt; $element.file"<ept i="6">&lt;/s6&gt;</ept>
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T120401Z" creationid="msdx" creationdate="20141113T120401Z">
        <seg>println <bpt i="6" x="6">&lt;s6&gt;</bpt>"$element.relativePath =&gt; $element.file"<ept i="6">&lt;/s6&gt;</ept>
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="6" x="6">&lt;s6&gt;</bpt>"[$task.name]"<ept i="6">&lt;/s6&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T154817Z" creationid="msdx" creationdate="20141116T154817Z">
        <seg>println <bpt i="6" x="6">&lt;s6&gt;</bpt>"[$task.name]"<ept i="6">&lt;/s6&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="6" x="6">&lt;s6&gt;</bpt>'I am not affected'<ept i="6">&lt;/s6&gt;</ept>
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T055252Z" creationid="msdx" creationdate="20141111T055252Z">
        <seg>println <bpt i="6" x="6">&lt;s6&gt;</bpt>'I am not affected'<ept i="6">&lt;/s6&gt;</ept>
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="7" x="7">&lt;s7&gt;</bpt>"${project.greeting.message} from ${project.greeting.greeter}"<ept i="7">&lt;/s7&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T131402Z" creationid="95" creationdate="20160820T131402Z">
        <seg>println <bpt i="7" x="7">&lt;s7&gt;</bpt>"${project.greeting.message} from ${project.greeting.greeter}"<ept i="7">&lt;/s7&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="7" x="7">&lt;s7&gt;</bpt>"done"<ept i="7">&lt;/s7&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T140124Z" creationid="95" creationdate="20160521T140124Z">
        <seg>println <bpt i="7" x="7">&lt;s7&gt;</bpt>"done"<ept i="7">&lt;/s7&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="9" x="9">&lt;s9&gt;</bpt>"out of date: ${change.file.name}"<ept i="9">&lt;/s9&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160816T145028Z" creationid="95" creationdate="20160816T145028Z">
        <seg>println <bpt i="9" x="9">&lt;s9&gt;</bpt>"out of date: ${change.file.name}"<ept i="9">&lt;/s9&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println <bpt i="9" x="9">&lt;s9&gt;</bpt>new<ept i="9">&lt;/s9&gt;</ept> String(encodedString)
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161212T154702Z" creationid="95" creationdate="20161212T154702Z">
        <seg>println <bpt i="9" x="9">&lt;s9&gt;</bpt>new<ept i="9">&lt;/s9&gt;</ept> String(encodedString)
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println System.properties[<bpt i="0" x="0">&lt;s0&gt;</bpt>'system'<ept i="0">&lt;/s0&gt;</ept>]
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T151105Z" creationid="msdx" creationdate="20141109T151105Z">
        <seg>println System.properties[<bpt i="0" x="0">&lt;s0&gt;</bpt>'system'<ept i="0">&lt;/s0&gt;</ept>]
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println ant.antProp
println ant.properties.antProp
println ant.properties[<bpt i="0" x="0">&lt;s0&gt;</bpt>'antProp'<ept i="0">&lt;/s0&gt;</ept>]</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T062233Z" creationid="msdx" creationdate="20141116T062233Z">
        <seg>println ant.antProp
println ant.properties.antProp
println ant.properties[<bpt i="0" x="0">&lt;s0&gt;</bpt>'antProp'<ept i="0">&lt;/s0&gt;</ept>]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println ant.references.antPath
println ant.references[<bpt i="0" x="0">&lt;s0&gt;</bpt>'antPath'<ept i="0">&lt;/s0&gt;</ept>]</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T062720Z" creationid="msdx" creationdate="20141116T062720Z">
        <seg>println ant.references.antPath
println ant.references[<bpt i="0" x="0">&lt;s0&gt;</bpt>'antPath'<ept i="0">&lt;/s0&gt;</ept>]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println commandLineProjectProp</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T151100Z" creationid="msdx" creationdate="20141109T151100Z">
        <seg>println commandLineProjectProp</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println conf2ScopeMappings.mappings
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T145331Z" creationid="95" creationdate="20160106T145331Z">
        <seg>println conf2ScopeMappings.mappings
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println configurations.compile.name
println configurations[<bpt i="0" x="0">&lt;s0&gt;</bpt>'compile'<ept i="0">&lt;/s0&gt;</ept>].name</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T075910Z" creationid="haohang" creationdate="20150722T075910Z">
        <seg>println configurations.compile.name
println configurations[<bpt i="0" x="0">&lt;s0&gt;</bpt>'compile'<ept i="0">&lt;/s0&gt;</ept>].name</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println dep.name</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T040602Z" creationid="haohang" creationdate="20150807T040602Z">
        <seg>println dep.name</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println emailNotification</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150710T012940Z" creationid="haohang" creationdate="20150710T012940Z">
        <seg>println emailNotification</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println envProjectProp</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T151103Z" creationid="msdx" creationdate="20141109T151103Z">
        <seg>println envProjectProp</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println file
}

<bpt i="1" x="1">&lt;s1&gt;</bpt>// Filter a tree<ept i="1">&lt;/s1&gt;</ept>
FileTree filtered = tree.matching {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T120359Z" creationid="msdx" creationdate="20141113T120359Z">
        <seg>println file
}

<bpt i="1" x="1">&lt;s1&gt;</bpt>// Filter a tree<ept i="1">&lt;/s1&gt;</ept>
FileTree filtered = tree.matching {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println file(greetingFile).text
}

greetingFile = <bpt i="4" x="4">&lt;s4&gt;</bpt>"$buildDir/hello.txt"<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T132306Z" creationid="95" creationdate="20160820T132306Z">
        <seg>println file(greetingFile).text
}

greetingFile = <bpt i="4" x="4">&lt;s4&gt;</bpt>"$buildDir/hello.txt"<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println file.name</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T034610Z" creationid="haohang" creationdate="20150807T034610Z">
        <seg>println file.name</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println file.name
}

<bpt i="1" x="1">&lt;s1&gt;</bpt>// Convert the collection to various types<ept i="1">&lt;/s1&gt;</ept>
Set set = collection.files
Set set2 = collection as Set
List list = collection as List
String path = collection.asPath
File file = collection.singleFile
File file2 = collection as File

<bpt i="2" x="2">&lt;s2&gt;</bpt>// Add and subtract collections<ept i="2">&lt;/s2&gt;</ept>
def union = collection + files(<bpt i="3" x="3">&lt;s3&gt;</bpt>'src/file3.txt'<ept i="3">&lt;/s3&gt;</ept>)
def different = collection - files(<bpt i="4" x="4">&lt;s4&gt;</bpt>'src/file3.txt'<ept i="4">&lt;/s4&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T155904Z" creationid="msdx" creationdate="20141112T155904Z">
        <seg>println file.name
}

<bpt i="1" x="1">&lt;s1&gt;</bpt>// Convert the collection to various types<ept i="1">&lt;/s1&gt;</ept>
Set set = collection.files
Set set2 = collection as Set
List list = collection as List
String path = collection.asPath
File file = collection.singleFile
File file2 = collection as File

<bpt i="2" x="2">&lt;s2&gt;</bpt>// Add and subtract collections<ept i="2">&lt;/s2&gt;</ept>
def union = collection + files(<bpt i="3" x="3">&lt;s3&gt;</bpt>'src/file3.txt'<ept i="3">&lt;/s3&gt;</ept>)
def different = collection - files(<bpt i="4" x="4">&lt;s4&gt;</bpt>'src/file3.txt'<ept i="4">&lt;/s4&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println gradlePropertiesProp</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T151101Z" creationid="msdx" creationdate="20141109T151101Z">
        <seg>println gradlePropertiesProp</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println greeting</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T151536Z" creationid="95" creationdate="20160814T151536Z">
        <seg>println greeting</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println inputs.incremental ?</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160816T145024Z" creationid="95" creationdate="20160816T145024Z">
        <seg>println inputs.incremental ?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println it</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T011229Z" creationid="msdx" creationdate="20141116T011229Z">
        <seg>println it</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println main.output.classesDir
}
sourceSets {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083248Z" creationid="msdx" creationdate="20150428T083248Z">
        <seg>println main.output.classesDir
}
sourceSets {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println name
println project.name</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T043131Z" creationid="msdx" creationdate="20141108T043131Z">
        <seg>println name
println project.name</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println name
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083249Z" creationid="msdx" creationdate="20150428T083249Z">
        <seg>println name
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println output.classesDir</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083248Z" creationid="msdx" creationdate="20150428T083248Z">
        <seg>println output.classesDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println pos.beginIndex</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T152810Z" creationid="msdx" creationdate="20141109T152810Z">
        <seg>println pos.beginIndex</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println pos.endIndex
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T152810Z" creationid="msdx" creationdate="20141109T152810Z">
        <seg>println pos.endIndex
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println project.greeting.message</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T130736Z" creationid="95" creationdate="20160820T130736Z">
        <seg>println project.greeting.message</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println relativePath(compileJava.destinationDir)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141123T151130Z" creationid="msdx" creationdate="20141123T151130Z">
        <seg>println relativePath(compileJava.destinationDir)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println relativePath(compileJava.destinationDir)
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141123T154212Z" creationid="msdx" creationdate="20141123T154212Z">
        <seg>println relativePath(compileJava.destinationDir)
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println relativePath(processResources.destinationDir)
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141123T151130Z" creationid="msdx" creationdate="20141123T151130Z">
        <seg>println relativePath(processResources.destinationDir)
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println repositories.collect { it.name }
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161215T143417Z" creationid="95" creationdate="20161215T143417Z">
        <seg>println repositories.collect { it.name }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println repositories.localRepository.name</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T133420Z" creationid="95" creationdate="20151006T133420Z">
        <seg>println repositories.localRepository.name</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println repositories[<bpt i="0" x="0">&lt;s0&gt;</bpt>'localRepository'<ept i="0">&lt;/s0&gt;</ept>].name</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T133421Z" creationid="95" creationdate="20151006T133421Z">
        <seg>println repositories[<bpt i="0" x="0">&lt;s0&gt;</bpt>'localRepository'<ept i="0">&lt;/s0&gt;</ept>].name</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println rootProject.name
println project(<bpt i="0" x="0">&lt;s0&gt;</bpt>':projectA'<ept i="0">&lt;/s0&gt;</ept>).name</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T070350Z" creationid="haohang" creationdate="20160519T070350Z">
        <seg>println rootProject.name
println project(<bpt i="0" x="0">&lt;s0&gt;</bpt>':projectA'<ept i="0">&lt;/s0&gt;</ept>).name</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println springVersion</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150710T012939Z" creationid="haohang" creationdate="20150710T012939Z">
        <seg>println springVersion</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println systemProjectProp</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T151102Z" creationid="msdx" creationdate="20141109T151102Z">
        <seg>println systemProjectProp</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println()</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T154818Z" creationid="msdx" creationdate="20141116T154818Z">
        <seg>println()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println(<bpt i="0" x="0">&lt;s0&gt;</bpt>"Consuming message: "<ept i="0">&lt;/s0&gt;</ept> + message)
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T072757Z" creationid="haohang" creationdate="20160718T072757Z">
        <seg>println(<bpt i="0" x="0">&lt;s0&gt;</bpt>"Consuming message: "<ept i="0">&lt;/s0&gt;</ept> + message)
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println(<bpt i="0" x="0">&lt;s0&gt;</bpt>"Consuming message: ${rootProject.producerMessage}"<ept i="0">&lt;/s0&gt;</ept>)
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T062400Z" creationid="haohang" creationdate="20160718T062400Z">
        <seg>println(<bpt i="0" x="0">&lt;s0&gt;</bpt>"Consuming message: ${rootProject.producerMessage}"<ept i="0">&lt;/s0&gt;</ept>)
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println(<bpt i="0" x="0">&lt;s0&gt;</bpt>'I am the new one.'<ept i="0">&lt;/s0&gt;</ept>)
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T015857Z" creationid="msdx" creationdate="20141111T015857Z">
        <seg>println(<bpt i="0" x="0">&lt;s0&gt;</bpt>'I am the new one.'<ept i="0">&lt;/s0&gt;</ept>)
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println(<bpt i="1" x="1">&lt;s1&gt;</bpt>"Consuming message: "<ept i="1">&lt;/s1&gt;</ept> + message)
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T075003Z" creationid="haohang" creationdate="20160718T075003Z">
        <seg>println(<bpt i="1" x="1">&lt;s1&gt;</bpt>"Consuming message: "<ept i="1">&lt;/s1&gt;</ept> + message)
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>println(<bpt i="1" x="1">&lt;s1&gt;</bpt>"Consuming message: ${rootProject.producerMessage}"<ept i="1">&lt;/s1&gt;</ept>)
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T071039Z" creationid="haohang" creationdate="20160718T071039Z">
        <seg>println(<bpt i="1" x="1">&lt;s1&gt;</bpt>"Consuming message: ${rootProject.producerMessage}"<ept i="1">&lt;/s1&gt;</ept>)
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>process<bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>SourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>Resources</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083225Z" creationid="msdx" creationdate="20150428T083225Z">
        <seg>process<bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>SourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>Resources</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>processResources</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083212Z" creationid="msdx" creationdate="20150428T083212Z">
        <seg>processResources</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>processTestResources</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083214Z" creationid="msdx" creationdate="20150428T083214Z">
        <seg>processTestResources</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>producer/</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T062305Z" creationid="haohang" creationdate="20160718T062305Z">
        <seg>producer/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>producer/build.gradle</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T062401Z" creationid="haohang" creationdate="20160718T062401Z">
        <seg>producer/build.gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>project</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T044156Z" creationid="msdx" creationdate="20141108T044156Z">
        <seg>project</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>project {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150510T143855Z" creationid="msdx" creationdate="20150510T143855Z">
        <seg>project</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>project(<bpt i="0" x="0">&lt;s0&gt;</bpt>":lib"<ept i="0">&lt;/s0&gt;</ept>) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160325T033426Z" creationid="haohang" creationdate="20160325T033426Z">
        <seg>project(<bpt i="0" x="0">&lt;s0&gt;</bpt>":lib"<ept i="0">&lt;/s0&gt;</ept>) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>project(<bpt i="0" x="0">&lt;s0&gt;</bpt>":project1"<ept i="0">&lt;/s0&gt;</ept>) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T091737Z" creationid="msdx" creationdate="20150512T091737Z">
        <seg>project</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>project(<bpt i="0" x="0">&lt;s0&gt;</bpt>":project2"<ept i="0">&lt;/s0&gt;</ept>) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T092003Z" creationid="msdx" creationdate="20150512T092003Z">
        <seg>project</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>project(<bpt i="0" x="0">&lt;s0&gt;</bpt>":project2"<ept i="0">&lt;/s0&gt;</ept>).sonar.project.language = <bpt i="1" x="1">&lt;s1&gt;</bpt>"groovy"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T092211Z" creationid="msdx" creationdate="20150512T092211Z">
        <seg>project(<bpt i="0" x="0">&lt;s0&gt;</bpt>":project2"<ept i="0">&lt;/s0&gt;</ept>).sonar.project.language = <bpt i="1" x="1">&lt;s1&gt;</bpt>"groovy"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>project(<bpt i="0" x="0">&lt;s0&gt;</bpt>':projectA'<ept i="0">&lt;/s0&gt;</ept>) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T082153Z" creationid="msdx" creationdate="20141110T082153Z">
        <seg>project(<bpt i="0" x="0">&lt;s0&gt;</bpt>':projectA'<ept i="0">&lt;/s0&gt;</ept>) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>project(<bpt i="0" x="0">&lt;s0&gt;</bpt>'projectA'<ept i="0">&lt;/s0&gt;</ept>) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T122311Z" creationid="msdx" creationdate="20141110T122311Z">
        <seg>project(<bpt i="0" x="0">&lt;s0&gt;</bpt>'projectA'<ept i="0">&lt;/s0&gt;</ept>) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>project-report</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104857Z" creationid="msdx" creationdate="20150428T104857Z">
        <seg>project-report</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>project.apply plugin: <bpt i="4" x="4">&lt;s4&gt;</bpt>'greeting'<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T014933Z" creationid="95" creationdate="20161211T014933Z">
        <seg>project.apply plugin: <bpt i="4" x="4">&lt;s4&gt;</bpt>'greeting'<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>project.description</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T065247Z" creationid="msdx" creationdate="20150513T065247Z">
        <seg>project.description</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>project.extensions.books = books</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T015245Z" creationid="95" creationdate="20161211T015245Z">
        <seg>project.extensions.books = books</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>project.extensions.create(<bpt i="5" x="5">&lt;s5&gt;</bpt>"greeting"<ept i="5">&lt;/s5&gt;</ept>, GreetingPluginExtension)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T130732Z" creationid="95" creationdate="20160820T130732Z">
        <seg>project.extensions.create(<bpt i="5" x="5">&lt;s5&gt;</bpt>"greeting"<ept i="5">&lt;/s5&gt;</ept>, GreetingPluginExtension)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>project.file(destination)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T132302Z" creationid="95" creationdate="20160820T132302Z">
        <seg>project.file(destination)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>project.group</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T144035Z" creationid="95" creationdate="20160105T144035Z">
        <seg>project.group</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>project.logger.lifecycle <it pos="begin" x="10">&lt;s10&gt;</it>"Repository ${repo.url} removed.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161215T144238Z" creationid="95" creationdate="20161215T144238Z">
        <seg>project.logger.lifecycle <it pos="begin" x="10">&lt;s10&gt;</it>"Repository ${repo.url} removed.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>project.modulePaths.clear()</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T074118Z" creationid="haohang" creationdate="20150625T074118Z">
        <seg>project.modulePaths.clear()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>project.name</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T160154Z" creationid="msdx" creationdate="20141113T160154Z">
        <seg>project.name</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>project.natures.clear()
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T065752Z" creationid="haohang" creationdate="20150625T065752Z">
        <seg>project.natures.clear()
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>project.projectDir</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T065249Z" creationid="msdx" creationdate="20150513T065249Z">
        <seg>project.projectDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>project.repositories {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161215T144235Z" creationid="95" creationdate="20161215T144235Z">
        <seg>project.repositories {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>project.sourceCompatibility</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T065356Z" creationid="msdx" creationdate="20150513T065356Z">
        <seg>project.sourceCompatibility</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>project.targetCompatibility</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T065358Z" creationid="msdx" creationdate="20150513T065358Z">
        <seg>project.targetCompatibility</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>project.task(<bpt i="2" x="2">&lt;s2&gt;</bpt>'test'<ept i="2">&lt;/s2&gt;</ept>) &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T125508Z" creationid="95" creationdate="20160521T125508Z">
        <seg>project.task(<bpt i="2" x="2">&lt;s2&gt;</bpt>'test'<ept i="2">&lt;/s2&gt;</ept>) &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>project.task(<bpt i="3" x="3">&lt;s3&gt;</bpt>'hello'<ept i="3">&lt;/s3&gt;</ept>) &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T123819Z" creationid="95" creationdate="20160820T123819Z">
        <seg>project.task(<bpt i="3" x="3">&lt;s3&gt;</bpt>'hello'<ept i="3">&lt;/s3&gt;</ept>) &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>project.task(<bpt i="6" x="6">&lt;s6&gt;</bpt>'hello'<ept i="6">&lt;/s6&gt;</ept>) &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T131401Z" creationid="95" creationdate="20160820T131401Z">
        <seg>project.task(<bpt i="6" x="6">&lt;s6&gt;</bpt>'hello'<ept i="6">&lt;/s6&gt;</ept>) &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>project.task(<bpt i="7" x="7">&lt;s7&gt;</bpt>'hello'<ept i="7">&lt;/s7&gt;</ept>) &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T130735Z" creationid="95" creationdate="20160820T130735Z">
        <seg>project.task(<bpt i="7" x="7">&lt;s7&gt;</bpt>'hello'<ept i="7">&lt;/s7&gt;</ept>) &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>project.tasks.withType(Jar).each {archiveTask -&gt;</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160722T091250Z" creationid="haohang" creationdate="20160722T091250Z">
        <seg>project.tasks.withType(Jar).each {archiveTask -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>project.version</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T160358Z" creationid="msdx" creationdate="20141113T160358Z">
        <seg>project.version</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>projectA.gradle</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T125520Z" creationid="95" creationdate="20160521T125520Z">
        <seg>projectA.gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>projectDir</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T044348Z" creationid="msdx" creationdate="20141108T044348Z">
        <seg>projectDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>projectDir "/projects/project-a"</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170109T124814Z" creationid="95" creationdate="20170109T124814Z">
        <seg>projectDir "/projects/project-a"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>projectDir "/projects/project-b"</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170109T124818Z" creationid="95" creationdate="20170109T124818Z">
        <seg>projectDir "/projects/project-b"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>projectName</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083245Z" creationid="msdx" creationdate="20150428T083245Z">
        <seg>projectName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>projectReport</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T061532Z" creationid="haohang" creationdate="20150628T061532Z">
        <seg>projectReport</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>projectReportDir</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T062021Z" creationid="haohang" creationdate="20150628T062021Z">
        <seg>projectReportDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>projectReportDirName</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T061916Z" creationid="haohang" creationdate="20150628T061916Z">
        <seg>projectReportDirName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>project_reports_plugin.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T063335Z" creationid="msdx" creationdate="20141116T063335Z">
        <seg>project_reports_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>project_reports_plugin.html#N1444F</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065913Z" creationid="95" creationdate="20170416T065913Z">
        <seg>project_reports_plugin.html#N1444F</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>project_reports_plugin.html#N14457</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065915Z" creationid="95" creationdate="20170416T065915Z">
        <seg>project_reports_plugin.html#N14457</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>project_reports_plugin.html#N144DE</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065916Z" creationid="95" creationdate="20170416T065916Z">
        <seg>project_reports_plugin.html#N144DE</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>project_reports_plugin.html#N144E3</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065918Z" creationid="95" creationdate="20170416T065918Z">
        <seg>project_reports_plugin.html#N144E3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>project_reports_plugin.html#N144E8</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065919Z" creationid="95" creationdate="20170416T065919Z">
        <seg>project_reports_plugin.html#N144E8</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>projects</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T061719Z" creationid="haohang" creationdate="20150628T061719Z">
        <seg>projects</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>properties[<bpt i="0" x="0">&lt;s0&gt;</bpt>"sonar.sources"<ept i="0">&lt;/s0&gt;</ept>] += sourceSets.custom.allSource.srcDirs</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150520T143105Z" creationid="msdx" creationdate="20150520T143105Z">
        <seg>properties[<bpt i="0" x="0">&lt;s0&gt;</bpt>"sonar.sources"<ept i="0">&lt;/s0&gt;</ept>] += sourceSets.custom.allSource.srcDirs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>properties[<bpt i="1" x="1">&lt;s1&gt;</bpt>"sonar.tests"<ept i="1">&lt;/s1&gt;</ept>] += sourceSets.integTest.allSource.srcDirs</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150520T143106Z" creationid="msdx" creationdate="20150520T143106Z">
        <seg>properties[<bpt i="1" x="1">&lt;s1&gt;</bpt>"sonar.tests"<ept i="1">&lt;/s1&gt;</ept>] += sourceSets.integTest.allSource.srcDirs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>property <bpt i="0" x="0">&lt;s0&gt;</bpt>"sonar.host.url"<ept i="0">&lt;/s0&gt;</ept>, <bpt i="1" x="1">&lt;s1&gt;</bpt>"http://my.server.com"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T063356Z" creationid="msdx" creationdate="20150513T063356Z">
        <seg>property <bpt i="0" x="0">&lt;s0&gt;</bpt>"sonar.host.url"<ept i="0">&lt;/s0&gt;</ept>, <bpt i="1" x="1">&lt;s1&gt;</bpt>"http://my.server.com"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>property <bpt i="0" x="0">&lt;s0&gt;</bpt>"sonar.language"<ept i="0">&lt;/s0&gt;</ept>, <bpt i="1" x="1">&lt;s1&gt;</bpt>"grvy"<ept i="1">&lt;/s1&gt;</ept> <bpt i="2" x="2">&lt;s2&gt;</bpt>// set language to Groovy<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150520T143132Z" creationid="msdx" creationdate="20150520T143132Z">
        <seg>property <bpt i="0" x="0">&lt;s0&gt;</bpt>"sonar.language"<ept i="0">&lt;/s0&gt;</ept>, <bpt i="1" x="1">&lt;s1&gt;</bpt>"grvy"<ept i="1">&lt;/s1&gt;</ept> <bpt i="2" x="2">&lt;s2&gt;</bpt>// set language to Groovy<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>property <bpt i="0" x="0">&lt;s0&gt;</bpt>"sonar.sourceEncoding"<ept i="0">&lt;/s0&gt;</ept>, <bpt i="1" x="1">&lt;s1&gt;</bpt>"UTF-8"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150519T124458Z" creationid="msdx" creationdate="20150519T124458Z">
        <seg>property <bpt i="0" x="0">&lt;s0&gt;</bpt>"sonar.sourceEncoding"<ept i="0">&lt;/s0&gt;</ept>, <bpt i="1" x="1">&lt;s1&gt;</bpt>"UTF-8"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>property <bpt i="1" x="1">&lt;s1&gt;</bpt>"sonar.language"<ept i="1">&lt;/s1&gt;</ept>, <bpt i="2" x="2">&lt;s2&gt;</bpt>"grvy"<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150519T124645Z" creationid="msdx" creationdate="20150519T124645Z">
        <seg>property <bpt i="1" x="1">&lt;s1&gt;</bpt>"sonar.language"<ept i="1">&lt;/s1&gt;</ept>, <bpt i="2" x="2">&lt;s2&gt;</bpt>"grvy"<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>property <bpt i="2" x="2">&lt;s2&gt;</bpt>"sonar.jdbc.url"<ept i="2">&lt;/s2&gt;</ept>, <bpt i="3" x="3">&lt;s3&gt;</bpt>"jdbc:mysql://my.server.com/sonar"<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141126T122707Z" creationid="msdx" creationdate="20141126T122707Z">
        <seg>property <bpt i="2" x="2">&lt;s2&gt;</bpt>"sonar.jdbc.url"<ept i="2">&lt;/s2&gt;</ept>, <bpt i="3" x="3">&lt;s3&gt;</bpt>"jdbc:mysql://my.server.com/sonar"<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>property <bpt i="4" x="4">&lt;s4&gt;</bpt>"sonar.jdbc.driverClassName"<ept i="4">&lt;/s4&gt;</ept>, <bpt i="5" x="5">&lt;s5&gt;</bpt>"com.mysql.jdbc.Driver"<ept i="5">&lt;/s5&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T063357Z" creationid="msdx" creationdate="20150513T063357Z">
        <seg>property <bpt i="4" x="4">&lt;s4&gt;</bpt>"sonar.jdbc.driverClassName"<ept i="4">&lt;/s4&gt;</ept>, <bpt i="5" x="5">&lt;s5&gt;</bpt>"com.mysql.jdbc.Driver"<ept i="5">&lt;/s5&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>property <bpt i="6" x="6">&lt;s6&gt;</bpt>"sonar.jdbc.username"<ept i="6">&lt;/s6&gt;</ept>, <bpt i="7" x="7">&lt;s7&gt;</bpt>"Fred Flintstone"<ept i="7">&lt;/s7&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T063358Z" creationid="msdx" creationdate="20150513T063358Z">
        <seg>property <bpt i="6" x="6">&lt;s6&gt;</bpt>"sonar.jdbc.username"<ept i="6">&lt;/s6&gt;</ept>, <bpt i="7" x="7">&lt;s7&gt;</bpt>"Fred Flintstone"<ept i="7">&lt;/s7&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>property <bpt i="8" x="8">&lt;s8&gt;</bpt>"sonar.jdbc.password"<ept i="8">&lt;/s8&gt;</ept>, <bpt i="9" x="9">&lt;s9&gt;</bpt>"very clever"<ept i="9">&lt;/s9&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T063358Z" creationid="msdx" creationdate="20150513T063358Z">
        <seg>property <bpt i="8" x="8">&lt;s8&gt;</bpt>"sonar.jdbc.password"<ept i="8">&lt;/s8&gt;</ept>, <bpt i="9" x="9">&lt;s9&gt;</bpt>"very clever"<ept i="9">&lt;/s9&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>propertyReport</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T061514Z" creationid="haohang" creationdate="20150628T061514Z">
        <seg>propertyReport</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>props[<bpt i="0" x="0">&lt;s0&gt;</bpt>"some.global.property"<ept i="0">&lt;/s0&gt;</ept>] = <bpt i="1" x="1">&lt;s1&gt;</bpt>"some value"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T101338Z" creationid="msdx" creationdate="20150512T101338Z">
        <seg>props[<bpt i="0" x="0">&lt;s0&gt;</bpt>"some.global.property"<ept i="0">&lt;/s0&gt;</ept>] = <bpt i="1" x="1">&lt;s1&gt;</bpt>"some value"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>props[<bpt i="0" x="0">&lt;s0&gt;</bpt>"some.project.property"<ept i="0">&lt;/s0&gt;</ept>] = <bpt i="1" x="1">&lt;s1&gt;</bpt>"some value"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T101429Z" creationid="msdx" creationdate="20150512T101429Z">
        <seg>props[<bpt i="0" x="0">&lt;s0&gt;</bpt>"some.project.property"<ept i="0">&lt;/s0&gt;</ept>] = <bpt i="1" x="1">&lt;s1&gt;</bpt>"some value"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>props[<bpt i="3" x="3">&lt;s3&gt;</bpt>"other.global.property"<ept i="3">&lt;/s3&gt;</ept>] = [<bpt i="4" x="4">&lt;s4&gt;</bpt>"foo"<ept i="4">&lt;/s4&gt;</ept>, <bpt i="5" x="5">&lt;s5&gt;</bpt>"bar"<ept i="5">&lt;/s5&gt;</ept>, <bpt i="6" x="6">&lt;s6&gt;</bpt>"baz"<ept i="6">&lt;/s6&gt;</ept>]
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T101340Z" creationid="msdx" creationdate="20150512T101340Z">
        <seg>props[<bpt i="3" x="3">&lt;s3&gt;</bpt>"other.global.property"<ept i="3">&lt;/s3&gt;</ept>] = [<bpt i="4" x="4">&lt;s4&gt;</bpt>"foo"<ept i="4">&lt;/s4&gt;</ept>, <bpt i="5" x="5">&lt;s5&gt;</bpt>"bar"<ept i="5">&lt;/s5&gt;</ept>, <bpt i="6" x="6">&lt;s6&gt;</bpt>"baz"<ept i="6">&lt;/s6&gt;</ept>]
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>props[<bpt i="3" x="3">&lt;s3&gt;</bpt>"other.project.property"<ept i="3">&lt;/s3&gt;</ept>] = [<bpt i="4" x="4">&lt;s4&gt;</bpt>"foo"<ept i="4">&lt;/s4&gt;</ept>, <bpt i="5" x="5">&lt;s5&gt;</bpt>"bar"<ept i="5">&lt;/s5&gt;</ept>, <bpt i="6" x="6">&lt;s6&gt;</bpt>"baz"<ept i="6">&lt;/s6&gt;</ept>]
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T101430Z" creationid="msdx" creationdate="20150512T101430Z">
        <seg>props[<bpt i="3" x="3">&lt;s3&gt;</bpt>"other.global.property"<ept i="3">&lt;/s3&gt;</ept>] = [<bpt i="4" x="4">&lt;s4&gt;</bpt>"foo"<ept i="4">&lt;/s4&gt;</ept>, <bpt i="5" x="5">&lt;s5&gt;</bpt>"bar"<ept i="5">&lt;/s5&gt;</ept>, <bpt i="6" x="6">&lt;s6&gt;</bpt>"baz"<ept i="6">&lt;/s6&gt;</ept>]
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>providedCompile <bpt i="4" x="4">&lt;s4&gt;</bpt>"javax.servlet:servlet-api:2.5"<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T093818Z" creationid="msdx" creationdate="20150503T093818Z">
        <seg>providedCompile <bpt i="4" x="4">&lt;s4&gt;</bpt>"javax.servlet:servlet-api:2.5"<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>providedCompile module(<bpt i="5" x="5">&lt;s5&gt;</bpt>":providedCompile:1.0"<ept i="5">&lt;/s5&gt;</ept>) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T093819Z" creationid="msdx" creationdate="20150503T093819Z">
        <seg>providedCompile module(<bpt i="5" x="5">&lt;s5&gt;</bpt>":providedCompile:1.0"<ept i="5">&lt;/s5&gt;</ept>) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>providedRuntime <bpt i="8" x="8">&lt;s8&gt;</bpt>":providedRuntime:1.0@jar"<ept i="8">&lt;/s8&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T093819Z" creationid="msdx" creationdate="20150503T093819Z">
        <seg>providedRuntime <bpt i="8" x="8">&lt;s8&gt;</bpt>":providedRuntime:1.0@jar"<ept i="8">&lt;/s8&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>provider.asNode().appendNode(<bpt i="28" x="28">&lt;s28&gt;</bpt>"data-source"<ept i="28">&lt;/s28&gt;</ept>, <bpt i="29" x="29">&lt;s29&gt;</bpt>"my/data/source"<ept i="29">&lt;/s29&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T142903Z" creationid="msdx" creationdate="20150504T142903Z">
        <seg>provider.asNode().appendNode(<bpt i="28" x="28">&lt;s28&gt;</bpt>"data-source"<ept i="28">&lt;/s28&gt;</ept>, <bpt i="29" x="29">&lt;s29&gt;</bpt>"my/data/source"<ept i="29">&lt;/s29&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>provider.asNode().fixed.find { it.<bpt i="1" x="1">&lt;s1&gt;</bpt>@facet<ept i="1">&lt;/s1&gt;</ept> == <bpt i="2" x="2">&lt;s2&gt;</bpt>'jst.java'<ept i="2">&lt;/s2&gt;</ept> }.<bpt i="3" x="3">&lt;s3&gt;</bpt>@facet<ept i="3">&lt;/s3&gt;</ept> = <bpt i="4" x="4">&lt;s4&gt;</bpt>'jst2.java'<ept i="4">&lt;/s4&gt;</ept>
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T070451Z" creationid="haohang" creationdate="20150625T070451Z">
        <seg>provider.asNode().fixed.find { it.<bpt i="1" x="1">&lt;s1&gt;</bpt>@facet<ept i="1">&lt;/s1&gt;</ept> == <bpt i="2" x="2">&lt;s2&gt;</bpt>'jst.java'<ept i="2">&lt;/s2&gt;</ept> }.<bpt i="3" x="3">&lt;s3&gt;</bpt>@facet<ept i="3">&lt;/s3&gt;</ept> = <bpt i="4" x="4">&lt;s4&gt;</bpt>'jst2.java'<ept i="4">&lt;/s4&gt;</ept>
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>provider.node.component.find { it.<bpt i="0" x="0">&lt;s0&gt;</bpt>@name<ept i="0">&lt;/s0&gt;</ept> == <bpt i="1" x="1">&lt;s1&gt;</bpt>'VcsDirectoryMappings'<ept i="1">&lt;/s1&gt;</ept> }.mapping.<bpt i="2" x="2">&lt;s2&gt;</bpt>@vcs<ept i="2">&lt;/s2&gt;</ept> = <bpt i="3" x="3">&lt;s3&gt;</bpt>'Git'<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T074625Z" creationid="haohang" creationdate="20150625T074625Z">
        <seg>provider.node.component.find { it.<bpt i="0" x="0">&lt;s0&gt;</bpt>@name<ept i="0">&lt;/s0&gt;</ept> == <bpt i="1" x="1">&lt;s1&gt;</bpt>'VcsDirectoryMappings'<ept i="1">&lt;/s1&gt;</ept> }.mapping.<bpt i="2" x="2">&lt;s2&gt;</bpt>@vcs<ept i="2">&lt;/s2&gt;</ept> = <bpt i="3" x="3">&lt;s3&gt;</bpt>'Git'<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>proxy</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T141913Z" creationid="95" creationdate="20160105T141913Z">
        <seg>proxy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>publications {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170211T140819Z" creationid="95" creationdate="20170211T140819Z">
        <seg>publications {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>publishing {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20170216T072607Z" creationid="haohang" creationdate="20170216T072607Z">
        <seg>publishing {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>publishing_ivy.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104801Z" creationid="msdx" creationdate="20150428T104801Z">
        <seg>publishing_ivy.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>publishing_ivy.html#publishing_ivy:descriptor</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T071117Z" creationid="95" creationdate="20170416T071117Z">
        <seg>publishing_ivy.html#publishing_ivy:descriptor</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>publishing_ivy.html#publishing_ivy:example</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T071123Z" creationid="95" creationdate="20170416T071123Z">
        <seg>publishing_ivy.html#publishing_ivy:example</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>publishing_ivy.html#publishing_ivy:future</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T071128Z" creationid="95" creationdate="20170416T071128Z">
        <seg>publishing_ivy.html#publishing_ivy:future</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>publishing_ivy.html#publishing_ivy:plugin</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T071049Z" creationid="95" creationdate="20170416T071049Z">
        <seg>publishing_ivy.html#publishing_ivy:plugin</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>publishing_ivy.html#publishing_ivy:publications</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170211T025616Z" creationid="95" creationdate="20170211T025616Z">
        <seg>publishing_ivy.html#publishing_ivy:publications</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>publishing_ivy.html#publishing_ivy:publishing</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T071111Z" creationid="95" creationdate="20170416T071111Z">
        <seg>publishing_ivy.html#publishing_ivy:publishing</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>publishing_ivy.html#publishing_ivy:repositories</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170211T025809Z" creationid="95" creationdate="20170211T025809Z">
        <seg>publishing_ivy.html#publishing_ivy:repositories</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>publishing_maven.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104801Z" creationid="msdx" creationdate="20150428T104801Z">
        <seg>publishing_maven.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>publishing_maven.html#N16E9F</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T071138Z" creationid="95" creationdate="20170416T071138Z">
        <seg>publishing_maven.html#N16E9F</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>publishing_maven.html#publishing_maven:generate-pom</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T071155Z" creationid="95" creationdate="20170416T071155Z">
        <seg>publishing_maven.html#publishing_maven:generate-pom</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>publishing_maven.html#publishing_maven:install</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T071151Z" creationid="95" creationdate="20170416T071151Z">
        <seg>publishing_maven.html#publishing_maven:install</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>publishing_maven.html#publishing_maven:publications</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170412T152804Z" creationid="95" creationdate="20170412T152804Z">
        <seg>publishing_maven.html#publishing_maven:publications</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>publishing_maven.html#publishing_maven:publishing</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T071149Z" creationid="95" creationdate="20170416T071149Z">
        <seg>publishing_maven.html#publishing_maven:publishing</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>publishing_maven.html#publishing_maven:repositories</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170412T152842Z" creationid="95" creationdate="20170412T152842Z">
        <seg>publishing_maven.html#publishing_maven:repositories</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>purpose = <bpt i="3" x="3">&lt;s3&gt;</bpt>"production"<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T050715Z" creationid="msdx" creationdate="20141108T050715Z">
        <seg>purpose = <bpt i="3" x="3">&lt;s3&gt;</bpt>"production"<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>purpose = <bpt i="4" x="4">&lt;s4&gt;</bpt>"test"<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150710T012931Z" creationid="haohang" creationdate="20150710T012931Z">
        <seg>purpose = <bpt i="4" x="4">&lt;s4&gt;</bpt>"test"<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>purpose = <bpt i="5" x="5">&lt;s5&gt;</bpt>"production"<ept i="5">&lt;/s5&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150710T012937Z" creationid="haohang" creationdate="20150710T012937Z">
        <seg>purpose = <bpt i="5" x="5">&lt;s5&gt;</bpt>"production"<ept i="5">&lt;/s5&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>quickStart {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T015221Z" creationid="95" creationdate="20161211T015221Z">
        <seg>quickStart {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>rc {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160325T020938Z" creationid="haohang" creationdate="20160325T020938Z">
        <seg>rc {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>rcCompiler.args <bpt i="0" x="0">&lt;s0&gt;</bpt>"/v"<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160325T023107Z" creationid="haohang" creationdate="20160325T023107Z">
        <seg>rcCompiler.args <bpt i="0" x="0">&lt;s0&gt;</bpt>"/v"<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>release</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160401T090303Z" creationid="haohang" creationdate="20160401T090303Z">
        <seg>release</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>releases</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T141908Z" creationid="95" creationdate="20160105T141908Z">
        <seg>releases</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>remove repo</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161215T144239Z" creationid="95" creationdate="20161215T144239Z">
        <seg>remove repo</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>rename <bpt i="6" x="6">&lt;s6&gt;</bpt>'(.+)-staging-(.+)'<ept i="6">&lt;/s6&gt;</ept>, <bpt i="7" x="7">&lt;s7&gt;</bpt>'$1$2'<ept i="7">&lt;/s7&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T140715Z" creationid="msdx" creationdate="20141113T140715Z">
        <seg>rename <bpt i="6" x="6">&lt;s6&gt;</bpt>'(.+)-staging-(.+)'<ept i="6">&lt;/s6&gt;</ept>, <bpt i="7" x="7">&lt;s7&gt;</bpt>'$1$2'<ept i="7">&lt;/s7&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>rename { String fileName -&gt;</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T140712Z" creationid="msdx" creationdate="20141113T140712Z">
        <seg>rename { String fileName -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>rename(/(.+)-staging-(.+)/, <bpt i="8" x="8">&lt;s8&gt;</bpt>'$1$2'<ept i="8">&lt;/s8&gt;</ept>)
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T140715Z" creationid="msdx" creationdate="20141113T140715Z">
        <seg>rename(/(.+)-staging-(.+)/, <bpt i="8" x="8">&lt;s8&gt;</bpt>'$1$2'<ept i="8">&lt;/s8&gt;</ept>)
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>reportOn subprojects*.test
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T142812Z" creationid="msdx" creationdate="20150428T142812Z">
        <seg>reportOn subprojects*.test
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>reporting-base</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104858Z" creationid="msdx" creationdate="20150428T104858Z">
        <seg>reporting-base</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>reports</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083235Z" creationid="msdx" creationdate="20150428T083235Z">
        <seg>reports</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>reports {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T132000Z" creationid="msdx" creationdate="20150506T132000Z">
        <seg>reports</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>reports.html.enabled = false</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083544Z" creationid="msdx" creationdate="20150428T083544Z">
        <seg>reports.html.enabled = false</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>reports/jacoco/applicationCodeCoverageReport/html/</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T135831Z" creationid="msdx" creationdate="20150506T135831Z">
        <seg>reports/jacoco/applicationCodeCoverageReport/html/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>reportsDir</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083235Z" creationid="msdx" creationdate="20150428T083235Z">
        <seg>reportsDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>reportsDir = file(<bpt i="1" x="1">&lt;s1&gt;</bpt>"$buildDir/customJacocoReportDir"<ept i="1">&lt;/s1&gt;</ept>)
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T131555Z" creationid="msdx" creationdate="20150506T131555Z">
        <seg>reportsDir = file(<bpt i="1" x="1">&lt;s1&gt;</bpt>"$buildDir/customJacocoReportDir"<ept i="1">&lt;/s1&gt;</ept>)
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>reportsDirName</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083234Z" creationid="msdx" creationdate="20150428T083234Z">
        <seg>reportsDirName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>repositories {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104652Z" creationid="msdx" creationdate="20150428T104652Z">
        <seg>repositories {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>repositories.each{</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161215T144246Z" creationid="95" creationdate="20161215T144246Z">
        <seg>repositories.each{</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>repositories.mavenDeployer {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T134853Z" creationid="95" creationdate="20160105T134853Z">
        <seg>repositories.mavenDeployer {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>repositories.mavenInstaller {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T143451Z" creationid="95" creationdate="20160106T143451Z">
        <seg>repositories.mavenInstaller {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>repositories{</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161215T144244Z" creationid="95" creationdate="20161215T144244Z">
        <seg>repositories{</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>repository</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T141901Z" creationid="95" creationdate="20160105T141901Z">
        <seg>repository</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>repository(url: <bpt i="0" x="0">&lt;s0&gt;</bpt>"file://localhost/tmp/myRepo/"<ept i="0">&lt;/s0&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T142732Z" creationid="95" creationdate="20160106T142732Z">
        <seg>repository(url: <bpt i="0" x="0">&lt;s0&gt;</bpt>"file://localhost/tmp/myRepo/"<ept i="0">&lt;/s0&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>repository(url: <bpt i="1" x="1">&lt;s1&gt;</bpt>"file://localhost/tmp/myRepo/"<ept i="1">&lt;/s1&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160104T154225Z" creationid="95" creationdate="20160104T154225Z">
        <seg>repository(url: <bpt i="1" x="1">&lt;s1&gt;</bpt>"file://localhost/tmp/myRepo/"<ept i="1">&lt;/s1&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>repository(url: <bpt i="1" x="1">&lt;s1&gt;</bpt>"scp://repos.mycompany.com/releases"<ept i="1">&lt;/s1&gt;</ept>) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T134855Z" creationid="95" creationdate="20160105T134855Z">
        <seg>repository(url: <bpt i="1" x="1">&lt;s1&gt;</bpt>"scp://repos.mycompany.com/releases"<ept i="1">&lt;/s1&gt;</ept>) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>required { isReleaseVersion &amp;&amp; gradle.taskGraph.hasTask(<bpt i="2" x="2">&lt;s2&gt;</bpt>"uploadArchives"<ept i="2">&lt;/s2&gt;</ept>) }</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160126T141412Z" creationid="95" creationdate="20160126T141412Z">
        <seg>required { isReleaseVersion &amp;&amp; gradle.taskGraph.hasTask(<bpt i="2" x="2">&lt;s2&gt;</bpt>"uploadArchives"<ept i="2">&lt;/s2&gt;</ept>) }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>resolutionStrategy.cacheChangingModulesFor <bpt i="0" x="0">&lt;s0&gt;</bpt>4<ept i="0">&lt;/s0&gt;</ept>, <bpt i="1" x="1">&lt;s1&gt;</bpt>'hours'<ept i="1">&lt;/s1&gt;</ept>
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20151130T032622Z" creationid="haohang" creationdate="20151130T032622Z">
        <seg>resolutionStrategy.cacheChangingModulesFor <bpt i="0" x="0">&lt;s0&gt;</bpt>4<ept i="0">&lt;/s0&gt;</ept>, <bpt i="1" x="1">&lt;s1&gt;</bpt>'hours'<ept i="1">&lt;/s1&gt;</ept>
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>resolutionStrategy.cacheDynamicVersionsFor <bpt i="0" x="0">&lt;s0&gt;</bpt>10<ept i="0">&lt;/s0&gt;</ept>, <bpt i="1" x="1">&lt;s1&gt;</bpt>'minutes'<ept i="1">&lt;/s1&gt;</ept>
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T155000Z" creationid="95" creationdate="20151129T155000Z">
        <seg>resolutionStrategy.cacheDynamicVersionsFor <bpt i="0" x="0">&lt;s0&gt;</bpt>10<ept i="0">&lt;/s0&gt;</ept>, <bpt i="1" x="1">&lt;s1&gt;</bpt>'minutes'<ept i="1">&lt;/s1&gt;</ept>
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>resolutionStrategy.eachDependency { DependencyResolveDetails details -&gt;</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T061531Z" creationid="95" creationdate="20151115T061531Z">
        <seg>resolutionStrategy.eachDependency { DependencyResolveDetails details -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>resolve.dynamicMode = true</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T091454Z" creationid="95" creationdate="20151115T091454Z">
        <seg>resolve.dynamicMode = true</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>resolve.dynamicMode = true
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T091500Z" creationid="95" creationdate="20151115T091500Z">
        <seg>resolve.dynamicMode = true
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>resources</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083420Z" creationid="msdx" creationdate="20150428T083420Z">
        <seg>resources</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>resources + java</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083422Z" creationid="msdx" creationdate="20150428T083422Z">
        <seg>resources + java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>resources {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083231Z" creationid="msdx" creationdate="20150428T083231Z">
        <seg>resources {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>resources.srcDirs</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083420Z" creationid="msdx" creationdate="20150428T083420Z">
        <seg>resources.srcDirs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>result.failure.printStackTrace()</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T154821Z" creationid="msdx" creationdate="20141116T154821Z">
        <seg>result.failure.printStackTrace()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>return 0;
}

int suite_clean(void) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160504T150240Z" creationid="95" creationdate="20160504T150240Z">
        <seg>return 0;
}

int suite_clean(void) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>return 0;
}

void gradle_cunit_register() {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160504T150241Z" creationid="95" creationdate="20160504T150241Z">
        <seg>return 0;
}

void gradle_cunit_register() {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>revision <bpt i="2" x="2">&lt;s2&gt;</bpt>'1.1'<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20170217T083154Z" creationid="haohang" creationdate="20170217T083154Z">
        <seg>revision <bpt i="2" x="2">&lt;s2&gt;</bpt>'1.1'<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>revision <bpt i="4" x="4">&lt;s4&gt;</bpt>'2.3'<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170304T033030Z" creationid="95" creationdate="20170304T033030Z">
        <seg>revision <bpt i="4" x="4">&lt;s4&gt;</bpt>'2.3'<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>revision <bpt i="7" x="7">&lt;s7&gt;</bpt>'2'<ept i="7">&lt;/s7&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170304T033037Z" creationid="95" creationdate="20170304T033037Z">
        <seg>revision <bpt i="7" x="7">&lt;s7&gt;</bpt>'2'<ept i="7">&lt;/s7&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>root</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T141853Z" creationid="95" creationdate="20160105T141853Z">
        <seg>root</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>rootProject {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T091801Z" creationid="haohang" creationdate="20150628T091801Z">
        <seg>rootProject {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>rootProject.dependencies {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161212T152642Z" creationid="95" creationdate="20161212T152642Z">
        <seg>rootProject.dependencies {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>rootProject.name = <bpt i="0" x="0">&lt;s0&gt;</bpt>'main'<ept i="0">&lt;/s0&gt;</ept>
project(<bpt i="1" x="1">&lt;s1&gt;</bpt>':projectA'<ept i="1">&lt;/s1&gt;</ept>).projectDir = <bpt i="2" x="2">&lt;s2&gt;</bpt>new<ept i="2">&lt;/s2&gt;</ept> File(settingsDir, <bpt i="3" x="3">&lt;s3&gt;</bpt>'../my-project-a'<ept i="3">&lt;/s3&gt;</ept>)
project(<bpt i="4" x="4">&lt;s4&gt;</bpt>':projectA'<ept i="4">&lt;/s4&gt;</ept>).buildFileName = <bpt i="5" x="5">&lt;s5&gt;</bpt>'projectA.gradle'<ept i="5">&lt;/s5&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T070500Z" creationid="haohang" creationdate="20160519T070500Z">
        <seg>rootProject.name = <bpt i="0" x="0">&lt;s0&gt;</bpt>'main'<ept i="0">&lt;/s0&gt;</ept>
project(<bpt i="1" x="1">&lt;s1&gt;</bpt>':projectA'<ept i="1">&lt;/s1&gt;</ept>).projectDir = <bpt i="2" x="2">&lt;s2&gt;</bpt>new<ept i="2">&lt;/s2&gt;</ept> File(settingsDir, <bpt i="3" x="3">&lt;s3&gt;</bpt>'../my-project-a'<ept i="3">&lt;/s3&gt;</ept>)
project(<bpt i="4" x="4">&lt;s4&gt;</bpt>':projectA'<ept i="4">&lt;/s4&gt;</ept>).buildFileName = <bpt i="5" x="5">&lt;s5&gt;</bpt>'projectA.gradle'<ept i="5">&lt;/s5&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>rootProject.producerMessage = <bpt i="0" x="0">&lt;s0&gt;</bpt>'Watch the order of evaluation.'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T072757Z" creationid="haohang" creationdate="20160718T072757Z">
        <seg>rootProject.producerMessage = <bpt i="0" x="0">&lt;s0&gt;</bpt>'Watch the order of evaluation.'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>rootProject.producerMessage = <bpt i="1" x="1">&lt;s1&gt;</bpt>'Watch the order of execution.'<ept i="1">&lt;/s1&gt;</ept>
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T062405Z" creationid="haohang" creationdate="20160718T062405Z">
        <seg>rootProject.producerMessage = <bpt i="1" x="1">&lt;s1&gt;</bpt>'Watch the order of execution.'<ept i="1">&lt;/s1&gt;</ept>
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>run</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150702T105009Z" creationid="haohang" creationdate="20150702T105009Z">
        <seg>run</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>run.exec</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T135830Z" creationid="msdx" creationdate="20150506T135830Z">
        <seg>run.exec</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>runtime</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083231Z" creationid="msdx" creationdate="20150428T083231Z">
        <seg>runtime</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>runtime <bpt i="0" x="0">&lt;s0&gt;</bpt>":junit:4.10"<ept i="0">&lt;/s0&gt;</ept>, <bpt i="1" x="1">&lt;s1&gt;</bpt>":testng"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T103549Z" creationid="haohang" creationdate="20150801T103549Z">
        <seg>runtime <bpt i="0" x="0">&lt;s0&gt;</bpt>":junit:4.10"<ept i="0">&lt;/s0&gt;</ept>, <bpt i="1" x="1">&lt;s1&gt;</bpt>":testng"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>runtime <bpt i="0" x="0">&lt;s0&gt;</bpt>"org.groovy:groovy:2.2.0@jar"<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150731T034555Z" creationid="haohang" creationdate="20150731T034555Z">
        <seg>runtime <bpt i="0" x="0">&lt;s0&gt;</bpt>"org.groovy:groovy:2.2.0@jar"<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>runtime <bpt i="3" x="3">&lt;s3&gt;</bpt>'org.springframework:spring-core:2.5'<ept i="3">&lt;/s3&gt;</ept>, <bpt i="4" x="4">&lt;s4&gt;</bpt>'org.springframework:spring-aop:2.5'<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T102832Z" creationid="haohang" creationdate="20150722T102832Z">
        <seg>runtime <bpt i="3" x="3">&lt;s3&gt;</bpt>'org.springframework:spring-core:2.5'<ept i="3">&lt;/s3&gt;</ept>, <bpt i="4" x="4">&lt;s4&gt;</bpt>'org.springframework:spring-aop:2.5'<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>runtime <bpt i="7" x="7">&lt;s7&gt;</bpt>":runtime:1.0"<ept i="7">&lt;/s7&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T093819Z" creationid="msdx" creationdate="20150503T093819Z">
        <seg>runtime <bpt i="7" x="7">&lt;s7&gt;</bpt>":runtime:1.0"<ept i="7">&lt;/s7&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>runtime fileTree(dir: <bpt i="2" x="2">&lt;s2&gt;</bpt>'libs'<ept i="2">&lt;/s2&gt;</ept>, include: <bpt i="3" x="3">&lt;s3&gt;</bpt>'*.jar'<ept i="3">&lt;/s3&gt;</ept>)
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T094146Z" creationid="haohang" creationdate="20150801T094146Z">
        <seg>runtime fileTree(dir: <bpt i="2" x="2">&lt;s2&gt;</bpt>'libs'<ept i="2">&lt;/s2&gt;</ept>, include: <bpt i="3" x="3">&lt;s3&gt;</bpt>'*.jar'<ept i="3">&lt;/s3&gt;</ept>)
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>runtime files(<bpt i="0" x="0">&lt;s0&gt;</bpt>'libs/a.jar'<ept i="0">&lt;/s0&gt;</ept>, <bpt i="1" x="1">&lt;s1&gt;</bpt>'libs/b.jar'<ept i="1">&lt;/s1&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T094146Z" creationid="haohang" creationdate="20150801T094146Z">
        <seg>runtime files(<bpt i="0" x="0">&lt;s0&gt;</bpt>'libs/a.jar'<ept i="0">&lt;/s0&gt;</ept>, <bpt i="1" x="1">&lt;s1&gt;</bpt>'libs/b.jar'<ept i="1">&lt;/s1&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>runtime groovy, hibernate
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T103705Z" creationid="haohang" creationdate="20150801T103705Z">
        <seg>runtime groovy, hibernate
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>runtime group: <bpt i="0" x="0">&lt;s0&gt;</bpt>'org.somegroup'<ept i="0">&lt;/s0&gt;</ept>, name: <bpt i="1" x="1">&lt;s1&gt;</bpt>'somedependency'<ept i="1">&lt;/s1&gt;</ept>, version: <bpt i="2" x="2">&lt;s2&gt;</bpt>'1.0'<ept i="2">&lt;/s2&gt;</ept>, configuration: <bpt i="3" x="3">&lt;s3&gt;</bpt>'someConfiguration'<ept i="3">&lt;/s3&gt;</ept>
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T032719Z" creationid="haohang" creationdate="20150807T032719Z">
        <seg>runtime group: <bpt i="0" x="0">&lt;s0&gt;</bpt>'org.somegroup'<ept i="0">&lt;/s0&gt;</ept>, name: <bpt i="1" x="1">&lt;s1&gt;</bpt>'somedependency'<ept i="1">&lt;/s1&gt;</ept>, version: <bpt i="2" x="2">&lt;s2&gt;</bpt>'1.0'<ept i="2">&lt;/s2&gt;</ept>, configuration: <bpt i="3" x="3">&lt;s3&gt;</bpt>'someConfiguration'<ept i="3">&lt;/s3&gt;</ept>
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>runtime group: <bpt i="0" x="0">&lt;s0&gt;</bpt>'org.springframework'<ept i="0">&lt;/s0&gt;</ept>, name: <bpt i="1" x="1">&lt;s1&gt;</bpt>'spring-core'<ept i="1">&lt;/s1&gt;</ept>, version: <bpt i="2" x="2">&lt;s2&gt;</bpt>'2.5'<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T102830Z" creationid="haohang" creationdate="20150722T102830Z">
        <seg>runtime group: <bpt i="0" x="0">&lt;s0&gt;</bpt>'org.springframework'<ept i="0">&lt;/s0&gt;</ept>, name: <bpt i="1" x="1">&lt;s1&gt;</bpt>'spring-core'<ept i="1">&lt;/s1&gt;</ept>, version: <bpt i="2" x="2">&lt;s2&gt;</bpt>'2.5'<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>runtime group: <bpt i="12" x="12">&lt;s12&gt;</bpt>'org.hibernate'<ept i="12">&lt;/s12&gt;</ept>, name: <bpt i="13" x="13">&lt;s13&gt;</bpt>'hibernate'<ept i="13">&lt;/s13&gt;</ept>, version: <bpt i="14" x="14">&lt;s14&gt;</bpt>'3.0.5'<ept i="14">&lt;/s14&gt;</ept>, transitive: true</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T102850Z" creationid="haohang" creationdate="20150722T102850Z">
        <seg>runtime group: <bpt i="12" x="12">&lt;s12&gt;</bpt>'org.hibernate'<ept i="12">&lt;/s12&gt;</ept>, name: <bpt i="13" x="13">&lt;s13&gt;</bpt>'hibernate'<ept i="13">&lt;/s13&gt;</ept>, version: <bpt i="14" x="14">&lt;s14&gt;</bpt>'3.0.5'<ept i="14">&lt;/s14&gt;</ept>, transitive: true</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>runtime group: <bpt i="1" x="1">&lt;s1&gt;</bpt>'org.groovy'<ept i="1">&lt;/s1&gt;</ept>, name: <bpt i="2" x="2">&lt;s2&gt;</bpt>'groovy'<ept i="2">&lt;/s2&gt;</ept>, version: <bpt i="3" x="3">&lt;s3&gt;</bpt>'2.2.0'<ept i="3">&lt;/s3&gt;</ept>, ext: <bpt i="4" x="4">&lt;s4&gt;</bpt>'jar'<ept i="4">&lt;/s4&gt;</ept>
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150731T034556Z" creationid="haohang" creationdate="20150731T034556Z">
        <seg>runtime group: <bpt i="1" x="1">&lt;s1&gt;</bpt>'org.groovy'<ept i="1">&lt;/s1&gt;</ept>, name: <bpt i="2" x="2">&lt;s2&gt;</bpt>'groovy'<ept i="2">&lt;/s2&gt;</ept>, version: <bpt i="3" x="3">&lt;s3&gt;</bpt>'2.2.0'<ept i="3">&lt;/s3&gt;</ept>, ext: <bpt i="4" x="4">&lt;s4&gt;</bpt>'jar'<ept i="4">&lt;/s4&gt;</ept>
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>runtime module(<bpt i="0" x="0">&lt;s0&gt;</bpt>"org.codehaus.groovy:groovy-all:2.2.0"<ept i="0">&lt;/s0&gt;</ept>) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T091420Z" creationid="haohang" creationdate="20150801T091420Z">
        <seg>runtime module(<bpt i="0" x="0">&lt;s0&gt;</bpt>"org.codehaus.groovy:groovy-all:2.2.0"<ept i="0">&lt;/s0&gt;</ept>) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>runtime name: <bpt i="2" x="2">&lt;s2&gt;</bpt>'testng'<ept i="2">&lt;/s2&gt;</ept> 
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T103550Z" creationid="haohang" creationdate="20150801T103550Z">
        <seg>runtime name: <bpt i="2" x="2">&lt;s2&gt;</bpt>'testng'<ept i="2">&lt;/s2&gt;</ept> 
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>runtime project(path)
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161212T152643Z" creationid="95" creationdate="20161212T152643Z">
        <seg>runtime project(path)
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>runtime {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T075935Z" creationid="haohang" creationdate="20150722T075935Z">
        <seg>runtime {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>runtime(</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T102836Z" creationid="haohang" creationdate="20150722T102832Z">
        <seg>runtime(</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>runtime(<bpt i="11" x="11">&lt;s11&gt;</bpt>'org.hibernate:hibernate:3.0.5'<ept i="11">&lt;/s11&gt;</ept>) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T102848Z" creationid="haohang" creationdate="20150722T102848Z">
        <seg>runtime(<bpt i="11" x="11">&lt;s11&gt;</bpt>'org.hibernate:hibernate:3.0.5'<ept i="11">&lt;/s11&gt;</ept>) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>runtime(group: <bpt i="15" x="15">&lt;s15&gt;</bpt>'org.hibernate'<ept i="15">&lt;/s15&gt;</ept>, name: <bpt i="16" x="16">&lt;s16&gt;</bpt>'hibernate'<ept i="16">&lt;/s16&gt;</ept>, version: <bpt i="17" x="17">&lt;s17&gt;</bpt>'3.0.5'<ept i="17">&lt;/s17&gt;</ept>) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T102850Z" creationid="haohang" creationdate="20150722T102850Z">
        <seg>runtime(group: <bpt i="15" x="15">&lt;s15&gt;</bpt>'org.hibernate'<ept i="15">&lt;/s15&gt;</ept>, name: <bpt i="16" x="16">&lt;s16&gt;</bpt>'hibernate'<ept i="16">&lt;/s16&gt;</ept>, version: <bpt i="17" x="17">&lt;s17&gt;</bpt>'3.0.5'<ept i="17">&lt;/s17&gt;</ept>) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>runtime, testCompile</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083232Z" creationid="msdx" creationdate="20150428T083232Z">
        <seg>runtime, testCompile</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>runtimeClasspath</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083255Z" creationid="msdx" creationdate="20150428T083255Z">
        <seg>runtimeClasspath</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sample_list.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170412T150630Z" creationid="95" creationdate="20170412T150630Z">
        <seg>sample_list.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>scala</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141126T121121Z" creationid="msdx" creationdate="20141126T121121Z">
        <seg>scala</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>scala {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T152730Z" creationid="msdx" creationdate="20150429T152730Z">
        <seg>scala</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>scala-base</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104931Z" creationid="msdx" creationdate="20150428T104931Z">
        <seg>scala-base</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>scala.srcDirs</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150430T154830Z" creationid="msdx" creationdate="20150430T154830Z">
        <seg>scala.srcDirs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>scalaCompileOptions.daemonServer = <bpt i="1" x="1">&lt;s1&gt;</bpt>"localhost:4243"<ept i="1">&lt;/s1&gt;</ept>
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150430T155215Z" creationid="msdx" creationdate="20150430T155215Z">
        <seg>scalaCompileOptions.daemonServer = <bpt i="1" x="1">&lt;s1&gt;</bpt>"localhost:4243"<ept i="1">&lt;/s1&gt;</ept>
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>scalaCompileOptions.useAnt = false
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T154308Z" creationid="msdx" creationdate="20150501T154308Z">
        <seg>scalaCompileOptions.useAnt = false
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>scalaCompileOptions.useCompileDaemon = true</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150430T155214Z" creationid="msdx" creationdate="20150430T155214Z">
        <seg>scalaCompileOptions.useCompileDaemon = true</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>scala_plugin.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141126T121119Z" creationid="msdx" creationdate="20141126T121119Z">
        <seg>scala_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>scala_plugin.html#N12CDE</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131948Z" creationid="msdx" creationdate="20150509T131948Z">
        <seg>scala_plugin.html#N12CDE</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>scala_plugin.html#N12CED</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131951Z" creationid="msdx" creationdate="20150509T131951Z">
        <seg>scala_plugin.html#N12CED</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>scala_plugin.html#N12D94</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131953Z" creationid="msdx" creationdate="20150509T131953Z">
        <seg>scala_plugin.html#N12D94</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>scala_plugin.html#N12E2D</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131955Z" creationid="msdx" creationdate="20150509T131955Z">
        <seg>scala_plugin.html#N12E2D</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>scala_plugin.html#N12E95</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T132005Z" creationid="msdx" creationdate="20150509T132005Z">
        <seg>scala_plugin.html#N12E95</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>scala_plugin.html#N12E9A</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T132008Z" creationid="msdx" creationdate="20150509T132008Z">
        <seg>scala_plugin.html#N12E9A</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>scala_plugin.html#N12F37</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T132010Z" creationid="msdx" creationdate="20150509T132010Z">
        <seg>scala_plugin.html#N12F37</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>scala_plugin.html#N12F54</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T132020Z" creationid="msdx" creationdate="20150509T132020Z">
        <seg>scala_plugin.html#N12F54</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>scala_plugin.html#N12F78</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T132105Z" creationid="msdx" creationdate="20150509T132105Z">
        <seg>scala_plugin.html#N12F78</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>scala_plugin.html#N12FCC</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T132113Z" creationid="msdx" creationdate="20150509T132110Z">
        <seg>scala_plugin.html#N12FCC</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>scala_plugin.html#N12FD1</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T132121Z" creationid="msdx" creationdate="20150509T132121Z">
        <seg>scala_plugin.html#N12FD1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>scala_plugin.html#sec:configure_scala_classpath</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T082245Z" creationid="msdx" creationdate="20150503T082245Z">
        <seg>scala_plugin.html#sec:configure_scala_classpath</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>scaladoc</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T145512Z" creationid="msdx" creationdate="20150429T145512Z">
        <seg>scaladoc</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sealife</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T034239Z" creationid="haohang" creationdate="20150807T034239Z">
        <seg>sealife</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sealife <bpt i="0" x="0">&lt;s0&gt;</bpt>"sea.mammals:orca:1.0"<ept i="0">&lt;/s0&gt;</ept>, <bpt i="1" x="1">&lt;s1&gt;</bpt>"sea.fish:shark:1.0"<ept i="1">&lt;/s1&gt;</ept>, <bpt i="2" x="2">&lt;s2&gt;</bpt>"sea.fish:tuna:1.0"<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T034241Z" creationid="haohang" creationdate="20150807T034241Z">
        <seg>sealife <bpt i="0" x="0">&lt;s0&gt;</bpt>"sea.mammals:orca:1.0"<ept i="0">&lt;/s0&gt;</ept>, <bpt i="1" x="1">&lt;s1&gt;</bpt>"sea.fish:shark:1.0"<ept i="1">&lt;/s1&gt;</ept>, <bpt i="2" x="2">&lt;s2&gt;</bpt>"sea.fish:tuna:1.0"<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>securityRole <bpt i="25" x="25">&lt;s25&gt;</bpt>"admin"<ept i="25">&lt;/s25&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T142901Z" creationid="msdx" creationdate="20150504T142901Z">
        <seg>securityRole <bpt i="25" x="25">&lt;s25&gt;</bpt>"admin"<ept i="25">&lt;/s25&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>securityRole <bpt i="26" x="26">&lt;s26&gt;</bpt>"superadmin"<ept i="26">&lt;/s26&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T142902Z" creationid="msdx" creationdate="20150504T142902Z">
        <seg>securityRole <bpt i="26" x="26">&lt;s26&gt;</bpt>"superadmin"<ept i="26">&lt;/s26&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>see <bpt i="0" x="0">&lt;a0&gt;</bpt>Section 23.5, “Dependency management”<ept i="0">&lt;/a0&gt;</ept> for details.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T075336Z" creationid="haohang" creationdate="20150722T075336Z">
        <seg>详细信息请参阅<bpt i="0" x="0">&lt;a0&gt;</bpt>第 23.5 节，“依赖管理”<ept i="0">&lt;/a0&gt;</ept> 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>server {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150510T143649Z" creationid="msdx" creationdate="20150510T143649Z">
        <seg>server {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>server.url</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T053933Z" creationid="msdx" creationdate="20150513T053933Z">
        <seg>server.url</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>services/personService/</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T083508Z" creationid="haohang" creationdate="20160726T083508Z">
        <seg>services/personService/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sessionId</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T132320Z" creationid="msdx" creationdate="20150506T132320Z">
        <seg>sessionId</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>settings.gradle</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160519T025305Z" creationid="haohang" creationdate="20160519T025305Z">
        <seg>settings.gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>shared/</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T083513Z" creationid="haohang" creationdate="20160726T083513Z">
        <seg>shared/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>shark-1.0 -&gt; seal-2.0, tuna-1.0</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T034313Z" creationid="haohang" creationdate="20150807T034313Z">
        <seg>shark-1.0 -&gt; seal-2.0, tuna-1.0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>showSql</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T053936Z" creationid="msdx" creationdate="20150513T053936Z">
        <seg>showSql</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>showSqlResults</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T053936Z" creationid="msdx" creationdate="20150513T053936Z">
        <seg>showSqlResults</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sign configurations.archives
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160109T072233Z" creationid="95" creationdate="20160109T072233Z">
        <seg>sign configurations.archives
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sign stuffZip
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160109T073103Z" creationid="95" creationdate="20160109T073103Z">
        <seg>sign stuffZip
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>signing</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104859Z" creationid="msdx" creationdate="20150428T104859Z">
        <seg>signing</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>signing {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160109T072231Z" creationid="95" creationdate="20160109T072231Z">
        <seg>signing {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>signing.keyId=24875D73
signing.password=secret
signing.secretKeyRingFile=/Users/me/.gnupg/secring.gpg</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160108T152514Z" creationid="95" creationdate="20160108T152514Z">
        <seg>signing.keyId=24875D73
signing.password=secret
signing.secretKeyRingFile=/Users/me/.gnupg/secring.gpg</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>signing_plugin.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104859Z" creationid="msdx" creationdate="20150428T104859Z">
        <seg>signing_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>signing_plugin.html#N156EC</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070322Z" creationid="95" creationdate="20170416T070322Z">
        <seg>signing_plugin.html#N156EC</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>signing_plugin.html#N156FB</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070324Z" creationid="95" creationdate="20170416T070324Z">
        <seg>signing_plugin.html#N156FB</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>signing_plugin.html#N1572D</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070329Z" creationid="95" creationdate="20170416T070329Z">
        <seg>signing_plugin.html#N1572D</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>signing_plugin.html#N157B6</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070335Z" creationid="95" creationdate="20170416T070335Z">
        <seg>signing_plugin.html#N157B6</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>signing_plugin.html#N157C4</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070340Z" creationid="95" creationdate="20170416T070340Z">
        <seg>signing_plugin.html#N157C4</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>simple/</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161217T160535Z" creationid="95" creationdate="20161217T160535Z">
        <seg>simple/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>skip = true</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T091738Z" creationid="msdx" creationdate="20150512T091738Z">
        <seg>skip = true</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>skipProject = true</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150519T124737Z" creationid="msdx" creationdate="20150519T124737Z">
        <seg>skipProject = true</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>snapshotRepository</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T141916Z" creationid="95" creationdate="20160105T141916Z">
        <seg>snapshotRepository</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>snapshots</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T141912Z" creationid="95" creationdate="20160105T141912Z">
        <seg>snapshots</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>snarl</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T065611Z" creationid="haohang" creationdate="20150628T065611Z">
        <seg>snarl</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sonar</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104900Z" creationid="msdx" creationdate="20150428T104900Z">
        <seg>sonar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sonar {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150510T143649Z" creationid="msdx" creationdate="20150510T143649Z">
        <seg>sonar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sonar-runner</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104925Z" creationid="msdx" creationdate="20150428T104925Z">
        <seg>sonar-runner</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sonar.binaries</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T065654Z" creationid="msdx" creationdate="20150513T065654Z">
        <seg>sonar.binaries</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sonar.dynamicAnalysis</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T065250Z" creationid="msdx" creationdate="20150513T065250Z">
        <seg>sonar.dynamicAnalysis</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sonar.java.source</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T065356Z" creationid="msdx" creationdate="20150513T065356Z">
        <seg>sonar.java.source</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sonar.java.target</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T065357Z" creationid="msdx" creationdate="20150513T065357Z">
        <seg>sonar.java.target</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sonar.junit.reportsPath</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150514T152044Z" creationid="msdx" creationdate="20150514T152044Z">
        <seg>sonar.junit.reportsPath</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sonar.libraries</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T065708Z" creationid="msdx" creationdate="20150513T065708Z">
        <seg>sonar.libraries</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sonar.project {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T092528Z" creationid="msdx" creationdate="20150512T092528Z">
        <seg>sonar.project {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sonar.project.withProjectProperties { props -&gt;</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T101428Z" creationid="msdx" creationdate="20150512T101428Z">
        <seg>sonar.project.withProjectProperties { props -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sonar.projectBaseDir</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T065248Z" creationid="msdx" creationdate="20150513T065248Z">
        <seg>sonar.projectBaseDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sonar.projectDescription</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T065247Z" creationid="msdx" creationdate="20150513T065247Z">
        <seg>sonar.projectDescription</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sonar.projectKey</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T065246Z" creationid="msdx" creationdate="20150513T065246Z">
        <seg>sonar.projectKey</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sonar.projectName</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T065247Z" creationid="msdx" creationdate="20150513T065247Z">
        <seg>sonar.projectName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sonar.projectVersion</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T065248Z" creationid="msdx" creationdate="20150513T065248Z">
        <seg>sonar.projectVersion</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sonar.sources</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T065601Z" creationid="msdx" creationdate="20150513T065601Z">
        <seg>sonar.sources</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sonar.surefire.reportsPath</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150514T151939Z" creationid="msdx" creationdate="20150514T151939Z">
        <seg>sonar.surefire.reportsPath</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sonar.tests</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T065640Z" creationid="msdx" creationdate="20150513T065640Z">
        <seg>sonar.tests</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sonar.withGlobalProperties { props -&gt;</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T101338Z" creationid="msdx" creationdate="20150512T101338Z">
        <seg>sonar.withGlobalProperties { props -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sonar.working.directory</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T065249Z" creationid="msdx" creationdate="20150513T065249Z">
        <seg>sonar.working.directory</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sonarAnalyze</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T054213Z" creationid="msdx" creationdate="20150513T054213Z">
        <seg>sonarAnalyze</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sonarProperties {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T063356Z" creationid="msdx" creationdate="20150513T063356Z">
        <seg>sonarProperties {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sonarRunner</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T024619Z" creationid="haohang" creationdate="20150525T235017Z">
        <seg>sonarRunner</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sonarRunner {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T063355Z" creationid="msdx" creationdate="20150513T063355Z">
        <seg>sonarRunner {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sonar_plugin.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104900Z" creationid="msdx" creationdate="20150428T104900Z">
        <seg>sonar_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sonar_plugin.html#N138CC</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065605Z" creationid="95" creationdate="20170416T065605Z">
        <seg>sonar_plugin.html#N138CC</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sonar_plugin.html#N1391A</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065606Z" creationid="95" creationdate="20170416T065606Z">
        <seg>sonar_plugin.html#N1391A</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sonar_plugin.html#N13973</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065615Z" creationid="95" creationdate="20170416T065615Z">
        <seg>sonar_plugin.html#N13973</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sonar_plugin.html#N13988</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065624Z" creationid="95" creationdate="20170416T065624Z">
        <seg>sonar_plugin.html#N13988</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sonar_plugin.html#N139A0</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065630Z" creationid="95" creationdate="20170416T065630Z">
        <seg>sonar_plugin.html#N139A0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sonar_plugin.html#N13A15</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065644Z" creationid="95" creationdate="20170416T065644Z">
        <seg>sonar_plugin.html#N13A15</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sonar_plugin.html#sec:sonar_command_line_parameters</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150510T143654Z" creationid="msdx" creationdate="20150510T143654Z">
        <seg>sonar_plugin.html#sec:sonar_command_line_parameters</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sonar_runner_plugin.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104920Z" creationid="msdx" creationdate="20150428T104920Z">
        <seg>sonar_runner_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sonar_runner_plugin.html#N13A68</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065655Z" creationid="95" creationdate="20170416T065655Z">
        <seg>sonar_runner_plugin.html#N13A68</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sonar_runner_plugin.html#N13A75</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065703Z" creationid="95" creationdate="20170416T065703Z">
        <seg>sonar_runner_plugin.html#N13A75</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sonar_runner_plugin.html#N13A97</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065704Z" creationid="95" creationdate="20170416T065704Z">
        <seg>sonar_runner_plugin.html#N13A97</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sonar_runner_plugin.html#N13B66</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065712Z" creationid="95" creationdate="20170416T065712Z">
        <seg>sonar_runner_plugin.html#N13B66</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sonar_runner_plugin.html#N13BA7</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065715Z" creationid="95" creationdate="20170416T065715Z">
        <seg>sonar_runner_plugin.html#N13BA7</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sonar_runner_plugin.html#N13BBC</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065717Z" creationid="95" creationdate="20170416T065717Z">
        <seg>sonar_runner_plugin.html#N13BBC</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sonar_runner_plugin.html#N13BD4</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065719Z" creationid="95" creationdate="20170416T065719Z">
        <seg>sonar_runner_plugin.html#N13BD4</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sonar_runner_plugin.html#N13C03</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065731Z" creationid="95" creationdate="20170416T065731Z">
        <seg>sonar_runner_plugin.html#N13C03</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sonar_runner_plugin.html#N13C0B</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065736Z" creationid="95" creationdate="20170416T065736Z">
        <seg>sonar_runner_plugin.html#N13C0B</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sonar_runner_plugin.html#sec:sonar_command_line_parameters</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T065723Z" creationid="95" creationdate="20170416T065723Z">
        <seg>sonar_runner_plugin.html#sec:sonar_command_line_parameters</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>source</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083438Z" creationid="msdx" creationdate="20150428T083438Z">
        <seg>source</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>source <bpt i="1" x="1">&lt;s1&gt;</bpt>'src/main/java'<ept i="1">&lt;/s1&gt;</ept>, <bpt i="2" x="2">&lt;s2&gt;</bpt>'src/main/groovy'<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T123633Z" creationid="msdx" creationdate="20141113T123633Z">
        <seg>source <bpt i="1" x="1">&lt;s1&gt;</bpt>'src/main/java'<ept i="1">&lt;/s1&gt;</ept>, <bpt i="2" x="2">&lt;s2&gt;</bpt>'src/main/groovy'<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>source = <bpt i="3" x="3">&lt;s3&gt;</bpt>'src/main/java'<ept i="3">&lt;/s3&gt;</ept>
}

<bpt i="4" x="4">&lt;s4&gt;</bpt>// Use a collection to specify multiple source directories<ept i="4">&lt;/s4&gt;</ept>
compile {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T123335Z" creationid="msdx" creationdate="20141113T123335Z">
        <seg>source = <bpt i="3" x="3">&lt;s3&gt;</bpt>'src/main/java'<ept i="3">&lt;/s3&gt;</ept>
}

<bpt i="4" x="4">&lt;s4&gt;</bpt>// Use a collection to specify multiple source directories<ept i="4">&lt;/s4&gt;</ept>
compile {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>source = [<bpt i="5" x="5">&lt;s5&gt;</bpt>'src/main/java'<ept i="5">&lt;/s5&gt;</ept>, <bpt i="6" x="6">&lt;s6&gt;</bpt>'../shared/java'<ept i="6">&lt;/s6&gt;</ept>]
}

<bpt i="7" x="7">&lt;s7&gt;</bpt>// Use a FileCollection (or FileTree in this case) to specify the source files<ept i="7">&lt;/s7&gt;</ept>
compile {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T123336Z" creationid="msdx" creationdate="20141113T123336Z">
        <seg>source = [<bpt i="5" x="5">&lt;s5&gt;</bpt>'src/main/java'<ept i="5">&lt;/s5&gt;</ept>, <bpt i="6" x="6">&lt;s6&gt;</bpt>'../shared/java'<ept i="6">&lt;/s6&gt;</ept>]
}

<bpt i="7" x="7">&lt;s7&gt;</bpt>// Use a FileCollection (or FileTree in this case) to specify the source files<ept i="7">&lt;/s7&gt;</ept>
compile {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>source = file(<bpt i="1" x="1">&lt;s1&gt;</bpt>'src/main/java'<ept i="1">&lt;/s1&gt;</ept>)
}

<bpt i="2" x="2">&lt;s2&gt;</bpt>// Use a String path to specify the source directory<ept i="2">&lt;/s2&gt;</ept>
compile {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T123334Z" creationid="msdx" creationdate="20141113T123334Z">
        <seg>source = file(<bpt i="1" x="1">&lt;s1&gt;</bpt>'src/main/java'<ept i="1">&lt;/s1&gt;</ept>)
}

<bpt i="2" x="2">&lt;s2&gt;</bpt>// Use a String path to specify the source directory<ept i="2">&lt;/s2&gt;</ept>
compile {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>source = fileTree(dir: <bpt i="8" x="8">&lt;s8&gt;</bpt>'src/main/java'<ept i="8">&lt;/s8&gt;</ept>).matching { include <bpt i="9" x="9">&lt;s9&gt;</bpt>'org/gradle/api/**'<ept i="9">&lt;/s9&gt;</ept> }
}

<bpt i="10" x="10">&lt;s10&gt;</bpt>// Using a closure to specify the source files.<ept i="10">&lt;/s10&gt;</ept>
compile {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T123337Z" creationid="msdx" creationdate="20141113T123337Z">
        <seg>source = fileTree(dir: <bpt i="8" x="8">&lt;s8&gt;</bpt>'src/main/java'<ept i="8">&lt;/s8&gt;</ept>).matching { include <bpt i="9" x="9">&lt;s9&gt;</bpt>'org/gradle/api/**'<ept i="9">&lt;/s9&gt;</ept> }
}

<bpt i="10" x="10">&lt;s10&gt;</bpt>// Using a closure to specify the source files.<ept i="10">&lt;/s10&gt;</ept>
compile {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>source = {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T123338Z" creationid="msdx" creationdate="20141113T123338Z">
        <seg>source = {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>source file(<bpt i="4" x="4">&lt;s4&gt;</bpt>'../shared/java'<ept i="4">&lt;/s4&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T123634Z" creationid="msdx" creationdate="20141113T123634Z">
        <seg>source file(<bpt i="4" x="4">&lt;s4&gt;</bpt>'../shared/java'<ept i="4">&lt;/s4&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>source sourceSets.intTest.allJava
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083430Z" creationid="msdx" creationdate="20150428T083430Z">
        <seg>source sourceSets.intTest.allJava
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>source sources.lib</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T081123Z" creationid="haohang" creationdate="20160408T081123Z">
        <seg>source sources.lib</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>source {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160225T085523Z" creationid="haohang" creationdate="20160225T085523Z">
        <seg>source {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>source { file(<bpt i="6" x="6">&lt;s6&gt;</bpt>'src/test/'<ept i="6">&lt;/s6&gt;</ept>).listFiles() }
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T123635Z" creationid="msdx" creationdate="20141113T123635Z">
        <seg>source { file(<bpt i="6" x="6">&lt;s6&gt;</bpt>'src/test/'<ept i="6">&lt;/s6&gt;</ept>).listFiles() }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sourceBuild {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170109T124813Z" creationid="95" creationdate="20170109T124813Z">
        <seg>sourceBuild {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sourceCompatibility</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083245Z" creationid="msdx" creationdate="20150428T083245Z">
        <seg>sourceCompatibility</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sourceDirs += sourceSets.custom.allSource.srcDirs</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T092528Z" creationid="msdx" creationdate="20150512T092528Z">
        <seg>sourceDirs += sourceSets.custom.allSource.srcDirs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sourceEncoding = <bpt i="0" x="0">&lt;s0&gt;</bpt>"UTF-8"<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T091355Z" creationid="msdx" creationdate="20150512T091355Z">
        <seg>sourceEncoding = <bpt i="0" x="0">&lt;s0&gt;</bpt>"UTF-8"<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sourceFile = file(<bpt i="0" x="0">&lt;s0&gt;</bpt>'src/docs/quick-start'<ept i="0">&lt;/s0&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T015222Z" creationid="95" creationdate="20161211T015222Z">
        <seg>sourceFile = file(<bpt i="0" x="0">&lt;s0&gt;</bpt>'src/docs/quick-start'<ept i="0">&lt;/s0&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sourceFile = project.file(<bpt i="5" x="5">&lt;s5&gt;</bpt>"src/docs/$name"<ept i="5">&lt;/s5&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T015244Z" creationid="95" creationdate="20161211T015244Z">
        <seg>sourceFile = project.file(<bpt i="5" x="5">&lt;s5&gt;</bpt>"src/docs/$name"<ept i="5">&lt;/s5&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sourceSets</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083244Z" creationid="msdx" creationdate="20150428T083244Z">
        <seg>sourceSets</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sourceSets sourceSets.main
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T135605Z" creationid="msdx" creationdate="20150506T135605Z">
        <seg>sourceSets sourceSets.main
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sourceSets {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083230Z" creationid="msdx" creationdate="20150428T083230Z">
        <seg>sourceSets {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sourceSets.main.allJava</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083439Z" creationid="msdx" creationdate="20150428T083439Z">
        <seg>sourceSets.main.allJava</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sourceSets.main.allSource.srcDirs (filtered to only include existing directories)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T065638Z" creationid="msdx" creationdate="20150513T065638Z">
        <seg>sourceSets.main.allSource.srcDirs（过滤为只包含存在的目录）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sourceSets.main.output + sourceSets.main.compileClasspath</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083438Z" creationid="msdx" creationdate="20150428T083438Z">
        <seg>sourceSets.main.output + sourceSets.main.compileClasspath</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sourceSets.main.runtimeClasspath (filtered to only include directories)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T065707Z" creationid="msdx" creationdate="20150513T065707Z">
        <seg>sourceSets.main.runtimeClasspath （过滤为只包含存在的目录）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sourceSets.main.runtimeClasspath (filtering to only include files; <bpt i="0" x="0">&lt;c0&gt;</bpt>rt.jar<ept i="0">&lt;/c0&gt;</ept> added if necessary)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150514T152030Z" creationid="msdx" creationdate="20150513T065814Z">
        <seg>sourceSets.main.runtimeClasspath （过滤为仅包括文件 ；如果有必要会加上 <bpt i="0" x="0">&lt;c0&gt;</bpt>rt.jar<ept i="0">&lt;/c0&gt;</ept>）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sourceSets.matching { it.purpose == <bpt i="6" x="6">&lt;s6&gt;</bpt>"production"<ept i="6">&lt;/s6&gt;</ept> }.each { println it.name }
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150710T012941Z" creationid="haohang" creationdate="20150710T012941Z">
        <seg>sourceSets.matching { it.purpose == <bpt i="6" x="6">&lt;s6&gt;</bpt>"production"<ept i="6">&lt;/s6&gt;</ept> }.each { println it.name }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sourceSets.test.allSource.srcDirs (filtered to only include existing directories)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T065653Z" creationid="msdx" creationdate="20150513T065653Z">
        <seg>sourceSets.test.allSource.srcDirs（过滤为只包含存在的目录）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sourceSets.test.java.srcDirs</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T144359Z" creationid="msdx" creationdate="20150428T144359Z">
        <seg>sourceSets.test.java.srcDirs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sourceSets.test.output.classesDir</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T144356Z" creationid="msdx" creationdate="20150428T144356Z">
        <seg>sourceSets.test.output.classesDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sourceSets.test.runtimeClasspath</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T144358Z" creationid="msdx" creationdate="20150428T144358Z">
        <seg>sourceSets.test.runtimeClasspath</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>sources {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160225T085517Z" creationid="haohang" creationdate="20160225T085517Z">
        <seg>sources {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>spi</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T084513Z" creationid="haohang" creationdate="20160726T084513Z">
        <seg>spi</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>spi spiJar</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T084528Z" creationid="haohang" creationdate="20160726T084528Z">
        <seg>spi spiJar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>springVersion = <bpt i="1" x="1">&lt;s1&gt;</bpt>"3.1.0.RELEASE"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T050710Z" creationid="msdx" creationdate="20141108T050710Z">
        <seg>springVersion = <bpt i="1" x="1">&lt;s1&gt;</bpt>"3.1.0.RELEASE"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>src/</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T083509Z" creationid="haohang" creationdate="20160726T083509Z">
        <seg>src/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>src/<bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>sourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/antlr</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T095150Z" creationid="haohang" creationdate="20150625T095150Z">
        <seg>src/<bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>sourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/antlr</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>src/<bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>sourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/groovy</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T075139Z" creationid="msdx" creationdate="20150429T075139Z">
        <seg>src/<bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>sourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/groovy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>src/<bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>sourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/java</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083229Z" creationid="msdx" creationdate="20150428T083229Z">
        <seg>src/<bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>sourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>src/<bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>sourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/resources</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083230Z" creationid="msdx" creationdate="20150428T083230Z">
        <seg>src/<bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>sourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/resources</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>src/<bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>sourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/scala</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T152633Z" creationid="msdx" creationdate="20150429T152633Z">
        <seg>src/<bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>sourceSet<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept>/scala</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>src/main/antlr</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T095132Z" creationid="haohang" creationdate="20150625T095132Z">
        <seg>src/main/antlr</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>src/main/application</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T095226Z" creationid="msdx" creationdate="20150503T095226Z">
        <seg>src/main/application</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>src/main/groovy</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T075102Z" creationid="msdx" creationdate="20150429T075102Z">
        <seg>src/main/groovy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>src/main/groovy/org/gradle/GreetingTask.groovy</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160815T145220Z" creationid="95" creationdate="20160815T145220Z">
        <seg>src/main/groovy/org/gradle/GreetingTask.groovy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>src/main/java</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083228Z" creationid="msdx" creationdate="20150428T083228Z">
        <seg>src/main/java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>src/main/java/</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160722T091207Z" creationid="haohang" creationdate="20160722T091207Z">
        <seg>src/main/java/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>src/main/resources</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083229Z" creationid="msdx" creationdate="20150428T083229Z">
        <seg>src/main/resources</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>src/main/resources/META-INF/gradle-plugins/greeting.properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160828T133454Z" creationid="95" creationdate="20160828T133454Z">
        <seg>src/main/resources/META-INF/gradle-plugins/greeting.properties</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>src/main/scala</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T152612Z" creationid="msdx" creationdate="20150429T152612Z">
        <seg>src/main/scala</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>src/main/webapp</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T090128Z" creationid="msdx" creationdate="20150503T090128Z">
        <seg>from <bpt i="1" x="1">&lt;s1&gt;</bpt>'src/main/webapp'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>src/test/antlr</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T095142Z" creationid="haohang" creationdate="20150625T095142Z">
        <seg>src/test/antlr</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>src/test/groovy</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T075127Z" creationid="msdx" creationdate="20150429T075127Z">
        <seg>src/test/groovy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>src/test/groovy/org/gradle/GreetingPluginTest.groovy</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T014927Z" creationid="95" creationdate="20161211T014927Z">
        <seg>src/test/groovy/org/gradle/GreetingPluginTest.groovy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>src/test/groovy/org/gradle/GreetingTaskTest.groovy</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160815T150124Z" creationid="95" creationdate="20160815T150124Z">
        <seg>src/test/groovy/org/gradle/GreetingTaskTest.groovy</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>src/test/java</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083229Z" creationid="msdx" creationdate="20150428T083229Z">
        <seg>src/test/java</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>src/test/resources</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083229Z" creationid="msdx" creationdate="20150428T083229Z">
        <seg>src/test/resources</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>src/test/scala</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T152620Z" creationid="msdx" creationdate="20150429T152620Z">
        <seg>src/test/scala</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>srcDir <bpt i="0" x="0">&lt;s0&gt;</bpt>"src/source"<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160225T085529Z" creationid="haohang" creationdate="20160225T085529Z">
        <seg>srcDir <bpt i="0" x="0">&lt;s0&gt;</bpt>"src/source"<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>srcDir <bpt i="0" x="0">&lt;s0&gt;</bpt>'src/java'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083230Z" creationid="msdx" creationdate="20150428T083230Z">
        <seg>srcDir <bpt i="0" x="0">&lt;s0&gt;</bpt>'src/java'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>srcDir <bpt i="1" x="1">&lt;s1&gt;</bpt>'src/resources'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083231Z" creationid="msdx" creationdate="20150428T083231Z">
        <seg>srcDir <bpt i="1" x="1">&lt;s1&gt;</bpt>'src/resources'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>srcDir <bpt i="2" x="2">&lt;s2&gt;</bpt>"src/include"<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160225T090555Z" creationid="haohang" creationdate="20160225T090555Z">
        <seg>srcDir <bpt i="2" x="2">&lt;s2&gt;</bpt>"src/include"<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>srcDir = file(<bpt i="1" x="1">&lt;s1&gt;</bpt>'src'<ept i="1">&lt;/s1&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T160739Z" creationid="msdx" creationdate="20141112T160739Z">
        <seg>srcDir = file(<bpt i="1" x="1">&lt;s1&gt;</bpt>'src'<ept i="1">&lt;/s1&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>srcDir = file(<bpt i="3" x="3">&lt;s3&gt;</bpt>'src2'<ept i="3">&lt;/s3&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T160740Z" creationid="msdx" creationdate="20141112T160740Z">
        <seg>srcDir = file(<bpt i="3" x="3">&lt;s3&gt;</bpt>'src2'<ept i="3">&lt;/s3&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>srcDir = { file(srcDirName) }</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T051004Z" creationid="95" creationdate="20161211T051004Z">
        <seg>srcDir = { file(srcDirName) }</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>srcDirName = <bpt i="0" x="0">&lt;s0&gt;</bpt>'src/java'<ept i="0">&lt;/s0&gt;</ept>

def getSrcDir(project) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T044943Z" creationid="95" creationdate="20161211T044943Z">
        <seg>srcDirName = <bpt i="0" x="0">&lt;s0&gt;</bpt>'src/java'<ept i="0">&lt;/s0&gt;</ept>

def getSrcDir(project) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>srcDirName = <bpt i="1" x="1">&lt;s1&gt;</bpt>'src/java'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T051004Z" creationid="95" creationdate="20161211T051004Z">
        <seg>srcDirName = <bpt i="1" x="1">&lt;s1&gt;</bpt>'src/java'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>srcDirName = <bpt i="8" x="8">&lt;s8&gt;</bpt>"$srcDirName/legacy"<ept i="8">&lt;/s8&gt;</ept>
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T051040Z" creationid="95" creationdate="20161211T051040Z">
        <seg>srcDirName = <bpt i="8" x="8">&lt;s8&gt;</bpt>"$srcDirName/legacy"<ept i="8">&lt;/s8&gt;</ept>
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>srcDirs</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083442Z" creationid="msdx" creationdate="20150428T083442Z">
        <seg>srcDirs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>srcDirs <bpt i="0" x="0">&lt;s0&gt;</bpt>"src/hello/rc"<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160325T020939Z" creationid="haohang" creationdate="20160325T020939Z">
        <seg>srcDirs <bpt i="0" x="0">&lt;s0&gt;</bpt>"src/hello/rc"<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>srcDirs <bpt i="1" x="1">&lt;s1&gt;</bpt>"src/hello/headers"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160325T020940Z" creationid="haohang" creationdate="20160325T020940Z">
        <seg>srcDirs <bpt i="1" x="1">&lt;s1&gt;</bpt>"src/hello/headers"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>srcDirs = [<bpt i="0" x="0">&lt;s0&gt;</bpt>'src/groovy'<ept i="0">&lt;/s0&gt;</ept>]</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T075354Z" creationid="msdx" creationdate="20150429T075354Z">
        <seg>srcDirs = [<bpt i="0" x="0">&lt;s0&gt;</bpt>'src/groovy'<ept i="0">&lt;/s0&gt;</ept>]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>srcDirs = [<bpt i="0" x="0">&lt;s0&gt;</bpt>'src/scala'<ept i="0">&lt;/s0&gt;</ept>]</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T152731Z" creationid="msdx" creationdate="20150429T152731Z">
        <seg>srcDirs = [<bpt i="0" x="0">&lt;s0&gt;</bpt>'src/scala'<ept i="0">&lt;/s0&gt;</ept>]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>srcDirs = [<bpt i="1" x="1">&lt;s1&gt;</bpt>'test/groovy'<ept i="1">&lt;/s1&gt;</ept>]</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T075355Z" creationid="msdx" creationdate="20150429T075355Z">
        <seg>srcDirs = [<bpt i="1" x="1">&lt;s1&gt;</bpt>'test/groovy'<ept i="1">&lt;/s1&gt;</ept>]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>srcDirs = [<bpt i="1" x="1">&lt;s1&gt;</bpt>'test/scala'<ept i="1">&lt;/s1&gt;</ept>]</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T152731Z" creationid="msdx" creationdate="20150429T152731Z">
        <seg>srcDirs = [<bpt i="1" x="1">&lt;s1&gt;</bpt>'test/scala'<ept i="1">&lt;/s1&gt;</ept>]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ssh</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T141830Z" creationid="95" creationdate="20160105T141830Z">
        <seg>ssh</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>ssh-external</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T141831Z" creationid="95" creationdate="20160105T141831Z">
        <seg>ssh-external</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>standard_plugins.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141121T142833Z" creationid="msdx" creationdate="20141121T142833Z">
        <seg>standard_plugins.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>standard_plugins.html#N1190C</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131528Z" creationid="msdx" creationdate="20150509T131528Z">
        <seg>standard_plugins.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>standard_plugins.html#N1199D</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131533Z" creationid="msdx" creationdate="20150509T131533Z">
        <seg>standard_plugins.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>standard_plugins.html#N11A44</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131540Z" creationid="msdx" creationdate="20150509T131540Z">
        <seg>standard_plugins.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>standard_plugins.html#N11B08</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131546Z" creationid="msdx" creationdate="20150509T131546Z">
        <seg>standard_plugins.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>standard_plugins.html#N11B8B</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131551Z" creationid="msdx" creationdate="20150509T131551Z">
        <seg>standard_plugins.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>standard_plugins.html#N11D27</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131554Z" creationid="msdx" creationdate="20150509T131554Z">
        <seg>standard_plugins.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>standard_plugins.html#N11DFC</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131558Z" creationid="msdx" creationdate="20150509T131558Z">
        <seg>standard_plugins.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>standard_plugins.html#N11E6F</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T131602Z" creationid="msdx" creationdate="20150509T131602Z">
        <seg>standard_plugins.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>startScripts</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150702T105015Z" creationid="haohang" creationdate="20150702T105015Z">
        <seg>startScripts</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>staticLibraryFile = file(<bpt i="3" x="3">&lt;s3&gt;</bpt>"lib/cunit/2.1-2/lib/"<ept i="3">&lt;/s3&gt;</ept> + findCUnitLibForPlatform(targetPlatform))</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160504T151339Z" creationid="95" creationdate="20160504T151339Z">
        <seg>staticLibraryFile = file(<bpt i="3" x="3">&lt;s3&gt;</bpt>"lib/cunit/2.1-2/lib/"<ept i="3">&lt;/s3&gt;</ept> + findCUnitLibForPlatform(targetPlatform))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>stopKey</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T151239Z" creationid="msdx" creationdate="20150504T151239Z">
        <seg>stopKey</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>stopPort</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T151206Z" creationid="msdx" creationdate="20150504T151206Z">
        <seg>stopPort</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>subprojects {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083543Z" creationid="msdx" creationdate="20150428T083543Z">
        <seg>subprojects {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>subprojects.each {project -&gt;</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160722T091249Z" creationid="haohang" creationdate="20160722T091249Z">
        <seg>subprojects.each {project -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>suite_operators.c</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160504T150235Z" creationid="95" creationdate="20160504T150235Z">
        <seg>suite_operators.c</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>systemProp.http.proxyHost=www.somehost.org
systemProp.http.proxyPort=8080
systemProp.http.proxyUser=userid
systemProp.http.proxyPassword=password
systemProp.http.nonProxyHosts=*.nonproxyrepos.com|localhost</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141121T141741Z" creationid="msdx" creationdate="20141121T141741Z">
        <seg>systemProp.http.proxyHost=www.somehost.org
systemProp.http.proxyPort=8080
systemProp.http.proxyUser=userid
systemProp.http.proxyPassword=password
systemProp.http.nonProxyHosts=*.nonproxyrepos.com|localhost</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>systemProp.https.proxyHost=www.somehost.org
systemProp.https.proxyPort=8080
systemProp.https.proxyUser=userid
systemProp.https.proxyPassword=password
systemProp.https.nonProxyHosts=*.nonproxyrepos.com|localhost</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141121T141804Z" creationid="msdx" creationdate="20141121T141804Z">
        <seg>systemProp.https.proxyHost=www.somehost.org
systemProp.https.proxyPort=8080
systemProp.https.proxyUser=userid
systemProp.https.proxyPassword=password
systemProp.https.nonProxyHosts=*.nonproxyrepos.com|localhost</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>targetBuild {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170109T124817Z" creationid="95" creationdate="20170109T124817Z">
        <seg>targetBuild {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>targetBuild.gradleVersion = "«gradle version»"
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170109T125538Z" creationid="95" creationdate="20170109T125538Z">
        <seg>targetBuild.gradleVersion = "«gradle version»"
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>targetCompatibility</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083245Z" creationid="msdx" creationdate="20150428T083245Z">
        <seg>targetCompatibility</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>targetFile.delete()</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160816T145044Z" creationid="95" creationdate="20160816T145044Z">
        <seg>targetFile.delete()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>targetFile.text = change.file.text.reverse()</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160816T145031Z" creationid="95" creationdate="20160816T145031Z">
        <seg>targetFile.text = change.file.text.reverse()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>targetPlatforms <bpt i="0" x="0">&lt;s0&gt;</bpt>"x86"<ept i="0">&lt;/s0&gt;</ept>, <bpt i="1" x="1">&lt;s1&gt;</bpt>"x64"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T082930Z" creationid="haohang" creationdate="20160408T082930Z">
        <seg>targetPlatforms <bpt i="0" x="0">&lt;s0&gt;</bpt>"x86"<ept i="0">&lt;/s0&gt;</ept>, <bpt i="1" x="1">&lt;s1&gt;</bpt>"x64"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task action &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T062358Z" creationid="haohang" creationdate="20160718T062358Z">
        <seg>task action &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task action(dependsOn: <bpt i="0" x="0">&lt;s0&gt;</bpt>":producer:action"<ept i="0">&lt;/s0&gt;</ept>) &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T071036Z" creationid="haohang" creationdate="20160718T071036Z">
        <seg>task action(dependsOn: <bpt i="0" x="0">&lt;s0&gt;</bpt>":producer:action"<ept i="0">&lt;/s0&gt;</ept>) &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task allFiles &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T034607Z" creationid="haohang" creationdate="20150807T034607Z">
        <seg>task allFiles &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task anotherCopyTask(type: Copy) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T130947Z" creationid="msdx" creationdate="20141113T130947Z">
        <seg>task anotherCopyTask(type: Copy) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task apiJar(type: Jar) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170304T033024Z" creationid="95" creationdate="20170304T033024Z">
        <seg>task apiJar(type: Jar) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task barJar(type: Jar) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T145615Z" creationid="msdx" creationdate="20150428T145615Z">
        <seg>task barJar(type: Jar) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task build(type: GradleBuild) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161212T153534Z" creationid="95" creationdate="20161212T153534Z">
        <seg>task build(type: GradleBuild) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task buildAllExecutables {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T084718Z" creationid="haohang" creationdate="20160408T084718Z">
        <seg>task buildAllExecutables {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task check &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T060205Z" creationid="msdx" creationdate="20141116T060205Z">
        <seg>task check &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task compile &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T054822Z" creationid="msdx" creationdate="20141111T054822Z">
        <seg>task compile &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task configure &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T152803Z" creationid="msdx" creationdate="20141109T152803Z">
        <seg>task configure &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task consume &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T085919Z" creationid="haohang" creationdate="20160718T085919Z">
        <seg>task consume &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task consume(dependsOn: <bpt i="0" x="0">&lt;s0&gt;</bpt>':producer:produce'<ept i="0">&lt;/s0&gt;</ept>) &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T072047Z" creationid="haohang" creationdate="20160718T072047Z">
        <seg>task consume(dependsOn: <bpt i="0" x="0">&lt;s0&gt;</bpt>':producer:produce'<ept i="0">&lt;/s0&gt;</ept>) &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task copy &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T040601Z" creationid="haohang" creationdate="20150807T040601Z">
        <seg>task copy &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task copy(type: Copy)

task copy(overwrite: true) &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T015856Z" creationid="msdx" creationdate="20141111T015856Z">
        <seg>task copy(type: Copy)

task copy(overwrite: true) &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task copy(type: Copy) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T100017Z" creationid="msdx" creationdate="20141110T100017Z">
        <seg>task copy(type: Copy) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task copyMethod &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T131756Z" creationid="msdx" creationdate="20141113T131756Z">
        <seg>task copyMethod &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task copyMethodWithExplicitDependencies{</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T134158Z" creationid="msdx" creationdate="20141113T134158Z">
        <seg>task copyMethodWithExplicitDependencies{</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task copyTask(type: Copy) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T124407Z" creationid="msdx" creationdate="20141113T124407Z">
        <seg>task copyTask(type: Copy) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task copyTaskWithPatterns(type: Copy) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T131122Z" creationid="msdx" creationdate="20141113T131122Z">
        <seg>task copyTaskWithPatterns(type: Copy) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task copyVsFiles &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T041227Z" creationid="haohang" creationdate="20150807T041227Z">
        <seg>task copyVsFiles &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task createDocs {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150703T100422Z" creationid="haohang" creationdate="20150703T100422Z">
        <seg>task createDocs {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task dependencies &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T034356Z" creationid="haohang" creationdate="20150807T034356Z">
        <seg>task dependencies &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task disableMe &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T055744Z" creationid="msdx" creationdate="20141111T055744Z">
        <seg>task disableMe &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task files &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T034742Z" creationid="haohang" creationdate="20150807T034742Z">
        <seg>task files &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task generate(type:  MyTaskType) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151226T091459Z" creationid="95" creationdate="20151226T091459Z">
        <seg>task generate(type:  MyTaskType) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task hello

println hello.name
println project.hello.name</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T081019Z" creationid="msdx" creationdate="20141110T081019Z">
        <seg>task hello

println hello.name
println project.hello.name</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task hello

println tasks.hello.name
println tasks[<bpt i="0" x="0">&lt;s0&gt;</bpt>'hello'<ept i="0">&lt;/s0&gt;</ept>].name</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T081116Z" creationid="msdx" creationdate="20141110T081116Z">
        <seg>task hello

println tasks.hello.name
println tasks[<bpt i="0" x="0">&lt;s0&gt;</bpt>'hello'<ept i="0">&lt;/s0&gt;</ept>].name</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task hello
}

task hello

println tasks.getByPath(<bpt i="1" x="1">&lt;s1&gt;</bpt>'hello'<ept i="1">&lt;/s1&gt;</ept>).path
println tasks.getByPath(<bpt i="2" x="2">&lt;s2&gt;</bpt>':hello'<ept i="2">&lt;/s2&gt;</ept>).path
println tasks.getByPath(<bpt i="3" x="3">&lt;s3&gt;</bpt>'projectA:hello'<ept i="3">&lt;/s3&gt;</ept>).path
println tasks.getByPath(<bpt i="4" x="4">&lt;s4&gt;</bpt>':projectA:hello'<ept i="4">&lt;/s4&gt;</ept>).path</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T082154Z" creationid="msdx" creationdate="20141110T082154Z">
        <seg>task hello
}

task hello

println tasks.getByPath(<bpt i="1" x="1">&lt;s1&gt;</bpt>'hello'<ept i="1">&lt;/s1&gt;</ept>).path
println tasks.getByPath(<bpt i="2" x="2">&lt;s2&gt;</bpt>':hello'<ept i="2">&lt;/s2&gt;</ept>).path
println tasks.getByPath(<bpt i="3" x="3">&lt;s3&gt;</bpt>'projectA:hello'<ept i="3">&lt;/s3&gt;</ept>).path
println tasks.getByPath(<bpt i="4" x="4">&lt;s4&gt;</bpt>':projectA:hello'<ept i="4">&lt;/s4&gt;</ept>).path</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task hello &lt;&lt; cl
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160522T125909Z" creationid="95" creationdate="20160522T125909Z">
        <seg>task hello &lt;&lt; cl
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task hello &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T021014Z" creationid="msdx" creationdate="20141111T021014Z">
        <seg>task hello &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task hello &lt;&lt; { task -&gt; println <bpt i="0" x="0">&lt;s0&gt;</bpt>"I'm $task.project.name"<ept i="0">&lt;/s0&gt;</ept> }
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160527T161029Z" creationid="95" creationdate="20160527T161029Z">
        <seg>task hello &lt;&lt; { task -&gt; println <bpt i="0" x="0">&lt;s0&gt;</bpt>"I'm $task.project.name"<ept i="0">&lt;/s0&gt;</ept> }
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task hello &lt;&lt; {task -&gt; println <bpt i="0" x="0">&lt;s0&gt;</bpt>"I'm $task.project.name"<ept i="0">&lt;/s0&gt;</ept> }
}
subprojects {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160527T162339Z" creationid="95" creationdate="20160527T162302Z">
        <seg>task hello &lt;&lt; {task -&gt; println <bpt i="0" x="0">&lt;s0&gt;</bpt>"I'm $task.project.name"<ept i="0">&lt;/s0&gt;</ept> }
}
subprojects {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task hello(type: GreetingTask)

<bpt i="0" x="0">&lt;s0&gt;</bpt>class<ept i="0">&lt;/s0&gt;</ept> GreetingTask <bpt i="1" x="1">&lt;s1&gt;</bpt>extends<ept i="1">&lt;/s1&gt;</ept> DefaultTask {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160814T145740Z" creationid="95" creationdate="20160814T145740Z">
        <seg>task hello(type: GreetingTask)

<bpt i="0" x="0">&lt;s0&gt;</bpt>class<ept i="0">&lt;/s0&gt;</ept> GreetingTask <bpt i="1" x="1">&lt;s1&gt;</bpt>extends<ept i="1">&lt;/s1&gt;</ept> DefaultTask {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task helloWorld &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T063534Z" creationid="haohang" creationdate="20150628T063534Z">
        <seg>task helloWorld &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task incrementalReverse(type: IncrementalReverseTask) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160817T145702Z" creationid="95" creationdate="20160817T145702Z">
        <seg>task incrementalReverse(type: IncrementalReverseTask) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task intTest(type: Test) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083431Z" creationid="msdx" creationdate="20150428T083431Z">
        <seg>task intTest(type: Test) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task intTestJar(type: Jar) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083429Z" creationid="msdx" creationdate="20150428T083429Z">
        <seg>task intTestJar(type: Jar) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task intTestJavadoc(type: Javadoc) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083430Z" creationid="msdx" creationdate="20150428T083430Z">
        <seg>task intTestJavadoc(type: Javadoc) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task libs(type: Sync) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T145436Z" creationid="msdx" creationdate="20141113T145436Z">
        <seg>task libs(type: Sync) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task list &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T070220Z" creationid="msdx" creationdate="20141108T070220Z">
        <seg>task list &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task listJars &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T091159Z" creationid="haohang" creationdate="20150801T091159Z">
        <seg>task listJars &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task logInfo {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T150934Z" creationid="msdx" creationdate="20141116T150934Z">
        <seg>task logInfo {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task mappings &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T145327Z" creationid="95" creationdate="20160106T145327Z">
        <seg>task mappings &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task myCopy(type: Copy)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T090223Z" creationid="msdx" creationdate="20141110T090223Z">
        <seg>task myCopy(type: Copy)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task myCopy(type: Copy)

myCopy {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T092537Z" creationid="msdx" creationdate="20141110T092537Z">
        <seg>task myCopy(type: Copy)

myCopy {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task myJar(type: Jar)

artifacts {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151226T090855Z" creationid="95" creationdate="20151226T090855Z">
        <seg>task myJar(type: Jar)

artifacts {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task myTask(type:  MyTaskType) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151226T091157Z" creationid="95" creationdate="20151226T091157Z">
        <seg>task myTask(type:  MyTaskType) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task nestedSpecs(type: Copy) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T143851Z" creationid="msdx" creationdate="20141113T143851Z">
        <seg>task nestedSpecs(type: Copy) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task ok

task broken(dependsOn: ok) &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T140113Z" creationid="95" creationdate="20160521T140113Z">
        <seg>task ok

task broken(dependsOn: ok) &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task printProps &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T151100Z" creationid="msdx" creationdate="20141109T151100Z">
        <seg>task printProps &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task produce &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160718T072048Z" creationid="haohang" creationdate="20160718T072048Z">
        <seg>task produce &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task removeInput() &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160817T150257Z" creationid="95" creationdate="20160817T150257Z">
        <seg>task removeInput() &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task removeOutput() &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160817T150446Z" creationid="95" creationdate="20160817T150446Z">
        <seg>task removeOutput() &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task rename(type: Copy) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T140710Z" creationid="msdx" creationdate="20141113T140710Z">
        <seg>task rename(type: Copy) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task show &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T044945Z" creationid="95" creationdate="20161211T044945Z">
        <seg>task show &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task showRepositories &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161215T144245Z" creationid="95" creationdate="20161215T144245Z">
        <seg>task showRepositories &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task sourceJar(type: Jar) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20170216T072605Z" creationid="haohang" creationdate="20170216T072605Z">
        <seg>task sourceJar(type: Jar) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task spiJar(type: Jar) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T084524Z" creationid="haohang" creationdate="20160726T084524Z">
        <seg>task spiJar(type: Jar) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task stuffZip (type: Zip) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160109T073059Z" creationid="95" creationdate="20160109T073059Z">
        <seg>task stuffZip (type: Zip) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task taskX &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T122607Z" creationid="msdx" creationdate="20141110T122607Z">
        <seg>task taskX &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task taskX(dependsOn: <bpt i="1" x="1">&lt;s1&gt;</bpt>':projectB:taskY'<ept i="1">&lt;/s1&gt;</ept>) &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T122312Z" creationid="msdx" creationdate="20141110T122312Z">
        <seg>task taskX(dependsOn: <bpt i="1" x="1">&lt;s1&gt;</bpt>':projectB:taskY'<ept i="1">&lt;/s1&gt;</ept>) &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task taskY &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T122319Z" creationid="msdx" creationdate="20141110T122319Z">
        <seg>task taskY &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task transform {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T060320Z" creationid="msdx" creationdate="20141111T060320Z">
        <seg>task transform {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task updateInputs() &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160817T150203Z" creationid="95" creationdate="20160817T150203Z">
        <seg>task updateInputs() &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task wrapper(type: Wrapper) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161217T144028Z" creationid="95" creationdate="20161217T144028Z">
        <seg>task wrapper(type: Wrapper) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task writeNewPom &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160104T152810Z" creationid="95" creationdate="20160104T152810Z">
        <seg>task writeNewPom &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task zip &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141115T162753Z" creationid="msdx" creationdate="20141115T162753Z">
        <seg>task zip &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task(<bpt i="0" x="0">&lt;s0&gt;</bpt>'hello'<ept i="0">&lt;/s0&gt;</ept>) &lt;&lt;
{</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T022745Z" creationid="msdx" creationdate="20141110T022745Z">
        <seg>task(<bpt i="0" x="0">&lt;s0&gt;</bpt>'hello'<ept i="0">&lt;/s0&gt;</ept>) &lt;&lt;
{</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task(hello) &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T021256Z" creationid="msdx" creationdate="20141110T021256Z">
        <seg>task(hello) &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task(taskName) &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T065001Z" creationid="msdx" creationdate="20141111T065001Z">
        <seg>task(taskName) &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>task.srcDir = <bpt i="0" x="0">&lt;s0&gt;</bpt>'src/main/java'<ept i="0">&lt;/s0&gt;</ept>
}

task a

println <bpt i="1" x="1">&lt;s1&gt;</bpt>"source dir is $a.srcDir"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T135055Z" creationid="95" creationdate="20160521T135055Z">
        <seg>task.srcDir = <bpt i="0" x="0">&lt;s0&gt;</bpt>'src/main/java'<ept i="0">&lt;/s0&gt;</ept>
}

task a

println <bpt i="1" x="1">&lt;s1&gt;</bpt>"source dir is $a.srcDir"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>taskReport</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T061526Z" creationid="haohang" creationdate="20150628T061526Z">
        <seg>taskReport</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>taskdef(name: <bpt i="3" x="3">&lt;s3&gt;</bpt>'ftp'<ept i="3">&lt;/s3&gt;</ept>,</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161212T155108Z" creationid="95" creationdate="20161212T155108Z">
        <seg>taskdef(name: <bpt i="3" x="3">&lt;s3&gt;</bpt>'ftp'<ept i="3">&lt;/s3&gt;</ept>,</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tasks = [<bpt i="1" x="1">&lt;s1&gt;</bpt>'hello'<ept i="1">&lt;/s1&gt;</ept>]
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161212T153537Z" creationid="95" creationdate="20161212T153537Z">
        <seg>tasks = [<bpt i="1" x="1">&lt;s1&gt;</bpt>'hello'<ept i="1">&lt;/s1&gt;</ept>]
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tasks.addRule(<bpt i="0" x="0">&lt;s0&gt;</bpt>"Pattern: ping&lt;ID&gt;"<ept i="0">&lt;/s0&gt;</ept>) { String taskName -&gt;</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T064958Z" creationid="msdx" creationdate="20141111T064958Z">
        <seg>tasks.addRule(<bpt i="0" x="0">&lt;s0&gt;</bpt>"Pattern: ping&lt;ID&gt;"<ept i="0">&lt;/s0&gt;</ept>) { String taskName -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tasks.create(name: <bpt i="0" x="0">&lt;s0&gt;</bpt>'hello'<ept i="0">&lt;/s0&gt;</ept>) &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T023139Z" creationid="msdx" creationdate="20141110T023139Z">
        <seg>tasks.create(name: <bpt i="0" x="0">&lt;s0&gt;</bpt>'hello'<ept i="0">&lt;/s0&gt;</ept>) &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tasks.findAll { task -&gt; task.name.startsWith(<bpt i="1" x="1">&lt;s1&gt;</bpt>'lib'<ept i="1">&lt;/s1&gt;</ept>) }
}

task lib1 &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T123905Z" creationid="msdx" creationdate="20141110T123905Z">
        <seg>tasks.findAll { task -&gt; task.name.startsWith(<bpt i="1" x="1">&lt;s1&gt;</bpt>'lib'<ept i="1">&lt;/s1&gt;</ept>) }
}

task lib1 &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tasks.generateDescriptorFileForIvyCustomPublication {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T144005Z" creationid="95" creationdate="20170330T144005Z">
        <seg>tasks.generateDescriptorFileForIvyCustomPublication {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tasks.generatePomFileForMavenCustomPublication {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T064805Z" creationid="95" creationdate="20170416T064805Z">
        <seg>tasks.generatePomFileForMavenCustomPublication {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tasks.whenTaskAdded { task -&gt;</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T135054Z" creationid="95" creationdate="20160521T135054Z">
        <seg>tasks.whenTaskAdded { task -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tasks.withType(ScalaCompile) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150430T160054Z" creationid="msdx" creationdate="20150430T160054Z">
        <seg>tasks.withType(ScalaCompile) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>test</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083217Z" creationid="msdx" creationdate="20150428T083217Z">
        <seg>test</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>test report task combines the outputs of all executed test tasks.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T145406Z" creationid="msdx" creationdate="20141110T145406Z">
        <seg>测试报告任务结合了所有执行的测试任务的输出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>test {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T082901Z" creationid="msdx" creationdate="20150428T082901Z">
        <seg>test {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>test-results</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083237Z" creationid="msdx" creationdate="20150428T083237Z">
        <seg>test-results</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>test.testResultsDir (if the directory exists)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150514T152043Z" creationid="msdx" creationdate="20150514T152043Z">
        <seg>test.testResultsDir （如果该目录存在）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>test/java/</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T083512Z" creationid="haohang" creationdate="20160726T083512Z">
        <seg>test/java/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>testClasses</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083214Z" creationid="msdx" creationdate="20150428T083214Z">
        <seg>testClasses</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>testClassesDir</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T144355Z" creationid="msdx" creationdate="20150428T144355Z">
        <seg>testClassesDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>testClassesDir = sourceSets.intTest.output.classesDir</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083432Z" creationid="msdx" creationdate="20150428T083432Z">
        <seg>testClassesDir = sourceSets.intTest.output.classesDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>testCompile</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083231Z" creationid="msdx" creationdate="20150428T083231Z">
        <seg>testCompile</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>testCompile <bpt i="0" x="0">&lt;s0&gt;</bpt>"org.codehaus.groovy:groovy-all:2.2.0"<ept i="0">&lt;/s0&gt;</ept>
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T080016Z" creationid="msdx" creationdate="20150429T080016Z">
        <seg>testCompile <bpt i="0" x="0">&lt;s0&gt;</bpt>"org.codehaus.groovy:groovy-all:2.2.0"<ept i="0">&lt;/s0&gt;</ept>
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>testCompile <bpt i="0" x="0">&lt;s0&gt;</bpt>"org.scala-lang:scala-library:2.9.2"<ept i="0">&lt;/s0&gt;</ept>
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150429T153036Z" creationid="msdx" creationdate="20150429T153036Z">
        <seg>testCompile <bpt i="0" x="0">&lt;s0&gt;</bpt>"org.scala-lang:scala-library:2.9.2"<ept i="0">&lt;/s0&gt;</ept>
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>testCompile <bpt i="0" x="0">&lt;s0&gt;</bpt>'junit:junit:4.11'<ept i="0">&lt;/s0&gt;</ept>
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T052840Z" creationid="95" creationdate="20161211T052840Z">
        <seg>testCompile <bpt i="0" x="0">&lt;s0&gt;</bpt>'junit:junit:4.11'<ept i="0">&lt;/s0&gt;</ept>
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>testCompile <bpt i="11" x="11">&lt;s11&gt;</bpt>"junit:junit:4.11"<ept i="11">&lt;/s11&gt;</ept>, project(<bpt i="12" x="12">&lt;s12&gt;</bpt>':api'<ept i="12">&lt;/s12&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T084543Z" creationid="haohang" creationdate="20160726T084543Z">
        <seg>testCompile <bpt i="11" x="11">&lt;s11&gt;</bpt>"junit:junit:4.11"<ept i="11">&lt;/s11&gt;</ept>, project(<bpt i="12" x="12">&lt;s12&gt;</bpt>':api'<ept i="12">&lt;/s12&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>testCompile <bpt i="3" x="3">&lt;s3&gt;</bpt>"junit:junit:4.11"<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T083801Z" creationid="haohang" creationdate="20160726T083801Z">
        <seg>testCompile <bpt i="3" x="3">&lt;s3&gt;</bpt>"junit:junit:4.11"<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>testCompile <bpt i="3" x="3">&lt;s3&gt;</bpt>'junit:junit:4.11'<ept i="3">&lt;/s3&gt;</ept>
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T065507Z" creationid="msdx" creationdate="20141030T065507Z">
        <seg>testCompile <bpt i="3" x="3">&lt;s3&gt;</bpt>'junit:junit:4.11'<ept i="3">&lt;/s3&gt;</ept>
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>testCompile <bpt i="9" x="9">&lt;s9&gt;</bpt>"junit:junit:4.11"<ept i="9">&lt;/s9&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T093820Z" creationid="msdx" creationdate="20150503T093820Z">
        <seg>testCompile <bpt i="3" x="3">&lt;s3&gt;</bpt>'junit:junit:4.11'<ept i="3">&lt;/s3&gt;</ept>
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>testDirs += sourceSets.integTest.allSource.srcDirs
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T092528Z" creationid="msdx" creationdate="20150512T092528Z">
        <seg>testDirs += sourceSets.integTest.allSource.srcDirs
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>testReportDir</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083239Z" creationid="msdx" creationdate="20150428T083239Z">
        <seg>testReportDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>testReportDirName</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083238Z" creationid="msdx" creationdate="20150428T083238Z">
        <seg>testReportDirName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>testResultsDir</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083237Z" creationid="msdx" creationdate="20150428T083237Z">
        <seg>testResultsDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>testResultsDirName</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083237Z" creationid="msdx" creationdate="20150428T083237Z">
        <seg>testResultsDirName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>testRuntime</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083232Z" creationid="msdx" creationdate="20150428T083232Z">
        <seg>testRuntime</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>testSrcDirs</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T144358Z" creationid="msdx" creationdate="20150428T144358Z">
        <seg>testSrcDirs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tests</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083239Z" creationid="msdx" creationdate="20150428T083239Z">
        <seg>tests</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>title</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083440Z" creationid="msdx" creationdate="20150428T083440Z">
        <seg>title</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>toolChains {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T091221Z" creationid="haohang" creationdate="20160408T091221Z">
        <seg>toolChains {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>toolVersion = <bpt i="0" x="0">&lt;s0&gt;</bpt>"0.6.2.201302030002"<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T131554Z" creationid="msdx" creationdate="20150506T131554Z">
        <seg>toolVersion = <bpt i="0" x="0">&lt;s0&gt;</bpt>"0.6.2.201302030002"<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>transitive = false</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T091424Z" creationid="haohang" creationdate="20150801T091424Z">
        <seg>transitive = false</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>transitive = true</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T075931Z" creationid="haohang" creationdate="20150722T075931Z">
        <seg>transitive = true</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tropicalFish/</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160527T163810Z" creationid="95" creationdate="20160527T163810Z">
        <seg>tropicalFish/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tropicalFish/build.gradle</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160530T144426Z" creationid="95" creationdate="20160530T144426Z">
        <seg>tropicalFish/build.gradle</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>troubleshooting.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T154055Z" creationid="msdx" creationdate="20141109T154055Z">
        <seg>troubleshooting.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>troubleshooting.html#N10187</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162211Z" creationid="msdx" creationdate="20141109T162211Z">
        <seg>troubleshooting.html#N10187</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>troubleshooting.html#N10194</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162242Z" creationid="msdx" creationdate="20141109T162242Z">
        <seg>troubleshooting.html#N10194</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>true</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T132306Z" creationid="msdx" creationdate="20150506T132306Z">
        <seg>true</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tuna-1.0 -&gt; herring-1.0</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T034315Z" creationid="haohang" creationdate="20150807T034315Z">
        <seg>tuna-1.0 -&gt; herring-1.0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tutorial_gradle_command_line.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T071201Z" creationid="msdx" creationdate="20141030T071201Z">
        <seg>tutorial_gradle_command_line.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tutorial_gradle_command_line.html#N10779</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163825Z" creationid="msdx" creationdate="20141109T163825Z">
        <seg>tutorial_gradle_command_line.html#N10779</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tutorial_gradle_command_line.html#N107F0</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163856Z" creationid="msdx" creationdate="20141109T163856Z">
        <seg>tutorial_gradle_command_line.html#N107F0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tutorial_gradle_command_line.html#N10952</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T164808Z" creationid="msdx" creationdate="20141109T164808Z">
        <seg>tutorial_gradle_command_line.html#N10952</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tutorial_gradle_command_line.html#para:commandline_dependency_report</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150807T032812Z" creationid="haohang" creationdate="20150807T032812Z">
        <seg>tutorial_gradle_command_line.html#para:commandline_dependency_report</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tutorial_gradle_command_line.html#sec:continue_build_on_failure</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163846Z" creationid="msdx" creationdate="20141109T163846Z">
        <seg>tutorial_gradle_command_line.html#sec:continue_build_on_failure</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tutorial_gradle_command_line.html#sec:dry_run</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163936Z" creationid="msdx" creationdate="20141109T163936Z">
        <seg>tutorial_gradle_command_line.html#sec:dry_run</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tutorial_gradle_command_line.html#sec:excluding_tasks_from_the_command_line</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163831Z" creationid="msdx" creationdate="20141109T163831Z">
        <seg>tutorial_gradle_command_line.html#sec:excluding_tasks_from_the_command_line</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tutorial_gradle_command_line.html#sec:obtaining_information_about_your_build</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163921Z" creationid="msdx" creationdate="20141109T163921Z">
        <seg>tutorial_gradle_command_line.html#sec:obtaining_information_about_your_build</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tutorial_gradle_command_line.html#sec:selecting_build</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163906Z" creationid="msdx" creationdate="20141109T163906Z">
        <seg>tutorial_gradle_command_line.html#sec:selecting_build</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tutorial_gradle_gui.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T031233Z" creationid="msdx" creationdate="20141108T031233Z">
        <seg>tutorial_gradle_gui.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tutorial_gradle_gui.html#N10980</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T031054Z" creationid="msdx" creationdate="20141108T031054Z">
        <seg>tutorial_gradle_gui.html#N10980</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tutorial_gradle_gui.html#N10996</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T164821Z" creationid="msdx" creationdate="20141109T164821Z">
        <seg>tutorial_gradle_gui.html#N10996</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tutorial_gradle_gui.html#N1099D</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T164823Z" creationid="msdx" creationdate="20141109T164823Z">
        <seg>tutorial_gradle_gui.html#N1099D</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tutorial_gradle_gui.html#N109A2</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T164824Z" creationid="msdx" creationdate="20141109T164824Z">
        <seg>tutorial_gradle_gui.html#N109A2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tutorial_groovy_projects.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T071153Z" creationid="msdx" creationdate="20141030T071153Z">
        <seg>tutorial_groovy_projects.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tutorial_groovy_projects.html#N106BE</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163657Z" creationid="msdx" creationdate="20141109T163657Z">
        <seg>tutorial_groovy_projects.html#N106BE</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tutorial_groovy_projects.html#N10707</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163728Z" creationid="msdx" creationdate="20141109T163728Z">
        <seg>tutorial_groovy_projects.html#N10707</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tutorial_java_projects.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T161502Z" creationid="msdx" creationdate="20141105T161502Z">
        <seg>tutorial_java_projects.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tutorial_java_projects.html#N103C9</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163426Z" creationid="msdx" creationdate="20141109T163426Z">
        <seg>tutorial_java_projects.html#N103C9</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tutorial_java_projects.html#N103DA</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163431Z" creationid="msdx" creationdate="20141109T163431Z">
        <seg>tutorial_java_projects.html#N103DA</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tutorial_java_projects.html#N1054F</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163503Z" creationid="msdx" creationdate="20141109T163503Z">
        <seg>tutorial_java_projects.html#N1054F</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tutorial_java_projects.html#sec:examples</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163437Z" creationid="msdx" creationdate="20141109T163437Z">
        <seg>tutorial_java_projects.html#sec:examples</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tutorial_this_and_that.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T031236Z" creationid="msdx" creationdate="20141108T031236Z">
        <seg>tutorial_this_and_that.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tutorial_this_and_that.html#N10C8A</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T164951Z" creationid="msdx" creationdate="20141109T164951Z">
        <seg>tutorial_this_and_that.html#N10C8A</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tutorial_this_and_that.html#sec:caching</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T164958Z" creationid="msdx" creationdate="20141109T164958Z">
        <seg>tutorial_this_and_that.html#sec:caching</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tutorial_this_and_that.html#sec:configuring_arbitrary_objects</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T164942Z" creationid="msdx" creationdate="20141109T164942Z">
        <seg>tutorial_this_and_that.html#sec:configuring_arbitrary_objects</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tutorial_this_and_that.html#sec:configuring_using_external_script</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T164933Z" creationid="msdx" creationdate="20141109T164933Z">
        <seg>tutorial_this_and_that.html#sec:configuring_using_external_script</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tutorial_this_and_that.html#sec:directory_creation</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T164918Z" creationid="msdx" creationdate="20141109T164918Z">
        <seg>tutorial_this_and_that.html#sec:directory_creation</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tutorial_this_and_that.html#sec:gradle_properties_and_system_properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T164924Z" creationid="msdx" creationdate="20141109T164924Z">
        <seg>tutorial_this_and_that.html#sec:gradle_properties_and_system_properties</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tutorial_using_tasks.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T155952Z" creationid="msdx" creationdate="20141109T155952Z">
        <seg>tutorial_using_tasks.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tutorial_using_tasks.html#N101A5</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162258Z" creationid="msdx" creationdate="20141109T162258Z">
        <seg>tutorial_using_tasks.html#N101A5</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tutorial_using_tasks.html#N101BC</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162323Z" creationid="msdx" creationdate="20141109T162323Z">
        <seg>tutorial_using_tasks.html#N101BC</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tutorial_using_tasks.html#N10222</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162329Z" creationid="msdx" creationdate="20141109T162329Z">
        <seg>tutorial_using_tasks.html#N10222</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tutorial_using_tasks.html#N10239</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162412Z" creationid="msdx" creationdate="20141109T162412Z">
        <seg>tutorial_using_tasks.html#N10239</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tutorial_using_tasks.html#N1029B</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162454Z" creationid="msdx" creationdate="20141109T162454Z">
        <seg>tutorial_using_tasks.html#N1029B</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tutorial_using_tasks.html#N102B0</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162459Z" creationid="msdx" creationdate="20141109T162459Z">
        <seg>tutorial_using_tasks.html#N102B0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tutorial_using_tasks.html#N10326</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163249Z" creationid="msdx" creationdate="20141109T163249Z">
        <seg>tutorial_using_tasks.html#N10326</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tutorial_using_tasks.html#N10346</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163310Z" creationid="msdx" creationdate="20141109T163310Z">
        <seg>tutorial_using_tasks.html#N10346</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tutorial_using_tasks.html#N103B3</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163408Z" creationid="msdx" creationdate="20141109T163408Z">
        <seg>tutorial_using_tasks.html#N103B3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tutorial_using_tasks.html#configure-by-dag</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163349Z" creationid="msdx" creationdate="20141109T163349Z">
        <seg>tutorial_using_tasks.html#configure-by-dag</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tutorial_using_tasks.html#sec:default_tasks</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163340Z" creationid="msdx" creationdate="20141109T163340Z">
        <seg>tutorial_using_tasks.html#sec:default_tasks</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tutorial_using_tasks.html#sec:extra_task_properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163236Z" creationid="msdx" creationdate="20141109T163236Z">
        <seg>tutorial_using_tasks.html#sec:extra_task_properties</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tutorial_using_tasks.html#sec:shortcut_notations</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162514Z" creationid="msdx" creationdate="20141109T162514Z">
        <seg>tutorial_using_tasks.html#sec:shortcut_notations</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tutorial_using_tasks.html#sec:task_dependencies</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162436Z" creationid="msdx" creationdate="20141109T162436Z">
        <seg>tutorial_using_tasks.html#sec:task_dependencies</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tutorials.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141101T034311Z" creationid="msdx" creationdate="20141101T034311Z">
        <seg>tutorials.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>tutorials.html#N100CE</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T162022Z" creationid="msdx" creationdate="20141109T162022Z">
        <seg>tutorials.html#N100CE</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>twitter</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T065604Z" creationid="haohang" creationdate="20150628T065604Z">
        <seg>twitter</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>type <bpt i="14" x="14">&lt;s14&gt;</bpt>"source"<ept i="14">&lt;/s14&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T145240Z" creationid="95" creationdate="20170330T145240Z">
        <seg>type <bpt i="14" x="14">&lt;s14&gt;</bpt>"source"<ept i="14">&lt;/s14&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>type <bpt i="1" x="1">&lt;s1&gt;</bpt>"source"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20170216T072611Z" creationid="haohang" creationdate="20170216T072611Z">
        <seg>type <bpt i="1" x="1">&lt;s1&gt;</bpt>"source"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>type <bpt i="2" x="2">&lt;s2&gt;</bpt>'text'<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151226T091159Z" creationid="95" creationdate="20151226T091159Z">
        <seg>type <bpt i="2" x="2">&lt;s2&gt;</bpt>'text'<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>unit tests should run before integration tests.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T144911Z" creationid="msdx" creationdate="20141110T144725Z">
        <seg>单元测试应在集成测试之前运行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>unspecified</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T044441Z" creationid="msdx" creationdate="20141108T044441Z">
        <seg>未指定</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>upload<bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>ConfigurationName<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083228Z" creationid="msdx" creationdate="20150428T083228Z">
        <seg>upload<bpt i="0" x="0">&lt;e0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>ConfigurationName<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/e0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>uploadArchives</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083218Z" creationid="msdx" creationdate="20150428T083218Z">
        <seg>uploadArchives</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>uploadArchives {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160106T142714Z" creationid="95" creationdate="20160106T142714Z">
        <seg>uploadArchives {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>uploadTask.repositories.mavenDeployer.pom.artifactId (if set) or archiveTask.baseName.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T144130Z" creationid="95" creationdate="20160105T144037Z">
        <seg>uploadTask.repositories.mavenDeployer.pom.artifactId（如果有设置的话）或archiveTask.baseName.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>url <bpt i="0" x="0">&lt;s0&gt;</bpt>"$buildDir/repo"<ept i="0">&lt;/s0&gt;</ept> <bpt i="1" x="1">&lt;s1&gt;</bpt>// change to point to your repo, e.g. http://my.org/repo<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170304T033931Z" creationid="95" creationdate="20170304T033931Z">
        <seg>url <bpt i="0" x="0">&lt;s0&gt;</bpt>"$buildDir/repo"<ept i="0">&lt;/s0&gt;</ept> <bpt i="1" x="1">&lt;s1&gt;</bpt>// change to point to your repo, e.g. http://my.org/repo<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>url <bpt i="0" x="0">&lt;s0&gt;</bpt>"http://repo.mycompany.com/maven2"<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150909T052930Z" creationid="haohang" creationdate="20150909T052930Z">
        <seg>url <bpt i="0" x="0">&lt;s0&gt;</bpt>"http://repo.mycompany.com/maven2"<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>url <bpt i="0" x="0">&lt;s0&gt;</bpt>"http://repo.mycompany.com/repo"<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T110442Z" creationid="95" creationdate="20151006T110442Z">
        <seg>url <bpt i="0" x="0">&lt;s0&gt;</bpt>"http://repo.mycompany.com/repo"<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>url <bpt i="0" x="0">&lt;s0&gt;</bpt>'http://repo.mycompany.com'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T133233Z" creationid="95" creationdate="20151006T133233Z">
        <seg>url <bpt i="0" x="0">&lt;s0&gt;</bpt>'http://repo.mycompany.com'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>url <bpt i="12" x="12">&lt;s12&gt;</bpt>"${rootProject.buildDir}/repo"<ept i="12">&lt;/s12&gt;</ept> <bpt i="13" x="13">&lt;s13&gt;</bpt>// change to point to your repo, e.g. http://my.org/repo<ept i="13">&lt;/s13&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T145238Z" creationid="95" creationdate="20170330T145238Z">
        <seg>url <bpt i="12" x="12">&lt;s12&gt;</bpt>"${rootProject.buildDir}/repo"<ept i="12">&lt;/s12&gt;</ept> <bpt i="13" x="13">&lt;s13&gt;</bpt>// change to point to your repo, e.g. http://my.org/repo<ept i="13">&lt;/s13&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>url <bpt i="1" x="1">&lt;s1&gt;</bpt>"http://repo.mycompany.com/repo"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T091454Z" creationid="95" creationdate="20151115T091454Z">
        <seg>url <bpt i="1" x="1">&lt;s1&gt;</bpt>"http://repo.mycompany.com/repo"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>url <bpt i="1" x="1">&lt;s1&gt;</bpt>"http://repo2.mycompany.com/maven2"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150909T053116Z" creationid="haohang" creationdate="20150909T053116Z">
        <seg>url <bpt i="1" x="1">&lt;s1&gt;</bpt>"http://repo2.mycompany.com/maven2"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>url <bpt i="2" x="2">&lt;s2&gt;</bpt>"http://repo.mycompany.com/maven2"<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150909T053444Z" creationid="haohang" creationdate="20150909T053444Z">
        <seg>url <bpt i="2" x="2">&lt;s2&gt;</bpt>"http://repo.mycompany.com/maven2"<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>url <bpt i="2" x="2">&lt;s2&gt;</bpt>'http://www.apache.org/licenses/LICENSE-2.0.txt'<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160104T152817Z" creationid="95" creationdate="20160104T152817Z">
        <seg>url <bpt i="2" x="2">&lt;s2&gt;</bpt>'http://www.apache.org/licenses/LICENSE-2.0.txt'<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>url <bpt i="4" x="4">&lt;s4&gt;</bpt>"$buildDir/repo"<ept i="4">&lt;/s4&gt;</ept> <bpt i="5" x="5">&lt;s5&gt;</bpt>// change to point to your repo, e.g. http://my.org/repo<ept i="5">&lt;/s5&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170326T075102Z" creationid="95" creationdate="20170326T075102Z">
        <seg>url <bpt i="4" x="4">&lt;s4&gt;</bpt>"$buildDir/repo"<ept i="4">&lt;/s4&gt;</ept> <bpt i="5" x="5">&lt;s5&gt;</bpt>// change to point to your repo, e.g. http://my.org/repo<ept i="5">&lt;/s5&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>url <bpt i="4" x="4">&lt;s4&gt;</bpt>"http://repo.mycompany.com"<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151226T092058Z" creationid="95" creationdate="20151226T092058Z">
        <seg>url <bpt i="4" x="4">&lt;s4&gt;</bpt>"http://repo.mycompany.com"<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>url = <bpt i="0" x="0">&lt;s0&gt;</bpt>"http://my.server.com"<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150510T143650Z" creationid="msdx" creationdate="20150510T143650Z">
        <seg>url = <bpt i="0" x="0">&lt;s0&gt;</bpt>"http://my.server.com"<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>url = <bpt i="1" x="1">&lt;s1&gt;</bpt>"http://my.server.com"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T091238Z" creationid="msdx" creationdate="20150512T091238Z">
        <seg>url = <bpt i="0" x="0">&lt;s0&gt;</bpt>"http://my.server.com"<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>url = <bpt i="1" x="1">&lt;s1&gt;</bpt>"jdbc:mysql://my.server.com/sonar"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150510T143651Z" creationid="msdx" creationdate="20150510T143651Z">
        <seg>url = <bpt i="1" x="1">&lt;s1&gt;</bpt>"jdbc:mysql://my.server.com/sonar"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>url = <bpt i="2" x="2">&lt;s2&gt;</bpt>"jdbc:mysql://my.server.com/sonar"<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T091239Z" creationid="msdx" creationdate="20150512T091239Z">
        <seg>url = <bpt i="1" x="1">&lt;s1&gt;</bpt>"jdbc:mysql://my.server.com/sonar"<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>url ENTERPRISE_REPOSITORY_URL</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161215T144242Z" creationid="95" creationdate="20161215T144242Z">
        <seg>url ENTERPRISE_REPOSITORY_URL</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>url uri(<bpt i="0" x="0">&lt;s0&gt;</bpt>'../repo'<ept i="0">&lt;/s0&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160815T145927Z" creationid="95" creationdate="20160815T145927Z">
        <seg>url uri(<bpt i="0" x="0">&lt;s0&gt;</bpt>'../repo'<ept i="0">&lt;/s0&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>useJUnit {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T082902Z" creationid="msdx" creationdate="20150428T082902Z">
        <seg>useJUnit {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>useLogger(<bpt i="0" x="0">&lt;s0&gt;</bpt>new<ept i="0">&lt;/s0&gt;</ept> CustomEventLogger())

<bpt i="1" x="1">&lt;s1&gt;</bpt>class<ept i="1">&lt;/s1&gt;</ept> CustomEventLogger <bpt i="2" x="2">&lt;s2&gt;</bpt>extends<ept i="2">&lt;/s2&gt;</ept> BuildAdapter <bpt i="3" x="3">&lt;s3&gt;</bpt>implements<ept i="3">&lt;/s3&gt;</ept> TaskExecutionListener {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141116T154815Z" creationid="msdx" creationdate="20141116T154815Z">
        <seg>useLogger(<bpt i="0" x="0">&lt;s0&gt;</bpt>new<ept i="0">&lt;/s0&gt;</ept> CustomEventLogger())

<bpt i="1" x="1">&lt;s1&gt;</bpt>class<ept i="1">&lt;/s1&gt;</ept> CustomEventLogger <bpt i="2" x="2">&lt;s2&gt;</bpt>extends<ept i="2">&lt;/s2&gt;</ept> BuildAdapter <bpt i="3" x="3">&lt;s3&gt;</bpt>implements<ept i="3">&lt;/s3&gt;</ept> TaskExecutionListener {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>useTestNG {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083148Z" creationid="msdx" creationdate="20150428T083148Z">
        <seg>useTestNG {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>userGuide {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T015222Z" creationid="95" creationdate="20161211T015222Z">
        <seg>userGuide {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>userguide.css</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T035422Z" creationid="msdx" creationdate="20141030T035422Z">
        <seg>userguide.css</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>userguide.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141030T071142Z" creationid="msdx" creationdate="20141030T071142Z">
        <seg>userguide.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>username <bpt i="0" x="0">&lt;s0&gt;</bpt>'user'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150909T053440Z" creationid="haohang" creationdate="20150909T053440Z">
        <seg>username <bpt i="0" x="0">&lt;s0&gt;</bpt>'user'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>username <bpt i="1" x="1">&lt;s1&gt;</bpt>'user'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T133235Z" creationid="95" creationdate="20151006T133235Z">
        <seg>username <bpt i="1" x="1">&lt;s1&gt;</bpt>'user'<ept i="1">&lt;/s1&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>username <bpt i="2" x="2">&lt;s2&gt;</bpt>"username"<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151226T092054Z" creationid="95" creationdate="20151226T092054Z">
        <seg>username <bpt i="2" x="2">&lt;s2&gt;</bpt>"username"<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>username = <bpt i="0" x="0">&lt;s0&gt;</bpt>'myId'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T063505Z" creationid="haohang" creationdate="20150628T063505Z">
        <seg>username = <bpt i="0" x="0">&lt;s0&gt;</bpt>'myId'<ept i="0">&lt;/s0&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>username = <bpt i="3" x="3">&lt;s3&gt;</bpt>"Fred Flintstone"<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150510T143651Z" creationid="msdx" creationdate="20150510T143651Z">
        <seg>username = <bpt i="3" x="3">&lt;s3&gt;</bpt>"Fred Flintstone"<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>username = <bpt i="4" x="4">&lt;s4&gt;</bpt>"Fred Flintstone"<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150512T091239Z" creationid="msdx" creationdate="20150512T091239Z">
        <seg>username = <bpt i="3" x="3">&lt;s3&gt;</bpt>"Fred Flintstone"<ept i="3">&lt;/s3&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>username, password</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150628T065609Z" creationid="haohang" creationdate="20150628T065609Z">
        <seg>username, password</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>validate I have the correct credentials before starting the work for a release build.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T144724Z" creationid="msdx" creationdate="20141110T144311Z">
        <seg>验证在开始发布的工作前有一个正确的证书。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>verbose</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150513T053936Z" creationid="msdx" creationdate="20150513T053936Z">
        <seg>verbose</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>version</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T044443Z" creationid="msdx" creationdate="20141108T044443Z">
        <seg>version</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>version <bpt i="2" x="2">&lt;s2&gt;</bpt>'1.1'<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T032501Z" creationid="95" creationdate="20170416T032501Z">
        <seg>version <bpt i="2" x="2">&lt;s2&gt;</bpt>'1.1'<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>version <bpt i="4" x="4">&lt;s4&gt;</bpt>'2.3'<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T062607Z" creationid="95" creationdate="20170416T062607Z">
        <seg>version <bpt i="4" x="4">&lt;s4&gt;</bpt>'2.3'<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>version <bpt i="7" x="7">&lt;s7&gt;</bpt>'2'<ept i="7">&lt;/s7&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T062612Z" creationid="95" creationdate="20170416T062612Z">
        <seg>version <bpt i="7" x="7">&lt;s7&gt;</bpt>'2'<ept i="7">&lt;/s7&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>version = <bpt i="0" x="0">&lt;s0&gt;</bpt>'1.0-SNAPSHOT'<ept i="0">&lt;/s0&gt;</ept>
ext.isReleaseVersion = !version.endsWith(<bpt i="1" x="1">&lt;s1&gt;</bpt>"SNAPSHOT"<ept i="1">&lt;/s1&gt;</ept>)

signing {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160126T141410Z" creationid="95" creationdate="20160126T141410Z">
        <seg>version = <bpt i="0" x="0">&lt;s0&gt;</bpt>'1.0-SNAPSHOT'<ept i="0">&lt;/s0&gt;</ept>
ext.isReleaseVersion = !version.endsWith(<bpt i="1" x="1">&lt;s1&gt;</bpt>"SNAPSHOT"<ept i="1">&lt;/s1&gt;</ept>)

signing {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>version = <bpt i="2" x="2">&lt;s2&gt;</bpt>'1.0'<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T083741Z" creationid="haohang" creationdate="20160726T083741Z">
        <seg>version = <bpt i="2" x="2">&lt;s2&gt;</bpt>'1.0'<ept i="2">&lt;/s2&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>version = <bpt i="2" x="2">&lt;s2&gt;</bpt>'1.0'<ept i="2">&lt;/s2&gt;</ept>
}

project(<bpt i="3" x="3">&lt;s3&gt;</bpt>':api'<ept i="3">&lt;/s3&gt;</ept>) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T084512Z" creationid="haohang" creationdate="20160726T084512Z">
        <seg>version = <bpt i="2" x="2">&lt;s2&gt;</bpt>'1.0'<ept i="2">&lt;/s2&gt;</ept>
}

project(<bpt i="3" x="3">&lt;s3&gt;</bpt>':api'<ept i="3">&lt;/s3&gt;</ept>) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>version = <bpt i="2" x="2">&lt;s2&gt;</bpt>'1.0'<ept i="2">&lt;/s2&gt;</ept>
}

subprojects {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160722T091241Z" creationid="haohang" creationdate="20160722T091241Z">
        <seg>version = <bpt i="2" x="2">&lt;s2&gt;</bpt>'1.0'<ept i="2">&lt;/s2&gt;</ept>
}

subprojects {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>visual-studio</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104926Z" creationid="msdx" creationdate="20150428T104926Z">
        <seg>visual-studio</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>visualCpp(VisualCpp) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T091221Z" creationid="haohang" creationdate="20160408T091221Z">
        <seg>visualCpp(VisualCpp) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>war</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104757Z" creationid="msdx" creationdate="20150428T104757Z">
        <seg>war</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>war_plugin.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104800Z" creationid="msdx" creationdate="20150428T104800Z">
        <seg>war_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>war_plugin.html#N12FDE</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T132159Z" creationid="msdx" creationdate="20150509T132159Z">
        <seg>war_plugin.html#N12FDE</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>war_plugin.html#N12FED</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T132202Z" creationid="msdx" creationdate="20150509T132202Z">
        <seg>war_plugin.html#N12FED</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>war_plugin.html#N13033</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T132204Z" creationid="msdx" creationdate="20150509T132204Z">
        <seg>war_plugin.html#N13033</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>war_plugin.html#N1304D</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T132208Z" creationid="msdx" creationdate="20150509T132205Z">
        <seg>war_plugin.html#N1304D</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>war_plugin.html#N13079</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T132210Z" creationid="msdx" creationdate="20150509T132210Z">
        <seg>war_plugin.html#N13079</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>war_plugin.html#sec:customizing</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T132217Z" creationid="msdx" creationdate="20150509T132217Z">
        <seg>war_plugin.html#sec:customizing</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>war_plugin.html#sec:default_settings</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150509T132212Z" creationid="msdx" creationdate="20150509T132212Z">
        <seg>war_plugin.html#sec:default_settings</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>water/</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160522T125257Z" creationid="95" creationdate="20160522T125257Z">
        <seg>water/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>web</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170211T140603Z" creationid="95" creationdate="20170211T140603Z">
        <seg>web</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>webAppDir</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T092314Z" creationid="msdx" creationdate="20150503T092314Z">
        <seg>webAppDir</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>webAppDirName</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T092125Z" creationid="msdx" creationdate="20150503T092125Z">
        <seg>webAppDirName</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>webDist/</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160722T091202Z" creationid="haohang" creationdate="20160722T091202Z">
        <seg>webDist/</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>webInf { from <bpt i="13" x="13">&lt;s13&gt;</bpt>'src/additionalWebInf'<ept i="13">&lt;/s13&gt;</ept> } <bpt i="14" x="14">&lt;s14&gt;</bpt>// adds a file-set to the WEB-INF dir.<ept i="14">&lt;/s14&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T093821Z" creationid="msdx" creationdate="20150503T093821Z">
        <seg>webInf { from <bpt i="13" x="13">&lt;s13&gt;</bpt>'src/additionalWebInf'<ept i="13">&lt;/s13&gt;</ept> } <bpt i="14" x="14">&lt;s14&gt;</bpt>// adds a file-set to the WEB-INF dir.<ept i="14">&lt;/s14&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>webXml = file(<bpt i="18" x="18">&lt;s18&gt;</bpt>'src/someWeb.xml'<ept i="18">&lt;/s18&gt;</ept>) <bpt i="19" x="19">&lt;s19&gt;</bpt>// copies a file to WEB-INF/web.xml<ept i="19">&lt;/s19&gt;</ept>
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150503T093821Z" creationid="msdx" creationdate="20150503T093821Z">
        <seg>webXml = file(<bpt i="18" x="18">&lt;s18&gt;</bpt>'src/someWeb.xml'<ept i="18">&lt;/s18&gt;</ept>) <bpt i="19" x="19">&lt;s19&gt;</bpt>// copies a file to WEB-INF/web.xml<ept i="19">&lt;/s19&gt;</ept>
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>web_project_tutorial.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T161502Z" creationid="msdx" creationdate="20141105T161502Z">
        <seg>web_project_tutorial.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>web_project_tutorial.html#N10722</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163745Z" creationid="msdx" creationdate="20141109T163745Z">
        <seg>web_project_tutorial.html#N10722</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>web_project_tutorial.html#N10747</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163757Z" creationid="msdx" creationdate="20141109T163757Z">
        <seg>web_project_tutorial.html#N10747</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>web_project_tutorial.html#N10760</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T163810Z" creationid="msdx" creationdate="20141109T163810Z">
        <seg>web_project_tutorial.html#N10760</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>webdav</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160105T141834Z" creationid="95" creationdate="20160105T141834Z">
        <seg>webdav</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>whenMerged { classpath -&gt;</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T065954Z" creationid="haohang" creationdate="20150625T065954Z">
        <seg>whenMerged { classpath -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>whenMerged { module -&gt;</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T074612Z" creationid="haohang" creationdate="20150625T074612Z">
        <seg>whenMerged { module -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>windows-resources</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141209T074227Z" creationid="msdx" creationdate="20141209T074227Z">
        <seg>windows-resources</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>withXml { provider -&gt;</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150625T074624Z" creationid="haohang" creationdate="20150625T074624Z">
        <seg>withXml { provider -&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>withXml { provider -&gt; <bpt i="27" x="27">&lt;s27&gt;</bpt>// add a custom node to the XML<ept i="27">&lt;/s27&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150504T142902Z" creationid="msdx" creationdate="20150504T142902Z">
        <seg>withXml { provider -&gt; <bpt i="27" x="27">&lt;s27&gt;</bpt>// add a custom node to the XML<ept i="27">&lt;/s27&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>working_with_files.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T155950Z" creationid="msdx" creationdate="20141109T155950Z">
        <seg>working_with_files.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>working_with_files.html#archiveTasksNamingProperties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T155235Z" creationid="msdx" creationdate="20141113T155235Z">
        <seg>working_with_files.html#archiveTasksNamingProperties</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>working_with_files.html#sec:archive_contents</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T030401Z" creationid="msdx" creationdate="20150501T030401Z">
        <seg>working_with_files.html#sec:archive_contents</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>working_with_files.html#sec:archives</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T144403Z" creationid="msdx" creationdate="20150428T144403Z">
        <seg>working_with_files.html#sec:archives</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>working_with_files.html#sec:copying_files</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083442Z" creationid="msdx" creationdate="20150428T083442Z">
        <seg>working_with_files.html#sec:copying_files</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>working_with_files.html#sec:file_collections</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141113T122858Z" creationid="msdx" creationdate="20141113T122858Z">
        <seg>working_with_files.html#sec:file_collections</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>working_with_files.html#sec:file_trees</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T030400Z" creationid="msdx" creationdate="20150501T030400Z">
        <seg>working_with_files.html#sec:file_trees</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>working_with_files.html#sec:locating_files</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141112T145253Z" creationid="msdx" creationdate="20141112T145253Z">
        <seg>working_with_files.html#sec:locating_files</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>working_with_files.html#sec:specifying_multiple_files</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083418Z" creationid="msdx" creationdate="20150428T083418Z">
        <seg>working_with_files.html#sec:specifying_multiple_files</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>working_with_files.html#sec:sync_task</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150501T030402Z" creationid="msdx" creationdate="20150501T030402Z">
        <seg>working_with_files.html#sec:sync_task</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>wrapper</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104922Z" creationid="msdx" creationdate="20150428T104922Z">
        <seg>wrapper</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>wrapper_plugin.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T104927Z" creationid="msdx" creationdate="20150428T104927Z">
        <seg>wrapper_plugin.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>wrapper_plugin.html#N14AC8</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070046Z" creationid="95" creationdate="20170416T070046Z">
        <seg>wrapper_plugin.html#N14AC8</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>wrapper_plugin.html#N14AD6</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170416T070047Z" creationid="95" creationdate="20170416T070047Z">
        <seg>wrapper_plugin.html#N14AD6</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>writing_build_scripts.html</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141105T145254Z" creationid="msdx" creationdate="20141105T145254Z">
        <seg>writing_build_scripts.html</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>writing_build_scripts.html#N109CC</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T164830Z" creationid="msdx" creationdate="20141109T164830Z">
        <seg>writing_build_scripts.html#N109CC</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>writing_build_scripts.html#N10AD2</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T164849Z" creationid="msdx" creationdate="20141109T164849Z">
        <seg>writing_build_scripts.html#N10AD2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>writing_build_scripts.html#N10ADF</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T164854Z" creationid="msdx" creationdate="20141109T164854Z">
        <seg>writing_build_scripts.html#N10ADF</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>writing_build_scripts.html#N10B36</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T164858Z" creationid="msdx" creationdate="20141109T164858Z">
        <seg>writing_build_scripts.html#N10B36</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>writing_build_scripts.html#sec:extra_properties</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160530T144114Z" creationid="95" creationdate="20160530T144114Z">
        <seg>writing_build_scripts.html#sec:extra_properties</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>writing_build_scripts.html#sec:project_api</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T164840Z" creationid="msdx" creationdate="20141109T164840Z">
        <seg>writing_build_scripts.html#sec:project_api</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>x6<bpt i="2" x="2">&lt;s2&gt;</bpt>4<ept i="2">&lt;/s2&gt;</ept> {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160405T034025Z" creationid="haohang" creationdate="20160405T034025Z">
        <seg>x6<bpt i="2" x="2">&lt;s2&gt;</bpt>4<ept i="2">&lt;/s2&gt;</ept> {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>x86, x86_64</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T092150Z" creationid="haohang" creationdate="20160408T092150Z">
        <seg>x86, x86_64</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>x86, x86_64, ia-64</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T092152Z" creationid="haohang" creationdate="20160408T092152Z">
        <seg>x86, x86_64, ia-64</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>x8<bpt i="0" x="0">&lt;s0&gt;</bpt>6<ept i="0">&lt;/s0&gt;</ept> {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160405T034023Z" creationid="haohang" creationdate="20160405T034023Z">
        <seg>x8<bpt i="0" x="0">&lt;s0&gt;</bpt>6<ept i="0">&lt;/s0&gt;</ept> {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>xml.enabled false</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150506T132001Z" creationid="msdx" creationdate="20150506T132001Z">
        <seg>xml.enabled false</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141109T093721Z" creationid="msdx" creationdate="20141109T093721Z">
        <seg>}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>}
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T122321Z" creationid="msdx" creationdate="20141110T122321Z">
        <seg>}
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>}
}

<bpt i="2" x="2">&lt;s2&gt;</bpt>// Can use a rule instead to enable (or disable) dynamic resolve mode for all repositories<ept i="2">&lt;/s2&gt;</ept>
repositories.withType(IvyArtifactRepository) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T091456Z" creationid="95" creationdate="20151115T091456Z">
        <seg>}
}

<bpt i="2" x="2">&lt;s2&gt;</bpt>// Can use a rule instead to enable (or disable) dynamic resolve mode for all repositories<ept i="2">&lt;/s2&gt;</ept>
repositories.withType(IvyArtifactRepository) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>}
}

<bpt i="2" x="2">&lt;s2&gt;</bpt>// Iterate over the source sets<ept i="2">&lt;/s2&gt;</ept>
sourceSets.all {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T083249Z" creationid="msdx" creationdate="20150428T083249Z">
        <seg>}
}

<bpt i="2" x="2">&lt;s2&gt;</bpt>// Iterate over the source sets<ept i="2">&lt;/s2&gt;</ept>
sourceSets.all {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>}
}

<bpt i="2" x="2">&lt;s2&gt;</bpt>class<ept i="2">&lt;/s2&gt;</ept> DocumentationPlugin <bpt i="3" x="3">&lt;s3&gt;</bpt>implements<ept i="3">&lt;/s3&gt;</ept> Plugin&lt;Project&gt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T015239Z" creationid="95" creationdate="20161211T015239Z">
        <seg>}
}

<bpt i="2" x="2">&lt;s2&gt;</bpt>class<ept i="2">&lt;/s2&gt;</ept> DocumentationPlugin <bpt i="3" x="3">&lt;s3&gt;</bpt>implements<ept i="3">&lt;/s3&gt;</ept> Plugin&lt;Project&gt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>}
}

<bpt i="6" x="6">&lt;s6&gt;</bpt>// Inject special case configuration into a particular project<ept i="6">&lt;/s6&gt;</ept>
project(<bpt i="7" x="7">&lt;s7&gt;</bpt>':child2'<ept i="7">&lt;/s7&gt;</ept>) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T051039Z" creationid="95" creationdate="20161211T051039Z">
        <seg>}
}

<bpt i="6" x="6">&lt;s6&gt;</bpt>// Inject special case configuration into a particular project<ept i="6">&lt;/s6&gt;</ept>
project(<bpt i="7" x="7">&lt;s7&gt;</bpt>':child2'<ept i="7">&lt;/s7&gt;</ept>) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>}
}

<bpt i="6" x="6">&lt;s6&gt;</bpt>class<ept i="6">&lt;/s6&gt;</ept> Book {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T015246Z" creationid="95" creationdate="20161211T015246Z">
        <seg>}
}

<bpt i="6" x="6">&lt;s6&gt;</bpt>class<ept i="6">&lt;/s6&gt;</ept> Book {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>}
}

<bpt i="8" x="8">&lt;s8&gt;</bpt>class<ept i="8">&lt;/s8&gt;</ept> GreetingPluginExtension {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T130738Z" creationid="95" creationdate="20160820T130738Z">
        <seg>}
}

<bpt i="8" x="8">&lt;s8&gt;</bpt>class<ept i="8">&lt;/s8&gt;</ept> GreetingPluginExtension {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>}
}

applicationDistribution.from(createDocs) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150703T100429Z" creationid="haohang" creationdate="20150703T100429Z">
        <seg>}
}

applicationDistribution.from(createDocs) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>}
}

def findDefaultVersionInCatalog(String group, String name) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151115T070655Z" creationid="95" creationdate="20151115T070655Z">
        <seg>}
}

def findDefaultVersionInCatalog(String group, String name) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>}
}

libraries {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160408T081117Z" creationid="haohang" creationdate="20160408T081117Z">
        <seg>}
}

libraries {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>}
}

println Fraction.ONE_FIFTH.multiply(<bpt i="4" x="4">&lt;s4&gt;</bpt>2<ept i="4">&lt;/s4&gt;</ept>)</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161215T144058Z" creationid="95" creationdate="20161215T144058Z">
        <seg>}
}

println Fraction.ONE_FIFTH.multiply(<bpt i="4" x="4">&lt;s4&gt;</bpt>2<ept i="4">&lt;/s4&gt;</ept>)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>}
}

project(<bpt i="2" x="2">&lt;s2&gt;</bpt>":exe"<ept i="2">&lt;/s2&gt;</ept>) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160325T033436Z" creationid="haohang" creationdate="20160325T033436Z">
        <seg>}
}

project(<bpt i="2" x="2">&lt;s2&gt;</bpt>":exe"<ept i="2">&lt;/s2&gt;</ept>) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>}
}

project(<bpt i="3" x="3">&lt;s3&gt;</bpt>'projectB'<ept i="3">&lt;/s3&gt;</ept>) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141110T122314Z" creationid="msdx" creationdate="20141110T122314Z">
        <seg>}
}

project(<bpt i="3" x="3">&lt;s3&gt;</bpt>'projectB'<ept i="3">&lt;/s3&gt;</ept>) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>}
}

project(<bpt i="4" x="4">&lt;s4&gt;</bpt>':api'<ept i="4">&lt;/s4&gt;</ept>) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T083843Z" creationid="haohang" creationdate="20160726T083812Z">
        <seg>}
}

project(<bpt i="4" x="4">&lt;s4&gt;</bpt>':api'<ept i="4">&lt;/s4&gt;</ept>) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>}
}

project(<bpt i="5" x="5">&lt;s5&gt;</bpt>":project1"<ept i="5">&lt;/s5&gt;</ept>) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T145202Z" creationid="95" creationdate="20170330T145202Z">
        <seg>}
}

project(<bpt i="5" x="5">&lt;s5&gt;</bpt>":project1"<ept i="5">&lt;/s5&gt;</ept>) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>}
}

project(<bpt i="6" x="6">&lt;s6&gt;</bpt>':services:personService'<ept i="6">&lt;/s6&gt;</ept>) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T083850Z" creationid="haohang" creationdate="20160726T083850Z">
        <seg>}
}

project(<bpt i="6" x="6">&lt;s6&gt;</bpt>':services:personService'<ept i="6">&lt;/s6&gt;</ept>) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>}
}

project(<bpt i="7" x="7">&lt;s7&gt;</bpt>':services:personService'<ept i="7">&lt;/s7&gt;</ept>) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160726T084537Z" creationid="haohang" creationdate="20160726T084537Z">
        <seg>}
}

project(<bpt i="7" x="7">&lt;s7&gt;</bpt>':services:personService'<ept i="7">&lt;/s7&gt;</ept>) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>}
}

project(<bpt i="9" x="9">&lt;s9&gt;</bpt>":project2"<ept i="9">&lt;/s9&gt;</ept>) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T145208Z" creationid="95" creationdate="20170330T145208Z">
        <seg>}
}

project(<bpt i="9" x="9">&lt;s9&gt;</bpt>":project2"<ept i="9">&lt;/s9&gt;</ept>) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>}
}

subprojects {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20170330T145232Z" creationid="95" creationdate="20170330T145232Z">
        <seg>}
}

subprojects {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>}
}

task books &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T015224Z" creationid="95" creationdate="20161211T015224Z">
        <seg>}
}

task books &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>}
}

task compile &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150801T094457Z" creationid="haohang" creationdate="20150801T094457Z">
        <seg>}
}

task compile &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>}
}

task encode &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161212T154700Z" creationid="95" creationdate="20161212T154700Z">
        <seg>}
}

task encode &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>}
}

task explodedDist(dependsOn: assemble) &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20160722T091247Z" creationid="haohang" creationdate="20160722T091247Z">
        <seg>}
}

task explodedDist(dependsOn: assemble) &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>}
}

task ftp &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161212T155103Z" creationid="95" creationdate="20161212T155103Z">
        <seg>}
}

task ftp &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>}
}

task greet(type: GreetingToFileTask) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160820T132304Z" creationid="95" creationdate="20160820T132304Z">
        <seg>}
}

task greet(type: GreetingToFileTask) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>}
}

task greeting(type: org.gradle.GreetingTask) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160815T145929Z" creationid="95" creationdate="20160815T145929Z">
        <seg>}
}

task greeting(type: org.gradle.GreetingTask) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>}
}

task groupPing {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141111T065649Z" creationid="msdx" creationdate="20141111T065649Z">
        <seg>}
}

task groupPing {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>}
}

task listBirds &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151129T041822Z" creationid="95" creationdate="20151129T041822Z">
        <seg>}
}

task listBirds &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>}
}

task printProperties &lt;&lt; {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20141108T050730Z" creationid="msdx" creationdate="20141108T050730Z">
        <seg>}
}

task printProperties &lt;&lt; {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>}
}

task testReport(type: TestReport) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="msdx" changedate="20150428T142809Z" creationid="msdx" creationdate="20150428T142809Z">
        <seg>}
}

task testReport(type: TestReport) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>}
}

uploadArchives {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151226T092032Z" creationid="95" creationdate="20151226T092032Z">
        <seg>}
}

uploadArchives {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>}
}
apply plugin: <bpt i="4" x="4">&lt;s4&gt;</bpt>'greeting'<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161211T014601Z" creationid="95" creationdate="20161211T014601Z">
        <seg>}
}
apply plugin: <bpt i="4" x="4">&lt;s4&gt;</bpt>'greeting'<ept i="4">&lt;/s4&gt;</ept></seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>}
}
configurations.compile {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150722T075937Z" creationid="haohang" creationdate="20150722T075937Z">
        <seg>}
}
configurations.compile {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>}
}
repositories {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T133451Z" creationid="95" creationdate="20151006T133451Z">
        <seg>}
}
repositories {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>}
}
repositories.localRepository {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20151006T133504Z" creationid="95" creationdate="20151006T133504Z">
        <seg>}
}
repositories.localRepository {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>}
}
task fooJar(type: Jar) {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="haohang" changedate="20150526T064444Z" creationid="haohang" creationdate="20150526T064444Z">
        <seg>}
}
task fooJar(type: Jar) {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>} <bpt i="2" x="2">&lt;s2&gt;</bpt>else<ept i="2">&lt;/s2&gt;</ept> {</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160324T152625Z" creationid="95" creationdate="20160324T152625Z">
        <seg>} <bpt i="2" x="2">&lt;s2&gt;</bpt>else<ept i="2">&lt;/s2&gt;</ept> {</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>}.writeTo(<bpt i="4" x="4">&lt;s4&gt;</bpt>"$buildDir/newpom.xml"<ept i="4">&lt;/s4&gt;</ept>)
}</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160104T152820Z" creationid="95" creationdate="20160104T152820Z">
        <seg>}.writeTo(<bpt i="4" x="4">&lt;s4&gt;</bpt>"$buildDir/newpom.xml"<ept i="4">&lt;/s4&gt;</ept>)
}</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>“Build Outcome”</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161228T134506Z" creationid="95" creationdate="20161228T134506Z">
        <seg>“构建结果”</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>“Build”</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161219T151520Z" creationid="95" creationdate="20161219T151520Z">
        <seg>“构建”</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>“Compared Build Outcome”</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161228T141639Z" creationid="95" creationdate="20161228T141639Z">
        <seg>“比较构建结果”</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>“Host Build”</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161228T135324Z" creationid="95" creationdate="20161228T135324Z">
        <seg>“主机构建”</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>“Source Build”</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161228T135229Z" creationid="95" creationdate="20161228T134708Z">
        <seg>“源构建”</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>“Target Build”</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161228T135203Z" creationid="95" creationdate="20161228T135203Z">
        <seg>“目标构建”</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>“Uncompared Build Outcome”</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161228T143612Z" creationid="95" creationdate="20161228T143612Z">
        <seg>“未比较的构建结果”</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="EN-US">
        <seg>“Unknown Build Outcome”</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20161228T144323Z" creationid="95" creationdate="20161228T144135Z">
        <seg>“未知的构建结果”</seg>
      </tuv>
    </tu>
<!-- Alternative translations -->
    <tu>
      <prop type="file">build_lifecycle.html</prop>
      <prop type="prev">../dsl/org.gradle.api.invocation.Gradle.html</prop>
      <prop type="next">55.6.2. Task creation</prop>
      <tuv xml:lang="EN-US">
        <seg>You can also add a <bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>ProjectEvaluationListener<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept> to the <bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>Gradle<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept> to receive these events.</seg>
      </tuv>
      <tuv xml:lang="ZH-CN" changeid="95" changedate="20160521T134029Z" creationid="95" creationdate="20160521T132451Z">
        <seg>你也可以将一个<bpt i="0" x="0">&lt;a0&gt;</bpt><bpt i="1" x="1">&lt;c1&gt;</bpt>ProjectEvaluationListener<ept i="1">&lt;/c1&gt;</ept><ept i="0">&lt;/a0&gt;</ept>添加到<bpt i="2" x="2">&lt;a2&gt;</bpt><bpt i="3" x="3">&lt;c3&gt;</bpt>Gradle<ept i="3">&lt;/c3&gt;</ept><ept i="2">&lt;/a2&gt;</ept>中，来接收这些事件。</seg>
      </tuv>
    </tu>
  </body>
</tmx>
